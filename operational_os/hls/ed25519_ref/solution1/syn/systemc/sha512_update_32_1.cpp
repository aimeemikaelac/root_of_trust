// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha512_update_32_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha512_update_32_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha512_update_32_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state1 = "1";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state2 = "10";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state3 = "100";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state4 = "1000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state5 = "10000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state6 = "100000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<21> sha512_update_32_1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_3 = "11";
const sc_lv<1> sha512_update_32_1::ap_const_lv1_1 = "1";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_6 = "110";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_9 = "1001";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_A = "1010";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_5 = "101";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_B = "1011";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_E = "1110";
const sc_lv<1> sha512_update_32_1::ap_const_lv1_0 = "0";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_1 = "1";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_2 = "10";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_4 = "100";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_7 = "111";
const sc_lv<64> sha512_update_32_1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_8 = "1000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_C = "1100";
const sc_lv<8> sha512_update_32_1::ap_const_lv8_0 = "00000000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_F = "1111";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_D = "1101";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_11 = "10001";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_12 = "10010";
const sc_lv<64> sha512_update_32_1::ap_const_lv64_20 = "100000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_13 = "10011";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_10 = "10000";
const sc_lv<64> sha512_update_32_1::ap_const_lv64_1 = "1";
const sc_lv<8> sha512_update_32_1::ap_const_lv8_1 = "1";
const sc_lv<64> sha512_update_32_1::ap_const_lv64_400 = "10000000000";
const sc_lv<64> sha512_update_32_1::ap_const_lv64_80 = "10000000";
const sc_lv<64> sha512_update_32_1::ap_const_lv64_FFFFFFFFFFFFFF80 = "1111111111111111111111111111111111111111111111111111111110000000";
const sc_lv<8> sha512_update_32_1::ap_const_lv8_80 = "10000000";
const sc_lv<57> sha512_update_32_1::ap_const_lv57_0 = "000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_3F = "111111";
const sc_lv<32> sha512_update_32_1::ap_const_lv32_14 = "10100";
const bool sha512_update_32_1::ap_const_boolean_1 = true;

sha512_update_32_1::sha512_update_32_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_buf_U = new sha512_update_32_hbi("temp_buf_U");
    temp_buf_U->clk(ap_clk);
    temp_buf_U->reset(ap_rst);
    temp_buf_U->address0(temp_buf_address0);
    temp_buf_U->ce0(temp_buf_ce0);
    temp_buf_U->we0(temp_buf_we0);
    temp_buf_U->d0(md_buf_q0);
    temp_buf_U->q0(temp_buf_q0);
    temp_buf_U->address1(grp_sha512_compress_128_fu_363_buf_r_address1);
    temp_buf_U->ce1(temp_buf_ce1);
    temp_buf_U->q1(temp_buf_q1);
    grp_sha512_compress_32_fu_351 = new sha512_compress_32("grp_sha512_compress_32_fu_351");
    grp_sha512_compress_32_fu_351->ap_clk(ap_clk);
    grp_sha512_compress_32_fu_351->ap_rst(ap_rst);
    grp_sha512_compress_32_fu_351->ap_start(grp_sha512_compress_32_fu_351_ap_start);
    grp_sha512_compress_32_fu_351->ap_done(grp_sha512_compress_32_fu_351_ap_done);
    grp_sha512_compress_32_fu_351->ap_idle(grp_sha512_compress_32_fu_351_ap_idle);
    grp_sha512_compress_32_fu_351->ap_ready(grp_sha512_compress_32_fu_351_ap_ready);
    grp_sha512_compress_32_fu_351->md_state_address0(grp_sha512_compress_32_fu_351_md_state_address0);
    grp_sha512_compress_32_fu_351->md_state_ce0(grp_sha512_compress_32_fu_351_md_state_ce0);
    grp_sha512_compress_32_fu_351->md_state_we0(grp_sha512_compress_32_fu_351_md_state_we0);
    grp_sha512_compress_32_fu_351->md_state_d0(grp_sha512_compress_32_fu_351_md_state_d0);
    grp_sha512_compress_32_fu_351->md_state_q0(md_state_q0);
    grp_sha512_compress_32_fu_351->buf_r_address0(grp_sha512_compress_32_fu_351_buf_r_address0);
    grp_sha512_compress_32_fu_351->buf_r_ce0(grp_sha512_compress_32_fu_351_buf_r_ce0);
    grp_sha512_compress_32_fu_351->buf_r_q0(in_r_q0);
    grp_sha512_compress_32_fu_351->sum(reg_212);
    grp_sha512_compress_128_fu_363 = new sha512_compress_128("grp_sha512_compress_128_fu_363");
    grp_sha512_compress_128_fu_363->ap_clk(ap_clk);
    grp_sha512_compress_128_fu_363->ap_rst(ap_rst);
    grp_sha512_compress_128_fu_363->ap_start(grp_sha512_compress_128_fu_363_ap_start);
    grp_sha512_compress_128_fu_363->ap_done(grp_sha512_compress_128_fu_363_ap_done);
    grp_sha512_compress_128_fu_363->ap_idle(grp_sha512_compress_128_fu_363_ap_idle);
    grp_sha512_compress_128_fu_363->ap_ready(grp_sha512_compress_128_fu_363_ap_ready);
    grp_sha512_compress_128_fu_363->md_state_address0(grp_sha512_compress_128_fu_363_md_state_address0);
    grp_sha512_compress_128_fu_363->md_state_ce0(grp_sha512_compress_128_fu_363_md_state_ce0);
    grp_sha512_compress_128_fu_363->md_state_we0(grp_sha512_compress_128_fu_363_md_state_we0);
    grp_sha512_compress_128_fu_363->md_state_d0(grp_sha512_compress_128_fu_363_md_state_d0);
    grp_sha512_compress_128_fu_363->md_state_q0(md_state_q0);
    grp_sha512_compress_128_fu_363->buf_r_address0(grp_sha512_compress_128_fu_363_buf_r_address0);
    grp_sha512_compress_128_fu_363->buf_r_ce0(grp_sha512_compress_128_fu_363_buf_r_ce0);
    grp_sha512_compress_128_fu_363->buf_r_q0(temp_buf_q0);
    grp_sha512_compress_128_fu_363->buf_r_address1(grp_sha512_compress_128_fu_363_buf_r_address1);
    grp_sha512_compress_128_fu_363->buf_r_ce1(grp_sha512_compress_128_fu_363_buf_r_ce1);
    grp_sha512_compress_128_fu_363->buf_r_q1(temp_buf_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( reg_212 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( reg_221 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_grp_fu_230_p0);
    sensitive << ( reg_212 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( in_offset_cast1_reg_526 );
    sensitive << ( inlen_load_reg_569 );
    sensitive << ( md_length_load_reg_578 );
    sensitive << ( n_reg_610 );
    sensitive << ( tmp_13_reg_622 );
    sensitive << ( tmp_15_reg_630 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( temp_index_reg_190 );
    sensitive << ( temp_index_1_reg_201 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( p_01_idx_fu_84 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_230_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( in_offset_cast_reg_564 );
    sensitive << ( md_curlen_load_reg_584 );
    sensitive << ( tmp_12_reg_617 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_reg_179 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( p_01_idx_fu_84 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_14_fu_469_p1 );

    SC_METHOD(thread_grp_fu_230_p2);
    sensitive << ( grp_fu_230_p0 );
    sensitive << ( grp_fu_230_p1 );

    SC_METHOD(thread_grp_fu_304_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( inlen_load_reg_569 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_304_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( md_curlen_load_reg_584 );
    sensitive << ( n_reg_610 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_304_p2);
    sensitive << ( grp_fu_304_p0 );
    sensitive << ( grp_fu_304_p1 );

    SC_METHOD(thread_grp_fu_330_p0);
    sensitive << ( reg_212 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( md_curlen_load_reg_584 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_179 );
    sensitive << ( temp_index_reg_190 );
    sensitive << ( temp_index_1_reg_201 );
    sensitive << ( inlen_fu_88 );

    SC_METHOD(thread_grp_fu_330_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( n_reg_610 );

    SC_METHOD(thread_grp_fu_330_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_330_p0 );
    sensitive << ( grp_fu_330_p1 );

    SC_METHOD(thread_grp_sha512_compress_128_fu_363_ap_start);
    sensitive << ( ap_reg_grp_sha512_compress_128_fu_363_ap_start );

    SC_METHOD(thread_grp_sha512_compress_32_fu_351_ap_start);
    sensitive << ( ap_reg_grp_sha512_compress_32_fu_351_ap_start );

    SC_METHOD(thread_icmp_fu_335_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_fu_436_p4 );

    SC_METHOD(thread_in_offset_cast1_fu_398_p1);
    sensitive << ( in_offset );

    SC_METHOD(thread_in_offset_cast_fu_402_p1);
    sensitive << ( in_offset );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sha512_compress_32_fu_351_buf_r_address0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( sum2_cast_fu_474_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sha512_compress_32_fu_351_buf_r_ce0 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_md_buf_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_9_fu_489_p1 );
    sensitive << ( tmp_11_reg_660 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_5_cast_fu_479_p1 );

    SC_METHOD(thread_md_buf_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_md_buf_d0);
    sensitive << ( in_r_q0 );
    sensitive << ( temp_buf_q0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_md_buf_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_md_state_address0);
    sensitive << ( grp_sha512_compress_32_fu_351_md_state_address0 );
    sensitive << ( grp_sha512_compress_128_fu_363_md_state_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_md_state_ce0);
    sensitive << ( grp_sha512_compress_32_fu_351_md_state_ce0 );
    sensitive << ( grp_sha512_compress_128_fu_363_md_state_ce0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_md_state_d0);
    sensitive << ( grp_sha512_compress_32_fu_351_md_state_d0 );
    sensitive << ( grp_sha512_compress_128_fu_363_md_state_d0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_md_state_we0);
    sensitive << ( grp_sha512_compress_32_fu_351_md_state_we0 );
    sensitive << ( grp_sha512_compress_128_fu_363_md_state_we0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_n_fu_451_p3);
    sensitive << ( grp_fu_304_p2 );
    sensitive << ( inlen_load_reg_569 );
    sensitive << ( tmp_7_fu_340_p2 );

    SC_METHOD(thread_or_cond_fu_446_p2);
    sensitive << ( tmp_2_reg_596 );
    sensitive << ( icmp_fu_335_p2 );

    SC_METHOD(thread_sum2_cast_fu_474_p0);
    sensitive << ( grp_fu_230_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sum2_cast_fu_474_p1);
    sensitive << ( sum2_cast_fu_474_p0 );

    SC_METHOD(thread_temp_buf_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_9_reg_647 );
    sensitive << ( tmp_11_fu_494_p1 );
    sensitive << ( grp_sha512_compress_128_fu_363_buf_r_address0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_temp_buf_ce0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_sha512_compress_128_fu_363_buf_r_ce0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_temp_buf_ce1);
    sensitive << ( grp_sha512_compress_128_fu_363_buf_r_ce1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_temp_buf_we0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp_11_fu_494_p1);
    sensitive << ( temp_index_1_reg_201 );

    SC_METHOD(thread_tmp_12_fu_458_p1);
    sensitive << ( i_reg_179 );

    SC_METHOD(thread_tmp_13_fu_462_p1);
    sensitive << ( i_reg_179 );

    SC_METHOD(thread_tmp_14_fu_469_p1);
    sensitive << ( p_01_idx_fu_84 );

    SC_METHOD(thread_tmp_15_fu_466_p1);
    sensitive << ( md_curlen_load_reg_584 );

    SC_METHOD(thread_tmp_3_fu_436_p4);
    sensitive << ( inlen_load_reg_569 );

    SC_METHOD(thread_tmp_5_cast_fu_479_p0);
    sensitive << ( grp_fu_230_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp_5_cast_fu_479_p1);
    sensitive << ( tmp_5_cast_fu_479_p0 );

    SC_METHOD(thread_tmp_7_fu_340_p2);
    sensitive << ( grp_fu_304_p2 );
    sensitive << ( inlen_load_reg_569 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_9_fu_489_p1);
    sensitive << ( temp_index_reg_190 );

    SC_METHOD(thread_tmp_fu_324_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( md_curlen_read );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( or_cond_fu_446_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_fu_324_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_330_p2 );
    sensitive << ( grp_sha512_compress_32_fu_351_ap_done );
    sensitive << ( grp_sha512_compress_128_fu_363_ap_done );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    ap_CS_fsm = "000000000000000000001";
    ap_reg_grp_sha512_compress_32_fu_351_ap_start = SC_LOGIC_0;
    ap_reg_grp_sha512_compress_128_fu_363_ap_start = SC_LOGIC_0;
    ap_return_0_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    ap_return_1_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha512_update_32_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, md_length_read, "(port)md_length_read");
    sc_trace(mVcdFile, md_state_address0, "(port)md_state_address0");
    sc_trace(mVcdFile, md_state_ce0, "(port)md_state_ce0");
    sc_trace(mVcdFile, md_state_we0, "(port)md_state_we0");
    sc_trace(mVcdFile, md_state_d0, "(port)md_state_d0");
    sc_trace(mVcdFile, md_state_q0, "(port)md_state_q0");
    sc_trace(mVcdFile, md_curlen_read, "(port)md_curlen_read");
    sc_trace(mVcdFile, md_buf_address0, "(port)md_buf_address0");
    sc_trace(mVcdFile, md_buf_ce0, "(port)md_buf_ce0");
    sc_trace(mVcdFile, md_buf_we0, "(port)md_buf_we0");
    sc_trace(mVcdFile, md_buf_d0, "(port)md_buf_d0");
    sc_trace(mVcdFile, md_buf_q0, "(port)md_buf_q0");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, in_offset, "(port)in_offset");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_230_p2, "grp_fu_230_p2");
    sc_trace(mVcdFile, reg_212, "reg_212");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, or_cond_fu_446_p2, "or_cond_fu_446_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, reg_221, "reg_221");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, temp_index_2_reg_256, "temp_index_2_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, temp_index_3_reg_259, "temp_index_3_reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_304_p2, "grp_fu_304_p2");
    sc_trace(mVcdFile, inlen_2_reg_296, "inlen_2_reg_296");
    sc_trace(mVcdFile, in_offset_cast1_fu_398_p1, "in_offset_cast1_fu_398_p1");
    sc_trace(mVcdFile, in_offset_cast1_reg_526, "in_offset_cast1_reg_526");
    sc_trace(mVcdFile, in_offset_cast_fu_402_p1, "in_offset_cast_fu_402_p1");
    sc_trace(mVcdFile, in_offset_cast_reg_564, "in_offset_cast_reg_564");
    sc_trace(mVcdFile, tmp_fu_324_p2, "tmp_fu_324_p2");
    sc_trace(mVcdFile, inlen_load_reg_569, "inlen_load_reg_569");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, md_length_load_reg_578, "md_length_load_reg_578");
    sc_trace(mVcdFile, md_curlen_load_reg_584, "md_curlen_load_reg_584");
    sc_trace(mVcdFile, grp_fu_330_p2, "grp_fu_330_p2");
    sc_trace(mVcdFile, tmp_2_reg_596, "tmp_2_reg_596");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, or_cond_reg_601, "or_cond_reg_601");
    sc_trace(mVcdFile, n_fu_451_p3, "n_fu_451_p3");
    sc_trace(mVcdFile, n_reg_610, "n_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_12_fu_458_p1, "tmp_12_fu_458_p1");
    sc_trace(mVcdFile, tmp_12_reg_617, "tmp_12_reg_617");
    sc_trace(mVcdFile, tmp_13_fu_462_p1, "tmp_13_fu_462_p1");
    sc_trace(mVcdFile, tmp_13_reg_622, "tmp_13_reg_622");
    sc_trace(mVcdFile, tmp_15_fu_466_p1, "tmp_15_fu_466_p1");
    sc_trace(mVcdFile, tmp_15_reg_630, "tmp_15_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_s_reg_640, "tmp_s_reg_640");
    sc_trace(mVcdFile, tmp_9_fu_489_p1, "tmp_9_fu_489_p1");
    sc_trace(mVcdFile, tmp_9_reg_647, "tmp_9_reg_647");
    sc_trace(mVcdFile, tmp_11_fu_494_p1, "tmp_11_fu_494_p1");
    sc_trace(mVcdFile, tmp_11_reg_660, "tmp_11_reg_660");
    sc_trace(mVcdFile, temp_buf_address0, "temp_buf_address0");
    sc_trace(mVcdFile, temp_buf_ce0, "temp_buf_ce0");
    sc_trace(mVcdFile, temp_buf_we0, "temp_buf_we0");
    sc_trace(mVcdFile, temp_buf_q0, "temp_buf_q0");
    sc_trace(mVcdFile, temp_buf_ce1, "temp_buf_ce1");
    sc_trace(mVcdFile, temp_buf_q1, "temp_buf_q1");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_ap_start, "grp_sha512_compress_32_fu_351_ap_start");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_ap_done, "grp_sha512_compress_32_fu_351_ap_done");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_ap_idle, "grp_sha512_compress_32_fu_351_ap_idle");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_ap_ready, "grp_sha512_compress_32_fu_351_ap_ready");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_md_state_address0, "grp_sha512_compress_32_fu_351_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_md_state_ce0, "grp_sha512_compress_32_fu_351_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_md_state_we0, "grp_sha512_compress_32_fu_351_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_md_state_d0, "grp_sha512_compress_32_fu_351_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_buf_r_address0, "grp_sha512_compress_32_fu_351_buf_r_address0");
    sc_trace(mVcdFile, grp_sha512_compress_32_fu_351_buf_r_ce0, "grp_sha512_compress_32_fu_351_buf_r_ce0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_ap_start, "grp_sha512_compress_128_fu_363_ap_start");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_ap_done, "grp_sha512_compress_128_fu_363_ap_done");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_ap_idle, "grp_sha512_compress_128_fu_363_ap_idle");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_ap_ready, "grp_sha512_compress_128_fu_363_ap_ready");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_md_state_address0, "grp_sha512_compress_128_fu_363_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_md_state_ce0, "grp_sha512_compress_128_fu_363_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_md_state_we0, "grp_sha512_compress_128_fu_363_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_md_state_d0, "grp_sha512_compress_128_fu_363_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_buf_r_address0, "grp_sha512_compress_128_fu_363_buf_r_address0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_buf_r_ce0, "grp_sha512_compress_128_fu_363_buf_r_ce0");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_buf_r_address1, "grp_sha512_compress_128_fu_363_buf_r_address1");
    sc_trace(mVcdFile, grp_sha512_compress_128_fu_363_buf_r_ce1, "grp_sha512_compress_128_fu_363_buf_r_ce1");
    sc_trace(mVcdFile, i_reg_179, "i_reg_179");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, temp_index_reg_190, "temp_index_reg_190");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, temp_index_1_reg_201, "temp_index_1_reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_reg_grp_sha512_compress_32_fu_351_ap_start, "ap_reg_grp_sha512_compress_32_fu_351_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_reg_grp_sha512_compress_128_fu_363_ap_start, "ap_reg_grp_sha512_compress_128_fu_363_ap_start");
    sc_trace(mVcdFile, sum2_cast_fu_474_p1, "sum2_cast_fu_474_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_479_p1, "tmp_5_cast_fu_479_p1");
    sc_trace(mVcdFile, p_01_idx_fu_84, "p_01_idx_fu_84");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, inlen_fu_88, "inlen_fu_88");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, md_length_fu_92, "md_length_fu_92");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, md_curlen_fu_96, "md_curlen_fu_96");
    sc_trace(mVcdFile, grp_fu_230_p0, "grp_fu_230_p0");
    sc_trace(mVcdFile, grp_fu_230_p1, "grp_fu_230_p1");
    sc_trace(mVcdFile, tmp_14_fu_469_p1, "tmp_14_fu_469_p1");
    sc_trace(mVcdFile, grp_fu_304_p0, "grp_fu_304_p0");
    sc_trace(mVcdFile, grp_fu_304_p1, "grp_fu_304_p1");
    sc_trace(mVcdFile, grp_fu_330_p0, "grp_fu_330_p0");
    sc_trace(mVcdFile, grp_fu_330_p1, "grp_fu_330_p1");
    sc_trace(mVcdFile, tmp_3_fu_436_p4, "tmp_3_fu_436_p4");
    sc_trace(mVcdFile, icmp_fu_335_p2, "icmp_fu_335_p2");
    sc_trace(mVcdFile, tmp_7_fu_340_p2, "tmp_7_fu_340_p2");
    sc_trace(mVcdFile, sum2_cast_fu_474_p0, "sum2_cast_fu_474_p0");
    sc_trace(mVcdFile, tmp_5_cast_fu_479_p0, "tmp_5_cast_fu_479_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha512_update_32_1::~sha512_update_32_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_buf_U;
    delete grp_sha512_compress_32_fu_351;
    delete grp_sha512_compress_128_fu_363;
}

void sha512_update_32_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_compress_128_fu_363_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
            ap_reg_grp_sha512_compress_128_fu_363_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_compress_128_fu_363_ap_ready.read())) {
            ap_reg_grp_sha512_compress_128_fu_363_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_compress_32_fu_351_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
             esl_seteq<1,1,1>(or_cond_fu_446_p2.read(), ap_const_lv1_1))) {
            ap_reg_grp_sha512_compress_32_fu_351_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_compress_32_fu_351_ap_ready.read())) {
            ap_reg_grp_sha512_compress_32_fu_351_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv64_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            ap_return_0_preg = reg_212.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv64_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            ap_return_1_preg = reg_221.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_179 = reg_221.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_179 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        inlen_fu_88 = grp_fu_230_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
        inlen_fu_88 = inlen_2_reg_296.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_330_p2.read()))) {
        inlen_fu_88 = grp_fu_304_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        inlen_fu_88 = ap_const_lv64_20;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_330_p2.read()))) {
        md_curlen_fu_96 = reg_212.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(or_cond_fu_446_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read())))) {
        md_curlen_fu_96 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        md_curlen_fu_96 = md_curlen_read.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_601.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_640.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(grp_sha512_compress_32_fu_351_ap_done.read(), ap_const_logic_1)))) {
        md_length_fu_92 = grp_fu_230_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        md_length_fu_92 = md_length_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
        p_01_idx_fu_84 = reg_212.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_330_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        p_01_idx_fu_84 = grp_fu_230_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        p_01_idx_fu_84 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
        reg_212 = md_length_fu_92.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_324_p2.read()))) {
        reg_212 = md_length_read.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(or_cond_fu_446_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        reg_212 = grp_fu_230_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
        reg_221 = md_curlen_fu_96.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_324_p2.read()))) {
        reg_221 = md_curlen_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        reg_221 = grp_fu_230_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(grp_sha512_compress_128_fu_363_ap_done.read(), ap_const_logic_1))) {
        temp_index_1_reg_201 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        temp_index_1_reg_201 = temp_index_3_reg_259.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
        temp_index_reg_190 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        temp_index_reg_190 = temp_index_2_reg_256.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        in_offset_cast1_reg_526 = in_offset_cast1_fu_398_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
        in_offset_cast_reg_564 = in_offset_cast_fu_402_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        inlen_2_reg_296 = grp_fu_304_p2.read();
        tmp_s_reg_640 = grp_fu_330_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inlen_load_reg_569 = inlen_fu_88.read();
        md_curlen_load_reg_584 = md_curlen_fu_96.read();
        md_length_load_reg_578 = md_length_fu_92.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        n_reg_610 = n_fu_451_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        or_cond_reg_601 = or_cond_fu_446_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        temp_index_2_reg_256 =  (sc_lv<8>) (grp_fu_230_p2.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        temp_index_3_reg_259 =  (sc_lv<8>) (grp_fu_230_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_330_p2.read()))) {
        tmp_11_reg_660 = tmp_11_fu_494_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_12_reg_617 = tmp_12_fu_458_p1.read();
        tmp_13_reg_622 = tmp_13_fu_462_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_15_reg_630 = tmp_15_fu_466_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_2_reg_596 = grp_fu_330_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_330_p2.read()))) {
        tmp_9_reg_647 = tmp_9_fu_489_p1.read();
    }
}

void sha512_update_32_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha512_update_32_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha512_update_32_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha512_update_32_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sha512_update_32_1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sha512_update_32_1::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sha512_update_32_1::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void sha512_update_32_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void sha512_update_32_1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void sha512_update_32_1::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void sha512_update_32_1::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void sha512_update_32_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha512_update_32_1::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void sha512_update_32_1::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void sha512_update_32_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha512_update_32_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha512_update_32_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha512_update_32_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha512_update_32_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha512_update_32_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha512_update_32_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha512_update_32_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_ap_return_0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ap_return_0 = reg_212.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void sha512_update_32_1::thread_ap_return_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ap_return_1 = reg_221.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void sha512_update_32_1::thread_grp_fu_230_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_230_p0 = inlen_load_reg_569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_230_p0 = p_01_idx_fu_84.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        grp_fu_230_p0 = md_length_load_reg_578.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_230_p0 =  (sc_lv<64>) (temp_index_1_reg_201.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_230_p0 =  (sc_lv<64>) (temp_index_reg_190.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_230_p0 = n_reg_610.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_230_p0 =  (sc_lv<64>) (tmp_15_reg_630.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_230_p0 = reg_212.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_230_p0 =  (sc_lv<64>) (tmp_13_reg_622.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_230_p0 = ap_const_lv64_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_230_p0 = in_offset_cast1_reg_526.read();
    } else {
        grp_fu_230_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_grp_fu_230_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_230_p1 = ap_const_lv64_FFFFFFFFFFFFFF80;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_230_p1 = ap_const_lv64_80;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        grp_fu_230_p1 = ap_const_lv64_400;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_230_p1 =  (sc_lv<64>) (ap_const_lv8_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_230_p1 = md_curlen_load_reg_584.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_230_p1 =  (sc_lv<64>) (tmp_12_reg_617.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_230_p1 =  (sc_lv<64>) (tmp_14_fu_469_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_230_p1 =  (sc_lv<64>) (in_offset_cast_reg_564.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_230_p1 = i_reg_179.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_fu_230_p1 = p_01_idx_fu_84.read();
    } else {
        grp_fu_230_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_grp_fu_230_p2() {
    grp_fu_230_p2 = (!grp_fu_230_p0.read().is_01() || !grp_fu_230_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(grp_fu_230_p0.read()) + sc_biguint<64>(grp_fu_230_p1.read()));
}

void sha512_update_32_1::thread_grp_fu_304_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_304_p0 = inlen_load_reg_569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_304_p0 = ap_const_lv64_80;
    } else {
        grp_fu_304_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_grp_fu_304_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_304_p1 = n_reg_610.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_304_p1 = md_curlen_load_reg_584.read();
    } else {
        grp_fu_304_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_grp_fu_304_p2() {
    grp_fu_304_p2 = (!grp_fu_304_p0.read().is_01() || !grp_fu_304_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(grp_fu_304_p0.read()) - sc_biguint<64>(grp_fu_304_p1.read()));
}

void sha512_update_32_1::thread_grp_fu_330_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_330_p0 =  (sc_lv<64>) (temp_index_1_reg_201.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_330_p0 =  (sc_lv<64>) (temp_index_reg_190.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_330_p0 = reg_212.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_330_p0 = i_reg_179.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_330_p0 = md_curlen_load_reg_584.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_330_p0 = inlen_fu_88.read();
    } else {
        grp_fu_330_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_grp_fu_330_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_330_p1 =  (sc_lv<64>) (ap_const_lv8_80);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_330_p1 = ap_const_lv64_80;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_330_p1 = n_reg_610.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        grp_fu_330_p1 = ap_const_lv64_0;
    } else {
        grp_fu_330_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_grp_fu_330_p2() {
    grp_fu_330_p2 = (!grp_fu_330_p0.read().is_01() || !grp_fu_330_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_330_p0.read() == grp_fu_330_p1.read());
}

void sha512_update_32_1::thread_grp_sha512_compress_128_fu_363_ap_start() {
    grp_sha512_compress_128_fu_363_ap_start = ap_reg_grp_sha512_compress_128_fu_363_ap_start.read();
}

void sha512_update_32_1::thread_grp_sha512_compress_32_fu_351_ap_start() {
    grp_sha512_compress_32_fu_351_ap_start = ap_reg_grp_sha512_compress_32_fu_351_ap_start.read();
}

void sha512_update_32_1::thread_icmp_fu_335_p2() {
    icmp_fu_335_p2 = (!tmp_3_fu_436_p4.read().is_01() || !ap_const_lv57_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_436_p4.read() != ap_const_lv57_0);
}

void sha512_update_32_1::thread_in_offset_cast1_fu_398_p1() {
    in_offset_cast1_fu_398_p1 = esl_zext<64,7>(in_offset.read());
}

void sha512_update_32_1::thread_in_offset_cast_fu_402_p1() {
    in_offset_cast_fu_402_p1 = esl_zext<8,7>(in_offset.read());
}

void sha512_update_32_1::thread_in_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in_r_address0 =  (sc_lv<6>) (sum2_cast_fu_474_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        in_r_address0 = grp_sha512_compress_32_fu_351_buf_r_address0.read();
    } else {
        in_r_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void sha512_update_32_1::thread_in_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in_r_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        in_r_ce0 = grp_sha512_compress_32_fu_351_buf_r_ce0.read();
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_md_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        md_buf_address0 =  (sc_lv<7>) (tmp_11_reg_660.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        md_buf_address0 =  (sc_lv<7>) (tmp_9_fu_489_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        md_buf_address0 =  (sc_lv<7>) (tmp_5_cast_fu_479_p1.read());
    } else {
        md_buf_address0 = "XXXXXXX";
    }
}

void sha512_update_32_1::thread_md_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        md_buf_ce0 = ap_const_logic_1;
    } else {
        md_buf_ce0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_md_buf_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        md_buf_d0 = temp_buf_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        md_buf_d0 = in_r_q0.read();
    } else {
        md_buf_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha512_update_32_1::thread_md_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        md_buf_we0 = ap_const_logic_1;
    } else {
        md_buf_we0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_md_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        md_state_address0 = grp_sha512_compress_128_fu_363_md_state_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        md_state_address0 = grp_sha512_compress_32_fu_351_md_state_address0.read();
    } else {
        md_state_address0 =  (sc_lv<3>) ("XXX");
    }
}

void sha512_update_32_1::thread_md_state_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        md_state_ce0 = grp_sha512_compress_128_fu_363_md_state_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        md_state_ce0 = grp_sha512_compress_32_fu_351_md_state_ce0.read();
    } else {
        md_state_ce0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_md_state_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        md_state_d0 = grp_sha512_compress_128_fu_363_md_state_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        md_state_d0 = grp_sha512_compress_32_fu_351_md_state_d0.read();
    } else {
        md_state_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha512_update_32_1::thread_md_state_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        md_state_we0 = grp_sha512_compress_128_fu_363_md_state_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        md_state_we0 = grp_sha512_compress_32_fu_351_md_state_we0.read();
    } else {
        md_state_we0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_n_fu_451_p3() {
    n_fu_451_p3 = (!tmp_7_fu_340_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_7_fu_340_p2.read()[0].to_bool())? inlen_load_reg_569.read(): grp_fu_304_p2.read());
}

void sha512_update_32_1::thread_or_cond_fu_446_p2() {
    or_cond_fu_446_p2 = (tmp_2_reg_596.read() & icmp_fu_335_p2.read());
}

void sha512_update_32_1::thread_sum2_cast_fu_474_p0() {
    sum2_cast_fu_474_p0 =  (sc_lv<8>) (grp_fu_230_p2.read());
}

void sha512_update_32_1::thread_sum2_cast_fu_474_p1() {
    sum2_cast_fu_474_p1 = esl_zext<64,8>(sum2_cast_fu_474_p0.read());
}

void sha512_update_32_1::thread_temp_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        temp_buf_address0 =  (sc_lv<7>) (tmp_11_fu_494_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        temp_buf_address0 =  (sc_lv<7>) (tmp_9_reg_647.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_buf_address0 = grp_sha512_compress_128_fu_363_buf_r_address0.read();
    } else {
        temp_buf_address0 = "XXXXXXX";
    }
}

void sha512_update_32_1::thread_temp_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        temp_buf_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_buf_ce0 = grp_sha512_compress_128_fu_363_buf_r_ce0.read();
    } else {
        temp_buf_ce0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_temp_buf_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_buf_ce1 = grp_sha512_compress_128_fu_363_buf_r_ce1.read();
    } else {
        temp_buf_ce1 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_temp_buf_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        temp_buf_we0 = ap_const_logic_1;
    } else {
        temp_buf_we0 = ap_const_logic_0;
    }
}

void sha512_update_32_1::thread_tmp_11_fu_494_p1() {
    tmp_11_fu_494_p1 = esl_zext<64,8>(temp_index_1_reg_201.read());
}

void sha512_update_32_1::thread_tmp_12_fu_458_p1() {
    tmp_12_fu_458_p1 = i_reg_179.read().range(9-1, 0);
}

void sha512_update_32_1::thread_tmp_13_fu_462_p1() {
    tmp_13_fu_462_p1 = i_reg_179.read().range(8-1, 0);
}

void sha512_update_32_1::thread_tmp_14_fu_469_p1() {
    tmp_14_fu_469_p1 = p_01_idx_fu_84.read().range(8-1, 0);
}

void sha512_update_32_1::thread_tmp_15_fu_466_p1() {
    tmp_15_fu_466_p1 = md_curlen_load_reg_584.read().range(9-1, 0);
}

void sha512_update_32_1::thread_tmp_3_fu_436_p4() {
    tmp_3_fu_436_p4 = inlen_load_reg_569.read().range(63, 7);
}

void sha512_update_32_1::thread_tmp_5_cast_fu_479_p0() {
    tmp_5_cast_fu_479_p0 =  (sc_lv<9>) (grp_fu_230_p2.read());
}

void sha512_update_32_1::thread_tmp_5_cast_fu_479_p1() {
    tmp_5_cast_fu_479_p1 = esl_zext<64,9>(tmp_5_cast_fu_479_p0.read());
}

void sha512_update_32_1::thread_tmp_7_fu_340_p2() {
    tmp_7_fu_340_p2 = (!inlen_load_reg_569.read().is_01() || !grp_fu_304_p2.read().is_01())? sc_lv<1>(): (sc_biguint<64>(inlen_load_reg_569.read()) < sc_biguint<64>(grp_fu_304_p2.read()));
}

void sha512_update_32_1::thread_tmp_9_fu_489_p1() {
    tmp_9_fu_489_p1 = esl_zext<64,8>(temp_index_reg_190.read());
}

void sha512_update_32_1::thread_tmp_fu_324_p2() {
    tmp_fu_324_p2 = (!md_curlen_read.read().is_01() || !ap_const_lv64_80.is_01())? sc_lv<1>(): (sc_biguint<64>(md_curlen_read.read()) > sc_biguint<64>(ap_const_lv64_80));
}

void sha512_update_32_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_324_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_324_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(or_cond_fu_446_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_sha512_compress_128_fu_363_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_330_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(grp_sha512_compress_32_fu_351_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

