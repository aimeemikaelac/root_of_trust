// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cmov_aff.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cmov_aff::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cmov_aff::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> cmov_aff::ap_ST_fsm_state1 = "1";
const sc_lv<5> cmov_aff::ap_ST_fsm_state2 = "10";
const sc_lv<5> cmov_aff::ap_ST_fsm_state3 = "100";
const sc_lv<5> cmov_aff::ap_ST_fsm_state4 = "1000";
const sc_lv<5> cmov_aff::ap_ST_fsm_state5 = "10000";
const sc_lv<32> cmov_aff::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cmov_aff::ap_const_lv32_1 = "1";
const sc_lv<1> cmov_aff::ap_const_lv1_0 = "0";
const sc_lv<32> cmov_aff::ap_const_lv32_3 = "11";
const sc_lv<6> cmov_aff::ap_const_lv6_0 = "000000";
const sc_lv<32> cmov_aff::ap_const_lv32_2 = "10";
const sc_lv<32> cmov_aff::ap_const_lv32_4 = "100";
const sc_lv<1> cmov_aff::ap_const_lv1_1 = "1";
const sc_lv<5> cmov_aff::ap_const_lv5_0 = "00000";
const sc_lv<32> cmov_aff::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<6> cmov_aff::ap_const_lv6_20 = "100000";
const sc_lv<6> cmov_aff::ap_const_lv6_1 = "1";
const bool cmov_aff::ap_const_boolean_1 = true;

cmov_aff::cmov_aff(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i6_fu_207_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i6_fu_207_p2 );

    SC_METHOD(thread_exitcond_i6_fu_207_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_i5_reg_115 );

    SC_METHOD(thread_exitcond_i_fu_158_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_104 );

    SC_METHOD(thread_i_81_fu_213_p2);
    sensitive << ( i_i5_reg_115 );

    SC_METHOD(thread_i_fu_164_p2);
    sensitive << ( i_i_reg_104 );

    SC_METHOD(thread_mask_cast_fu_150_p3);
    sensitive << ( b );

    SC_METHOD(thread_p_x_v_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_790_cast_fu_184_p1 );

    SC_METHOD(thread_p_x_v_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_y_v_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_791_cast_fu_233_p1 );

    SC_METHOD(thread_p_y_v_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_r_x_v_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_x_v_addr_reg_285 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_fu_170_p1 );

    SC_METHOD(thread_r_x_v_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_r_x_v_d0);
    sensitive << ( r_x_v_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_895_i_fu_195_p2 );

    SC_METHOD(thread_r_x_v_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_r_y_v_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( r_y_v_addr_reg_303 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_i7_fu_219_p1 );

    SC_METHOD(thread_r_y_v_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_r_y_v_d0);
    sensitive << ( r_y_v_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_895_i1_fu_244_p2 );

    SC_METHOD(thread_r_y_v_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_787_cast_fu_134_p1);
    sensitive << ( tmp_fu_126_p3 );

    SC_METHOD(thread_tmp_788_fu_138_p3);
    sensitive << ( tmp_919 );

    SC_METHOD(thread_tmp_789_cast_fu_146_p1);
    sensitive << ( tmp_788_fu_138_p3 );

    SC_METHOD(thread_tmp_790_cast_fu_184_p1);
    sensitive << ( tmp_790_fu_179_p2 );

    SC_METHOD(thread_tmp_790_fu_179_p2);
    sensitive << ( tmp_789_cast_reg_261 );
    sensitive << ( tmp_i_cast_fu_175_p1 );

    SC_METHOD(thread_tmp_791_cast_fu_233_p1);
    sensitive << ( tmp_791_fu_228_p2 );

    SC_METHOD(thread_tmp_791_fu_228_p2);
    sensitive << ( tmp_787_cast_reg_256 );
    sensitive << ( tmp_i7_cast_fu_224_p1 );

    SC_METHOD(thread_tmp_894_i1_fu_238_p2);
    sensitive << ( r_y_v_q0 );
    sensitive << ( p_y_v_q0 );

    SC_METHOD(thread_tmp_894_i_fu_189_p2);
    sensitive << ( r_x_v_q0 );
    sensitive << ( p_x_v_q0 );

    SC_METHOD(thread_tmp_895_i1_fu_244_p2);
    sensitive << ( mask_cast_reg_266 );
    sensitive << ( tmp_894_i1_fu_238_p2 );

    SC_METHOD(thread_tmp_895_i_fu_195_p2);
    sensitive << ( mask_cast_reg_266 );
    sensitive << ( tmp_894_i_fu_189_p2 );

    SC_METHOD(thread_tmp_fu_126_p3);
    sensitive << ( tmp_9191 );

    SC_METHOD(thread_tmp_i7_cast_fu_224_p1);
    sensitive << ( i_i5_reg_115 );

    SC_METHOD(thread_tmp_i7_fu_219_p1);
    sensitive << ( i_i5_reg_115 );

    SC_METHOD(thread_tmp_i_cast_fu_175_p1);
    sensitive << ( i_i_reg_104 );

    SC_METHOD(thread_tmp_i_fu_170_p1);
    sensitive << ( i_i_reg_104 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_158_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i6_fu_207_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cmov_aff_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_x_v_address0, "(port)r_x_v_address0");
    sc_trace(mVcdFile, r_x_v_ce0, "(port)r_x_v_ce0");
    sc_trace(mVcdFile, r_x_v_we0, "(port)r_x_v_we0");
    sc_trace(mVcdFile, r_x_v_d0, "(port)r_x_v_d0");
    sc_trace(mVcdFile, r_x_v_q0, "(port)r_x_v_q0");
    sc_trace(mVcdFile, r_y_v_address0, "(port)r_y_v_address0");
    sc_trace(mVcdFile, r_y_v_ce0, "(port)r_y_v_ce0");
    sc_trace(mVcdFile, r_y_v_we0, "(port)r_y_v_we0");
    sc_trace(mVcdFile, r_y_v_d0, "(port)r_y_v_d0");
    sc_trace(mVcdFile, r_y_v_q0, "(port)r_y_v_q0");
    sc_trace(mVcdFile, p_x_v_address0, "(port)p_x_v_address0");
    sc_trace(mVcdFile, p_x_v_ce0, "(port)p_x_v_ce0");
    sc_trace(mVcdFile, p_x_v_q0, "(port)p_x_v_q0");
    sc_trace(mVcdFile, tmp_919, "(port)tmp_919");
    sc_trace(mVcdFile, p_y_v_address0, "(port)p_y_v_address0");
    sc_trace(mVcdFile, p_y_v_ce0, "(port)p_y_v_ce0");
    sc_trace(mVcdFile, p_y_v_q0, "(port)p_y_v_q0");
    sc_trace(mVcdFile, tmp_9191, "(port)tmp_9191");
    sc_trace(mVcdFile, b, "(port)b");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_787_cast_fu_134_p1, "tmp_787_cast_fu_134_p1");
    sc_trace(mVcdFile, tmp_787_cast_reg_256, "tmp_787_cast_reg_256");
    sc_trace(mVcdFile, tmp_789_cast_fu_146_p1, "tmp_789_cast_fu_146_p1");
    sc_trace(mVcdFile, tmp_789_cast_reg_261, "tmp_789_cast_reg_261");
    sc_trace(mVcdFile, mask_cast_fu_150_p3, "mask_cast_fu_150_p3");
    sc_trace(mVcdFile, mask_cast_reg_266, "mask_cast_reg_266");
    sc_trace(mVcdFile, i_fu_164_p2, "i_fu_164_p2");
    sc_trace(mVcdFile, i_reg_275, "i_reg_275");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_i_fu_158_p2, "exitcond_i_fu_158_p2");
    sc_trace(mVcdFile, r_x_v_addr_reg_285, "r_x_v_addr_reg_285");
    sc_trace(mVcdFile, i_81_fu_213_p2, "i_81_fu_213_p2");
    sc_trace(mVcdFile, i_81_reg_293, "i_81_reg_293");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond_i6_fu_207_p2, "exitcond_i6_fu_207_p2");
    sc_trace(mVcdFile, r_y_v_addr_reg_303, "r_y_v_addr_reg_303");
    sc_trace(mVcdFile, i_i_reg_104, "i_i_reg_104");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_i5_reg_115, "i_i5_reg_115");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_790_cast_fu_184_p1, "tmp_790_cast_fu_184_p1");
    sc_trace(mVcdFile, tmp_i_fu_170_p1, "tmp_i_fu_170_p1");
    sc_trace(mVcdFile, tmp_791_cast_fu_233_p1, "tmp_791_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_i7_fu_219_p1, "tmp_i7_fu_219_p1");
    sc_trace(mVcdFile, tmp_fu_126_p3, "tmp_fu_126_p3");
    sc_trace(mVcdFile, tmp_788_fu_138_p3, "tmp_788_fu_138_p3");
    sc_trace(mVcdFile, tmp_i_cast_fu_175_p1, "tmp_i_cast_fu_175_p1");
    sc_trace(mVcdFile, tmp_790_fu_179_p2, "tmp_790_fu_179_p2");
    sc_trace(mVcdFile, tmp_894_i_fu_189_p2, "tmp_894_i_fu_189_p2");
    sc_trace(mVcdFile, tmp_895_i_fu_195_p2, "tmp_895_i_fu_195_p2");
    sc_trace(mVcdFile, tmp_i7_cast_fu_224_p1, "tmp_i7_cast_fu_224_p1");
    sc_trace(mVcdFile, tmp_791_fu_228_p2, "tmp_791_fu_228_p2");
    sc_trace(mVcdFile, tmp_894_i1_fu_238_p2, "tmp_894_i1_fu_238_p2");
    sc_trace(mVcdFile, tmp_895_i1_fu_244_p2, "tmp_895_i1_fu_244_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

cmov_aff::~cmov_aff() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void cmov_aff::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_158_p2.read(), ap_const_lv1_1))) {
        i_i5_reg_115 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_i5_reg_115 = i_81_reg_293.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_i_reg_104 = i_reg_275.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_i_reg_104 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_81_reg_293 = i_81_fu_213_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_275 = i_fu_164_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        mask_cast_reg_266 = mask_cast_fu_150_p3.read();
        tmp_787_cast_reg_256 = tmp_787_cast_fu_134_p1.read();
        tmp_789_cast_reg_261 = tmp_789_cast_fu_146_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_i_fu_158_p2.read(), ap_const_lv1_0))) {
        r_x_v_addr_reg_285 =  (sc_lv<5>) (tmp_i_fu_170_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_207_p2.read()))) {
        r_y_v_addr_reg_303 =  (sc_lv<5>) (tmp_i7_fu_219_p1.read());
    }
}

void cmov_aff::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cmov_aff::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cmov_aff::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cmov_aff::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cmov_aff::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cmov_aff::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond_i6_fu_207_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cmov_aff::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cmov_aff::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_i6_fu_207_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cmov_aff::thread_exitcond_i6_fu_207_p2() {
    exitcond_i6_fu_207_p2 = (!i_i5_reg_115.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i5_reg_115.read() == ap_const_lv6_20);
}

void cmov_aff::thread_exitcond_i_fu_158_p2() {
    exitcond_i_fu_158_p2 = (!i_i_reg_104.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_104.read() == ap_const_lv6_20);
}

void cmov_aff::thread_i_81_fu_213_p2() {
    i_81_fu_213_p2 = (!i_i5_reg_115.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i5_reg_115.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void cmov_aff::thread_i_fu_164_p2() {
    i_fu_164_p2 = (!i_i_reg_104.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_reg_104.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void cmov_aff::thread_mask_cast_fu_150_p3() {
    mask_cast_fu_150_p3 = (!b.read()[0].is_01())? sc_lv<32>(): ((b.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void cmov_aff::thread_p_x_v_address0() {
    p_x_v_address0 =  (sc_lv<14>) (tmp_790_cast_fu_184_p1.read());
}

void cmov_aff::thread_p_x_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_x_v_ce0 = ap_const_logic_1;
    } else {
        p_x_v_ce0 = ap_const_logic_0;
    }
}

void cmov_aff::thread_p_y_v_address0() {
    p_y_v_address0 =  (sc_lv<14>) (tmp_791_cast_fu_233_p1.read());
}

void cmov_aff::thread_p_y_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_y_v_ce0 = ap_const_logic_1;
    } else {
        p_y_v_ce0 = ap_const_logic_0;
    }
}

void cmov_aff::thread_r_x_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_x_v_address0 = r_x_v_addr_reg_285.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_x_v_address0 =  (sc_lv<5>) (tmp_i_fu_170_p1.read());
    } else {
        r_x_v_address0 = "XXXXX";
    }
}

void cmov_aff::thread_r_x_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        r_x_v_ce0 = ap_const_logic_1;
    } else {
        r_x_v_ce0 = ap_const_logic_0;
    }
}

void cmov_aff::thread_r_x_v_d0() {
    r_x_v_d0 = (r_x_v_q0.read() ^ tmp_895_i_fu_195_p2.read());
}

void cmov_aff::thread_r_x_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_x_v_we0 = ap_const_logic_1;
    } else {
        r_x_v_we0 = ap_const_logic_0;
    }
}

void cmov_aff::thread_r_y_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_y_v_address0 = r_y_v_addr_reg_303.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_y_v_address0 =  (sc_lv<5>) (tmp_i7_fu_219_p1.read());
    } else {
        r_y_v_address0 = "XXXXX";
    }
}

void cmov_aff::thread_r_y_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        r_y_v_ce0 = ap_const_logic_1;
    } else {
        r_y_v_ce0 = ap_const_logic_0;
    }
}

void cmov_aff::thread_r_y_v_d0() {
    r_y_v_d0 = (r_y_v_q0.read() ^ tmp_895_i1_fu_244_p2.read());
}

void cmov_aff::thread_r_y_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_y_v_we0 = ap_const_logic_1;
    } else {
        r_y_v_we0 = ap_const_logic_0;
    }
}

void cmov_aff::thread_tmp_787_cast_fu_134_p1() {
    tmp_787_cast_fu_134_p1 = esl_zext<15,14>(tmp_fu_126_p3.read());
}

void cmov_aff::thread_tmp_788_fu_138_p3() {
    tmp_788_fu_138_p3 = esl_concat<9,5>(tmp_919.read(), ap_const_lv5_0);
}

void cmov_aff::thread_tmp_789_cast_fu_146_p1() {
    tmp_789_cast_fu_146_p1 = esl_zext<15,14>(tmp_788_fu_138_p3.read());
}

void cmov_aff::thread_tmp_790_cast_fu_184_p1() {
    tmp_790_cast_fu_184_p1 = esl_zext<64,15>(tmp_790_fu_179_p2.read());
}

void cmov_aff::thread_tmp_790_fu_179_p2() {
    tmp_790_fu_179_p2 = (!tmp_789_cast_reg_261.read().is_01() || !tmp_i_cast_fu_175_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_789_cast_reg_261.read()) + sc_biguint<15>(tmp_i_cast_fu_175_p1.read()));
}

void cmov_aff::thread_tmp_791_cast_fu_233_p1() {
    tmp_791_cast_fu_233_p1 = esl_zext<64,15>(tmp_791_fu_228_p2.read());
}

void cmov_aff::thread_tmp_791_fu_228_p2() {
    tmp_791_fu_228_p2 = (!tmp_787_cast_reg_256.read().is_01() || !tmp_i7_cast_fu_224_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_787_cast_reg_256.read()) + sc_biguint<15>(tmp_i7_cast_fu_224_p1.read()));
}

void cmov_aff::thread_tmp_894_i1_fu_238_p2() {
    tmp_894_i1_fu_238_p2 = (r_y_v_q0.read() ^ p_y_v_q0.read());
}

void cmov_aff::thread_tmp_894_i_fu_189_p2() {
    tmp_894_i_fu_189_p2 = (r_x_v_q0.read() ^ p_x_v_q0.read());
}

void cmov_aff::thread_tmp_895_i1_fu_244_p2() {
    tmp_895_i1_fu_244_p2 = (tmp_894_i1_fu_238_p2.read() & mask_cast_reg_266.read());
}

void cmov_aff::thread_tmp_895_i_fu_195_p2() {
    tmp_895_i_fu_195_p2 = (tmp_894_i_fu_189_p2.read() & mask_cast_reg_266.read());
}

void cmov_aff::thread_tmp_fu_126_p3() {
    tmp_fu_126_p3 = esl_concat<9,5>(tmp_9191.read(), ap_const_lv5_0);
}

void cmov_aff::thread_tmp_i7_cast_fu_224_p1() {
    tmp_i7_cast_fu_224_p1 = esl_zext<15,6>(i_i5_reg_115.read());
}

void cmov_aff::thread_tmp_i7_fu_219_p1() {
    tmp_i7_fu_219_p1 = esl_zext<64,6>(i_i5_reg_115.read());
}

void cmov_aff::thread_tmp_i_cast_fu_175_p1() {
    tmp_i_cast_fu_175_p1 = esl_zext<15,6>(i_i_reg_104.read());
}

void cmov_aff::thread_tmp_i_fu_170_p1() {
    tmp_i_fu_170_p1 = esl_zext<64,6>(i_i_reg_104.read());
}

void cmov_aff::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_i_fu_158_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_i6_fu_207_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

