

================================================================
== Vivado HLS Report for 'fe_cmov_1'
================================================================
* Date:           Fri Jun  2 12:27:14 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      0.13|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 1
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
* FSM state operations: 

 <State 1>: 0.13ns
ST_1: b_read (22)  [1/1] 0.00ns
:0  %b_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %b)

ST_1: p_read_163 (23)  [1/1] 0.00ns
:1  %p_read_163 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read19)

ST_1: p_read_164 (24)  [1/1] 0.00ns
:2  %p_read_164 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read18)

ST_1: p_read_165 (25)  [1/1] 0.00ns
:3  %p_read_165 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read17)

ST_1: p_read_166 (26)  [1/1] 0.00ns
:4  %p_read_166 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read16)

ST_1: p_read_167 (27)  [1/1] 0.00ns
:5  %p_read_167 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read15)

ST_1: p_read_168 (28)  [1/1] 0.00ns
:6  %p_read_168 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read14)

ST_1: p_read_169 (29)  [1/1] 0.00ns
:7  %p_read_169 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read13)

ST_1: p_read_170 (30)  [1/1] 0.00ns
:8  %p_read_170 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read12)

ST_1: p_read1121 (31)  [1/1] 0.00ns
:9  %p_read1121 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read11)

ST_1: p_read_171 (32)  [1/1] 0.00ns
:10  %p_read_171 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read)

ST_1: f_9_read_9 (33)  [1/1] 0.00ns
:11  %f_9_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_9_read)

ST_1: f_8_read_9 (34)  [1/1] 0.00ns
:12  %f_8_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_8_read)

ST_1: f_7_read_9 (35)  [1/1] 0.00ns
:13  %f_7_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_7_read)

ST_1: f_6_read_9 (36)  [1/1] 0.00ns
:14  %f_6_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_6_read)

ST_1: f_5_read_9 (37)  [1/1] 0.00ns
:15  %f_5_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_5_read)

ST_1: f_4_read_9 (38)  [1/1] 0.00ns
:16  %f_4_read_9 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_4_read)

ST_1: f_3_read_8 (39)  [1/1] 0.00ns
:17  %f_3_read_8 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_3_read)

ST_1: f_2_read_8 (40)  [1/1] 0.00ns
:18  %f_2_read_8 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_2_read)

ST_1: f_1_read_8 (41)  [1/1] 0.00ns
:19  %f_1_read_8 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_1_read)

ST_1: f_0_read_8 (42)  [1/1] 0.00ns
:20  %f_0_read_8 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %f_0_read)

ST_1: StgValue_23 (43)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:156
:21  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str3, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: StgValue_24 (44)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:157
:22  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str25, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: StgValue_25 (45)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:158
:23  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str36, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: StgValue_26 (46)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:159
:24  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str4, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: StgValue_27 (47)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:160
:25  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str5, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: StgValue_28 (48)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:161
:26  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str6, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: StgValue_29 (49)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:162
:27  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str7, [1 x i8]* @p_str14, [1 x i8]* @p_str14, [1 x i8]* @p_str14) nounwind

ST_1: x0 (50)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:183 (grouped into LUT with out node f_0_write_assign)
:28  %x0 = xor i32 %p_read_171, %f_0_read_8

ST_1: x1 (51)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:184 (grouped into LUT with out node f_1_write_assign)
:29  %x1 = xor i32 %p_read1121, %f_1_read_8

ST_1: x2 (52)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:185 (grouped into LUT with out node f_2_write_assign)
:30  %x2 = xor i32 %p_read_170, %f_2_read_8

ST_1: x3 (53)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:186 (grouped into LUT with out node f_3_write_assign)
:31  %x3 = xor i32 %p_read_169, %f_3_read_8

ST_1: x4 (54)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:187 (grouped into LUT with out node f_4_write_assign)
:32  %x4 = xor i32 %p_read_168, %f_4_read_9

ST_1: x5 (55)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:188 (grouped into LUT with out node f_5_write_assign)
:33  %x5 = xor i32 %p_read_167, %f_5_read_9

ST_1: x6 (56)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:189 (grouped into LUT with out node f_6_write_assign)
:34  %x6 = xor i32 %p_read_166, %f_6_read_9

ST_1: x7 (57)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:190 (grouped into LUT with out node f_7_write_assign)
:35  %x7 = xor i32 %p_read_165, %f_7_read_9

ST_1: x8 (58)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:191 (grouped into LUT with out node f_8_write_assign)
:36  %x8 = xor i32 %p_read_164, %f_8_read_9

ST_1: x9 (59)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:192 (grouped into LUT with out node f_9_write_assign)
:37  %x9 = xor i32 %p_read_163, %f_9_read_9

ST_1: b_assign_cast (60)  [1/1] 0.08ns  loc: ed25519/src/fe.cpp:194
:38  %b_assign_cast = select i1 %b_read, i32 -1, i32 0

ST_1: x0_1 (61)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:195 (grouped into LUT with out node f_0_write_assign)
:39  %x0_1 = and i32 %x0, %b_assign_cast

ST_1: x1_1 (62)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:196 (grouped into LUT with out node f_1_write_assign)
:40  %x1_1 = and i32 %x1, %b_assign_cast

ST_1: x2_1 (63)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:197 (grouped into LUT with out node f_2_write_assign)
:41  %x2_1 = and i32 %x2, %b_assign_cast

ST_1: x3_1 (64)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:198 (grouped into LUT with out node f_3_write_assign)
:42  %x3_1 = and i32 %x3, %b_assign_cast

ST_1: x4_1 (65)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:199 (grouped into LUT with out node f_4_write_assign)
:43  %x4_1 = and i32 %x4, %b_assign_cast

ST_1: x5_1 (66)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:200 (grouped into LUT with out node f_5_write_assign)
:44  %x5_1 = and i32 %x5, %b_assign_cast

ST_1: x6_1 (67)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:201 (grouped into LUT with out node f_6_write_assign)
:45  %x6_1 = and i32 %x6, %b_assign_cast

ST_1: x7_1 (68)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:202 (grouped into LUT with out node f_7_write_assign)
:46  %x7_1 = and i32 %x7, %b_assign_cast

ST_1: x8_1 (69)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:203 (grouped into LUT with out node f_8_write_assign)
:47  %x8_1 = and i32 %x8, %b_assign_cast

ST_1: x9_1 (70)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:204 (grouped into LUT with out node f_9_write_assign)
:48  %x9_1 = and i32 %x9, %b_assign_cast

ST_1: f_0_write_assign (71)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:206 (out node of the LUT)
:49  %f_0_write_assign = xor i32 %x0_1, %f_0_read_8

ST_1: f_1_write_assign (72)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:207 (out node of the LUT)
:50  %f_1_write_assign = xor i32 %x1_1, %f_1_read_8

ST_1: f_2_write_assign (73)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:208 (out node of the LUT)
:51  %f_2_write_assign = xor i32 %x2_1, %f_2_read_8

ST_1: f_3_write_assign (74)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:209 (out node of the LUT)
:52  %f_3_write_assign = xor i32 %x3_1, %f_3_read_8

ST_1: f_4_write_assign (75)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:210 (out node of the LUT)
:53  %f_4_write_assign = xor i32 %x4_1, %f_4_read_9

ST_1: f_5_write_assign (76)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:211 (out node of the LUT)
:54  %f_5_write_assign = xor i32 %x5_1, %f_5_read_9

ST_1: f_6_write_assign (77)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:212 (out node of the LUT)
:55  %f_6_write_assign = xor i32 %x6_1, %f_6_read_9

ST_1: f_7_write_assign (78)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:213 (out node of the LUT)
:56  %f_7_write_assign = xor i32 %x7_1, %f_7_read_9

ST_1: f_8_write_assign (79)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:214 (out node of the LUT)
:57  %f_8_write_assign = xor i32 %x8_1, %f_8_read_9

ST_1: f_9_write_assign (80)  [1/1] 0.05ns  loc: ed25519/src/fe.cpp:215 (out node of the LUT)
:58  %f_9_write_assign = xor i32 %x9_1, %f_9_read_9

ST_1: mrv (81)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:59  %mrv = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } undef, i32 %f_0_write_assign, 0

ST_1: mrv_1 (82)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:60  %mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv, i32 %f_1_write_assign, 1

ST_1: mrv_2 (83)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:61  %mrv_2 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %f_2_write_assign, 2

ST_1: mrv_3 (84)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:62  %mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_2, i32 %f_3_write_assign, 3

ST_1: mrv_4 (85)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:63  %mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %f_4_write_assign, 4

ST_1: mrv_5 (86)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:64  %mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %f_5_write_assign, 5

ST_1: mrv_6 (87)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:65  %mrv_6 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_5, i32 %f_6_write_assign, 6

ST_1: mrv_7 (88)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:66  %mrv_7 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_6, i32 %f_7_write_assign, 7

ST_1: mrv_8 (89)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:67  %mrv_8 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_7, i32 %f_8_write_assign, 8

ST_1: mrv_9 (90)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:68  %mrv_9 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_8, i32 %f_9_write_assign, 9

ST_1: StgValue_71 (91)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:216
:69  ret { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_9



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.132ns
The critical path consists of the following:
	wire read on port 'b' [22]  (0 ns)
	'select' operation ('b_assign_cast', ed25519/src/fe.cpp:194) [60]  (0.081 ns)
	'and' operation ('x0', ed25519/src/fe.cpp:195) [61]  (0 ns)
	'xor' operation ('f[0]', ed25519/src/fe.cpp:206) [71]  (0.051 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
