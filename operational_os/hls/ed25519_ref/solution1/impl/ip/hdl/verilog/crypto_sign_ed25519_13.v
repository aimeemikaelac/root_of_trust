// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crypto_sign_ed25519_13 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_x_v_address0,
        r_x_v_ce0,
        r_x_v_we0,
        r_x_v_d0,
        r_x_v_q0,
        r_x_v_address1,
        r_x_v_ce1,
        r_x_v_we1,
        r_x_v_d1,
        r_x_v_q1,
        r_y_v_address0,
        r_y_v_ce0,
        r_y_v_we0,
        r_y_v_d0,
        r_y_v_q0,
        r_y_v_address1,
        r_y_v_ce1,
        r_y_v_we1,
        r_y_v_d1,
        r_y_v_q1,
        r_z_v_address0,
        r_z_v_ce0,
        r_z_v_we0,
        r_z_v_d0,
        r_z_v_q0,
        r_z_v_address1,
        r_z_v_ce1,
        r_z_v_we1,
        r_z_v_d1,
        r_z_v_q1,
        r_t_v_address0,
        r_t_v_ce0,
        r_t_v_we0,
        r_t_v_d0,
        r_t_v_q0,
        r_t_v_address1,
        r_t_v_ce1,
        r_t_v_we1,
        r_t_v_d1,
        r_t_v_q1,
        s_v_address0,
        s_v_ce0,
        s_v_q0,
        s_v_address1,
        s_v_ce1,
        s_v_q1
);

parameter    ap_ST_fsm_state1 = 57'd1;
parameter    ap_ST_fsm_state2 = 57'd2;
parameter    ap_ST_fsm_state3 = 57'd4;
parameter    ap_ST_fsm_state4 = 57'd8;
parameter    ap_ST_fsm_state5 = 57'd16;
parameter    ap_ST_fsm_state6 = 57'd32;
parameter    ap_ST_fsm_state7 = 57'd64;
parameter    ap_ST_fsm_state8 = 57'd128;
parameter    ap_ST_fsm_state9 = 57'd256;
parameter    ap_ST_fsm_state10 = 57'd512;
parameter    ap_ST_fsm_state11 = 57'd1024;
parameter    ap_ST_fsm_state12 = 57'd2048;
parameter    ap_ST_fsm_state13 = 57'd4096;
parameter    ap_ST_fsm_state14 = 57'd8192;
parameter    ap_ST_fsm_state15 = 57'd16384;
parameter    ap_ST_fsm_state16 = 57'd32768;
parameter    ap_ST_fsm_state17 = 57'd65536;
parameter    ap_ST_fsm_state18 = 57'd131072;
parameter    ap_ST_fsm_state19 = 57'd262144;
parameter    ap_ST_fsm_state20 = 57'd524288;
parameter    ap_ST_fsm_state21 = 57'd1048576;
parameter    ap_ST_fsm_state22 = 57'd2097152;
parameter    ap_ST_fsm_state23 = 57'd4194304;
parameter    ap_ST_fsm_state24 = 57'd8388608;
parameter    ap_ST_fsm_state25 = 57'd16777216;
parameter    ap_ST_fsm_state26 = 57'd33554432;
parameter    ap_ST_fsm_state27 = 57'd67108864;
parameter    ap_ST_fsm_state28 = 57'd134217728;
parameter    ap_ST_fsm_state29 = 57'd268435456;
parameter    ap_ST_fsm_state30 = 57'd536870912;
parameter    ap_ST_fsm_state31 = 57'd1073741824;
parameter    ap_ST_fsm_state32 = 57'd2147483648;
parameter    ap_ST_fsm_state33 = 57'd4294967296;
parameter    ap_ST_fsm_state34 = 57'd8589934592;
parameter    ap_ST_fsm_state35 = 57'd17179869184;
parameter    ap_ST_fsm_state36 = 57'd34359738368;
parameter    ap_ST_fsm_state37 = 57'd68719476736;
parameter    ap_ST_fsm_state38 = 57'd137438953472;
parameter    ap_ST_fsm_state39 = 57'd274877906944;
parameter    ap_ST_fsm_state40 = 57'd549755813888;
parameter    ap_ST_fsm_state41 = 57'd1099511627776;
parameter    ap_ST_fsm_state42 = 57'd2199023255552;
parameter    ap_ST_fsm_state43 = 57'd4398046511104;
parameter    ap_ST_fsm_state44 = 57'd8796093022208;
parameter    ap_ST_fsm_state45 = 57'd17592186044416;
parameter    ap_ST_fsm_state46 = 57'd35184372088832;
parameter    ap_ST_fsm_state47 = 57'd70368744177664;
parameter    ap_ST_fsm_state48 = 57'd140737488355328;
parameter    ap_ST_fsm_state49 = 57'd281474976710656;
parameter    ap_ST_fsm_state50 = 57'd562949953421312;
parameter    ap_ST_fsm_state51 = 57'd1125899906842624;
parameter    ap_ST_fsm_state52 = 57'd2251799813685248;
parameter    ap_ST_fsm_state53 = 57'd4503599627370496;
parameter    ap_ST_fsm_state54 = 57'd9007199254740992;
parameter    ap_ST_fsm_state55 = 57'd18014398509481984;
parameter    ap_ST_fsm_state56 = 57'd36028797018963968;
parameter    ap_ST_fsm_state57 = 57'd72057594037927936;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] r_x_v_address0;
output   r_x_v_ce0;
output   r_x_v_we0;
output  [31:0] r_x_v_d0;
input  [31:0] r_x_v_q0;
output  [4:0] r_x_v_address1;
output   r_x_v_ce1;
output   r_x_v_we1;
output  [31:0] r_x_v_d1;
input  [31:0] r_x_v_q1;
output  [4:0] r_y_v_address0;
output   r_y_v_ce0;
output   r_y_v_we0;
output  [31:0] r_y_v_d0;
input  [31:0] r_y_v_q0;
output  [4:0] r_y_v_address1;
output   r_y_v_ce1;
output   r_y_v_we1;
output  [31:0] r_y_v_d1;
input  [31:0] r_y_v_q1;
output  [4:0] r_z_v_address0;
output   r_z_v_ce0;
output   r_z_v_we0;
output  [31:0] r_z_v_d0;
input  [31:0] r_z_v_q0;
output  [4:0] r_z_v_address1;
output   r_z_v_ce1;
output   r_z_v_we1;
output  [31:0] r_z_v_d1;
input  [31:0] r_z_v_q1;
output  [4:0] r_t_v_address0;
output   r_t_v_ce0;
output   r_t_v_we0;
output  [31:0] r_t_v_d0;
input  [31:0] r_t_v_q0;
output  [4:0] r_t_v_address1;
output   r_t_v_ce1;
output   r_t_v_we1;
output  [31:0] r_t_v_d1;
input  [31:0] r_t_v_q1;
output  [4:0] s_v_address0;
output   s_v_ce0;
input  [31:0] s_v_q0;
output  [4:0] s_v_address1;
output   s_v_ce1;
input  [31:0] s_v_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] r_x_v_address0;
reg r_x_v_ce0;
reg r_x_v_we0;
reg[31:0] r_x_v_d0;
reg[4:0] r_x_v_address1;
reg r_x_v_ce1;
reg r_x_v_we1;
reg[31:0] r_x_v_d1;
reg[4:0] r_y_v_address0;
reg r_y_v_ce0;
reg r_y_v_we0;
reg[31:0] r_y_v_d0;
reg[4:0] r_y_v_address1;
reg r_y_v_ce1;
reg r_y_v_we1;
reg[31:0] r_y_v_d1;
reg[4:0] r_z_v_address0;
reg r_z_v_ce0;
reg r_z_v_we0;
reg[31:0] r_z_v_d0;
reg r_z_v_ce1;
reg r_z_v_we1;
reg[4:0] r_t_v_address0;
reg r_t_v_ce0;
reg r_t_v_we0;
reg[31:0] r_t_v_d0;
reg[4:0] r_t_v_address1;
reg r_t_v_ce1;
reg r_t_v_we1;
reg[31:0] r_t_v_d1;

(* fsm_encoding = "none" *) reg   [56:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] ge25519_ec2d_v_q0;
wire   [7:0] b_q0;
reg   [7:0] reg_1447;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state40;
wire   [4:0] r_x_v_addr_reg_1486;
wire   [4:0] r_x_v_addr_1_reg_1491;
wire   [4:0] r_y_v_addr_reg_1496;
wire   [4:0] r_y_v_addr_1_reg_1501;
wire   [4:0] r_temp_x_v_addr_reg_1506;
wire    ap_CS_fsm_state2;
wire   [4:0] r_temp_x_v_addr_1_reg_1511;
wire   [4:0] r_x_v_addr_2_reg_1516;
wire   [4:0] r_x_v_addr_3_reg_1521;
wire   [4:0] r_temp_y_v_addr_reg_1526;
wire   [4:0] r_temp_y_v_addr_1_reg_1531;
wire   [4:0] r_y_v_addr_2_reg_1536;
wire   [4:0] r_y_v_addr_3_reg_1541;
wire   [4:0] r_temp_x_v_addr_2_reg_1546;
wire    ap_CS_fsm_state3;
wire   [4:0] r_temp_x_v_addr_3_reg_1551;
wire   [4:0] r_x_v_addr_4_reg_1556;
wire   [4:0] r_x_v_addr_5_reg_1561;
wire   [4:0] r_temp_y_v_addr_2_reg_1566;
wire   [4:0] r_temp_y_v_addr_3_reg_1571;
wire   [4:0] r_y_v_addr_4_reg_1576;
wire   [4:0] r_y_v_addr_5_reg_1581;
wire   [4:0] r_temp_x_v_addr_4_reg_1586;
wire    ap_CS_fsm_state4;
wire   [4:0] r_temp_x_v_addr_5_reg_1591;
wire   [4:0] r_x_v_addr_6_reg_1596;
wire   [4:0] r_x_v_addr_7_reg_1601;
wire   [4:0] r_temp_y_v_addr_4_reg_1606;
wire   [4:0] r_temp_y_v_addr_5_reg_1611;
wire   [4:0] r_y_v_addr_6_reg_1616;
wire   [4:0] r_y_v_addr_7_reg_1621;
wire   [4:0] r_temp_x_v_addr_6_reg_1626;
wire    ap_CS_fsm_state5;
wire   [4:0] r_temp_x_v_addr_7_reg_1631;
wire   [4:0] r_x_v_addr_8_reg_1636;
wire   [4:0] r_x_v_addr_9_reg_1641;
wire   [4:0] r_temp_y_v_addr_6_reg_1646;
wire   [4:0] r_temp_y_v_addr_7_reg_1651;
wire   [4:0] r_y_v_addr_8_reg_1656;
wire   [4:0] r_y_v_addr_9_reg_1661;
wire   [4:0] r_temp_x_v_addr_8_reg_1666;
wire    ap_CS_fsm_state6;
wire   [4:0] r_temp_x_v_addr_9_reg_1671;
wire   [4:0] r_x_v_addr_10_reg_1676;
wire   [4:0] r_x_v_addr_11_reg_1681;
wire   [4:0] r_temp_y_v_addr_8_reg_1686;
wire   [4:0] r_temp_y_v_addr_9_reg_1691;
wire   [4:0] r_y_v_addr_10_reg_1696;
wire   [4:0] r_y_v_addr_11_reg_1701;
wire   [4:0] r_temp_x_v_addr_10_reg_1706;
wire    ap_CS_fsm_state7;
wire   [4:0] r_temp_x_v_addr_11_reg_1711;
wire   [4:0] r_x_v_addr_12_reg_1716;
wire   [4:0] r_x_v_addr_13_reg_1721;
wire   [4:0] r_temp_y_v_addr_10_reg_1726;
wire   [4:0] r_temp_y_v_addr_11_reg_1731;
wire   [4:0] r_y_v_addr_12_reg_1736;
wire   [4:0] r_y_v_addr_13_reg_1741;
wire   [4:0] r_temp_x_v_addr_12_reg_1746;
wire    ap_CS_fsm_state8;
wire   [4:0] r_temp_x_v_addr_13_reg_1751;
wire   [4:0] r_x_v_addr_14_reg_1756;
wire   [4:0] r_x_v_addr_15_reg_1761;
wire   [4:0] r_temp_y_v_addr_12_reg_1766;
wire   [4:0] r_temp_y_v_addr_13_reg_1771;
wire   [4:0] r_y_v_addr_14_reg_1776;
wire   [4:0] r_y_v_addr_15_reg_1781;
wire   [4:0] r_temp_x_v_addr_14_reg_1786;
wire    ap_CS_fsm_state9;
wire   [4:0] r_temp_x_v_addr_15_reg_1791;
wire   [4:0] r_x_v_addr_16_reg_1796;
wire   [4:0] r_x_v_addr_17_reg_1801;
wire   [4:0] r_temp_y_v_addr_14_reg_1806;
wire   [4:0] r_temp_y_v_addr_15_reg_1811;
wire   [4:0] r_y_v_addr_16_reg_1816;
wire   [4:0] r_y_v_addr_17_reg_1821;
wire   [4:0] r_temp_x_v_addr_16_reg_1826;
wire    ap_CS_fsm_state10;
wire   [4:0] r_temp_x_v_addr_17_reg_1831;
wire   [4:0] r_x_v_addr_18_reg_1836;
wire   [4:0] r_x_v_addr_19_reg_1841;
wire   [4:0] r_temp_y_v_addr_16_reg_1846;
wire   [4:0] r_temp_y_v_addr_17_reg_1851;
wire   [4:0] r_y_v_addr_18_reg_1856;
wire   [4:0] r_y_v_addr_19_reg_1861;
wire   [4:0] r_temp_x_v_addr_18_reg_1866;
wire    ap_CS_fsm_state11;
wire   [4:0] r_temp_x_v_addr_19_reg_1871;
wire   [4:0] r_x_v_addr_20_reg_1876;
wire   [4:0] r_x_v_addr_21_reg_1881;
wire   [4:0] r_temp_y_v_addr_18_reg_1886;
wire   [4:0] r_temp_y_v_addr_19_reg_1891;
wire   [4:0] r_y_v_addr_20_reg_1896;
wire   [4:0] r_y_v_addr_21_reg_1901;
wire   [4:0] r_temp_x_v_addr_20_reg_1906;
wire    ap_CS_fsm_state12;
wire   [4:0] r_temp_x_v_addr_21_reg_1911;
wire   [4:0] r_x_v_addr_22_reg_1916;
wire   [4:0] r_x_v_addr_23_reg_1921;
wire   [4:0] r_temp_y_v_addr_20_reg_1926;
wire   [4:0] r_temp_y_v_addr_21_reg_1931;
wire   [4:0] r_y_v_addr_22_reg_1936;
wire   [4:0] r_y_v_addr_23_reg_1941;
wire   [4:0] r_temp_x_v_addr_22_reg_1946;
wire    ap_CS_fsm_state13;
wire   [4:0] r_temp_x_v_addr_23_reg_1951;
wire   [4:0] r_x_v_addr_24_reg_1956;
wire   [4:0] r_x_v_addr_25_reg_1961;
wire   [4:0] r_temp_y_v_addr_22_reg_1966;
wire   [4:0] r_temp_y_v_addr_23_reg_1971;
wire   [4:0] r_y_v_addr_24_reg_1976;
wire   [4:0] r_y_v_addr_25_reg_1981;
wire   [4:0] r_temp_x_v_addr_24_reg_1986;
wire    ap_CS_fsm_state14;
wire   [4:0] r_temp_x_v_addr_25_reg_1991;
wire   [4:0] r_x_v_addr_26_reg_1996;
wire   [4:0] r_x_v_addr_27_reg_2001;
wire   [4:0] r_temp_y_v_addr_24_reg_2006;
wire   [4:0] r_temp_y_v_addr_25_reg_2011;
wire   [4:0] r_y_v_addr_26_reg_2016;
wire   [4:0] r_y_v_addr_27_reg_2021;
wire   [4:0] r_temp_x_v_addr_26_reg_2026;
wire    ap_CS_fsm_state15;
wire   [4:0] r_temp_x_v_addr_27_reg_2031;
wire   [4:0] r_x_v_addr_28_reg_2036;
wire   [4:0] r_x_v_addr_29_reg_2041;
wire   [4:0] r_temp_y_v_addr_26_reg_2046;
wire   [4:0] r_temp_y_v_addr_27_reg_2051;
wire   [4:0] r_y_v_addr_28_reg_2056;
wire   [4:0] r_y_v_addr_29_reg_2061;
wire   [4:0] r_temp_x_v_addr_28_reg_2066;
wire    ap_CS_fsm_state16;
wire    grp_crypto_sign_ed25519_14_fu_1424_ap_done;
wire   [4:0] r_temp_x_v_addr_29_reg_2071;
wire   [4:0] r_x_v_addr_30_reg_2076;
wire   [4:0] r_x_v_addr_31_reg_2081;
wire   [4:0] r_temp_y_v_addr_28_reg_2086;
wire   [4:0] r_temp_y_v_addr_29_reg_2091;
wire   [4:0] r_y_v_addr_30_reg_2096;
wire   [4:0] r_y_v_addr_31_reg_2101;
wire    ap_CS_fsm_state17;
wire   [4:0] r_temp_x_v_addr_30_reg_2111;
wire   [4:0] r_temp_x_v_addr_31_reg_2116;
wire   [4:0] r_temp_y_v_addr_30_reg_2121;
wire   [4:0] r_temp_y_v_addr_31_reg_2126;
wire   [5:0] i_57_fu_1463_p2;
wire    ap_CS_fsm_state37;
wire   [0:0] exitcond_i_fu_1452_p2;
wire    ap_CS_fsm_state39;
wire   [0:0] exitcond_fu_1469_p2;
wire   [6:0] i_58_fu_1480_p2;
reg   [6:0] i_58_reg_2147;
reg   [4:0] a_v_address0;
reg    a_v_ce0;
reg    a_v_we0;
reg   [31:0] a_v_d0;
wire   [31:0] a_v_q0;
reg   [4:0] a_v_address1;
reg    a_v_ce1;
reg    a_v_we1;
reg   [31:0] a_v_d1;
wire   [31:0] a_v_q1;
reg   [4:0] b_v_address0;
reg    b_v_ce0;
reg    b_v_we0;
reg   [31:0] b_v_d0;
wire   [31:0] b_v_q0;
reg   [4:0] b_v_address1;
reg    b_v_ce1;
reg    b_v_we1;
reg   [31:0] b_v_d1;
wire   [31:0] b_v_q1;
reg   [4:0] t1_v_address0;
reg    t1_v_ce0;
reg    t1_v_we0;
wire   [31:0] t1_v_q0;
reg    t1_v_ce1;
reg    t1_v_we1;
wire   [31:0] t1_v_q1;
reg   [4:0] t2_v_address0;
reg    t2_v_ce0;
reg    t2_v_we0;
wire   [31:0] t2_v_q0;
reg    t2_v_ce1;
reg    t2_v_we1;
wire   [31:0] t2_v_q1;
reg   [4:0] c_v_address0;
reg    c_v_ce0;
reg    c_v_we0;
reg   [31:0] c_v_d0;
wire   [31:0] c_v_q0;
reg   [4:0] c_v_address1;
reg    c_v_ce1;
reg    c_v_we1;
reg   [31:0] c_v_d1;
wire   [31:0] c_v_q1;
reg   [4:0] d_v_address0;
reg    d_v_ce0;
reg    d_v_we0;
wire   [31:0] d_v_q0;
reg   [4:0] d_v_address1;
reg    d_v_ce1;
reg    d_v_we1;
wire   [31:0] d_v_q1;
reg   [4:0] e_v_address0;
reg    e_v_ce0;
reg    e_v_we0;
wire   [31:0] e_v_q0;
reg    e_v_ce1;
reg    e_v_we1;
wire   [31:0] e_v_q1;
reg   [4:0] f_v_address0;
reg    f_v_ce0;
reg    f_v_we0;
wire   [31:0] f_v_q0;
reg    f_v_ce1;
reg    f_v_we1;
wire   [31:0] f_v_q1;
reg   [4:0] g_v_address0;
reg    g_v_ce0;
reg    g_v_we0;
wire   [31:0] g_v_q0;
reg    g_v_ce1;
reg    g_v_we1;
wire   [31:0] g_v_q1;
reg   [4:0] h_v_address0;
reg    h_v_ce0;
reg    h_v_we0;
wire   [31:0] h_v_q0;
reg    h_v_ce1;
reg    h_v_we1;
wire   [31:0] h_v_q1;
reg   [4:0] qt_v_address0;
reg    qt_v_ce0;
reg    qt_v_we0;
wire   [31:0] qt_v_q0;
reg    qt_v_ce1;
reg    qt_v_we1;
wire   [31:0] qt_v_q1;
reg   [6:0] b_address0;
reg    b_ce0;
reg    b_we0;
reg    b_ce1;
reg    b_we1;
wire   [7:0] b_q1;
reg   [4:0] t_x_v_address0;
reg    t_x_v_ce0;
reg    t_x_v_we0;
wire   [31:0] t_x_v_q0;
reg    t_x_v_ce1;
reg    t_x_v_we1;
wire   [31:0] t_x_v_q1;
reg   [4:0] t_y_v_address0;
reg    t_y_v_ce0;
reg    t_y_v_we0;
wire   [31:0] t_y_v_q0;
reg   [4:0] t_y_v_address1;
reg    t_y_v_ce1;
reg    t_y_v_we1;
wire   [31:0] t_y_v_q1;
reg   [4:0] r_temp_x_v_address0;
reg    r_temp_x_v_ce0;
reg    r_temp_x_v_we0;
reg   [31:0] r_temp_x_v_d0;
wire   [31:0] r_temp_x_v_q0;
reg   [4:0] r_temp_x_v_address1;
reg    r_temp_x_v_ce1;
reg    r_temp_x_v_we1;
reg   [31:0] r_temp_x_v_d1;
wire   [31:0] r_temp_x_v_q1;
reg   [4:0] r_temp_y_v_address0;
reg    r_temp_y_v_ce0;
reg    r_temp_y_v_we0;
reg   [31:0] r_temp_y_v_d0;
wire   [31:0] r_temp_y_v_q0;
reg   [4:0] r_temp_y_v_address1;
reg    r_temp_y_v_ce1;
reg    r_temp_y_v_we1;
reg   [31:0] r_temp_y_v_d1;
wire   [31:0] r_temp_y_v_q1;
wire    grp_choose_t_fu_1365_ap_start;
wire    grp_choose_t_fu_1365_ap_done;
wire    grp_choose_t_fu_1365_ap_idle;
wire    grp_choose_t_fu_1365_ap_ready;
wire   [4:0] grp_choose_t_fu_1365_t_x_v_address0;
wire    grp_choose_t_fu_1365_t_x_v_ce0;
wire    grp_choose_t_fu_1365_t_x_v_we0;
wire   [31:0] grp_choose_t_fu_1365_t_x_v_d0;
reg   [31:0] grp_choose_t_fu_1365_t_x_v_q0;
wire   [4:0] grp_choose_t_fu_1365_t_x_v_address1;
wire    grp_choose_t_fu_1365_t_x_v_ce1;
wire    grp_choose_t_fu_1365_t_x_v_we1;
wire   [31:0] grp_choose_t_fu_1365_t_x_v_d1;
reg   [31:0] grp_choose_t_fu_1365_t_x_v_q1;
wire   [4:0] grp_choose_t_fu_1365_t_y_v_address0;
wire    grp_choose_t_fu_1365_t_y_v_ce0;
wire    grp_choose_t_fu_1365_t_y_v_we0;
wire   [31:0] grp_choose_t_fu_1365_t_y_v_d0;
reg   [31:0] grp_choose_t_fu_1365_t_y_v_q0;
wire   [4:0] grp_choose_t_fu_1365_t_y_v_address1;
wire    grp_choose_t_fu_1365_t_y_v_ce1;
wire    grp_choose_t_fu_1365_t_y_v_we1;
wire   [31:0] grp_choose_t_fu_1365_t_y_v_d1;
reg   [6:0] grp_choose_t_fu_1365_pos_r;
wire    grp_crypto_sign_ed25519_18_fu_1380_ap_start;
wire    grp_crypto_sign_ed25519_18_fu_1380_ap_done;
wire    grp_crypto_sign_ed25519_18_fu_1380_ap_idle;
wire    grp_crypto_sign_ed25519_18_fu_1380_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
wire    grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
wire    grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
reg   [31:0] grp_crypto_sign_ed25519_18_fu_1380_r_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
wire    grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
wire    grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
reg   [31:0] grp_crypto_sign_ed25519_18_fu_1380_r_v_q1;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
wire    grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_18_fu_1380_x_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
wire    grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_18_fu_1380_y_v_q0;
wire    grp_crypto_sign_ed25519_18_fu_1394_ap_start;
wire    grp_crypto_sign_ed25519_18_fu_1394_ap_done;
wire    grp_crypto_sign_ed25519_18_fu_1394_ap_idle;
wire    grp_crypto_sign_ed25519_18_fu_1394_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1394_r_v_address0;
wire    grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0;
wire    grp_crypto_sign_ed25519_18_fu_1394_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_18_fu_1394_r_v_d0;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1394_r_v_address1;
wire    grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1;
wire    grp_crypto_sign_ed25519_18_fu_1394_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_18_fu_1394_r_v_d1;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1394_x_v_address0;
wire    grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0;
wire   [4:0] grp_crypto_sign_ed25519_18_fu_1394_y_v_address0;
wire    grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0;
wire    grp_crypto_sign_ed25519_17_fu_1402_ap_start;
wire    grp_crypto_sign_ed25519_17_fu_1402_ap_done;
wire    grp_crypto_sign_ed25519_17_fu_1402_ap_idle;
wire    grp_crypto_sign_ed25519_17_fu_1402_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_17_fu_1402_r_v_address0;
wire    grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0;
wire    grp_crypto_sign_ed25519_17_fu_1402_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_17_fu_1402_r_v_d0;
reg   [31:0] grp_crypto_sign_ed25519_17_fu_1402_r_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_17_fu_1402_r_v_address1;
wire    grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1;
wire    grp_crypto_sign_ed25519_17_fu_1402_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_17_fu_1402_r_v_d1;
reg   [31:0] grp_crypto_sign_ed25519_17_fu_1402_r_v_q1;
wire   [4:0] grp_crypto_sign_ed25519_17_fu_1402_y_v_address0;
wire    grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_17_fu_1402_y_v_q0;
wire    grp_crypto_sign_ed25519_17_fu_1408_ap_start;
wire    grp_crypto_sign_ed25519_17_fu_1408_ap_done;
wire    grp_crypto_sign_ed25519_17_fu_1408_ap_idle;
wire    grp_crypto_sign_ed25519_17_fu_1408_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_17_fu_1408_r_v_address0;
wire    grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0;
wire    grp_crypto_sign_ed25519_17_fu_1408_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_17_fu_1408_r_v_d0;
wire   [4:0] grp_crypto_sign_ed25519_17_fu_1408_r_v_address1;
wire    grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1;
wire    grp_crypto_sign_ed25519_17_fu_1408_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_17_fu_1408_r_v_d1;
wire   [4:0] grp_crypto_sign_ed25519_17_fu_1408_y_v_address0;
wire    grp_crypto_sign_ed25519_17_fu_1408_y_v_ce0;
wire    grp_crypto_sign_ed25519_8_fu_1415_ap_start;
wire    grp_crypto_sign_ed25519_8_fu_1415_ap_done;
wire    grp_crypto_sign_ed25519_8_fu_1415_ap_idle;
wire    grp_crypto_sign_ed25519_8_fu_1415_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
wire    grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
wire    grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_8_fu_1415_r_v_d0;
reg   [31:0] grp_crypto_sign_ed25519_8_fu_1415_r_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_8_fu_1415_r_v_address1;
wire    grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
wire    grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_8_fu_1415_r_v_d1;
reg   [31:0] grp_crypto_sign_ed25519_8_fu_1415_r_v_q1;
wire   [4:0] grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
wire    grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_8_fu_1415_x_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
wire    grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
reg   [31:0] grp_crypto_sign_ed25519_8_fu_1415_x_v_q1;
wire   [4:0] grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
wire    grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_8_fu_1415_y_v_q0;
wire    grp_crypto_sign_ed25519_14_fu_1424_ap_start;
wire    grp_crypto_sign_ed25519_14_fu_1424_ap_idle;
wire    grp_crypto_sign_ed25519_14_fu_1424_ap_ready;
wire   [6:0] grp_crypto_sign_ed25519_14_fu_1424_r_address0;
wire    grp_crypto_sign_ed25519_14_fu_1424_r_ce0;
wire    grp_crypto_sign_ed25519_14_fu_1424_r_we0;
wire   [7:0] grp_crypto_sign_ed25519_14_fu_1424_r_d0;
wire   [6:0] grp_crypto_sign_ed25519_14_fu_1424_r_address1;
wire    grp_crypto_sign_ed25519_14_fu_1424_r_ce1;
wire    grp_crypto_sign_ed25519_14_fu_1424_r_we1;
wire   [7:0] grp_crypto_sign_ed25519_14_fu_1424_r_d1;
wire   [4:0] grp_crypto_sign_ed25519_14_fu_1424_s_v_address0;
wire    grp_crypto_sign_ed25519_14_fu_1424_s_v_ce0;
wire   [4:0] grp_crypto_sign_ed25519_14_fu_1424_s_v_address1;
wire    grp_crypto_sign_ed25519_14_fu_1424_s_v_ce1;
wire    grp_crypto_sign_ed25519_12_fu_1431_ap_start;
wire    grp_crypto_sign_ed25519_12_fu_1431_ap_done;
wire    grp_crypto_sign_ed25519_12_fu_1431_ap_idle;
wire    grp_crypto_sign_ed25519_12_fu_1431_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
wire    grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
wire    grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_12_fu_1431_r_v_d0;
reg   [31:0] grp_crypto_sign_ed25519_12_fu_1431_r_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_12_fu_1431_r_v_address1;
wire    grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
wire    grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_12_fu_1431_r_v_d1;
reg   [31:0] grp_crypto_sign_ed25519_12_fu_1431_r_v_q1;
wire   [4:0] grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
wire    grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_12_fu_1431_x_v_q0;
wire   [4:0] grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
wire    grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
reg   [31:0] grp_crypto_sign_ed25519_12_fu_1431_y_v_q0;
wire    grp_crypto_sign_ed25519_11_fu_1440_ap_start;
wire    grp_crypto_sign_ed25519_11_fu_1440_ap_done;
wire    grp_crypto_sign_ed25519_11_fu_1440_ap_idle;
wire    grp_crypto_sign_ed25519_11_fu_1440_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_11_fu_1440_r_v_address0;
wire    grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0;
wire    grp_crypto_sign_ed25519_11_fu_1440_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_11_fu_1440_r_v_d0;
wire   [4:0] grp_crypto_sign_ed25519_11_fu_1440_r_v_address1;
wire    grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1;
wire    grp_crypto_sign_ed25519_11_fu_1440_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_11_fu_1440_r_v_d1;
wire   [4:0] grp_crypto_sign_ed25519_11_fu_1440_x_v_address0;
wire    grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0;
reg   [5:0] i_i_reg_1342;
wire    ap_CS_fsm_state36;
reg   [6:0] i_reg_1353;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state57;
reg    ap_block_state57_on_subcall_done;
reg    ap_reg_grp_choose_t_fu_1365_ap_start;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state41;
reg    ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state55;
reg    ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start;
reg    ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state49;
reg    ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start;
reg    ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
reg    ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start;
reg    ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start;
reg    ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start;
wire   [63:0] tmp_i_fu_1458_p1;
wire   [63:0] tmp_fu_1475_p1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state20;
reg   [56:0] ap_NS_fsm;
reg    ap_block_state41_on_subcall_done;
reg    ap_block_state43_on_subcall_done;
reg    ap_block_state45_on_subcall_done;
reg    ap_block_state47_on_subcall_done;
reg    ap_block_state49_on_subcall_done;
reg    ap_block_state51_on_subcall_done;
reg    ap_block_state53_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 57'd1;
#0 ap_reg_grp_choose_t_fu_1365_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start = 1'b0;
#0 ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start = 1'b0;
end

crypto_sign_ed255vdy #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ge25519_ec2d_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_crypto_sign_ed25519_17_fu_1408_y_v_address0),
    .ce0(grp_crypto_sign_ed25519_17_fu_1408_y_v_ce0),
    .q0(ge25519_ec2d_v_q0)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_v_address0),
    .ce0(a_v_ce0),
    .we0(a_v_we0),
    .d0(a_v_d0),
    .q0(a_v_q0),
    .address1(a_v_address1),
    .ce1(a_v_ce1),
    .we1(a_v_we1),
    .d1(a_v_d1),
    .q1(a_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_v_address0),
    .ce0(b_v_ce0),
    .we0(b_v_we0),
    .d0(b_v_d0),
    .q0(b_v_q0),
    .address1(b_v_address1),
    .ce1(b_v_ce1),
    .we1(b_v_we1),
    .d1(b_v_d1),
    .q1(b_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
t1_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t1_v_address0),
    .ce0(t1_v_ce0),
    .we0(t1_v_we0),
    .d0(grp_crypto_sign_ed25519_8_fu_1415_r_v_d0),
    .q0(t1_v_q0),
    .address1(grp_crypto_sign_ed25519_8_fu_1415_r_v_address1),
    .ce1(t1_v_ce1),
    .we1(t1_v_we1),
    .d1(grp_crypto_sign_ed25519_8_fu_1415_r_v_d1),
    .q1(t1_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
t2_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t2_v_address0),
    .ce0(t2_v_ce0),
    .we0(t2_v_we0),
    .d0(grp_crypto_sign_ed25519_12_fu_1431_r_v_d0),
    .q0(t2_v_q0),
    .address1(grp_crypto_sign_ed25519_12_fu_1431_r_v_address1),
    .ce1(t2_v_ce1),
    .we1(t2_v_we1),
    .d1(grp_crypto_sign_ed25519_12_fu_1431_r_v_d1),
    .q1(t2_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
c_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_v_address0),
    .ce0(c_v_ce0),
    .we0(c_v_we0),
    .d0(c_v_d0),
    .q0(c_v_q0),
    .address1(c_v_address1),
    .ce1(c_v_ce1),
    .we1(c_v_we1),
    .d1(c_v_d1),
    .q1(c_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
d_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(d_v_address0),
    .ce0(d_v_ce0),
    .we0(d_v_we0),
    .d0(grp_crypto_sign_ed25519_11_fu_1440_r_v_d0),
    .q0(d_v_q0),
    .address1(d_v_address1),
    .ce1(d_v_ce1),
    .we1(d_v_we1),
    .d1(grp_crypto_sign_ed25519_11_fu_1440_r_v_d1),
    .q1(d_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
e_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_v_address0),
    .ce0(e_v_ce0),
    .we0(e_v_we0),
    .d0(grp_crypto_sign_ed25519_8_fu_1415_r_v_d0),
    .q0(e_v_q0),
    .address1(grp_crypto_sign_ed25519_8_fu_1415_r_v_address1),
    .ce1(e_v_ce1),
    .we1(e_v_we1),
    .d1(grp_crypto_sign_ed25519_8_fu_1415_r_v_d1),
    .q1(e_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_v_address0),
    .ce0(f_v_ce0),
    .we0(f_v_we0),
    .d0(grp_crypto_sign_ed25519_8_fu_1415_r_v_d0),
    .q0(f_v_q0),
    .address1(grp_crypto_sign_ed25519_8_fu_1415_r_v_address1),
    .ce1(f_v_ce1),
    .we1(f_v_we1),
    .d1(grp_crypto_sign_ed25519_8_fu_1415_r_v_d1),
    .q1(f_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
g_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(g_v_address0),
    .ce0(g_v_ce0),
    .we0(g_v_we0),
    .d0(grp_crypto_sign_ed25519_12_fu_1431_r_v_d0),
    .q0(g_v_q0),
    .address1(grp_crypto_sign_ed25519_12_fu_1431_r_v_address1),
    .ce1(g_v_ce1),
    .we1(g_v_we1),
    .d1(grp_crypto_sign_ed25519_12_fu_1431_r_v_d1),
    .q1(g_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
h_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_v_address0),
    .ce0(h_v_ce0),
    .we0(h_v_we0),
    .d0(grp_crypto_sign_ed25519_12_fu_1431_r_v_d0),
    .q0(h_v_q0),
    .address1(grp_crypto_sign_ed25519_12_fu_1431_r_v_address1),
    .ce1(h_v_ce1),
    .we1(h_v_we1),
    .d1(grp_crypto_sign_ed25519_12_fu_1431_r_v_d1),
    .q1(h_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
qt_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(qt_v_address0),
    .ce0(qt_v_ce0),
    .we0(qt_v_we0),
    .d0(grp_crypto_sign_ed25519_18_fu_1380_r_v_d0),
    .q0(qt_v_q0),
    .address1(grp_crypto_sign_ed25519_18_fu_1380_r_v_address1),
    .ce1(qt_v_ce1),
    .we1(qt_v_we1),
    .d1(grp_crypto_sign_ed25519_18_fu_1380_r_v_d1),
    .q1(qt_v_q1)
);

crypto_sign_ed255Hfu #(
    .DataWidth( 8 ),
    .AddressRange( 85 ),
    .AddressWidth( 7 ))
b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_address0),
    .ce0(b_ce0),
    .we0(b_we0),
    .d0(grp_crypto_sign_ed25519_14_fu_1424_r_d0),
    .q0(b_q0),
    .address1(grp_crypto_sign_ed25519_14_fu_1424_r_address1),
    .ce1(b_ce1),
    .we1(b_we1),
    .d1(grp_crypto_sign_ed25519_14_fu_1424_r_d1),
    .q1(b_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
t_x_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_x_v_address0),
    .ce0(t_x_v_ce0),
    .we0(t_x_v_we0),
    .d0(grp_choose_t_fu_1365_t_x_v_d0),
    .q0(t_x_v_q0),
    .address1(grp_choose_t_fu_1365_t_x_v_address1),
    .ce1(t_x_v_ce1),
    .we1(t_x_v_we1),
    .d1(grp_choose_t_fu_1365_t_x_v_d1),
    .q1(t_x_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
t_y_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_y_v_address0),
    .ce0(t_y_v_ce0),
    .we0(t_y_v_we0),
    .d0(grp_choose_t_fu_1365_t_y_v_d0),
    .q0(t_y_v_q0),
    .address1(t_y_v_address1),
    .ce1(t_y_v_ce1),
    .we1(t_y_v_we1),
    .d1(grp_choose_t_fu_1365_t_y_v_d1),
    .q1(t_y_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
r_temp_x_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r_temp_x_v_address0),
    .ce0(r_temp_x_v_ce0),
    .we0(r_temp_x_v_we0),
    .d0(r_temp_x_v_d0),
    .q0(r_temp_x_v_q0),
    .address1(r_temp_x_v_address1),
    .ce1(r_temp_x_v_ce1),
    .we1(r_temp_x_v_we1),
    .d1(r_temp_x_v_d1),
    .q1(r_temp_x_v_q1)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
r_temp_y_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r_temp_y_v_address0),
    .ce0(r_temp_y_v_ce0),
    .we0(r_temp_y_v_we0),
    .d0(r_temp_y_v_d0),
    .q0(r_temp_y_v_q0),
    .address1(r_temp_y_v_address1),
    .ce1(r_temp_y_v_ce1),
    .we1(r_temp_y_v_we1),
    .d1(r_temp_y_v_d1),
    .q1(r_temp_y_v_q1)
);

choose_t grp_choose_t_fu_1365(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_choose_t_fu_1365_ap_start),
    .ap_done(grp_choose_t_fu_1365_ap_done),
    .ap_idle(grp_choose_t_fu_1365_ap_idle),
    .ap_ready(grp_choose_t_fu_1365_ap_ready),
    .t_x_v_address0(grp_choose_t_fu_1365_t_x_v_address0),
    .t_x_v_ce0(grp_choose_t_fu_1365_t_x_v_ce0),
    .t_x_v_we0(grp_choose_t_fu_1365_t_x_v_we0),
    .t_x_v_d0(grp_choose_t_fu_1365_t_x_v_d0),
    .t_x_v_q0(grp_choose_t_fu_1365_t_x_v_q0),
    .t_x_v_address1(grp_choose_t_fu_1365_t_x_v_address1),
    .t_x_v_ce1(grp_choose_t_fu_1365_t_x_v_ce1),
    .t_x_v_we1(grp_choose_t_fu_1365_t_x_v_we1),
    .t_x_v_d1(grp_choose_t_fu_1365_t_x_v_d1),
    .t_x_v_q1(grp_choose_t_fu_1365_t_x_v_q1),
    .t_y_v_address0(grp_choose_t_fu_1365_t_y_v_address0),
    .t_y_v_ce0(grp_choose_t_fu_1365_t_y_v_ce0),
    .t_y_v_we0(grp_choose_t_fu_1365_t_y_v_we0),
    .t_y_v_d0(grp_choose_t_fu_1365_t_y_v_d0),
    .t_y_v_q0(grp_choose_t_fu_1365_t_y_v_q0),
    .t_y_v_address1(grp_choose_t_fu_1365_t_y_v_address1),
    .t_y_v_ce1(grp_choose_t_fu_1365_t_y_v_ce1),
    .t_y_v_we1(grp_choose_t_fu_1365_t_y_v_we1),
    .t_y_v_d1(grp_choose_t_fu_1365_t_y_v_d1),
    .pos_r(grp_choose_t_fu_1365_pos_r),
    .b(reg_1447)
);

crypto_sign_ed25519_18 grp_crypto_sign_ed25519_18_fu_1380(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_18_fu_1380_ap_start),
    .ap_done(grp_crypto_sign_ed25519_18_fu_1380_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_18_fu_1380_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_18_fu_1380_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_18_fu_1380_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_18_fu_1380_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_18_fu_1380_r_v_d0),
    .r_v_q0(grp_crypto_sign_ed25519_18_fu_1380_r_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_18_fu_1380_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_18_fu_1380_r_v_d1),
    .r_v_q1(grp_crypto_sign_ed25519_18_fu_1380_r_v_q1),
    .x_v_address0(grp_crypto_sign_ed25519_18_fu_1380_x_v_address0),
    .x_v_ce0(grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0),
    .x_v_q0(grp_crypto_sign_ed25519_18_fu_1380_x_v_q0),
    .y_v_address0(grp_crypto_sign_ed25519_18_fu_1380_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0),
    .y_v_q0(grp_crypto_sign_ed25519_18_fu_1380_y_v_q0)
);

crypto_sign_ed25519_18 grp_crypto_sign_ed25519_18_fu_1394(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_18_fu_1394_ap_start),
    .ap_done(grp_crypto_sign_ed25519_18_fu_1394_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_18_fu_1394_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_18_fu_1394_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_18_fu_1394_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_18_fu_1394_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_18_fu_1394_r_v_d0),
    .r_v_q0(r_t_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_18_fu_1394_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_18_fu_1394_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_18_fu_1394_r_v_d1),
    .r_v_q1(r_t_v_q1),
    .x_v_address0(grp_crypto_sign_ed25519_18_fu_1394_x_v_address0),
    .x_v_ce0(grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0),
    .x_v_q0(e_v_q0),
    .y_v_address0(grp_crypto_sign_ed25519_18_fu_1394_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0),
    .y_v_q0(h_v_q0)
);

crypto_sign_ed25519_17 grp_crypto_sign_ed25519_17_fu_1402(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_17_fu_1402_ap_start),
    .ap_done(grp_crypto_sign_ed25519_17_fu_1402_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_17_fu_1402_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_17_fu_1402_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_17_fu_1402_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_17_fu_1402_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_17_fu_1402_r_v_d0),
    .r_v_q0(grp_crypto_sign_ed25519_17_fu_1402_r_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_17_fu_1402_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_17_fu_1402_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_17_fu_1402_r_v_d1),
    .r_v_q1(grp_crypto_sign_ed25519_17_fu_1402_r_v_q1),
    .y_v_address0(grp_crypto_sign_ed25519_17_fu_1402_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0),
    .y_v_q0(grp_crypto_sign_ed25519_17_fu_1402_y_v_q0)
);

crypto_sign_ed25519_17 grp_crypto_sign_ed25519_17_fu_1408(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_17_fu_1408_ap_start),
    .ap_done(grp_crypto_sign_ed25519_17_fu_1408_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_17_fu_1408_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_17_fu_1408_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_17_fu_1408_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_17_fu_1408_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_17_fu_1408_r_v_d0),
    .r_v_q0(c_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_17_fu_1408_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_17_fu_1408_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_17_fu_1408_r_v_d1),
    .r_v_q1(c_v_q1),
    .y_v_address0(grp_crypto_sign_ed25519_17_fu_1408_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_17_fu_1408_y_v_ce0),
    .y_v_q0(ge25519_ec2d_v_q0)
);

crypto_sign_ed25519_8 grp_crypto_sign_ed25519_8_fu_1415(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_8_fu_1415_ap_start),
    .ap_done(grp_crypto_sign_ed25519_8_fu_1415_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_8_fu_1415_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_8_fu_1415_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_8_fu_1415_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_8_fu_1415_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_8_fu_1415_r_v_d0),
    .r_v_q0(grp_crypto_sign_ed25519_8_fu_1415_r_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_8_fu_1415_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_8_fu_1415_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_8_fu_1415_r_v_d1),
    .r_v_q1(grp_crypto_sign_ed25519_8_fu_1415_r_v_q1),
    .x_v_address0(grp_crypto_sign_ed25519_8_fu_1415_x_v_address0),
    .x_v_ce0(grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0),
    .x_v_q0(grp_crypto_sign_ed25519_8_fu_1415_x_v_q0),
    .x_v_address1(grp_crypto_sign_ed25519_8_fu_1415_x_v_address1),
    .x_v_ce1(grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1),
    .x_v_q1(grp_crypto_sign_ed25519_8_fu_1415_x_v_q1),
    .y_v_address0(grp_crypto_sign_ed25519_8_fu_1415_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0),
    .y_v_q0(grp_crypto_sign_ed25519_8_fu_1415_y_v_q0)
);

crypto_sign_ed25519_14 grp_crypto_sign_ed25519_14_fu_1424(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_14_fu_1424_ap_start),
    .ap_done(grp_crypto_sign_ed25519_14_fu_1424_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_14_fu_1424_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_14_fu_1424_ap_ready),
    .r_address0(grp_crypto_sign_ed25519_14_fu_1424_r_address0),
    .r_ce0(grp_crypto_sign_ed25519_14_fu_1424_r_ce0),
    .r_we0(grp_crypto_sign_ed25519_14_fu_1424_r_we0),
    .r_d0(grp_crypto_sign_ed25519_14_fu_1424_r_d0),
    .r_q0(b_q0),
    .r_address1(grp_crypto_sign_ed25519_14_fu_1424_r_address1),
    .r_ce1(grp_crypto_sign_ed25519_14_fu_1424_r_ce1),
    .r_we1(grp_crypto_sign_ed25519_14_fu_1424_r_we1),
    .r_d1(grp_crypto_sign_ed25519_14_fu_1424_r_d1),
    .r_q1(b_q1),
    .s_v_address0(grp_crypto_sign_ed25519_14_fu_1424_s_v_address0),
    .s_v_ce0(grp_crypto_sign_ed25519_14_fu_1424_s_v_ce0),
    .s_v_q0(s_v_q0),
    .s_v_address1(grp_crypto_sign_ed25519_14_fu_1424_s_v_address1),
    .s_v_ce1(grp_crypto_sign_ed25519_14_fu_1424_s_v_ce1),
    .s_v_q1(s_v_q1)
);

crypto_sign_ed25519_12 grp_crypto_sign_ed25519_12_fu_1431(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_12_fu_1431_ap_start),
    .ap_done(grp_crypto_sign_ed25519_12_fu_1431_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_12_fu_1431_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_12_fu_1431_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_12_fu_1431_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_12_fu_1431_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_12_fu_1431_r_v_d0),
    .r_v_q0(grp_crypto_sign_ed25519_12_fu_1431_r_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_12_fu_1431_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_12_fu_1431_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_12_fu_1431_r_v_d1),
    .r_v_q1(grp_crypto_sign_ed25519_12_fu_1431_r_v_q1),
    .x_v_address0(grp_crypto_sign_ed25519_12_fu_1431_x_v_address0),
    .x_v_ce0(grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0),
    .x_v_q0(grp_crypto_sign_ed25519_12_fu_1431_x_v_q0),
    .y_v_address0(grp_crypto_sign_ed25519_12_fu_1431_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0),
    .y_v_q0(grp_crypto_sign_ed25519_12_fu_1431_y_v_q0)
);

crypto_sign_ed25519_11 grp_crypto_sign_ed25519_11_fu_1440(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_11_fu_1440_ap_start),
    .ap_done(grp_crypto_sign_ed25519_11_fu_1440_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_11_fu_1440_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_11_fu_1440_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_11_fu_1440_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_11_fu_1440_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_11_fu_1440_r_v_d0),
    .r_v_q0(d_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_11_fu_1440_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_11_fu_1440_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_11_fu_1440_r_v_d1),
    .r_v_q1(d_v_q1),
    .x_v_address0(grp_crypto_sign_ed25519_11_fu_1440_x_v_address0),
    .x_v_ce0(grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0),
    .x_v_q0(r_z_v_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_choose_t_fu_1365_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state40))) begin
            ap_reg_grp_choose_t_fu_1365_ap_start <= 1'b1;
        end else if ((1'b1 == grp_choose_t_fu_1365_ap_ready)) begin
            ap_reg_grp_choose_t_fu_1365_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_11_fu_1440_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50))) begin
            ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_12_fu_1431_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_14_fu_1424_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state48))) begin
            ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_17_fu_1402_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_17_fu_1408_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state37) & (exitcond_i_fu_1452_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state56))) begin
            ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_18_fu_1380_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state56)) begin
            ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_18_fu_1394_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state50))) begin
            ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_8_fu_1415_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (exitcond_i_fu_1452_p2 == 1'd0))) begin
        i_i_reg_1342 <= i_57_fu_1463_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        i_i_reg_1342 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (ap_block_state57_on_subcall_done == 1'b0))) begin
        i_reg_1353 <= i_58_reg_2147;
    end else if (((1'b1 == ap_CS_fsm_state38) & (grp_crypto_sign_ed25519_18_fu_1380_ap_done == 1'b1))) begin
        i_reg_1353 <= 7'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_58_reg_2147 <= i_58_fu_1480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state40))) begin
        reg_1447 <= b_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        a_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_address0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_address0;
    end else begin
        a_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_address1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_address1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_address1;
    end else begin
        a_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        a_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_ce0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0;
    end else begin
        a_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_ce1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1;
    end else begin
        a_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_d0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_d0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_d0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_d0;
    end else begin
        a_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_d1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_d1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_d1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_d1;
    end else begin
        a_v_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_we0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_we0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_we0;
    end else begin
        a_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        a_v_we1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        a_v_we1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_we1;
    end else begin
        a_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1469_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1469_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        b_address0 = tmp_fu_1475_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        b_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        b_address0 = grp_crypto_sign_ed25519_14_fu_1424_r_address0;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state39))) begin
        b_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        b_ce0 = grp_crypto_sign_ed25519_14_fu_1424_r_ce0;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b_ce1 = grp_crypto_sign_ed25519_14_fu_1424_r_ce1;
    end else begin
        b_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        b_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        b_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_address0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_address0;
    end else begin
        b_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_address1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        b_v_address1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_address1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_address1;
    end else begin
        b_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        b_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        b_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_ce0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0;
    end else begin
        b_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_ce1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        b_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_ce1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1;
    end else begin
        b_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_d0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_d0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_d0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_d0;
    end else begin
        b_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_d1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_d1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_d1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_d1;
    end else begin
        b_v_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_we0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_we0 = grp_crypto_sign_ed25519_17_fu_1402_r_v_we0;
    end else begin
        b_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        b_v_we1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        b_v_we1 = grp_crypto_sign_ed25519_17_fu_1402_r_v_we1;
    end else begin
        b_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b_we0 = grp_crypto_sign_ed25519_14_fu_1424_r_we0;
    end else begin
        b_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b_we1 = grp_crypto_sign_ed25519_14_fu_1424_r_we1;
    end else begin
        b_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        c_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        c_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_address0 = grp_crypto_sign_ed25519_17_fu_1408_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
    end else begin
        c_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_address1 = grp_crypto_sign_ed25519_17_fu_1408_r_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_address1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
    end else begin
        c_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        c_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        c_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_ce0 = grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
    end else begin
        c_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_ce1 = grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_ce1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
    end else begin
        c_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_d0 = grp_crypto_sign_ed25519_17_fu_1408_r_v_d0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_d0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
    end else begin
        c_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_d1 = grp_crypto_sign_ed25519_17_fu_1408_r_v_d1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_d1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
    end else begin
        c_v_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_we0 = grp_crypto_sign_ed25519_17_fu_1408_r_v_we0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_we0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
    end else begin
        c_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        c_v_we1 = grp_crypto_sign_ed25519_17_fu_1408_r_v_we1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        c_v_we1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
    end else begin
        c_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        d_v_address0 = grp_crypto_sign_ed25519_11_fu_1440_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        d_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        d_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
    end else begin
        d_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        d_v_address1 = grp_crypto_sign_ed25519_11_fu_1440_r_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        d_v_address1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
    end else begin
        d_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        d_v_ce0 = grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        d_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        d_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
    end else begin
        d_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        d_v_ce1 = grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        d_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
    end else begin
        d_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        d_v_we0 = grp_crypto_sign_ed25519_11_fu_1440_r_v_we0;
    end else begin
        d_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        d_v_we1 = grp_crypto_sign_ed25519_11_fu_1440_r_v_we1;
    end else begin
        d_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        e_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        e_v_address0 = grp_crypto_sign_ed25519_18_fu_1394_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        e_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
    end else begin
        e_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        e_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        e_v_ce0 = grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        e_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
    end else begin
        e_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        e_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
    end else begin
        e_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        e_v_we0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
    end else begin
        e_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        e_v_we1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
    end else begin
        e_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        f_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53))) begin
        f_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
    end else begin
        f_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        f_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53))) begin
        f_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
    end else begin
        f_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        f_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
    end else begin
        f_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        f_v_we0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
    end else begin
        f_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        f_v_we1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
    end else begin
        f_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        g_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        g_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        g_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
    end else begin
        g_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        g_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        g_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        g_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
    end else begin
        g_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        g_v_ce1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
    end else begin
        g_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        g_v_we0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
    end else begin
        g_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        g_v_we1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
    end else begin
        g_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_choose_t_fu_1365_pos_r = i_reg_1353;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_choose_t_fu_1365_pos_r = 7'd0;
    end else begin
        grp_choose_t_fu_1365_pos_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_choose_t_fu_1365_t_x_v_q0 = t_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_choose_t_fu_1365_t_x_v_q0 = r_temp_x_v_q0;
    end else begin
        grp_choose_t_fu_1365_t_x_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_choose_t_fu_1365_t_x_v_q1 = t_x_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_choose_t_fu_1365_t_x_v_q1 = r_temp_x_v_q1;
    end else begin
        grp_choose_t_fu_1365_t_x_v_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_choose_t_fu_1365_t_y_v_q0 = t_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_choose_t_fu_1365_t_y_v_q0 = r_temp_y_v_q0;
    end else begin
        grp_choose_t_fu_1365_t_y_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 = h_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 = g_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 = t2_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 = b_v_q0;
    end else begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 = h_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 = g_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 = t2_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 = b_v_q1;
    end else begin
        grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 = b_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 = d_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 = t_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 = r_y_v_q0;
    end else begin
        grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 = a_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 = c_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 = t_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 = r_x_v_q0;
    end else begin
        grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 = b_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 = a_v_q0;
    end else begin
        grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 = b_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 = a_v_q1;
    end else begin
        grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 = t2_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 = t1_v_q0;
    end else begin
        grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = r_z_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = r_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = r_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = c_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = qt_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = r_t_v_q0;
    end else begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = r_z_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = r_y_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = r_x_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = c_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = qt_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = r_t_v_q1;
    end else begin
        grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = g_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = h_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = e_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = r_t_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = t_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = r_x_v_q0;
    end else begin
        grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 = g_v_q0;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 = f_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 = qt_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 = t_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 = r_y_v_q0;
    end else begin
        grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 = e_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 = f_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 = t1_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 = a_v_q0;
    end else begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 = e_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 = f_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 = t1_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 = a_v_q1;
    end else begin
        grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 = b_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 = d_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 = t_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 = r_y_v_q0;
    end else begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 = b_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 = d_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 = t_y_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 = r_y_v_q1;
    end else begin
        grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 = a_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 = c_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 = t_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 = r_x_v_q0;
    end else begin
        grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        h_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        h_v_address0 = grp_crypto_sign_ed25519_18_fu_1394_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        h_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
    end else begin
        h_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        h_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        h_v_ce0 = grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        h_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
    end else begin
        h_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        h_v_ce1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
    end else begin
        h_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        h_v_we0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
    end else begin
        h_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        h_v_we1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
    end else begin
        h_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        qt_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        qt_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
    end else begin
        qt_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        qt_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        qt_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
    end else begin
        qt_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        qt_v_ce1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
    end else begin
        qt_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        qt_v_we0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
    end else begin
        qt_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        qt_v_we1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
    end else begin
        qt_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_address0 = grp_crypto_sign_ed25519_18_fu_1394_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        r_t_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
    end else begin
        r_t_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_address1 = grp_crypto_sign_ed25519_18_fu_1394_r_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_address1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
    end else begin
        r_t_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_ce0 = grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        r_t_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
    end else begin
        r_t_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_ce1 = grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_ce1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
    end else begin
        r_t_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_d0 = grp_crypto_sign_ed25519_18_fu_1394_r_v_d0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_d0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
    end else begin
        r_t_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_d1 = grp_crypto_sign_ed25519_18_fu_1394_r_v_d1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_d1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
    end else begin
        r_t_v_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_we0 = grp_crypto_sign_ed25519_18_fu_1394_r_v_we0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_we0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
    end else begin
        r_t_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_t_v_we1 = grp_crypto_sign_ed25519_18_fu_1394_r_v_we1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_t_v_we1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
    end else begin
        r_t_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_30_reg_2111;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_28_reg_2066;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_26_reg_2026;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_24_reg_1986;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_22_reg_1946;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_20_reg_1906;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_18_reg_1866;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_16_reg_1826;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_14_reg_1786;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_12_reg_1746;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_10_reg_1706;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_8_reg_1666;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_6_reg_1626;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_4_reg_1586;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_2_reg_1546;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        r_temp_x_v_address0 = r_temp_x_v_addr_reg_1506;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_temp_x_v_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_temp_x_v_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_temp_x_v_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_temp_x_v_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_temp_x_v_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_temp_x_v_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_temp_x_v_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_temp_x_v_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_temp_x_v_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_temp_x_v_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_temp_x_v_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_temp_x_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_temp_x_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_temp_x_v_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_temp_x_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_temp_x_v_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_address0 = grp_choose_t_fu_1365_t_x_v_address0;
    end else begin
        r_temp_x_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_31_reg_2116;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_29_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_27_reg_2031;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_25_reg_1991;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_23_reg_1951;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_21_reg_1911;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_19_reg_1871;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_17_reg_1831;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_15_reg_1791;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_13_reg_1751;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_11_reg_1711;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_9_reg_1671;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_7_reg_1631;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_5_reg_1591;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_3_reg_1551;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        r_temp_x_v_address1 = r_temp_x_v_addr_1_reg_1511;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_temp_x_v_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_temp_x_v_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_temp_x_v_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_temp_x_v_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_temp_x_v_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_temp_x_v_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_temp_x_v_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_temp_x_v_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_temp_x_v_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_temp_x_v_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_temp_x_v_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_temp_x_v_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_temp_x_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_temp_x_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_temp_x_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_temp_x_v_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_address1 = grp_choose_t_fu_1365_t_x_v_address1;
    end else begin
        r_temp_x_v_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20))) begin
        r_temp_x_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_ce0 = grp_choose_t_fu_1365_t_x_v_ce0;
    end else begin
        r_temp_x_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20))) begin
        r_temp_x_v_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_ce1 = grp_choose_t_fu_1365_t_x_v_ce1;
    end else begin
        r_temp_x_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_x_v_d0 = r_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_d0 = grp_choose_t_fu_1365_t_x_v_d0;
    end else begin
        r_temp_x_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_x_v_d1 = r_x_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_d1 = grp_choose_t_fu_1365_t_x_v_d1;
    end else begin
        r_temp_x_v_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_x_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_we0 = grp_choose_t_fu_1365_t_x_v_we0;
    end else begin
        r_temp_x_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_x_v_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_x_v_we1 = grp_choose_t_fu_1365_t_x_v_we1;
    end else begin
        r_temp_x_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_30_reg_2121;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_28_reg_2086;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_26_reg_2046;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_24_reg_2006;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_22_reg_1966;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_20_reg_1926;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_18_reg_1886;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_16_reg_1846;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_14_reg_1806;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_12_reg_1766;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_10_reg_1726;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_8_reg_1686;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_6_reg_1646;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_4_reg_1606;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_2_reg_1566;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        r_temp_y_v_address0 = r_temp_y_v_addr_reg_1526;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_temp_y_v_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_temp_y_v_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_temp_y_v_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_temp_y_v_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_temp_y_v_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_temp_y_v_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_temp_y_v_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_temp_y_v_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_temp_y_v_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_temp_y_v_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_temp_y_v_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_temp_y_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_temp_y_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_temp_y_v_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_temp_y_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_temp_y_v_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_address0 = grp_choose_t_fu_1365_t_y_v_address0;
    end else begin
        r_temp_y_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_31_reg_2126;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_29_reg_2091;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_27_reg_2051;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_25_reg_2011;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_23_reg_1971;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_21_reg_1931;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_19_reg_1891;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_17_reg_1851;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_15_reg_1811;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_13_reg_1771;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_11_reg_1731;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_9_reg_1691;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_7_reg_1651;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_5_reg_1611;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_3_reg_1571;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        r_temp_y_v_address1 = r_temp_y_v_addr_1_reg_1531;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_temp_y_v_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_temp_y_v_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_temp_y_v_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_temp_y_v_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_temp_y_v_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_temp_y_v_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_temp_y_v_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_temp_y_v_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_temp_y_v_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_temp_y_v_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_temp_y_v_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_temp_y_v_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_temp_y_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_temp_y_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_temp_y_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_temp_y_v_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_address1 = grp_choose_t_fu_1365_t_y_v_address1;
    end else begin
        r_temp_y_v_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20))) begin
        r_temp_y_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_ce0 = grp_choose_t_fu_1365_t_y_v_ce0;
    end else begin
        r_temp_y_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20))) begin
        r_temp_y_v_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_ce1 = grp_choose_t_fu_1365_t_y_v_ce1;
    end else begin
        r_temp_y_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_y_v_d0 = r_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_d0 = grp_choose_t_fu_1365_t_y_v_d0;
    end else begin
        r_temp_y_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_y_v_d1 = r_y_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_d1 = grp_choose_t_fu_1365_t_y_v_d1;
    end else begin
        r_temp_y_v_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_y_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_we0 = grp_choose_t_fu_1365_t_y_v_we0;
    end else begin
        r_temp_y_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state17))) begin
        r_temp_y_v_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_temp_y_v_we1 = grp_choose_t_fu_1365_t_y_v_we1;
    end else begin
        r_temp_y_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        r_x_v_address0 = r_x_v_addr_30_reg_2076;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        r_x_v_address0 = r_x_v_addr_28_reg_2036;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_x_v_address0 = r_x_v_addr_26_reg_1996;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_x_v_address0 = r_x_v_addr_24_reg_1956;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_x_v_address0 = r_x_v_addr_22_reg_1916;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_x_v_address0 = r_x_v_addr_20_reg_1876;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_x_v_address0 = r_x_v_addr_18_reg_1836;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_x_v_address0 = r_x_v_addr_16_reg_1796;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_x_v_address0 = r_x_v_addr_14_reg_1756;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_x_v_address0 = r_x_v_addr_12_reg_1716;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_x_v_address0 = r_x_v_addr_10_reg_1676;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_x_v_address0 = r_x_v_addr_8_reg_1636;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_x_v_address0 = r_x_v_addr_6_reg_1596;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_x_v_address0 = r_x_v_addr_4_reg_1556;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_x_v_address0 = r_x_v_addr_2_reg_1516;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_x_v_address0 = r_x_v_addr_reg_1486;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_x_v_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_x_v_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_x_v_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_x_v_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_x_v_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_x_v_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_x_v_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_x_v_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_x_v_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_x_v_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_x_v_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_x_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_x_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_x_v_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_x_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        r_x_v_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        r_x_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_x_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_x_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
    end else begin
        r_x_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        r_x_v_address1 = r_x_v_addr_31_reg_2081;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        r_x_v_address1 = r_x_v_addr_29_reg_2041;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_x_v_address1 = r_x_v_addr_27_reg_2001;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_x_v_address1 = r_x_v_addr_25_reg_1961;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_x_v_address1 = r_x_v_addr_23_reg_1921;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_x_v_address1 = r_x_v_addr_21_reg_1881;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_x_v_address1 = r_x_v_addr_19_reg_1841;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_x_v_address1 = r_x_v_addr_17_reg_1801;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_x_v_address1 = r_x_v_addr_15_reg_1761;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_x_v_address1 = r_x_v_addr_13_reg_1721;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_x_v_address1 = r_x_v_addr_11_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_x_v_address1 = r_x_v_addr_9_reg_1641;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_x_v_address1 = r_x_v_addr_7_reg_1601;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_x_v_address1 = r_x_v_addr_5_reg_1561;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_x_v_address1 = r_x_v_addr_3_reg_1521;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_x_v_address1 = r_x_v_addr_1_reg_1491;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_x_v_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_x_v_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_x_v_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_x_v_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_x_v_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_x_v_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_x_v_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_x_v_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_x_v_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_x_v_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_x_v_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_x_v_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_x_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_x_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_x_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        r_x_v_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_address1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
    end else begin
        r_x_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_x_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        r_x_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_x_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_x_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
    end else begin
        r_x_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_x_v_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_ce1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
    end else begin
        r_x_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_x_v_d0 = r_temp_x_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_d0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
    end else begin
        r_x_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_x_v_d1 = r_temp_x_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_d1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
    end else begin
        r_x_v_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_x_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_we0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
    end else begin
        r_x_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_x_v_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        r_x_v_we1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
    end else begin
        r_x_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        r_y_v_address0 = r_y_v_addr_30_reg_2096;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        r_y_v_address0 = r_y_v_addr_28_reg_2056;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_y_v_address0 = r_y_v_addr_26_reg_2016;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_y_v_address0 = r_y_v_addr_24_reg_1976;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_y_v_address0 = r_y_v_addr_22_reg_1936;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_y_v_address0 = r_y_v_addr_20_reg_1896;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_y_v_address0 = r_y_v_addr_18_reg_1856;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_y_v_address0 = r_y_v_addr_16_reg_1816;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_y_v_address0 = r_y_v_addr_14_reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_y_v_address0 = r_y_v_addr_12_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_y_v_address0 = r_y_v_addr_10_reg_1696;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_y_v_address0 = r_y_v_addr_8_reg_1656;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_y_v_address0 = r_y_v_addr_6_reg_1616;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_y_v_address0 = r_y_v_addr_4_reg_1576;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_y_v_address0 = r_y_v_addr_2_reg_1536;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_y_v_address0 = r_y_v_addr_reg_1496;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_y_v_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_y_v_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_y_v_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_y_v_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_y_v_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_y_v_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_y_v_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_y_v_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_y_v_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_y_v_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_y_v_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_y_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_y_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_y_v_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_y_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        r_y_v_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        r_y_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_y_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_y_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
    end else begin
        r_y_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        r_y_v_address1 = r_y_v_addr_31_reg_2101;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        r_y_v_address1 = r_y_v_addr_29_reg_2061;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        r_y_v_address1 = r_y_v_addr_27_reg_2021;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        r_y_v_address1 = r_y_v_addr_25_reg_1981;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        r_y_v_address1 = r_y_v_addr_23_reg_1941;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        r_y_v_address1 = r_y_v_addr_21_reg_1901;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        r_y_v_address1 = r_y_v_addr_19_reg_1861;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        r_y_v_address1 = r_y_v_addr_17_reg_1821;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        r_y_v_address1 = r_y_v_addr_15_reg_1781;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        r_y_v_address1 = r_y_v_addr_13_reg_1741;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        r_y_v_address1 = r_y_v_addr_11_reg_1701;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        r_y_v_address1 = r_y_v_addr_9_reg_1661;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        r_y_v_address1 = r_y_v_addr_7_reg_1621;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r_y_v_address1 = r_y_v_addr_5_reg_1581;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        r_y_v_address1 = r_y_v_addr_3_reg_1541;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_y_v_address1 = r_y_v_addr_1_reg_1501;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_y_v_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_y_v_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_y_v_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r_y_v_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_y_v_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_y_v_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_y_v_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_y_v_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_y_v_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_y_v_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_y_v_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_y_v_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_y_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_y_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r_y_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        r_y_v_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_y_v_address1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_address1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
    end else begin
        r_y_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_y_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        r_y_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_y_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        r_y_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
    end else begin
        r_y_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_y_v_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_y_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_ce1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
    end else begin
        r_y_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_y_v_d0 = r_temp_y_v_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_d0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
    end else begin
        r_y_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_y_v_d1 = r_temp_y_v_q1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_d1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
    end else begin
        r_y_v_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_y_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_we0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
    end else begin
        r_y_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        r_y_v_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        r_y_v_we1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
    end else begin
        r_y_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        r_z_v_address0 = tmp_i_fu_1458_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        r_z_v_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_z_v_address0 = grp_crypto_sign_ed25519_11_fu_1440_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        r_z_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
    end else begin
        r_z_v_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        r_z_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        r_z_v_ce0 = grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        r_z_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
    end else begin
        r_z_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_z_v_ce1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
    end else begin
        r_z_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        r_z_v_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        r_z_v_d0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        r_z_v_d0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
    end else begin
        r_z_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state37) & (exitcond_i_fu_1452_p2 == 1'd0)) | (1'b1 == ap_CS_fsm_state36))) begin
        r_z_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        r_z_v_we0 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
    end else begin
        r_z_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        r_z_v_we1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
    end else begin
        r_z_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t1_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        t1_v_address0 = grp_crypto_sign_ed25519_17_fu_1402_y_v_address0;
    end else begin
        t1_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t1_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        t1_v_ce0 = grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0;
    end else begin
        t1_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t1_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
    end else begin
        t1_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t1_v_we0 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
    end else begin
        t1_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t1_v_we1 = grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
    end else begin
        t1_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t2_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        t2_v_address0 = grp_crypto_sign_ed25519_17_fu_1402_y_v_address0;
    end else begin
        t2_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t2_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        t2_v_ce0 = grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0;
    end else begin
        t2_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t2_v_ce1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
    end else begin
        t2_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t2_v_we0 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
    end else begin
        t2_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t2_v_we1 = grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
    end else begin
        t2_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t_x_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        t_x_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        t_x_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_x_v_address0 = grp_choose_t_fu_1365_t_x_v_address0;
    end else begin
        t_x_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t_x_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        t_x_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        t_x_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_x_v_ce0 = grp_choose_t_fu_1365_t_x_v_ce0;
    end else begin
        t_x_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_x_v_ce1 = grp_choose_t_fu_1365_t_x_v_ce1;
    end else begin
        t_x_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_x_v_we0 = grp_choose_t_fu_1365_t_x_v_we0;
    end else begin
        t_x_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_x_v_we1 = grp_choose_t_fu_1365_t_x_v_we1;
    end else begin
        t_x_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t_y_v_address0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        t_y_v_address0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        t_y_v_address0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_y_v_address0 = grp_choose_t_fu_1365_t_y_v_address0;
    end else begin
        t_y_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t_y_v_address1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_y_v_address1 = grp_choose_t_fu_1365_t_y_v_address1;
    end else begin
        t_y_v_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        t_y_v_ce0 = grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        t_y_v_ce0 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        t_y_v_ce0 = grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_y_v_ce0 = grp_choose_t_fu_1365_t_y_v_ce0;
    end else begin
        t_y_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        t_y_v_ce1 = grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_y_v_ce1 = grp_choose_t_fu_1365_t_y_v_ce1;
    end else begin
        t_y_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_y_v_we0 = grp_choose_t_fu_1365_t_y_v_we0;
    end else begin
        t_y_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_y_v_we1 = grp_choose_t_fu_1365_t_y_v_we1;
    end else begin
        t_y_v_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_crypto_sign_ed25519_14_fu_1424_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (grp_choose_t_fu_1365_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (exitcond_i_fu_1452_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (grp_crypto_sign_ed25519_18_fu_1380_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1469_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (ap_block_state41_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (ap_block_state43_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (ap_block_state45_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (ap_block_state47_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (ap_block_state49_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (ap_block_state51_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (ap_block_state53_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_crypto_sign_ed25519_18_fu_1380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (ap_block_state57_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state41_on_subcall_done = ((1'b0 == grp_choose_t_fu_1365_ap_done) | (1'b0 == grp_crypto_sign_ed25519_8_fu_1415_ap_done) | (1'b0 == grp_crypto_sign_ed25519_11_fu_1440_ap_done));
end

always @ (*) begin
    ap_block_state43_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_18_fu_1380_ap_done) | (1'b0 == grp_crypto_sign_ed25519_12_fu_1431_ap_done));
end

always @ (*) begin
    ap_block_state45_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_18_fu_1380_ap_done) | (1'b0 == grp_crypto_sign_ed25519_8_fu_1415_ap_done));
end

always @ (*) begin
    ap_block_state47_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_12_fu_1431_ap_done) | (1'b0 == grp_crypto_sign_ed25519_17_fu_1402_ap_done) | (1'b0 == grp_crypto_sign_ed25519_17_fu_1408_ap_done));
end

always @ (*) begin
    ap_block_state49_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_8_fu_1415_ap_done) | (1'b0 == grp_crypto_sign_ed25519_17_fu_1402_ap_done));
end

always @ (*) begin
    ap_block_state51_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_8_fu_1415_ap_done) | (1'b0 == grp_crypto_sign_ed25519_12_fu_1431_ap_done));
end

always @ (*) begin
    ap_block_state53_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_18_fu_1380_ap_done) | (1'b0 == grp_crypto_sign_ed25519_12_fu_1431_ap_done));
end

always @ (*) begin
    ap_block_state57_on_subcall_done = ((1'b0 == grp_crypto_sign_ed25519_18_fu_1380_ap_done) | (1'b0 == grp_crypto_sign_ed25519_18_fu_1394_ap_done));
end

assign exitcond_fu_1469_p2 = ((i_reg_1353 == 7'd85) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1452_p2 = ((i_i_reg_1342 == 6'd32) ? 1'b1 : 1'b0);

assign grp_choose_t_fu_1365_ap_start = ap_reg_grp_choose_t_fu_1365_ap_start;

assign grp_crypto_sign_ed25519_11_fu_1440_ap_start = ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start;

assign grp_crypto_sign_ed25519_12_fu_1431_ap_start = ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start;

assign grp_crypto_sign_ed25519_14_fu_1424_ap_start = ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start;

assign grp_crypto_sign_ed25519_17_fu_1402_ap_start = ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start;

assign grp_crypto_sign_ed25519_17_fu_1408_ap_start = ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start;

assign grp_crypto_sign_ed25519_18_fu_1380_ap_start = ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start;

assign grp_crypto_sign_ed25519_18_fu_1394_ap_start = ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start;

assign grp_crypto_sign_ed25519_8_fu_1415_ap_start = ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start;

assign i_57_fu_1463_p2 = (i_i_reg_1342 + 6'd1);

assign i_58_fu_1480_p2 = (i_reg_1353 + 7'd1);

assign r_temp_x_v_addr_10_reg_1706 = 64'd10;

assign r_temp_x_v_addr_11_reg_1711 = 64'd11;

assign r_temp_x_v_addr_12_reg_1746 = 64'd12;

assign r_temp_x_v_addr_13_reg_1751 = 64'd13;

assign r_temp_x_v_addr_14_reg_1786 = 64'd14;

assign r_temp_x_v_addr_15_reg_1791 = 64'd15;

assign r_temp_x_v_addr_16_reg_1826 = 64'd16;

assign r_temp_x_v_addr_17_reg_1831 = 64'd17;

assign r_temp_x_v_addr_18_reg_1866 = 64'd18;

assign r_temp_x_v_addr_19_reg_1871 = 64'd19;

assign r_temp_x_v_addr_1_reg_1511 = 64'd1;

assign r_temp_x_v_addr_20_reg_1906 = 64'd20;

assign r_temp_x_v_addr_21_reg_1911 = 64'd21;

assign r_temp_x_v_addr_22_reg_1946 = 64'd22;

assign r_temp_x_v_addr_23_reg_1951 = 64'd23;

assign r_temp_x_v_addr_24_reg_1986 = 64'd24;

assign r_temp_x_v_addr_25_reg_1991 = 64'd25;

assign r_temp_x_v_addr_26_reg_2026 = 64'd26;

assign r_temp_x_v_addr_27_reg_2031 = 64'd27;

assign r_temp_x_v_addr_28_reg_2066 = 64'd28;

assign r_temp_x_v_addr_29_reg_2071 = 64'd29;

assign r_temp_x_v_addr_2_reg_1546 = 64'd2;

assign r_temp_x_v_addr_30_reg_2111 = 64'd30;

assign r_temp_x_v_addr_31_reg_2116 = 64'd31;

assign r_temp_x_v_addr_3_reg_1551 = 64'd3;

assign r_temp_x_v_addr_4_reg_1586 = 64'd4;

assign r_temp_x_v_addr_5_reg_1591 = 64'd5;

assign r_temp_x_v_addr_6_reg_1626 = 64'd6;

assign r_temp_x_v_addr_7_reg_1631 = 64'd7;

assign r_temp_x_v_addr_8_reg_1666 = 64'd8;

assign r_temp_x_v_addr_9_reg_1671 = 64'd9;

assign r_temp_x_v_addr_reg_1506 = 64'd0;

assign r_temp_y_v_addr_10_reg_1726 = 64'd10;

assign r_temp_y_v_addr_11_reg_1731 = 64'd11;

assign r_temp_y_v_addr_12_reg_1766 = 64'd12;

assign r_temp_y_v_addr_13_reg_1771 = 64'd13;

assign r_temp_y_v_addr_14_reg_1806 = 64'd14;

assign r_temp_y_v_addr_15_reg_1811 = 64'd15;

assign r_temp_y_v_addr_16_reg_1846 = 64'd16;

assign r_temp_y_v_addr_17_reg_1851 = 64'd17;

assign r_temp_y_v_addr_18_reg_1886 = 64'd18;

assign r_temp_y_v_addr_19_reg_1891 = 64'd19;

assign r_temp_y_v_addr_1_reg_1531 = 64'd1;

assign r_temp_y_v_addr_20_reg_1926 = 64'd20;

assign r_temp_y_v_addr_21_reg_1931 = 64'd21;

assign r_temp_y_v_addr_22_reg_1966 = 64'd22;

assign r_temp_y_v_addr_23_reg_1971 = 64'd23;

assign r_temp_y_v_addr_24_reg_2006 = 64'd24;

assign r_temp_y_v_addr_25_reg_2011 = 64'd25;

assign r_temp_y_v_addr_26_reg_2046 = 64'd26;

assign r_temp_y_v_addr_27_reg_2051 = 64'd27;

assign r_temp_y_v_addr_28_reg_2086 = 64'd28;

assign r_temp_y_v_addr_29_reg_2091 = 64'd29;

assign r_temp_y_v_addr_2_reg_1566 = 64'd2;

assign r_temp_y_v_addr_30_reg_2121 = 64'd30;

assign r_temp_y_v_addr_31_reg_2126 = 64'd31;

assign r_temp_y_v_addr_3_reg_1571 = 64'd3;

assign r_temp_y_v_addr_4_reg_1606 = 64'd4;

assign r_temp_y_v_addr_5_reg_1611 = 64'd5;

assign r_temp_y_v_addr_6_reg_1646 = 64'd6;

assign r_temp_y_v_addr_7_reg_1651 = 64'd7;

assign r_temp_y_v_addr_8_reg_1686 = 64'd8;

assign r_temp_y_v_addr_9_reg_1691 = 64'd9;

assign r_temp_y_v_addr_reg_1526 = 64'd0;

assign r_x_v_addr_10_reg_1676 = 64'd10;

assign r_x_v_addr_11_reg_1681 = 64'd11;

assign r_x_v_addr_12_reg_1716 = 64'd12;

assign r_x_v_addr_13_reg_1721 = 64'd13;

assign r_x_v_addr_14_reg_1756 = 64'd14;

assign r_x_v_addr_15_reg_1761 = 64'd15;

assign r_x_v_addr_16_reg_1796 = 64'd16;

assign r_x_v_addr_17_reg_1801 = 64'd17;

assign r_x_v_addr_18_reg_1836 = 64'd18;

assign r_x_v_addr_19_reg_1841 = 64'd19;

assign r_x_v_addr_1_reg_1491 = 64'd1;

assign r_x_v_addr_20_reg_1876 = 64'd20;

assign r_x_v_addr_21_reg_1881 = 64'd21;

assign r_x_v_addr_22_reg_1916 = 64'd22;

assign r_x_v_addr_23_reg_1921 = 64'd23;

assign r_x_v_addr_24_reg_1956 = 64'd24;

assign r_x_v_addr_25_reg_1961 = 64'd25;

assign r_x_v_addr_26_reg_1996 = 64'd26;

assign r_x_v_addr_27_reg_2001 = 64'd27;

assign r_x_v_addr_28_reg_2036 = 64'd28;

assign r_x_v_addr_29_reg_2041 = 64'd29;

assign r_x_v_addr_2_reg_1516 = 64'd2;

assign r_x_v_addr_30_reg_2076 = 64'd30;

assign r_x_v_addr_31_reg_2081 = 64'd31;

assign r_x_v_addr_3_reg_1521 = 64'd3;

assign r_x_v_addr_4_reg_1556 = 64'd4;

assign r_x_v_addr_5_reg_1561 = 64'd5;

assign r_x_v_addr_6_reg_1596 = 64'd6;

assign r_x_v_addr_7_reg_1601 = 64'd7;

assign r_x_v_addr_8_reg_1636 = 64'd8;

assign r_x_v_addr_9_reg_1641 = 64'd9;

assign r_x_v_addr_reg_1486 = 64'd0;

assign r_y_v_addr_10_reg_1696 = 64'd10;

assign r_y_v_addr_11_reg_1701 = 64'd11;

assign r_y_v_addr_12_reg_1736 = 64'd12;

assign r_y_v_addr_13_reg_1741 = 64'd13;

assign r_y_v_addr_14_reg_1776 = 64'd14;

assign r_y_v_addr_15_reg_1781 = 64'd15;

assign r_y_v_addr_16_reg_1816 = 64'd16;

assign r_y_v_addr_17_reg_1821 = 64'd17;

assign r_y_v_addr_18_reg_1856 = 64'd18;

assign r_y_v_addr_19_reg_1861 = 64'd19;

assign r_y_v_addr_1_reg_1501 = 64'd1;

assign r_y_v_addr_20_reg_1896 = 64'd20;

assign r_y_v_addr_21_reg_1901 = 64'd21;

assign r_y_v_addr_22_reg_1936 = 64'd22;

assign r_y_v_addr_23_reg_1941 = 64'd23;

assign r_y_v_addr_24_reg_1976 = 64'd24;

assign r_y_v_addr_25_reg_1981 = 64'd25;

assign r_y_v_addr_26_reg_2016 = 64'd26;

assign r_y_v_addr_27_reg_2021 = 64'd27;

assign r_y_v_addr_28_reg_2056 = 64'd28;

assign r_y_v_addr_29_reg_2061 = 64'd29;

assign r_y_v_addr_2_reg_1536 = 64'd2;

assign r_y_v_addr_30_reg_2096 = 64'd30;

assign r_y_v_addr_31_reg_2101 = 64'd31;

assign r_y_v_addr_3_reg_1541 = 64'd3;

assign r_y_v_addr_4_reg_1576 = 64'd4;

assign r_y_v_addr_5_reg_1581 = 64'd5;

assign r_y_v_addr_6_reg_1616 = 64'd6;

assign r_y_v_addr_7_reg_1621 = 64'd7;

assign r_y_v_addr_8_reg_1656 = 64'd8;

assign r_y_v_addr_9_reg_1661 = 64'd9;

assign r_y_v_addr_reg_1496 = 64'd0;

assign r_z_v_address1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;

assign r_z_v_d1 = grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;

assign s_v_address0 = grp_crypto_sign_ed25519_14_fu_1424_s_v_address0;

assign s_v_address1 = grp_crypto_sign_ed25519_14_fu_1424_s_v_address1;

assign s_v_ce0 = grp_crypto_sign_ed25519_14_fu_1424_s_v_ce0;

assign s_v_ce1 = grp_crypto_sign_ed25519_14_fu_1424_s_v_ce1;

assign tmp_fu_1475_p1 = i_reg_1353;

assign tmp_i_fu_1458_p1 = i_i_reg_1342;

endmodule //crypto_sign_ed25519_13
