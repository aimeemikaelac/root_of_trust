

================================================================
== Vivado HLS Report for 'secure_enclave_key_store_aes_gcm_cipher'
================================================================
* Date:           Sun Jan  8 14:28:35 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        secure_enclave_key_store
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.87|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  618497|  618497|  618497|  618497|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |             |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  618496|  618496|       151|          -|          -|  4096|    no    |
        | + Loop 1.1  |     128|     128|         1|          -|          -|   128|    no    |
        | + Loop 1.2  |     128|     128|         1|          -|          -|   128|    no    |
        +-------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 25
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / (!encrypt_read)
	25  / (encrypt_read)
24 --> 
	2  / (exitcond_i_i7)
	24  / (!exitcond_i_i7)
25 --> 
	2  / (exitcond_i_i)
	25  / (!exitcond_i_i)
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: encrypt_read [1/1] 0.00ns
:0  %encrypt_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %encrypt)

ST_1: hash_key_V_read [1/1] 0.00ns
:1  %hash_key_V_read = call i128 @_ssdm_op_Read.ap_auto.i128(i128 %hash_key_V)

ST_1: counter_V_read [1/1] 0.00ns
:2  %counter_V_read = call i128 @_ssdm_op_Read.ap_auto.i128(i128 %counter_V)

ST_1: key_V_read [1/1] 0.00ns
:3  %key_V_read = call i128 @_ssdm_op_Read.ap_auto.i128(i128 %key_V)

ST_1: stg_30 [1/1] 1.57ns
:4  br label %ghash_iteration.exit


 <State 2>: 2.18ns
ST_2: p_Val2_s [1/1] 0.00ns
ghash_iteration.exit:0  %p_Val2_s = phi i128 [ %counter_V_read, %0 ], [ %agg_result_V_i, %5 ], [ %agg_result_V_i, %3 ]

ST_2: lhs_V_3 [1/1] 0.00ns
ghash_iteration.exit:1  %lhs_V_3 = phi i128 [ 0, %0 ], [ %agg_result_V_i_i3, %5 ], [ %agg_result_V_i_i, %3 ]

ST_2: encrypt_iterations [1/1] 0.00ns
ghash_iteration.exit:2  %encrypt_iterations = phi i13 [ 0, %0 ], [ %encrypt_iterations_1, %5 ], [ %encrypt_iterations_1, %3 ]

ST_2: exitcond [1/1] 2.18ns
ghash_iteration.exit:3  %exitcond = icmp eq i13 %encrypt_iterations, -4096

ST_2: empty [1/1] 0.00ns
ghash_iteration.exit:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096)

ST_2: encrypt_iterations_1 [1/1] 1.96ns
ghash_iteration.exit:5  %encrypt_iterations_1 = add i13 %encrypt_iterations, 1

ST_2: stg_37 [1/1] 0.00ns
ghash_iteration.exit:6  br i1 %exitcond, label %6, label %1

ST_2: tmp_6 [1/1] 0.00ns
:0  %tmp_6 = trunc i128 %p_Val2_s to i1

ST_2: stg_39 [1/1] 0.00ns
:0  ret i128 %lhs_V_3


 <State 3>: 3.78ns
ST_3: tmp_i_cast [1/1] 0.00ns
:1  %tmp_i_cast = zext i1 %tmp_6 to i6

ST_3: r_V_14 [1/1] 1.37ns
:2  %r_V_14 = xor i6 %tmp_i_cast, -31

ST_3: agg_result_V_i [1/1] 0.00ns
:3  %agg_result_V_i = zext i6 %r_V_14 to i128

ST_3: encrypted_counter_out_V [20/20] 2.41ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 4>: 7.87ns
ST_4: encrypted_counter_out_V [19/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 5>: 7.87ns
ST_5: encrypted_counter_out_V [18/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 6>: 7.87ns
ST_6: encrypted_counter_out_V [17/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 7>: 7.87ns
ST_7: encrypted_counter_out_V [16/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 8>: 7.87ns
ST_8: encrypted_counter_out_V [15/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 9>: 7.87ns
ST_9: encrypted_counter_out_V [14/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 10>: 7.87ns
ST_10: encrypted_counter_out_V [13/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 11>: 7.87ns
ST_11: encrypted_counter_out_V [12/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 12>: 7.87ns
ST_12: encrypted_counter_out_V [11/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 13>: 7.87ns
ST_13: encrypted_counter_out_V [10/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 14>: 7.87ns
ST_14: encrypted_counter_out_V [9/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 15>: 7.87ns
ST_15: encrypted_counter_out_V [8/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 16>: 7.87ns
ST_16: encrypted_counter_out_V [7/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 17>: 7.87ns
ST_17: encrypted_counter_out_V [6/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 18>: 7.87ns
ST_18: encrypted_counter_out_V [5/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 19>: 7.87ns
ST_19: encrypted_counter_out_V [4/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 20>: 7.87ns
ST_20: encrypted_counter_out_V [3/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 21>: 7.87ns
ST_21: encrypted_counter_out_V [2/20] 7.87ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)


 <State 22>: 6.50ns
ST_22: encrypted_counter_out_V [1/20] 6.50ns
:4  %encrypted_counter_out_V = call fastcc i128 @secure_enclave_key_store_aes(i128 %agg_result_V_i, i128 %key_V_read)

ST_22: tmp [1/1] 0.00ns
:5  %tmp = zext i13 %encrypt_iterations to i64

ST_22: data_in_V_addr [1/1] 0.00ns
:6  %data_in_V_addr = getelementptr [256 x i128]* %data_in_V, i64 0, i64 %tmp

ST_22: rhs_V [2/2] 2.71ns
:7  %rhs_V = load i128* %data_in_V_addr, align 8


 <State 23>: 7.02ns
ST_23: rhs_V [1/2] 2.71ns
:7  %rhs_V = load i128* %data_in_V_addr, align 8

ST_23: r_V_15 [1/1] 1.37ns
:8  %r_V_15 = xor i128 %rhs_V, %encrypted_counter_out_V

ST_23: data_out_V_addr [1/1] 0.00ns
:9  %data_out_V_addr = getelementptr [256 x i128]* %data_out_V, i64 0, i64 %tmp

ST_23: stg_69 [1/1] 2.71ns
:10  store i128 %r_V_15, i128* %data_out_V_addr, align 16

ST_23: stg_70 [1/1] 0.00ns
:11  br i1 %encrypt_read, label %2, label %4

ST_23: r_V [1/1] 1.37ns
:0  %r_V = xor i128 %rhs_V, %lhs_V_3

ST_23: stg_72 [1/1] 1.57ns
:1  br label %5

ST_23: r_V_16 [1/1] 1.37ns
:0  %r_V_16 = xor i128 %r_V_15, %lhs_V_3

ST_23: stg_74 [1/1] 1.57ns
:1  br label %3


 <State 24>: 2.74ns
ST_24: agg_result_V_i_i3 [1/1] 0.00ns
:0  %agg_result_V_i_i3 = phi i128 [ 0, %4 ], [ %agg_result_V_0_r_V_i_i1, %._crit_edge.i.i16 ]

ST_24: lhs_V_5 [1/1] 0.00ns
:1  %lhs_V_5 = phi i128 [ 0, %4 ], [ %lhs_V_r_V_i_i1, %._crit_edge.i.i16 ]

ST_24: rhs_V_4 [1/1] 0.00ns
:2  %rhs_V_4 = phi i128 [ %r_V, %4 ], [ %r_V_13, %._crit_edge.i.i16 ]

ST_24: i_assign_1 [1/1] 0.00ns
:3  %i_assign_1 = phi i8 [ 0, %4 ], [ %i_4, %._crit_edge.i.i16 ]

ST_24: i_assign_1_cast1 [1/1] 0.00ns
:4  %i_assign_1_cast1 = zext i8 %i_assign_1 to i32

ST_24: exitcond_i_i7 [1/1] 2.00ns
:5  %exitcond_i_i7 = icmp eq i8 %i_assign_1, -128

ST_24: empty_10 [1/1] 0.00ns
:6  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_24: i_4 [1/1] 1.72ns
:7  %i_4 = add i8 %i_assign_1, 1

ST_24: stg_83 [1/1] 0.00ns
:8  br i1 %exitcond_i_i7, label %ghash_iteration.exit, label %._crit_edge.i.i16

ST_24: tmp_8 [1/1] 0.00ns
._crit_edge.i.i16:0  %tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i128.i32(i128 %hash_key_V_read, i32 %i_assign_1_cast1)

ST_24: z_V_1 [1/1] 1.37ns
._crit_edge.i.i16:1  %z_V_1 = xor i128 %lhs_V_5, %rhs_V_4

ST_24: agg_result_V_0_r_V_i_i1 [1/1] 1.37ns
._crit_edge.i.i16:2  %agg_result_V_0_r_V_i_i1 = select i1 %tmp_8, i128 %z_V_1, i128 %agg_result_V_i_i3

ST_24: lhs_V_r_V_i_i1 [1/1] 1.37ns
._crit_edge.i.i16:3  %lhs_V_r_V_i_i1 = select i1 %tmp_8, i128 %z_V_1, i128 %lhs_V_5

ST_24: r_V_8 [1/1] 0.00ns
._crit_edge.i.i16:4  %r_V_8 = call i127 @_ssdm_op_PartSelect.i127.i128.i32.i32(i128 %rhs_V_4, i32 1, i32 127)

ST_24: r_V_13 [1/1] 0.00ns
._crit_edge.i.i16:5  %r_V_13 = zext i127 %r_V_8 to i128

ST_24: stg_90 [1/1] 0.00ns
._crit_edge.i.i16:6  br label %5


 <State 25>: 2.74ns
ST_25: agg_result_V_i_i [1/1] 0.00ns
:0  %agg_result_V_i_i = phi i128 [ 0, %2 ], [ %agg_result_V_0_r_V_i_i, %._crit_edge.i.i ]

ST_25: lhs_V_4 [1/1] 0.00ns
:1  %lhs_V_4 = phi i128 [ 0, %2 ], [ %lhs_V_r_V_i_i, %._crit_edge.i.i ]

ST_25: rhs_V_3 [1/1] 0.00ns
:2  %rhs_V_3 = phi i128 [ %r_V_16, %2 ], [ %r_V_11, %._crit_edge.i.i ]

ST_25: i_assign [1/1] 0.00ns
:3  %i_assign = phi i8 [ 0, %2 ], [ %i, %._crit_edge.i.i ]

ST_25: i_assign_cast2 [1/1] 0.00ns
:4  %i_assign_cast2 = zext i8 %i_assign to i32

ST_25: exitcond_i_i [1/1] 2.00ns
:5  %exitcond_i_i = icmp eq i8 %i_assign, -128

ST_25: empty_9 [1/1] 0.00ns
:6  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_25: i [1/1] 1.72ns
:7  %i = add i8 %i_assign, 1

ST_25: stg_99 [1/1] 0.00ns
:8  br i1 %exitcond_i_i, label %ghash_iteration.exit, label %._crit_edge.i.i

ST_25: tmp_7 [1/1] 0.00ns
._crit_edge.i.i:0  %tmp_7 = call i1 @_ssdm_op_BitSelect.i1.i128.i32(i128 %hash_key_V_read, i32 %i_assign_cast2)

ST_25: z_V [1/1] 1.37ns
._crit_edge.i.i:1  %z_V = xor i128 %lhs_V_4, %rhs_V_3

ST_25: agg_result_V_0_r_V_i_i [1/1] 1.37ns
._crit_edge.i.i:2  %agg_result_V_0_r_V_i_i = select i1 %tmp_7, i128 %z_V, i128 %agg_result_V_i_i

ST_25: lhs_V_r_V_i_i [1/1] 1.37ns
._crit_edge.i.i:3  %lhs_V_r_V_i_i = select i1 %tmp_7, i128 %z_V, i128 %lhs_V_4

ST_25: r_V_6 [1/1] 0.00ns
._crit_edge.i.i:4  %r_V_6 = call i127 @_ssdm_op_PartSelect.i127.i128.i32.i32(i128 %rhs_V_3, i32 1, i32 127)

ST_25: r_V_11 [1/1] 0.00ns
._crit_edge.i.i:5  %r_V_11 = zext i127 %r_V_6 to i128

ST_25: stg_106 [1/1] 0.00ns
._crit_edge.i.i:6  br label %3



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
