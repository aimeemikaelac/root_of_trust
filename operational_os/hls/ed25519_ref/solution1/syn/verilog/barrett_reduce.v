// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module barrett_reduce (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_v_address0,
        r_v_ce0,
        r_v_we0,
        r_v_d0,
        r_v_q0,
        x_address0,
        x_ce0,
        x_q0
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] r_v_address0;
output   r_v_ce0;
output   r_v_we0;
output  [31:0] r_v_d0;
input  [31:0] r_v_q0;
output  [5:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] r_v_address0;
reg r_v_ce0;
reg r_v_we0;
reg[31:0] r_v_d0;
reg[5:0] x_address0;
reg x_ce0;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] mu_address0;
reg    mu_ce0;
wire   [7:0] mu_q0;
reg   [4:0] m_address0;
reg    m_ce0;
wire   [7:0] m_q0;
wire   [6:0] i_84_fu_369_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] i_85_fu_386_p2;
wire    ap_CS_fsm_state3;
wire   [6:0] i_2_cast_fu_397_p1;
reg   [6:0] i_2_cast_reg_737;
wire    ap_CS_fsm_state4;
wire   [5:0] i_86_fu_407_p2;
reg   [5:0] i_86_reg_745;
wire   [0:0] exitcond6_fu_401_p2;
wire   [31:0] mu_load_cast_fu_418_p1;
reg   [31:0] mu_load_cast_reg_760;
wire    ap_CS_fsm_state5;
wire   [5:0] j_5_fu_432_p2;
reg   [5:0] j_5_reg_768;
wire    ap_CS_fsm_state6;
wire   [6:0] tmp_866_fu_438_p2;
reg   [6:0] tmp_866_reg_773;
wire   [0:0] exitcond5_fu_426_p2;
wire   [0:0] tmp_867_fu_443_p2;
reg   [0:0] tmp_867_reg_778;
wire   [31:0] tmp_870_fu_460_p2;
reg   [31:0] tmp_870_reg_787;
wire    ap_CS_fsm_state7;
reg   [6:0] q2_addr_4_reg_792;
reg   [23:0] carry_reg_797;
wire    ap_CS_fsm_state9;
wire   [5:0] i_87_fu_522_p2;
reg   [5:0] i_87_reg_817;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_865_fu_528_p1;
reg   [63:0] tmp_865_reg_822;
wire   [0:0] exitcond4_fu_516_p2;
wire   [5:0] i_88_fu_539_p2;
reg   [5:0] i_88_reg_835;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond3_fu_533_p2;
wire   [31:0] m_load_cast_fu_550_p1;
reg   [31:0] m_load_cast_reg_845;
wire    ap_CS_fsm_state14;
wire   [5:0] j_6_fu_560_p2;
reg   [5:0] j_6_reg_853;
wire    ap_CS_fsm_state15;
wire   [5:0] tmp_877_fu_566_p2;
reg   [5:0] tmp_877_reg_858;
wire   [0:0] exitcond2_fu_554_p2;
wire   [0:0] tmp_878_fu_572_p2;
reg   [0:0] tmp_878_reg_863;
wire   [31:0] tmp_879_fu_593_p2;
reg   [31:0] tmp_879_reg_872;
wire    ap_CS_fsm_state16;
reg   [5:0] r2_addr_3_reg_877;
wire   [5:0] i_89_fu_614_p2;
reg   [5:0] i_89_reg_885;
wire    ap_CS_fsm_state18;
reg   [5:0] r2_addr_1_reg_890;
wire   [0:0] exitcond1_fu_608_p2;
reg   [5:0] r2_addr_2_reg_895;
wire   [5:0] i_90_fu_666_p2;
reg   [5:0] i_90_reg_903;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_882_fu_672_p1;
reg   [63:0] tmp_882_reg_908;
wire   [0:0] exitcond_fu_660_p2;
wire   [0:0] tmp_886_fu_694_p3;
wire    ap_CS_fsm_state21;
reg   [6:0] q2_address0;
reg    q2_ce0;
reg    q2_we0;
reg   [31:0] q2_d0;
wire   [31:0] q2_q0;
reg   [6:0] q2_address1;
reg    q2_ce1;
reg    q2_we1;
wire   [31:0] q2_q1;
reg   [5:0] r1_address0;
reg    r1_ce0;
reg    r1_we0;
wire   [31:0] r1_q0;
reg   [5:0] r2_address0;
reg    r2_ce0;
reg    r2_we0;
reg   [31:0] r2_d0;
wire   [31:0] r2_q0;
reg   [5:0] r2_address1;
reg    r2_ce1;
reg    r2_we1;
wire   [31:0] r2_d1;
wire   [31:0] r2_q1;
wire    grp_reduce_add_sub_fu_355_ap_start;
wire    grp_reduce_add_sub_fu_355_ap_done;
wire    grp_reduce_add_sub_fu_355_ap_idle;
wire    grp_reduce_add_sub_fu_355_ap_ready;
wire   [4:0] grp_reduce_add_sub_fu_355_r_v_address0;
wire    grp_reduce_add_sub_fu_355_r_v_ce0;
wire    grp_reduce_add_sub_fu_355_r_v_we0;
wire   [31:0] grp_reduce_add_sub_fu_355_r_v_d0;
reg   [6:0] i_reg_243;
wire   [0:0] exitcond8_fu_363_p2;
reg   [5:0] i_1_reg_254;
wire   [0:0] exitcond7_fu_380_p2;
reg   [5:0] i_2_reg_265;
reg   [5:0] j_reg_276;
wire    ap_CS_fsm_state8;
reg   [5:0] i_3_reg_287;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
reg   [5:0] i_4_reg_298;
reg   [5:0] j_1_reg_310;
wire    ap_CS_fsm_state17;
reg   [5:0] i_5_reg_321;
wire    ap_CS_fsm_state19;
reg   [5:0] i_6_reg_332;
reg   [0:0] pb_reg_343;
reg    ap_reg_grp_reduce_add_sub_fu_355_ap_start;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_fu_375_p1;
wire   [63:0] tmp_s_fu_392_p1;
wire   [63:0] tmp_864_fu_413_p1;
wire   [63:0] tmp_869_fu_455_p1;
wire   [63:0] tmp_871_fu_465_p1;
wire   [63:0] tmp_873_fu_545_p1;
wire   [63:0] q3_0_sum_cast_fu_588_p1;
wire   [63:0] tmp_880_fu_598_p1;
wire   [63:0] tmp_874_fu_620_p1;
wire   [63:0] tmp_875_fu_625_p1;
wire   [31:0] tmp_872_fu_469_p2;
wire   [31:0] tmp_862_fu_488_p2;
wire   [31:0] tmp_863_fu_509_p2;
wire   [31:0] tmp_881_fu_602_p2;
wire   [31:0] tmp_924_cast_fu_655_p1;
wire   [31:0] tmp_884_fu_714_p2;
wire   [6:0] j_cast_fu_422_p1;
wire   [5:0] tmp_868_fu_449_p2;
wire   [7:0] tmp_870_fu_460_p0;
wire  signed [31:0] tmp_870_fu_460_p1;
wire   [31:0] carry_4_fu_485_p1;
wire   [23:0] carry_2_fu_495_p4;
wire   [31:0] carry_5_fu_505_p1;
wire   [6:0] tmp_927_cast_fu_578_p1;
wire   [6:0] q3_0_sum_fu_582_p2;
wire   [7:0] tmp_879_fu_593_p0;
wire  signed [31:0] tmp_879_fu_593_p1;
wire   [23:0] carry_3_fu_634_p4;
wire   [31:0] carry_6_fu_644_p1;
wire   [7:0] tmp_885_fu_630_p1;
wire   [31:0] pb_cast1_fu_678_p1;
wire   [31:0] pb_2_fu_682_p2;
wire   [31:0] x_15_fu_688_p2;
wire   [8:0] tmp_883_fu_702_p3;
wire   [31:0] tmp_932_cast_fu_710_p1;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 ap_reg_grp_reduce_add_sub_fu_355_ap_start = 1'b0;
end

barrett_reduce_mu #(
    .DataWidth( 8 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
mu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mu_address0),
    .ce0(mu_ce0),
    .q0(mu_q0)
);

reduce_add_sub_m #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
m_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_address0),
    .ce0(m_ce0),
    .q0(m_q0)
);

barrett_reduce_q2 #(
    .DataWidth( 32 ),
    .AddressRange( 66 ),
    .AddressWidth( 7 ))
q2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q2_address0),
    .ce0(q2_ce0),
    .we0(q2_we0),
    .d0(q2_d0),
    .q0(q2_q0),
    .address1(q2_address1),
    .ce1(q2_ce1),
    .we1(q2_we1),
    .d1(tmp_862_fu_488_p2),
    .q1(q2_q1)
);

barrett_reduce_r1 #(
    .DataWidth( 32 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
r1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r1_address0),
    .ce0(r1_ce0),
    .we0(r1_we0),
    .d0(x_q0),
    .q0(r1_q0)
);

barrett_reduce_r2 #(
    .DataWidth( 32 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
r2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r2_address0),
    .ce0(r2_ce0),
    .we0(r2_we0),
    .d0(r2_d0),
    .q0(r2_q0),
    .address1(r2_address1),
    .ce1(r2_ce1),
    .we1(r2_we1),
    .d1(r2_d1),
    .q1(r2_q1)
);

reduce_add_sub grp_reduce_add_sub_fu_355(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_add_sub_fu_355_ap_start),
    .ap_done(grp_reduce_add_sub_fu_355_ap_done),
    .ap_idle(grp_reduce_add_sub_fu_355_ap_idle),
    .ap_ready(grp_reduce_add_sub_fu_355_ap_ready),
    .r_v_address0(grp_reduce_add_sub_fu_355_r_v_address0),
    .r_v_ce0(grp_reduce_add_sub_fu_355_r_v_ce0),
    .r_v_we0(grp_reduce_add_sub_fu_355_r_v_we0),
    .r_v_d0(grp_reduce_add_sub_fu_355_r_v_d0),
    .r_v_q0(r_v_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_reduce_add_sub_fu_355_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state20) & (1'd1 == exitcond_fu_660_p2)) | (1'b1 == ap_CS_fsm_state23))) begin
            ap_reg_grp_reduce_add_sub_fu_355_ap_start <= 1'b1;
        end else if ((1'b1 == grp_reduce_add_sub_fu_355_ap_ready)) begin
            ap_reg_grp_reduce_add_sub_fu_355_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond8_fu_363_p2))) begin
        i_1_reg_254 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond7_fu_380_p2))) begin
        i_1_reg_254 <= i_85_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == exitcond7_fu_380_p2))) begin
        i_2_reg_265 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond5_fu_426_p2))) begin
        i_2_reg_265 <= i_86_reg_745;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_3_reg_287 <= i_87_reg_817;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_287 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == exitcond4_fu_516_p2))) begin
        i_4_reg_298 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond2_fu_554_p2))) begin
        i_4_reg_298 <= i_88_reg_835;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == exitcond3_fu_533_p2))) begin
        i_5_reg_321 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_5_reg_321 <= i_89_reg_885;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == exitcond1_fu_608_p2))) begin
        i_6_reg_332 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_6_reg_332 <= i_90_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond8_fu_363_p2))) begin
        i_reg_243 <= i_84_fu_369_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_243 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_1_reg_310 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        j_1_reg_310 <= j_6_reg_853;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_reg_276 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_276 <= j_5_reg_768;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == exitcond1_fu_608_p2))) begin
        pb_reg_343 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        pb_reg_343 <= x_15_fu_688_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        carry_reg_797 <= {{q2_q0[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_2_cast_reg_737[5 : 0] <= i_2_cast_fu_397_p1[5 : 0];
        i_86_reg_745 <= i_86_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_87_reg_817 <= i_87_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_88_reg_835 <= i_88_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_89_reg_885 <= i_89_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_90_reg_903 <= i_90_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_5_reg_768 <= j_5_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_6_reg_853 <= j_6_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        m_load_cast_reg_845[7 : 0] <= m_load_cast_fu_550_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mu_load_cast_reg_760[7 : 0] <= mu_load_cast_fu_418_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        q2_addr_4_reg_792 <= tmp_871_fu_465_p1;
        tmp_870_reg_787 <= tmp_870_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_608_p2))) begin
        r2_addr_1_reg_890 <= tmp_874_fu_620_p1;
        r2_addr_2_reg_895 <= tmp_875_fu_625_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        r2_addr_3_reg_877 <= tmp_880_fu_598_p1;
        tmp_879_reg_872 <= tmp_879_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd0 == exitcond4_fu_516_p2))) begin
        tmp_865_reg_822[5 : 0] <= tmp_865_fu_528_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond5_fu_426_p2))) begin
        tmp_866_reg_773 <= tmp_866_fu_438_p2;
        tmp_867_reg_778 <= tmp_867_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond2_fu_554_p2))) begin
        tmp_877_reg_858 <= tmp_877_fu_566_p2;
        tmp_878_reg_863 <= tmp_878_fu_572_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'd0 == exitcond_fu_660_p2))) begin
        tmp_882_reg_908[5 : 0] <= tmp_882_fu_672_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state24) & (grp_reduce_add_sub_fu_355_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_reduce_add_sub_fu_355_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_address0 = tmp_873_fu_545_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        m_address0 = 5'd0;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        m_ce0 = 1'b0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mu_ce0 = 1'b1;
    end else begin
        mu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        q2_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        q2_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        q2_address0 = q2_addr_4_reg_792;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        q2_address0 = tmp_871_fu_465_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        q2_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        q2_address0 = tmp_fu_375_p1;
    end else begin
        q2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        q2_address1 = q3_0_sum_cast_fu_588_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        q2_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        q2_address1 = 64'd33;
    end else begin
        q2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        q2_ce0 = 1'b1;
    end else begin
        q2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10))) begin
        q2_ce1 = 1'b1;
    end else begin
        q2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        q2_d0 = tmp_863_fu_509_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        q2_d0 = tmp_872_fu_469_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        q2_d0 = 32'd0;
    end else begin
        q2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond8_fu_363_p2)) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state8) & (1'd1 == tmp_867_reg_778)))) begin
        q2_we0 = 1'b1;
    end else begin
        q2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        q2_we1 = 1'b1;
    end else begin
        q2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        r1_address0 = tmp_882_fu_672_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r1_address0 = tmp_865_reg_822;
    end else begin
        r1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12))) begin
        r1_ce0 = 1'b1;
    end else begin
        r1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        r1_we0 = 1'b1;
    end else begin
        r1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        r2_address0 = r2_addr_1_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        r2_address0 = tmp_874_fu_620_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r2_address0 = r2_addr_3_reg_877;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r2_address0 = tmp_880_fu_598_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r2_address0 = tmp_s_fu_392_p1;
    end else begin
        r2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        r2_address1 = tmp_882_fu_672_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r2_address1 = r2_addr_2_reg_895;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        r2_address1 = tmp_875_fu_625_p1;
    end else begin
        r2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19))) begin
        r2_ce0 = 1'b1;
    end else begin
        r2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        r2_ce1 = 1'b1;
    end else begin
        r2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        r2_d0 = tmp_924_cast_fu_655_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r2_d0 = tmp_881_fu_602_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r2_d0 = 32'd0;
    end else begin
        r2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond7_fu_380_p2)) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state17) & (1'd1 == tmp_878_reg_863)))) begin
        r2_we0 = 1'b1;
    end else begin
        r2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        r2_we1 = 1'b1;
    end else begin
        r2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_v_address0 = tmp_882_reg_908;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        r_v_address0 = grp_reduce_add_sub_fu_355_r_v_address0;
    end else begin
        r_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_v_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        r_v_ce0 = grp_reduce_add_sub_fu_355_r_v_ce0;
    end else begin
        r_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_v_d0 = tmp_884_fu_714_p2;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        r_v_d0 = grp_reduce_add_sub_fu_355_r_v_d0;
    end else begin
        r_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_v_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        r_v_we0 = grp_reduce_add_sub_fu_355_r_v_we0;
    end else begin
        r_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_address0 = tmp_865_fu_528_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x_address0 = tmp_869_fu_455_p1;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state11))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond8_fu_363_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == exitcond7_fu_380_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond5_fu_426_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond5_fu_426_p2) & (1'd0 == tmp_867_fu_443_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == exitcond4_fu_516_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == exitcond3_fu_533_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond2_fu_554_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond2_fu_554_p2) & (1'd0 == tmp_878_fu_572_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == exitcond1_fu_608_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'd1 == exitcond_fu_660_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_reduce_add_sub_fu_355_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_reduce_add_sub_fu_355_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign carry_2_fu_495_p4 = {{tmp_862_fu_488_p2[31:8]}};

assign carry_3_fu_634_p4 = {{r2_q0[31:8]}};

assign carry_4_fu_485_p1 = carry_reg_797;

assign carry_5_fu_505_p1 = carry_2_fu_495_p4;

assign carry_6_fu_644_p1 = carry_3_fu_634_p4;

assign exitcond1_fu_608_p2 = ((i_5_reg_321 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond2_fu_554_p2 = ((j_1_reg_310 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond3_fu_533_p2 = ((i_4_reg_298 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond4_fu_516_p2 = ((i_3_reg_287 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond5_fu_426_p2 = ((j_reg_276 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond6_fu_401_p2 = ((i_2_reg_265 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond7_fu_380_p2 = ((i_1_reg_254 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond8_fu_363_p2 = ((i_reg_243 == 7'd66) ? 1'b1 : 1'b0);

assign exitcond_fu_660_p2 = ((i_6_reg_332 == 6'd32) ? 1'b1 : 1'b0);

assign grp_reduce_add_sub_fu_355_ap_start = ap_reg_grp_reduce_add_sub_fu_355_ap_start;

assign i_2_cast_fu_397_p1 = i_2_reg_265;

assign i_84_fu_369_p2 = (i_reg_243 + 7'd1);

assign i_85_fu_386_p2 = (i_1_reg_254 + 6'd1);

assign i_86_fu_407_p2 = (i_2_reg_265 + 6'd1);

assign i_87_fu_522_p2 = (i_3_reg_287 + 6'd1);

assign i_88_fu_539_p2 = (i_4_reg_298 + 6'd1);

assign i_89_fu_614_p2 = (i_5_reg_321 + 6'd1);

assign i_90_fu_666_p2 = (i_6_reg_332 + 6'd1);

assign j_5_fu_432_p2 = (j_reg_276 + 6'd1);

assign j_6_fu_560_p2 = (j_1_reg_310 + 6'd1);

assign j_cast_fu_422_p1 = j_reg_276;

assign m_load_cast_fu_550_p1 = m_q0;

assign mu_address0 = tmp_864_fu_413_p1;

assign mu_load_cast_fu_418_p1 = mu_q0;

assign pb_2_fu_682_p2 = (r2_q1 + pb_cast1_fu_678_p1);

assign pb_cast1_fu_678_p1 = pb_reg_343;

assign q3_0_sum_cast_fu_588_p1 = q3_0_sum_fu_582_p2;

assign q3_0_sum_fu_582_p2 = (tmp_927_cast_fu_578_p1 + 7'd33);

assign r2_d1 = (carry_6_fu_644_p1 + r2_q1);

assign tmp_862_fu_488_p2 = (q2_q0 + carry_4_fu_485_p1);

assign tmp_863_fu_509_p2 = (q2_q1 + carry_5_fu_505_p1);

assign tmp_864_fu_413_p1 = i_2_reg_265;

assign tmp_865_fu_528_p1 = i_3_reg_287;

assign tmp_866_fu_438_p2 = (j_cast_fu_422_p1 + i_2_cast_reg_737);

assign tmp_867_fu_443_p2 = ((tmp_866_fu_438_p2 > 7'd30) ? 1'b1 : 1'b0);

assign tmp_868_fu_449_p2 = (j_reg_276 + 6'd31);

assign tmp_869_fu_455_p1 = tmp_868_fu_449_p2;

assign tmp_870_fu_460_p0 = mu_load_cast_reg_760;

assign tmp_870_fu_460_p1 = x_q0;

assign tmp_870_fu_460_p2 = ($signed({{1'b0}, {tmp_870_fu_460_p0}}) * $signed(tmp_870_fu_460_p1));

assign tmp_871_fu_465_p1 = tmp_866_reg_773;

assign tmp_872_fu_469_p2 = (q2_q0 + tmp_870_reg_787);

assign tmp_873_fu_545_p1 = i_4_reg_298;

assign tmp_874_fu_620_p1 = i_5_reg_321;

assign tmp_875_fu_625_p1 = i_89_fu_614_p2;

assign tmp_877_fu_566_p2 = (j_1_reg_310 + i_4_reg_298);

assign tmp_878_fu_572_p2 = ((tmp_877_fu_566_p2 < 6'd33) ? 1'b1 : 1'b0);

assign tmp_879_fu_593_p0 = m_load_cast_reg_845;

assign tmp_879_fu_593_p1 = q2_q1;

assign tmp_879_fu_593_p2 = ($signed({{1'b0}, {tmp_879_fu_593_p0}}) * $signed(tmp_879_fu_593_p1));

assign tmp_880_fu_598_p1 = tmp_877_reg_858;

assign tmp_881_fu_602_p2 = (r2_q0 + tmp_879_reg_872);

assign tmp_882_fu_672_p1 = i_6_reg_332;

assign tmp_883_fu_702_p3 = {{tmp_886_fu_694_p3}, {8'd0}};

assign tmp_884_fu_714_p2 = (tmp_932_cast_fu_710_p1 + x_15_fu_688_p2);

assign tmp_885_fu_630_p1 = r2_q0[7:0];

assign tmp_886_fu_694_p3 = x_15_fu_688_p2[32'd31];

assign tmp_924_cast_fu_655_p1 = tmp_885_fu_630_p1;

assign tmp_927_cast_fu_578_p1 = j_1_reg_310;

assign tmp_932_cast_fu_710_p1 = tmp_883_fu_702_p3;

assign tmp_fu_375_p1 = i_reg_243;

assign tmp_s_fu_392_p1 = i_1_reg_254;

assign x_15_fu_688_p2 = (r1_q0 - pb_2_fu_682_p2);

always @ (posedge ap_clk) begin
    i_2_cast_reg_737[6] <= 1'b0;
    mu_load_cast_reg_760[31:8] <= 24'b000000000000000000000000;
    tmp_865_reg_822[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    m_load_cast_reg_845[31:8] <= 24'b000000000000000000000000;
    tmp_882_reg_908[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //barrett_reduce
