// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fe_cmov.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fe_cmov::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fe_cmov::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> fe_cmov::ap_ST_fsm_state1 = "1";
const sc_lv<10> fe_cmov::ap_ST_fsm_state2 = "10";
const sc_lv<10> fe_cmov::ap_ST_fsm_state3 = "100";
const sc_lv<10> fe_cmov::ap_ST_fsm_state4 = "1000";
const sc_lv<10> fe_cmov::ap_ST_fsm_state5 = "10000";
const sc_lv<10> fe_cmov::ap_ST_fsm_state6 = "100000";
const sc_lv<10> fe_cmov::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> fe_cmov::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> fe_cmov::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> fe_cmov::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> fe_cmov::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fe_cmov::ap_const_lv32_1 = "1";
const sc_lv<32> fe_cmov::ap_const_lv32_5 = "101";
const sc_lv<32> fe_cmov::ap_const_lv32_2 = "10";
const sc_lv<32> fe_cmov::ap_const_lv32_6 = "110";
const sc_lv<32> fe_cmov::ap_const_lv32_7 = "111";
const sc_lv<32> fe_cmov::ap_const_lv32_3 = "11";
const sc_lv<32> fe_cmov::ap_const_lv32_4 = "100";
const sc_lv<32> fe_cmov::ap_const_lv32_8 = "1000";
const sc_lv<32> fe_cmov::ap_const_lv32_9 = "1001";
const sc_lv<12> fe_cmov::ap_const_lv12_2 = "10";
const sc_lv<12> fe_cmov::ap_const_lv12_3 = "11";
const sc_lv<12> fe_cmov::ap_const_lv12_4 = "100";
const sc_lv<12> fe_cmov::ap_const_lv12_5 = "101";
const sc_lv<12> fe_cmov::ap_const_lv12_6 = "110";
const sc_lv<12> fe_cmov::ap_const_lv12_7 = "111";
const sc_lv<12> fe_cmov::ap_const_lv12_8 = "1000";
const sc_lv<12> fe_cmov::ap_const_lv12_9 = "1001";
const sc_lv<3> fe_cmov::ap_const_lv3_0 = "000";
const sc_lv<1> fe_cmov::ap_const_lv1_0 = "0";
const sc_lv<12> fe_cmov::ap_const_lv12_1 = "1";
const sc_lv<32> fe_cmov::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const bool fe_cmov::ap_const_boolean_1 = true;

fe_cmov::fe_cmov(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_b_assign_cast_fu_442_p3);
    sensitive << ( b );

    SC_METHOD(thread_f_0_write_assign_fu_510_p2);
    sensitive << ( f_0_read );
    sensitive << ( x0_1_fu_450_p2 );

    SC_METHOD(thread_f_1_write_assign_fu_516_p2);
    sensitive << ( f_1_read );
    sensitive << ( x1_1_fu_456_p2 );

    SC_METHOD(thread_f_2_write_assign_fu_522_p2);
    sensitive << ( f_2_read );
    sensitive << ( x2_1_fu_462_p2 );

    SC_METHOD(thread_f_3_write_assign_fu_528_p2);
    sensitive << ( f_3_read );
    sensitive << ( x3_1_fu_468_p2 );

    SC_METHOD(thread_f_4_write_assign_fu_534_p2);
    sensitive << ( f_4_read );
    sensitive << ( x4_1_fu_474_p2 );

    SC_METHOD(thread_f_5_write_assign_fu_540_p2);
    sensitive << ( f_5_read );
    sensitive << ( x5_1_fu_480_p2 );

    SC_METHOD(thread_f_6_write_assign_fu_546_p2);
    sensitive << ( f_6_read );
    sensitive << ( x6_1_fu_486_p2 );

    SC_METHOD(thread_f_7_write_assign_fu_552_p2);
    sensitive << ( f_7_read );
    sensitive << ( x7_1_fu_492_p2 );

    SC_METHOD(thread_f_8_write_assign_fu_558_p2);
    sensitive << ( f_8_read );
    sensitive << ( x8_1_fu_498_p2 );

    SC_METHOD(thread_f_9_write_assign_fu_564_p2);
    sensitive << ( f_9_read );
    sensitive << ( x9_1_fu_504_p2 );

    SC_METHOD(thread_g_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_1438_cast_fu_334_p1 );
    sensitive << ( tmp_1440_cast_fu_350_p1 );
    sensitive << ( tmp_1442_cast_fu_360_p1 );
    sensitive << ( tmp_1444_cast_fu_370_p1 );
    sensitive << ( tmp_1446_cast_fu_380_p1 );

    SC_METHOD(thread_g_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_1439_cast_fu_345_p1 );
    sensitive << ( tmp_1441_cast_fu_355_p1 );
    sensitive << ( tmp_1443_cast_fu_365_p1 );
    sensitive << ( tmp_1445_cast_fu_375_p1 );
    sensitive << ( tmp_1447_cast_fu_385_p1 );

    SC_METHOD(thread_g_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_g_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_255_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_shl_cast_fu_314_p1 );

    SC_METHOD(thread_grp_fu_255_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1438_reg_262 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_shl1_cast_fu_329_p1 );

    SC_METHOD(thread_grp_fu_255_p2);
    sensitive << ( grp_fu_255_p0 );
    sensitive << ( grp_fu_255_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_329_p1);
    sensitive << ( tmp_1437_fu_319_p4 );

    SC_METHOD(thread_p_shl_cast_fu_314_p1);
    sensitive << ( tmp_fu_304_p4 );

    SC_METHOD(thread_tmp_1437_fu_319_p4);
    sensitive << ( tmp_7562 );
    sensitive << ( u_xy2d_offset );

    SC_METHOD(thread_tmp_1438_cast_fu_334_p1);
    sensitive << ( tmp_1438_reg_262 );

    SC_METHOD(thread_tmp_1439_cast_fu_345_p1);
    sensitive << ( tmp_1439_fu_339_p2 );

    SC_METHOD(thread_tmp_1439_fu_339_p2);
    sensitive << ( tmp_1438_reg_262 );

    SC_METHOD(thread_tmp_1440_cast_fu_350_p1);
    sensitive << ( reg_270 );

    SC_METHOD(thread_tmp_1441_cast_fu_355_p1);
    sensitive << ( reg_276 );

    SC_METHOD(thread_tmp_1442_cast_fu_360_p1);
    sensitive << ( tmp_1442_reg_282 );

    SC_METHOD(thread_tmp_1443_cast_fu_365_p1);
    sensitive << ( tmp_1443_reg_288 );

    SC_METHOD(thread_tmp_1444_cast_fu_370_p1);
    sensitive << ( reg_270 );

    SC_METHOD(thread_tmp_1445_cast_fu_375_p1);
    sensitive << ( reg_276 );

    SC_METHOD(thread_tmp_1446_cast_fu_380_p1);
    sensitive << ( reg_276 );

    SC_METHOD(thread_tmp_1447_cast_fu_385_p1);
    sensitive << ( grp_fu_255_p2 );

    SC_METHOD(thread_tmp_fu_304_p4);
    sensitive << ( tmp_7562 );
    sensitive << ( u_xy2d_offset );

    SC_METHOD(thread_x0_1_fu_450_p2);
    sensitive << ( x0_fu_390_p2 );
    sensitive << ( b_assign_cast_fu_442_p3 );

    SC_METHOD(thread_x0_fu_390_p2);
    sensitive << ( f_0_read );
    sensitive << ( g0_reg_650 );

    SC_METHOD(thread_x1_1_fu_456_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x1_fu_395_p2 );

    SC_METHOD(thread_x1_fu_395_p2);
    sensitive << ( f_1_read );
    sensitive << ( g1_reg_655 );

    SC_METHOD(thread_x2_1_fu_462_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x2_fu_400_p2 );

    SC_METHOD(thread_x2_fu_400_p2);
    sensitive << ( f_2_read );
    sensitive << ( g2_reg_670 );

    SC_METHOD(thread_x3_1_fu_468_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x3_fu_405_p2 );

    SC_METHOD(thread_x3_fu_405_p2);
    sensitive << ( f_3_read );
    sensitive << ( g3_reg_675 );

    SC_METHOD(thread_x4_1_fu_474_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x4_fu_410_p2 );

    SC_METHOD(thread_x4_fu_410_p2);
    sensitive << ( f_4_read );
    sensitive << ( g4_reg_690 );

    SC_METHOD(thread_x5_1_fu_480_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x5_fu_415_p2 );

    SC_METHOD(thread_x5_fu_415_p2);
    sensitive << ( f_5_read );
    sensitive << ( g5_reg_695 );

    SC_METHOD(thread_x6_1_fu_486_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x6_fu_420_p2 );

    SC_METHOD(thread_x6_fu_420_p2);
    sensitive << ( f_6_read );
    sensitive << ( g6_reg_710 );

    SC_METHOD(thread_x7_1_fu_492_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x7_fu_425_p2 );

    SC_METHOD(thread_x7_fu_425_p2);
    sensitive << ( f_7_read );
    sensitive << ( g7_reg_715 );

    SC_METHOD(thread_x8_1_fu_498_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x8_fu_430_p2 );

    SC_METHOD(thread_x8_fu_430_p2);
    sensitive << ( f_8_read );
    sensitive << ( g_q0 );

    SC_METHOD(thread_x9_1_fu_504_p2);
    sensitive << ( b_assign_cast_fu_442_p3 );
    sensitive << ( x9_fu_436_p2 );

    SC_METHOD(thread_x9_fu_436_p2);
    sensitive << ( f_9_read );
    sensitive << ( g_q1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "0000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    ap_return_2_preg = "00000000000000000000000000000000";
    ap_return_3_preg = "00000000000000000000000000000000";
    ap_return_4_preg = "00000000000000000000000000000000";
    ap_return_5_preg = "00000000000000000000000000000000";
    ap_return_6_preg = "00000000000000000000000000000000";
    ap_return_7_preg = "00000000000000000000000000000000";
    ap_return_8_preg = "00000000000000000000000000000000";
    ap_return_9_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fe_cmov_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, f_0_read, "(port)f_0_read");
    sc_trace(mVcdFile, f_1_read, "(port)f_1_read");
    sc_trace(mVcdFile, f_2_read, "(port)f_2_read");
    sc_trace(mVcdFile, f_3_read, "(port)f_3_read");
    sc_trace(mVcdFile, f_4_read, "(port)f_4_read");
    sc_trace(mVcdFile, f_5_read, "(port)f_5_read");
    sc_trace(mVcdFile, f_6_read, "(port)f_6_read");
    sc_trace(mVcdFile, f_7_read, "(port)f_7_read");
    sc_trace(mVcdFile, f_8_read, "(port)f_8_read");
    sc_trace(mVcdFile, f_9_read, "(port)f_9_read");
    sc_trace(mVcdFile, g_address0, "(port)g_address0");
    sc_trace(mVcdFile, g_ce0, "(port)g_ce0");
    sc_trace(mVcdFile, g_q0, "(port)g_q0");
    sc_trace(mVcdFile, g_address1, "(port)g_address1");
    sc_trace(mVcdFile, g_ce1, "(port)g_ce1");
    sc_trace(mVcdFile, g_q1, "(port)g_q1");
    sc_trace(mVcdFile, tmp_7562, "(port)tmp_7562");
    sc_trace(mVcdFile, u_xy2d_offset, "(port)u_xy2d_offset");
    sc_trace(mVcdFile, b, "(port)b");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_255_p2, "grp_fu_255_p2");
    sc_trace(mVcdFile, tmp_1438_reg_262, "tmp_1438_reg_262");
    sc_trace(mVcdFile, reg_270, "reg_270");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, reg_276, "reg_276");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_1442_reg_282, "tmp_1442_reg_282");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_1443_reg_288, "tmp_1443_reg_288");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, g0_reg_650, "g0_reg_650");
    sc_trace(mVcdFile, g1_reg_655, "g1_reg_655");
    sc_trace(mVcdFile, g2_reg_670, "g2_reg_670");
    sc_trace(mVcdFile, g3_reg_675, "g3_reg_675");
    sc_trace(mVcdFile, g4_reg_690, "g4_reg_690");
    sc_trace(mVcdFile, g5_reg_695, "g5_reg_695");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, g6_reg_710, "g6_reg_710");
    sc_trace(mVcdFile, g7_reg_715, "g7_reg_715");
    sc_trace(mVcdFile, tmp_1438_cast_fu_334_p1, "tmp_1438_cast_fu_334_p1");
    sc_trace(mVcdFile, tmp_1439_cast_fu_345_p1, "tmp_1439_cast_fu_345_p1");
    sc_trace(mVcdFile, tmp_1440_cast_fu_350_p1, "tmp_1440_cast_fu_350_p1");
    sc_trace(mVcdFile, tmp_1441_cast_fu_355_p1, "tmp_1441_cast_fu_355_p1");
    sc_trace(mVcdFile, tmp_1442_cast_fu_360_p1, "tmp_1442_cast_fu_360_p1");
    sc_trace(mVcdFile, tmp_1443_cast_fu_365_p1, "tmp_1443_cast_fu_365_p1");
    sc_trace(mVcdFile, tmp_1444_cast_fu_370_p1, "tmp_1444_cast_fu_370_p1");
    sc_trace(mVcdFile, tmp_1445_cast_fu_375_p1, "tmp_1445_cast_fu_375_p1");
    sc_trace(mVcdFile, tmp_1446_cast_fu_380_p1, "tmp_1446_cast_fu_380_p1");
    sc_trace(mVcdFile, tmp_1447_cast_fu_385_p1, "tmp_1447_cast_fu_385_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_255_p0, "grp_fu_255_p0");
    sc_trace(mVcdFile, p_shl_cast_fu_314_p1, "p_shl_cast_fu_314_p1");
    sc_trace(mVcdFile, grp_fu_255_p1, "grp_fu_255_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_329_p1, "p_shl1_cast_fu_329_p1");
    sc_trace(mVcdFile, tmp_fu_304_p4, "tmp_fu_304_p4");
    sc_trace(mVcdFile, tmp_1437_fu_319_p4, "tmp_1437_fu_319_p4");
    sc_trace(mVcdFile, tmp_1439_fu_339_p2, "tmp_1439_fu_339_p2");
    sc_trace(mVcdFile, x0_fu_390_p2, "x0_fu_390_p2");
    sc_trace(mVcdFile, b_assign_cast_fu_442_p3, "b_assign_cast_fu_442_p3");
    sc_trace(mVcdFile, x1_fu_395_p2, "x1_fu_395_p2");
    sc_trace(mVcdFile, x2_fu_400_p2, "x2_fu_400_p2");
    sc_trace(mVcdFile, x3_fu_405_p2, "x3_fu_405_p2");
    sc_trace(mVcdFile, x4_fu_410_p2, "x4_fu_410_p2");
    sc_trace(mVcdFile, x5_fu_415_p2, "x5_fu_415_p2");
    sc_trace(mVcdFile, x6_fu_420_p2, "x6_fu_420_p2");
    sc_trace(mVcdFile, x7_fu_425_p2, "x7_fu_425_p2");
    sc_trace(mVcdFile, x8_fu_430_p2, "x8_fu_430_p2");
    sc_trace(mVcdFile, x9_fu_436_p2, "x9_fu_436_p2");
    sc_trace(mVcdFile, x0_1_fu_450_p2, "x0_1_fu_450_p2");
    sc_trace(mVcdFile, x1_1_fu_456_p2, "x1_1_fu_456_p2");
    sc_trace(mVcdFile, x2_1_fu_462_p2, "x2_1_fu_462_p2");
    sc_trace(mVcdFile, x3_1_fu_468_p2, "x3_1_fu_468_p2");
    sc_trace(mVcdFile, x4_1_fu_474_p2, "x4_1_fu_474_p2");
    sc_trace(mVcdFile, x5_1_fu_480_p2, "x5_1_fu_480_p2");
    sc_trace(mVcdFile, x6_1_fu_486_p2, "x6_1_fu_486_p2");
    sc_trace(mVcdFile, x7_1_fu_492_p2, "x7_1_fu_492_p2");
    sc_trace(mVcdFile, x8_1_fu_498_p2, "x8_1_fu_498_p2");
    sc_trace(mVcdFile, x9_1_fu_504_p2, "x9_1_fu_504_p2");
    sc_trace(mVcdFile, f_0_write_assign_fu_510_p2, "f_0_write_assign_fu_510_p2");
    sc_trace(mVcdFile, f_1_write_assign_fu_516_p2, "f_1_write_assign_fu_516_p2");
    sc_trace(mVcdFile, f_2_write_assign_fu_522_p2, "f_2_write_assign_fu_522_p2");
    sc_trace(mVcdFile, f_3_write_assign_fu_528_p2, "f_3_write_assign_fu_528_p2");
    sc_trace(mVcdFile, f_4_write_assign_fu_534_p2, "f_4_write_assign_fu_534_p2");
    sc_trace(mVcdFile, f_5_write_assign_fu_540_p2, "f_5_write_assign_fu_540_p2");
    sc_trace(mVcdFile, f_6_write_assign_fu_546_p2, "f_6_write_assign_fu_546_p2");
    sc_trace(mVcdFile, f_7_write_assign_fu_552_p2, "f_7_write_assign_fu_552_p2");
    sc_trace(mVcdFile, f_8_write_assign_fu_558_p2, "f_8_write_assign_fu_558_p2");
    sc_trace(mVcdFile, f_9_write_assign_fu_564_p2, "f_9_write_assign_fu_564_p2");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_return_8_preg, "ap_return_8_preg");
    sc_trace(mVcdFile, ap_return_9_preg, "ap_return_9_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fe_cmov::~fe_cmov() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void fe_cmov::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_0_preg = f_0_write_assign_fu_510_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_1_preg = f_1_write_assign_fu_516_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_2_preg = f_2_write_assign_fu_522_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_3_preg = f_3_write_assign_fu_528_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_4_preg = f_4_write_assign_fu_534_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_5_preg = f_5_write_assign_fu_540_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_6_preg = f_6_write_assign_fu_546_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_7_preg = f_7_write_assign_fu_552_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_8_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_8_preg = f_8_write_assign_fu_558_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_9_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_9_preg = f_9_write_assign_fu_564_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_return_0 = f_0_write_assign_fu_510_p2.read();
        ap_return_1 = f_1_write_assign_fu_516_p2.read();
        ap_return_2 = f_2_write_assign_fu_522_p2.read();
        ap_return_3 = f_3_write_assign_fu_528_p2.read();
        ap_return_4 = f_4_write_assign_fu_534_p2.read();
        ap_return_5 = f_5_write_assign_fu_540_p2.read();
        ap_return_6 = f_6_write_assign_fu_546_p2.read();
        ap_return_7 = f_7_write_assign_fu_552_p2.read();
        ap_return_8 = f_8_write_assign_fu_558_p2.read();
        ap_return_9 = f_9_write_assign_fu_564_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        g0_reg_650 = g_q0.read();
        g1_reg_655 = g_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        g2_reg_670 = g_q0.read();
        g3_reg_675 = g_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        g4_reg_690 = g_q0.read();
        g5_reg_695 = g_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        g6_reg_710 = g_q0.read();
        g7_reg_715 = g_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_270 = grp_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_276 = grp_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_1438_reg_262 = grp_fu_255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_1442_reg_282 = grp_fu_255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_1443_reg_288 = grp_fu_255_p2.read();
    }
}

void fe_cmov::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fe_cmov::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void fe_cmov::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fe_cmov::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fe_cmov::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fe_cmov::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fe_cmov::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fe_cmov::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fe_cmov::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fe_cmov::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fe_cmov::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fe_cmov::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fe_cmov::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fe_cmov::thread_b_assign_cast_fu_442_p3() {
    b_assign_cast_fu_442_p3 = (!b.read()[0].is_01())? sc_lv<32>(): ((b.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void fe_cmov::thread_f_0_write_assign_fu_510_p2() {
    f_0_write_assign_fu_510_p2 = (x0_1_fu_450_p2.read() ^ f_0_read.read());
}

void fe_cmov::thread_f_1_write_assign_fu_516_p2() {
    f_1_write_assign_fu_516_p2 = (x1_1_fu_456_p2.read() ^ f_1_read.read());
}

void fe_cmov::thread_f_2_write_assign_fu_522_p2() {
    f_2_write_assign_fu_522_p2 = (x2_1_fu_462_p2.read() ^ f_2_read.read());
}

void fe_cmov::thread_f_3_write_assign_fu_528_p2() {
    f_3_write_assign_fu_528_p2 = (x3_1_fu_468_p2.read() ^ f_3_read.read());
}

void fe_cmov::thread_f_4_write_assign_fu_534_p2() {
    f_4_write_assign_fu_534_p2 = (x4_1_fu_474_p2.read() ^ f_4_read.read());
}

void fe_cmov::thread_f_5_write_assign_fu_540_p2() {
    f_5_write_assign_fu_540_p2 = (x5_1_fu_480_p2.read() ^ f_5_read.read());
}

void fe_cmov::thread_f_6_write_assign_fu_546_p2() {
    f_6_write_assign_fu_546_p2 = (x6_1_fu_486_p2.read() ^ f_6_read.read());
}

void fe_cmov::thread_f_7_write_assign_fu_552_p2() {
    f_7_write_assign_fu_552_p2 = (x7_1_fu_492_p2.read() ^ f_7_read.read());
}

void fe_cmov::thread_f_8_write_assign_fu_558_p2() {
    f_8_write_assign_fu_558_p2 = (x8_1_fu_498_p2.read() ^ f_8_read.read());
}

void fe_cmov::thread_f_9_write_assign_fu_564_p2() {
    f_9_write_assign_fu_564_p2 = (x9_1_fu_504_p2.read() ^ f_9_read.read());
}

void fe_cmov::thread_g_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        g_address0 =  (sc_lv<12>) (tmp_1446_cast_fu_380_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        g_address0 =  (sc_lv<12>) (tmp_1444_cast_fu_370_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        g_address0 =  (sc_lv<12>) (tmp_1442_cast_fu_360_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        g_address0 =  (sc_lv<12>) (tmp_1440_cast_fu_350_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        g_address0 =  (sc_lv<12>) (tmp_1438_cast_fu_334_p1.read());
    } else {
        g_address0 = "XXXXXXXXXXXX";
    }
}

void fe_cmov::thread_g_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        g_address1 =  (sc_lv<12>) (tmp_1447_cast_fu_385_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        g_address1 =  (sc_lv<12>) (tmp_1445_cast_fu_375_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        g_address1 =  (sc_lv<12>) (tmp_1443_cast_fu_365_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        g_address1 =  (sc_lv<12>) (tmp_1441_cast_fu_355_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        g_address1 =  (sc_lv<12>) (tmp_1439_cast_fu_345_p1.read());
    } else {
        g_address1 = "XXXXXXXXXXXX";
    }
}

void fe_cmov::thread_g_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        g_ce0 = ap_const_logic_1;
    } else {
        g_ce0 = ap_const_logic_0;
    }
}

void fe_cmov::thread_g_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        g_ce1 = ap_const_logic_1;
    } else {
        g_ce1 = ap_const_logic_0;
    }
}

void fe_cmov::thread_grp_fu_255_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_255_p0 = ap_const_lv12_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_255_p0 = ap_const_lv12_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_255_p0 = ap_const_lv12_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_255_p0 = ap_const_lv12_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_255_p0 = ap_const_lv12_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_255_p0 = ap_const_lv12_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_255_p0 = ap_const_lv12_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_255_p0 = ap_const_lv12_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_255_p0 = p_shl_cast_fu_314_p1.read();
    } else {
        grp_fu_255_p0 = "XXXXXXXXXXXX";
    }
}

void fe_cmov::thread_grp_fu_255_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_255_p1 = tmp_1438_reg_262.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_255_p1 = p_shl1_cast_fu_329_p1.read();
    } else {
        grp_fu_255_p1 = "XXXXXXXXXXXX";
    }
}

void fe_cmov::thread_grp_fu_255_p2() {
    grp_fu_255_p2 = (!grp_fu_255_p0.read().is_01() || !grp_fu_255_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(grp_fu_255_p0.read()) + sc_biguint<12>(grp_fu_255_p1.read()));
}

void fe_cmov::thread_p_shl1_cast_fu_329_p1() {
    p_shl1_cast_fu_329_p1 = esl_zext<12,9>(tmp_1437_fu_319_p4.read());
}

void fe_cmov::thread_p_shl_cast_fu_314_p1() {
    p_shl_cast_fu_314_p1 = esl_zext<12,11>(tmp_fu_304_p4.read());
}

void fe_cmov::thread_tmp_1437_fu_319_p4() {
    tmp_1437_fu_319_p4 = esl_concat<8,1>(esl_concat<5,3>(tmp_7562.read(), u_xy2d_offset.read()), ap_const_lv1_0);
}

void fe_cmov::thread_tmp_1438_cast_fu_334_p1() {
    tmp_1438_cast_fu_334_p1 = esl_zext<64,12>(tmp_1438_reg_262.read());
}

void fe_cmov::thread_tmp_1439_cast_fu_345_p1() {
    tmp_1439_cast_fu_345_p1 = esl_zext<64,12>(tmp_1439_fu_339_p2.read());
}

void fe_cmov::thread_tmp_1439_fu_339_p2() {
    tmp_1439_fu_339_p2 = (tmp_1438_reg_262.read() | ap_const_lv12_1);
}

void fe_cmov::thread_tmp_1440_cast_fu_350_p1() {
    tmp_1440_cast_fu_350_p1 = esl_zext<64,12>(reg_270.read());
}

void fe_cmov::thread_tmp_1441_cast_fu_355_p1() {
    tmp_1441_cast_fu_355_p1 = esl_zext<64,12>(reg_276.read());
}

void fe_cmov::thread_tmp_1442_cast_fu_360_p1() {
    tmp_1442_cast_fu_360_p1 = esl_zext<64,12>(tmp_1442_reg_282.read());
}

void fe_cmov::thread_tmp_1443_cast_fu_365_p1() {
    tmp_1443_cast_fu_365_p1 = esl_zext<64,12>(tmp_1443_reg_288.read());
}

void fe_cmov::thread_tmp_1444_cast_fu_370_p1() {
    tmp_1444_cast_fu_370_p1 = esl_zext<64,12>(reg_270.read());
}

void fe_cmov::thread_tmp_1445_cast_fu_375_p1() {
    tmp_1445_cast_fu_375_p1 = esl_zext<64,12>(reg_276.read());
}

void fe_cmov::thread_tmp_1446_cast_fu_380_p1() {
    tmp_1446_cast_fu_380_p1 = esl_zext<64,12>(reg_276.read());
}

void fe_cmov::thread_tmp_1447_cast_fu_385_p1() {
    tmp_1447_cast_fu_385_p1 = esl_zext<64,12>(grp_fu_255_p2.read());
}

void fe_cmov::thread_tmp_fu_304_p4() {
    tmp_fu_304_p4 = esl_concat<8,3>(esl_concat<5,3>(tmp_7562.read(), u_xy2d_offset.read()), ap_const_lv3_0);
}

void fe_cmov::thread_x0_1_fu_450_p2() {
    x0_1_fu_450_p2 = (x0_fu_390_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x0_fu_390_p2() {
    x0_fu_390_p2 = (g0_reg_650.read() ^ f_0_read.read());
}

void fe_cmov::thread_x1_1_fu_456_p2() {
    x1_1_fu_456_p2 = (x1_fu_395_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x1_fu_395_p2() {
    x1_fu_395_p2 = (g1_reg_655.read() ^ f_1_read.read());
}

void fe_cmov::thread_x2_1_fu_462_p2() {
    x2_1_fu_462_p2 = (x2_fu_400_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x2_fu_400_p2() {
    x2_fu_400_p2 = (g2_reg_670.read() ^ f_2_read.read());
}

void fe_cmov::thread_x3_1_fu_468_p2() {
    x3_1_fu_468_p2 = (x3_fu_405_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x3_fu_405_p2() {
    x3_fu_405_p2 = (g3_reg_675.read() ^ f_3_read.read());
}

void fe_cmov::thread_x4_1_fu_474_p2() {
    x4_1_fu_474_p2 = (x4_fu_410_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x4_fu_410_p2() {
    x4_fu_410_p2 = (g4_reg_690.read() ^ f_4_read.read());
}

void fe_cmov::thread_x5_1_fu_480_p2() {
    x5_1_fu_480_p2 = (x5_fu_415_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x5_fu_415_p2() {
    x5_fu_415_p2 = (g5_reg_695.read() ^ f_5_read.read());
}

void fe_cmov::thread_x6_1_fu_486_p2() {
    x6_1_fu_486_p2 = (x6_fu_420_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x6_fu_420_p2() {
    x6_fu_420_p2 = (g6_reg_710.read() ^ f_6_read.read());
}

void fe_cmov::thread_x7_1_fu_492_p2() {
    x7_1_fu_492_p2 = (x7_fu_425_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x7_fu_425_p2() {
    x7_fu_425_p2 = (g7_reg_715.read() ^ f_7_read.read());
}

void fe_cmov::thread_x8_1_fu_498_p2() {
    x8_1_fu_498_p2 = (x8_fu_430_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x8_fu_430_p2() {
    x8_fu_430_p2 = (g_q0.read() ^ f_8_read.read());
}

void fe_cmov::thread_x9_1_fu_504_p2() {
    x9_1_fu_504_p2 = (x9_fu_436_p2.read() & b_assign_cast_fu_442_p3.read());
}

void fe_cmov::thread_x9_fu_436_p2() {
    x9_fu_436_p2 = (g_q1.read() ^ f_9_read.read());
}

void fe_cmov::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

