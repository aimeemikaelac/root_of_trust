// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crecip (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        z_address0,
        z_ce0,
        z_q0
);

parameter    ap_ST_fsm_state1 = 92'd1;
parameter    ap_ST_fsm_state2 = 92'd2;
parameter    ap_ST_fsm_state3 = 92'd4;
parameter    ap_ST_fsm_state4 = 92'd8;
parameter    ap_ST_fsm_state5 = 92'd16;
parameter    ap_ST_fsm_state6 = 92'd32;
parameter    ap_ST_fsm_state7 = 92'd64;
parameter    ap_ST_fsm_state8 = 92'd128;
parameter    ap_ST_fsm_state9 = 92'd256;
parameter    ap_ST_fsm_state10 = 92'd512;
parameter    ap_ST_fsm_state11 = 92'd1024;
parameter    ap_ST_fsm_state12 = 92'd2048;
parameter    ap_ST_fsm_state13 = 92'd4096;
parameter    ap_ST_fsm_state14 = 92'd8192;
parameter    ap_ST_fsm_state15 = 92'd16384;
parameter    ap_ST_fsm_state16 = 92'd32768;
parameter    ap_ST_fsm_state17 = 92'd65536;
parameter    ap_ST_fsm_state18 = 92'd131072;
parameter    ap_ST_fsm_state19 = 92'd262144;
parameter    ap_ST_fsm_state20 = 92'd524288;
parameter    ap_ST_fsm_state21 = 92'd1048576;
parameter    ap_ST_fsm_state22 = 92'd2097152;
parameter    ap_ST_fsm_state23 = 92'd4194304;
parameter    ap_ST_fsm_state24 = 92'd8388608;
parameter    ap_ST_fsm_state25 = 92'd16777216;
parameter    ap_ST_fsm_state26 = 92'd33554432;
parameter    ap_ST_fsm_state27 = 92'd67108864;
parameter    ap_ST_fsm_state28 = 92'd134217728;
parameter    ap_ST_fsm_state29 = 92'd268435456;
parameter    ap_ST_fsm_state30 = 92'd536870912;
parameter    ap_ST_fsm_state31 = 92'd1073741824;
parameter    ap_ST_fsm_state32 = 92'd2147483648;
parameter    ap_ST_fsm_state33 = 92'd4294967296;
parameter    ap_ST_fsm_state34 = 92'd8589934592;
parameter    ap_ST_fsm_state35 = 92'd17179869184;
parameter    ap_ST_fsm_state36 = 92'd34359738368;
parameter    ap_ST_fsm_state37 = 92'd68719476736;
parameter    ap_ST_fsm_state38 = 92'd137438953472;
parameter    ap_ST_fsm_state39 = 92'd274877906944;
parameter    ap_ST_fsm_state40 = 92'd549755813888;
parameter    ap_ST_fsm_state41 = 92'd1099511627776;
parameter    ap_ST_fsm_state42 = 92'd2199023255552;
parameter    ap_ST_fsm_state43 = 92'd4398046511104;
parameter    ap_ST_fsm_state44 = 92'd8796093022208;
parameter    ap_ST_fsm_state45 = 92'd17592186044416;
parameter    ap_ST_fsm_state46 = 92'd35184372088832;
parameter    ap_ST_fsm_state47 = 92'd70368744177664;
parameter    ap_ST_fsm_state48 = 92'd140737488355328;
parameter    ap_ST_fsm_state49 = 92'd281474976710656;
parameter    ap_ST_fsm_state50 = 92'd562949953421312;
parameter    ap_ST_fsm_state51 = 92'd1125899906842624;
parameter    ap_ST_fsm_state52 = 92'd2251799813685248;
parameter    ap_ST_fsm_state53 = 92'd4503599627370496;
parameter    ap_ST_fsm_state54 = 92'd9007199254740992;
parameter    ap_ST_fsm_state55 = 92'd18014398509481984;
parameter    ap_ST_fsm_state56 = 92'd36028797018963968;
parameter    ap_ST_fsm_state57 = 92'd72057594037927936;
parameter    ap_ST_fsm_state58 = 92'd144115188075855872;
parameter    ap_ST_fsm_state59 = 92'd288230376151711744;
parameter    ap_ST_fsm_state60 = 92'd576460752303423488;
parameter    ap_ST_fsm_state61 = 92'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 92'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 92'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 92'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 92'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 92'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 92'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 92'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 92'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 92'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 92'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 92'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 92'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 92'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 92'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 92'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 92'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 92'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 92'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 92'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 92'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 92'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 92'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 92'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 92'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 92'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 92'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 92'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 92'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 92'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 92'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 92'd2475880078570760549798248448;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [63:0] out_r_d0;
output  [3:0] z_address0;
output   z_ce0;
input  [63:0] z_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_r_ce0;
reg out_r_we0;
reg[3:0] z_address0;
reg z_ce0;

(* fsm_encoding = "none" *) reg   [91:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] grp_fu_156_p2;
reg   [6:0] reg_123;
wire    ap_CS_fsm_state67;
wire   [0:0] tmp_830_fu_301_p2;
wire    ap_CS_fsm_state76;
wire   [0:0] tmp_831_fu_307_p2;
reg   [6:0] reg_134;
wire    ap_CS_fsm_state31;
wire   [0:0] tmp_fu_277_p2;
wire    ap_CS_fsm_state40;
wire   [0:0] tmp_s_fu_283_p2;
wire    ap_CS_fsm_state49;
wire   [0:0] tmp_828_fu_289_p2;
wire    ap_CS_fsm_state58;
wire   [0:0] tmp_829_fu_295_p2;
reg   [3:0] z2_address0;
reg    z2_ce0;
reg    z2_we0;
wire   [63:0] z2_q0;
reg   [3:0] z9_address0;
reg    z9_ce0;
reg    z9_we0;
wire   [63:0] z9_q0;
reg   [3:0] z11_address0;
reg    z11_ce0;
reg    z11_we0;
wire   [63:0] z11_q0;
reg   [3:0] z2_5_0_address0;
reg    z2_5_0_ce0;
reg    z2_5_0_we0;
wire   [63:0] z2_5_0_q0;
reg   [3:0] z2_10_0_address0;
reg    z2_10_0_ce0;
reg    z2_10_0_we0;
wire   [63:0] z2_10_0_q0;
reg   [3:0] z2_20_0_address0;
reg    z2_20_0_ce0;
reg    z2_20_0_we0;
wire   [63:0] z2_20_0_q0;
reg   [3:0] z2_50_0_address0;
reg    z2_50_0_ce0;
reg    z2_50_0_we0;
wire   [63:0] z2_50_0_q0;
reg   [3:0] z2_100_0_address0;
reg    z2_100_0_ce0;
reg    z2_100_0_we0;
wire   [63:0] z2_100_0_q0;
reg   [3:0] t0_address0;
reg    t0_ce0;
reg    t0_we0;
reg   [63:0] t0_d0;
wire   [63:0] t0_q0;
reg   [3:0] t1_address0;
reg    t1_ce0;
reg    t1_we0;
reg   [63:0] t1_d0;
wire   [63:0] t1_q0;
wire    grp_fmul_1_fu_247_ap_start;
wire    grp_fmul_1_fu_247_ap_done;
wire    grp_fmul_1_fu_247_ap_idle;
wire    grp_fmul_1_fu_247_ap_ready;
wire   [3:0] grp_fmul_1_fu_247_output_r_address0;
wire    grp_fmul_1_fu_247_output_r_ce0;
wire    grp_fmul_1_fu_247_output_r_we0;
wire   [63:0] grp_fmul_1_fu_247_output_r_d0;
wire   [3:0] grp_fmul_1_fu_247_in_r_address0;
wire    grp_fmul_1_fu_247_in_r_ce0;
wire   [3:0] grp_fmul_1_fu_247_in2_address0;
wire    grp_fmul_1_fu_247_in2_ce0;
wire    grp_fmul_fu_255_ap_start;
wire    grp_fmul_fu_255_ap_done;
wire    grp_fmul_fu_255_ap_idle;
wire    grp_fmul_fu_255_ap_ready;
wire   [3:0] grp_fmul_fu_255_output_r_address0;
wire    grp_fmul_fu_255_output_r_ce0;
wire    grp_fmul_fu_255_output_r_we0;
wire   [63:0] grp_fmul_fu_255_output_r_d0;
wire   [3:0] grp_fmul_fu_255_in_r_address0;
wire    grp_fmul_fu_255_in_r_ce0;
reg   [63:0] grp_fmul_fu_255_in_r_q0;
wire   [3:0] grp_fmul_fu_255_in2_address0;
wire    grp_fmul_fu_255_in2_ce0;
reg   [63:0] grp_fmul_fu_255_in2_q0;
wire    grp_fsquare_2_fu_263_ap_start;
wire    grp_fsquare_2_fu_263_ap_done;
wire    grp_fsquare_2_fu_263_ap_idle;
wire    grp_fsquare_2_fu_263_ap_ready;
wire   [3:0] grp_fsquare_2_fu_263_output_r_address0;
wire    grp_fsquare_2_fu_263_output_r_ce0;
wire    grp_fsquare_2_fu_263_output_r_we0;
wire   [63:0] grp_fsquare_2_fu_263_output_r_d0;
wire   [3:0] grp_fsquare_2_fu_263_in_r_address0;
wire    grp_fsquare_2_fu_263_in_r_ce0;
wire    grp_fsquare_1_fu_271_ap_start;
wire    grp_fsquare_1_fu_271_ap_done;
wire    grp_fsquare_1_fu_271_ap_idle;
wire    grp_fsquare_1_fu_271_ap_ready;
wire   [3:0] grp_fsquare_1_fu_271_output_r_address0;
wire    grp_fsquare_1_fu_271_output_r_ce0;
wire    grp_fsquare_1_fu_271_output_r_we0;
wire   [63:0] grp_fsquare_1_fu_271_output_r_d0;
wire   [3:0] grp_fsquare_1_fu_271_in_r_address0;
wire    grp_fsquare_1_fu_271_in_r_ce0;
reg   [63:0] grp_fsquare_1_fu_271_in_r_q0;
reg   [3:0] i_reg_90;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state34;
reg   [4:0] i_1_reg_101;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state43;
reg   [3:0] i_2_reg_112;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state70;
reg   [5:0] i_5_reg_145;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state79;
reg    ap_reg_grp_fmul_1_fu_247_ap_start;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    ap_reg_grp_fmul_fu_255_ap_start;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state92;
reg    ap_reg_grp_fsquare_2_fu_263_ap_start;
wire    ap_CS_fsm_state2;
reg    ap_reg_grp_fsquare_1_fu_271_ap_start;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state90;
reg   [6:0] grp_fu_156_p0;
reg   [6:0] grp_fu_156_p1;
wire   [5:0] tmp_829_fu_295_p0;
reg   [91:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 92'd1;
#0 ap_reg_grp_fmul_1_fu_247_ap_start = 1'b0;
#0 ap_reg_grp_fmul_fu_255_ap_start = 1'b0;
#0 ap_reg_grp_fsquare_2_fu_263_ap_start = 1'b0;
#0 ap_reg_grp_fsquare_1_fu_271_ap_start = 1'b0;
end

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_address0),
    .ce0(z2_ce0),
    .we0(z2_we0),
    .d0(grp_fsquare_2_fu_263_output_r_d0),
    .q0(z2_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z9_address0),
    .ce0(z9_ce0),
    .we0(z9_we0),
    .d0(grp_fmul_1_fu_247_output_r_d0),
    .q0(z9_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z11_address0),
    .ce0(z11_ce0),
    .we0(z11_we0),
    .d0(grp_fmul_fu_255_output_r_d0),
    .q0(z11_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z2_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_5_0_address0),
    .ce0(z2_5_0_ce0),
    .we0(z2_5_0_we0),
    .d0(grp_fmul_fu_255_output_r_d0),
    .q0(z2_5_0_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z2_10_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_10_0_address0),
    .ce0(z2_10_0_ce0),
    .we0(z2_10_0_we0),
    .d0(grp_fmul_fu_255_output_r_d0),
    .q0(z2_10_0_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z2_20_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_20_0_address0),
    .ce0(z2_20_0_ce0),
    .we0(z2_20_0_we0),
    .d0(grp_fmul_fu_255_output_r_d0),
    .q0(z2_20_0_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z2_50_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_50_0_address0),
    .ce0(z2_50_0_ce0),
    .we0(z2_50_0_we0),
    .d0(grp_fmul_fu_255_output_r_d0),
    .q0(z2_50_0_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
z2_100_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_100_0_address0),
    .ce0(z2_100_0_ce0),
    .we0(z2_100_0_we0),
    .d0(grp_fmul_fu_255_output_r_d0),
    .q0(z2_100_0_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
t0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t0_address0),
    .ce0(t0_ce0),
    .we0(t0_we0),
    .d0(t0_d0),
    .q0(t0_q0)
);

crecip_z2 #(
    .DataWidth( 64 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
t1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t1_address0),
    .ce0(t1_ce0),
    .we0(t1_we0),
    .d0(t1_d0),
    .q0(t1_q0)
);

fmul_1 grp_fmul_1_fu_247(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fmul_1_fu_247_ap_start),
    .ap_done(grp_fmul_1_fu_247_ap_done),
    .ap_idle(grp_fmul_1_fu_247_ap_idle),
    .ap_ready(grp_fmul_1_fu_247_ap_ready),
    .output_r_address0(grp_fmul_1_fu_247_output_r_address0),
    .output_r_ce0(grp_fmul_1_fu_247_output_r_ce0),
    .output_r_we0(grp_fmul_1_fu_247_output_r_we0),
    .output_r_d0(grp_fmul_1_fu_247_output_r_d0),
    .in_r_address0(grp_fmul_1_fu_247_in_r_address0),
    .in_r_ce0(grp_fmul_1_fu_247_in_r_ce0),
    .in_r_q0(t0_q0),
    .in2_address0(grp_fmul_1_fu_247_in2_address0),
    .in2_ce0(grp_fmul_1_fu_247_in2_ce0),
    .in2_q0(z_q0)
);

fmul grp_fmul_fu_255(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fmul_fu_255_ap_start),
    .ap_done(grp_fmul_fu_255_ap_done),
    .ap_idle(grp_fmul_fu_255_ap_idle),
    .ap_ready(grp_fmul_fu_255_ap_ready),
    .output_r_address0(grp_fmul_fu_255_output_r_address0),
    .output_r_ce0(grp_fmul_fu_255_output_r_ce0),
    .output_r_we0(grp_fmul_fu_255_output_r_we0),
    .output_r_d0(grp_fmul_fu_255_output_r_d0),
    .in_r_address0(grp_fmul_fu_255_in_r_address0),
    .in_r_ce0(grp_fmul_fu_255_in_r_ce0),
    .in_r_q0(grp_fmul_fu_255_in_r_q0),
    .in2_address0(grp_fmul_fu_255_in2_address0),
    .in2_ce0(grp_fmul_fu_255_in2_ce0),
    .in2_q0(grp_fmul_fu_255_in2_q0)
);

fsquare_2 grp_fsquare_2_fu_263(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fsquare_2_fu_263_ap_start),
    .ap_done(grp_fsquare_2_fu_263_ap_done),
    .ap_idle(grp_fsquare_2_fu_263_ap_idle),
    .ap_ready(grp_fsquare_2_fu_263_ap_ready),
    .output_r_address0(grp_fsquare_2_fu_263_output_r_address0),
    .output_r_ce0(grp_fsquare_2_fu_263_output_r_ce0),
    .output_r_we0(grp_fsquare_2_fu_263_output_r_we0),
    .output_r_d0(grp_fsquare_2_fu_263_output_r_d0),
    .in_r_address0(grp_fsquare_2_fu_263_in_r_address0),
    .in_r_ce0(grp_fsquare_2_fu_263_in_r_ce0),
    .in_r_q0(z_q0)
);

fsquare_1 grp_fsquare_1_fu_271(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fsquare_1_fu_271_ap_start),
    .ap_done(grp_fsquare_1_fu_271_ap_done),
    .ap_idle(grp_fsquare_1_fu_271_ap_idle),
    .ap_ready(grp_fsquare_1_fu_271_ap_ready),
    .output_r_address0(grp_fsquare_1_fu_271_output_r_address0),
    .output_r_ce0(grp_fsquare_1_fu_271_output_r_ce0),
    .output_r_we0(grp_fsquare_1_fu_271_output_r_we0),
    .output_r_d0(grp_fsquare_1_fu_271_output_r_d0),
    .in_r_address0(grp_fsquare_1_fu_271_in_r_address0),
    .in_r_ce0(grp_fsquare_1_fu_271_in_r_ce0),
    .in_r_q0(grp_fsquare_1_fu_271_in_r_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_fmul_1_fu_247_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_reg_grp_fmul_1_fu_247_ap_start <= 1'b1;
        end else if ((1'b1 == grp_fmul_1_fu_247_ap_ready)) begin
            ap_reg_grp_fmul_1_fu_247_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_fmul_fu_255_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_CS_fsm_state31) & (tmp_fu_277_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state40) & (tmp_s_fu_283_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state49) & (tmp_828_fu_289_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state58) & (tmp_829_fu_295_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state67) & (tmp_830_fu_301_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state76) & (tmp_831_fu_307_p2 == 1'd0)) | (1'b1 == ap_CS_fsm_state91))) begin
            ap_reg_grp_fmul_fu_255_ap_start <= 1'b1;
        end else if ((1'b1 == grp_fmul_fu_255_ap_ready)) begin
            ap_reg_grp_fmul_fu_255_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_fsquare_1_fu_271_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state67) & (tmp_830_fu_301_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state76) & (1'd1 == tmp_831_fu_307_p2)) | ((1'b1 == ap_CS_fsm_state31) & (1'd1 == tmp_fu_277_p2)) | ((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_s_fu_283_p2)) | ((1'b1 == ap_CS_fsm_state49) & (1'd1 == tmp_828_fu_289_p2)) | ((1'b1 == ap_CS_fsm_state58) & (1'd1 == tmp_829_fu_295_p2)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state89))) begin
            ap_reg_grp_fsquare_1_fu_271_ap_start <= 1'b1;
        end else if ((1'b1 == grp_fsquare_1_fu_271_ap_ready)) begin
            ap_reg_grp_fsquare_1_fu_271_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_fsquare_2_fu_263_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_reg_grp_fsquare_2_fu_263_ap_start <= 1'b1;
        end else if ((1'b1 == grp_fsquare_2_fu_263_ap_ready)) begin
            ap_reg_grp_fsquare_2_fu_263_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fsquare_1_fu_271_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state43)) begin
            i_1_reg_101 <= reg_134;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            i_1_reg_101 <= 5'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fsquare_1_fu_271_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state52)) begin
            i_2_reg_112 <= reg_134;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            i_2_reg_112 <= 4'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fsquare_1_fu_271_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state79)) begin
            i_5_reg_145 <= reg_123;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            i_5_reg_145 <= 6'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fsquare_1_fu_271_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            i_reg_90 <= reg_134;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            i_reg_90 <= 4'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
        reg_123 <= reg_134;
    end else if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
        reg_123 <= 6'd2;
    end else if ((((1'b1 == ap_CS_fsm_state67) & (tmp_830_fu_301_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state76) & (1'd1 == tmp_831_fu_307_p2)))) begin
        reg_123 <= grp_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state70))) begin
        reg_134 <= reg_123;
    end else if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        reg_134 <= 7'd2;
    end else if ((((1'b1 == ap_CS_fsm_state31) & (1'd1 == tmp_fu_277_p2)) | ((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_s_fu_283_p2)) | ((1'b1 == ap_CS_fsm_state49) & (1'd1 == tmp_828_fu_289_p2)) | ((1'b1 == ap_CS_fsm_state58) & (1'd1 == tmp_829_fu_295_p2)))) begin
        reg_134 <= grp_fu_156_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state92) & (grp_fmul_fu_255_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fmul_fu_255_in2_q0 = z11_q0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fmul_fu_255_in2_q0 = z2_100_0_q0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80))) begin
        grp_fmul_fu_255_in2_q0 = z2_50_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fmul_fu_255_in2_q0 = z2_20_0_q0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fmul_fu_255_in2_q0 = z2_10_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fmul_fu_255_in2_q0 = z2_5_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fmul_fu_255_in2_q0 = z9_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fmul_fu_255_in2_q0 = z2_q0;
    end else begin
        grp_fmul_fu_255_in2_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state92))) begin
        grp_fmul_fu_255_in_r_q0 = t1_q0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fmul_fu_255_in_r_q0 = t0_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fmul_fu_255_in_r_q0 = z9_q0;
    end else begin
        grp_fmul_fu_255_in_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z2_100_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z2_50_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z2_20_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z2_10_0_q0;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_fsquare_1_fu_271_in_r_q0 = t0_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z2_5_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z11_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        grp_fsquare_1_fu_271_in_r_q0 = t1_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fsquare_1_fu_271_in_r_q0 = z2_q0;
    end else begin
        grp_fsquare_1_fu_271_in_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_156_p0 = i_5_reg_145;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_156_p0 = reg_134;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_156_p0 = reg_123;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_156_p0 = i_2_reg_112;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_156_p0 = i_1_reg_101;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_156_p0 = i_reg_90;
    end else begin
        grp_fu_156_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_156_p1 = 7'd2;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state58))) begin
        grp_fu_156_p1 = 6'd2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_156_p1 = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_156_p1 = 4'd2;
    end else begin
        grp_fu_156_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        out_r_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        out_r_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        t0_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        t0_address0 = grp_fsquare_1_fu_271_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state71))) begin
        t0_address0 = grp_fmul_fu_255_in_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state80))) begin
        t0_address0 = grp_fmul_fu_255_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t0_address0 = grp_fmul_1_fu_247_in_r_address0;
    end else begin
        t0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        t0_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        t0_ce0 = grp_fsquare_1_fu_271_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state71))) begin
        t0_ce0 = grp_fmul_fu_255_in_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state80))) begin
        t0_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t0_ce0 = grp_fmul_1_fu_247_in_r_ce0;
    end else begin
        t0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        t0_d0 = grp_fsquare_1_fu_271_output_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state80))) begin
        t0_d0 = grp_fmul_fu_255_output_r_d0;
    end else begin
        t0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        t0_we0 = grp_fsquare_1_fu_271_output_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state80))) begin
        t0_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        t0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        t1_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        t1_address0 = grp_fsquare_1_fu_271_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state92))) begin
        t1_address0 = grp_fmul_fu_255_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        t1_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        t1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state88))) begin
        t1_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        t1_ce0 = grp_fsquare_1_fu_271_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state92))) begin
        t1_ce0 = grp_fmul_fu_255_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        t1_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        t1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        t1_d0 = grp_fsquare_1_fu_271_output_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        t1_d0 = grp_fmul_fu_255_output_r_d0;
    end else begin
        t1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90))) begin
        t1_we0 = grp_fsquare_1_fu_271_output_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        t1_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        t1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        z11_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        z11_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z11_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        z11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        z11_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        z11_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z11_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        z11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z11_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        z11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        z2_100_0_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        z2_100_0_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        z2_100_0_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        z2_100_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        z2_100_0_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        z2_100_0_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        z2_100_0_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        z2_100_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        z2_100_0_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        z2_100_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        z2_10_0_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state53))) begin
        z2_10_0_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        z2_10_0_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        z2_10_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        z2_10_0_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state53))) begin
        z2_10_0_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        z2_10_0_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        z2_10_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        z2_10_0_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        z2_10_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        z2_20_0_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        z2_20_0_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        z2_20_0_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        z2_20_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        z2_20_0_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        z2_20_0_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        z2_20_0_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        z2_20_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        z2_20_0_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        z2_20_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        z2_50_0_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80))) begin
        z2_50_0_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        z2_50_0_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        z2_50_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        z2_50_0_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80))) begin
        z2_50_0_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        z2_50_0_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        z2_50_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        z2_50_0_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        z2_50_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z2_5_0_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        z2_5_0_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_5_0_address0 = grp_fmul_fu_255_output_r_address0;
    end else begin
        z2_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z2_5_0_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        z2_5_0_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_5_0_ce0 = grp_fmul_fu_255_output_r_ce0;
    end else begin
        z2_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_5_0_we0 = grp_fmul_fu_255_output_r_we0;
    end else begin
        z2_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        z2_address0 = grp_fsquare_1_fu_271_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        z2_address0 = grp_fsquare_2_fu_263_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_address0 = grp_fmul_fu_255_in2_address0;
    end else begin
        z2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        z2_ce0 = grp_fsquare_1_fu_271_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        z2_ce0 = grp_fsquare_2_fu_263_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_ce0 = grp_fmul_fu_255_in2_ce0;
    end else begin
        z2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        z2_we0 = grp_fsquare_2_fu_263_output_r_we0;
    end else begin
        z2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z9_address0 = grp_fmul_fu_255_in2_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z9_address0 = grp_fmul_fu_255_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        z9_address0 = grp_fmul_1_fu_247_output_r_address0;
    end else begin
        z9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z9_ce0 = grp_fmul_fu_255_in2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z9_ce0 = grp_fmul_fu_255_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        z9_ce0 = grp_fmul_1_fu_247_output_r_ce0;
    end else begin
        z9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        z9_we0 = grp_fmul_1_fu_247_output_r_we0;
    end else begin
        z9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        z_address0 = grp_fsquare_2_fu_263_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        z_address0 = grp_fmul_1_fu_247_in2_address0;
    end else begin
        z_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        z_ce0 = grp_fsquare_2_fu_263_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        z_ce0 = grp_fmul_1_fu_247_in2_ce0;
    end else begin
        z_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_fsquare_2_fu_263_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_fmul_1_fu_247_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (grp_fsquare_1_fu_271_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (tmp_fu_277_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (tmp_s_fu_283_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (tmp_828_fu_289_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (tmp_829_fu_295_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (tmp_830_fu_301_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (tmp_831_fu_307_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((grp_fsquare_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            if (((1'b1 == ap_CS_fsm_state92) & (grp_fmul_fu_255_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign grp_fmul_1_fu_247_ap_start = ap_reg_grp_fmul_1_fu_247_ap_start;

assign grp_fmul_fu_255_ap_start = ap_reg_grp_fmul_fu_255_ap_start;

assign grp_fsquare_1_fu_271_ap_start = ap_reg_grp_fsquare_1_fu_271_ap_start;

assign grp_fsquare_2_fu_263_ap_start = ap_reg_grp_fsquare_2_fu_263_ap_start;

assign grp_fu_156_p2 = (grp_fu_156_p0 + grp_fu_156_p1);

assign out_r_address0 = grp_fmul_fu_255_output_r_address0;

assign out_r_d0 = grp_fmul_fu_255_output_r_d0;

assign tmp_828_fu_289_p2 = ((i_2_reg_112 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_829_fu_295_p0 = reg_123;

assign tmp_829_fu_295_p2 = ((tmp_829_fu_295_p0 < 6'd50) ? 1'b1 : 1'b0);

assign tmp_830_fu_301_p2 = ((reg_134 < 7'd100) ? 1'b1 : 1'b0);

assign tmp_831_fu_307_p2 = ((i_5_reg_145 < 6'd50) ? 1'b1 : 1'b0);

assign tmp_fu_277_p2 = ((i_reg_90 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_s_fu_283_p2 = ((i_1_reg_101 < 5'd20) ? 1'b1 : 1'b0);

endmodule //crecip
