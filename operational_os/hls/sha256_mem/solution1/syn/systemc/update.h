// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _update_HH_
#define _update_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "transform_1.h"
#include "transform.h"

namespace ap_rtl {

struct update : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > SHA256_m_tot_len_read;
    sc_in< sc_lv<32> > SHA256_m_len_read;
    sc_out< sc_lv<7> > SHA256_m_block_address0;
    sc_out< sc_logic > SHA256_m_block_ce0;
    sc_out< sc_logic > SHA256_m_block_we0;
    sc_out< sc_lv<8> > SHA256_m_block_d0;
    sc_in< sc_lv<8> > SHA256_m_block_q0;
    sc_out< sc_lv<7> > SHA256_m_block_address1;
    sc_out< sc_logic > SHA256_m_block_ce1;
    sc_in< sc_lv<8> > SHA256_m_block_q1;
    sc_out< sc_lv<3> > SHA256_m_h_address0;
    sc_out< sc_logic > SHA256_m_h_ce0;
    sc_out< sc_logic > SHA256_m_h_we0;
    sc_out< sc_lv<32> > SHA256_m_h_d0;
    sc_in< sc_lv<32> > SHA256_m_h_q0;
    sc_out< sc_lv<6> > message_address0;
    sc_out< sc_logic > message_ce0;
    sc_in< sc_lv<8> > message_q0;
    sc_out< sc_lv<6> > message_address1;
    sc_out< sc_logic > message_ce1;
    sc_in< sc_lv<8> > message_q1;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_signal< sc_lv<2> > ap_var_for_const0;


    // Module declarations
    update(sc_module_name name);
    SC_HAS_PROCESS(update);

    ~update();

    sc_trace_file* mVcdFile;

    transform_1* grp_transform_1_fu_152;
    transform* grp_transform_fu_164;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > rem_len_fu_192_p3;
    sc_signal< sc_lv<7> > rem_len_reg_372;
    sc_signal< sc_lv<9> > tmp_3_fu_200_p1;
    sc_signal< sc_lv<9> > tmp_3_reg_380;
    sc_signal< sc_lv<7> > i_fu_209_p2;
    sc_signal< sc_lv<7> > i_reg_388;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_i_fu_204_p2;
    sc_signal< sc_lv<9> > sum_i_fu_224_p2;
    sc_signal< sc_lv<9> > sum_i_reg_398;
    sc_signal< sc_lv<6> > tmp_8_fu_234_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_229_p2;
    sc_signal< sc_lv<7> > new_len_fu_241_p2;
    sc_signal< sc_lv<7> > new_len_reg_411;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > rem_len_1_fu_246_p1;
    sc_signal< sc_lv<6> > rem_len_1_reg_416;
    sc_signal< sc_lv<1> > tmp_11_reg_422;
    sc_signal< sc_lv<8> > new_len_cast3_fu_259_p1;
    sc_signal< sc_lv<8> > new_len_cast3_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_transform_1_fu_152_ap_done;
    sc_signal< sc_lv<8> > tmp_3_cast_fu_269_p1;
    sc_signal< sc_lv<8> > tmp_3_cast_reg_433;
    sc_signal< sc_lv<6> > i_1_fu_278_p2;
    sc_signal< sc_lv<6> > i_1_reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_i2_fu_273_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_334_p2;
    sc_signal< sc_logic > grp_transform_1_fu_152_ap_start;
    sc_signal< sc_logic > grp_transform_1_fu_152_ap_idle;
    sc_signal< sc_logic > grp_transform_1_fu_152_ap_ready;
    sc_signal< sc_lv<3> > grp_transform_1_fu_152_SHA256_m_h_address0;
    sc_signal< sc_logic > grp_transform_1_fu_152_SHA256_m_h_ce0;
    sc_signal< sc_logic > grp_transform_1_fu_152_SHA256_m_h_we0;
    sc_signal< sc_lv<32> > grp_transform_1_fu_152_SHA256_m_h_d0;
    sc_signal< sc_lv<6> > grp_transform_1_fu_152_message_address0;
    sc_signal< sc_logic > grp_transform_1_fu_152_message_ce0;
    sc_signal< sc_lv<6> > grp_transform_1_fu_152_message_address1;
    sc_signal< sc_logic > grp_transform_1_fu_152_message_ce1;
    sc_signal< sc_logic > grp_transform_fu_164_ap_start;
    sc_signal< sc_logic > grp_transform_fu_164_ap_done;
    sc_signal< sc_logic > grp_transform_fu_164_ap_idle;
    sc_signal< sc_logic > grp_transform_fu_164_ap_ready;
    sc_signal< sc_lv<3> > grp_transform_fu_164_SHA256_m_h_address0;
    sc_signal< sc_logic > grp_transform_fu_164_SHA256_m_h_ce0;
    sc_signal< sc_logic > grp_transform_fu_164_SHA256_m_h_we0;
    sc_signal< sc_lv<32> > grp_transform_fu_164_SHA256_m_h_d0;
    sc_signal< sc_lv<7> > grp_transform_fu_164_message_address0;
    sc_signal< sc_logic > grp_transform_fu_164_message_ce0;
    sc_signal< sc_lv<7> > grp_transform_fu_164_message_address1;
    sc_signal< sc_logic > grp_transform_fu_164_message_ce1;
    sc_signal< sc_lv<7> > i_i_reg_111;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > i_i1_reg_122;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > SHA256_m_tot_len_reg_134;
    sc_signal< sc_lv<6> > SHA256_m_len_write_a_reg_143;
    sc_signal< sc_logic > ap_reg_grp_transform_1_fu_152_ap_start;
    sc_signal< sc_logic > ap_reg_grp_transform_fu_164_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_i_fu_215_p1;
    sc_signal< sc_lv<64> > sum_i_cast_fu_237_p1;
    sc_signal< sc_lv<64> > sum3_i_cast_fu_302_p1;
    sc_signal< sc_lv<64> > tmp_i3_fu_339_p1;
    sc_signal< sc_lv<32> > tmp_len_fu_176_p2;
    sc_signal< sc_lv<1> > tmp_fu_186_p2;
    sc_signal< sc_lv<7> > tmp_1_fu_182_p1;
    sc_signal< sc_lv<9> > tmp_i_cast_fu_220_p1;
    sc_signal< sc_lv<7> > tmp_2_fu_262_p3;
    sc_signal< sc_lv<7> > tmp_i3_cast_fu_284_p1;
    sc_signal< sc_lv<7> > tmp1_fu_288_p2;
    sc_signal< sc_lv<8> > tmp1_cast_fu_293_p1;
    sc_signal< sc_lv<8> > sum3_i_fu_297_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_307_p2;
    sc_signal< sc_lv<2> > tmp_7_fu_312_p4;
    sc_signal< sc_lv<8> > tmp_5_fu_322_p3;
    sc_signal< sc_lv<32> > tmp_5_cast_fu_330_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > SHA256_m_len_write_a_1_fu_344_p1;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<32> > ap_return_1_preg;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFBF;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_40;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_SHA256_m_block_address0();
    void thread_SHA256_m_block_address1();
    void thread_SHA256_m_block_ce0();
    void thread_SHA256_m_block_ce1();
    void thread_SHA256_m_block_d0();
    void thread_SHA256_m_block_we0();
    void thread_SHA256_m_h_address0();
    void thread_SHA256_m_h_ce0();
    void thread_SHA256_m_h_d0();
    void thread_SHA256_m_h_we0();
    void thread_SHA256_m_len_write_a_1_fu_344_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_exitcond_i2_fu_273_p2();
    void thread_exitcond_i_fu_204_p2();
    void thread_grp_transform_1_fu_152_ap_start();
    void thread_grp_transform_fu_164_ap_start();
    void thread_i_1_fu_278_p2();
    void thread_i_fu_209_p2();
    void thread_message_address0();
    void thread_message_address1();
    void thread_message_ce0();
    void thread_message_ce1();
    void thread_new_len_cast3_fu_259_p1();
    void thread_new_len_fu_241_p2();
    void thread_rem_len_1_fu_246_p1();
    void thread_rem_len_fu_192_p3();
    void thread_sum3_i_cast_fu_302_p1();
    void thread_sum3_i_fu_297_p2();
    void thread_sum_i_cast_fu_237_p1();
    void thread_sum_i_fu_224_p2();
    void thread_tmp1_cast_fu_293_p1();
    void thread_tmp1_fu_288_p2();
    void thread_tmp_1_fu_182_p1();
    void thread_tmp_2_fu_262_p3();
    void thread_tmp_3_cast_fu_269_p1();
    void thread_tmp_3_fu_200_p1();
    void thread_tmp_4_fu_307_p2();
    void thread_tmp_5_cast_fu_330_p1();
    void thread_tmp_5_fu_322_p3();
    void thread_tmp_6_fu_334_p2();
    void thread_tmp_7_fu_312_p4();
    void thread_tmp_8_fu_234_p1();
    void thread_tmp_9_fu_229_p2();
    void thread_tmp_fu_186_p2();
    void thread_tmp_i3_cast_fu_284_p1();
    void thread_tmp_i3_fu_339_p1();
    void thread_tmp_i_cast_fu_220_p1();
    void thread_tmp_i_fu_215_p1();
    void thread_tmp_len_fu_176_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
