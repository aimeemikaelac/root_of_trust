

================================================================
== Vivado HLS Report for 'cmov'
================================================================
* Date:           Mon Sep 25 21:40:17 2017

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      1.95|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   33|   33|   33|   33|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 4
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
* FSM state operations: 

 <State 1>: 1.17ns
ST_1: b_read (41)  [1/1] 0.00ns
:0  %b_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %b)

ST_1: u_yplusx_offset_read (46)  [1/1] 0.00ns
:5  %u_yplusx_offset_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %u_yplusx_offset)

ST_1: tmp_756_read (47)  [1/1] 0.00ns
:6  %tmp_756_read = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %tmp_756)

ST_1: t_yplusx_9_read_1 (68)  [1/1] 0.00ns
:27  %t_yplusx_9_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_9_read)

ST_1: t_yplusx_8_read_1 (69)  [1/1] 0.00ns
:28  %t_yplusx_8_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_8_read)

ST_1: t_yplusx_7_read_1 (70)  [1/1] 0.00ns
:29  %t_yplusx_7_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_7_read)

ST_1: t_yplusx_6_read_1 (71)  [1/1] 0.00ns
:30  %t_yplusx_6_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_6_read)

ST_1: t_yplusx_5_read_1 (72)  [1/1] 0.00ns
:31  %t_yplusx_5_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_5_read)

ST_1: t_yplusx_4_read_1 (73)  [1/1] 0.00ns
:32  %t_yplusx_4_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_4_read)

ST_1: t_yplusx_3_read_1 (74)  [1/1] 0.00ns
:33  %t_yplusx_3_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_3_read)

ST_1: t_yplusx_2_read_1 (75)  [1/1] 0.00ns
:34  %t_yplusx_2_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_2_read)

ST_1: t_yplusx_1_read_1 (76)  [1/1] 0.00ns
:35  %t_yplusx_1_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_1_read)

ST_1: t_yplusx_0_read_1 (77)  [1/1] 0.00ns
:36  %t_yplusx_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yplusx_0_read)

ST_1: tmp (86)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:45  %tmp = trunc i4 %u_yplusx_offset_read to i3

ST_1: call_ret1 (87)  [2/2] 1.17ns  loc: ed25519/src/ge.cpp:504
:46  %call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_cmov(i32 %t_yplusx_0_read_1, i32 %t_yplusx_1_read_1, i32 %t_yplusx_2_read_1, i32 %t_yplusx_3_read_1, i32 %t_yplusx_4_read_1, i32 %t_yplusx_5_read_1, i32 %t_yplusx_6_read_1, i32 %t_yplusx_7_read_1, i32 %t_yplusx_8_read_1, i32 %t_yplusx_9_read_1, [2560 x i32]* @base_yplusx, i5 %tmp_756_read, i3 %tmp, i1 %b_read)


 <State 2>: 1.29ns
ST_2: u_yminusx_offset_rea (44)  [1/1] 0.00ns
:3  %u_yminusx_offset_rea = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %u_yminusx_offset)

ST_2: tmp_7561_read (45)  [1/1] 0.00ns
:4  %tmp_7561_read = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %tmp_7561)

ST_2: t_yminusx_9_read_1 (58)  [1/1] 0.00ns
:17  %t_yminusx_9_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_9_read)

ST_2: t_yminusx_8_read_1 (59)  [1/1] 0.00ns
:18  %t_yminusx_8_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_8_read)

ST_2: t_yminusx_7_read_1 (60)  [1/1] 0.00ns
:19  %t_yminusx_7_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_7_read)

ST_2: t_yminusx_6_read_1 (61)  [1/1] 0.00ns
:20  %t_yminusx_6_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_6_read)

ST_2: t_yminusx_5_read_1 (62)  [1/1] 0.00ns
:21  %t_yminusx_5_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_5_read)

ST_2: t_yminusx_4_read_1 (63)  [1/1] 0.00ns
:22  %t_yminusx_4_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_4_read)

ST_2: t_yminusx_3_read_1 (64)  [1/1] 0.00ns
:23  %t_yminusx_3_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_3_read)

ST_2: t_yminusx_2_read_1 (65)  [1/1] 0.00ns
:24  %t_yminusx_2_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_2_read)

ST_2: t_yminusx_1_read_1 (66)  [1/1] 0.00ns
:25  %t_yminusx_1_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_1_read)

ST_2: t_yminusx_0_read_1 (67)  [1/1] 0.00ns
:26  %t_yminusx_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_yminusx_0_read)

ST_2: call_ret1 (87)  [1/2] 1.29ns  loc: ed25519/src/ge.cpp:504
:46  %call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_cmov(i32 %t_yplusx_0_read_1, i32 %t_yplusx_1_read_1, i32 %t_yplusx_2_read_1, i32 %t_yplusx_3_read_1, i32 %t_yplusx_4_read_1, i32 %t_yplusx_5_read_1, i32 %t_yplusx_6_read_1, i32 %t_yplusx_7_read_1, i32 %t_yplusx_8_read_1, i32 %t_yplusx_9_read_1, [2560 x i32]* @base_yplusx, i5 %tmp_756_read, i3 %tmp, i1 %b_read)

ST_2: t_yplusx (88)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:47  %t_yplusx = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 0

ST_2: t_yplusx_1 (89)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:48  %t_yplusx_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 1

ST_2: t_yplusx_2 (90)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:49  %t_yplusx_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 2

ST_2: t_yplusx_3 (91)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:50  %t_yplusx_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 3

ST_2: t_yplusx_4 (92)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:51  %t_yplusx_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 4

ST_2: t_yplusx_5 (93)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:52  %t_yplusx_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 5

ST_2: t_yplusx_6 (94)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:53  %t_yplusx_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 6

ST_2: t_yplusx_7 (95)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:54  %t_yplusx_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 7

ST_2: t_yplusx_8 (96)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:55  %t_yplusx_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 8

ST_2: t_yplusx_9 (97)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:504
:56  %t_yplusx_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 9

ST_2: tmp_1727 (98)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:57  %tmp_1727 = trunc i4 %u_yminusx_offset_rea to i3

ST_2: call_ret (99)  [2/2] 1.17ns  loc: ed25519/src/ge.cpp:505
:58  %call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_cmov(i32 %t_yminusx_0_read_1, i32 %t_yminusx_1_read_1, i32 %t_yminusx_2_read_1, i32 %t_yminusx_3_read_1, i32 %t_yminusx_4_read_1, i32 %t_yminusx_5_read_1, i32 %t_yminusx_6_read_1, i32 %t_yminusx_7_read_1, i32 %t_yminusx_8_read_1, i32 %t_yminusx_9_read_1, [2560 x i32]* @base_yminusx, i5 %tmp_7561_read, i3 %tmp_1727, i1 %b_read)


 <State 3>: 1.29ns
ST_3: u_xy2d_offset_read (42)  [1/1] 0.00ns
:1  %u_xy2d_offset_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %u_xy2d_offset)

ST_3: tmp_7562_read (43)  [1/1] 0.00ns
:2  %tmp_7562_read = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %tmp_7562)

ST_3: t_xy2d_9_read_1 (48)  [1/1] 0.00ns
:7  %t_xy2d_9_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_9_read)

ST_3: t_xy2d_8_read_1 (49)  [1/1] 0.00ns
:8  %t_xy2d_8_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_8_read)

ST_3: t_xy2d_7_read_1 (50)  [1/1] 0.00ns
:9  %t_xy2d_7_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_7_read)

ST_3: t_xy2d_6_read_1 (51)  [1/1] 0.00ns
:10  %t_xy2d_6_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_6_read)

ST_3: t_xy2d_5_read_1 (52)  [1/1] 0.00ns
:11  %t_xy2d_5_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_5_read)

ST_3: t_xy2d_4_read_1 (53)  [1/1] 0.00ns
:12  %t_xy2d_4_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_4_read)

ST_3: t_xy2d_3_read_1 (54)  [1/1] 0.00ns
:13  %t_xy2d_3_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_3_read)

ST_3: t_xy2d_2_read_1 (55)  [1/1] 0.00ns
:14  %t_xy2d_2_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_2_read)

ST_3: t_xy2d_1_read_1 (56)  [1/1] 0.00ns
:15  %t_xy2d_1_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_1_read)

ST_3: t_xy2d_0_read_1 (57)  [1/1] 0.00ns
:16  %t_xy2d_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %t_xy2d_0_read)

ST_3: call_ret (99)  [1/2] 1.29ns  loc: ed25519/src/ge.cpp:505
:58  %call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_cmov(i32 %t_yminusx_0_read_1, i32 %t_yminusx_1_read_1, i32 %t_yminusx_2_read_1, i32 %t_yminusx_3_read_1, i32 %t_yminusx_4_read_1, i32 %t_yminusx_5_read_1, i32 %t_yminusx_6_read_1, i32 %t_yminusx_7_read_1, i32 %t_yminusx_8_read_1, i32 %t_yminusx_9_read_1, [2560 x i32]* @base_yminusx, i5 %tmp_7561_read, i3 %tmp_1727, i1 %b_read)

ST_3: t_yminusx (100)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:59  %t_yminusx = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0

ST_3: t_yminusx_1 (101)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:60  %t_yminusx_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1

ST_3: t_yminusx_2 (102)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:61  %t_yminusx_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2

ST_3: t_yminusx_3 (103)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:62  %t_yminusx_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3

ST_3: t_yminusx_4 (104)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:63  %t_yminusx_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4

ST_3: t_yminusx_5 (105)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:64  %t_yminusx_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5

ST_3: t_yminusx_6 (106)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:65  %t_yminusx_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6

ST_3: t_yminusx_7 (107)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:66  %t_yminusx_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7

ST_3: t_yminusx_8 (108)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:67  %t_yminusx_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 8

ST_3: t_yminusx_9 (109)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:505
:68  %t_yminusx_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 9

ST_3: tmp_1728 (110)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:69  %tmp_1728 = trunc i4 %u_xy2d_offset_read to i3

ST_3: call_ret32 (111)  [2/2] 1.17ns  loc: ed25519/src/ge.cpp:506
:70  %call_ret32 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_cmov(i32 %t_xy2d_0_read_1, i32 %t_xy2d_1_read_1, i32 %t_xy2d_2_read_1, i32 %t_xy2d_3_read_1, i32 %t_xy2d_4_read_1, i32 %t_xy2d_5_read_1, i32 %t_xy2d_6_read_1, i32 %t_xy2d_7_read_1, i32 %t_xy2d_8_read_1, i32 %t_xy2d_9_read_1, [2560 x i32]* @base_xy2d, i5 %tmp_7562_read, i3 %tmp_1728, i1 %b_read)


 <State 4>: 1.29ns
ST_4: StgValue_70 (78)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:496
:37  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str10, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_71 (79)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:497
:38  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str212, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_72 (80)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:498
:39  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str313, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_73 (81)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:499
:40  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str414, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_74 (82)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:500
:41  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str515, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_75 (83)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:501
:42  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str616, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_76 (84)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:502
:43  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str717, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_4: StgValue_77 (85)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:503
:44  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [8 x i8]* @p_str19, [1 x i8]* @p_str111) nounwind

ST_4: call_ret32 (111)  [1/2] 1.29ns  loc: ed25519/src/ge.cpp:506
:70  %call_ret32 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_cmov(i32 %t_xy2d_0_read_1, i32 %t_xy2d_1_read_1, i32 %t_xy2d_2_read_1, i32 %t_xy2d_3_read_1, i32 %t_xy2d_4_read_1, i32 %t_xy2d_5_read_1, i32 %t_xy2d_6_read_1, i32 %t_xy2d_7_read_1, i32 %t_xy2d_8_read_1, i32 %t_xy2d_9_read_1, [2560 x i32]* @base_xy2d, i5 %tmp_7562_read, i3 %tmp_1728, i1 %b_read)

ST_4: t_xy2d (112)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:71  %t_xy2d = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 0

ST_4: t_xy2d_1 (113)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:72  %t_xy2d_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 1

ST_4: t_xy2d_2 (114)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:73  %t_xy2d_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 2

ST_4: t_xy2d_3 (115)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:74  %t_xy2d_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 3

ST_4: t_xy2d_4 (116)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:75  %t_xy2d_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 4

ST_4: t_xy2d_5 (117)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:76  %t_xy2d_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 5

ST_4: t_xy2d_6 (118)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:77  %t_xy2d_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 6

ST_4: t_xy2d_7 (119)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:78  %t_xy2d_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 7

ST_4: t_xy2d_8 (120)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:79  %t_xy2d_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 8

ST_4: t_xy2d_9 (121)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:506
:80  %t_xy2d_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret32, 9

ST_4: mrv (122)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:81  %mrv = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } undef, i32 %t_yplusx, 0

ST_4: mrv_1 (123)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:82  %mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv, i32 %t_yplusx_1, 1

ST_4: mrv_2 (124)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:83  %mrv_2 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %t_yplusx_2, 2

ST_4: mrv_3 (125)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:84  %mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_2, i32 %t_yplusx_3, 3

ST_4: mrv_4 (126)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:85  %mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %t_yplusx_4, 4

ST_4: mrv_5 (127)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:86  %mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %t_yplusx_5, 5

ST_4: mrv_6 (128)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:87  %mrv_6 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_5, i32 %t_yplusx_6, 6

ST_4: mrv_7 (129)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:88  %mrv_7 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_6, i32 %t_yplusx_7, 7

ST_4: mrv_8 (130)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:89  %mrv_8 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_7, i32 %t_yplusx_8, 8

ST_4: mrv_9 (131)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:90  %mrv_9 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_8, i32 %t_yplusx_9, 9

ST_4: mrv_10 (132)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:91  %mrv_10 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_9, i32 %t_yminusx, 10

ST_4: mrv_11 (133)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:92  %mrv_11 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_10, i32 %t_yminusx_1, 11

ST_4: mrv_12 (134)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:93  %mrv_12 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_11, i32 %t_yminusx_2, 12

ST_4: mrv_13 (135)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:94  %mrv_13 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_12, i32 %t_yminusx_3, 13

ST_4: mrv_14 (136)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:95  %mrv_14 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_13, i32 %t_yminusx_4, 14

ST_4: mrv_15 (137)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:96  %mrv_15 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_14, i32 %t_yminusx_5, 15

ST_4: mrv_16 (138)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:97  %mrv_16 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_15, i32 %t_yminusx_6, 16

ST_4: mrv_17 (139)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:98  %mrv_17 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_16, i32 %t_yminusx_7, 17

ST_4: mrv_18 (140)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:99  %mrv_18 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_17, i32 %t_yminusx_8, 18

ST_4: mrv_19 (141)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:100  %mrv_19 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_18, i32 %t_yminusx_9, 19

ST_4: mrv_20 (142)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:101  %mrv_20 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_19, i32 %t_xy2d, 20

ST_4: mrv_21 (143)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:102  %mrv_21 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_20, i32 %t_xy2d_1, 21

ST_4: mrv_22 (144)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:103  %mrv_22 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_21, i32 %t_xy2d_2, 22

ST_4: mrv_23 (145)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:104  %mrv_23 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_22, i32 %t_xy2d_3, 23

ST_4: mrv_24 (146)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:105  %mrv_24 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_23, i32 %t_xy2d_4, 24

ST_4: mrv_25 (147)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:106  %mrv_25 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_24, i32 %t_xy2d_5, 25

ST_4: mrv_26 (148)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:107  %mrv_26 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_25, i32 %t_xy2d_6, 26

ST_4: mrv_27 (149)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:108  %mrv_27 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_26, i32 %t_xy2d_7, 27

ST_4: mrv_28 (150)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:109  %mrv_28 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_27, i32 %t_xy2d_8, 28

ST_4: mrv_29 (151)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:110  %mrv_29 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_28, i32 %t_xy2d_9, 29

ST_4: StgValue_119 (152)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:507
:111  ret { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_29



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.17ns
The critical path consists of the following:
	wire read on port 'b' [41]  (0 ns)
	'call' operation ('call_ret1', ed25519/src/ge.cpp:504) to 'fe_cmov' [87]  (1.17 ns)

 <State 2>: 1.29ns
The critical path consists of the following:
	'call' operation ('call_ret1', ed25519/src/ge.cpp:504) to 'fe_cmov' [87]  (1.29 ns)

 <State 3>: 1.29ns
The critical path consists of the following:
	'call' operation ('call_ret', ed25519/src/ge.cpp:505) to 'fe_cmov' [99]  (1.29 ns)

 <State 4>: 1.29ns
The critical path consists of the following:
	'call' operation ('call_ret32', ed25519/src/ge.cpp:506) to 'fe_cmov' [111]  (1.29 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
