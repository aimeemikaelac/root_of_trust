// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="contact_discovery,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=59,HLS_SYN_DSP=0,HLS_SYN_FF=4952,HLS_SYN_LUT=5680}" *)

module contact_discovery (
        ap_clk,
        ap_rst_n,
        m_axi_db_mem_V_AWVALID,
        m_axi_db_mem_V_AWREADY,
        m_axi_db_mem_V_AWADDR,
        m_axi_db_mem_V_AWID,
        m_axi_db_mem_V_AWLEN,
        m_axi_db_mem_V_AWSIZE,
        m_axi_db_mem_V_AWBURST,
        m_axi_db_mem_V_AWLOCK,
        m_axi_db_mem_V_AWCACHE,
        m_axi_db_mem_V_AWPROT,
        m_axi_db_mem_V_AWQOS,
        m_axi_db_mem_V_AWREGION,
        m_axi_db_mem_V_AWUSER,
        m_axi_db_mem_V_WVALID,
        m_axi_db_mem_V_WREADY,
        m_axi_db_mem_V_WDATA,
        m_axi_db_mem_V_WSTRB,
        m_axi_db_mem_V_WLAST,
        m_axi_db_mem_V_WID,
        m_axi_db_mem_V_WUSER,
        m_axi_db_mem_V_ARVALID,
        m_axi_db_mem_V_ARREADY,
        m_axi_db_mem_V_ARADDR,
        m_axi_db_mem_V_ARID,
        m_axi_db_mem_V_ARLEN,
        m_axi_db_mem_V_ARSIZE,
        m_axi_db_mem_V_ARBURST,
        m_axi_db_mem_V_ARLOCK,
        m_axi_db_mem_V_ARCACHE,
        m_axi_db_mem_V_ARPROT,
        m_axi_db_mem_V_ARQOS,
        m_axi_db_mem_V_ARREGION,
        m_axi_db_mem_V_ARUSER,
        m_axi_db_mem_V_RVALID,
        m_axi_db_mem_V_RREADY,
        m_axi_db_mem_V_RDATA,
        m_axi_db_mem_V_RLAST,
        m_axi_db_mem_V_RID,
        m_axi_db_mem_V_RUSER,
        m_axi_db_mem_V_RRESP,
        m_axi_db_mem_V_BVALID,
        m_axi_db_mem_V_BREADY,
        m_axi_db_mem_V_BRESP,
        m_axi_db_mem_V_BID,
        m_axi_db_mem_V_BUSER,
        results_out_V_TDATA,
        results_out_V_TVALID,
        results_out_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 70'd1;
parameter    ap_ST_fsm_state2 = 70'd2;
parameter    ap_ST_fsm_pp0_stage0 = 70'd4;
parameter    ap_ST_fsm_pp0_stage1 = 70'd8;
parameter    ap_ST_fsm_pp0_stage2 = 70'd16;
parameter    ap_ST_fsm_pp0_stage3 = 70'd32;
parameter    ap_ST_fsm_pp0_stage4 = 70'd64;
parameter    ap_ST_fsm_pp0_stage5 = 70'd128;
parameter    ap_ST_fsm_pp0_stage6 = 70'd256;
parameter    ap_ST_fsm_pp0_stage7 = 70'd512;
parameter    ap_ST_fsm_pp0_stage8 = 70'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 70'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 70'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 70'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 70'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 70'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 70'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 70'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 70'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 70'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 70'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 70'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 70'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 70'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 70'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 70'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 70'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 70'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 70'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 70'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 70'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 70'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 70'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 70'd8589934592;
parameter    ap_ST_fsm_pp0_stage32 = 70'd17179869184;
parameter    ap_ST_fsm_pp0_stage33 = 70'd34359738368;
parameter    ap_ST_fsm_pp0_stage34 = 70'd68719476736;
parameter    ap_ST_fsm_pp0_stage35 = 70'd137438953472;
parameter    ap_ST_fsm_pp0_stage36 = 70'd274877906944;
parameter    ap_ST_fsm_pp0_stage37 = 70'd549755813888;
parameter    ap_ST_fsm_pp0_stage38 = 70'd1099511627776;
parameter    ap_ST_fsm_pp0_stage39 = 70'd2199023255552;
parameter    ap_ST_fsm_pp0_stage40 = 70'd4398046511104;
parameter    ap_ST_fsm_pp0_stage41 = 70'd8796093022208;
parameter    ap_ST_fsm_pp0_stage42 = 70'd17592186044416;
parameter    ap_ST_fsm_pp0_stage43 = 70'd35184372088832;
parameter    ap_ST_fsm_pp0_stage44 = 70'd70368744177664;
parameter    ap_ST_fsm_pp0_stage45 = 70'd140737488355328;
parameter    ap_ST_fsm_pp0_stage46 = 70'd281474976710656;
parameter    ap_ST_fsm_pp0_stage47 = 70'd562949953421312;
parameter    ap_ST_fsm_pp0_stage48 = 70'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage49 = 70'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage50 = 70'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage51 = 70'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage52 = 70'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage53 = 70'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage54 = 70'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage55 = 70'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage56 = 70'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage57 = 70'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage58 = 70'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage59 = 70'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage60 = 70'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage61 = 70'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage62 = 70'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage63 = 70'd36893488147419103232;
parameter    ap_ST_fsm_state78 = 70'd73786976294838206464;
parameter    ap_ST_fsm_state79 = 70'd147573952589676412928;
parameter    ap_ST_fsm_state80 = 70'd295147905179352825856;
parameter    ap_ST_fsm_state81 = 70'd590295810358705651712;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DB_MEM_V_ID_WIDTH = 1;
parameter    C_M_AXI_DB_MEM_V_ADDR_WIDTH = 64;
parameter    C_M_AXI_DB_MEM_V_DATA_WIDTH = 512;
parameter    C_M_AXI_DB_MEM_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DB_MEM_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DB_MEM_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_DB_MEM_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_DB_MEM_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_DB_MEM_V_TARGET_ADDR = 0;
parameter    C_M_AXI_DB_MEM_V_USER_VALUE = 0;
parameter    C_M_AXI_DB_MEM_V_PROT_VALUE = 0;
parameter    C_M_AXI_DB_MEM_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DB_MEM_V_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_db_mem_V_AWVALID;
input   m_axi_db_mem_V_AWREADY;
output  [C_M_AXI_DB_MEM_V_ADDR_WIDTH - 1:0] m_axi_db_mem_V_AWADDR;
output  [C_M_AXI_DB_MEM_V_ID_WIDTH - 1:0] m_axi_db_mem_V_AWID;
output  [7:0] m_axi_db_mem_V_AWLEN;
output  [2:0] m_axi_db_mem_V_AWSIZE;
output  [1:0] m_axi_db_mem_V_AWBURST;
output  [1:0] m_axi_db_mem_V_AWLOCK;
output  [3:0] m_axi_db_mem_V_AWCACHE;
output  [2:0] m_axi_db_mem_V_AWPROT;
output  [3:0] m_axi_db_mem_V_AWQOS;
output  [3:0] m_axi_db_mem_V_AWREGION;
output  [C_M_AXI_DB_MEM_V_AWUSER_WIDTH - 1:0] m_axi_db_mem_V_AWUSER;
output   m_axi_db_mem_V_WVALID;
input   m_axi_db_mem_V_WREADY;
output  [C_M_AXI_DB_MEM_V_DATA_WIDTH - 1:0] m_axi_db_mem_V_WDATA;
output  [C_M_AXI_DB_MEM_V_WSTRB_WIDTH - 1:0] m_axi_db_mem_V_WSTRB;
output   m_axi_db_mem_V_WLAST;
output  [C_M_AXI_DB_MEM_V_ID_WIDTH - 1:0] m_axi_db_mem_V_WID;
output  [C_M_AXI_DB_MEM_V_WUSER_WIDTH - 1:0] m_axi_db_mem_V_WUSER;
output   m_axi_db_mem_V_ARVALID;
input   m_axi_db_mem_V_ARREADY;
output  [C_M_AXI_DB_MEM_V_ADDR_WIDTH - 1:0] m_axi_db_mem_V_ARADDR;
output  [C_M_AXI_DB_MEM_V_ID_WIDTH - 1:0] m_axi_db_mem_V_ARID;
output  [7:0] m_axi_db_mem_V_ARLEN;
output  [2:0] m_axi_db_mem_V_ARSIZE;
output  [1:0] m_axi_db_mem_V_ARBURST;
output  [1:0] m_axi_db_mem_V_ARLOCK;
output  [3:0] m_axi_db_mem_V_ARCACHE;
output  [2:0] m_axi_db_mem_V_ARPROT;
output  [3:0] m_axi_db_mem_V_ARQOS;
output  [3:0] m_axi_db_mem_V_ARREGION;
output  [C_M_AXI_DB_MEM_V_ARUSER_WIDTH - 1:0] m_axi_db_mem_V_ARUSER;
input   m_axi_db_mem_V_RVALID;
output   m_axi_db_mem_V_RREADY;
input  [C_M_AXI_DB_MEM_V_DATA_WIDTH - 1:0] m_axi_db_mem_V_RDATA;
input   m_axi_db_mem_V_RLAST;
input  [C_M_AXI_DB_MEM_V_ID_WIDTH - 1:0] m_axi_db_mem_V_RID;
input  [C_M_AXI_DB_MEM_V_RUSER_WIDTH - 1:0] m_axi_db_mem_V_RUSER;
input  [1:0] m_axi_db_mem_V_RRESP;
input   m_axi_db_mem_V_BVALID;
output   m_axi_db_mem_V_BREADY;
input  [1:0] m_axi_db_mem_V_BRESP;
input  [C_M_AXI_DB_MEM_V_ID_WIDTH - 1:0] m_axi_db_mem_V_BID;
input  [C_M_AXI_DB_MEM_V_BUSER_WIDTH - 1:0] m_axi_db_mem_V_BUSER;
output  [7:0] results_out_V_TDATA;
output   results_out_V_TVALID;
input   results_out_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [69:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] operation;
reg   [31:0] operation_preg;
wire    operation_ap_vld;
reg   [31:0] operation_in_sig;
reg    operation_ap_vld_preg;
reg    operation_ap_vld_in_sig;
wire   [511:0] contact_in_V;
wire   [63:0] offset;
wire   [31:0] db_size_in;
reg   [31:0] error_out_1_data_reg;
reg   [31:0] error_out_1_data_in;
reg    error_out_1_vld_reg;
reg    error_out_1_vld_in;
reg    error_out_1_ack_in;
reg   [31:0] contacts_size_out_1_data_reg;
reg   [31:0] contacts_size_out_1_data_in;
reg    contacts_size_out_1_vld_reg;
reg    contacts_size_out_1_vld_in;
reg    contacts_size_out_1_ack_in;
reg   [7:0] results_out_V_1_data_out;
reg    results_out_V_1_vld_in;
wire    results_out_V_1_vld_out;
wire    results_out_V_1_ack_in;
wire    results_out_V_1_ack_out;
reg   [7:0] results_out_V_1_payload_A;
reg   [7:0] results_out_V_1_payload_B;
reg    results_out_V_1_sel_rd;
reg    results_out_V_1_sel_wr;
wire    results_out_V_1_sel;
wire    results_out_V_1_load_A;
wire    results_out_V_1_load_B;
reg   [1:0] results_out_V_1_state;
wire    results_out_V_1_state_cmp_full;
reg   [63:0] current_offset;
reg   [31:0] contacts_size;
reg   [6:0] contacts_V_address0;
reg    contacts_V_ce0;
reg    contacts_V_we0;
wire   [511:0] contacts_V_q0;
reg    contacts_V_ce1;
wire   [511:0] contacts_V_q1;
reg    operation_blk_n;
reg    db_mem_V_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1_flag00000000;
reg   [0:0] exitcond3_reg_341;
reg    db_mem_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_flag00000000;
reg    results_out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage9;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage9_flag00000000;
reg   [0:0] tmp_s_reg_355;
reg   [0:0] ap_reg_pp0_iter1_tmp_s_reg_355;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_flag00000000;
wire    db_mem_V_AWREADY;
wire    db_mem_V_WREADY;
reg    db_mem_V_ARVALID;
wire    db_mem_V_ARREADY;
wire    db_mem_V_RVALID;
reg    db_mem_V_RREADY;
wire   [511:0] db_mem_V_RDATA;
wire    db_mem_V_RLAST;
wire   [0:0] db_mem_V_RID;
wire   [0:0] db_mem_V_RUSER;
wire   [1:0] db_mem_V_RRESP;
wire    db_mem_V_BVALID;
wire   [1:0] db_mem_V_BRESP;
wire   [0:0] db_mem_V_BID;
wire   [0:0] db_mem_V_BUSER;
reg   [31:0] tmp_127_reg_178;
reg    ap_block_state1;
reg   [511:0] contact_in_V_read_reg_310;
wire   [31:0] operation_read_read_fu_116_p2;
reg   [31:0] contacts_size_load_reg_319;
wire   [31:0] tmp_126_fu_219_p1;
reg   [31:0] tmp_126_reg_328;
wire    ap_CS_fsm_state2;
wire   [31:0] tmp_6_fu_241_p2;
wire   [0:0] icmp_fu_231_p2;
wire   [0:0] exitcond3_fu_252_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state67_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
wire   [31:0] database_index_fu_257_p2;
reg   [31:0] database_index_reg_345;
wire   [31:0] tmp_128_fu_273_p2;
reg   [31:0] tmp_128_reg_350;
wire   [0:0] tmp_s_fu_278_p2;
wire    ap_block_state4_pp0_stage1_iter0;
reg    ap_sig_ioackin_db_mem_V_ARREADY;
reg    ap_block_state4_io;
wire    ap_block_state68_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_flag00011001;
reg   [511:0] db_mem_V_addr_read_reg_365;
reg    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_state75_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_flag00011001;
wire   [7:0] tmp_2_fu_293_p1;
wire    ap_block_state12_pp0_stage9_iter0;
wire    ap_block_state76_pp0_stage9_iter1;
reg    ap_block_state76_io;
reg    ap_block_pp0_stage9_flag00011001;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_state66_pp0_stage63_iter0;
wire    ap_block_pp0_stage63_flag00011011;
wire    ap_CS_fsm_pp0_stage63;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_state77_pp0_stage10_iter1;
reg    ap_block_state77_io;
reg    ap_block_pp0_stage10_flag00011011;
wire    grp_match_db_contact_fu_201_ap_start;
wire    grp_match_db_contact_fu_201_ap_done;
wire    grp_match_db_contact_fu_201_ap_idle;
wire    grp_match_db_contact_fu_201_ap_ready;
reg    grp_match_db_contact_fu_201_ap_ce;
wire   [6:0] grp_match_db_contact_fu_201_contacts_V_address0;
wire    grp_match_db_contact_fu_201_contacts_V_ce0;
wire   [6:0] grp_match_db_contact_fu_201_contacts_V_address1;
wire    grp_match_db_contact_fu_201_contacts_V_ce1;
wire   [0:0] grp_match_db_contact_fu_201_ap_return;
reg    ap_predicate_op163_call_state12;
reg    ap_predicate_op164_call_state13;
reg    ap_predicate_op165_call_state14;
reg    ap_predicate_op166_call_state15;
reg    ap_predicate_op167_call_state16;
reg    ap_predicate_op168_call_state17;
reg    ap_predicate_op169_call_state18;
reg    ap_predicate_op170_call_state19;
reg    ap_predicate_op171_call_state20;
reg    ap_predicate_op172_call_state21;
reg    ap_predicate_op173_call_state22;
reg    ap_predicate_op174_call_state23;
reg    ap_predicate_op175_call_state24;
reg    ap_predicate_op176_call_state25;
reg    ap_predicate_op177_call_state26;
reg    ap_predicate_op178_call_state27;
reg    ap_predicate_op179_call_state28;
reg    ap_predicate_op180_call_state29;
reg    ap_predicate_op181_call_state30;
reg    ap_predicate_op182_call_state31;
reg    ap_predicate_op183_call_state32;
reg    ap_predicate_op184_call_state33;
reg    ap_predicate_op185_call_state34;
reg    ap_predicate_op186_call_state35;
reg    ap_predicate_op187_call_state36;
reg    ap_predicate_op188_call_state37;
reg    ap_predicate_op189_call_state38;
reg    ap_predicate_op190_call_state39;
reg    ap_predicate_op191_call_state40;
reg    ap_predicate_op192_call_state41;
reg    ap_predicate_op193_call_state42;
reg    ap_predicate_op194_call_state43;
reg    ap_predicate_op195_call_state44;
reg    ap_predicate_op196_call_state45;
reg    ap_predicate_op197_call_state46;
reg    ap_predicate_op198_call_state47;
reg    ap_predicate_op199_call_state48;
reg    ap_predicate_op200_call_state49;
reg    ap_predicate_op201_call_state50;
reg    ap_predicate_op202_call_state51;
reg    ap_predicate_op203_call_state52;
reg    ap_predicate_op204_call_state53;
reg    ap_predicate_op205_call_state54;
reg    ap_predicate_op206_call_state55;
reg    ap_predicate_op207_call_state56;
reg    ap_predicate_op208_call_state57;
reg    ap_predicate_op209_call_state58;
reg    ap_predicate_op210_call_state59;
reg    ap_predicate_op211_call_state60;
reg    ap_predicate_op212_call_state61;
reg    ap_predicate_op213_call_state62;
reg    ap_predicate_op214_call_state63;
reg    ap_predicate_op215_call_state64;
reg    ap_predicate_op216_call_state65;
reg    ap_predicate_op217_call_state66;
wire    ap_block_state13_pp0_stage10_iter0_ignore_call0;
wire    ap_block_state77_pp0_stage10_iter1_ignore_call0;
reg    ap_block_pp0_stage10_flag00011001;
wire    ap_block_state14_pp0_stage11_iter0_ignore_call0;
wire    ap_block_pp0_stage11_flag00011001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state15_pp0_stage12_iter0_ignore_call0;
wire    ap_block_pp0_stage12_flag00011001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state16_pp0_stage13_iter0_ignore_call0;
wire    ap_block_pp0_stage13_flag00011001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state17_pp0_stage14_iter0_ignore_call0;
wire    ap_block_pp0_stage14_flag00011001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state18_pp0_stage15_iter0_ignore_call0;
wire    ap_block_pp0_stage15_flag00011001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state19_pp0_stage16_iter0_ignore_call0;
wire    ap_block_pp0_stage16_flag00011001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state20_pp0_stage17_iter0_ignore_call0;
wire    ap_block_pp0_stage17_flag00011001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state21_pp0_stage18_iter0_ignore_call0;
wire    ap_block_pp0_stage18_flag00011001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state22_pp0_stage19_iter0_ignore_call0;
wire    ap_block_pp0_stage19_flag00011001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state23_pp0_stage20_iter0_ignore_call0;
wire    ap_block_pp0_stage20_flag00011001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state24_pp0_stage21_iter0_ignore_call0;
wire    ap_block_pp0_stage21_flag00011001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state25_pp0_stage22_iter0_ignore_call0;
wire    ap_block_pp0_stage22_flag00011001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state26_pp0_stage23_iter0_ignore_call0;
wire    ap_block_pp0_stage23_flag00011001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state27_pp0_stage24_iter0_ignore_call0;
wire    ap_block_pp0_stage24_flag00011001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state28_pp0_stage25_iter0_ignore_call0;
wire    ap_block_pp0_stage25_flag00011001;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state29_pp0_stage26_iter0_ignore_call0;
wire    ap_block_pp0_stage26_flag00011001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state30_pp0_stage27_iter0_ignore_call0;
wire    ap_block_pp0_stage27_flag00011001;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state31_pp0_stage28_iter0_ignore_call0;
wire    ap_block_pp0_stage28_flag00011001;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state32_pp0_stage29_iter0_ignore_call0;
wire    ap_block_pp0_stage29_flag00011001;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state33_pp0_stage30_iter0_ignore_call0;
wire    ap_block_pp0_stage30_flag00011001;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state34_pp0_stage31_iter0_ignore_call0;
wire    ap_block_pp0_stage31_flag00011001;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state35_pp0_stage32_iter0_ignore_call0;
wire    ap_block_pp0_stage32_flag00011001;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_state36_pp0_stage33_iter0_ignore_call0;
wire    ap_block_pp0_stage33_flag00011001;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_state37_pp0_stage34_iter0_ignore_call0;
wire    ap_block_pp0_stage34_flag00011001;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_state38_pp0_stage35_iter0_ignore_call0;
wire    ap_block_pp0_stage35_flag00011001;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_state39_pp0_stage36_iter0_ignore_call0;
wire    ap_block_pp0_stage36_flag00011001;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_state40_pp0_stage37_iter0_ignore_call0;
wire    ap_block_pp0_stage37_flag00011001;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_state41_pp0_stage38_iter0_ignore_call0;
wire    ap_block_pp0_stage38_flag00011001;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_state42_pp0_stage39_iter0_ignore_call0;
wire    ap_block_pp0_stage39_flag00011001;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_state43_pp0_stage40_iter0_ignore_call0;
wire    ap_block_pp0_stage40_flag00011001;
wire    ap_CS_fsm_pp0_stage40;
wire    ap_block_state44_pp0_stage41_iter0_ignore_call0;
wire    ap_block_pp0_stage41_flag00011001;
wire    ap_CS_fsm_pp0_stage41;
wire    ap_block_state45_pp0_stage42_iter0_ignore_call0;
wire    ap_block_pp0_stage42_flag00011001;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_state46_pp0_stage43_iter0_ignore_call0;
wire    ap_block_pp0_stage43_flag00011001;
wire    ap_CS_fsm_pp0_stage43;
wire    ap_block_state47_pp0_stage44_iter0_ignore_call0;
wire    ap_block_pp0_stage44_flag00011001;
wire    ap_CS_fsm_pp0_stage44;
wire    ap_block_state48_pp0_stage45_iter0_ignore_call0;
wire    ap_block_pp0_stage45_flag00011001;
wire    ap_CS_fsm_pp0_stage45;
wire    ap_block_state49_pp0_stage46_iter0_ignore_call0;
wire    ap_block_pp0_stage46_flag00011001;
wire    ap_CS_fsm_pp0_stage46;
wire    ap_block_state50_pp0_stage47_iter0_ignore_call0;
wire    ap_block_pp0_stage47_flag00011001;
wire    ap_CS_fsm_pp0_stage47;
wire    ap_block_state51_pp0_stage48_iter0_ignore_call0;
wire    ap_block_pp0_stage48_flag00011001;
wire    ap_CS_fsm_pp0_stage48;
wire    ap_block_state52_pp0_stage49_iter0_ignore_call0;
wire    ap_block_pp0_stage49_flag00011001;
wire    ap_CS_fsm_pp0_stage49;
wire    ap_block_state53_pp0_stage50_iter0_ignore_call0;
wire    ap_block_pp0_stage50_flag00011001;
wire    ap_CS_fsm_pp0_stage50;
wire    ap_block_state54_pp0_stage51_iter0_ignore_call0;
wire    ap_block_pp0_stage51_flag00011001;
wire    ap_CS_fsm_pp0_stage51;
wire    ap_block_state55_pp0_stage52_iter0_ignore_call0;
wire    ap_block_pp0_stage52_flag00011001;
wire    ap_CS_fsm_pp0_stage52;
wire    ap_block_state56_pp0_stage53_iter0_ignore_call0;
wire    ap_block_pp0_stage53_flag00011001;
wire    ap_CS_fsm_pp0_stage53;
wire    ap_block_state57_pp0_stage54_iter0_ignore_call0;
wire    ap_block_pp0_stage54_flag00011001;
wire    ap_CS_fsm_pp0_stage54;
wire    ap_block_state58_pp0_stage55_iter0_ignore_call0;
wire    ap_block_pp0_stage55_flag00011001;
wire    ap_CS_fsm_pp0_stage55;
wire    ap_block_state59_pp0_stage56_iter0_ignore_call0;
wire    ap_block_pp0_stage56_flag00011001;
wire    ap_CS_fsm_pp0_stage56;
wire    ap_block_state60_pp0_stage57_iter0_ignore_call0;
wire    ap_block_pp0_stage57_flag00011001;
wire    ap_CS_fsm_pp0_stage57;
wire    ap_block_state61_pp0_stage58_iter0_ignore_call0;
wire    ap_block_pp0_stage58_flag00011001;
wire    ap_CS_fsm_pp0_stage58;
wire    ap_block_state62_pp0_stage59_iter0_ignore_call0;
wire    ap_block_pp0_stage59_flag00011001;
wire    ap_CS_fsm_pp0_stage59;
wire    ap_block_state63_pp0_stage60_iter0_ignore_call0;
wire    ap_block_pp0_stage60_flag00011001;
wire    ap_CS_fsm_pp0_stage60;
wire    ap_block_state64_pp0_stage61_iter0_ignore_call0;
wire    ap_block_pp0_stage61_flag00011001;
wire    ap_CS_fsm_pp0_stage61;
wire    ap_block_state65_pp0_stage62_iter0_ignore_call0;
wire    ap_block_pp0_stage62_flag00011001;
wire    ap_CS_fsm_pp0_stage62;
wire    ap_block_state66_pp0_stage63_iter0_ignore_call0;
wire    ap_block_pp0_stage63_flag00011001;
wire    ap_block_state5_pp0_stage2_iter0_ignore_call0;
wire    ap_block_state69_pp0_stage2_iter1_ignore_call0;
wire    ap_block_pp0_stage2_flag00011001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage3_iter0_ignore_call0;
wire    ap_block_state70_pp0_stage3_iter1_ignore_call0;
wire    ap_block_pp0_stage3_flag00011001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage4_iter0_ignore_call0;
wire    ap_block_state71_pp0_stage4_iter1_ignore_call0;
wire    ap_block_pp0_stage4_flag00011001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage5_iter0_ignore_call0;
wire    ap_block_state72_pp0_stage5_iter1_ignore_call0;
wire    ap_block_pp0_stage5_flag00011001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state9_pp0_stage6_iter0_ignore_call0;
wire    ap_block_state73_pp0_stage6_iter1_ignore_call0;
wire    ap_block_pp0_stage6_flag00011001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state10_pp0_stage7_iter0_ignore_call0;
wire    ap_block_state74_pp0_stage7_iter1_ignore_call0;
wire    ap_block_pp0_stage7_flag00011001;
wire    ap_CS_fsm_pp0_stage7;
reg   [31:0] tmp_127_phi_fu_182_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [31:0] storemerge_reg_189;
wire    ap_CS_fsm_state79;
reg    ap_reg_grp_match_db_contact_fu_201_ap_start;
reg    ap_predicate_op163_call_state12_state11;
wire    ap_block_pp0_stage11_flag00000000;
wire    ap_block_pp0_stage12_flag00000000;
wire    ap_block_pp0_stage13_flag00000000;
wire    ap_block_pp0_stage14_flag00000000;
wire    ap_block_pp0_stage15_flag00000000;
wire    ap_block_pp0_stage16_flag00000000;
wire    ap_block_pp0_stage17_flag00000000;
wire    ap_block_pp0_stage18_flag00000000;
wire    ap_block_pp0_stage19_flag00000000;
wire    ap_block_pp0_stage20_flag00000000;
wire    ap_block_pp0_stage21_flag00000000;
wire    ap_block_pp0_stage22_flag00000000;
wire    ap_block_pp0_stage23_flag00000000;
wire    ap_block_pp0_stage24_flag00000000;
wire    ap_block_pp0_stage25_flag00000000;
wire    ap_block_pp0_stage26_flag00000000;
wire    ap_block_pp0_stage27_flag00000000;
wire    ap_block_pp0_stage28_flag00000000;
wire    ap_block_pp0_stage29_flag00000000;
wire    ap_block_pp0_stage30_flag00000000;
wire    ap_block_pp0_stage31_flag00000000;
wire    ap_block_pp0_stage32_flag00000000;
wire    ap_block_pp0_stage33_flag00000000;
wire    ap_block_pp0_stage34_flag00000000;
wire    ap_block_pp0_stage35_flag00000000;
wire    ap_block_pp0_stage36_flag00000000;
wire    ap_block_pp0_stage37_flag00000000;
wire    ap_block_pp0_stage38_flag00000000;
wire    ap_block_pp0_stage39_flag00000000;
wire    ap_block_pp0_stage40_flag00000000;
wire    ap_block_pp0_stage41_flag00000000;
wire    ap_block_pp0_stage42_flag00000000;
wire    ap_block_pp0_stage43_flag00000000;
wire    ap_block_pp0_stage44_flag00000000;
wire    ap_block_pp0_stage45_flag00000000;
wire    ap_block_pp0_stage46_flag00000000;
wire    ap_block_pp0_stage47_flag00000000;
wire    ap_block_pp0_stage48_flag00000000;
wire    ap_block_pp0_stage49_flag00000000;
wire    ap_block_pp0_stage50_flag00000000;
wire    ap_block_pp0_stage51_flag00000000;
wire    ap_block_pp0_stage52_flag00000000;
wire    ap_block_pp0_stage53_flag00000000;
wire    ap_block_pp0_stage54_flag00000000;
wire    ap_block_pp0_stage55_flag00000000;
wire    ap_block_pp0_stage56_flag00000000;
wire    ap_block_pp0_stage57_flag00000000;
wire    ap_block_pp0_stage58_flag00000000;
wire    ap_block_pp0_stage59_flag00000000;
wire    ap_block_pp0_stage60_flag00000000;
wire    ap_block_pp0_stage61_flag00000000;
wire    ap_block_pp0_stage62_flag00000000;
wire    ap_block_pp0_stage63_flag00000000;
wire    ap_block_pp0_stage2_flag00000000;
wire    ap_block_pp0_stage3_flag00000000;
wire    ap_block_pp0_stage4_flag00000000;
wire    ap_block_pp0_stage5_flag00000000;
wire    ap_block_pp0_stage6_flag00000000;
wire    ap_block_pp0_stage7_flag00000000;
wire  signed [63:0] tmp_5_fu_237_p1;
wire   [63:0] tmp_129_fu_283_p1;
reg    ap_reg_ioackin_db_mem_V_ARREADY;
wire    ap_block_pp0_stage1_flag00001001;
wire    ap_CS_fsm_state80;
wire   [63:0] tmp_8_fu_267_p2;
reg   [63:0] current_offset_preg;
wire    ap_block_pp0_stage0_flag00001001;
wire    ap_block_pp0_stage9_flag00001001;
wire    ap_block_pp0_stage10_flag00001001;
wire   [24:0] tmp_fu_222_p4;
wire  signed [63:0] tmp_7_fu_263_p1;
wire    ap_CS_fsm_state81;
reg    ap_block_state81;
reg   [69:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_flag00011011;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state69_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_flag00011011;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state70_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_flag00011011;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state71_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_flag00011011;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_state72_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_flag00011011;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_state73_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_flag00011011;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_state74_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_flag00011011;
reg    ap_block_pp0_stage8_flag00011011;
reg    ap_block_pp0_stage9_flag00011011;
wire    ap_block_state14_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_flag00011011;
wire    ap_block_state15_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_flag00011011;
wire    ap_block_state16_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_flag00011011;
wire    ap_block_state17_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_flag00011011;
wire    ap_block_state18_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_flag00011011;
wire    ap_block_state19_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_flag00011011;
wire    ap_block_state20_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_flag00011011;
wire    ap_block_state21_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_flag00011011;
wire    ap_block_state22_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_flag00011011;
wire    ap_block_state23_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_flag00011011;
wire    ap_block_state24_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_flag00011011;
wire    ap_block_state25_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_flag00011011;
wire    ap_block_state26_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_flag00011011;
wire    ap_block_state27_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_flag00011011;
wire    ap_block_state28_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_flag00011011;
wire    ap_block_state29_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_flag00011011;
wire    ap_block_state30_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_flag00011011;
wire    ap_block_state31_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_flag00011011;
wire    ap_block_state32_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_flag00011011;
wire    ap_block_state33_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_flag00011011;
wire    ap_block_state34_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_flag00011011;
wire    ap_block_state35_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_flag00011011;
wire    ap_block_state36_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_flag00011011;
wire    ap_block_state37_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_flag00011011;
wire    ap_block_state38_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_flag00011011;
wire    ap_block_state39_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_flag00011011;
wire    ap_block_state40_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_flag00011011;
wire    ap_block_state41_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_flag00011011;
wire    ap_block_state42_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_flag00011011;
wire    ap_block_state43_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_flag00011011;
wire    ap_block_state44_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_flag00011011;
wire    ap_block_state45_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_flag00011011;
wire    ap_block_state46_pp0_stage43_iter0;
wire    ap_block_pp0_stage43_flag00011011;
wire    ap_block_state47_pp0_stage44_iter0;
wire    ap_block_pp0_stage44_flag00011011;
wire    ap_block_state48_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_flag00011011;
wire    ap_block_state49_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_flag00011011;
wire    ap_block_state50_pp0_stage47_iter0;
wire    ap_block_pp0_stage47_flag00011011;
wire    ap_block_state51_pp0_stage48_iter0;
wire    ap_block_pp0_stage48_flag00011011;
wire    ap_block_state52_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_flag00011011;
wire    ap_block_state53_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_flag00011011;
wire    ap_block_state54_pp0_stage51_iter0;
wire    ap_block_pp0_stage51_flag00011011;
wire    ap_block_state55_pp0_stage52_iter0;
wire    ap_block_pp0_stage52_flag00011011;
wire    ap_block_state56_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_flag00011011;
wire    ap_block_state57_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_flag00011011;
wire    ap_block_state58_pp0_stage55_iter0;
wire    ap_block_pp0_stage55_flag00011011;
wire    ap_block_state59_pp0_stage56_iter0;
wire    ap_block_pp0_stage56_flag00011011;
wire    ap_block_state60_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_flag00011011;
wire    ap_block_state61_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_flag00011011;
wire    ap_block_state62_pp0_stage59_iter0;
wire    ap_block_pp0_stage59_flag00011011;
wire    ap_block_state63_pp0_stage60_iter0;
wire    ap_block_pp0_stage60_flag00011011;
wire    ap_block_state64_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_flag00011011;
wire    ap_block_state65_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_2506;

// power-on initialization
initial begin
#0 ap_CS_fsm = 70'd1;
#0 operation_preg = 32'd0;
#0 operation_ap_vld_preg = 1'b0;
#0 error_out_1_data_reg = 32'd0;
#0 error_out_1_vld_reg = 1'b0;
#0 contacts_size_out_1_data_reg = 32'd0;
#0 contacts_size_out_1_vld_reg = 1'b0;
#0 results_out_V_1_sel_rd = 1'b0;
#0 results_out_V_1_sel_wr = 1'b0;
#0 results_out_V_1_state = 2'd0;
#0 contacts_size = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_grp_match_db_contact_fu_201_ap_start = 1'b0;
#0 ap_reg_ioackin_db_mem_V_ARREADY = 1'b0;
#0 current_offset_preg = 64'd0;
end

contact_discoverybkb #(
    .DataWidth( 512 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
contacts_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(contacts_V_address0),
    .ce0(contacts_V_ce0),
    .we0(contacts_V_we0),
    .d0(contact_in_V_read_reg_310),
    .q0(contacts_V_q0),
    .address1(grp_match_db_contact_fu_201_contacts_V_address1),
    .ce1(contacts_V_ce1),
    .q1(contacts_V_q1)
);

contact_discovery_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
contact_discovery_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .operation(operation),
    .operation_ap_vld(operation_ap_vld),
    .contact_in_V(contact_in_V),
    .offset(offset),
    .db_size_in(db_size_in),
    .error_out(error_out_1_data_reg),
    .contacts_size_out(contacts_size_out_1_data_reg),
    .current_offset(current_offset)
);

contact_discovery_db_mem_V_m_axi #(
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 4 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DB_MEM_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DB_MEM_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DB_MEM_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DB_MEM_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DB_MEM_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DB_MEM_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DB_MEM_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DB_MEM_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_DB_MEM_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_DB_MEM_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DB_MEM_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DB_MEM_V_CACHE_VALUE ))
contact_discovery_db_mem_V_m_axi_U(
    .AWVALID(m_axi_db_mem_V_AWVALID),
    .AWREADY(m_axi_db_mem_V_AWREADY),
    .AWADDR(m_axi_db_mem_V_AWADDR),
    .AWID(m_axi_db_mem_V_AWID),
    .AWLEN(m_axi_db_mem_V_AWLEN),
    .AWSIZE(m_axi_db_mem_V_AWSIZE),
    .AWBURST(m_axi_db_mem_V_AWBURST),
    .AWLOCK(m_axi_db_mem_V_AWLOCK),
    .AWCACHE(m_axi_db_mem_V_AWCACHE),
    .AWPROT(m_axi_db_mem_V_AWPROT),
    .AWQOS(m_axi_db_mem_V_AWQOS),
    .AWREGION(m_axi_db_mem_V_AWREGION),
    .AWUSER(m_axi_db_mem_V_AWUSER),
    .WVALID(m_axi_db_mem_V_WVALID),
    .WREADY(m_axi_db_mem_V_WREADY),
    .WDATA(m_axi_db_mem_V_WDATA),
    .WSTRB(m_axi_db_mem_V_WSTRB),
    .WLAST(m_axi_db_mem_V_WLAST),
    .WID(m_axi_db_mem_V_WID),
    .WUSER(m_axi_db_mem_V_WUSER),
    .ARVALID(m_axi_db_mem_V_ARVALID),
    .ARREADY(m_axi_db_mem_V_ARREADY),
    .ARADDR(m_axi_db_mem_V_ARADDR),
    .ARID(m_axi_db_mem_V_ARID),
    .ARLEN(m_axi_db_mem_V_ARLEN),
    .ARSIZE(m_axi_db_mem_V_ARSIZE),
    .ARBURST(m_axi_db_mem_V_ARBURST),
    .ARLOCK(m_axi_db_mem_V_ARLOCK),
    .ARCACHE(m_axi_db_mem_V_ARCACHE),
    .ARPROT(m_axi_db_mem_V_ARPROT),
    .ARQOS(m_axi_db_mem_V_ARQOS),
    .ARREGION(m_axi_db_mem_V_ARREGION),
    .ARUSER(m_axi_db_mem_V_ARUSER),
    .RVALID(m_axi_db_mem_V_RVALID),
    .RREADY(m_axi_db_mem_V_RREADY),
    .RDATA(m_axi_db_mem_V_RDATA),
    .RLAST(m_axi_db_mem_V_RLAST),
    .RID(m_axi_db_mem_V_RID),
    .RUSER(m_axi_db_mem_V_RUSER),
    .RRESP(m_axi_db_mem_V_RRESP),
    .BVALID(m_axi_db_mem_V_BVALID),
    .BREADY(m_axi_db_mem_V_BREADY),
    .BRESP(m_axi_db_mem_V_BRESP),
    .BID(m_axi_db_mem_V_BID),
    .BUSER(m_axi_db_mem_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(db_mem_V_ARVALID),
    .I_ARREADY(db_mem_V_ARREADY),
    .I_ARADDR(tmp_129_fu_283_p1),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(db_mem_V_RVALID),
    .I_RREADY(db_mem_V_RREADY),
    .I_RDATA(db_mem_V_RDATA),
    .I_RID(db_mem_V_RID),
    .I_RUSER(db_mem_V_RUSER),
    .I_RRESP(db_mem_V_RRESP),
    .I_RLAST(db_mem_V_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(db_mem_V_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(db_mem_V_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(db_mem_V_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(db_mem_V_BRESP),
    .I_BID(db_mem_V_BID),
    .I_BUSER(db_mem_V_BUSER)
);

match_db_contact grp_match_db_contact_fu_201(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_match_db_contact_fu_201_ap_start),
    .ap_done(grp_match_db_contact_fu_201_ap_done),
    .ap_idle(grp_match_db_contact_fu_201_ap_idle),
    .ap_ready(grp_match_db_contact_fu_201_ap_ready),
    .ap_ce(grp_match_db_contact_fu_201_ap_ce),
    .db_item_V(db_mem_V_addr_read_reg_365),
    .contacts_V_address0(grp_match_db_contact_fu_201_contacts_V_address0),
    .contacts_V_ce0(grp_match_db_contact_fu_201_contacts_V_ce0),
    .contacts_V_q0(contacts_V_q0),
    .contacts_V_address1(grp_match_db_contact_fu_201_contacts_V_address1),
    .contacts_V_ce1(grp_match_db_contact_fu_201_contacts_V_ce1),
    .contacts_V_q1(contacts_V_q1),
    .ap_return(grp_match_db_contact_fu_201_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (operation_read_read_fu_116_p2 == 32'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (((ap_block_pp0_stage63_flag00011011 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage63)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00011011 == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 ^ 1'b1);
        end else if ((((ap_block_pp0_stage63_flag00011011 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage63)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (operation_read_read_fu_116_p2 == 32'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_match_db_contact_fu_201_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00011001 == 1'b0) & (1'b1 == ap_predicate_op163_call_state12_state11))) begin
            ap_reg_grp_match_db_contact_fu_201_ap_start <= 1'b1;
        end else if ((1'b1 == grp_match_db_contact_fu_201_ap_ready)) begin
            ap_reg_grp_match_db_contact_fu_201_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_db_mem_V_ARREADY <= 1'b0;
    end else begin
        if ((ap_condition_2506 == 1'b1)) begin
            if ((ap_block_pp0_stage1_flag00011001 == 1'b0)) begin
                ap_reg_ioackin_db_mem_V_ARREADY <= 1'b0;
            end else if (((1'b1 == db_mem_V_ARREADY) & (ap_block_pp0_stage1_flag00001001 == 1'b0))) begin
                ap_reg_ioackin_db_mem_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        current_offset_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond3_fu_252_p2) & (ap_block_pp0_stage0_flag00001001 == 1'b0) & (1'd1 == tmp_s_fu_278_p2))) begin
            current_offset_preg <= tmp_8_fu_267_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        operation_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state81) & ~((1'b0 == results_out_V_1_ack_in) | (1'b0 == error_out_1_ack_in) | (1'b0 == contacts_size_out_1_ack_in)))) begin
            operation_ap_vld_preg <= 1'b0;
        end else if (((1'b1 == operation_ap_vld) & ~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)))) begin
            operation_ap_vld_preg <= operation_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        operation_preg <= 32'd0;
    end else begin
        if (((1'b1 == operation_ap_vld) & ~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)))) begin
            operation_preg <= operation;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        results_out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == results_out_V_1_ack_out) & (1'b1 == results_out_V_1_vld_out))) begin
            results_out_V_1_sel_rd <= ~results_out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        results_out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == results_out_V_1_vld_in) & (1'b1 == results_out_V_1_ack_in))) begin
            results_out_V_1_sel_wr <= ~results_out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        results_out_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == results_out_V_1_vld_in) & (1'b1 == results_out_V_1_ack_out) & (results_out_V_1_state == 2'd3)) | ((1'b0 == results_out_V_1_vld_in) & (results_out_V_1_state == 2'd2)))) begin
            results_out_V_1_state <= 2'd2;
        end else if ((((1'b1 == results_out_V_1_vld_in) & (1'b0 == results_out_V_1_ack_out) & (results_out_V_1_state == 2'd3)) | ((1'b0 == results_out_V_1_ack_out) & (results_out_V_1_state == 2'd1)))) begin
            results_out_V_1_state <= 2'd1;
        end else if ((((1'b1 == results_out_V_1_vld_in) & (results_out_V_1_state == 2'd2)) | ((1'b1 == results_out_V_1_ack_out) & (results_out_V_1_state == 2'd1)) | ((results_out_V_1_state == 2'd3) & ~((1'b1 == results_out_V_1_vld_in) & (1'b0 == results_out_V_1_ack_out)) & ~((1'b0 == results_out_V_1_vld_in) & (1'b1 == results_out_V_1_ack_out))))) begin
            results_out_V_1_state <= 2'd3;
        end else begin
            results_out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd0 == icmp_fu_231_p2))) begin
        contacts_size <= tmp_6_fu_241_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd2))) begin
        contacts_size <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        storemerge_reg_189 <= contacts_size_load_reg_319;
    end else if (((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd0 == icmp_fu_231_p2))) begin
        storemerge_reg_189 <= tmp_6_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond3_reg_341) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        tmp_127_reg_178 <= database_index_reg_345;
    end else if (((1'b1 == ap_CS_fsm_state2) & (operation_read_read_fu_116_p2 == 32'd1))) begin
        tmp_127_reg_178 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_s_reg_355 <= tmp_s_reg_355;
        exitcond3_reg_341 <= exitcond3_fu_252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)))) begin
        contact_in_V_read_reg_310 <= contact_in_V;
        contacts_size_load_reg_319 <= contacts_size;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == contacts_size_out_1_vld_in) & (1'b0 == contacts_size_out_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == contacts_size_out_1_vld_in) & (1'b1 == contacts_size_out_1_vld_reg) & (1'b1 == 1'b1)))) begin
        contacts_size_out_1_data_reg <= contacts_size_out_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        database_index_reg_345 <= database_index_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond3_reg_341) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00011001 == 1'b0))) begin
        db_mem_V_addr_read_reg_365 <= db_mem_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == error_out_1_vld_in) & (1'b0 == error_out_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == error_out_1_vld_in) & (1'b1 == error_out_1_vld_reg) & (1'b1 == 1'b1)))) begin
        error_out_1_data_reg <= error_out_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == results_out_V_1_load_A)) begin
        results_out_V_1_payload_A <= tmp_2_fu_293_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == results_out_V_1_load_B)) begin
        results_out_V_1_payload_B <= tmp_2_fu_293_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (operation_read_read_fu_116_p2 == 32'd1))) begin
        tmp_126_reg_328 <= tmp_126_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond3_fu_252_p2))) begin
        tmp_128_reg_350 <= tmp_128_fu_273_p2;
        tmp_s_reg_355 <= tmp_s_fu_278_p2;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond3_fu_252_p2)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) & ~((1'b0 == results_out_V_1_ack_in) | (1'b0 == error_out_1_ack_in) | (1'b0 == contacts_size_out_1_ack_in)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) & ~((1'b0 == results_out_V_1_ack_in) | (1'b0 == error_out_1_ack_in) | (1'b0 == contacts_size_out_1_ack_in)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_db_mem_V_ARREADY)) begin
        ap_sig_ioackin_db_mem_V_ARREADY = db_mem_V_ARREADY;
    end else begin
        ap_sig_ioackin_db_mem_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        contacts_V_address0 = tmp_5_fu_237_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage9_flag00000000 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00000000 == 1'b0) & (1'b1 == ap_predicate_op163_call_state12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00000000 == 1'b0) & (1'b1 == ap_predicate_op164_call_state13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op165_call_state14) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op166_call_state15) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op167_call_state16) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op168_call_state17) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op169_call_state18) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op170_call_state19) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op171_call_state20) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op172_call_state21) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op173_call_state22) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op174_call_state23) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op175_call_state24) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op176_call_state25) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op177_call_state26) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op178_call_state27) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op179_call_state28) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op180_call_state29) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op181_call_state30) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op182_call_state31) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op183_call_state32) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op184_call_state33) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op185_call_state34) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op186_call_state35) & (1'b1 == ap_CS_fsm_pp0_stage32) & (ap_block_pp0_stage32_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op187_call_state36) & (1'b1 == ap_CS_fsm_pp0_stage33) & (ap_block_pp0_stage33_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op188_call_state37) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_block_pp0_stage34_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op189_call_state38) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_block_pp0_stage35_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op190_call_state39) & (1'b1 == ap_CS_fsm_pp0_stage36) & (ap_block_pp0_stage36_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op191_call_state40) & (1'b1 == ap_CS_fsm_pp0_stage37) & (ap_block_pp0_stage37_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op192_call_state41) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_block_pp0_stage38_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op193_call_state42) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_block_pp0_stage39_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op194_call_state43) & (1'b1 == ap_CS_fsm_pp0_stage40) & (ap_block_pp0_stage40_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op195_call_state44) & (1'b1 == ap_CS_fsm_pp0_stage41) & (ap_block_pp0_stage41_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op196_call_state45) & (1'b1 == ap_CS_fsm_pp0_stage42) & (ap_block_pp0_stage42_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op197_call_state46) & (1'b1 == ap_CS_fsm_pp0_stage43) & (ap_block_pp0_stage43_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op198_call_state47) & (1'b1 == ap_CS_fsm_pp0_stage44) & (ap_block_pp0_stage44_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op199_call_state48) & (1'b1 == ap_CS_fsm_pp0_stage45) & (ap_block_pp0_stage45_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op200_call_state49) & (1'b1 == ap_CS_fsm_pp0_stage46) & (ap_block_pp0_stage46_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op201_call_state50) & (1'b1 == ap_CS_fsm_pp0_stage47) & (ap_block_pp0_stage47_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op202_call_state51) & (1'b1 == ap_CS_fsm_pp0_stage48) & (ap_block_pp0_stage48_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op203_call_state52) & (1'b1 == ap_CS_fsm_pp0_stage49) & (ap_block_pp0_stage49_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op204_call_state53) & (1'b1 == ap_CS_fsm_pp0_stage50) & (ap_block_pp0_stage50_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op205_call_state54) & (1'b1 == ap_CS_fsm_pp0_stage51) & (ap_block_pp0_stage51_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op206_call_state55) & (1'b1 == ap_CS_fsm_pp0_stage52) & (ap_block_pp0_stage52_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op207_call_state56) & (1'b1 == ap_CS_fsm_pp0_stage53) & (ap_block_pp0_stage53_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op208_call_state57) & (1'b1 == ap_CS_fsm_pp0_stage54) & (ap_block_pp0_stage54_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op209_call_state58) & (1'b1 == ap_CS_fsm_pp0_stage55) & (ap_block_pp0_stage55_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op210_call_state59) & (1'b1 == ap_CS_fsm_pp0_stage56) & (ap_block_pp0_stage56_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op211_call_state60) & (1'b1 == ap_CS_fsm_pp0_stage57) & (ap_block_pp0_stage57_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op212_call_state61) & (1'b1 == ap_CS_fsm_pp0_stage58) & (ap_block_pp0_stage58_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op213_call_state62) & (1'b1 == ap_CS_fsm_pp0_stage59) & (ap_block_pp0_stage59_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op214_call_state63) & (1'b1 == ap_CS_fsm_pp0_stage60) & (ap_block_pp0_stage60_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op215_call_state64) & (1'b1 == ap_CS_fsm_pp0_stage61) & (ap_block_pp0_stage61_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op216_call_state65) & (1'b1 == ap_CS_fsm_pp0_stage62) & (ap_block_pp0_stage62_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage63) & (1'b1 == ap_predicate_op217_call_state66) & (ap_block_pp0_stage63_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == tmp_s_reg_355) & (ap_block_pp0_stage0_flag00000000 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_flag00000000 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_flag00000000 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355)))) begin
        contacts_V_address0 = grp_match_db_contact_fu_201_contacts_V_address0;
    end else begin
        contacts_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        contacts_V_ce0 = 1'b1;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00011001 == 1'b0) & (1'b1 == ap_predicate_op163_call_state12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_predicate_op164_call_state13) & (ap_block_pp0_stage10_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op165_call_state14) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op166_call_state15) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op167_call_state16) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op168_call_state17) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op169_call_state18) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op170_call_state19) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op171_call_state20) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op172_call_state21) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op173_call_state22) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op174_call_state23) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op175_call_state24) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op176_call_state25) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op177_call_state26) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op178_call_state27) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op179_call_state28) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op180_call_state29) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op181_call_state30) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op182_call_state31) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op183_call_state32) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op184_call_state33) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op185_call_state34) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op186_call_state35) & (1'b1 == ap_CS_fsm_pp0_stage32) & (ap_block_pp0_stage32_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op187_call_state36) & (1'b1 == ap_CS_fsm_pp0_stage33) & (ap_block_pp0_stage33_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op188_call_state37) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_block_pp0_stage34_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op189_call_state38) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_block_pp0_stage35_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op190_call_state39) & (1'b1 == ap_CS_fsm_pp0_stage36) & (ap_block_pp0_stage36_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op191_call_state40) & (1'b1 == ap_CS_fsm_pp0_stage37) & (ap_block_pp0_stage37_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op192_call_state41) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_block_pp0_stage38_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op193_call_state42) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_block_pp0_stage39_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op194_call_state43) & (1'b1 == ap_CS_fsm_pp0_stage40) & (ap_block_pp0_stage40_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op195_call_state44) & (1'b1 == ap_CS_fsm_pp0_stage41) & (ap_block_pp0_stage41_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op196_call_state45) & (1'b1 == ap_CS_fsm_pp0_stage42) & (ap_block_pp0_stage42_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op197_call_state46) & (1'b1 == ap_CS_fsm_pp0_stage43) & (ap_block_pp0_stage43_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op198_call_state47) & (1'b1 == ap_CS_fsm_pp0_stage44) & (ap_block_pp0_stage44_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op199_call_state48) & (1'b1 == ap_CS_fsm_pp0_stage45) & (ap_block_pp0_stage45_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op200_call_state49) & (1'b1 == ap_CS_fsm_pp0_stage46) & (ap_block_pp0_stage46_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op201_call_state50) & (1'b1 == ap_CS_fsm_pp0_stage47) & (ap_block_pp0_stage47_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op202_call_state51) & (1'b1 == ap_CS_fsm_pp0_stage48) & (ap_block_pp0_stage48_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op203_call_state52) & (1'b1 == ap_CS_fsm_pp0_stage49) & (ap_block_pp0_stage49_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op204_call_state53) & (1'b1 == ap_CS_fsm_pp0_stage50) & (ap_block_pp0_stage50_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op205_call_state54) & (1'b1 == ap_CS_fsm_pp0_stage51) & (ap_block_pp0_stage51_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op206_call_state55) & (1'b1 == ap_CS_fsm_pp0_stage52) & (ap_block_pp0_stage52_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op207_call_state56) & (1'b1 == ap_CS_fsm_pp0_stage53) & (ap_block_pp0_stage53_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op208_call_state57) & (1'b1 == ap_CS_fsm_pp0_stage54) & (ap_block_pp0_stage54_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op209_call_state58) & (1'b1 == ap_CS_fsm_pp0_stage55) & (ap_block_pp0_stage55_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op210_call_state59) & (1'b1 == ap_CS_fsm_pp0_stage56) & (ap_block_pp0_stage56_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op211_call_state60) & (1'b1 == ap_CS_fsm_pp0_stage57) & (ap_block_pp0_stage57_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op212_call_state61) & (1'b1 == ap_CS_fsm_pp0_stage58) & (ap_block_pp0_stage58_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op213_call_state62) & (1'b1 == ap_CS_fsm_pp0_stage59) & (ap_block_pp0_stage59_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op214_call_state63) & (1'b1 == ap_CS_fsm_pp0_stage60) & (ap_block_pp0_stage60_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op215_call_state64) & (1'b1 == ap_CS_fsm_pp0_stage61) & (ap_block_pp0_stage61_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op216_call_state65) & (1'b1 == ap_CS_fsm_pp0_stage62) & (ap_block_pp0_stage62_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage63) & (1'b1 == ap_predicate_op217_call_state66) & (ap_block_pp0_stage63_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == tmp_s_reg_355)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage8_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage9_flag00011001 == 1'b0)))) begin
        contacts_V_ce0 = grp_match_db_contact_fu_201_contacts_V_ce0;
    end else begin
        contacts_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00011001 == 1'b0) & (1'b1 == ap_predicate_op163_call_state12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_predicate_op164_call_state13) & (ap_block_pp0_stage10_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op165_call_state14) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op166_call_state15) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op167_call_state16) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op168_call_state17) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op169_call_state18) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op170_call_state19) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op171_call_state20) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op172_call_state21) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op173_call_state22) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op174_call_state23) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op175_call_state24) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op176_call_state25) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op177_call_state26) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op178_call_state27) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op179_call_state28) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op180_call_state29) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op181_call_state30) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op182_call_state31) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op183_call_state32) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op184_call_state33) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op185_call_state34) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op186_call_state35) & (1'b1 == ap_CS_fsm_pp0_stage32) & (ap_block_pp0_stage32_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op187_call_state36) & (1'b1 == ap_CS_fsm_pp0_stage33) & (ap_block_pp0_stage33_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op188_call_state37) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_block_pp0_stage34_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op189_call_state38) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_block_pp0_stage35_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op190_call_state39) & (1'b1 == ap_CS_fsm_pp0_stage36) & (ap_block_pp0_stage36_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op191_call_state40) & (1'b1 == ap_CS_fsm_pp0_stage37) & (ap_block_pp0_stage37_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op192_call_state41) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_block_pp0_stage38_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op193_call_state42) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_block_pp0_stage39_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op194_call_state43) & (1'b1 == ap_CS_fsm_pp0_stage40) & (ap_block_pp0_stage40_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op195_call_state44) & (1'b1 == ap_CS_fsm_pp0_stage41) & (ap_block_pp0_stage41_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op196_call_state45) & (1'b1 == ap_CS_fsm_pp0_stage42) & (ap_block_pp0_stage42_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op197_call_state46) & (1'b1 == ap_CS_fsm_pp0_stage43) & (ap_block_pp0_stage43_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op198_call_state47) & (1'b1 == ap_CS_fsm_pp0_stage44) & (ap_block_pp0_stage44_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op199_call_state48) & (1'b1 == ap_CS_fsm_pp0_stage45) & (ap_block_pp0_stage45_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op200_call_state49) & (1'b1 == ap_CS_fsm_pp0_stage46) & (ap_block_pp0_stage46_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op201_call_state50) & (1'b1 == ap_CS_fsm_pp0_stage47) & (ap_block_pp0_stage47_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op202_call_state51) & (1'b1 == ap_CS_fsm_pp0_stage48) & (ap_block_pp0_stage48_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op203_call_state52) & (1'b1 == ap_CS_fsm_pp0_stage49) & (ap_block_pp0_stage49_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op204_call_state53) & (1'b1 == ap_CS_fsm_pp0_stage50) & (ap_block_pp0_stage50_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op205_call_state54) & (1'b1 == ap_CS_fsm_pp0_stage51) & (ap_block_pp0_stage51_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op206_call_state55) & (1'b1 == ap_CS_fsm_pp0_stage52) & (ap_block_pp0_stage52_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op207_call_state56) & (1'b1 == ap_CS_fsm_pp0_stage53) & (ap_block_pp0_stage53_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op208_call_state57) & (1'b1 == ap_CS_fsm_pp0_stage54) & (ap_block_pp0_stage54_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op209_call_state58) & (1'b1 == ap_CS_fsm_pp0_stage55) & (ap_block_pp0_stage55_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op210_call_state59) & (1'b1 == ap_CS_fsm_pp0_stage56) & (ap_block_pp0_stage56_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op211_call_state60) & (1'b1 == ap_CS_fsm_pp0_stage57) & (ap_block_pp0_stage57_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op212_call_state61) & (1'b1 == ap_CS_fsm_pp0_stage58) & (ap_block_pp0_stage58_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op213_call_state62) & (1'b1 == ap_CS_fsm_pp0_stage59) & (ap_block_pp0_stage59_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op214_call_state63) & (1'b1 == ap_CS_fsm_pp0_stage60) & (ap_block_pp0_stage60_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op215_call_state64) & (1'b1 == ap_CS_fsm_pp0_stage61) & (ap_block_pp0_stage61_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op216_call_state65) & (1'b1 == ap_CS_fsm_pp0_stage62) & (ap_block_pp0_stage62_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage63) & (1'b1 == ap_predicate_op217_call_state66) & (ap_block_pp0_stage63_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == tmp_s_reg_355)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage8_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage9_flag00011001 == 1'b0)))) begin
        contacts_V_ce1 = grp_match_db_contact_fu_201_contacts_V_ce1;
    end else begin
        contacts_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd0 == icmp_fu_231_p2))) begin
        contacts_V_we0 = 1'b1;
    end else begin
        contacts_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == contacts_size_out_1_vld_reg) | ((1'b1 == contacts_size_out_1_vld_reg) & (1'b1 == 1'b1)))) begin
        contacts_size_out_1_ack_in = 1'b1;
    end else begin
        contacts_size_out_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        contacts_size_out_1_data_in = storemerge_reg_189;
    end else if ((((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd1)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & ~(32'd0 == operation_read_read_fu_116_p2) & ~(operation_read_read_fu_116_p2 == 32'd1) & ~(operation_read_read_fu_116_p2 == 32'd2)))) begin
        contacts_size_out_1_data_in = contacts_size;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd2))) begin
        contacts_size_out_1_data_in = 32'd0;
    end else begin
        contacts_size_out_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd2)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd1)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & ~(32'd0 == operation_read_read_fu_116_p2) & ~(operation_read_read_fu_116_p2 == 32'd1) & ~(operation_read_read_fu_116_p2 == 32'd2)) | (1'b1 == ap_CS_fsm_state80))) begin
        contacts_size_out_1_vld_in = 1'b1;
    end else begin
        contacts_size_out_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond3_fu_252_p2) & (ap_block_pp0_stage0_flag00001001 == 1'b0) & (1'd1 == tmp_s_fu_278_p2))) begin
        current_offset = tmp_8_fu_267_p2;
    end else begin
        current_offset = current_offset_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond3_reg_341) & (ap_block_pp0_stage1_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_db_mem_V_ARREADY))) begin
        db_mem_V_ARVALID = 1'b1;
    end else begin
        db_mem_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond3_reg_341) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00011001 == 1'b0))) begin
        db_mem_V_RREADY = 1'b1;
    end else begin
        db_mem_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'd0 == exitcond3_reg_341))) begin
        db_mem_V_blk_n_AR = m_axi_db_mem_V_ARREADY;
    end else begin
        db_mem_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond3_reg_341) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00000000 == 1'b0))) begin
        db_mem_V_blk_n_R = m_axi_db_mem_V_RVALID;
    end else begin
        db_mem_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == error_out_1_vld_reg) | ((1'b1 == error_out_1_vld_reg) & (1'b1 == 1'b1)))) begin
        error_out_1_ack_in = 1'b1;
    end else begin
        error_out_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd1 == icmp_fu_231_p2))) begin
        error_out_1_data_in = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & ~(32'd0 == operation_read_read_fu_116_p2) & ~(operation_read_read_fu_116_p2 == 32'd1) & ~(operation_read_read_fu_116_p2 == 32'd2))) begin
        error_out_1_data_in = 32'd3;
    end else if ((((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd2)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd1)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (32'd0 == operation_read_read_fu_116_p2)))) begin
        error_out_1_data_in = 32'd0;
    end else begin
        error_out_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd2)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (operation_read_read_fu_116_p2 == 32'd1)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & (32'd0 == operation_read_read_fu_116_p2)) | ((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)) & ~(32'd0 == operation_read_read_fu_116_p2) & ~(operation_read_read_fu_116_p2 == 32'd1) & ~(operation_read_read_fu_116_p2 == 32'd2)) | ((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd1 == icmp_fu_231_p2)))) begin
        error_out_1_vld_in = 1'b1;
    end else begin
        error_out_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (ap_block_pp0_stage32_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (ap_block_pp0_stage33_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (ap_block_pp0_stage34_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (ap_block_pp0_stage35_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (ap_block_pp0_stage36_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (ap_block_pp0_stage37_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (ap_block_pp0_stage38_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (ap_block_pp0_stage39_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (ap_block_pp0_stage40_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (ap_block_pp0_stage41_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (ap_block_pp0_stage42_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (ap_block_pp0_stage43_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (ap_block_pp0_stage44_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (ap_block_pp0_stage45_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (ap_block_pp0_stage46_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (ap_block_pp0_stage47_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage48) & (ap_block_pp0_stage48_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage49) & (ap_block_pp0_stage49_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage50) & (ap_block_pp0_stage50_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage51) & (ap_block_pp0_stage51_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage52) & (ap_block_pp0_stage52_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage53) & (ap_block_pp0_stage53_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage54) & (ap_block_pp0_stage54_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage55) & (ap_block_pp0_stage55_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage56) & (ap_block_pp0_stage56_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage57) & (ap_block_pp0_stage57_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage58) & (ap_block_pp0_stage58_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage59) & (ap_block_pp0_stage59_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage60) & (ap_block_pp0_stage60_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage61) & (ap_block_pp0_stage61_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage62) & (ap_block_pp0_stage62_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage63) & (ap_block_pp0_stage63_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_flag00011001 == 1'b0)))) begin
        grp_match_db_contact_fu_201_ap_ce = 1'b1;
    end else begin
        grp_match_db_contact_fu_201_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == operation_ap_vld)) begin
        operation_ap_vld_in_sig = operation_ap_vld;
    end else begin
        operation_ap_vld_in_sig = operation_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        operation_blk_n = operation_ap_vld;
    end else begin
        operation_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == operation_ap_vld)) begin
        operation_in_sig = operation;
    end else begin
        operation_in_sig = operation_preg;
    end
end

always @ (*) begin
    if ((1'b1 == results_out_V_1_sel)) begin
        results_out_V_1_data_out = results_out_V_1_payload_B;
    end else begin
        results_out_V_1_data_out = results_out_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (ap_block_pp0_stage9_flag00011001 == 1'b0))) begin
        results_out_V_1_vld_in = 1'b1;
    end else begin
        results_out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage9_flag00000000 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00000000 == 1'b0)))) begin
        results_out_V_TDATA_blk_n = results_out_V_1_state[1'd1];
    end else begin
        results_out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd0 == exitcond3_reg_341) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        tmp_127_phi_fu_182_p4 = database_index_reg_345;
    end else begin
        tmp_127_phi_fu_182_p4 = tmp_127_reg_178;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd0 == icmp_fu_231_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else if (((1'b1 == ap_CS_fsm_state2) & (32'd0 == operation_read_read_fu_116_p2) & (1'd1 == icmp_fu_231_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else if (((1'b1 == ap_CS_fsm_state2) & (operation_read_read_fu_116_p2 == 32'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond3_fu_252_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond3_fu_252_p2) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if (((ap_block_pp0_stage10_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((ap_block_pp0_stage11_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((ap_block_pp0_stage12_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((ap_block_pp0_stage13_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((ap_block_pp0_stage14_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((ap_block_pp0_stage15_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((ap_block_pp0_stage16_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((ap_block_pp0_stage17_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((ap_block_pp0_stage18_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((ap_block_pp0_stage19_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((ap_block_pp0_stage20_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((ap_block_pp0_stage21_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((ap_block_pp0_stage22_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((ap_block_pp0_stage23_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((ap_block_pp0_stage24_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((ap_block_pp0_stage25_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((ap_block_pp0_stage26_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((ap_block_pp0_stage27_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((ap_block_pp0_stage28_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((ap_block_pp0_stage29_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((ap_block_pp0_stage30_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((ap_block_pp0_stage31_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((ap_block_pp0_stage32_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((ap_block_pp0_stage33_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((ap_block_pp0_stage34_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((ap_block_pp0_stage35_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((ap_block_pp0_stage36_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((ap_block_pp0_stage37_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((ap_block_pp0_stage38_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((ap_block_pp0_stage39_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((ap_block_pp0_stage40_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((ap_block_pp0_stage41_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((ap_block_pp0_stage42_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((ap_block_pp0_stage43_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((ap_block_pp0_stage44_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((ap_block_pp0_stage45_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((ap_block_pp0_stage46_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((ap_block_pp0_stage47_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((ap_block_pp0_stage48_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((ap_block_pp0_stage49_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((ap_block_pp0_stage50_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((ap_block_pp0_stage51_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((ap_block_pp0_stage52_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((ap_block_pp0_stage53_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((ap_block_pp0_stage54_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((ap_block_pp0_stage55_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((ap_block_pp0_stage56_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((ap_block_pp0_stage57_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((ap_block_pp0_stage58_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((ap_block_pp0_stage59_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((ap_block_pp0_stage60_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((ap_block_pp0_stage61_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((ap_block_pp0_stage62_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((ap_block_pp0_stage63_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            if (((1'b1 == ap_CS_fsm_state81) & ~((1'b0 == results_out_V_1_ack_in) | (1'b0 == error_out_1_ack_in) | (1'b0 == contacts_size_out_1_ack_in)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage40 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp0_stage41 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp0_stage43 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage44 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp0_stage45 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp0_stage46 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp0_stage47 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp0_stage48 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_pp0_stage49 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage50 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp0_stage51 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp0_stage52 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_pp0_stage53 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp0_stage54 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp0_stage55 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp0_stage56 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp0_stage57 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp0_stage58 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp0_stage59 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage60 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp0_stage61 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp0_stage62 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp0_stage63 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd69];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00001001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_flag00001001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_block_state77_io));
end

always @ (*) begin
    ap_block_pp0_stage10_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_block_state77_io));
end

assign ap_block_pp0_stage11_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00001001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage1_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage20_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond3_reg_341) & (1'b0 == db_mem_V_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage8_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond3_reg_341) & (1'b0 == db_mem_V_RVALID));
end

assign ap_block_pp0_stage9_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_flag00001001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_block_state76_io));
end

always @ (*) begin
    ap_block_pp0_stage9_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_block_state76_io));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (1'b0 == operation_ap_vld_in_sig));
end

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage8_iter0 = ((1'd0 == exitcond3_reg_341) & (1'b0 == db_mem_V_RVALID));
end

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage15_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage16_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage17_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage18_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage19_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage20_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage21_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage22_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage23_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage24_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage25_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage26_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage27_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage28_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage29_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage30_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage31_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage32_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage33_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage34_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage35_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage36_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage37_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage38_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage39_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage40_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage41_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage42_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage43_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage44_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage45_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage46_iter0_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((1'd0 == exitcond3_reg_341) & (1'b0 == ap_sig_ioackin_db_mem_V_ARREADY));
end

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage47_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage48_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage49_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage50_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage51_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage52_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage53_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage54_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage55_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage56_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage57_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage58_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage59_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage60_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage61_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage62_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage63_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage3_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage4_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage5_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage6_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage7_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state76_io = ((1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b0 == results_out_V_1_ack_in));
end

assign ap_block_state76_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state77_io = ((1'd1 == ap_reg_pp0_iter1_tmp_s_reg_355) & (1'b0 == results_out_V_1_ack_in));
end

assign ap_block_state77_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage10_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81 = ((1'b0 == results_out_V_1_ack_in) | (1'b0 == error_out_1_ack_in) | (1'b0 == contacts_size_out_1_ack_in));
end

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2506 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond3_reg_341));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op163_call_state12 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op163_call_state12_state11 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op164_call_state13 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op165_call_state14 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op166_call_state15 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op167_call_state16 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op168_call_state17 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op169_call_state18 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op170_call_state19 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op171_call_state20 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op172_call_state21 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op173_call_state22 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op174_call_state23 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op175_call_state24 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op176_call_state25 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op177_call_state26 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op178_call_state27 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op179_call_state28 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op180_call_state29 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op181_call_state30 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op182_call_state31 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op183_call_state32 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op184_call_state33 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op185_call_state34 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op186_call_state35 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op187_call_state36 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op188_call_state37 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op189_call_state38 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op190_call_state39 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op191_call_state40 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op192_call_state41 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op193_call_state42 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op194_call_state43 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op195_call_state44 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op196_call_state45 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op197_call_state46 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op198_call_state47 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op199_call_state48 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op200_call_state49 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op201_call_state50 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op202_call_state51 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op203_call_state52 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op204_call_state53 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op205_call_state54 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op206_call_state55 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op207_call_state56 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op208_call_state57 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op209_call_state58 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op210_call_state59 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op211_call_state60 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op212_call_state61 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op213_call_state62 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op214_call_state63 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op215_call_state64 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op216_call_state65 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_predicate_op217_call_state66 = ((1'd0 == exitcond3_reg_341) & (1'd1 == tmp_s_reg_355));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign database_index_fu_257_p2 = (tmp_127_phi_fu_182_p4 + 32'd1);

assign exitcond3_fu_252_p2 = ((tmp_127_phi_fu_182_p4 == db_size_in) ? 1'b1 : 1'b0);

assign grp_match_db_contact_fu_201_ap_start = ap_reg_grp_match_db_contact_fu_201_ap_start;

assign icmp_fu_231_p2 = (($signed(tmp_fu_222_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign operation_read_read_fu_116_p2 = operation_in_sig;

assign results_out_V_1_ack_in = results_out_V_1_state[1'd1];

assign results_out_V_1_ack_out = results_out_V_TREADY;

assign results_out_V_1_load_A = (results_out_V_1_state_cmp_full & ~results_out_V_1_sel_wr);

assign results_out_V_1_load_B = (results_out_V_1_sel_wr & results_out_V_1_state_cmp_full);

assign results_out_V_1_sel = results_out_V_1_sel_rd;

assign results_out_V_1_state_cmp_full = ((results_out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign results_out_V_1_vld_out = results_out_V_1_state[1'd0];

assign results_out_V_TDATA = results_out_V_1_data_out;

assign results_out_V_TVALID = results_out_V_1_state[1'd0];

assign tmp_126_fu_219_p1 = offset[31:0];

assign tmp_128_fu_273_p2 = (tmp_126_reg_328 + tmp_127_phi_fu_182_p4);

assign tmp_129_fu_283_p1 = $signed(tmp_128_reg_350);

assign tmp_2_fu_293_p1 = grp_match_db_contact_fu_201_ap_return;

assign tmp_5_fu_237_p1 = $signed(contacts_size_load_reg_319);

assign tmp_6_fu_241_p2 = (contacts_size_load_reg_319 + 32'd1);

assign tmp_7_fu_263_p1 = $signed(tmp_127_phi_fu_182_p4);

assign tmp_8_fu_267_p2 = ($signed(tmp_7_fu_263_p1) + $signed(offset));

assign tmp_fu_222_p4 = {{contacts_size_load_reg_319[31:7]}};

assign tmp_s_fu_278_p2 = ((tmp_127_phi_fu_182_p4 < db_size_in) ? 1'b1 : 1'b0);

endmodule //contact_discovery
