-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha512_final is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    md_length_i : IN STD_LOGIC_VECTOR (63 downto 0);
    md_length_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    md_length_o_ap_vld : OUT STD_LOGIC;
    md_state_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    md_state_ce0 : OUT STD_LOGIC;
    md_state_we0 : OUT STD_LOGIC;
    md_state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    md_state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    md_curlen_i : IN STD_LOGIC_VECTOR (63 downto 0);
    md_curlen_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    md_curlen_o_ap_vld : OUT STD_LOGIC;
    md_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    md_buf_ce0 : OUT STD_LOGIC;
    md_buf_we0 : OUT STD_LOGIC;
    md_buf_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    md_buf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    md_buf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    md_buf_ce1 : OUT STD_LOGIC;
    md_buf_we1 : OUT STD_LOGIC;
    md_buf_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    md_buf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_r_ce1 : OUT STD_LOGIC;
    out_r_we1 : OUT STD_LOGIC;
    out_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sha512_final is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_78 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111000";
    constant ap_const_lv64_79 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111001";
    constant ap_const_lv64_7A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_7B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111011";
    constant ap_const_lv64_7C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_7D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111101";
    constant ap_const_lv64_7E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111110";
    constant ap_const_lv64_7F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001111111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv57_0 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal temp_index_6_fu_557_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_index_6_reg_910 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_26_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_reg_915 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond1_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_index_7_fu_574_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_index_7_reg_928 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_27_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_933 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond2_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_946 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_28_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_951 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_reg_956 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_reg_961 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_reg_966 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_678_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_reg_971 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_index_8_fu_688_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_index_8_reg_979 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_37_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_reg_984 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond9_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_index_9_fu_705_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_index_9_reg_997 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_38_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_reg_1002 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond8_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_722_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_1015 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal exitcond_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_733_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_57_reg_1025 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_42_fu_748_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_42_reg_1030 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_45_reg_1040 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_reg_1045 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_reg_1050 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_reg_1055 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_reg_1060 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_832_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_reg_1065 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_buf_ce0 : STD_LOGIC;
    signal temp_buf_we0 : STD_LOGIC;
    signal temp_buf_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_buf_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_buf_ce1 : STD_LOGIC;
    signal temp_buf_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha512_compress_128_fu_463_ap_start : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_ap_done : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_ap_idle : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_ap_ready : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_md_state_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sha512_compress_128_fu_463_md_state_ce0 : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_md_state_we0 : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_md_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sha512_compress_128_fu_463_buf_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sha512_compress_128_fu_463_buf_r_ce0 : STD_LOGIC;
    signal grp_sha512_compress_128_fu_463_buf_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sha512_compress_128_fu_463_buf_r_ce1 : STD_LOGIC;
    signal temp_index_reg_408 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_54_fu_532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_index_1_reg_419 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal temp_index_2_reg_430 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal temp_index_3_reg_441 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_reg_452 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_reg_grp_sha512_compress_128_fu_463_ap_start : STD_LOGIC := '0';
    signal md_buf_addr_9_gep_fu_163_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal md_buf_addr_12_gep_fu_209_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_40_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum1_cast_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum2_cast_fu_841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal p_sum3_cast_fu_851_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum4_cast_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal p_sum5_cast_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum6_cast_fu_881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum7_cast_fu_891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_504_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_511_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_cast_fu_601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_472_p4 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_39_fu_488_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_492_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_cast_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_518_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_528_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_540_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_585_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_595_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_sum1_fu_771_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum2_fu_836_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum3_fu_846_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum4_fu_856_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum5_fu_866_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum6_fu_876_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum7_fu_886_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);

    component sha512_compress_128 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        md_state_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        md_state_ce0 : OUT STD_LOGIC;
        md_state_we0 : OUT STD_LOGIC;
        md_state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        md_state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sha512_update_32_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    temp_buf_U : component sha512_update_32_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_buf_address0,
        ce0 => temp_buf_ce0,
        we0 => temp_buf_we0,
        d0 => temp_buf_d0,
        q0 => temp_buf_q0,
        address1 => grp_sha512_compress_128_fu_463_buf_r_address1,
        ce1 => temp_buf_ce1,
        q1 => temp_buf_q1);

    grp_sha512_compress_128_fu_463 : component sha512_compress_128
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sha512_compress_128_fu_463_ap_start,
        ap_done => grp_sha512_compress_128_fu_463_ap_done,
        ap_idle => grp_sha512_compress_128_fu_463_ap_idle,
        ap_ready => grp_sha512_compress_128_fu_463_ap_ready,
        md_state_address0 => grp_sha512_compress_128_fu_463_md_state_address0,
        md_state_ce0 => grp_sha512_compress_128_fu_463_md_state_ce0,
        md_state_we0 => grp_sha512_compress_128_fu_463_md_state_we0,
        md_state_d0 => grp_sha512_compress_128_fu_463_md_state_d0,
        md_state_q0 => md_state_q0,
        buf_r_address0 => grp_sha512_compress_128_fu_463_buf_r_address0,
        buf_r_ce0 => grp_sha512_compress_128_fu_463_buf_r_ce0,
        buf_r_q0 => temp_buf_q0,
        buf_r_address1 => grp_sha512_compress_128_fu_463_buf_r_address1,
        buf_r_ce1 => grp_sha512_compress_128_fu_463_buf_r_ce1,
        buf_r_q1 => temp_buf_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_sha512_compress_128_fu_463_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_sha512_compress_128_fu_463_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond1_fu_551_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = exitcond9_fu_682_p2)))) then 
                    ap_reg_grp_sha512_compress_128_fu_463_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sha512_compress_128_fu_463_ap_ready)) then 
                    ap_reg_grp_sha512_compress_128_fu_463_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = exitcond8_fu_699_p2))) then 
                i_reg_452 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i_reg_452 <= i_3_reg_1015;
            end if; 
        end if;
    end process;

    temp_index_1_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                temp_index_1_reg_419 <= temp_index_7_reg_928;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_sha512_compress_128_fu_463_ap_done = ap_const_logic_1))) then 
                temp_index_1_reg_419 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    temp_index_2_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                temp_index_2_reg_430 <= temp_index_8_reg_979;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                temp_index_2_reg_430 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    temp_index_3_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                temp_index_3_reg_441 <= temp_index_9_reg_997;
            elsif (((grp_sha512_compress_128_fu_463_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                temp_index_3_reg_441 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    temp_index_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = tmp_54_fu_532_p3))) then 
                temp_index_reg_408 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                temp_index_reg_408 <= temp_index_6_reg_910;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_reg_896 = ap_const_lv1_1))) then
                i_3_reg_1015 <= i_3_fu_722_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                icmp_reg_896 <= icmp_fu_482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                temp_index_6_reg_910 <= temp_index_6_fu_557_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_24_reg_900 = ap_const_lv1_1))) then
                temp_index_7_reg_928 <= temp_index_7_fu_574_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                temp_index_8_reg_979 <= temp_index_8_fu_688_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                temp_index_9_reg_997 <= temp_index_9_fu_705_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                tmp_24_reg_900 <= tmp_24_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond1_fu_551_p2 = ap_const_lv1_0))) then
                    tmp_26_reg_915(7 downto 0) <= tmp_26_fu_563_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_24_reg_900 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond2_fu_568_p2))) then
                    tmp_27_reg_933(7 downto 0) <= tmp_27_fu_580_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = tmp_28_fu_589_p2))) then
                tmp_32_reg_946 <= md_length_i(47 downto 40);
                tmp_33_reg_951 <= md_length_i(39 downto 32);
                tmp_34_reg_956 <= md_length_i(31 downto 24);
                tmp_35_reg_961 <= md_length_i(23 downto 16);
                tmp_36_reg_966 <= md_length_i(15 downto 8);
                tmp_56_reg_971 <= tmp_56_fu_678_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = exitcond9_fu_682_p2))) then
                    tmp_37_reg_984(7 downto 0) <= tmp_37_fu_694_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = exitcond8_fu_699_p2))) then
                    tmp_38_reg_1002(7 downto 0) <= tmp_38_fu_711_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                    tmp_42_reg_1030(5 downto 3) <= tmp_42_fu_748_p3(5 downto 3);
                tmp_45_reg_1040 <= md_state_q0(47 downto 40);
                tmp_46_reg_1045 <= md_state_q0(39 downto 32);
                tmp_47_reg_1050 <= md_state_q0(31 downto 24);
                tmp_48_reg_1055 <= md_state_q0(23 downto 16);
                tmp_49_reg_1060 <= md_state_q0(15 downto 8);
                tmp_58_reg_1065 <= tmp_58_fu_832_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_reg_896 = ap_const_lv1_1) and (ap_const_lv1_0 = exitcond_fu_716_p2))) then
                tmp_57_reg_1025 <= tmp_57_fu_733_p1;
            end if;
        end if;
    end process;
    tmp_26_reg_915(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_27_reg_933(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_37_reg_984(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_38_reg_1002(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_42_reg_1030(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_fu_482_p2, icmp_reg_896, tmp_24_fu_522_p2, tmp_24_reg_900, ap_CS_fsm_state2, ap_CS_fsm_state4, exitcond1_fu_551_p2, ap_CS_fsm_state7, exitcond2_fu_568_p2, ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state13, exitcond9_fu_682_p2, ap_CS_fsm_state16, exitcond8_fu_699_p2, ap_CS_fsm_state18, exitcond_fu_716_p2, grp_sha512_compress_128_fu_463_ap_done, ap_CS_fsm_state3, tmp_54_fu_532_p3, ap_CS_fsm_state6, ap_CS_fsm_state15)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_24_fu_522_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = tmp_54_fu_532_p3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond1_fu_551_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_sha512_compress_128_fu_463_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((ap_const_lv1_1 = exitcond2_fu_568_p2) or (tmp_24_reg_900 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = exitcond9_fu_682_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state15 => 
                if (((grp_sha512_compress_128_fu_463_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = exitcond8_fu_699_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and ((icmp_reg_896 = ap_const_lv1_0) or (ap_const_lv1_1 = exitcond_fu_716_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_reg_896, ap_CS_fsm_state18, exitcond_fu_716_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and ((icmp_reg_896 = ap_const_lv1_0) or (ap_const_lv1_1 = exitcond_fu_716_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_reg_896, ap_CS_fsm_state18, exitcond_fu_716_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and ((icmp_reg_896 = ap_const_lv1_0) or (ap_const_lv1_1 = exitcond_fu_716_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_551_p2 <= "1" when (temp_index_reg_408 = ap_const_lv8_80) else "0";
    exitcond2_fu_568_p2 <= "1" when (temp_index_1_reg_419 = ap_const_lv8_80) else "0";
    exitcond8_fu_699_p2 <= "1" when (temp_index_3_reg_441 = ap_const_lv8_80) else "0";
    exitcond9_fu_682_p2 <= "1" when (temp_index_2_reg_430 = ap_const_lv8_80) else "0";
    exitcond_fu_716_p2 <= "1" when (i_reg_452 = ap_const_lv4_8) else "0";
    grp_sha512_compress_128_fu_463_ap_start <= ap_reg_grp_sha512_compress_128_fu_463_ap_start;
    i_3_fu_722_p2 <= std_logic_vector(unsigned(i_reg_452) + unsigned(ap_const_lv4_1));
    icmp_fu_482_p2 <= "1" when (tmp_fu_472_p4 = ap_const_lv57_0) else "0";
    md_buf_addr_12_gep_fu_209_p3 <= md_curlen_i(7 - 1 downto 0);
    md_buf_addr_9_gep_fu_163_p3 <= md_curlen_i(7 - 1 downto 0);

    md_buf_address0_assign_proc : process(ap_CS_fsm_state1, md_curlen_i, ap_CS_fsm_state4, tmp_26_fu_563_p1, tmp_27_reg_933, ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state12, md_buf_addr_9_gep_fu_163_p3, md_buf_addr_12_gep_fu_209_p3, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            md_buf_address0 <= ap_const_lv64_7F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            md_buf_address0 <= ap_const_lv64_7D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            md_buf_address0 <= ap_const_lv64_7B(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = tmp_28_fu_589_p2))) then 
            md_buf_address0 <= ap_const_lv64_78(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2))) then 
            md_buf_address0 <= md_buf_addr_12_gep_fu_209_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            md_buf_address0 <= tmp_27_reg_933(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            md_buf_address0 <= tmp_26_fu_563_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            md_buf_address0 <= md_buf_addr_9_gep_fu_163_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            md_buf_address0 <= md_curlen_i(7 - 1 downto 0);
        else 
            md_buf_address0 <= "XXXXXXX";
        end if; 
    end process;


    md_buf_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state13, tmp_37_fu_694_p1, tmp_38_reg_1002, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            md_buf_address1 <= tmp_38_reg_1002(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            md_buf_address1 <= tmp_37_fu_694_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            md_buf_address1 <= ap_const_lv64_7E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            md_buf_address1 <= ap_const_lv64_7C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            md_buf_address1 <= ap_const_lv64_7A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            md_buf_address1 <= ap_const_lv64_79(7 - 1 downto 0);
        else 
            md_buf_address1 <= "XXXXXXX";
        end if; 
    end process;


    md_buf_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = tmp_28_fu_589_p2)) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2)) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            md_buf_ce0 <= ap_const_logic_1;
        else 
            md_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    md_buf_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            md_buf_ce1 <= ap_const_logic_1;
        else 
            md_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    md_buf_d0_assign_proc : process(ap_CS_fsm_state1, md_length_i, ap_CS_fsm_state9, tmp_28_fu_589_p2, tmp_33_reg_951, tmp_35_reg_961, tmp_56_reg_971, temp_buf_q0, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            md_buf_d0 <= tmp_56_reg_971;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            md_buf_d0 <= tmp_35_reg_961;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            md_buf_d0 <= tmp_33_reg_951;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = tmp_28_fu_589_p2))) then 
            md_buf_d0 <= md_length_i(63 downto 56);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            md_buf_d0 <= temp_buf_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2)))) then 
            md_buf_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            md_buf_d0 <= ap_const_lv8_80;
        else 
            md_buf_d0 <= "XXXXXXXX";
        end if; 
    end process;


    md_buf_d1_assign_proc : process(md_length_i, tmp_32_reg_946, ap_CS_fsm_state9, tmp_34_reg_956, tmp_36_reg_966, temp_buf_q0, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            md_buf_d1 <= temp_buf_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            md_buf_d1 <= tmp_36_reg_966;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            md_buf_d1 <= tmp_34_reg_956;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            md_buf_d1 <= tmp_32_reg_946;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            md_buf_d1 <= md_length_i(55 downto 48);
        else 
            md_buf_d1 <= "XXXXXXXX";
        end if; 
    end process;


    md_buf_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_fu_482_p2, ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state3, tmp_54_fu_532_p3, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = tmp_28_fu_589_p2)) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_54_fu_532_p3)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2)) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_1)))) then 
            md_buf_we0 <= ap_const_logic_1;
        else 
            md_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    md_buf_we1_assign_proc : process(ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = tmp_28_fu_589_p2)) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            md_buf_we1 <= ap_const_logic_1;
        else 
            md_buf_we1 <= ap_const_logic_0;
        end if; 
    end process;


    md_curlen_o_assign_proc : process(ap_start, ap_CS_fsm_state1, md_curlen_i, icmp_fu_482_p2, tmp_24_reg_900, ap_CS_fsm_state7, exitcond2_fu_568_p2, ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state3, tmp_54_fu_532_p3, tmp_23_fu_511_p2, tmp_27_cast_fu_546_p1, tmp_31_cast_fu_601_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2))) then 
            md_curlen_o <= tmp_31_cast_fu_601_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_24_reg_900 = ap_const_lv1_1) and (ap_const_lv1_1 = exitcond2_fu_568_p2))) then 
            md_curlen_o <= ap_const_lv64_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_54_fu_532_p3))) then 
            md_curlen_o <= tmp_27_cast_fu_546_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_1))) then 
            md_curlen_o <= tmp_23_fu_511_p2;
        else 
            md_curlen_o <= md_curlen_i;
        end if; 
    end process;


    md_curlen_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_fu_482_p2, tmp_24_reg_900, ap_CS_fsm_state7, exitcond2_fu_568_p2, ap_CS_fsm_state9, tmp_28_fu_589_p2, ap_CS_fsm_state3, tmp_54_fu_532_p3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_54_fu_532_p3)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = tmp_28_fu_589_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_24_reg_900 = ap_const_lv1_1) and (ap_const_lv1_1 = exitcond2_fu_568_p2)))) then 
            md_curlen_o_ap_vld <= ap_const_logic_1;
        else 
            md_curlen_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    md_length_o_assign_proc : process(ap_start, ap_CS_fsm_state1, md_length_i, icmp_fu_482_p2, tmp_22_fu_504_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_1))) then 
            md_length_o <= tmp_22_fu_504_p2;
        else 
            md_length_o <= md_length_i;
        end if; 
    end process;


    md_length_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_fu_482_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (icmp_fu_482_p2 = ap_const_lv1_1))) then 
            md_length_o_ap_vld <= ap_const_logic_1;
        else 
            md_length_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    md_state_address0_assign_proc : process(ap_CS_fsm_state18, grp_sha512_compress_128_fu_463_md_state_address0, ap_CS_fsm_state6, ap_CS_fsm_state15, tmp_40_fu_728_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            md_state_address0 <= tmp_40_fu_728_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            md_state_address0 <= grp_sha512_compress_128_fu_463_md_state_address0;
        else 
            md_state_address0 <= "XXX";
        end if; 
    end process;


    md_state_ce0_assign_proc : process(ap_CS_fsm_state18, grp_sha512_compress_128_fu_463_md_state_ce0, ap_CS_fsm_state6, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            md_state_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            md_state_ce0 <= grp_sha512_compress_128_fu_463_md_state_ce0;
        else 
            md_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    md_state_d0 <= grp_sha512_compress_128_fu_463_md_state_d0;

    md_state_we0_assign_proc : process(grp_sha512_compress_128_fu_463_md_state_we0, ap_CS_fsm_state6, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            md_state_we0 <= grp_sha512_compress_128_fu_463_md_state_we0;
        else 
            md_state_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state22, tmp_43_fu_755_p1, p_sum2_cast_fu_841_p1, ap_CS_fsm_state20, p_sum4_cast_fu_861_p1, ap_CS_fsm_state21, p_sum6_cast_fu_881_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            out_r_address0 <= p_sum6_cast_fu_881_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_r_address0 <= p_sum4_cast_fu_861_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_r_address0 <= p_sum2_cast_fu_841_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_r_address0 <= tmp_43_fu_755_p1(6 - 1 downto 0);
        else 
            out_r_address0 <= "XXXXXX";
        end if; 
    end process;


    out_r_address1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state22, p_sum1_cast_fu_777_p1, ap_CS_fsm_state20, p_sum3_cast_fu_851_p1, ap_CS_fsm_state21, p_sum5_cast_fu_871_p1, p_sum7_cast_fu_891_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            out_r_address1 <= p_sum7_cast_fu_891_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_r_address1 <= p_sum5_cast_fu_871_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_r_address1 <= p_sum3_cast_fu_851_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_r_address1 <= p_sum1_cast_fu_777_p1(6 - 1 downto 0);
        else 
            out_r_address1 <= "XXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            out_r_ce1 <= ap_const_logic_1;
        else 
            out_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(md_state_q0, ap_CS_fsm_state19, tmp_45_reg_1040, tmp_47_reg_1050, tmp_49_reg_1060, ap_CS_fsm_state22, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            out_r_d0 <= tmp_49_reg_1060;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_r_d0 <= tmp_47_reg_1050;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_r_d0 <= tmp_45_reg_1040;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_r_d0 <= md_state_q0(63 downto 56);
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_d1_assign_proc : process(md_state_q0, ap_CS_fsm_state19, tmp_46_reg_1045, tmp_48_reg_1055, tmp_58_reg_1065, ap_CS_fsm_state22, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            out_r_d1 <= tmp_58_reg_1065;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_r_d1 <= tmp_48_reg_1055;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_r_d1 <= tmp_46_reg_1045;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_r_d1 <= md_state_q0(55 downto 48);
        else 
            out_r_d1 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_we1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            out_r_we1 <= ap_const_logic_1;
        else 
            out_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_sum1_cast_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum1_fu_771_p2),64));
    p_sum1_fu_771_p2 <= (tmp_42_fu_748_p3 or ap_const_lv6_1);
    p_sum2_cast_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum2_fu_836_p2),64));
    p_sum2_fu_836_p2 <= (tmp_42_reg_1030 or ap_const_lv6_2);
    p_sum3_cast_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum3_fu_846_p2),64));
    p_sum3_fu_846_p2 <= (tmp_42_reg_1030 or ap_const_lv6_3);
    p_sum4_cast_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum4_fu_856_p2),64));
    p_sum4_fu_856_p2 <= (tmp_42_reg_1030 or ap_const_lv6_4);
    p_sum5_cast_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum5_fu_866_p2),64));
    p_sum5_fu_866_p2 <= (tmp_42_reg_1030 or ap_const_lv6_5);
    p_sum6_cast_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum6_fu_876_p2),64));
    p_sum6_fu_876_p2 <= (tmp_42_reg_1030 or ap_const_lv6_6);
    p_sum7_cast_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_sum7_fu_886_p2),64));
    p_sum7_fu_886_p2 <= (tmp_42_reg_1030 or ap_const_lv6_7);

    temp_buf_address0_assign_proc : process(tmp_26_reg_915, ap_CS_fsm_state7, tmp_27_fu_580_p1, tmp_37_reg_984, ap_CS_fsm_state16, tmp_38_fu_711_p1, grp_sha512_compress_128_fu_463_buf_r_address0, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            temp_buf_address0 <= tmp_38_fu_711_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            temp_buf_address0 <= tmp_37_reg_984(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            temp_buf_address0 <= tmp_27_fu_580_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_buf_address0 <= tmp_26_reg_915(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            temp_buf_address0 <= grp_sha512_compress_128_fu_463_buf_r_address0;
        else 
            temp_buf_address0 <= "XXXXXXX";
        end if; 
    end process;


    temp_buf_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state16, grp_sha512_compress_128_fu_463_buf_r_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            temp_buf_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            temp_buf_ce0 <= grp_sha512_compress_128_fu_463_buf_r_ce0;
        else 
            temp_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_buf_ce1_assign_proc : process(grp_sha512_compress_128_fu_463_buf_r_ce1, ap_CS_fsm_state6, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            temp_buf_ce1 <= grp_sha512_compress_128_fu_463_buf_r_ce1;
        else 
            temp_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_buf_d0_assign_proc : process(md_buf_q0, md_buf_q1, ap_CS_fsm_state5, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            temp_buf_d0 <= md_buf_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_buf_d0 <= md_buf_q0;
        else 
            temp_buf_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_buf_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            temp_buf_we0 <= ap_const_logic_1;
        else 
            temp_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_index_6_fu_557_p2 <= std_logic_vector(unsigned(temp_index_reg_408) + unsigned(ap_const_lv8_1));
    temp_index_7_fu_574_p2 <= std_logic_vector(unsigned(temp_index_1_reg_419) + unsigned(ap_const_lv8_1));
    temp_index_8_fu_688_p2 <= std_logic_vector(unsigned(temp_index_2_reg_430) + unsigned(ap_const_lv8_1));
    temp_index_9_fu_705_p2 <= std_logic_vector(unsigned(temp_index_3_reg_441) + unsigned(ap_const_lv8_1));
    tmp_22_fu_504_p2 <= std_logic_vector(unsigned(md_length_i) + unsigned(tmp_cast_fu_500_p1));
    tmp_23_fu_511_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(md_curlen_i));
    tmp_24_fu_522_p2 <= "1" when (unsigned(tmp_52_fu_518_p1) > unsigned(ap_const_lv8_70)) else "0";
    tmp_25_fu_540_p2 <= std_logic_vector(unsigned(tmp_53_fu_528_p1) + unsigned(ap_const_lv8_1));
    tmp_26_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_index_reg_408),64));
    tmp_27_cast_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_540_p2),64));
    tmp_27_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_index_1_reg_419),64));
    tmp_28_fu_589_p2 <= "1" when (unsigned(tmp_55_fu_585_p1) < unsigned(ap_const_lv8_78)) else "0";
    tmp_29_fu_595_p2 <= std_logic_vector(unsigned(tmp_55_fu_585_p1) + unsigned(ap_const_lv8_1));
    tmp_31_cast_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_595_p2),64));
    tmp_37_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_index_2_reg_430),64));
    tmp_38_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_index_3_reg_441),64));
    tmp_39_fu_488_p1 <= md_curlen_i(7 - 1 downto 0);
    tmp_40_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_452),64));
    tmp_42_fu_748_p3 <= (tmp_57_reg_1025 & ap_const_lv3_0);
    tmp_43_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_748_p3),64));
    tmp_52_fu_518_p1 <= md_curlen_i(8 - 1 downto 0);
    tmp_53_fu_528_p1 <= md_curlen_i(8 - 1 downto 0);
    tmp_54_fu_532_p3 <= md_curlen_i(7 downto 7);
    tmp_55_fu_585_p1 <= md_curlen_i(8 - 1 downto 0);
    tmp_56_fu_678_p1 <= md_length_i(8 - 1 downto 0);
    tmp_57_fu_733_p1 <= i_reg_452(3 - 1 downto 0);
    tmp_58_fu_832_p1 <= md_state_q0(8 - 1 downto 0);
    tmp_cast_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_492_p3),64));
    tmp_fu_472_p4 <= md_curlen_i(63 downto 7);
    tmp_s_fu_492_p3 <= (tmp_39_fu_488_p1 & ap_const_lv3_0);
end behav;
