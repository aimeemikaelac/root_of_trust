// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _freduce_coefficients_HH_
#define _freduce_coefficients_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct freduce_coefficients : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<64> > output_r_d0;
    sc_in< sc_lv<64> > output_r_q0;
    sc_out< sc_lv<5> > output_r_address1;
    sc_out< sc_logic > output_r_ce1;
    sc_out< sc_logic > output_r_we1;
    sc_out< sc_lv<64> > output_r_d1;
    sc_in< sc_lv<64> > output_r_q1;


    // Module declarations
    freduce_coefficients(sc_module_name name);
    SC_HAS_PROCESS(freduce_coefficients);

    ~freduce_coefficients();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > output_addr_71_reg_353;
    sc_signal< sc_lv<5> > output_addr_72_reg_362;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_117_p2;
    sc_signal< sc_lv<5> > output_addr_73_reg_368;
    sc_signal< sc_lv<38> > tmp_397_i_fu_161_p4;
    sc_signal< sc_lv<38> > tmp_397_i_reg_373;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > output_load_reg_378;
    sc_signal< sc_lv<4> > i_4_fu_186_p2;
    sc_signal< sc_lv<4> > i_4_reg_383;
    sc_signal< sc_lv<5> > output_addr_74_reg_388;
    sc_signal< sc_lv<64> > v_assign_8_fu_287_p2;
    sc_signal< sc_lv<64> > v_assign_8_reg_393;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<38> > tmp_397_i1_reg_398;
    sc_signal< sc_lv<5> > output_addr_75_reg_404;
    sc_signal< sc_lv<4> > i_reg_105;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_s_fu_123_p1;
    sc_signal< sc_lv<64> > tmp_302_fu_134_p1;
    sc_signal< sc_lv<64> > tmp_305_fu_192_p1;
    sc_signal< sc_lv<64> > tmp_300_fu_179_p2;
    sc_signal< sc_lv<64> > tmp_304_fu_249_p2;
    sc_signal< sc_lv<64> > tmp_306_fu_256_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_308_fu_335_p2;
    sc_signal< sc_lv<64> > tmp_309_fu_341_p2;
    sc_signal< sc_lv<4> > tmp_301_fu_128_p2;
    sc_signal< sc_lv<1> > tmp_396_fu_139_p3;
    sc_signal< sc_lv<64> > tmp_i_cast_cast_fu_147_p3;
    sc_signal< sc_lv<64> > tmp_1064_i_fu_155_p2;
    sc_signal< sc_lv<64> > tmp_299_fu_171_p3;
    sc_signal< sc_lv<64> > over_fu_197_p1;
    sc_signal< sc_lv<64> > v_assign_7_fu_200_p2;
    sc_signal< sc_lv<1> > tmp_397_fu_205_p3;
    sc_signal< sc_lv<64> > tmp_i1_cast_cast_fu_213_p3;
    sc_signal< sc_lv<64> > tmp_1066_i_fu_221_p2;
    sc_signal< sc_lv<39> > tmp_399_i_fu_227_p4;
    sc_signal< sc_lv<64> > tmp_303_fu_241_p3;
    sc_signal< sc_lv<64> > over_7_fu_237_p1;
    sc_signal< sc_lv<64> > tmp_399_fu_269_p2;
    sc_signal< sc_lv<64> > tmp_398_fu_263_p2;
    sc_signal< sc_lv<64> > tmp2_fu_275_p2;
    sc_signal< sc_lv<64> > tmp3_fu_281_p2;
    sc_signal< sc_lv<1> > tmp_400_fu_293_p3;
    sc_signal< sc_lv<64> > tmp_i2_cast_cast_fu_301_p3;
    sc_signal< sc_lv<64> > tmp_1064_i1_fu_309_p2;
    sc_signal< sc_lv<64> > tmp_307_fu_328_p3;
    sc_signal< sc_lv<64> > over_8_fu_325_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<64> ap_const_lv64_3FFFFFF;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<26> ap_const_lv26_0;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<64> ap_const_lv64_1FFFFFF;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_4_fu_186_p2();
    void thread_output_addr_71_reg_353();
    void thread_output_addr_75_reg_404();
    void thread_output_r_address0();
    void thread_output_r_address1();
    void thread_output_r_ce0();
    void thread_output_r_ce1();
    void thread_output_r_d0();
    void thread_output_r_d1();
    void thread_output_r_we0();
    void thread_output_r_we1();
    void thread_over_7_fu_237_p1();
    void thread_over_8_fu_325_p1();
    void thread_over_fu_197_p1();
    void thread_tmp2_fu_275_p2();
    void thread_tmp3_fu_281_p2();
    void thread_tmp_1064_i1_fu_309_p2();
    void thread_tmp_1064_i_fu_155_p2();
    void thread_tmp_1066_i_fu_221_p2();
    void thread_tmp_299_fu_171_p3();
    void thread_tmp_300_fu_179_p2();
    void thread_tmp_301_fu_128_p2();
    void thread_tmp_302_fu_134_p1();
    void thread_tmp_303_fu_241_p3();
    void thread_tmp_304_fu_249_p2();
    void thread_tmp_305_fu_192_p1();
    void thread_tmp_306_fu_256_p2();
    void thread_tmp_307_fu_328_p3();
    void thread_tmp_308_fu_335_p2();
    void thread_tmp_309_fu_341_p2();
    void thread_tmp_396_fu_139_p3();
    void thread_tmp_397_fu_205_p3();
    void thread_tmp_397_i_fu_161_p4();
    void thread_tmp_398_fu_263_p2();
    void thread_tmp_399_fu_269_p2();
    void thread_tmp_399_i_fu_227_p4();
    void thread_tmp_400_fu_293_p3();
    void thread_tmp_fu_117_p2();
    void thread_tmp_i1_cast_cast_fu_213_p3();
    void thread_tmp_i2_cast_cast_fu_301_p3();
    void thread_tmp_i_cast_cast_fu_147_p3();
    void thread_tmp_s_fu_123_p1();
    void thread_v_assign_7_fu_200_p2();
    void thread_v_assign_8_fu_287_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
