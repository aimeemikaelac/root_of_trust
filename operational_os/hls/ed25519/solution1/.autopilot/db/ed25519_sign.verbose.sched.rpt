

================================================================
== Vivado HLS Report for 'ed25519_sign'
================================================================
* Date:           Thu Sep 28 12:41:04 2017

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |  256|  256|         2|          -|          -|   128|    no    |
        |- Loop 2     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 2.1  |  256|  256|         2|          -|          -|   128|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 53
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (tmp_s)
	17  / (!tmp_s)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / (!tmp_1678)
	16  / (tmp_1678)
15 --> 
	14  / true
16 --> 
	7  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / (tmp_1680)
	49  / (!tmp_1680)
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / (!tmp_1682)
	48  / (tmp_1682)
47 --> 
	46  / true
48 --> 
	39  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
* FSM state operations: 

 <State 1>: 0.68ns
ST_1: hash_length (20)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:33
:9  %hash_length = alloca i64, align 8

ST_1: hash_state (21)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:33
:10  %hash_state = alloca [8 x i64], align 8

ST_1: hash_curlen (22)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:33
:11  %hash_curlen = alloca i64, align 8

ST_1: hash_buf (23)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:33
:12  %hash_buf = alloca [128 x i8], align 1

ST_1: hram (24)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:34
:13  %hram = alloca [64 x i8], align 16

ST_1: r (25)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:35
:14  %r = alloca [64 x i8], align 16

ST_1: temp_data (26)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:36
:15  %temp_data = alloca [128 x i8], align 16

ST_1: StgValue_61 (48)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:219->ed25519/src/sign.cpp:41
:37  store i64 0, i64* %hash_curlen, align 8

ST_1: StgValue_62 (49)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:220->ed25519/src/sign.cpp:41
:38  store i64 0, i64* %hash_length, align 8

ST_1: hash_state_addr (50)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:221->ed25519/src/sign.cpp:41
:39  %hash_state_addr = getelementptr [8 x i64]* %hash_state, i64 0, i64 0

ST_1: StgValue_64 (51)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:221->ed25519/src/sign.cpp:41
:40  store i64 7640891576956012808, i64* %hash_state_addr, align 8

ST_1: hash_state_addr_1 (52)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:222->ed25519/src/sign.cpp:41
:41  %hash_state_addr_1 = getelementptr [8 x i64]* %hash_state, i64 0, i64 1

ST_1: StgValue_66 (53)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:222->ed25519/src/sign.cpp:41
:42  store i64 -4942790177534073029, i64* %hash_state_addr_1, align 8


 <State 2>: 0.68ns
ST_2: hash_state_addr_2 (54)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:223->ed25519/src/sign.cpp:41
:43  %hash_state_addr_2 = getelementptr [8 x i64]* %hash_state, i64 0, i64 2

ST_2: StgValue_68 (55)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:223->ed25519/src/sign.cpp:41
:44  store i64 4354685564936845355, i64* %hash_state_addr_2, align 8

ST_2: hash_state_addr_3 (56)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:224->ed25519/src/sign.cpp:41
:45  %hash_state_addr_3 = getelementptr [8 x i64]* %hash_state, i64 0, i64 3

ST_2: StgValue_70 (57)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:224->ed25519/src/sign.cpp:41
:46  store i64 -6534734903238641935, i64* %hash_state_addr_3, align 8


 <State 3>: 0.68ns
ST_3: hash_state_addr_4 (58)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:225->ed25519/src/sign.cpp:41
:47  %hash_state_addr_4 = getelementptr [8 x i64]* %hash_state, i64 0, i64 4

ST_3: StgValue_72 (59)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:225->ed25519/src/sign.cpp:41
:48  store i64 5840696475078001361, i64* %hash_state_addr_4, align 8

ST_3: hash_state_addr_5 (60)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:226->ed25519/src/sign.cpp:41
:49  %hash_state_addr_5 = getelementptr [8 x i64]* %hash_state, i64 0, i64 5

ST_3: StgValue_74 (61)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:226->ed25519/src/sign.cpp:41
:50  store i64 -7276294671716946913, i64* %hash_state_addr_5, align 8


 <State 4>: 0.68ns
ST_4: hash_state_addr_6 (62)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:227->ed25519/src/sign.cpp:41
:51  %hash_state_addr_6 = getelementptr [8 x i64]* %hash_state, i64 0, i64 6

ST_4: StgValue_76 (63)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:227->ed25519/src/sign.cpp:41
:52  store i64 2270897969802886507, i64* %hash_state_addr_6, align 8

ST_4: hash_state_addr_7 (64)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:228->ed25519/src/sign.cpp:41
:53  %hash_state_addr_7 = getelementptr [8 x i64]* %hash_state, i64 0, i64 7

ST_4: StgValue_78 (65)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:228->ed25519/src/sign.cpp:41
:54  store i64 6620516959819538809, i64* %hash_state_addr_7, align 8


 <State 5>: 1.46ns
ST_5: StgValue_79 (66)  [2/2] 1.46ns  loc: ed25519/src/sign.cpp:43
:55  call fastcc void @sha512_update_32.2(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %private_key)


 <State 6>: 1.43ns
ST_6: StgValue_80 (11)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %signature) nounwind, !map !155

ST_6: StgValue_81 (12)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i8* %microblaze_mem), !map !161

ST_6: StgValue_82 (13)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64 %offset) nounwind, !map !167

ST_6: StgValue_83 (14)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i64 %blocks_in) nounwind, !map !173

ST_6: StgValue_84 (15)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %public_key) nounwind, !map !177

ST_6: StgValue_85 (16)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %private_key) nounwind, !map !183

ST_6: StgValue_86 (17)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @ed25519_sign_str) nounwind

ST_6: blocks_in_read (18)  [1/1] 0.00ns
:7  %blocks_in_read = call i64 @_ssdm_op_Read.ap_vld.i64(i64 %blocks_in)

ST_6: offset_read (19)  [1/1] 1.00ns
:8  %offset_read = call i64 @_ssdm_op_Read.s_axilite.i64(i64 %offset)

ST_6: StgValue_89 (27)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:11
:16  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_90 (28)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:12
:17  call void (...)* @_ssdm_op_SpecInterface(i64 %blocks_in, [7 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_91 (29)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:13
:18  call void (...)* @_ssdm_op_SpecInterface(i64 %blocks_in, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_92 (30)  [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecInterface(i8* %microblaze_mem, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32768, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_6: empty (31)  [1/1] 0.00ns
:20  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %signature, [1 x i8]* @p_str15, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str15, i32 -1, [1 x i8]* @p_str15, [1 x i8]* @p_str15, [1 x i8]* @p_str15, [1 x i8]* @p_str15, [1 x i8]* @p_str15)

ST_6: StgValue_94 (32)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface([64 x i8]* %signature, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: empty_204 (33)  [1/1] 0.00ns
:22  %empty_204 = call i32 (...)* @_ssdm_op_SpecMemCore([32 x i8]* %public_key, [1 x i8]* @p_str16, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str16, i32 -1, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16)

ST_6: StgValue_96 (34)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecInterface([32 x i8]* %public_key, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: empty_205 (35)  [1/1] 0.00ns
:24  %empty_205 = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %private_key, [1 x i8]* @p_str20, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str20, i32 -1, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20)

ST_6: StgValue_98 (36)  [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecInterface([64 x i8]* %private_key, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_99 (37)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:20
:26  call void (...)* @_ssdm_op_SpecInterface(i64 %offset, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_100 (38)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:22
:27  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [19 x i8]* @p_str4, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_101 (39)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:23
:28  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [10 x i8]* @p_str5, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_102 (40)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:24
:29  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [14 x i8]* @p_str6, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_103 (41)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:25
:30  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [14 x i8]* @p_str7, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_104 (42)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:26
:31  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [10 x i8]* @p_str8, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_105 (43)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:27
:32  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str9, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_106 (44)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:28
:33  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [7 x i8]* @p_str10, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_107 (45)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:29
:34  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [17 x i8]* @p_str11, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_108 (46)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:30
:35  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [18 x i8]* @p_str12, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_109 (47)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:31
:36  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [13 x i8]* @p_str13, [1 x i8]* @p_str1) nounwind

ST_6: StgValue_110 (66)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:43
:55  call fastcc void @sha512_update_32.2(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %private_key)

ST_6: current_block (67)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:44
:56  %current_block = trunc i64 %offset_read to i32

ST_6: empty_206 (68)  [1/1] 0.00ns
:57  %empty_206 = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %hram, [1 x i8]* @p_str20, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str20, i32 -1, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20)

ST_6: empty_207 (69)  [1/1] 0.00ns
:58  %empty_207 = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %r, [1 x i8]* @p_str20, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str20, i32 -1, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20)

ST_6: StgValue_114 (70)  [1/1] 0.43ns  loc: ed25519/src/sign.cpp:44
:59  br label %1


 <State 7>: 8.75ns
ST_7: current_block1 (72)  [1/1] 0.00ns
:0  %current_block1 = phi i32 [ %current_block, %0 ], [ %current_block_2, %3 ]

ST_7: tmp (73)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:44
:1  %tmp = zext i32 %current_block1 to i64

ST_7: tmp_s (74)  [1/1] 0.64ns  loc: ed25519/src/sign.cpp:44
:2  %tmp_s = icmp ult i64 %tmp, %blocks_in_read

ST_7: StgValue_118 (75)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:44
:3  br i1 %tmp_s, label %.preheader1.preheader, label %_ifconv

ST_7: tmp_1724 (77)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:0  %tmp_1724 = shl i32 %current_block1, 7

ST_7: tmp_1240 (78)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:1  %tmp_1240 = zext i32 %tmp_1724 to i64

ST_7: microblaze_mem_addr (79)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:2  %microblaze_mem_addr = getelementptr i8* %microblaze_mem, i64 %tmp_1240

ST_7: microblaze_mem_addr_s (80)  [7/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)

ST_7: StgValue_123 (99)  [2/2] 1.25ns  loc: ed25519/src/sign.cpp:53
_ifconv:0  call fastcc void @sha512_final(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %r)


 <State 8>: 8.75ns
ST_8: microblaze_mem_addr_s (80)  [6/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)


 <State 9>: 8.75ns
ST_9: microblaze_mem_addr_s (80)  [5/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)


 <State 10>: 8.75ns
ST_10: microblaze_mem_addr_s (80)  [4/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)


 <State 11>: 8.75ns
ST_11: microblaze_mem_addr_s (80)  [3/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)


 <State 12>: 8.75ns
ST_12: microblaze_mem_addr_s (80)  [2/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)


 <State 13>: 8.75ns
ST_13: microblaze_mem_addr_s (80)  [1/7] 8.75ns  loc: ed25519/src/sign.cpp:48
.preheader1.preheader:3  %microblaze_mem_addr_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr, i32 128)

ST_13: StgValue_130 (81)  [1/1] 0.43ns  loc: ed25519/src/sign.cpp:45
.preheader1.preheader:4  br label %.preheader1


 <State 14>: 8.75ns
ST_14: current_byte (83)  [1/1] 0.00ns
.preheader1:0  %current_byte = phi i8 [ %current_byte_2, %2 ], [ 0, %.preheader1.preheader ]

ST_14: tmp_1678 (84)  [1/1] 0.56ns  loc: ed25519/src/sign.cpp:45
.preheader1:1  %tmp_1678 = icmp eq i8 %current_byte, -128

ST_14: empty_208 (85)  [1/1] 0.00ns
.preheader1:2  %empty_208 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind

ST_14: current_byte_2 (86)  [1/1] 0.82ns  loc: ed25519/src/sign.cpp:45
.preheader1:3  %current_byte_2 = add i8 %current_byte, 1

ST_14: StgValue_135 (87)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:45
.preheader1:4  br i1 %tmp_1678, label %3, label %2

ST_14: microblaze_mem_addr_1 (89)  [1/1] 8.75ns  loc: ed25519/src/sign.cpp:48
:0  %microblaze_mem_addr_1 = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %microblaze_mem_addr)

ST_14: StgValue_137 (95)  [2/2] 1.89ns  loc: ed25519/src/sign.cpp:50
:0  call fastcc void @sha512_update_128(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [128 x i8]* nocapture %temp_data)


 <State 15>: 0.57ns
ST_15: tmp_1681 (90)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:48
:1  %tmp_1681 = zext i8 %current_byte to i64

ST_15: temp_data_addr (91)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:48
:2  %temp_data_addr = getelementptr inbounds [128 x i8]* %temp_data, i64 0, i64 %tmp_1681

ST_15: StgValue_140 (92)  [1/1] 0.57ns  loc: ed25519/src/sign.cpp:48
:3  store i8 %microblaze_mem_addr_1, i8* %temp_data_addr, align 1

ST_15: StgValue_141 (93)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:45
:4  br label %.preheader1


 <State 16>: 0.82ns
ST_16: StgValue_142 (95)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:50
:0  call fastcc void @sha512_update_128(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [128 x i8]* nocapture %temp_data)

ST_16: current_block_2 (96)  [1/1] 0.82ns  loc: ed25519/src/sign.cpp:44
:1  %current_block_2 = add i32 %current_block1, 1

ST_16: StgValue_144 (97)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:44
:2  br label %1


 <State 17>: 0.82ns
ST_17: StgValue_145 (99)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:53
_ifconv:0  call fastcc void @sha512_final(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %r)


 <State 18>: 0.68ns
ST_18: StgValue_146 (100)  [2/2] 0.43ns  loc: ed25519/src/sign.cpp:61
_ifconv:1  call fastcc void @sc_reduce([64 x i8]* %r) nounwind

ST_18: StgValue_147 (228)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:219->ed25519/src/sign.cpp:65
_ifconv:129  store i64 0, i64* %hash_curlen, align 8

ST_18: StgValue_148 (229)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:220->ed25519/src/sign.cpp:65
_ifconv:130  store i64 0, i64* %hash_length, align 8

ST_18: StgValue_149 (230)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:221->ed25519/src/sign.cpp:65
_ifconv:131  store i64 7640891576956012808, i64* %hash_state_addr, align 8

ST_18: StgValue_150 (231)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:222->ed25519/src/sign.cpp:65
_ifconv:132  store i64 -4942790177534073029, i64* %hash_state_addr_1, align 8


 <State 19>: 0.68ns
ST_19: StgValue_151 (100)  [1/2] 0.00ns  loc: ed25519/src/sign.cpp:61
_ifconv:1  call fastcc void @sc_reduce([64 x i8]* %r) nounwind

ST_19: StgValue_152 (232)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:223->ed25519/src/sign.cpp:65
_ifconv:133  store i64 4354685564936845355, i64* %hash_state_addr_2, align 8

ST_19: StgValue_153 (233)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:224->ed25519/src/sign.cpp:65
_ifconv:134  store i64 -6534734903238641935, i64* %hash_state_addr_3, align 8


 <State 20>: 0.68ns
ST_20: call_ret (101)  [2/2] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:2  %call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @ge_scalarmult_base([64 x i8]* %r) nounwind

ST_20: StgValue_155 (234)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:225->ed25519/src/sign.cpp:65
_ifconv:135  store i64 5840696475078001361, i64* %hash_state_addr_4, align 8

ST_20: StgValue_156 (235)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:226->ed25519/src/sign.cpp:65
_ifconv:136  store i64 -7276294671716946913, i64* %hash_state_addr_5, align 8


 <State 21>: 0.68ns
ST_21: call_ret (101)  [1/2] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:2  %call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @ge_scalarmult_base([64 x i8]* %r) nounwind

ST_21: R_X_0 (102)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:3  %R_X_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0

ST_21: R_X_1 (103)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:4  %R_X_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1

ST_21: R_X_2 (104)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:5  %R_X_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2

ST_21: R_X_3 (105)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:6  %R_X_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3

ST_21: R_X_4 (106)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:7  %R_X_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4

ST_21: R_X_5 (107)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:8  %R_X_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5

ST_21: R_X_6 (108)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:9  %R_X_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6

ST_21: R_X_7 (109)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:10  %R_X_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7

ST_21: R_X_8 (110)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:11  %R_X_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 8

ST_21: R_X_9 (111)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:12  %R_X_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 9

ST_21: R_Y_0 (112)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:13  %R_Y_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 10

ST_21: R_Y_1 (113)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:14  %R_Y_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 11

ST_21: R_Y_2 (114)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:15  %R_Y_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 12

ST_21: R_Y_3 (115)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:16  %R_Y_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 13

ST_21: R_Y_4 (116)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:17  %R_Y_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 14

ST_21: R_Y_5 (117)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:18  %R_Y_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 15

ST_21: R_Y_6 (118)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:19  %R_Y_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 16

ST_21: R_Y_7 (119)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:20  %R_Y_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 17

ST_21: R_Y_8 (120)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:21  %R_Y_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 18

ST_21: R_Y_9 (121)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:22  %R_Y_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 19

ST_21: R_Z_0 (122)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:23  %R_Z_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 20

ST_21: R_Z_1 (123)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:24  %R_Z_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 21

ST_21: R_Z_2 (124)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:25  %R_Z_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 22

ST_21: R_Z_3 (125)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:26  %R_Z_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 23

ST_21: R_Z_4 (126)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:27  %R_Z_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 24

ST_21: R_Z_5 (127)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:28  %R_Z_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 25

ST_21: R_Z_6 (128)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:29  %R_Z_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 26

ST_21: R_Z_7 (129)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:30  %R_Z_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 27

ST_21: R_Z_8 (130)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:31  %R_Z_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 28

ST_21: R_Z_9 (131)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:32  %R_Z_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 29

ST_21: call_ret_i (140)  [2/2] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:41  %call_ret_i = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_invert(i32 %R_Z_0, i32 %R_Z_1, i32 %R_Z_2, i32 %R_Z_3, i32 %R_Z_4, i32 %R_Z_5, i32 %R_Z_6, i32 %R_Z_7, i32 %R_Z_8, i32 %R_Z_9) nounwind

ST_21: StgValue_189 (236)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:227->ed25519/src/sign.cpp:65
_ifconv:137  store i64 2270897969802886507, i64* %hash_state_addr_6, align 8

ST_21: StgValue_190 (237)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:228->ed25519/src/sign.cpp:65
_ifconv:138  store i64 6620516959819538809, i64* %hash_state_addr_7, align 8


 <State 22>: 4.78ns
ST_22: call_ret_i (140)  [1/2] 0.82ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:41  %call_ret_i = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_invert(i32 %R_Z_0, i32 %R_Z_1, i32 %R_Z_2, i32 %R_Z_3, i32 %R_Z_4, i32 %R_Z_5, i32 %R_Z_6, i32 %R_Z_7, i32 %R_Z_8, i32 %R_Z_9) nounwind

ST_22: recip_0 (141)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:42  %recip_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 0

ST_22: recip_1 (142)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:43  %recip_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 1

ST_22: recip_2 (143)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:44  %recip_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 2

ST_22: recip_3 (144)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:45  %recip_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 3

ST_22: recip_4 (145)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:46  %recip_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 4

ST_22: recip_5 (146)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:47  %recip_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 5

ST_22: recip_6 (147)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:48  %recip_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 6

ST_22: recip_7 (148)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:49  %recip_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 7

ST_22: recip_8 (149)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:50  %recip_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 8

ST_22: recip_9 (150)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63
_ifconv:51  %recip_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret_i, 9

ST_22: fe_mul_ret_i (162)  [2/2] 3.95ns  loc: ed25519/src/sign.cpp:62
_ifconv:63  %fe_mul_ret_i = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %R_Y_0, i32 %R_Y_1, i32 %R_Y_2, i32 %R_Y_3, i32 %R_Y_4, i32 %R_Y_5, i32 %R_Y_6, i32 %R_Y_7, i32 %R_Y_8, i32 %R_Y_9, i32 %recip_0, i32 %recip_1, i32 %recip_2, i32 %recip_3, i32 %recip_4, i32 %recip_5, i32 %recip_6, i32 %recip_7, i32 %recip_8, i32 %recip_9) nounwind


 <State 23>: 4.36ns
ST_23: fe_mul_ret1_i (151)  [2/2] 3.95ns  loc: ed25519/src/sign.cpp:62
_ifconv:52  %fe_mul_ret1_i = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %R_X_0, i32 %R_X_1, i32 %R_X_2, i32 %R_X_3, i32 %R_X_4, i32 %R_X_5, i32 %R_X_6, i32 %R_X_7, i32 %R_X_8, i32 %R_X_9, i32 %recip_0, i32 %recip_1, i32 %recip_2, i32 %recip_3, i32 %recip_4, i32 %recip_5, i32 %recip_6, i32 %recip_7, i32 %recip_8, i32 %recip_9) nounwind

ST_23: fe_mul_ret_i (162)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:62
_ifconv:63  %fe_mul_ret_i = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %R_Y_0, i32 %R_Y_1, i32 %R_Y_2, i32 %R_Y_3, i32 %R_Y_4, i32 %R_Y_5, i32 %R_Y_6, i32 %R_Y_7, i32 %R_Y_8, i32 %R_Y_9, i32 %recip_0, i32 %recip_1, i32 %recip_2, i32 %recip_3, i32 %recip_4, i32 %recip_5, i32 %recip_6, i32 %recip_7, i32 %recip_8, i32 %recip_9) nounwind

ST_23: y_0 (163)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:64  %y_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 0

ST_23: y_1 (164)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:65  %y_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 1

ST_23: y_2 (165)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:66  %y_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 2

ST_23: y_3 (166)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:67  %y_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 3

ST_23: y_4 (167)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:68  %y_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 4

ST_23: y_5 (168)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:69  %y_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 5

ST_23: y_6 (169)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:70  %y_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 6

ST_23: y_7 (170)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:71  %y_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 7

ST_23: y_8 (171)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:72  %y_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 8

ST_23: y_9 (172)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:73  %y_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret_i, 9

ST_23: StgValue_215 (173)  [2/2] 3.53ns  loc: ed25519/src/ge.cpp:460->ed25519/src/sign.cpp:63
_ifconv:74  call fastcc void @fe_tobytes.1([64 x i8]* %signature, i32 %y_0, i32 %y_1, i32 %y_2, i32 %y_3, i32 %y_4, i32 %y_5, i32 %y_6, i32 %y_7, i32 %y_8, i32 %y_9) nounwind


 <State 24>: 4.36ns
ST_24: fe_mul_ret1_i (151)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:62
_ifconv:52  %fe_mul_ret1_i = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %R_X_0, i32 %R_X_1, i32 %R_X_2, i32 %R_X_3, i32 %R_X_4, i32 %R_X_5, i32 %R_X_6, i32 %R_X_7, i32 %R_X_8, i32 %R_X_9, i32 %recip_0, i32 %recip_1, i32 %recip_2, i32 %recip_3, i32 %recip_4, i32 %recip_5, i32 %recip_6, i32 %recip_7, i32 %recip_8, i32 %recip_9) nounwind

ST_24: x_0 (152)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:53  %x_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 0

ST_24: x_9 (161)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62
_ifconv:62  %x_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 9

ST_24: StgValue_219 (173)  [1/2] 0.00ns  loc: ed25519/src/ge.cpp:460->ed25519/src/sign.cpp:63
_ifconv:74  call fastcc void @fe_tobytes.1([64 x i8]* %signature, i32 %y_0, i32 %y_1, i32 %y_2, i32 %y_3, i32 %y_4, i32 %y_5, i32 %y_6, i32 %y_7, i32 %y_8, i32 %y_9) nounwind

ST_24: tmp_i_i_i (188)  [1/1] 2.71ns  loc: ed25519/src/fe.cpp:1538->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:89  %tmp_i_i_i = mul nsw i32 19, %x_9

ST_24: tmp_i_i_i_209 (189)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1538->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:90  %tmp_i_i_i_209 = add nsw i32 16777216, %tmp_i_i_i

ST_24: tmp_561_i_i_i (190)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1538->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:91  %tmp_561_i_i_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %tmp_i_i_i_209, i32 25, i32 31)


 <State 25>: 0.82ns
ST_25: q (191)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1538->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:92  %q = sext i7 %tmp_561_i_i_i to i32

ST_25: tmp_1554_i_i_i (192)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1539->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:93  %tmp_1554_i_i_i = add nsw i32 %q, %x_0


 <State 26>: 0.82ns
ST_26: x_1 (153)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1555_i_i_i)
_ifconv:54  %x_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 1

ST_26: tmp_563_i_i_i (193)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1539->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1555_i_i_i)
_ifconv:94  %tmp_563_i_i_i = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %tmp_1554_i_i_i, i32 26, i32 31)

ST_26: q_10 (194)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1539->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1555_i_i_i)
_ifconv:95  %q_10 = sext i6 %tmp_563_i_i_i to i32

ST_26: tmp_1555_i_i_i (195)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1540->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:96  %tmp_1555_i_i_i = add nsw i32 %q_10, %x_1


 <State 27>: 0.82ns
ST_27: x_2 (154)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1556_i_i_i)
_ifconv:55  %x_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 2

ST_27: tmp_565_i_i_i (196)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1540->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1556_i_i_i)
_ifconv:97  %tmp_565_i_i_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %tmp_1555_i_i_i, i32 25, i32 31)

ST_27: q_11 (197)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1540->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1556_i_i_i)
_ifconv:98  %q_11 = sext i7 %tmp_565_i_i_i to i32

ST_27: tmp_1556_i_i_i (198)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1541->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:99  %tmp_1556_i_i_i = add nsw i32 %q_11, %x_2


 <State 28>: 0.82ns
ST_28: x_3 (155)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1557_i_i_i)
_ifconv:56  %x_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 3

ST_28: tmp_567_i_i_i (199)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1541->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1557_i_i_i)
_ifconv:100  %tmp_567_i_i_i = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %tmp_1556_i_i_i, i32 26, i32 31)

ST_28: q_12 (200)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1541->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1557_i_i_i)
_ifconv:101  %q_12 = sext i6 %tmp_567_i_i_i to i32

ST_28: tmp_1557_i_i_i (201)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1542->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:102  %tmp_1557_i_i_i = add nsw i32 %q_12, %x_3


 <State 29>: 0.82ns
ST_29: x_4 (156)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1558_i_i_i)
_ifconv:57  %x_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 4

ST_29: tmp_569_i_i_i (202)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1542->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1558_i_i_i)
_ifconv:103  %tmp_569_i_i_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %tmp_1557_i_i_i, i32 25, i32 31)

ST_29: q_13 (203)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1542->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1558_i_i_i)
_ifconv:104  %q_13 = sext i7 %tmp_569_i_i_i to i32

ST_29: tmp_1558_i_i_i (204)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1543->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:105  %tmp_1558_i_i_i = add nsw i32 %q_13, %x_4


 <State 30>: 0.82ns
ST_30: x_5 (157)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1559_i_i_i)
_ifconv:58  %x_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 5

ST_30: tmp_571_i_i_i (205)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1543->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1559_i_i_i)
_ifconv:106  %tmp_571_i_i_i = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %tmp_1558_i_i_i, i32 26, i32 31)

ST_30: q_14 (206)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1543->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1559_i_i_i)
_ifconv:107  %q_14 = sext i6 %tmp_571_i_i_i to i32

ST_30: tmp_1559_i_i_i (207)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1544->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:108  %tmp_1559_i_i_i = add nsw i32 %q_14, %x_5


 <State 31>: 0.82ns
ST_31: x_6 (158)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1560_i_i_i)
_ifconv:59  %x_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 6

ST_31: tmp_573_i_i_i (208)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1544->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1560_i_i_i)
_ifconv:109  %tmp_573_i_i_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %tmp_1559_i_i_i, i32 25, i32 31)

ST_31: q_15 (209)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1544->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1560_i_i_i)
_ifconv:110  %q_15 = sext i7 %tmp_573_i_i_i to i32

ST_31: tmp_1560_i_i_i (210)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1545->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:111  %tmp_1560_i_i_i = add nsw i32 %q_15, %x_6


 <State 32>: 0.82ns
ST_32: x_7 (159)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1561_i_i_i)
_ifconv:60  %x_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 7

ST_32: tmp_575_i_i_i (211)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1545->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1561_i_i_i)
_ifconv:112  %tmp_575_i_i_i = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %tmp_1560_i_i_i, i32 26, i32 31)

ST_32: q_16 (212)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1545->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1561_i_i_i)
_ifconv:113  %q_16 = sext i6 %tmp_575_i_i_i to i32

ST_32: tmp_1561_i_i_i (213)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1546->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:114  %tmp_1561_i_i_i = add nsw i32 %q_16, %x_7


 <State 33>: 0.82ns
ST_33: x_8 (160)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:62 (grouped into LUT with out node tmp_1562_i_i_i)
_ifconv:61  %x_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret1_i, 8

ST_33: tmp_577_i_i_i (214)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1546->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1562_i_i_i)
_ifconv:115  %tmp_577_i_i_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %tmp_1561_i_i_i, i32 25, i32 31)

ST_33: q_17 (215)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1546->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1562_i_i_i)
_ifconv:116  %q_17 = sext i7 %tmp_577_i_i_i to i32

ST_33: tmp_1562_i_i_i (216)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1547->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:117  %tmp_1562_i_i_i = add nsw i32 %q_17, %x_8

ST_33: tmp_579_i_i_i (217)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1547->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:118  %tmp_579_i_i_i = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %tmp_1562_i_i_i, i32 26, i32 31)

ST_33: signature_addr (223)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:124  %signature_addr = getelementptr [64 x i8]* %signature, i64 0, i64 31

ST_33: signature_load (224)  [2/2] 0.68ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:125  %signature_load = load i8* %signature_addr, align 1


 <State 34>: 1.55ns
ST_34: q_18 (218)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1547->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:119  %q_18 = sext i6 %tmp_579_i_i_i to i32

ST_34: tmp_1563_i_i_i (219)  [1/1] 0.82ns  loc: ed25519/src/fe.cpp:1548->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:120  %tmp_1563_i_i_i = add nsw i32 %q_18, %x_9

ST_34: tmp_1725 (220)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1490_i)
_ifconv:121  %tmp_1725 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %tmp_1563_i_i_i, i32 25)

ST_34: tmp_1726 (221)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1490_i)
_ifconv:122  %tmp_1726 = trunc i32 %x_0 to i1

ST_34: s_0_i_i_i (222)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1490_i)
_ifconv:123  %s_0_i_i_i = xor i1 %tmp_1725, %tmp_1726

ST_34: signature_load (224)  [1/2] 0.68ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:125  %signature_load = load i8* %signature_addr, align 1

ST_34: tmp_1489_i (225)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (grouped into LUT with out node tmp_1490_i)
_ifconv:126  %tmp_1489_i = call i8 @_ssdm_op_BitConcatenate.i8.i1.i7(i1 %s_0_i_i_i, i7 0)

ST_34: tmp_1490_i (226)  [1/1] 0.05ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 (out node of the LUT)
_ifconv:127  %tmp_1490_i = xor i8 %signature_load, %tmp_1489_i

ST_34: StgValue_268 (227)  [1/1] 0.68ns  loc: ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:128  store i8 %tmp_1490_i, i8* %signature_addr, align 1


 <State 35>: 1.46ns
ST_35: StgValue_269 (238)  [2/2] 1.46ns  loc: ed25519/src/sign.cpp:67
_ifconv:139  call fastcc void @sha512_update_32.1(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %signature)


 <State 36>: 0.82ns
ST_36: StgValue_270 (238)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:67
_ifconv:139  call fastcc void @sha512_update_32.1(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %signature)


 <State 37>: 1.46ns
ST_37: StgValue_271 (239)  [2/2] 1.46ns  loc: ed25519/src/sign.cpp:69
_ifconv:140  call fastcc void @sha512_update_32(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [32 x i8]* nocapture %public_key)


 <State 38>: 0.82ns
ST_38: StgValue_272 (132)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:446->ed25519/src/sign.cpp:63
_ifconv:33  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str43, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_273 (133)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:447->ed25519/src/sign.cpp:63
_ifconv:34  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str245, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_274 (134)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:448->ed25519/src/sign.cpp:63
_ifconv:35  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str346, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_275 (135)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:449->ed25519/src/sign.cpp:63
_ifconv:36  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str447, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_276 (136)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:450->ed25519/src/sign.cpp:63
_ifconv:37  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str548, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_277 (137)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:451->ed25519/src/sign.cpp:63
_ifconv:38  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str649, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_278 (138)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:452->ed25519/src/sign.cpp:63
_ifconv:39  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str750, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_279 (139)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:453->ed25519/src/sign.cpp:63
_ifconv:40  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str144, [1 x i8]* @p_str144, [7 x i8]* @p_str851, [1 x i8]* @p_str144) nounwind

ST_38: StgValue_280 (174)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:519->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:75  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str75, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_281 (175)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:520->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:76  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str277, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_282 (176)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:521->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:77  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str378, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_283 (177)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:522->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:78  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str479, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_284 (178)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:523->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:79  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str580, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_285 (179)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:524->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:80  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str681, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_286 (180)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:525->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:81  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str782, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_287 (181)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1510->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:82  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str75, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_288 (182)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1511->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:83  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str277, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_289 (183)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1512->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:84  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str378, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_290 (184)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1513->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:85  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str479, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_291 (185)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1514->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:86  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str580, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_292 (186)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1515->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:87  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str681, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_293 (187)  [1/1] 0.00ns  loc: ed25519/src/fe.cpp:1516->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63
_ifconv:88  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str782, [1 x i8]* @p_str176, [1 x i8]* @p_str176, [1 x i8]* @p_str176) nounwind

ST_38: StgValue_294 (239)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:69
_ifconv:140  call fastcc void @sha512_update_32(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [32 x i8]* nocapture %public_key)

ST_38: StgValue_295 (240)  [1/1] 0.43ns  loc: ed25519/src/sign.cpp:71
_ifconv:141  br label %4


 <State 39>: 8.75ns
ST_39: current_block_1 (242)  [1/1] 0.00ns
:0  %current_block_1 = phi i32 [ %current_block, %_ifconv ], [ %current_block_3, %6 ]

ST_39: tmp_1679 (243)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:71
:1  %tmp_1679 = zext i32 %current_block_1 to i64

ST_39: tmp_1680 (244)  [1/1] 0.64ns  loc: ed25519/src/sign.cpp:71
:2  %tmp_1680 = icmp ult i64 %tmp_1679, %blocks_in_read

ST_39: StgValue_299 (245)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:71
:3  br i1 %tmp_1680, label %.preheader.preheader, label %7

ST_39: tmp_1727 (247)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:0  %tmp_1727 = shl i32 %current_block_1, 7

ST_39: tmp_1728 (248)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:1  %tmp_1728 = zext i32 %tmp_1727 to i64

ST_39: microblaze_mem_addr_1_210 (249)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:2  %microblaze_mem_addr_1_210 = getelementptr i8* %microblaze_mem, i64 %tmp_1728

ST_39: p_rd_req (250)  [7/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)

ST_39: StgValue_304 (269)  [2/2] 1.25ns  loc: ed25519/src/sign.cpp:79
:0  call fastcc void @sha512_final(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %hram)


 <State 40>: 8.75ns
ST_40: p_rd_req (250)  [6/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)


 <State 41>: 8.75ns
ST_41: p_rd_req (250)  [5/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)


 <State 42>: 8.75ns
ST_42: p_rd_req (250)  [4/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)


 <State 43>: 8.75ns
ST_43: p_rd_req (250)  [3/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)


 <State 44>: 8.75ns
ST_44: p_rd_req (250)  [2/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)


 <State 45>: 8.75ns
ST_45: p_rd_req (250)  [1/7] 8.75ns  loc: ed25519/src/sign.cpp:75
.preheader.preheader:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %microblaze_mem_addr_1_210, i32 128)

ST_45: StgValue_311 (251)  [1/1] 0.43ns  loc: ed25519/src/sign.cpp:72
.preheader.preheader:4  br label %.preheader


 <State 46>: 8.75ns
ST_46: current_byte_1 (253)  [1/1] 0.00ns
.preheader:0  %current_byte_1 = phi i8 [ %current_byte_3, %5 ], [ 0, %.preheader.preheader ]

ST_46: tmp_1682 (254)  [1/1] 0.56ns  loc: ed25519/src/sign.cpp:72
.preheader:1  %tmp_1682 = icmp eq i8 %current_byte_1, -128

ST_46: empty_211 (255)  [1/1] 0.00ns
.preheader:2  %empty_211 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind

ST_46: current_byte_3 (256)  [1/1] 0.82ns  loc: ed25519/src/sign.cpp:72
.preheader:3  %current_byte_3 = add i8 %current_byte_1, 1

ST_46: StgValue_316 (257)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:72
.preheader:4  br i1 %tmp_1682, label %6, label %5

ST_46: microblaze_mem_addr_2 (259)  [1/1] 8.75ns  loc: ed25519/src/sign.cpp:75
:0  %microblaze_mem_addr_2 = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %microblaze_mem_addr_1_210)

ST_46: StgValue_318 (265)  [2/2] 1.89ns  loc: ed25519/src/sign.cpp:77
:0  call fastcc void @sha512_update_128(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [128 x i8]* nocapture %temp_data)


 <State 47>: 0.57ns
ST_47: tmp_1683 (260)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:75
:1  %tmp_1683 = zext i8 %current_byte_1 to i64

ST_47: temp_data_addr_1 (261)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:75
:2  %temp_data_addr_1 = getelementptr inbounds [128 x i8]* %temp_data, i64 0, i64 %tmp_1683

ST_47: StgValue_321 (262)  [1/1] 0.57ns  loc: ed25519/src/sign.cpp:75
:3  store i8 %microblaze_mem_addr_2, i8* %temp_data_addr_1, align 1

ST_47: StgValue_322 (263)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:72
:4  br label %.preheader


 <State 48>: 0.82ns
ST_48: StgValue_323 (265)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:77
:0  call fastcc void @sha512_update_128(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [128 x i8]* nocapture %temp_data)

ST_48: current_block_3 (266)  [1/1] 0.82ns  loc: ed25519/src/sign.cpp:71
:1  %current_block_3 = add i32 %current_block_1, 1

ST_48: StgValue_325 (267)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:71
:2  br label %4


 <State 49>: 0.82ns
ST_49: StgValue_326 (269)  [1/2] 0.82ns  loc: ed25519/src/sign.cpp:79
:0  call fastcc void @sha512_final(i64* nocapture %hash_length, [8 x i64]* nocapture %hash_state, i64* nocapture %hash_curlen, [128 x i8]* nocapture %hash_buf, [64 x i8]* nocapture %hram)


 <State 50>: 0.43ns
ST_50: StgValue_327 (270)  [2/2] 0.43ns  loc: ed25519/src/sign.cpp:81
:1  call fastcc void @sc_reduce([64 x i8]* %hram) nounwind


 <State 51>: 0.00ns
ST_51: StgValue_328 (270)  [1/2] 0.00ns  loc: ed25519/src/sign.cpp:81
:1  call fastcc void @sc_reduce([64 x i8]* %hram) nounwind


 <State 52>: 0.00ns
ST_52: StgValue_329 (271)  [2/2] 0.00ns  loc: ed25519/src/sign.cpp:82
:2  call fastcc void @sc_muladd([64 x i8]* %signature, [64 x i8]* %hram, [64 x i8]* %private_key, [64 x i8]* %r) nounwind


 <State 53>: 0.00ns
ST_53: StgValue_330 (271)  [1/2] 0.00ns  loc: ed25519/src/sign.cpp:82
:2  call fastcc void @sc_muladd([64 x i8]* %signature, [64 x i8]* %hram, [64 x i8]* %private_key, [64 x i8]* %r) nounwind

ST_53: StgValue_331 (272)  [1/1] 0.00ns  loc: ed25519/src/sign.cpp:83
:3  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.677ns
The critical path consists of the following:
	'alloca' operation ('hash.state', ed25519/src/sign.cpp:33) [21]  (0 ns)
	'getelementptr' operation ('hash_state_addr', ed25519/src/sha512.cpp:221->ed25519/src/sign.cpp:41) [50]  (0 ns)
	'store' operation (ed25519/src/sha512.cpp:221->ed25519/src/sign.cpp:41) of constant 7640891576956012808 on array 'hash.state', ed25519/src/sign.cpp:33 [51]  (0.677 ns)

 <State 2>: 0.677ns
The critical path consists of the following:
	'getelementptr' operation ('hash_state_addr_2', ed25519/src/sha512.cpp:223->ed25519/src/sign.cpp:41) [54]  (0 ns)
	'store' operation (ed25519/src/sha512.cpp:223->ed25519/src/sign.cpp:41) of constant 4354685564936845355 on array 'hash.state', ed25519/src/sign.cpp:33 [55]  (0.677 ns)

 <State 3>: 0.677ns
The critical path consists of the following:
	'getelementptr' operation ('hash_state_addr_4', ed25519/src/sha512.cpp:225->ed25519/src/sign.cpp:41) [58]  (0 ns)
	'store' operation (ed25519/src/sha512.cpp:225->ed25519/src/sign.cpp:41) of constant 5840696475078001361 on array 'hash.state', ed25519/src/sign.cpp:33 [59]  (0.677 ns)

 <State 4>: 0.677ns
The critical path consists of the following:
	'getelementptr' operation ('hash_state_addr_6', ed25519/src/sha512.cpp:227->ed25519/src/sign.cpp:41) [62]  (0 ns)
	'store' operation (ed25519/src/sha512.cpp:227->ed25519/src/sign.cpp:41) of constant 2270897969802886507 on array 'hash.state', ed25519/src/sign.cpp:33 [63]  (0.677 ns)

 <State 5>: 1.46ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:43) to 'sha512_update_32.2' [66]  (1.46 ns)

 <State 6>: 1.43ns
The critical path consists of the following:
	s_axi read on port 'offset' [19]  (1 ns)
	multiplexor before 'phi' operation ('current_block') with incoming values : ('current_block', ed25519/src/sign.cpp:44) [72]  (0.427 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	'phi' operation ('current_block') with incoming values : ('current_block', ed25519/src/sign.cpp:44) [72]  (0 ns)
	'shl' operation ('tmp_1724', ed25519/src/sign.cpp:48) [77]  (0 ns)
	'getelementptr' operation ('microblaze_mem_addr', ed25519/src/sign.cpp:48) [79]  (0 ns)
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [80]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus read on port 'microblaze_mem' (ed25519/src/sign.cpp:48) [89]  (8.75 ns)

 <State 15>: 0.571ns
The critical path consists of the following:
	'getelementptr' operation ('temp_data_addr', ed25519/src/sign.cpp:48) [91]  (0 ns)
	'store' operation (ed25519/src/sign.cpp:48) of variable 'microblaze_mem_addr_1', ed25519/src/sign.cpp:48 on array 'temp_data', ed25519/src/sign.cpp:36 [92]  (0.571 ns)

 <State 16>: 0.825ns
The critical path consists of the following:
	'add' operation ('current_block', ed25519/src/sign.cpp:44) [96]  (0.825 ns)

 <State 17>: 0.825ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:53) to 'sha512_final' [99]  (0.825 ns)

 <State 18>: 0.677ns
The critical path consists of the following:
	'store' operation (ed25519/src/sha512.cpp:221->ed25519/src/sign.cpp:65) of constant 7640891576956012808 on array 'hash.state', ed25519/src/sign.cpp:33 [230]  (0.677 ns)

 <State 19>: 0.677ns
The critical path consists of the following:
	'store' operation (ed25519/src/sha512.cpp:223->ed25519/src/sign.cpp:65) of constant 4354685564936845355 on array 'hash.state', ed25519/src/sign.cpp:33 [232]  (0.677 ns)

 <State 20>: 0.677ns
The critical path consists of the following:
	'store' operation (ed25519/src/sha512.cpp:225->ed25519/src/sign.cpp:65) of constant 5840696475078001361 on array 'hash.state', ed25519/src/sign.cpp:33 [234]  (0.677 ns)

 <State 21>: 0.677ns
The critical path consists of the following:
	'store' operation (ed25519/src/sha512.cpp:227->ed25519/src/sign.cpp:65) of constant 2270897969802886507 on array 'hash.state', ed25519/src/sign.cpp:33 [236]  (0.677 ns)

 <State 22>: 4.78ns
The critical path consists of the following:
	'call' operation ('call_ret_i', ed25519/src/ge.cpp:457->ed25519/src/sign.cpp:63) to 'fe_invert' [140]  (0.825 ns)
	'call' operation ('fe_mul_ret_i', ed25519/src/sign.cpp:62) to 'fe_mul' [162]  (3.95 ns)

 <State 23>: 4.36ns
The critical path consists of the following:
	'call' operation ('fe_mul_ret_i', ed25519/src/sign.cpp:62) to 'fe_mul' [162]  (0.825 ns)
	'call' operation (ed25519/src/ge.cpp:460->ed25519/src/sign.cpp:63) to 'fe_tobytes.1' [173]  (3.53 ns)

 <State 24>: 4.36ns
The critical path consists of the following:
	'call' operation ('fe_mul_ret1_i', ed25519/src/sign.cpp:62) to 'fe_mul' [151]  (0.825 ns)
	'mul' operation ('tmp_i_i_i', ed25519/src/fe.cpp:1538->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [188]  (2.71 ns)
	'add' operation ('tmp_i_i_i_209', ed25519/src/fe.cpp:1538->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [189]  (0.825 ns)

 <State 25>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1554_i_i_i', ed25519/src/fe.cpp:1539->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [192]  (0.825 ns)

 <State 26>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1555_i_i_i', ed25519/src/fe.cpp:1540->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [195]  (0.825 ns)

 <State 27>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1556_i_i_i', ed25519/src/fe.cpp:1541->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [198]  (0.825 ns)

 <State 28>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1557_i_i_i', ed25519/src/fe.cpp:1542->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [201]  (0.825 ns)

 <State 29>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1558_i_i_i', ed25519/src/fe.cpp:1543->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [204]  (0.825 ns)

 <State 30>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1559_i_i_i', ed25519/src/fe.cpp:1544->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [207]  (0.825 ns)

 <State 31>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1560_i_i_i', ed25519/src/fe.cpp:1545->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [210]  (0.825 ns)

 <State 32>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1561_i_i_i', ed25519/src/fe.cpp:1546->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [213]  (0.825 ns)

 <State 33>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp_1562_i_i_i', ed25519/src/fe.cpp:1547->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [216]  (0.825 ns)

 <State 34>: 1.55ns
The critical path consists of the following:
	'add' operation ('tmp_1563_i_i_i', ed25519/src/fe.cpp:1548->ed25519/src/fe.cpp:528->ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [219]  (0.825 ns)
	'xor' operation ('s_0_i_i_i', ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [222]  (0 ns)
	'xor' operation ('tmp_1490_i', ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) [226]  (0.051 ns)
	'store' operation (ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63) of variable 'tmp_1490_i', ed25519/src/ge.cpp:461->ed25519/src/sign.cpp:63 on array 'signature' [227]  (0.677 ns)

 <State 35>: 1.46ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:67) to 'sha512_update_32.1' [238]  (1.46 ns)

 <State 36>: 0.82ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:67) to 'sha512_update_32.1' [238]  (0.82 ns)

 <State 37>: 1.46ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:69) to 'sha512_update_32' [239]  (1.46 ns)

 <State 38>: 0.82ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:69) to 'sha512_update_32' [239]  (0.82 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	'phi' operation ('current_block') with incoming values : ('current_block', ed25519/src/sign.cpp:44) ('current_block', ed25519/src/sign.cpp:71) [242]  (0 ns)
	'shl' operation ('tmp_1727', ed25519/src/sign.cpp:75) [247]  (0 ns)
	'getelementptr' operation ('microblaze_mem_addr_1_210', ed25519/src/sign.cpp:75) [249]  (0 ns)
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus request on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [250]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus read on port 'microblaze_mem' (ed25519/src/sign.cpp:75) [259]  (8.75 ns)

 <State 47>: 0.571ns
The critical path consists of the following:
	'getelementptr' operation ('temp_data_addr_1', ed25519/src/sign.cpp:75) [261]  (0 ns)
	'store' operation (ed25519/src/sign.cpp:75) of variable 'microblaze_mem_addr_2', ed25519/src/sign.cpp:75 on array 'temp_data', ed25519/src/sign.cpp:36 [262]  (0.571 ns)

 <State 48>: 0.825ns
The critical path consists of the following:
	'add' operation ('current_block', ed25519/src/sign.cpp:71) [266]  (0.825 ns)

 <State 49>: 0.825ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:79) to 'sha512_final' [269]  (0.825 ns)

 <State 50>: 0.427ns
The critical path consists of the following:
	'call' operation (ed25519/src/sign.cpp:81) to 'sc_reduce' [270]  (0.427 ns)

 <State 51>: 0ns
The critical path consists of the following:

 <State 52>: 0ns
The critical path consists of the following:

 <State 53>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
