

================================================================
== Vivado HLS Report for 'update'
================================================================
* Date:           Sat May  6 21:35:28 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        sha256_mem
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-1-i-es1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      4.73|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |    2|  2488|    2|  2488|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1  |    0|  128|         2|          -|          -| 0 ~ 64 |    no    |
        |- Loop 2  |    0|  126|         2|          -|          -| 0 ~ 63 |    no    |
        +----------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 9
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond_i)
	4  / (exitcond_i & !tmp_9)
	9  / (exitcond_i & tmp_9)
3 --> 
	2  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (!exitcond_i2)
	9  / (exitcond_i2)
8 --> 
	7  / true
9 --> 
* FSM state operations: 

 <State 1>: 2.40ns
ST_1: SHA256_m_len_read_1 (7)  [1/1] 0.00ns
:0  %SHA256_m_len_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %SHA256_m_len_read)

ST_1: SHA256_m_tot_len_rea (8)  [1/1] 0.00ns
:1  %SHA256_m_tot_len_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %SHA256_m_tot_len_read)

ST_1: tmp_len (9)  [1/1] 1.58ns  loc: sha256_mem/src/sha256_mem.cpp:92
:2  %tmp_len = sub i32 64, %SHA256_m_len_read_1

ST_1: tmp_1 (10)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:92
:3  %tmp_1 = trunc i32 %tmp_len to i7

ST_1: tmp (11)  [1/1] 0.72ns  loc: sha256_mem/src/sha256_mem.cpp:93
:4  %tmp = icmp ugt i32 %tmp_len, 64

ST_1: rem_len (12)  [1/1] 0.10ns  loc: sha256_mem/src/sha256_mem.cpp:93
:5  %rem_len = select i1 %tmp, i7 -64, i7 %tmp_1

ST_1: tmp_3 (13)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:3->sha256_mem/src/sha256_mem.cpp:94
:6  %tmp_3 = trunc i32 %SHA256_m_len_read_1 to i9

ST_1: StgValue_17 (14)  [1/1] 0.76ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:94
:7  br label %1


 <State 2>: 1.30ns
ST_2: i_i (16)  [1/1] 0.00ns
:0  %i_i = phi i7 [ 0, %0 ], [ %i, %2 ]

ST_2: exitcond_i (17)  [1/1] 0.66ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:94
:1  %exitcond_i = icmp eq i7 %i_i, %rem_len

ST_2: empty (18)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 64, i64 0)

ST_2: i (19)  [1/1] 1.27ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:94
:3  %i = add i7 %i_i, 1

ST_2: StgValue_22 (20)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:94
:4  br i1 %exitcond_i, label %_memcpy.exit, label %2

ST_2: tmp_i (22)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:0  %tmp_i = zext i7 %i_i to i64

ST_2: tmp_i_cast (23)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:1  %tmp_i_cast = zext i7 %i_i to i9

ST_2: message_addr (24)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:2  %message_addr = getelementptr [64 x i8]* %message, i64 0, i64 %tmp_i

ST_2: message_load (25)  [2/2] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:3  %message_load = load i8* %message_addr, align 1

ST_2: sum_i (26)  [1/1] 1.30ns  loc: sha256_mem/src/sha256_mem.cpp:3->sha256_mem/src/sha256_mem.cpp:94
:4  %sum_i = add i9 %tmp_3, %tmp_i_cast

ST_2: tmp_9 (32)  [1/1] 0.72ns  loc: sha256_mem/src/sha256_mem.cpp:95
_memcpy.exit:0  %tmp_9 = icmp ugt i32 %SHA256_m_len_read_1, -65

ST_2: StgValue_29 (33)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:95
_memcpy.exit:1  br i1 %tmp_9, label %3, label %4

ST_2: StgValue_30 (38)  [2/2] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:102
:3  call fastcc void @transform([8 x i32]* %SHA256_m_h, [128 x i8]* %SHA256_m_block, i2 1)

ST_2: tmp_8 (70)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:96
:0  %tmp_8 = trunc i32 %SHA256_m_len_read_1 to i6

ST_2: StgValue_32 (71)  [1/1] 0.76ns  loc: sha256_mem/src/sha256_mem.cpp:97
:1  br label %7


 <State 3>: 2.14ns
ST_3: message_load (25)  [1/2] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:3  %message_load = load i8* %message_addr, align 1

ST_3: sum_i_cast (27)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:3->sha256_mem/src/sha256_mem.cpp:94
:5  %sum_i_cast = zext i9 %sum_i to i64

ST_3: SHA256_m_block_addr (28)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:6  %SHA256_m_block_addr = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %sum_i_cast

ST_3: StgValue_36 (29)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94
:7  store i8 %message_load, i8* %SHA256_m_block_addr, align 1

ST_3: StgValue_37 (30)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:94
:8  br label %1


 <State 4>: 0.00ns
ST_4: StgValue_38 (38)  [1/2] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:102
:3  call fastcc void @transform([8 x i32]* %SHA256_m_h, [128 x i8]* %SHA256_m_block, i2 1)


 <State 5>: 1.27ns
ST_5: new_len (35)  [1/1] 1.27ns  loc: sha256_mem/src/sha256_mem.cpp:99
:0  %new_len = sub i7 -64, %rem_len

ST_5: rem_len_1 (37)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:99
:2  %rem_len_1 = trunc i7 %new_len to i6

ST_5: tmp_11 (39)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:103
:4  %tmp_11 = call i1 @_ssdm_op_BitSelect.i1.i7.i32(i7 %new_len, i32 6)

ST_5: StgValue_42 (40)  [2/2] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:103
:5  call fastcc void @transform.1([8 x i32]* %SHA256_m_h, [64 x i8]* %message, i7 %rem_len, i1 %tmp_11)


 <State 6>: 0.76ns
ST_6: new_len_cast3 (36)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:99
:1  %new_len_cast3 = zext i7 %new_len to i8

ST_6: StgValue_44 (40)  [1/2] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:103
:5  call fastcc void @transform.1([8 x i32]* %SHA256_m_h, [64 x i8]* %message, i7 %rem_len, i1 %tmp_11)

ST_6: tmp_2 (41)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:105
:6  %tmp_2 = call i7 @_ssdm_op_BitConcatenate.i7.i1.i6(i1 %tmp_11, i6 0)

ST_6: tmp_3_cast (42)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:3->sha256_mem/src/sha256_mem.cpp:105
:7  %tmp_3_cast = zext i7 %tmp_2 to i8

ST_6: StgValue_47 (43)  [1/1] 0.76ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105
:8  br label %5


 <State 7>: 3.62ns
ST_7: i_i1 (45)  [1/1] 0.00ns
:0  %i_i1 = phi i6 [ 0, %4 ], [ %i_1, %6 ]

ST_7: exitcond_i2 (46)  [1/1] 0.84ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105
:1  %exitcond_i2 = icmp eq i6 %i_i1, %rem_len_1

ST_7: empty_13 (47)  [1/1] 0.00ns
:2  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 63, i64 0)

ST_7: i_1 (48)  [1/1] 1.26ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105
:3  %i_1 = add i6 %i_i1, 1

ST_7: StgValue_52 (49)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105
:4  br i1 %exitcond_i2, label %_memcpy.exit8, label %6

ST_7: tmp_i3_cast (52)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105
:1  %tmp_i3_cast = zext i6 %i_i1 to i7

ST_7: tmp1 (53)  [1/1] 1.27ns  loc: sha256_mem/src/sha256_mem.cpp:93
:2  %tmp1 = add i7 %rem_len, %tmp_i3_cast

ST_7: tmp1_cast (54)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:93
:3  %tmp1_cast = zext i7 %tmp1 to i8

ST_7: sum3_i (55)  [1/1] 1.27ns  loc: sha256_mem/src/sha256_mem.cpp:93
:4  %sum3_i = add i8 %tmp1_cast, %tmp_3_cast

ST_7: sum3_i_cast (56)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:93
:5  %sum3_i_cast = zext i8 %sum3_i to i64

ST_7: message_addr_1 (57)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105
:6  %message_addr_1 = getelementptr [64 x i8]* %message, i64 0, i64 %sum3_i_cast

ST_7: message_load_1 (58)  [2/2] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105
:7  %message_load_1 = load i8* %message_addr_1, align 1

ST_7: tmp_4 (63)  [1/1] 1.28ns  loc: sha256_mem/src/sha256_mem.cpp:107
_memcpy.exit8:0  %tmp_4 = add i8 %new_len_cast3, 64

ST_7: tmp_7 (64)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:107
_memcpy.exit8:1  %tmp_7 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %tmp_4, i32 6, i32 7)

ST_7: tmp_5 (65)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:107
_memcpy.exit8:2  %tmp_5 = call i8 @_ssdm_op_BitConcatenate.i8.i2.i6(i2 %tmp_7, i6 0)

ST_7: tmp_5_cast (66)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:107
_memcpy.exit8:3  %tmp_5_cast = zext i8 %tmp_5 to i32

ST_7: tmp_6 (67)  [1/1] 1.58ns  loc: sha256_mem/src/sha256_mem.cpp:107
_memcpy.exit8:4  %tmp_6 = add i32 %tmp_5_cast, %SHA256_m_tot_len_rea

ST_7: StgValue_65 (68)  [1/1] 0.76ns  loc: sha256_mem/src/sha256_mem.cpp:108
_memcpy.exit8:5  br label %7


 <State 8>: 2.14ns
ST_8: tmp_i3 (51)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105
:0  %tmp_i3 = zext i6 %i_i1 to i64

ST_8: message_load_1 (58)  [1/2] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105
:7  %message_load_1 = load i8* %message_addr_1, align 1

ST_8: SHA256_m_block_addr_1 (59)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105
:8  %SHA256_m_block_addr_1 = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %tmp_i3

ST_8: StgValue_69 (60)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105
:9  store i8 %message_load_1, i8* %SHA256_m_block_addr_1, align 1

ST_8: StgValue_70 (61)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105
:10  br label %5


 <State 9>: 0.00ns
ST_9: SHA256_m_tot_len (73)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:107
:0  %SHA256_m_tot_len = phi i32 [ %SHA256_m_tot_len_rea, %3 ], [ %tmp_6, %_memcpy.exit8 ]

ST_9: SHA256_m_len_write_a (74)  [1/1] 0.00ns
:1  %SHA256_m_len_write_a = phi i6 [ %tmp_8, %3 ], [ %rem_len_1, %_memcpy.exit8 ]

ST_9: SHA256_m_len_write_a_1 (75)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:87
:2  %SHA256_m_len_write_a_1 = zext i6 %SHA256_m_len_write_a to i32

ST_9: mrv (76)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:108
:3  %mrv = insertvalue { i32, i32 } undef, i32 %SHA256_m_tot_len, 0

ST_9: mrv_1 (77)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:108
:4  %mrv_1 = insertvalue { i32, i32 } %mrv, i32 %SHA256_m_len_write_a_1, 1

ST_9: StgValue_76 (78)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:108
:5  ret { i32, i32 } %mrv_1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.4ns
The critical path consists of the following:
	wire read on port 'SHA256_m_len_read' [7]  (0 ns)
	'sub' operation ('tmp_len', sha256_mem/src/sha256_mem.cpp:92) [9]  (1.58 ns)
	'icmp' operation ('tmp', sha256_mem/src/sha256_mem.cpp:93) [11]  (0.717 ns)
	'select' operation ('rem_len', sha256_mem/src/sha256_mem.cpp:93) [12]  (0.1 ns)

 <State 2>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:94) [16]  (0 ns)
	'add' operation ('sum_i', sha256_mem/src/sha256_mem.cpp:3->sha256_mem/src/sha256_mem.cpp:94) [26]  (1.3 ns)

 <State 3>: 2.14ns
The critical path consists of the following:
	'load' operation ('message_load', sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94) on array 'message' [25]  (0.79 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94) of variable 'message_load', sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:94 on array 'SHA256_m_block' [29]  (1.35 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 1.27ns
The critical path consists of the following:
	'sub' operation ('new_len', sha256_mem/src/sha256_mem.cpp:99) [35]  (1.27 ns)

 <State 6>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', sha256_mem/src/sha256_mem.cpp:5->sha256_mem/src/sha256_mem.cpp:105) [45]  (0.755 ns)

 <State 7>: 3.62ns
The critical path consists of the following:
	'add' operation ('tmp_4', sha256_mem/src/sha256_mem.cpp:107) [63]  (1.28 ns)
	'add' operation ('tmp_6', sha256_mem/src/sha256_mem.cpp:107) [67]  (1.58 ns)
	multiplexor before 'phi' operation ('SHA256_m_tot_len', sha256_mem/src/sha256_mem.cpp:107) with incoming values : ('SHA256.m_tot_len') ('tmp_6', sha256_mem/src/sha256_mem.cpp:107) [73]  (0.755 ns)

 <State 8>: 2.14ns
The critical path consists of the following:
	'load' operation ('message_load_1', sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105) on array 'message' [58]  (0.79 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105) of variable 'message_load_1', sha256_mem/src/sha256_mem.cpp:6->sha256_mem/src/sha256_mem.cpp:105 on array 'SHA256_m_block' [60]  (1.35 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
