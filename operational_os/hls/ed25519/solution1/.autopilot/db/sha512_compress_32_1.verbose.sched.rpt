

================================================================
== Vivado HLS Report for 'sha512_compress_32_1'
================================================================
* Date:           Thu Sep 28 12:40:56 2017

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      2.17|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1279|  1279|  1279|  1279|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   16|   16|         2|          -|          -|     8|    no    |
        |- Loop 2  |  160|  160|        10|          -|          -|    16|    no    |
        |- Loop 3  |  512|  512|         8|          -|          -|    64|    no    |
        |- Loop 4  |  570|  570|        57|          -|          -|    10|    no    |
        |- Loop 5  |   16|   16|         2|          -|          -|     8|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 80
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3)
	4  / (exitcond3)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond9)
	14  / (exitcond9)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	4  / true
14 --> 
	15  / (!exitcond8)
	22  / (exitcond8)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	14  / true
22 --> 
	23  / (tmp_74)
	79  / (!tmp_74)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	22  / true
79 --> 
	80  / (!exitcond)
80 --> 
	79  / true
* FSM state operations: 

 <State 1>: 0.43ns
ST_1: empty (5)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([32 x i8]* %buf_r, [1 x i8]* @p_str16, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str16, i32 -1, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16)

ST_1: p_01_idx_read (6)  [1/1] 0.00ns
:1  %p_01_idx_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %p_01_idx)

ST_1: S (7)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:162
:2  %S = alloca [8 x i64], align 16

ST_1: W (8)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:162
:3  %W = alloca [80 x i64], align 16

ST_1: StgValue_85 (9)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:155
:4  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str17, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_86 (10)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:156
:5  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str219, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_87 (11)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:157
:6  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str320, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_88 (12)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:158
:7  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str421, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_89 (13)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:159
:8  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str522, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_90 (14)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:160
:9  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str623, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_91 (15)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:161
:10  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str724, [1 x i8]* @p_str118, [1 x i8]* @p_str118, [1 x i8]* @p_str118) nounwind

ST_1: StgValue_92 (16)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:166
:11  br label %1


 <State 2>: 0.81ns
ST_2: i (18)  [1/1] 0.00ns
:0  %i = phi i4 [ 0, %0 ], [ %i_5, %2 ]

ST_2: exitcond3 (19)  [1/1] 0.44ns  loc: ed25519/src/sha512.cpp:166
:1  %exitcond3 = icmp eq i4 %i, -8

ST_2: empty_95 (20)  [1/1] 0.00ns
:2  %empty_95 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: i_5 (21)  [1/1] 0.81ns  loc: ed25519/src/sha512.cpp:166
:3  %i_5 = add i4 %i, 1

ST_2: StgValue_97 (22)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:166
:4  br i1 %exitcond3, label %.preheader13.preheader, label %2

ST_2: tmp (24)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:167
:0  %tmp = zext i4 %i to i64

ST_2: md_state_addr (25)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:167
:1  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp

ST_2: md_state_load (26)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:167
:2  %md_state_load = load i64* %md_state_addr, align 8

ST_2: tmp_253 (31)  [1/1] 0.00ns
.preheader13.preheader:0  %tmp_253 = trunc i64 %p_01_idx_read to i7

ST_2: StgValue_102 (32)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:171
.preheader13.preheader:1  br label %.preheader13


 <State 3>: 1.35ns
ST_3: md_state_load (26)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:167
:2  %md_state_load = load i64* %md_state_addr, align 8

ST_3: S_addr (27)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:167
:3  %S_addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp

ST_3: StgValue_105 (28)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:167
:4  store i64 %md_state_load, i64* %S_addr, align 8

ST_3: StgValue_106 (29)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:166
:5  br label %1


 <State 4>: 0.78ns
ST_4: i_1 (34)  [1/1] 0.00ns
.preheader13:0  %i_1 = phi i5 [ %i_6, %3 ], [ 0, %.preheader13.preheader ]

ST_4: exitcond9 (35)  [1/1] 0.39ns  loc: ed25519/src/sha512.cpp:171
.preheader13:1  %exitcond9 = icmp eq i5 %i_1, -16

ST_4: empty_96 (36)  [1/1] 0.00ns
.preheader13:2  %empty_96 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_4: i_6 (37)  [1/1] 0.78ns  loc: ed25519/src/sha512.cpp:171
.preheader13:3  %i_6 = add i5 %i_1, 1

ST_4: StgValue_111 (38)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:171
.preheader13:4  br i1 %exitcond9, label %.preheader12.preheader, label %3

ST_4: StgValue_112 (87)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:176
.preheader12.preheader:0  br label %.preheader12


 <State 5>: 1.47ns
ST_5: tmp_256 (40)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:171
:0  %tmp_256 = trunc i5 %i_1 to i4

ST_5: tmp_s (41)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:1  %tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_256, i3 0)

ST_5: sum (42)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172
:2  %sum = add i7 %tmp_253, %tmp_s

ST_5: sum_cast (43)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:3  %sum_cast = zext i7 %sum to i64

ST_5: buf_addr (44)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:4  %buf_addr = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum_cast

ST_5: buf_load (45)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:5  %buf_load = load i8* %buf_addr, align 1


 <State 6>: 1.47ns
ST_6: buf_load (45)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:5  %buf_load = load i8* %buf_addr, align 1

ST_6: p_sum1 (46)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum2)
:6  %p_sum1 = or i7 %tmp_s, 1

ST_6: sum2 (47)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:7  %sum2 = add i7 %tmp_253, %p_sum1

ST_6: sum2_cast (48)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:8  %sum2_cast = zext i7 %sum2 to i64

ST_6: buf_addr_1 (49)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:9  %buf_addr_1 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum2_cast

ST_6: buf_load_1 (50)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:10  %buf_load_1 = load i8* %buf_addr_1, align 1


 <State 7>: 1.47ns
ST_7: buf_load_1 (50)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:10  %buf_load_1 = load i8* %buf_addr_1, align 1

ST_7: p_sum2 (51)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum4)
:11  %p_sum2 = or i7 %tmp_s, 2

ST_7: sum4 (52)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:12  %sum4 = add i7 %tmp_253, %p_sum2

ST_7: sum4_cast (53)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:13  %sum4_cast = zext i7 %sum4 to i64

ST_7: buf_addr_2 (54)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:14  %buf_addr_2 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum4_cast

ST_7: buf_load_2 (55)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:15  %buf_load_2 = load i8* %buf_addr_2, align 1


 <State 8>: 1.47ns
ST_8: buf_load_2 (55)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:15  %buf_load_2 = load i8* %buf_addr_2, align 1

ST_8: p_sum3 (56)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum6)
:16  %p_sum3 = or i7 %tmp_s, 3

ST_8: sum6 (57)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:17  %sum6 = add i7 %tmp_253, %p_sum3

ST_8: sum6_cast (58)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:18  %sum6_cast = zext i7 %sum6 to i64

ST_8: buf_addr_3 (59)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:19  %buf_addr_3 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum6_cast

ST_8: buf_load_3 (60)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:20  %buf_load_3 = load i8* %buf_addr_3, align 1


 <State 9>: 1.47ns
ST_9: buf_load_3 (60)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:20  %buf_load_3 = load i8* %buf_addr_3, align 1

ST_9: p_sum4 (61)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum8)
:21  %p_sum4 = or i7 %tmp_s, 4

ST_9: sum8 (62)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:22  %sum8 = add i7 %tmp_253, %p_sum4

ST_9: sum8_cast (63)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:23  %sum8_cast = zext i7 %sum8 to i64

ST_9: buf_addr_4 (64)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:24  %buf_addr_4 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum8_cast

ST_9: buf_load_4 (65)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:25  %buf_load_4 = load i8* %buf_addr_4, align 1


 <State 10>: 1.47ns
ST_10: buf_load_4 (65)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:25  %buf_load_4 = load i8* %buf_addr_4, align 1

ST_10: p_sum5 (66)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum1)
:26  %p_sum5 = or i7 %tmp_s, 5

ST_10: sum1 (67)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:27  %sum1 = add i7 %tmp_253, %p_sum5

ST_10: sum1_cast (68)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:28  %sum1_cast = zext i7 %sum1 to i64

ST_10: buf_addr_5 (69)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:29  %buf_addr_5 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum1_cast

ST_10: buf_load_5 (70)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:30  %buf_load_5 = load i8* %buf_addr_5, align 1


 <State 11>: 1.47ns
ST_11: buf_load_5 (70)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:30  %buf_load_5 = load i8* %buf_addr_5, align 1

ST_11: p_sum6 (71)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum3)
:31  %p_sum6 = or i7 %tmp_s, 6

ST_11: sum3 (72)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:32  %sum3 = add i7 %tmp_253, %p_sum6

ST_11: sum3_cast (73)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:33  %sum3_cast = zext i7 %sum3 to i64

ST_11: buf_addr_6 (74)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:34  %buf_addr_6 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum3_cast

ST_11: buf_load_6 (75)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:35  %buf_load_6 = load i8* %buf_addr_6, align 1


 <State 12>: 1.47ns
ST_12: buf_load_6 (75)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:35  %buf_load_6 = load i8* %buf_addr_6, align 1

ST_12: p_sum7 (76)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172 (grouped into LUT with out node sum5)
:36  %p_sum7 = or i7 %tmp_s, 7

ST_12: sum5 (77)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:172 (out node of the LUT)
:37  %sum5 = add i7 %tmp_253, %p_sum7

ST_12: sum5_cast (78)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:38  %sum5_cast = zext i7 %sum5 to i64

ST_12: buf_addr_7 (79)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:39  %buf_addr_7 = getelementptr [32 x i8]* %buf_r, i64 0, i64 %sum5_cast

ST_12: buf_load_7 (80)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:40  %buf_load_7 = load i8* %buf_addr_7, align 1


 <State 13>: 1.91ns
ST_13: buf_load_7 (80)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:172
:40  %buf_load_7 = load i8* %buf_addr_7, align 1

ST_13: tmp_50 (81)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:41  %tmp_50 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i8.i8.i8.i8.i8.i8.i8(i8 %buf_load, i8 %buf_load_1, i8 %buf_load_2, i8 %buf_load_3, i8 %buf_load_4, i8 %buf_load_5, i8 %buf_load_6, i8 %buf_load_7)

ST_13: tmp_51 (82)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:42  %tmp_51 = zext i5 %i_1 to i64

ST_13: W_addr (83)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:172
:43  %W_addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_51

ST_13: StgValue_165 (84)  [1/1] 1.24ns  loc: ed25519/src/sha512.cpp:172
:44  store i64 %tmp_50, i64* %W_addr, align 8

ST_13: StgValue_166 (85)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:171
:45  br label %.preheader13


 <State 14>: 0.79ns
ST_14: i_2 (89)  [1/1] 0.00ns
.preheader12:0  %i_2 = phi i7 [ %i_7, %4 ], [ 16, %.preheader12.preheader ]

ST_14: exitcond8 (90)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:176
.preheader12:1  %exitcond8 = icmp eq i7 %i_2, -48

ST_14: empty_97 (91)  [1/1] 0.00ns
.preheader12:2  %empty_97 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_14: StgValue_170 (92)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:176
.preheader12:3  br i1 %exitcond8, label %.preheader11.preheader, label %4

ST_14: tmp_52 (94)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:177
:0  %tmp_52 = add i7 -2, %i_2

ST_14: S_addr_1 (139)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:0  %S_addr_1 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7

ST_14: S_addr_2 (140)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:1  %S_addr_2 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4

ST_14: S_addr_3 (141)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:2  %S_addr_3 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6

ST_14: S_addr_4 (142)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:3  %S_addr_4 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5

ST_14: S_addr_5 (143)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:4  %S_addr_5 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0

ST_14: S_addr_6 (144)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:5  %S_addr_6 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1

ST_14: S_addr_7 (145)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:6  %S_addr_7 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2

ST_14: S_addr_8 (146)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
.preheader11.preheader:7  %S_addr_8 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3

ST_14: StgValue_180 (147)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:187
.preheader11.preheader:8  br label %.preheader11


 <State 15>: 0.79ns
ST_15: tmp_60 (108)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:177
:14  %tmp_60 = add i7 -7, %i_2


 <State 16>: 0.79ns
ST_16: tmp_62 (112)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:177
:18  %tmp_62 = add i7 -15, %i_2


 <State 17>: 1.24ns
ST_17: tmp_61 (109)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:15  %tmp_61 = zext i7 %tmp_60 to i64

ST_17: W_addr_2 (110)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:16  %W_addr_2 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_61

ST_17: W_load_1 (111)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:17  %W_load_1 = load i64* %W_addr_2, align 8

ST_17: tmp_70 (126)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:177
:32  %tmp_70 = add i7 -16, %i_2


 <State 18>: 1.24ns
ST_18: tmp_53 (95)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:1  %tmp_53 = zext i7 %tmp_52 to i64

ST_18: W_addr_1 (96)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:2  %W_addr_1 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_53

ST_18: W_load (97)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:3  %W_load = load i64* %W_addr_1, align 8

ST_18: W_load_1 (111)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:17  %W_load_1 = load i64* %W_addr_2, align 8

ST_18: tmp_71 (127)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:33  %tmp_71 = zext i7 %tmp_70 to i64

ST_18: W_addr_4 (128)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:34  %W_addr_4 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_71

ST_18: W_load_3 (129)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:35  %W_load_3 = load i64* %W_addr_4, align 8

ST_18: i_7 (136)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:176
:42  %i_7 = add i7 1, %i_2


 <State 19>: 2.06ns
ST_19: W_load (97)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:3  %W_load = load i64* %W_addr_1, align 8

ST_19: tmp_63 (113)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:19  %tmp_63 = zext i7 %tmp_62 to i64

ST_19: W_addr_3 (114)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:20  %W_addr_3 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_63

ST_19: W_load_2 (115)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:21  %W_load_2 = load i64* %W_addr_3, align 8

ST_19: W_load_3 (129)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:35  %W_load_3 = load i64* %W_addr_4, align 8

ST_19: tmp8 (130)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:177
:36  %tmp8 = add i64 %W_load_1, %W_load_3


 <State 20>: 2.06ns
ST_20: tmp_54 (98)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:4  %tmp_54 = call i45 @_ssdm_op_PartSelect.i45.i64.i32.i32(i64 %W_load, i32 19, i32 63)

ST_20: tmp_259 (99)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:5  %tmp_259 = trunc i64 %W_load to i19

ST_20: tmp_55 (100)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:6  %tmp_55 = call i64 @_ssdm_op_BitConcatenate.i64.i19.i45(i19 %tmp_259, i45 %tmp_54)

ST_20: tmp_56 (101)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:7  %tmp_56 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %W_load, i32 61, i32 63)

ST_20: tmp_268 (102)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:8  %tmp_268 = trunc i64 %W_load to i61

ST_20: tmp_57 (103)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:9  %tmp_57 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 %tmp_268, i3 %tmp_56)

ST_20: tmp_58 (104)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:10  %tmp_58 = call i58 @_ssdm_op_PartSelect.i58.i64.i32.i32(i64 %W_load, i32 6, i32 63)

ST_20: tmp_6 (105)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:11  %tmp_6 = zext i58 %tmp_58 to i64

ST_20: tmp6 (106)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:12  %tmp6 = xor i64 %tmp_6, %tmp_57

ST_20: tmp_59 (107)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:13  %tmp_59 = xor i64 %tmp6, %tmp_55

ST_20: W_load_2 (115)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:177
:21  %W_load_2 = load i64* %W_addr_3, align 8

ST_20: tmp_64 (116)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:22  %tmp_64 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %W_load_2, i32 1, i32 63)

ST_20: tmp_271 (117)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:23  %tmp_271 = trunc i64 %W_load_2 to i1

ST_20: tmp_65 (118)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:24  %tmp_65 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 %tmp_271, i63 %tmp_64)

ST_20: tmp_66 (119)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:25  %tmp_66 = call i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64 %W_load_2, i32 8, i32 63)

ST_20: tmp_274 (120)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:26  %tmp_274 = trunc i64 %W_load_2 to i8

ST_20: tmp_67 (121)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:27  %tmp_67 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8 %tmp_274, i56 %tmp_66)

ST_20: tmp_68 (122)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:28  %tmp_68 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %W_load_2, i32 7, i32 63)

ST_20: tmp_9 (123)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:29  %tmp_9 = zext i57 %tmp_68 to i64

ST_20: tmp7 (124)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:30  %tmp7 = xor i64 %tmp_9, %tmp_67

ST_20: tmp_69 (125)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177 (grouped into LUT with out node tmp9)
:31  %tmp_69 = xor i64 %tmp7, %tmp_65

ST_20: tmp9 (131)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:177 (out node of the LUT)
:37  %tmp9 = add i64 %tmp_59, %tmp_69


 <State 21>: 2.06ns
ST_21: tmp_72 (132)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:177
:38  %tmp_72 = add i64 %tmp9, %tmp8

ST_21: tmp_73 (133)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:39  %tmp_73 = zext i7 %i_2 to i64

ST_21: W_addr_5 (134)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:177
:40  %W_addr_5 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_73

ST_21: StgValue_226 (135)  [1/1] 1.24ns  loc: ed25519/src/sha512.cpp:177
:41  store i64 %tmp_72, i64* %W_addr_5, align 8

ST_21: StgValue_227 (137)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:176
:43  br label %.preheader12


 <State 22>: 1.24ns
ST_22: i_3 (149)  [1/1] 0.00ns
.preheader11:0  %i_3 = phi i7 [ %i_8, %5 ], [ 0, %.preheader11.preheader ]

ST_22: tmp_74 (150)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:187
.preheader11:1  %tmp_74 = icmp ult i7 %i_3, -48

ST_22: empty_98 (151)  [1/1] 0.00ns
.preheader11:2  %empty_98 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_22: StgValue_231 (152)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:187
.preheader11:3  br i1 %tmp_74, label %5, label %.preheader.preheader

ST_22: S_load (154)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:0  %S_load = load i64* %S_addr_1, align 8

ST_22: S_load_1 (155)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:1  %S_load_1 = load i64* %S_addr_2, align 16

ST_22: tmp_85 (172)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
:18  %tmp_85 = zext i7 %i_3 to i64

ST_22: K_addr (173)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
:19  %K_addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_85

ST_22: K_load (174)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:188
:20  %K_load = load i64* %K_addr, align 16

ST_22: i_8 (505)  [1/1] 0.79ns  loc: ed25519/src/sha512.cpp:187
:351  %i_8 = add i7 8, %i_3

ST_22: StgValue_238 (508)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:203
.preheader.preheader:0  br label %.preheader


 <State 23>: 2.06ns
ST_23: S_load (154)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:0  %S_load = load i64* %S_addr_1, align 8

ST_23: S_load_1 (155)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:1  %S_load_1 = load i64* %S_addr_2, align 16

ST_23: S_load_2 (167)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:13  %S_load_2 = load i64* %S_addr_3, align 16

ST_23: S_load_3 (168)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:14  %S_load_3 = load i64* %S_addr_4, align 8

ST_23: K_load (174)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:188
:20  %K_load = load i64* %K_addr, align 16

ST_23: tmp11 (177)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188
:23  %tmp11 = add i64 %K_load, %S_load


 <State 24>: 1.55ns
ST_24: tmp_75 (156)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:2  %tmp_75 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %S_load_1, i32 14, i32 63)

ST_24: tmp_285 (157)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:3  %tmp_285 = trunc i64 %S_load_1 to i14

ST_24: tmp_76 (158)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:4  %tmp_76 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_285, i50 %tmp_75)

ST_24: tmp_77 (159)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:5  %tmp_77 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %S_load_1, i32 18, i32 63)

ST_24: tmp_286 (160)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:6  %tmp_286 = trunc i64 %S_load_1 to i18

ST_24: tmp_78 (161)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:7  %tmp_78 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_286, i46 %tmp_77)

ST_24: tmp_79 (162)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:8  %tmp_79 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %S_load_1, i32 41, i32 63)

ST_24: tmp_287 (163)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:9  %tmp_287 = trunc i64 %S_load_1 to i41

ST_24: tmp_80 (164)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:10  %tmp_80 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_287, i23 %tmp_79)

ST_24: tmp10 (165)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:11  %tmp10 = xor i64 %tmp_80, %tmp_78

ST_24: tmp_81 (166)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp12)
:12  %tmp_81 = xor i64 %tmp10, %tmp_76

ST_24: S_load_2 (167)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:13  %S_load_2 = load i64* %S_addr_3, align 16

ST_24: S_load_3 (168)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:14  %S_load_3 = load i64* %S_addr_4, align 8

ST_24: tmp_82 (169)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp_84)
:15  %tmp_82 = xor i64 %S_load_3, %S_load_2

ST_24: tmp_83 (170)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp_84)
:16  %tmp_83 = and i64 %S_load_1, %tmp_82

ST_24: tmp_84 (171)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:188 (out node of the LUT)
:17  %tmp_84 = xor i64 %S_load_2, %tmp_83

ST_24: W_addr_6 (175)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188
:21  %W_addr_6 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_85

ST_24: W_load_4 (176)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:188
:22  %W_load_4 = load i64* %W_addr_6, align 16

ST_24: tmp12 (178)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188 (out node of the LUT)
:24  %tmp12 = add i64 %tmp_81, %tmp_84


 <State 25>: 2.06ns
ST_25: W_load_4 (176)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:188
:22  %W_load_4 = load i64* %W_addr_6, align 16

ST_25: tmp13 (179)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188
:25  %tmp13 = add i64 %tmp12, %W_load_4

ST_25: S_load_5 (193)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:39  %S_load_5 = load i64* %S_addr_6, align 8


 <State 26>: 0.82ns
ST_26: t0 (180)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188
:26  %t0 = add i64 %tmp13, %tmp11

ST_26: S_load_4 (181)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:27  %S_load_4 = load i64* %S_addr_5, align 16

ST_26: S_load_5 (193)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:39  %S_load_5 = load i64* %S_addr_6, align 8

ST_26: S_load_7 (199)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:45  %S_load_7 = load i64* %S_addr_8, align 8


 <State 27>: 1.50ns
ST_27: S_load_4 (181)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:27  %S_load_4 = load i64* %S_addr_5, align 16

ST_27: S_load_6 (195)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:41  %S_load_6 = load i64* %S_addr_7, align 16

ST_27: S_load_7 (199)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:45  %S_load_7 = load i64* %S_addr_8, align 8

ST_27: tmp_97 (200)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188
:46  %tmp_97 = add i64 %S_load_7, %t0


 <State 28>: 1.55ns
ST_28: tmp_86 (182)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:28  %tmp_86 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %S_load_4, i32 28, i32 63)

ST_28: tmp_288 (183)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:29  %tmp_288 = trunc i64 %S_load_4 to i28

ST_28: tmp_87 (184)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:30  %tmp_87 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_288, i36 %tmp_86)

ST_28: tmp_88 (185)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:31  %tmp_88 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %S_load_4, i32 34, i32 63)

ST_28: tmp_289 (186)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:32  %tmp_289 = trunc i64 %S_load_4 to i34

ST_28: tmp_89 (187)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:33  %tmp_89 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_289, i30 %tmp_88)

ST_28: tmp_90 (188)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:34  %tmp_90 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %S_load_4, i32 39, i32 63)

ST_28: tmp_290 (189)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:35  %tmp_290 = trunc i64 %S_load_4 to i39

ST_28: tmp_91 (190)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:36  %tmp_91 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_290, i25 %tmp_90)

ST_28: tmp14 (191)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:37  %tmp14 = xor i64 %tmp_91, %tmp_89

ST_28: tmp_92 (192)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp15)
:38  %tmp_92 = xor i64 %tmp14, %tmp_87

ST_28: tmp_93 (194)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp_96)
:40  %tmp_93 = or i64 %S_load_5, %S_load_4

ST_28: S_load_6 (195)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:188
:41  %S_load_6 = load i64* %S_addr_7, align 16

ST_28: tmp_94 (196)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp_96)
:42  %tmp_94 = and i64 %S_load_6, %tmp_93

ST_28: tmp_95 (197)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp_96)
:43  %tmp_95 = and i64 %S_load_5, %S_load_4

ST_28: tmp_96 (198)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:188 (out node of the LUT)
:44  %tmp_96 = or i64 %tmp_94, %tmp_95

ST_28: tmp15 (201)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188 (out node of the LUT)
:47  %tmp15 = add i64 %tmp_92, %tmp_96


 <State 29>: 1.24ns
ST_29: tmp_98 (202)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:188
:48  %tmp_98 = add i64 %tmp15, %t0

ST_29: tmp_109 (217)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189
:63  %tmp_109 = or i7 %i_3, 1

ST_29: tmp_110 (218)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189
:64  %tmp_110 = zext i7 %tmp_109 to i64

ST_29: K_addr_1 (219)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189
:65  %K_addr_1 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_110

ST_29: K_load_1 (220)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:189
:66  %K_load_1 = load i64* %K_addr_1, align 8


 <State 30>: 2.06ns
ST_30: K_load_1 (220)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:189
:66  %K_load_1 = load i64* %K_addr_1, align 8

ST_30: tmp17 (223)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189
:69  %tmp17 = add i64 %K_load_1, %S_load_2


 <State 31>: 1.24ns
ST_31: tmp_99 (203)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:49  %tmp_99 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_97, i32 14, i32 63)

ST_31: tmp_291 (204)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp18)
:50  %tmp_291 = trunc i64 %tmp_97 to i14

ST_31: tmp_100 (205)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:51  %tmp_100 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_291, i50 %tmp_99)

ST_31: tmp_101 (206)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:52  %tmp_101 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_97, i32 18, i32 63)

ST_31: tmp_292 (207)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp18)
:53  %tmp_292 = trunc i64 %tmp_97 to i18

ST_31: tmp_102 (208)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:54  %tmp_102 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_292, i46 %tmp_101)

ST_31: tmp_103 (209)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:55  %tmp_103 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_97, i32 41, i32 63)

ST_31: tmp_293 (210)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp18)
:56  %tmp_293 = trunc i64 %tmp_97 to i41

ST_31: tmp_104 (211)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:57  %tmp_104 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_293, i23 %tmp_103)

ST_31: tmp16 (212)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:58  %tmp16 = xor i64 %tmp_104, %tmp_102

ST_31: tmp_105 (213)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp18)
:59  %tmp_105 = xor i64 %tmp16, %tmp_100

ST_31: tmp_106 (214)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp_108)
:60  %tmp_106 = xor i64 %S_load_3, %S_load_1

ST_31: tmp_107 (215)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp_108)
:61  %tmp_107 = and i64 %tmp_97, %tmp_106

ST_31: tmp_108 (216)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:189 (out node of the LUT)
:62  %tmp_108 = xor i64 %S_load_3, %tmp_107

ST_31: W_addr_7 (221)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189
:67  %W_addr_7 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_110

ST_31: W_load_5 (222)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:189
:68  %W_load_5 = load i64* %W_addr_7, align 8

ST_31: tmp18 (224)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189 (out node of the LUT)
:70  %tmp18 = add i64 %tmp_108, %tmp_105


 <State 32>: 2.06ns
ST_32: W_load_5 (222)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:189
:68  %W_load_5 = load i64* %W_addr_7, align 8

ST_32: tmp19 (225)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189
:71  %tmp19 = add i64 %tmp18, %W_load_5


 <State 33>: 0.82ns
ST_33: t0_1 (226)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189
:72  %t0_1 = add i64 %tmp19, %tmp17


 <State 34>: 0.82ns
ST_34: tmp_122 (242)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189
:88  %tmp_122 = add i64 %S_load_6, %t0_1


 <State 35>: 0.82ns
ST_35: tmp_111 (227)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:73  %tmp_111 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_98, i32 28, i32 63)

ST_35: tmp_294 (228)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp21)
:74  %tmp_294 = trunc i64 %tmp_98 to i28

ST_35: tmp_112 (229)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:75  %tmp_112 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_294, i36 %tmp_111)

ST_35: tmp_113 (230)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:76  %tmp_113 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_98, i32 34, i32 63)

ST_35: tmp_295 (231)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp21)
:77  %tmp_295 = trunc i64 %tmp_98 to i34

ST_35: tmp_114 (232)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:78  %tmp_114 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_295, i30 %tmp_113)

ST_35: tmp_115 (233)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:79  %tmp_115 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_98, i32 39, i32 63)

ST_35: tmp_296 (234)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:188 (grouped into LUT with out node tmp21)
:80  %tmp_296 = trunc i64 %tmp_98 to i39

ST_35: tmp_116 (235)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:81  %tmp_116 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_296, i25 %tmp_115)

ST_35: tmp20 (236)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:82  %tmp20 = xor i64 %tmp_116, %tmp_114

ST_35: tmp_117 (237)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp21)
:83  %tmp_117 = xor i64 %tmp20, %tmp_112

ST_35: tmp21 (243)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189 (out node of the LUT)
:89  %tmp21 = add i64 %tmp_117, %t0_1


 <State 36>: 1.24ns
ST_36: tmp_118 (238)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp_123)
:84  %tmp_118 = or i64 %S_load_4, %tmp_98

ST_36: tmp_119 (239)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp_123)
:85  %tmp_119 = and i64 %S_load_5, %tmp_118

ST_36: tmp_120 (240)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp_123)
:86  %tmp_120 = and i64 %S_load_4, %tmp_98

ST_36: tmp_121 (241)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp_123)
:87  %tmp_121 = or i64 %tmp_119, %tmp_120

ST_36: tmp_123 (244)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:189 (out node of the LUT)
:90  %tmp_123 = add i64 %tmp21, %tmp_121

ST_36: tmp_134 (259)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190
:105  %tmp_134 = or i7 %i_3, 2

ST_36: tmp_135 (260)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190
:106  %tmp_135 = zext i7 %tmp_134 to i64

ST_36: K_addr_2 (261)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190
:107  %K_addr_2 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_135

ST_36: K_load_2 (262)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:190
:108  %K_load_2 = load i64* %K_addr_2, align 16


 <State 37>: 2.06ns
ST_37: K_load_2 (262)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:190
:108  %K_load_2 = load i64* %K_addr_2, align 16

ST_37: tmp23 (265)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190
:111  %tmp23 = add i64 %K_load_2, %S_load_3


 <State 38>: 1.24ns
ST_38: tmp_124 (245)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:91  %tmp_124 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_122, i32 14, i32 63)

ST_38: tmp_297 (246)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp24)
:92  %tmp_297 = trunc i64 %tmp_122 to i14

ST_38: tmp_125 (247)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:93  %tmp_125 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_297, i50 %tmp_124)

ST_38: tmp_126 (248)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:94  %tmp_126 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_122, i32 18, i32 63)

ST_38: tmp_298 (249)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp24)
:95  %tmp_298 = trunc i64 %tmp_122 to i18

ST_38: tmp_127 (250)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:96  %tmp_127 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_298, i46 %tmp_126)

ST_38: tmp_128 (251)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:97  %tmp_128 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_122, i32 41, i32 63)

ST_38: tmp_299 (252)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp24)
:98  %tmp_299 = trunc i64 %tmp_122 to i41

ST_38: tmp_129 (253)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:99  %tmp_129 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_299, i23 %tmp_128)

ST_38: tmp22 (254)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:100  %tmp22 = xor i64 %tmp_129, %tmp_127

ST_38: tmp_130 (255)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp24)
:101  %tmp_130 = xor i64 %tmp22, %tmp_125

ST_38: tmp_131 (256)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp_133)
:102  %tmp_131 = xor i64 %S_load_1, %tmp_97

ST_38: tmp_132 (257)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp_133)
:103  %tmp_132 = and i64 %tmp_122, %tmp_131

ST_38: tmp_133 (258)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:190 (out node of the LUT)
:104  %tmp_133 = xor i64 %S_load_1, %tmp_132

ST_38: W_addr_8 (263)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190
:109  %W_addr_8 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_135

ST_38: W_load_6 (264)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:190
:110  %W_load_6 = load i64* %W_addr_8, align 16

ST_38: tmp24 (266)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190 (out node of the LUT)
:112  %tmp24 = add i64 %tmp_133, %tmp_130


 <State 39>: 2.06ns
ST_39: W_load_6 (264)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:190
:110  %W_load_6 = load i64* %W_addr_8, align 16

ST_39: tmp25 (267)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190
:113  %tmp25 = add i64 %tmp24, %W_load_6


 <State 40>: 0.82ns
ST_40: t0_2 (268)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190
:114  %t0_2 = add i64 %tmp25, %tmp23


 <State 41>: 0.82ns
ST_41: tmp_147 (284)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190
:130  %tmp_147 = add i64 %S_load_5, %t0_2


 <State 42>: 0.82ns
ST_42: tmp_136 (269)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:115  %tmp_136 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_123, i32 28, i32 63)

ST_42: tmp_300 (270)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp27)
:116  %tmp_300 = trunc i64 %tmp_123 to i28

ST_42: tmp_137 (271)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:117  %tmp_137 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_300, i36 %tmp_136)

ST_42: tmp_138 (272)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:118  %tmp_138 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_123, i32 34, i32 63)

ST_42: tmp_301 (273)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp27)
:119  %tmp_301 = trunc i64 %tmp_123 to i34

ST_42: tmp_139 (274)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:120  %tmp_139 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_301, i30 %tmp_138)

ST_42: tmp_140 (275)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:121  %tmp_140 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_123, i32 39, i32 63)

ST_42: tmp_302 (276)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:189 (grouped into LUT with out node tmp27)
:122  %tmp_302 = trunc i64 %tmp_123 to i39

ST_42: tmp_141 (277)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:123  %tmp_141 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_302, i25 %tmp_140)

ST_42: tmp26 (278)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:124  %tmp26 = xor i64 %tmp_141, %tmp_139

ST_42: tmp_142 (279)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp27)
:125  %tmp_142 = xor i64 %tmp26, %tmp_137

ST_42: tmp27 (285)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190 (out node of the LUT)
:131  %tmp27 = add i64 %tmp_142, %t0_2


 <State 43>: 1.24ns
ST_43: tmp_143 (280)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp_148)
:126  %tmp_143 = or i64 %tmp_123, %tmp_98

ST_43: tmp_144 (281)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp_148)
:127  %tmp_144 = and i64 %S_load_4, %tmp_143

ST_43: tmp_145 (282)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp_148)
:128  %tmp_145 = and i64 %tmp_123, %tmp_98

ST_43: tmp_146 (283)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp_148)
:129  %tmp_146 = or i64 %tmp_144, %tmp_145

ST_43: tmp_148 (286)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:190 (out node of the LUT)
:132  %tmp_148 = add i64 %tmp27, %tmp_146

ST_43: tmp_159 (301)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191
:147  %tmp_159 = or i7 %i_3, 3

ST_43: tmp_160 (302)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191
:148  %tmp_160 = zext i7 %tmp_159 to i64

ST_43: K_addr_3 (303)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191
:149  %K_addr_3 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_160

ST_43: K_load_3 (304)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:191
:150  %K_load_3 = load i64* %K_addr_3, align 8


 <State 44>: 2.06ns
ST_44: K_load_3 (304)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:191
:150  %K_load_3 = load i64* %K_addr_3, align 8

ST_44: tmp29 (307)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191
:153  %tmp29 = add i64 %K_load_3, %S_load_1


 <State 45>: 1.24ns
ST_45: tmp_149 (287)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:133  %tmp_149 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_147, i32 14, i32 63)

ST_45: tmp_303 (288)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp30)
:134  %tmp_303 = trunc i64 %tmp_147 to i14

ST_45: tmp_150 (289)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:135  %tmp_150 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_303, i50 %tmp_149)

ST_45: tmp_151 (290)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:136  %tmp_151 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_147, i32 18, i32 63)

ST_45: tmp_304 (291)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp30)
:137  %tmp_304 = trunc i64 %tmp_147 to i18

ST_45: tmp_152 (292)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:138  %tmp_152 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_304, i46 %tmp_151)

ST_45: tmp_153 (293)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:139  %tmp_153 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_147, i32 41, i32 63)

ST_45: tmp_305 (294)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp30)
:140  %tmp_305 = trunc i64 %tmp_147 to i41

ST_45: tmp_154 (295)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:141  %tmp_154 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_305, i23 %tmp_153)

ST_45: tmp28 (296)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:142  %tmp28 = xor i64 %tmp_154, %tmp_152

ST_45: tmp_155 (297)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp30)
:143  %tmp_155 = xor i64 %tmp28, %tmp_150

ST_45: tmp_156 (298)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp_158)
:144  %tmp_156 = xor i64 %tmp_122, %tmp_97

ST_45: tmp_157 (299)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp_158)
:145  %tmp_157 = and i64 %tmp_147, %tmp_156

ST_45: tmp_158 (300)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:191 (out node of the LUT)
:146  %tmp_158 = xor i64 %tmp_157, %tmp_97

ST_45: W_addr_9 (305)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191
:151  %W_addr_9 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_160

ST_45: W_load_7 (306)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:191
:152  %W_load_7 = load i64* %W_addr_9, align 8

ST_45: tmp30 (308)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191 (out node of the LUT)
:154  %tmp30 = add i64 %tmp_158, %tmp_155


 <State 46>: 2.06ns
ST_46: W_load_7 (306)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:191
:152  %W_load_7 = load i64* %W_addr_9, align 8

ST_46: tmp31 (309)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191
:155  %tmp31 = add i64 %tmp30, %W_load_7


 <State 47>: 0.82ns
ST_47: t0_3 (310)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191
:156  %t0_3 = add i64 %tmp31, %tmp29


 <State 48>: 0.82ns
ST_48: tmp_172 (326)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191
:172  %tmp_172 = add i64 %S_load_4, %t0_3


 <State 49>: 0.82ns
ST_49: tmp_161 (311)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:157  %tmp_161 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_148, i32 28, i32 63)

ST_49: tmp_306 (312)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp33)
:158  %tmp_306 = trunc i64 %tmp_148 to i28

ST_49: tmp_162 (313)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:159  %tmp_162 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_306, i36 %tmp_161)

ST_49: tmp_163 (314)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:160  %tmp_163 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_148, i32 34, i32 63)

ST_49: tmp_307 (315)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp33)
:161  %tmp_307 = trunc i64 %tmp_148 to i34

ST_49: tmp_164 (316)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:162  %tmp_164 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_307, i30 %tmp_163)

ST_49: tmp_165 (317)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:163  %tmp_165 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_148, i32 39, i32 63)

ST_49: tmp_308 (318)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:190 (grouped into LUT with out node tmp33)
:164  %tmp_308 = trunc i64 %tmp_148 to i39

ST_49: tmp_166 (319)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:165  %tmp_166 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_308, i25 %tmp_165)

ST_49: tmp32 (320)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:166  %tmp32 = xor i64 %tmp_166, %tmp_164

ST_49: tmp_167 (321)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp33)
:167  %tmp_167 = xor i64 %tmp32, %tmp_162

ST_49: tmp33 (327)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191 (out node of the LUT)
:173  %tmp33 = add i64 %tmp_167, %t0_3


 <State 50>: 1.24ns
ST_50: tmp_168 (322)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp_173)
:168  %tmp_168 = or i64 %tmp_148, %tmp_123

ST_50: tmp_169 (323)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp_173)
:169  %tmp_169 = and i64 %tmp_168, %tmp_98

ST_50: tmp_170 (324)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp_173)
:170  %tmp_170 = and i64 %tmp_148, %tmp_123

ST_50: tmp_171 (325)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp_173)
:171  %tmp_171 = or i64 %tmp_169, %tmp_170

ST_50: tmp_173 (328)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:191 (out node of the LUT)
:174  %tmp_173 = add i64 %tmp33, %tmp_171

ST_50: tmp_184 (343)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192
:189  %tmp_184 = or i7 %i_3, 4

ST_50: tmp_185 (344)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192
:190  %tmp_185 = zext i7 %tmp_184 to i64

ST_50: K_addr_4 (345)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192
:191  %K_addr_4 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_185

ST_50: K_load_4 (346)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:192
:192  %K_load_4 = load i64* %K_addr_4, align 16

ST_50: W_addr_10 (347)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192
:193  %W_addr_10 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_185

ST_50: W_load_8 (348)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:192
:194  %W_load_8 = load i64* %W_addr_10, align 16


 <State 51>: 2.06ns
ST_51: K_load_4 (346)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:192
:192  %K_load_4 = load i64* %K_addr_4, align 16

ST_51: W_load_8 (348)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:192
:194  %W_load_8 = load i64* %W_addr_10, align 16

ST_51: tmp35 (349)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192
:195  %tmp35 = add i64 %K_load_4, %W_load_8


 <State 52>: 0.82ns
ST_52: tmp_174 (329)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:175  %tmp_174 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_172, i32 14, i32 63)

ST_52: tmp_309 (330)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp36)
:176  %tmp_309 = trunc i64 %tmp_172 to i14

ST_52: tmp_175 (331)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:177  %tmp_175 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_309, i50 %tmp_174)

ST_52: tmp_176 (332)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:178  %tmp_176 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_172, i32 18, i32 63)

ST_52: tmp_310 (333)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp36)
:179  %tmp_310 = trunc i64 %tmp_172 to i18

ST_52: tmp_177 (334)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:180  %tmp_177 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_310, i46 %tmp_176)

ST_52: tmp_178 (335)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:181  %tmp_178 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_172, i32 41, i32 63)

ST_52: tmp_311 (336)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp36)
:182  %tmp_311 = trunc i64 %tmp_172 to i41

ST_52: tmp_179 (337)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:183  %tmp_179 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_311, i23 %tmp_178)

ST_52: tmp34 (338)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:184  %tmp34 = xor i64 %tmp_179, %tmp_177

ST_52: tmp_180 (339)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp36)
:185  %tmp_180 = xor i64 %tmp34, %tmp_175

ST_52: tmp36 (350)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192 (out node of the LUT)
:196  %tmp36 = add i64 %tmp_180, %tmp_97


 <State 53>: 0.82ns
ST_53: tmp_181 (340)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp37)
:186  %tmp_181 = xor i64 %tmp_147, %tmp_122

ST_53: tmp_182 (341)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp37)
:187  %tmp_182 = and i64 %tmp_172, %tmp_181

ST_53: tmp_183 (342)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp37)
:188  %tmp_183 = xor i64 %tmp_182, %tmp_122

ST_53: tmp37 (351)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192 (out node of the LUT)
:197  %tmp37 = add i64 %tmp36, %tmp_183


 <State 54>: 0.82ns
ST_54: t0_4 (352)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192
:198  %t0_4 = add i64 %tmp37, %tmp35


 <State 55>: 1.50ns
ST_55: tmp_197 (368)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192
:214  %tmp_197 = add i64 %tmp_98, %t0_4

ST_55: StgValue_452 (369)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:192
:215  store i64 %tmp_197, i64* %S_addr_1, align 8


 <State 56>: 0.82ns
ST_56: tmp_186 (353)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:199  %tmp_186 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_173, i32 28, i32 63)

ST_56: tmp_312 (354)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp39)
:200  %tmp_312 = trunc i64 %tmp_173 to i28

ST_56: tmp_187 (355)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:201  %tmp_187 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_312, i36 %tmp_186)

ST_56: tmp_188 (356)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:202  %tmp_188 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_173, i32 34, i32 63)

ST_56: tmp_313 (357)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp39)
:203  %tmp_313 = trunc i64 %tmp_173 to i34

ST_56: tmp_189 (358)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:204  %tmp_189 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_313, i30 %tmp_188)

ST_56: tmp_190 (359)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:205  %tmp_190 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_173, i32 39, i32 63)

ST_56: tmp_314 (360)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:191 (grouped into LUT with out node tmp39)
:206  %tmp_314 = trunc i64 %tmp_173 to i39

ST_56: tmp_191 (361)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:207  %tmp_191 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_314, i25 %tmp_190)

ST_56: tmp38 (362)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:208  %tmp38 = xor i64 %tmp_191, %tmp_189

ST_56: tmp_192 (363)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp39)
:209  %tmp_192 = xor i64 %tmp38, %tmp_187

ST_56: tmp39 (370)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192 (out node of the LUT)
:216  %tmp39 = add i64 %tmp_192, %t0_4


 <State 57>: 1.50ns
ST_57: tmp_193 (364)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp_198)
:210  %tmp_193 = or i64 %tmp_173, %tmp_148

ST_57: tmp_194 (365)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp_198)
:211  %tmp_194 = and i64 %tmp_193, %tmp_123

ST_57: tmp_195 (366)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp_198)
:212  %tmp_195 = and i64 %tmp_173, %tmp_148

ST_57: tmp_196 (367)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp_198)
:213  %tmp_196 = or i64 %tmp_194, %tmp_195

ST_57: tmp_198 (371)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:192 (out node of the LUT)
:217  %tmp_198 = add i64 %tmp39, %tmp_196

ST_57: StgValue_470 (372)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:192
:218  store i64 %tmp_198, i64* %S_addr_8, align 8

ST_57: tmp_209 (387)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193
:233  %tmp_209 = or i7 %i_3, 5

ST_57: tmp_210 (388)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193
:234  %tmp_210 = zext i7 %tmp_209 to i64

ST_57: K_addr_5 (389)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193
:235  %K_addr_5 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_210

ST_57: K_load_5 (390)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:193
:236  %K_load_5 = load i64* %K_addr_5, align 8

ST_57: W_addr_11 (391)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193
:237  %W_addr_11 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_210

ST_57: W_load_9 (392)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:193
:238  %W_load_9 = load i64* %W_addr_11, align 8


 <State 58>: 2.06ns
ST_58: K_load_5 (390)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:193
:236  %K_load_5 = load i64* %K_addr_5, align 8

ST_58: W_load_9 (392)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:193
:238  %W_load_9 = load i64* %W_addr_11, align 8

ST_58: tmp41 (393)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193
:239  %tmp41 = add i64 %K_load_5, %W_load_9


 <State 59>: 0.82ns
ST_59: tmp_199 (373)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:219  %tmp_199 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_197, i32 14, i32 63)

ST_59: tmp_315 (374)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp42)
:220  %tmp_315 = trunc i64 %tmp_197 to i14

ST_59: tmp_200 (375)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:221  %tmp_200 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_315, i50 %tmp_199)

ST_59: tmp_201 (376)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:222  %tmp_201 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_197, i32 18, i32 63)

ST_59: tmp_316 (377)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp42)
:223  %tmp_316 = trunc i64 %tmp_197 to i18

ST_59: tmp_202 (378)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:224  %tmp_202 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_316, i46 %tmp_201)

ST_59: tmp_203 (379)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:225  %tmp_203 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_197, i32 41, i32 63)

ST_59: tmp_317 (380)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp42)
:226  %tmp_317 = trunc i64 %tmp_197 to i41

ST_59: tmp_204 (381)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:227  %tmp_204 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_317, i23 %tmp_203)

ST_59: tmp40 (382)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:228  %tmp40 = xor i64 %tmp_204, %tmp_202

ST_59: tmp_205 (383)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp42)
:229  %tmp_205 = xor i64 %tmp40, %tmp_200

ST_59: tmp42 (394)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193 (out node of the LUT)
:240  %tmp42 = add i64 %tmp_205, %tmp_122


 <State 60>: 0.82ns
ST_60: tmp_206 (384)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp43)
:230  %tmp_206 = xor i64 %tmp_172, %tmp_147

ST_60: tmp_207 (385)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp43)
:231  %tmp_207 = and i64 %tmp_197, %tmp_206

ST_60: tmp_208 (386)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp43)
:232  %tmp_208 = xor i64 %tmp_207, %tmp_147

ST_60: tmp43 (395)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193 (out node of the LUT)
:241  %tmp43 = add i64 %tmp42, %tmp_208


 <State 61>: 0.82ns
ST_61: t0_5 (396)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193
:242  %t0_5 = add i64 %tmp43, %tmp41


 <State 62>: 1.50ns
ST_62: tmp_222 (412)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193
:258  %tmp_222 = add i64 %tmp_123, %t0_5

ST_62: StgValue_498 (413)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:193
:259  store i64 %tmp_222, i64* %S_addr_3, align 16


 <State 63>: 0.82ns
ST_63: tmp_211 (397)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:243  %tmp_211 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_198, i32 28, i32 63)

ST_63: tmp_318 (398)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp45)
:244  %tmp_318 = trunc i64 %tmp_198 to i28

ST_63: tmp_212 (399)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:245  %tmp_212 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_318, i36 %tmp_211)

ST_63: tmp_213 (400)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:246  %tmp_213 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_198, i32 34, i32 63)

ST_63: tmp_319 (401)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp45)
:247  %tmp_319 = trunc i64 %tmp_198 to i34

ST_63: tmp_214 (402)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:248  %tmp_214 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_319, i30 %tmp_213)

ST_63: tmp_215 (403)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:249  %tmp_215 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_198, i32 39, i32 63)

ST_63: tmp_320 (404)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:192 (grouped into LUT with out node tmp45)
:250  %tmp_320 = trunc i64 %tmp_198 to i39

ST_63: tmp_216 (405)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:251  %tmp_216 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_320, i25 %tmp_215)

ST_63: tmp44 (406)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:252  %tmp44 = xor i64 %tmp_216, %tmp_214

ST_63: tmp_217 (407)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp45)
:253  %tmp_217 = xor i64 %tmp44, %tmp_212

ST_63: tmp45 (414)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193 (out node of the LUT)
:260  %tmp45 = add i64 %tmp_217, %t0_5


 <State 64>: 1.50ns
ST_64: tmp_218 (408)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp_223)
:254  %tmp_218 = or i64 %tmp_198, %tmp_173

ST_64: tmp_219 (409)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp_223)
:255  %tmp_219 = and i64 %tmp_218, %tmp_148

ST_64: tmp_220 (410)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp_223)
:256  %tmp_220 = and i64 %tmp_198, %tmp_173

ST_64: tmp_221 (411)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp_223)
:257  %tmp_221 = or i64 %tmp_219, %tmp_220

ST_64: tmp_223 (415)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:193 (out node of the LUT)
:261  %tmp_223 = add i64 %tmp45, %tmp_221

ST_64: StgValue_516 (416)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:193
:262  store i64 %tmp_223, i64* %S_addr_7, align 16

ST_64: tmp_234 (431)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194
:277  %tmp_234 = or i7 %i_3, 6

ST_64: tmp_235 (432)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194
:278  %tmp_235 = zext i7 %tmp_234 to i64

ST_64: K_addr_6 (433)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194
:279  %K_addr_6 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_235

ST_64: K_load_6 (434)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:194
:280  %K_load_6 = load i64* %K_addr_6, align 16

ST_64: W_addr_12 (435)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194
:281  %W_addr_12 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_235

ST_64: W_load_10 (436)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:194
:282  %W_load_10 = load i64* %W_addr_12, align 16


 <State 65>: 2.06ns
ST_65: K_load_6 (434)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:194
:280  %K_load_6 = load i64* %K_addr_6, align 16

ST_65: W_load_10 (436)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:194
:282  %W_load_10 = load i64* %W_addr_12, align 16

ST_65: tmp47 (437)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194
:283  %tmp47 = add i64 %K_load_6, %W_load_10


 <State 66>: 0.82ns
ST_66: tmp_224 (417)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:263  %tmp_224 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_222, i32 14, i32 63)

ST_66: tmp_321 (418)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp48)
:264  %tmp_321 = trunc i64 %tmp_222 to i14

ST_66: tmp_225 (419)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:265  %tmp_225 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_321, i50 %tmp_224)

ST_66: tmp_226 (420)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:266  %tmp_226 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_222, i32 18, i32 63)

ST_66: tmp_322 (421)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp48)
:267  %tmp_322 = trunc i64 %tmp_222 to i18

ST_66: tmp_227 (422)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:268  %tmp_227 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_322, i46 %tmp_226)

ST_66: tmp_228 (423)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:269  %tmp_228 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_222, i32 41, i32 63)

ST_66: tmp_323 (424)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp48)
:270  %tmp_323 = trunc i64 %tmp_222 to i41

ST_66: tmp_229 (425)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:271  %tmp_229 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_323, i23 %tmp_228)

ST_66: tmp46 (426)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:272  %tmp46 = xor i64 %tmp_229, %tmp_227

ST_66: tmp_230 (427)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp48)
:273  %tmp_230 = xor i64 %tmp46, %tmp_225

ST_66: tmp48 (438)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194 (out node of the LUT)
:284  %tmp48 = add i64 %tmp_230, %tmp_147


 <State 67>: 0.82ns
ST_67: tmp_231 (428)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp49)
:274  %tmp_231 = xor i64 %tmp_197, %tmp_172

ST_67: tmp_232 (429)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp49)
:275  %tmp_232 = and i64 %tmp_222, %tmp_231

ST_67: tmp_233 (430)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp49)
:276  %tmp_233 = xor i64 %tmp_232, %tmp_172

ST_67: tmp49 (439)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194 (out node of the LUT)
:285  %tmp49 = add i64 %tmp48, %tmp_233


 <State 68>: 0.82ns
ST_68: t0_6 (440)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194
:286  %t0_6 = add i64 %tmp49, %tmp47


 <State 69>: 1.50ns
ST_69: tmp_247 (456)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194
:302  %tmp_247 = add i64 %tmp_148, %t0_6

ST_69: StgValue_544 (457)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:194
:303  store i64 %tmp_247, i64* %S_addr_4, align 8


 <State 70>: 0.82ns
ST_70: tmp_236 (441)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:287  %tmp_236 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_223, i32 28, i32 63)

ST_70: tmp_324 (442)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp51)
:288  %tmp_324 = trunc i64 %tmp_223 to i28

ST_70: tmp_237 (443)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:289  %tmp_237 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_324, i36 %tmp_236)

ST_70: tmp_238 (444)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:290  %tmp_238 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_223, i32 34, i32 63)

ST_70: tmp_325 (445)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp51)
:291  %tmp_325 = trunc i64 %tmp_223 to i34

ST_70: tmp_239 (446)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:292  %tmp_239 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_325, i30 %tmp_238)

ST_70: tmp_240 (447)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:293  %tmp_240 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_223, i32 39, i32 63)

ST_70: tmp_326 (448)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:193 (grouped into LUT with out node tmp51)
:294  %tmp_326 = trunc i64 %tmp_223 to i39

ST_70: tmp_241 (449)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:295  %tmp_241 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_326, i25 %tmp_240)

ST_70: tmp50 (450)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:296  %tmp50 = xor i64 %tmp_241, %tmp_239

ST_70: tmp_242 (451)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp51)
:297  %tmp_242 = xor i64 %tmp50, %tmp_237

ST_70: tmp51 (458)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194 (out node of the LUT)
:304  %tmp51 = add i64 %tmp_242, %t0_6


 <State 71>: 1.50ns
ST_71: tmp_243 (452)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp_248)
:298  %tmp_243 = or i64 %tmp_223, %tmp_198

ST_71: tmp_244 (453)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp_248)
:299  %tmp_244 = and i64 %tmp_243, %tmp_173

ST_71: tmp_245 (454)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp_248)
:300  %tmp_245 = and i64 %tmp_223, %tmp_198

ST_71: tmp_246 (455)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp_248)
:301  %tmp_246 = or i64 %tmp_244, %tmp_245

ST_71: tmp_248 (459)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:194 (out node of the LUT)
:305  %tmp_248 = add i64 %tmp51, %tmp_246

ST_71: StgValue_562 (460)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:194
:306  store i64 %tmp_248, i64* %S_addr_6, align 8

ST_71: tmp_262 (475)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195
:321  %tmp_262 = or i7 %i_3, 7

ST_71: tmp_263 (476)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195
:322  %tmp_263 = zext i7 %tmp_262 to i64

ST_71: K_addr_7 (477)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195
:323  %K_addr_7 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_263

ST_71: K_load_7 (478)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:195
:324  %K_load_7 = load i64* %K_addr_7, align 8

ST_71: W_addr_13 (479)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195
:325  %W_addr_13 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_263

ST_71: W_load_11 (480)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:195
:326  %W_load_11 = load i64* %W_addr_13, align 8


 <State 72>: 2.06ns
ST_72: K_load_7 (478)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:195
:324  %K_load_7 = load i64* %K_addr_7, align 8

ST_72: W_load_11 (480)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:195
:326  %W_load_11 = load i64* %W_addr_13, align 8

ST_72: tmp53 (481)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195
:327  %tmp53 = add i64 %K_load_7, %W_load_11


 <State 73>: 0.82ns
ST_73: tmp_249 (461)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:307  %tmp_249 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_247, i32 14, i32 63)

ST_73: tmp_327 (462)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp54)
:308  %tmp_327 = trunc i64 %tmp_247 to i14

ST_73: tmp_250 (463)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:309  %tmp_250 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_327, i50 %tmp_249)

ST_73: tmp_251 (464)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:310  %tmp_251 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_247, i32 18, i32 63)

ST_73: tmp_328 (465)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp54)
:311  %tmp_328 = trunc i64 %tmp_247 to i18

ST_73: tmp_252 (466)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:312  %tmp_252 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_328, i46 %tmp_251)

ST_73: tmp_254 (467)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:313  %tmp_254 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_247, i32 41, i32 63)

ST_73: tmp_329 (468)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp54)
:314  %tmp_329 = trunc i64 %tmp_247 to i41

ST_73: tmp_255 (469)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:315  %tmp_255 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_329, i23 %tmp_254)

ST_73: tmp52 (470)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:316  %tmp52 = xor i64 %tmp_255, %tmp_252

ST_73: tmp_257 (471)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp54)
:317  %tmp_257 = xor i64 %tmp52, %tmp_250

ST_73: tmp54 (482)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195 (out node of the LUT)
:328  %tmp54 = add i64 %tmp_257, %tmp_172


 <State 74>: 0.82ns
ST_74: tmp_258 (472)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp55)
:318  %tmp_258 = xor i64 %tmp_222, %tmp_197

ST_74: tmp_260 (473)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp55)
:319  %tmp_260 = and i64 %tmp_247, %tmp_258

ST_74: tmp_261 (474)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp55)
:320  %tmp_261 = xor i64 %tmp_260, %tmp_197

ST_74: tmp55 (483)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195 (out node of the LUT)
:329  %tmp55 = add i64 %tmp54, %tmp_261


 <State 75>: 0.82ns
ST_75: t0_7 (484)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195
:330  %t0_7 = add i64 %tmp55, %tmp53


 <State 76>: 1.50ns
ST_76: tmp_278 (500)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195
:346  %tmp_278 = add i64 %tmp_173, %t0_7

ST_76: StgValue_590 (501)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:195
:347  store i64 %tmp_278, i64* %S_addr_2, align 16


 <State 77>: 0.82ns
ST_77: tmp_264 (485)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:331  %tmp_264 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_248, i32 28, i32 63)

ST_77: tmp_330 (486)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp57)
:332  %tmp_330 = trunc i64 %tmp_248 to i28

ST_77: tmp_265 (487)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:333  %tmp_265 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_330, i36 %tmp_264)

ST_77: tmp_266 (488)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:334  %tmp_266 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_248, i32 34, i32 63)

ST_77: tmp_331 (489)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp57)
:335  %tmp_331 = trunc i64 %tmp_248 to i34

ST_77: tmp_267 (490)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:336  %tmp_267 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_331, i30 %tmp_266)

ST_77: tmp_269 (491)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:337  %tmp_269 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_248, i32 39, i32 63)

ST_77: tmp_332 (492)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:194 (grouped into LUT with out node tmp57)
:338  %tmp_332 = trunc i64 %tmp_248 to i39

ST_77: tmp_270 (493)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:339  %tmp_270 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_332, i25 %tmp_269)

ST_77: tmp56 (494)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:340  %tmp56 = xor i64 %tmp_270, %tmp_267

ST_77: tmp_272 (495)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp57)
:341  %tmp_272 = xor i64 %tmp56, %tmp_265

ST_77: tmp57 (502)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195 (out node of the LUT)
:348  %tmp57 = add i64 %tmp_272, %t0_7


 <State 78>: 1.50ns
ST_78: tmp_273 (496)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp_279)
:342  %tmp_273 = or i64 %tmp_248, %tmp_223

ST_78: tmp_275 (497)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp_279)
:343  %tmp_275 = and i64 %tmp_273, %tmp_198

ST_78: tmp_276 (498)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp_279)
:344  %tmp_276 = and i64 %tmp_248, %tmp_223

ST_78: tmp_277 (499)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:195 (grouped into LUT with out node tmp_279)
:345  %tmp_277 = or i64 %tmp_275, %tmp_276

ST_78: tmp_279 (503)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:195 (out node of the LUT)
:349  %tmp_279 = add i64 %tmp57, %tmp_277

ST_78: StgValue_608 (504)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:195
:350  store i64 %tmp_279, i64* %S_addr_5, align 16

ST_78: StgValue_609 (506)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:187
:352  br label %.preheader11


 <State 79>: 0.81ns
ST_79: i_4 (510)  [1/1] 0.00ns
.preheader:0  %i_4 = phi i4 [ %i_9, %6 ], [ 0, %.preheader.preheader ]

ST_79: exitcond (511)  [1/1] 0.44ns  loc: ed25519/src/sha512.cpp:203
.preheader:1  %exitcond = icmp eq i4 %i_4, -8

ST_79: empty_99 (512)  [1/1] 0.00ns
.preheader:2  %empty_99 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_79: i_9 (513)  [1/1] 0.81ns  loc: ed25519/src/sha512.cpp:203
.preheader:3  %i_9 = add i4 %i_4, 1

ST_79: StgValue_614 (514)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:203
.preheader:4  br i1 %exitcond, label %7, label %6

ST_79: tmp_280 (516)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:204
:0  %tmp_280 = zext i4 %i_4 to i64

ST_79: md_state_addr_1 (517)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:204
:1  %md_state_addr_1 = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp_280

ST_79: md_state_load_1 (518)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:204
:2  %md_state_load_1 = load i64* %md_state_addr_1, align 8

ST_79: S_addr_9 (519)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:204
:3  %S_addr_9 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp_280

ST_79: S_load_8 (520)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:204
:4  %S_load_8 = load i64* %S_addr_9, align 8

ST_79: StgValue_620 (525)  [1/1] 0.00ns
:0  ret void


 <State 80>: 2.17ns
ST_80: md_state_load_1 (518)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:204
:2  %md_state_load_1 = load i64* %md_state_addr_1, align 8

ST_80: S_load_8 (520)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:204
:4  %S_load_8 = load i64* %S_addr_9, align 8

ST_80: tmp_281 (521)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:204
:5  %tmp_281 = add i64 %md_state_load_1, %S_load_8

ST_80: StgValue_624 (522)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:204
:6  store i64 %tmp_281, i64* %md_state_addr_1, align 8

ST_80: StgValue_625 (523)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:203
:7  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:166) [18]  (0.427 ns)

 <State 2>: 0.805ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:166) [18]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:166) [21]  (0.805 ns)

 <State 3>: 1.35ns
The critical path consists of the following:
	'load' operation ('md_state_load', ed25519/src/sha512.cpp:167) on array 'md_state' [26]  (0.677 ns)
	'store' operation (ed25519/src/sha512.cpp:167) of variable 'md_state_load', ed25519/src/sha512.cpp:167 on array 'S', ed25519/src/sha512.cpp:162 [28]  (0.677 ns)

 <State 4>: 0.78ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:171) [34]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:171) [37]  (0.78 ns)

 <State 5>: 1.47ns
The critical path consists of the following:
	'add' operation ('sum', ed25519/src/sha512.cpp:172) [42]  (0.789 ns)
	'getelementptr' operation ('buf_addr', ed25519/src/sha512.cpp:172) [44]  (0 ns)
	'load' operation ('buf_load', ed25519/src/sha512.cpp:172) on array 'buf_r' [45]  (0.677 ns)

 <State 6>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum1', ed25519/src/sha512.cpp:172) [46]  (0 ns)
	'add' operation ('sum2', ed25519/src/sha512.cpp:172) [47]  (0.789 ns)
	'getelementptr' operation ('buf_addr_1', ed25519/src/sha512.cpp:172) [49]  (0 ns)
	'load' operation ('buf_load_1', ed25519/src/sha512.cpp:172) on array 'buf_r' [50]  (0.677 ns)

 <State 7>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum2', ed25519/src/sha512.cpp:172) [51]  (0 ns)
	'add' operation ('sum4', ed25519/src/sha512.cpp:172) [52]  (0.789 ns)
	'getelementptr' operation ('buf_addr_2', ed25519/src/sha512.cpp:172) [54]  (0 ns)
	'load' operation ('buf_load_2', ed25519/src/sha512.cpp:172) on array 'buf_r' [55]  (0.677 ns)

 <State 8>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum3', ed25519/src/sha512.cpp:172) [56]  (0 ns)
	'add' operation ('sum6', ed25519/src/sha512.cpp:172) [57]  (0.789 ns)
	'getelementptr' operation ('buf_addr_3', ed25519/src/sha512.cpp:172) [59]  (0 ns)
	'load' operation ('buf_load_3', ed25519/src/sha512.cpp:172) on array 'buf_r' [60]  (0.677 ns)

 <State 9>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum4', ed25519/src/sha512.cpp:172) [61]  (0 ns)
	'add' operation ('sum8', ed25519/src/sha512.cpp:172) [62]  (0.789 ns)
	'getelementptr' operation ('buf_addr_4', ed25519/src/sha512.cpp:172) [64]  (0 ns)
	'load' operation ('buf_load_4', ed25519/src/sha512.cpp:172) on array 'buf_r' [65]  (0.677 ns)

 <State 10>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum5', ed25519/src/sha512.cpp:172) [66]  (0 ns)
	'add' operation ('sum1', ed25519/src/sha512.cpp:172) [67]  (0.789 ns)
	'getelementptr' operation ('buf_addr_5', ed25519/src/sha512.cpp:172) [69]  (0 ns)
	'load' operation ('buf_load_5', ed25519/src/sha512.cpp:172) on array 'buf_r' [70]  (0.677 ns)

 <State 11>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum6', ed25519/src/sha512.cpp:172) [71]  (0 ns)
	'add' operation ('sum3', ed25519/src/sha512.cpp:172) [72]  (0.789 ns)
	'getelementptr' operation ('buf_addr_6', ed25519/src/sha512.cpp:172) [74]  (0 ns)
	'load' operation ('buf_load_6', ed25519/src/sha512.cpp:172) on array 'buf_r' [75]  (0.677 ns)

 <State 12>: 1.47ns
The critical path consists of the following:
	'or' operation ('p_sum7', ed25519/src/sha512.cpp:172) [76]  (0 ns)
	'add' operation ('sum5', ed25519/src/sha512.cpp:172) [77]  (0.789 ns)
	'getelementptr' operation ('buf_addr_7', ed25519/src/sha512.cpp:172) [79]  (0 ns)
	'load' operation ('buf_load_7', ed25519/src/sha512.cpp:172) on array 'buf_r' [80]  (0.677 ns)

 <State 13>: 1.91ns
The critical path consists of the following:
	'load' operation ('buf_load_7', ed25519/src/sha512.cpp:172) on array 'buf_r' [80]  (0.677 ns)
	'store' operation (ed25519/src/sha512.cpp:172) of variable 'tmp_50', ed25519/src/sha512.cpp:172 on array 'W', ed25519/src/sha512.cpp:162 [84]  (1.24 ns)

 <State 14>: 0.789ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:176) [89]  (0 ns)
	'add' operation ('tmp_52', ed25519/src/sha512.cpp:177) [94]  (0.789 ns)

 <State 15>: 0.789ns
The critical path consists of the following:
	'add' operation ('tmp_60', ed25519/src/sha512.cpp:177) [108]  (0.789 ns)

 <State 16>: 0.789ns
The critical path consists of the following:
	'add' operation ('tmp_62', ed25519/src/sha512.cpp:177) [112]  (0.789 ns)

 <State 17>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_2', ed25519/src/sha512.cpp:177) [110]  (0 ns)
	'load' operation ('W_load_1', ed25519/src/sha512.cpp:177) on array 'W', ed25519/src/sha512.cpp:162 [111]  (1.24 ns)

 <State 18>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_1', ed25519/src/sha512.cpp:177) [96]  (0 ns)
	'load' operation ('W_load', ed25519/src/sha512.cpp:177) on array 'W', ed25519/src/sha512.cpp:162 [97]  (1.24 ns)

 <State 19>: 2.06ns
The critical path consists of the following:
	'load' operation ('W_load_3', ed25519/src/sha512.cpp:177) on array 'W', ed25519/src/sha512.cpp:162 [129]  (1.24 ns)
	'add' operation ('tmp8', ed25519/src/sha512.cpp:177) [130]  (0.82 ns)

 <State 20>: 2.06ns
The critical path consists of the following:
	'load' operation ('W_load_2', ed25519/src/sha512.cpp:177) on array 'W', ed25519/src/sha512.cpp:162 [115]  (1.24 ns)
	'xor' operation ('tmp7', ed25519/src/sha512.cpp:177) [124]  (0 ns)
	'xor' operation ('tmp_69', ed25519/src/sha512.cpp:177) [125]  (0 ns)
	'add' operation ('tmp9', ed25519/src/sha512.cpp:177) [131]  (0.82 ns)

 <State 21>: 2.06ns
The critical path consists of the following:
	'add' operation ('tmp_72', ed25519/src/sha512.cpp:177) [132]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:177) of variable 'tmp_72', ed25519/src/sha512.cpp:177 on array 'W', ed25519/src/sha512.cpp:162 [135]  (1.24 ns)

 <State 22>: 1.24ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:187) [149]  (0 ns)
	'getelementptr' operation ('K_addr', ed25519/src/sha512.cpp:188) [173]  (0 ns)
	'load' operation ('K_load', ed25519/src/sha512.cpp:188) on array 'K' [174]  (1.24 ns)

 <State 23>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load', ed25519/src/sha512.cpp:188) on array 'K' [174]  (1.24 ns)
	'add' operation ('tmp11', ed25519/src/sha512.cpp:188) [177]  (0.82 ns)

 <State 24>: 1.55ns
The critical path consists of the following:
	'load' operation ('S_load_2', ed25519/src/sha512.cpp:188) on array 'S', ed25519/src/sha512.cpp:162 [167]  (0.677 ns)
	'xor' operation ('tmp_84', ed25519/src/sha512.cpp:188) [171]  (0.051 ns)
	'add' operation ('tmp12', ed25519/src/sha512.cpp:188) [178]  (0.82 ns)

 <State 25>: 2.06ns
The critical path consists of the following:
	'load' operation ('W_load_4', ed25519/src/sha512.cpp:188) on array 'W', ed25519/src/sha512.cpp:162 [176]  (1.24 ns)
	'add' operation ('tmp13', ed25519/src/sha512.cpp:188) [179]  (0.82 ns)

 <State 26>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:188) [180]  (0.82 ns)

 <State 27>: 1.5ns
The critical path consists of the following:
	'load' operation ('S_load_7', ed25519/src/sha512.cpp:188) on array 'S', ed25519/src/sha512.cpp:162 [199]  (0.677 ns)
	'add' operation ('tmp_97', ed25519/src/sha512.cpp:188) [200]  (0.82 ns)

 <State 28>: 1.55ns
The critical path consists of the following:
	'load' operation ('S_load_6', ed25519/src/sha512.cpp:188) on array 'S', ed25519/src/sha512.cpp:162 [195]  (0.677 ns)
	'and' operation ('tmp_94', ed25519/src/sha512.cpp:188) [196]  (0 ns)
	'or' operation ('tmp_96', ed25519/src/sha512.cpp:188) [198]  (0.051 ns)
	'add' operation ('tmp15', ed25519/src/sha512.cpp:188) [201]  (0.82 ns)

 <State 29>: 1.24ns
The critical path consists of the following:
	'or' operation ('tmp_109', ed25519/src/sha512.cpp:189) [217]  (0 ns)
	'getelementptr' operation ('K_addr_1', ed25519/src/sha512.cpp:189) [219]  (0 ns)
	'load' operation ('K_load_1', ed25519/src/sha512.cpp:189) on array 'K' [220]  (1.24 ns)

 <State 30>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_1', ed25519/src/sha512.cpp:189) on array 'K' [220]  (1.24 ns)
	'add' operation ('tmp17', ed25519/src/sha512.cpp:189) [223]  (0.82 ns)

 <State 31>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_7', ed25519/src/sha512.cpp:189) [221]  (0 ns)
	'load' operation ('W_load_5', ed25519/src/sha512.cpp:189) on array 'W', ed25519/src/sha512.cpp:162 [222]  (1.24 ns)

 <State 32>: 2.06ns
The critical path consists of the following:
	'load' operation ('W_load_5', ed25519/src/sha512.cpp:189) on array 'W', ed25519/src/sha512.cpp:162 [222]  (1.24 ns)
	'add' operation ('tmp19', ed25519/src/sha512.cpp:189) [225]  (0.82 ns)

 <State 33>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:189) [226]  (0.82 ns)

 <State 34>: 0.82ns
The critical path consists of the following:
	'add' operation ('tmp_122', ed25519/src/sha512.cpp:189) [242]  (0.82 ns)

 <State 35>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_117', ed25519/src/sha512.cpp:189) [237]  (0 ns)
	'add' operation ('tmp21', ed25519/src/sha512.cpp:189) [243]  (0.82 ns)

 <State 36>: 1.24ns
The critical path consists of the following:
	'or' operation ('tmp_134', ed25519/src/sha512.cpp:190) [259]  (0 ns)
	'getelementptr' operation ('K_addr_2', ed25519/src/sha512.cpp:190) [261]  (0 ns)
	'load' operation ('K_load_2', ed25519/src/sha512.cpp:190) on array 'K' [262]  (1.24 ns)

 <State 37>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_2', ed25519/src/sha512.cpp:190) on array 'K' [262]  (1.24 ns)
	'add' operation ('tmp23', ed25519/src/sha512.cpp:190) [265]  (0.82 ns)

 <State 38>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_8', ed25519/src/sha512.cpp:190) [263]  (0 ns)
	'load' operation ('W_load_6', ed25519/src/sha512.cpp:190) on array 'W', ed25519/src/sha512.cpp:162 [264]  (1.24 ns)

 <State 39>: 2.06ns
The critical path consists of the following:
	'load' operation ('W_load_6', ed25519/src/sha512.cpp:190) on array 'W', ed25519/src/sha512.cpp:162 [264]  (1.24 ns)
	'add' operation ('tmp25', ed25519/src/sha512.cpp:190) [267]  (0.82 ns)

 <State 40>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:190) [268]  (0.82 ns)

 <State 41>: 0.82ns
The critical path consists of the following:
	'add' operation ('tmp_147', ed25519/src/sha512.cpp:190) [284]  (0.82 ns)

 <State 42>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_142', ed25519/src/sha512.cpp:190) [279]  (0 ns)
	'add' operation ('tmp27', ed25519/src/sha512.cpp:190) [285]  (0.82 ns)

 <State 43>: 1.24ns
The critical path consists of the following:
	'or' operation ('tmp_159', ed25519/src/sha512.cpp:191) [301]  (0 ns)
	'getelementptr' operation ('K_addr_3', ed25519/src/sha512.cpp:191) [303]  (0 ns)
	'load' operation ('K_load_3', ed25519/src/sha512.cpp:191) on array 'K' [304]  (1.24 ns)

 <State 44>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_3', ed25519/src/sha512.cpp:191) on array 'K' [304]  (1.24 ns)
	'add' operation ('tmp29', ed25519/src/sha512.cpp:191) [307]  (0.82 ns)

 <State 45>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_9', ed25519/src/sha512.cpp:191) [305]  (0 ns)
	'load' operation ('W_load_7', ed25519/src/sha512.cpp:191) on array 'W', ed25519/src/sha512.cpp:162 [306]  (1.24 ns)

 <State 46>: 2.06ns
The critical path consists of the following:
	'load' operation ('W_load_7', ed25519/src/sha512.cpp:191) on array 'W', ed25519/src/sha512.cpp:162 [306]  (1.24 ns)
	'add' operation ('tmp31', ed25519/src/sha512.cpp:191) [309]  (0.82 ns)

 <State 47>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:191) [310]  (0.82 ns)

 <State 48>: 0.82ns
The critical path consists of the following:
	'add' operation ('tmp_172', ed25519/src/sha512.cpp:191) [326]  (0.82 ns)

 <State 49>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_167', ed25519/src/sha512.cpp:191) [321]  (0 ns)
	'add' operation ('tmp33', ed25519/src/sha512.cpp:191) [327]  (0.82 ns)

 <State 50>: 1.24ns
The critical path consists of the following:
	'or' operation ('tmp_184', ed25519/src/sha512.cpp:192) [343]  (0 ns)
	'getelementptr' operation ('K_addr_4', ed25519/src/sha512.cpp:192) [345]  (0 ns)
	'load' operation ('K_load_4', ed25519/src/sha512.cpp:192) on array 'K' [346]  (1.24 ns)

 <State 51>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_4', ed25519/src/sha512.cpp:192) on array 'K' [346]  (1.24 ns)
	'add' operation ('tmp35', ed25519/src/sha512.cpp:192) [349]  (0.82 ns)

 <State 52>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_180', ed25519/src/sha512.cpp:192) [339]  (0 ns)
	'add' operation ('tmp36', ed25519/src/sha512.cpp:192) [350]  (0.82 ns)

 <State 53>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_181', ed25519/src/sha512.cpp:192) [340]  (0 ns)
	'and' operation ('tmp_182', ed25519/src/sha512.cpp:192) [341]  (0 ns)
	'xor' operation ('tmp_183', ed25519/src/sha512.cpp:192) [342]  (0 ns)
	'add' operation ('tmp37', ed25519/src/sha512.cpp:192) [351]  (0.82 ns)

 <State 54>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:192) [352]  (0.82 ns)

 <State 55>: 1.5ns
The critical path consists of the following:
	'add' operation ('tmp_197', ed25519/src/sha512.cpp:192) [368]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:192) of variable 'tmp_197', ed25519/src/sha512.cpp:192 on array 'S', ed25519/src/sha512.cpp:162 [369]  (0.677 ns)

 <State 56>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_192', ed25519/src/sha512.cpp:192) [363]  (0 ns)
	'add' operation ('tmp39', ed25519/src/sha512.cpp:192) [370]  (0.82 ns)

 <State 57>: 1.5ns
The critical path consists of the following:
	'or' operation ('tmp_193', ed25519/src/sha512.cpp:192) [364]  (0 ns)
	'and' operation ('tmp_194', ed25519/src/sha512.cpp:192) [365]  (0 ns)
	'or' operation ('tmp_196', ed25519/src/sha512.cpp:192) [367]  (0 ns)
	'add' operation ('tmp_198', ed25519/src/sha512.cpp:192) [371]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:192) of variable 'tmp_198', ed25519/src/sha512.cpp:192 on array 'S', ed25519/src/sha512.cpp:162 [372]  (0.677 ns)

 <State 58>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_5', ed25519/src/sha512.cpp:193) on array 'K' [390]  (1.24 ns)
	'add' operation ('tmp41', ed25519/src/sha512.cpp:193) [393]  (0.82 ns)

 <State 59>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_205', ed25519/src/sha512.cpp:193) [383]  (0 ns)
	'add' operation ('tmp42', ed25519/src/sha512.cpp:193) [394]  (0.82 ns)

 <State 60>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_206', ed25519/src/sha512.cpp:193) [384]  (0 ns)
	'and' operation ('tmp_207', ed25519/src/sha512.cpp:193) [385]  (0 ns)
	'xor' operation ('tmp_208', ed25519/src/sha512.cpp:193) [386]  (0 ns)
	'add' operation ('tmp43', ed25519/src/sha512.cpp:193) [395]  (0.82 ns)

 <State 61>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:193) [396]  (0.82 ns)

 <State 62>: 1.5ns
The critical path consists of the following:
	'add' operation ('tmp_222', ed25519/src/sha512.cpp:193) [412]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:193) of variable 'tmp_222', ed25519/src/sha512.cpp:193 on array 'S', ed25519/src/sha512.cpp:162 [413]  (0.677 ns)

 <State 63>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_217', ed25519/src/sha512.cpp:193) [407]  (0 ns)
	'add' operation ('tmp45', ed25519/src/sha512.cpp:193) [414]  (0.82 ns)

 <State 64>: 1.5ns
The critical path consists of the following:
	'or' operation ('tmp_218', ed25519/src/sha512.cpp:193) [408]  (0 ns)
	'and' operation ('tmp_219', ed25519/src/sha512.cpp:193) [409]  (0 ns)
	'or' operation ('tmp_221', ed25519/src/sha512.cpp:193) [411]  (0 ns)
	'add' operation ('tmp_223', ed25519/src/sha512.cpp:193) [415]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:193) of variable 'tmp_223', ed25519/src/sha512.cpp:193 on array 'S', ed25519/src/sha512.cpp:162 [416]  (0.677 ns)

 <State 65>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_6', ed25519/src/sha512.cpp:194) on array 'K' [434]  (1.24 ns)
	'add' operation ('tmp47', ed25519/src/sha512.cpp:194) [437]  (0.82 ns)

 <State 66>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_230', ed25519/src/sha512.cpp:194) [427]  (0 ns)
	'add' operation ('tmp48', ed25519/src/sha512.cpp:194) [438]  (0.82 ns)

 <State 67>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_231', ed25519/src/sha512.cpp:194) [428]  (0 ns)
	'and' operation ('tmp_232', ed25519/src/sha512.cpp:194) [429]  (0 ns)
	'xor' operation ('tmp_233', ed25519/src/sha512.cpp:194) [430]  (0 ns)
	'add' operation ('tmp49', ed25519/src/sha512.cpp:194) [439]  (0.82 ns)

 <State 68>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:194) [440]  (0.82 ns)

 <State 69>: 1.5ns
The critical path consists of the following:
	'add' operation ('tmp_247', ed25519/src/sha512.cpp:194) [456]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:194) of variable 'tmp_247', ed25519/src/sha512.cpp:194 on array 'S', ed25519/src/sha512.cpp:162 [457]  (0.677 ns)

 <State 70>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_242', ed25519/src/sha512.cpp:194) [451]  (0 ns)
	'add' operation ('tmp51', ed25519/src/sha512.cpp:194) [458]  (0.82 ns)

 <State 71>: 1.5ns
The critical path consists of the following:
	'or' operation ('tmp_243', ed25519/src/sha512.cpp:194) [452]  (0 ns)
	'and' operation ('tmp_244', ed25519/src/sha512.cpp:194) [453]  (0 ns)
	'or' operation ('tmp_246', ed25519/src/sha512.cpp:194) [455]  (0 ns)
	'add' operation ('tmp_248', ed25519/src/sha512.cpp:194) [459]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:194) of variable 'tmp_248', ed25519/src/sha512.cpp:194 on array 'S', ed25519/src/sha512.cpp:162 [460]  (0.677 ns)

 <State 72>: 2.06ns
The critical path consists of the following:
	'load' operation ('K_load_7', ed25519/src/sha512.cpp:195) on array 'K' [478]  (1.24 ns)
	'add' operation ('tmp53', ed25519/src/sha512.cpp:195) [481]  (0.82 ns)

 <State 73>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_257', ed25519/src/sha512.cpp:195) [471]  (0 ns)
	'add' operation ('tmp54', ed25519/src/sha512.cpp:195) [482]  (0.82 ns)

 <State 74>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_258', ed25519/src/sha512.cpp:195) [472]  (0 ns)
	'and' operation ('tmp_260', ed25519/src/sha512.cpp:195) [473]  (0 ns)
	'xor' operation ('tmp_261', ed25519/src/sha512.cpp:195) [474]  (0 ns)
	'add' operation ('tmp55', ed25519/src/sha512.cpp:195) [483]  (0.82 ns)

 <State 75>: 0.82ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:195) [484]  (0.82 ns)

 <State 76>: 1.5ns
The critical path consists of the following:
	'add' operation ('tmp_278', ed25519/src/sha512.cpp:195) [500]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:195) of variable 'tmp_278', ed25519/src/sha512.cpp:195 on array 'S', ed25519/src/sha512.cpp:162 [501]  (0.677 ns)

 <State 77>: 0.82ns
The critical path consists of the following:
	'xor' operation ('tmp_272', ed25519/src/sha512.cpp:195) [495]  (0 ns)
	'add' operation ('tmp57', ed25519/src/sha512.cpp:195) [502]  (0.82 ns)

 <State 78>: 1.5ns
The critical path consists of the following:
	'or' operation ('tmp_273', ed25519/src/sha512.cpp:195) [496]  (0 ns)
	'and' operation ('tmp_275', ed25519/src/sha512.cpp:195) [497]  (0 ns)
	'or' operation ('tmp_277', ed25519/src/sha512.cpp:195) [499]  (0 ns)
	'add' operation ('tmp_279', ed25519/src/sha512.cpp:195) [503]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:195) of variable 'tmp_279', ed25519/src/sha512.cpp:195 on array 'S', ed25519/src/sha512.cpp:162 [504]  (0.677 ns)

 <State 79>: 0.805ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:203) [510]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:203) [513]  (0.805 ns)

 <State 80>: 2.17ns
The critical path consists of the following:
	'load' operation ('md_state_load_1', ed25519/src/sha512.cpp:204) on array 'md_state' [518]  (0.677 ns)
	'add' operation ('tmp_281', ed25519/src/sha512.cpp:204) [521]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:204) of variable 'tmp_281', ed25519/src/sha512.cpp:204 on array 'md_state' [522]  (0.677 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
