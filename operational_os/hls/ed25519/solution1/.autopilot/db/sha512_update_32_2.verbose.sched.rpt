

================================================================
== Vivado HLS Report for 'sha512_update_32_2'
================================================================
* Date:           Mon Sep 25 21:40:12 2017

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      2.17|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        | + Loop 1.2  |  256|  256|         2|          -|          -|   128|    no    |
        | + Loop 1.3  |  256|  256|         2|          -|          -|   128|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp & !tmp_1)
3 --> 
	4  / true
4 --> 
	5  / (!or_cond)
	17  / (or_cond)
5 --> 
	6  / true
6 --> 
	7  / (!exitcond3)
	10  / (exitcond3)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	6  / true
10 --> 
	16  / (!tmp_s)
	11  / (tmp_s)
11 --> 
	12  / (!exitcond2)
	13  / (exitcond2)
12 --> 
	11  / true
13 --> 
	14  / true
14 --> 
	15  / (!exitcond)
	16  / (exitcond)
15 --> 
	14  / true
16 --> 
	19  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	2  / true
* FSM state operations: 

 <State 1>: 0.64ns
ST_1: temp_buf (7)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:310
:0  %temp_buf = alloca [128 x i8], align 16

ST_1: StgValue_21 (8)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:299
:1  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str44, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_22 (9)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:300
:2  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str246, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_23 (10)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:301
:3  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str347, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_24 (11)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:302
:4  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str448, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_25 (12)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:303
:5  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str549, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_26 (13)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:304
:6  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str650, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_27 (14)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:305
:7  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str751, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: md_curlen_read (15)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:314
:8  %md_curlen_read = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_1: tmp (16)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:314
:9  %tmp = icmp ugt i64 %md_curlen_read, 128

ST_1: StgValue_30 (17)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:314
:10  br i1 %tmp, label %.loopexit, label %.backedge.preheader

ST_1: inlen (19)  [1/1] 0.00ns
.backedge.preheader:0  %inlen = alloca i64

ST_1: StgValue_32 (20)  [1/1] 0.41ns
.backedge.preheader:1  store i64 32, i64* %inlen

ST_1: StgValue_33 (21)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:317
.backedge.preheader:2  br label %.backedge


 <State 2>: 0.64ns
ST_2: p_01_idx (23)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:334
.backedge:0  %p_01_idx = phi i64 [ %p_01_idx_be, %.backedge.backedge ], [ 0, %.backedge.preheader ]

ST_2: inlen_load (24)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:324
.backedge:1  %inlen_load = load i64* %inlen

ST_2: tmp_1 (25)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:317
.backedge:2  %tmp_1 = icmp eq i64 %inlen_load, 0

ST_2: StgValue_37 (26)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:317
.backedge:3  br i1 %tmp_1, label %.loopexit.loopexit, label %1

ST_2: StgValue_38 (121)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit

ST_2: StgValue_39 (123)  [1/1] 0.00ns
.loopexit:0  ret void


 <State 3>: 0.64ns
ST_3: md_curlen_read_1 (28)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:318
:0  %md_curlen_read_1 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_3: tmp_2 (29)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:318
:1  %tmp_2 = icmp eq i64 %md_curlen_read_1, 0


 <State 4>: 0.85ns
ST_4: tmp_3 (30)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:318
:2  %tmp_3 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %inlen_load, i32 7, i32 63)

ST_4: icmp (31)  [1/1] 0.80ns  loc: ed25519/src/sha512.cpp:318
:3  %icmp = icmp ne i57 %tmp_3, 0

ST_4: or_cond (32)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:318
:4  %or_cond = and i1 %tmp_2, %icmp

ST_4: StgValue_45 (33)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:318
:5  br i1 %or_cond, label %2, label %._crit_edge

ST_4: sum (108)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:334
:0  %sum = add i64 %p_01_idx, 32

ST_4: StgValue_47 (109)  [2/2] 0.00ns  loc: ed25519/src/sha512.cpp:319
:1  call fastcc void @sha512_compress_32([8 x i64]* nocapture %md_state, [64 x i8]* nocapture %in_r, i64 %sum)


 <State 5>: 1.54ns
ST_5: tmp_6 (35)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:326
._crit_edge:0  %tmp_6 = sub i64 128, %md_curlen_read_1

ST_5: tmp_7 (36)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:326
._crit_edge:1  %tmp_7 = icmp ult i64 %inlen_load, %tmp_6

ST_5: n (37)  [1/1] 0.08ns  loc: ed25519/src/sha512.cpp:326
._crit_edge:2  %n = select i1 %tmp_7, i64 %inlen_load, i64 %tmp_6

ST_5: StgValue_51 (38)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:328
._crit_edge:3  br label %3


 <State 6>: 0.82ns
ST_6: i (40)  [1/1] 0.00ns
:0  %i = phi i64 [ 0, %._crit_edge ], [ %i_1, %4 ]

ST_6: tmp_12 (41)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:328
:1  %tmp_12 = trunc i64 %i to i9

ST_6: tmp_13 (42)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:328
:2  %tmp_13 = trunc i64 %i to i8

ST_6: exitcond3 (43)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:328
:3  %exitcond3 = icmp eq i64 %i, %n

ST_6: i_1 (44)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:328
:4  %i_1 = add i64 1, %i

ST_6: StgValue_57 (45)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:328
:5  br i1 %exitcond3, label %5, label %4


 <State 7>: 0.82ns
ST_7: tmp1 (47)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:328
:0  %tmp1 = add i8 32, %tmp_13


 <State 8>: 1.50ns
ST_8: tmp_14 (48)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:334
:1  %tmp_14 = trunc i64 %p_01_idx to i8

ST_8: sum2 (49)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:328
:2  %sum2 = add i8 %tmp1, %tmp_14

ST_8: sum2_cast (50)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:328
:3  %sum2_cast = zext i8 %sum2 to i64

ST_8: in_addr (51)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:329
:4  %in_addr = getelementptr [64 x i8]* %in_r, i64 0, i64 %sum2_cast

ST_8: in_load (52)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:329
:5  %in_load = load i8* %in_addr, align 1


 <State 9>: 1.43ns
ST_9: in_load (52)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:329
:5  %in_load = load i8* %in_addr, align 1

ST_9: md_curlen_read_3 (53)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:329
:6  %md_curlen_read_3 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_9: tmp_15 (54)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:329
:7  %tmp_15 = trunc i64 %md_curlen_read_3 to i9

ST_9: tmp_5 (55)  [1/1] 0.86ns  loc: ed25519/src/sha512.cpp:329
:8  %tmp_5 = add i9 %tmp_15, %tmp_12

ST_9: tmp_5_cast (56)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:329
:9  %tmp_5_cast = zext i9 %tmp_5 to i64

ST_9: md_buf_addr (57)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:329
:10  %md_buf_addr = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_5_cast

ST_9: StgValue_70 (58)  [1/1] 0.57ns  loc: ed25519/src/sha512.cpp:329
:11  store i8 %in_load, i8* %md_buf_addr, align 1

ST_9: StgValue_71 (59)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:328
:12  br label %3


 <State 10>: 1.46ns
ST_10: md_curlen_read_2 (61)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:333
:0  %md_curlen_read_2 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_10: tmp_8 (62)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:333
:1  %tmp_8 = add i64 %md_curlen_read_2, %n

ST_10: StgValue_74 (63)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:333
:2  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_curlen, i64 %tmp_8)

ST_10: inlen_2 (64)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:335
:3  %inlen_2 = sub i64 %inlen_load, %n

ST_10: tmp_s (65)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:336
:4  %tmp_s = icmp eq i64 %tmp_8, 128

ST_10: StgValue_77 (66)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:336
:5  br i1 %tmp_s, label %.preheader5.preheader, label %._crit_edge7

ST_10: StgValue_78 (68)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:337
.preheader5.preheader:0  br label %.preheader5


 <State 11>: 0.82ns
ST_11: temp_index (70)  [1/1] 0.00ns
.preheader5:0  %temp_index = phi i8 [ %temp_index_2, %6 ], [ 0, %.preheader5.preheader ]

ST_11: exitcond2 (71)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:337
.preheader5:1  %exitcond2 = icmp eq i8 %temp_index, -128

ST_11: empty (72)  [1/1] 0.00ns
.preheader5:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_11: temp_index_2 (73)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:337
.preheader5:3  %temp_index_2 = add i8 %temp_index, 1

ST_11: StgValue_83 (74)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:337
.preheader5:4  br i1 %exitcond2, label %7, label %6

ST_11: tmp_9 (76)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:338
:0  %tmp_9 = zext i8 %temp_index to i64

ST_11: md_buf_addr_1 (77)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:338
:1  %md_buf_addr_1 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_9

ST_11: md_buf_load (78)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:338
:2  %md_buf_load = load i8* %md_buf_addr_1, align 1

ST_11: StgValue_87 (83)  [2/2] 0.00ns  loc: ed25519/src/sha512.cpp:340
:0  call fastcc void @sha512_compress_128([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %temp_buf)


 <State 12>: 1.14ns
ST_12: md_buf_load (78)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:338
:2  %md_buf_load = load i8* %md_buf_addr_1, align 1

ST_12: temp_buf_addr (79)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:338
:3  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_9

ST_12: StgValue_90 (80)  [1/1] 0.57ns  loc: ed25519/src/sha512.cpp:338
:4  store i8 %md_buf_load, i8* %temp_buf_addr, align 1

ST_12: StgValue_91 (81)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:337
:5  br label %.preheader5


 <State 13>: 0.43ns
ST_13: StgValue_92 (83)  [1/2] 0.00ns  loc: ed25519/src/sha512.cpp:340
:0  call fastcc void @sha512_compress_128([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %temp_buf)

ST_13: StgValue_93 (84)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:340
:1  br label %.preheader


 <State 14>: 0.82ns
ST_14: temp_index_1 (86)  [1/1] 0.00ns
.preheader:0  %temp_index_1 = phi i8 [ %temp_index_3, %8 ], [ 0, %7 ]

ST_14: exitcond (87)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:343
.preheader:1  %exitcond = icmp eq i8 %temp_index_1, -128

ST_14: empty_83 (88)  [1/1] 0.00ns
.preheader:2  %empty_83 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_14: temp_index_3 (89)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:343
.preheader:3  %temp_index_3 = add i8 %temp_index_1, 1

ST_14: StgValue_98 (90)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:343
.preheader:4  br i1 %exitcond, label %9, label %8

ST_14: tmp_11 (92)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:344
:0  %tmp_11 = zext i8 %temp_index_1 to i64

ST_14: temp_buf_addr_1 (93)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:344
:1  %temp_buf_addr_1 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_11

ST_14: temp_buf_load (94)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:344
:2  %temp_buf_load = load i8* %temp_buf_addr_1, align 1


 <State 15>: 1.14ns
ST_15: temp_buf_load (94)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:344
:2  %temp_buf_load = load i8* %temp_buf_addr_1, align 1

ST_15: md_buf_addr_2 (95)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:344
:3  %md_buf_addr_2 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_11

ST_15: StgValue_104 (96)  [1/1] 0.57ns  loc: ed25519/src/sha512.cpp:344
:4  store i8 %temp_buf_load, i8* %md_buf_addr_2, align 1

ST_15: StgValue_105 (97)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:343
:5  br label %.preheader


 <State 16>: 0.82ns
ST_16: md_length_read_1 (99)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:346
:0  %md_length_read_1 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_length)

ST_16: tmp_10 (100)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:346
:1  %tmp_10 = add i64 %md_length_read_1, 1024

ST_16: StgValue_108 (101)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:346
:2  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_length, i64 %tmp_10)

ST_16: StgValue_109 (102)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:347
:3  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_curlen, i64 0)

ST_16: StgValue_110 (103)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:348
:4  br label %._crit_edge7

ST_16: StgValue_111 (105)  [1/1] 0.41ns  loc: ed25519/src/sha512.cpp:335
._crit_edge7:0  store i64 %inlen_2, i64* %inlen

ST_16: StgValue_112 (106)  [1/1] 0.43ns
._crit_edge7:1  br label %.backedge.backedge


 <State 17>: 0.82ns
ST_17: StgValue_113 (109)  [1/2] 0.00ns  loc: ed25519/src/sha512.cpp:319
:1  call fastcc void @sha512_compress_32([8 x i64]* nocapture %md_state, [64 x i8]* nocapture %in_r, i64 %sum)

ST_17: md_length_read (110)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:322
:2  %md_length_read = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_length)

ST_17: tmp_4 (111)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:322
:3  %tmp_4 = add i64 %md_length_read, 1024

ST_17: StgValue_116 (112)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:322
:4  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_length, i64 %tmp_4)


 <State 18>: 1.23ns
ST_18: inlen_1 (113)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:324
:5  %inlen_1 = add i64 %inlen_load, -128

ST_18: StgValue_118 (114)  [1/1] 0.41ns  loc: ed25519/src/sha512.cpp:324
:6  store i64 %inlen_1, i64* %inlen

ST_18: StgValue_119 (115)  [1/1] 0.43ns  loc: ed25519/src/sha512.cpp:325
:7  br label %.backedge.backedge


 <State 19>: 0.82ns
ST_19: p_pn (117)  [1/1] 0.00ns (grouped into LUT with out node p_01_idx_be)
.backedge.backedge:0  %p_pn = phi i64 [ 128, %2 ], [ %n, %._crit_edge7 ]

ST_19: p_01_idx_be (118)  [1/1] 0.82ns  loc: ed25519/src/sha512.cpp:334 (out node of the LUT)
.backedge.backedge:1  %p_01_idx_be = add i64 %p_pn, %p_01_idx

ST_19: StgValue_122 (119)  [1/1] 0.00ns
.backedge.backedge:2  br label %.backedge



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.642ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:314) [15]  (0 ns)
	'icmp' operation ('tmp', ed25519/src/sha512.cpp:314) [16]  (0.642 ns)

 <State 2>: 0.642ns
The critical path consists of the following:
	'load' operation ('inlen_load', ed25519/src/sha512.cpp:324) on local variable 'inlen' [24]  (0 ns)
	'icmp' operation ('tmp_1', ed25519/src/sha512.cpp:317) [25]  (0.642 ns)

 <State 3>: 0.642ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:318) [28]  (0 ns)
	'icmp' operation ('tmp_2', ed25519/src/sha512.cpp:318) [29]  (0.642 ns)

 <State 4>: 0.85ns
The critical path consists of the following:
	'icmp' operation ('icmp', ed25519/src/sha512.cpp:318) [31]  (0.799 ns)
	'and' operation ('or_cond', ed25519/src/sha512.cpp:318) [32]  (0.051 ns)

 <State 5>: 1.54ns
The critical path consists of the following:
	'sub' operation ('tmp_6', ed25519/src/sha512.cpp:326) [35]  (0.82 ns)
	'icmp' operation ('tmp_7', ed25519/src/sha512.cpp:326) [36]  (0.642 ns)
	'select' operation ('n', ed25519/src/sha512.cpp:326) [37]  (0.081 ns)

 <State 6>: 0.82ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:328) [40]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:328) [44]  (0.82 ns)

 <State 7>: 0.825ns
The critical path consists of the following:
	'add' operation ('tmp1', ed25519/src/sha512.cpp:328) [47]  (0.825 ns)

 <State 8>: 1.5ns
The critical path consists of the following:
	'add' operation ('sum2', ed25519/src/sha512.cpp:328) [49]  (0.825 ns)
	'getelementptr' operation ('in_addr', ed25519/src/sha512.cpp:329) [51]  (0 ns)
	'load' operation ('in_load', ed25519/src/sha512.cpp:329) on array 'in_r' [52]  (0.677 ns)

 <State 9>: 1.43ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:329) [53]  (0 ns)
	'add' operation ('tmp_5', ed25519/src/sha512.cpp:329) [55]  (0.86 ns)
	'getelementptr' operation ('md_buf_addr', ed25519/src/sha512.cpp:329) [57]  (0 ns)
	'store' operation (ed25519/src/sha512.cpp:329) of variable 'in_load', ed25519/src/sha512.cpp:329 on array 'md_buf' [58]  (0.571 ns)

 <State 10>: 1.46ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:333) [61]  (0 ns)
	'add' operation ('tmp_8', ed25519/src/sha512.cpp:333) [62]  (0.82 ns)
	'icmp' operation ('tmp_s', ed25519/src/sha512.cpp:336) [65]  (0.642 ns)

 <State 11>: 0.825ns
The critical path consists of the following:
	'phi' operation ('temp_index') with incoming values : ('temp_index', ed25519/src/sha512.cpp:337) [70]  (0 ns)
	'add' operation ('temp_index', ed25519/src/sha512.cpp:337) [73]  (0.825 ns)

 <State 12>: 1.14ns
The critical path consists of the following:
	'load' operation ('md_buf_load', ed25519/src/sha512.cpp:338) on array 'md_buf' [78]  (0.571 ns)
	'store' operation (ed25519/src/sha512.cpp:338) of variable 'md_buf_load', ed25519/src/sha512.cpp:338 on array 'temp_buf', ed25519/src/sha512.cpp:310 [80]  (0.571 ns)

 <State 13>: 0.427ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('temp_index') with incoming values : ('temp_index', ed25519/src/sha512.cpp:343) [86]  (0.427 ns)

 <State 14>: 0.825ns
The critical path consists of the following:
	'phi' operation ('temp_index') with incoming values : ('temp_index', ed25519/src/sha512.cpp:343) [86]  (0 ns)
	'add' operation ('temp_index', ed25519/src/sha512.cpp:343) [89]  (0.825 ns)

 <State 15>: 1.14ns
The critical path consists of the following:
	'load' operation ('temp_buf_load', ed25519/src/sha512.cpp:344) on array 'temp_buf', ed25519/src/sha512.cpp:310 [94]  (0.571 ns)
	'store' operation (ed25519/src/sha512.cpp:344) of variable 'temp_buf_load', ed25519/src/sha512.cpp:344 on array 'md_buf' [96]  (0.571 ns)

 <State 16>: 0.82ns
The critical path consists of the following:
	wire read on port 'md_length' (ed25519/src/sha512.cpp:346) [99]  (0 ns)
	'add' operation ('tmp_10', ed25519/src/sha512.cpp:346) [100]  (0.82 ns)
	wire write on port 'md_length' (ed25519/src/sha512.cpp:346) [101]  (0 ns)

 <State 17>: 0.82ns
The critical path consists of the following:
	wire read on port 'md_length' (ed25519/src/sha512.cpp:322) [110]  (0 ns)
	'add' operation ('tmp_4', ed25519/src/sha512.cpp:322) [111]  (0.82 ns)

 <State 18>: 1.23ns
The critical path consists of the following:
	'add' operation ('inlen', ed25519/src/sha512.cpp:324) [113]  (0.82 ns)
	'store' operation (ed25519/src/sha512.cpp:324) of variable 'inlen', ed25519/src/sha512.cpp:324 on local variable 'inlen' [114]  (0.409 ns)

 <State 19>: 0.82ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', ed25519/src/sha512.cpp:326) [117]  (0 ns)
	'add' operation ('p_01_idx_be', ed25519/src/sha512.cpp:334) [118]  (0.82 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
