// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _p_memcpy_char_HH_
#define _p_memcpy_char_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct p_memcpy_char : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > dst_address0;
    sc_out< sc_logic > dst_ce0;
    sc_out< sc_logic > dst_we0;
    sc_out< sc_lv<8> > dst_d0;
    sc_out< sc_lv<5> > src_address0;
    sc_out< sc_logic > src_ce0;
    sc_in< sc_lv<8> > src_q0;


    // Module declarations
    p_memcpy_char(sc_module_name name);
    SC_HAS_PROCESS(p_memcpy_char);

    ~p_memcpy_char();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > i_27_fu_68_p2;
    sc_signal< sc_lv<6> > i_27_reg_82;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_fu_74_p1;
    sc_signal< sc_lv<64> > tmp_reg_87;
    sc_signal< sc_lv<1> > exitcond_fu_62_p2;
    sc_signal< sc_lv<6> > i_reg_51;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dst_address0();
    void thread_dst_ce0();
    void thread_dst_d0();
    void thread_dst_we0();
    void thread_exitcond_fu_62_p2();
    void thread_i_27_fu_68_p2();
    void thread_src_address0();
    void thread_src_ce0();
    void thread_tmp_fu_74_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
