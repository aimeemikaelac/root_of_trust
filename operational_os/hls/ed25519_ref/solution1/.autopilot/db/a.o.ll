; ModuleID = '/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/a.o.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.crypto_sign_ed25519_ref_ge25519 = type { %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519 }
%struct.crypto_sign_ed25519_ref_fe25519 = type { [32 x i32] }
%struct.ge25519_aff = type { %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519 }
%struct.sha512_context_ = type { i64, [8 x i64], i64, [128 x i8] }
%struct.crypto_sign_ed25519_ref_shortsc25519 = type { [16 x i32] }
%struct.ge25519_p1p1 = type { %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519 }
%struct.ge25519_p2 = type { %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519, %struct.crypto_sign_ed25519_ref_fe25519 }

@.str = private unnamed_addr constant [10 x i8] c"s_axilite\00", align 1 ; [#uses=1 type=[10 x i8]*]
@.str1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=1 type=[1 x i8]*]
@.str2 = private unnamed_addr constant [6 x i8] c"m_axi\00", align 1 ; [#uses=1 type=[6 x i8]*]
@.str3 = private unnamed_addr constant [17 x i8] c"sha512_update_32\00", align 1 ; [#uses=1 type=[17 x i8]*]
@.str4 = private unnamed_addr constant [18 x i8] c"sha512_update_128\00", align 1 ; [#uses=1 type=[18 x i8]*]
@.str5 = private unnamed_addr constant [13 x i8] c"sha512_final\00", align 1 ; [#uses=1 type=[13 x i8]*]
@.str6 = private unnamed_addr constant [12 x i8] c"sha512_init\00", align 1 ; [#uses=1 type=[12 x i8]*]
@.str7 = private unnamed_addr constant [9 x i8] c"_memmove\00", align 1 ; [#uses=1 type=[9 x i8]*]
@.str8 = private unnamed_addr constant [4 x i8] c"mul\00", align 1 ; [#uses=1 type=[4 x i8]*]
@.str19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=1 type=[1 x i8]*]
@.str210 = private unnamed_addr constant [4 x i8] c"add\00", align 1 ; [#uses=1 type=[4 x i8]*]
@.str311 = private unnamed_addr constant [4 x i8] c"shl\00", align 1 ; [#uses=1 type=[4 x i8]*]
@.str412 = private unnamed_addr constant [5 x i8] c"ashr\00", align 1 ; [#uses=1 type=[5 x i8]*]
@.str513 = private unnamed_addr constant [5 x i8] c"lshr\00", align 1 ; [#uses=1 type=[5 x i8]*]
@.str614 = private unnamed_addr constant [5 x i8] c"icmp\00", align 1 ; [#uses=1 type=[5 x i8]*]
@.str715 = private unnamed_addr constant [4 x i8] c"sub\00", align 1 ; [#uses=1 type=[4 x i8]*]
@.str816 = private unnamed_addr constant [20 x i8] c"sha512_compress_128\00", align 1 ; [#uses=1 type=[20 x i8]*]
@K = internal constant [80 x i64] [i64 4794697086780616226, i64 8158064640168781261, i64 -5349999486874862801, i64 -1606136188198331460, i64 4131703408338449720, i64 6480981068601479193, i64 -7908458776815382629, i64 -6116909921290321640, i64 -2880145864133508542, i64 1334009975649890238, i64 2608012711638119052, i64 6128411473006802146, i64 8268148722764581231, i64 -9160688886553864527, i64 -7215885187991268811, i64 -4495734319001033068, i64 -1973867731355612462, i64 -1171420211273849373, i64 1135362057144423861, i64 2597628984639134821, i64 3308224258029322869, i64 5365058923640841347, i64 6679025012923562964, i64 8573033837759648693, i64 -7476448914759557205, i64 -6327057829258317296, i64 -5763719355590565569, i64 -4658551843659510044, i64 -4116276920077217854, i64 -3051310485924567259, i64 489312712824947311, i64 1452737877330783856, i64 2861767655752347644, i64 3322285676063803686, i64 5560940570517711597, i64 5996557281743188959, i64 7280758554555802590, i64 8532644243296465576, i64 -9096487096722542874, i64 -7894198246740708037, i64 -6719396339535248540, i64 -6333637450476146687, i64 -4446306890439682159, i64 -4076793802049405392, i64 -3345356375505022440, i64 -2983346525034927856, i64 -860691631967231958, i64 1182934255886127544, i64 1847814050463011016, i64 2177327727835720531, i64 2830643537854262169, i64 3796741975233480872, i64 4115178125766777443, i64 5681478168544905931, i64 6601373596472566643, i64 7507060721942968483, i64 8399075790359081724, i64 8693463985226723168, i64 -8878714635349349518, i64 -8302665154208450068, i64 -8016688836872298968, i64 -6606660893046293015, i64 -4685533653050689259, i64 -4147400797238176981, i64 -3880063495543823972, i64 -3348786107499101689, i64 -1523767162380948706, i64 -757361751448694408, i64 500013540394364858, i64 748580250866718886, i64 1242879168328830382, i64 1977374033974150939, i64 2944078676154940804, i64 3659926193048069267, i64 4368137639120453308, i64 4836135668995329356, i64 5532061633213252278, i64 6448918945643986474, i64 6902733635092675308, i64 7801388544844847127], align 16 ; [#uses=16 type=[80 x i64]*]
@m = internal constant [32 x i32] [i32 237, i32 211, i32 245, i32 92, i32 26, i32 99, i32 18, i32 88, i32 214, i32 156, i32 247, i32 162, i32 222, i32 249, i32 222, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16], align 16 ; [#uses=2 type=[32 x i32]*]
@mu = internal constant [33 x i32] [i32 27, i32 19, i32 44, i32 10, i32 163, i32 229, i32 156, i32 237, i32 167, i32 41, i32 99, i32 8, i32 93, i32 33, i32 6, i32 33, i32 235, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 15], align 16 ; [#uses=1 type=[33 x i32]*]
@crypto_sign_ed25519_ref_ge25519_base = constant %struct.crypto_sign_ed25519_ref_ge25519 { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 213, i32 37, i32 143, i32 96, i32 45, i32 86, i32 201, i32 178, i32 167, i32 37, i32 149, i32 96, i32 199, i32 44, i32 105, i32 92, i32 220, i32 214, i32 253, i32 49, i32 226, i32 164, i32 192, i32 254, i32 83, i32 110, i32 205, i32 211, i32 54, i32 105, i32 33] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 88, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 163, i32 221, i32 183, i32 165, i32 179, i32 138, i32 222, i32 109, i32 245, i32 82, i32 81, i32 119, i32 128, i32 159, i32 240, i32 32, i32 125, i32 227, i32 171, i32 100, i32 142, i32 78, i32 234, i32 102, i32 101, i32 118, i32 139, i32 215, i32 15, i32 95, i32 135, i32 103] } }, align 4 ; [#uses=0 type=%struct.crypto_sign_ed25519_ref_ge25519*]
@ge25519_ecd = internal constant %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 163, i32 120, i32 89, i32 19, i32 202, i32 77, i32 235, i32 117, i32 171, i32 216, i32 65, i32 65, i32 77, i32 10, i32 112, i32 0, i32 152, i32 232, i32 121, i32 119, i32 121, i32 64, i32 199, i32 140, i32 115, i32 254, i32 111, i32 43, i32 238, i32 108, i32 3, i32 82] }, align 4 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*]
@ge25519_sqrtm1 = internal constant %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 176, i32 160, i32 14, i32 74, i32 39, i32 27, i32 238, i32 196, i32 120, i32 228, i32 47, i32 173, i32 6, i32 24, i32 67, i32 47, i32 167, i32 215, i32 251, i32 61, i32 153, i32 0, i32 77, i32 43, i32 11, i32 223, i32 193, i32 79, i32 128, i32 36, i32 131, i32 43] }, align 4 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*]
@ge25519_ec2d = internal constant %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 89, i32 241, i32 178, i32 38, i32 148, i32 155, i32 214, i32 235, i32 86, i32 177, i32 131, i32 130, i32 154, i32 20, i32 224, i32 0, i32 48, i32 209, i32 243, i32 238, i32 242, i32 128, i32 142, i32 25, i32 231, i32 252, i32 223, i32 86, i32 220, i32 217, i32 6, i32 36] }, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
@ge25519_base_multiples_affine = internal constant [425 x %struct.ge25519_aff] [%struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 213, i32 37, i32 143, i32 96, i32 45, i32 86, i32 201, i32 178, i32 167, i32 37, i32 149, i32 96, i32 199, i32 44, i32 105, i32 92, i32 220, i32 214, i32 253, i32 49, i32 226, i32 164, i32 192, i32 254, i32 83, i32 110, i32 205, i32 211, i32 54, i32 105, i32 33] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 88, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 14, i32 206, i32 67, i32 40, i32 78, i32 161, i32 197, i32 131, i32 95, i32 164, i32 215, i32 21, i32 69, i32 142, i32 13, i32 8, i32 172, i32 231, i32 51, i32 24, i32 125, i32 59, i32 4, i32 61, i32 108, i32 4, i32 90, i32 159, i32 76, i32 56, i32 171, i32 54] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 201, i32 163, i32 248, i32 106, i32 174, i32 70, i32 95, i32 14, i32 86, i32 81, i32 56, i32 100, i32 81, i32 15, i32 57, i32 151, i32 86, i32 31, i32 162, i32 201, i32 232, i32 94, i32 162, i32 29, i32 194, i32 41, i32 35, i32 9, i32 243, i32 205, i32 96, i32 34] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 92, i32 226, i32 248, i32 211, i32 95, i32 72, i32 98, i32 172, i32 134, i32 72, i32 98, i32 129, i32 25, i32 152, i32 67, i32 99, i32 58, i32 200, i32 218, i32 62, i32 116, i32 174, i32 244, i32 31, i32 73, i32 143, i32 146, i32 34, i32 74, i32 156, i32 174, i32 103] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 212, i32 180, i32 245, i32 120, i32 72, i32 104, i32 195, i32 2, i32 4, i32 3, i32 36, i32 103, i32 23, i32 236, i32 22, i32 159, i32 247, i32 158, i32 38, i32 96, i32 142, i32 161, i32 38, i32 161, i32 171, i32 105, i32 238, i32 119, i32 209, i32 177, i32 103, i32 18] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 112, i32 248, i32 201, i32 196, i32 87, i32 166, i32 58, i32 73, i32 71, i32 21, i32 206, i32 147, i32 193, i32 158, i32 115, i32 26, i32 249, i32 32, i32 53, i32 122, i32 184, i32 212, i32 37, i32 131, i32 70, i32 241, i32 207, i32 86, i32 219, i32 168, i32 61, i32 32] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 47, i32 17, i32 50, i32 202, i32 97, i32 171, i32 56, i32 223, i32 240, i32 15, i32 47, i32 234, i32 50, i32 40, i32 242, i32 76, i32 108, i32 113, i32 213, i32 128, i32 133, i32 184, i32 14, i32 71, i32 225, i32 149, i32 21, i32 203, i32 39, i32 232, i32 208, i32 71] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 200, i32 132, i32 165, i32 8, i32 188, i32 253, i32 135, i32 59, i32 153, i32 139, i32 105, i32 128, i32 123, i32 198, i32 58, i32 235, i32 147, i32 207, i32 78, i32 248, i32 92, i32 45, i32 134, i32 66, i32 182, i32 113, i32 215, i32 151, i32 95, i32 225, i32 66, i32 103] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 180, i32 185, i32 55, i32 252, i32 169, i32 91, i32 47, i32 30, i32 147, i32 228, i32 30, i32 98, i32 252, i32 60, i32 120, i32 129, i32 143, i32 243, i32 138, i32 102, i32 9, i32 111, i32 173, i32 110, i32 121, i32 115, i32 229, i32 201, i32 0, i32 6, i32 211, i32 33] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 248, i32 249, i32 40, i32 108, i32 109, i32 89, i32 178, i32 89, i32 116, i32 35, i32 191, i32 231, i32 51, i32 141, i32 87, i32 9, i32 145, i32 156, i32 36, i32 8, i32 21, i32 43, i32 226, i32 184, i32 238, i32 58, i32 229, i32 39, i32 6, i32 134, i32 164, i32 35] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 235, i32 39, i32 103, i32 193, i32 55, i32 171, i32 122, i32 216, i32 39, i32 156, i32 7, i32 142, i32 255, i32 17, i32 106, i32 176, i32 120, i32 110, i32 173, i32 58, i32 46, i32 15, i32 152, i32 159, i32 114, i32 195, i32 127, i32 130, i32 242, i32 150, i32 150, i32 112] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 129, i32 107, i32 136, i32 232, i32 30, i32 199, i32 119, i32 150, i32 14, i32 161, i32 169, i32 82, i32 224, i32 216, i32 14, i32 97, i32 158, i32 121, i32 45, i32 149, i32 156, i32 141, i32 150, i32 224, i32 6, i32 64, i32 93, i32 135, i32 40, i32 95, i32 152, i32 112] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 241, i32 121, i32 123, i32 237, i32 79, i32 68, i32 178, i32 231, i32 8, i32 13, i32 194, i32 8, i32 18, i32 210, i32 159, i32 223, i32 205, i32 147, i32 32, i32 138, i32 207, i32 51, i32 202, i32 109, i32 137, i32 185, i32 119, i32 200, i32 147, i32 27, i32 78, i32 96] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 79, i32 126, i32 151, i32 246, i32 64, i32 221, i32 79, i32 252, i32 82, i32 120, i32 249, i32 144, i32 49, i32 3, i32 230, i32 125, i32 86, i32 57, i32 11, i32 29, i32 86, i32 130, i32 133, i32 249, i32 26, i32 66, i32 23, i32 105, i32 108, i32 207, i32 57] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 105, i32 210, i32 6, i32 58, i32 79, i32 57, i32 45, i32 249, i32 56, i32 64, i32 140, i32 76, i32 231, i32 5, i32 18, i32 180, i32 120, i32 139, i32 248, i32 192, i32 236, i32 147, i32 222, i32 122, i32 107, i32 206, i32 44, i32 225, i32 14, i32 169, i32 52, i32 68] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 11, i32 164, i32 60, i32 176, i32 15, i32 122, i32 81, i32 241, i32 120, i32 214, i32 217, i32 106, i32 253, i32 70, i32 232, i32 184, i32 168, i32 121, i32 29, i32 135, i32 249, i32 144, i32 242, i32 156, i32 19, i32 41, i32 248, i32 11, i32 32, i32 100, i32 250, i32 5] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 9, i32 218, i32 23, i32 175, i32 149, i32 214, i32 251, i32 106, i32 25, i32 13, i32 110, i32 94, i32 18, i32 241, i32 153, i32 76, i32 170, i32 168, i32 111, i32 121, i32 134, i32 244, i32 114, i32 40, i32 0, i32 38, i32 249, i32 234, i32 158, i32 25, i32 61] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 135, i32 221, i32 207, i32 240, i32 91, i32 73, i32 162, i32 93, i32 64, i32 122, i32 35, i32 38, i32 164, i32 122, i32 131, i32 138, i32 183, i32 139, i32 210, i32 26, i32 191, i32 234, i32 2, i32 36, i32 8, i32 95, i32 123, i32 169, i32 177, i32 190, i32 157, i32 55] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 252, i32 134, i32 75, i32 8, i32 238, i32 231, i32 160, i32 253, i32 33, i32 69, i32 9, i32 52, i32 193, i32 97, i32 50, i32 35, i32 252, i32 155, i32 85, i32 72, i32 83, i32 153, i32 247, i32 99, i32 208, i32 153, i32 206, i32 1, i32 224, i32 159, i32 235, i32 40] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 71, i32 252, i32 171, i32 90, i32 23, i32 240, i32 133, i32 86, i32 58, i32 48, i32 134, i32 32, i32 40, i32 75, i32 142, i32 68, i32 116, i32 58, i32 110, i32 2, i32 241, i32 50, i32 143, i32 159, i32 63, i32 8, i32 53, i32 233, i32 202, i32 22, i32 95, i32 110] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 28, i32 89, i32 28, i32 101, i32 93, i32 52, i32 164, i32 9, i32 205, i32 19, i32 156, i32 112, i32 125, i32 177, i32 42, i32 197, i32 136, i32 175, i32 11, i32 96, i32 199, i32 159, i32 52, i32 141, i32 214, i32 183, i32 127, i32 234, i32 120, i32 101, i32 141, i32 119] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 86, i32 165, i32 194, i32 12, i32 221, i32 188, i32 184, i32 32, i32 109, i32 87, i32 97, i32 181, i32 251, i32 120, i32 181, i32 212, i32 73, i32 84, i32 144, i32 38, i32 193, i32 203, i32 233, i32 230, i32 191, i32 236, i32 29, i32 78, i32 237, i32 7, i32 126, i32 94] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 199, i32 246, i32 108, i32 86, i32 49, i32 32, i32 20, i32 14, i32 168, i32 217, i32 39, i32 193, i32 154, i32 61, i32 27, i32 125, i32 14, i32 38, i32 211, i32 129, i32 170, i32 235, i32 245, i32 107, i32 121, i32 2, i32 241, i32 81, i32 92, i32 117, i32 85, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 10, i32 52, i32 205, i32 130, i32 60, i32 51, i32 9, i32 84, i32 210, i32 97, i32 57, i32 48, i32 155, i32 253, i32 239, i32 33, i32 38, i32 212, i32 112, i32 250, i32 238, i32 249, i32 49, i32 51, i32 115, i32 132, i32 208, i32 179, i32 129, i32 191, i32 236, i32 46] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 232, i32 147, i32 139, i32 0, i32 100, i32 247, i32 156, i32 184, i32 116, i32 224, i32 230, i32 73, i32 72, i32 77, i32 77, i32 72, i32 182, i32 25, i32 161, i32 64, i32 183, i32 217, i32 50, i32 65, i32 124, i32 130, i32 55, i32 161, i32 45, i32 220, i32 210, i32 84] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 104, i32 43, i32 74, i32 91, i32 213, i32 199, i32 81, i32 145, i32 29, i32 225, i32 42, i32 75, i32 196, i32 71, i32 241, i32 188, i32 122, i32 179, i32 203, i32 200, i32 182, i32 124, i32 172, i32 144, i32 5, i32 253, i32 243, i32 249, i32 82, i32 58, i32 17, i32 107] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 61, i32 193, i32 39, i32 243, i32 89, i32 67, i32 149, i32 144, i32 197, i32 150, i32 121, i32 245, i32 244, i32 149, i32 101, i32 41, i32 6, i32 156, i32 81, i32 5, i32 24, i32 218, i32 184, i32 46, i32 121, i32 126, i32 105, i32 89, i32 113, i32 1, i32 235, i32 26] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 21, i32 6, i32 73, i32 182, i32 138, i32 60, i32 234, i32 47, i32 52, i32 32, i32 20, i32 195, i32 170, i32 214, i32 175, i32 44, i32 62, i32 189, i32 101, i32 32, i32 226, i32 77, i32 75, i32 59, i32 235, i32 159, i32 74, i32 195, i32 173, i32 164, i32 59, i32 96] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 188, i32 88, i32 230, i32 192, i32 149, i32 42, i32 42, i32 129, i32 154, i32 122, i32 243, i32 210, i32 6, i32 190, i32 72, i32 188, i32 12, i32 197, i32 70, i32 224, i32 106, i32 212, i32 172, i32 15, i32 217, i32 204, i32 130, i32 52, i32 44, i32 175, i32 219, i32 31] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 247, i32 23, i32 19, i32 189, i32 251, i32 188, i32 210, i32 236, i32 69, i32 179, i32 21, i32 49, i32 233, i32 175, i32 130, i32 132, i32 61, i32 40, i32 198, i32 252, i32 17, i32 245, i32 65, i32 181, i32 139, i32 211, i32 18, i32 118, i32 82, i32 231, i32 26, i32 60] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 78, i32 54, i32 17, i32 7, i32 162, i32 21, i32 32, i32 81, i32 196, i32 42, i32 195, i32 98, i32 139, i32 94, i32 127, i32 166, i32 15, i32 249, i32 69, i32 133, i32 108, i32 17, i32 134, i32 183, i32 126, i32 229, i32 215, i32 249, i32 195, i32 145, i32 28, i32 5] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 234, i32 214, i32 222, i32 41, i32 58, i32 0, i32 185, i32 2, i32 89, i32 203, i32 38, i32 196, i32 186, i32 153, i32 177, i32 151, i32 47, i32 142, i32 0, i32 146, i32 38, i32 79, i32 82, i32 235, i32 71, i32 27, i32 137, i32 139, i32 36, i32 192, i32 19, i32 125] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 213, i32 32, i32 91, i32 128, i32 166, i32 128, i32 32, i32 149, i32 195, i32 233, i32 159, i32 142, i32 135, i32 158, i32 30, i32 158, i32 122, i32 199, i32 204, i32 117, i32 108, i32 165, i32 241, i32 145, i32 26, i32 168, i32 1, i32 44, i32 171, i32 118, i32 169, i32 89] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 222, i32 201, i32 177, i32 49, i32 16, i32 22, i32 170, i32 53, i32 20, i32 106, i32 212, i32 181, i32 52, i32 130, i32 113, i32 210, i32 74, i32 93, i32 154, i32 31, i32 83, i32 38, i32 60, i32 229, i32 142, i32 141, i32 51, i32 127, i32 255, i32 169, i32 213, i32 23] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 137, i32 175, i32 246, i32 164, i32 100, i32 213, i32 16, i32 224, i32 29, i32 173, i32 239, i32 68, i32 189, i32 218, i32 131, i32 172, i32 122, i32 168, i32 240, i32 28, i32 7, i32 249, i32 195, i32 67, i32 108, i32 63, i32 183, i32 211, i32 135, i32 34, i32 2, i32 115] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 100, i32 29, i32 73, i32 19, i32 47, i32 113, i32 236, i32 105, i32 135, i32 208, i32 66, i32 238, i32 19, i32 236, i32 227, i32 237, i32 86, i32 123, i32 191, i32 189, i32 140, i32 47, i32 125, i32 123, i32 157, i32 40, i32 236, i32 142, i32 118, i32 47, i32 111, i32 8] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 34, i32 245, i32 95, i32 77, i32 21, i32 239, i32 252, i32 78, i32 87, i32 3, i32 54, i32 137, i32 240, i32 235, i32 91, i32 145, i32 214, i32 226, i32 202, i32 1, i32 165, i32 238, i32 82, i32 236, i32 160, i32 60, i32 143, i32 51, i32 144, i32 90, i32 148, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 138, i32 75, i32 231, i32 56, i32 188, i32 218, i32 194, i32 176, i32 133, i32 225, i32 74, i32 254, i32 45, i32 68, i32 132, i32 203, i32 32, i32 107, i32 45, i32 191, i32 17, i32 156, i32 215, i32 190, i32 211, i32 62, i32 95, i32 191, i32 104, i32 188, i32 168, i32 7] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 137, i32 40, i32 34, i32 106, i32 120, i32 170, i32 41, i32 3, i32 200, i32 116, i32 149, i32 3, i32 62, i32 220, i32 189, i32 7, i32 19, i32 168, i32 162, i32 32, i32 45, i32 179, i32 24, i32 112, i32 66, i32 253, i32 122, i32 196, i32 215, i32 73, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 255, i32 50, i32 43, i32 92, i32 147, i32 84, i32 50, i32 232, i32 87, i32 84, i32 26, i32 139, i32 51, i32 96, i32 101, i32 211, i32 103, i32 164, i32 193, i32 38, i32 196, i32 164, i32 52, i32 31, i32 155, i32 167, i32 169, i32 244, i32 217, i32 79, i32 91] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 70, i32 141, i32 176, i32 51, i32 84, i32 38, i32 91, i32 104, i32 223, i32 187, i32 197, i32 236, i32 194, i32 249, i32 60, i32 90, i32 55, i32 193, i32 142, i32 39, i32 71, i32 170, i32 73, i32 90, i32 248, i32 251, i32 104, i32 4, i32 35, i32 209, i32 235, i32 64] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 165, i32 17, i32 132, i32 138, i32 103, i32 157, i32 158, i32 209, i32 68, i32 104, i32 122, i32 52, i32 225, i32 159, i32 163, i32 84, i32 205, i32 7, i32 202, i32 121, i32 31, i32 84, i32 47, i32 19, i32 112, i32 78, i32 238, i32 162, i32 250, i32 231, i32 93] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 54, i32 236, i32 84, i32 248, i32 206, i32 228, i32 133, i32 223, i32 246, i32 111, i32 29, i32 144, i32 8, i32 188, i32 232, i32 192, i32 146, i32 45, i32 67, i32 107, i32 146, i32 169, i32 142, i32 171, i32 10, i32 46, i32 28, i32 30, i32 100, i32 35, i32 159, i32 44] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 167, i32 214, i32 46, i32 213, i32 204, i32 212, i32 203, i32 90, i32 59, i32 167, i32 249, i32 70, i32 3, i32 29, i32 173, i32 43, i32 52, i32 49, i32 144, i32 0, i32 70, i32 8, i32 130, i32 20, i32 196, i32 224, i32 156, i32 240, i32 227, i32 85, i32 67, i32 49] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 96, i32 214, i32 221, i32 120, i32 230, i32 212, i32 34, i32 66, i32 31, i32 0, i32 249, i32 177, i32 106, i32 99, i32 226, i32 146, i32 89, i32 209, i32 26, i32 183, i32 0, i32 84, i32 41, i32 201, i32 193, i32 246, i32 111, i32 122, i32 197, i32 60, i32 95, i32 101] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 39, i32 79, i32 208, i32 114, i32 177, i32 17, i32 20, i32 39, i32 21, i32 148, i32 72, i32 129, i32 126, i32 116, i32 216, i32 50, i32 213, i32 209, i32 17, i32 40, i32 96, i32 99, i32 54, i32 50, i32 55, i32 181, i32 19, i32 28, i32 160, i32 55, i32 227, i32 116] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 241, i32 37, i32 78, i32 17, i32 150, i32 103, i32 230, i32 28, i32 194, i32 178, i32 83, i32 226, i32 218, i32 133, i32 238, i32 178, i32 159, i32 89, i32 243, i32 186, i32 189, i32 250, i32 207, i32 110, i32 249, i32 218, i32 164, i32 179, i32 2, i32 143, i32 100, i32 8] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 52, i32 148, i32 242, i32 100, i32 84, i32 71, i32 55, i32 7, i32 64, i32 138, i32 32, i32 186, i32 74, i32 85, i32 215, i32 63, i32 71, i32 186, i32 37, i32 35, i32 20, i32 176, i32 44, i32 232, i32 85, i32 168, i32 166, i32 239, i32 81, i32 189, i32 111, i32 106] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 113, i32 214, i32 22, i32 118, i32 178, i32 6, i32 234, i32 121, i32 245, i32 196, i32 195, i32 82, i32 126, i32 97, i32 209, i32 225, i32 173, i32 112, i32 120, i32 29, i32 22, i32 17, i32 248, i32 124, i32 43, i32 252, i32 85, i32 159, i32 82, i32 248, i32 245, i32 22] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 52, i32 150, i32 154, i32 246, i32 197, i32 224, i32 20, i32 3, i32 36, i32 14, i32 76, i32 173, i32 158, i32 154, i32 112, i32 35, i32 150, i32 178, i32 241, i32 46, i32 157, i32 195, i32 50, i32 155, i32 84, i32 165, i32 115, i32 222, i32 136, i32 177, i32 62, i32 36] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 246, i32 226, i32 76, i32 31, i32 91, i32 178, i32 175, i32 130, i32 165, i32 207, i32 129, i32 16, i32 4, i32 239, i32 219, i32 162, i32 204, i32 36, i32 178, i32 126, i32 11, i32 122, i32 235, i32 1, i32 216, i32 82, i32 244, i32 81, i32 137, i32 41, i32 121, i32 55] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 116, i32 222, i32 18, i32 243, i32 104, i32 183, i32 102, i32 195, i32 238, i32 104, i32 220, i32 129, i32 181, i32 85, i32 153, i32 171, i32 217, i32 40, i32 99, i32 109, i32 139, i32 64, i32 105, i32 117, i32 108, i32 205, i32 92, i32 42, i32 126, i32 50, i32 123, i32 41] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 204, i32 34, i32 116, i32 77, i32 25, i32 7, i32 192, i32 218, i32 181, i32 118, i32 81, i32 42, i32 170, i32 166, i32 10, i32 95, i32 38, i32 212, i32 188, i32 175, i32 72, i32 136, i32 127, i32 2, i32 188, i32 242, i32 225, i32 207, i32 233, i32 221, i32 21] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 237, i32 181, i32 154, i32 140, i32 154, i32 221, i32 39, i32 244, i32 127, i32 71, i32 217, i32 82, i32 167, i32 205, i32 101, i32 165, i32 49, i32 34, i32 237, i32 166, i32 99, i32 91, i32 128, i32 74, i32 173, i32 77, i32 237, i32 191, i32 238, i32 73, i32 179, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 248, i32 100, i32 139, i32 96, i32 144, i32 233, i32 222, i32 68, i32 119, i32 185, i32 7, i32 54, i32 50, i32 194, i32 80, i32 245, i32 101, i32 223, i32 72, i32 76, i32 55, i32 170, i32 104, i32 171, i32 154, i32 31, i32 62, i32 255, i32 137, i32 146, i32 160, i32 7] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 125, i32 79, i32 156, i32 25, i32 192, i32 74, i32 49, i32 236, i32 249, i32 170, i32 235, i32 178, i32 22, i32 156, i32 163, i32 102, i32 95, i32 209, i32 212, i32 237, i32 184, i32 146, i32 28, i32 171, i32 218, i32 234, i32 217, i32 87, i32 223, i32 76, i32 42, i32 72] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 75, i32 176, i32 78, i32 110, i32 17, i32 59, i32 81, i32 189, i32 106, i32 253, i32 228, i32 37, i32 165, i32 95, i32 17, i32 63, i32 152, i32 146, i32 81, i32 20, i32 198, i32 95, i32 60, i32 11, i32 168, i32 247, i32 194, i32 129, i32 67, i32 222, i32 145, i32 115] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 60, i32 143, i32 159, i32 51, i32 42, i32 31, i32 67, i32 51, i32 143, i32 104, i32 255, i32 31, i32 61, i32 115, i32 107, i32 191, i32 104, i32 204, i32 125, i32 19, i32 108, i32 36, i32 75, i32 204, i32 77, i32 36, i32 13, i32 254, i32 222, i32 134, i32 173, i32 59] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 121, i32 81, i32 129, i32 1, i32 220, i32 115, i32 83, i32 224, i32 110, i32 155, i32 234, i32 104, i32 63, i32 92, i32 20, i32 132, i32 83, i32 141, i32 75, i32 192, i32 159, i32 159, i32 137, i32 43, i32 140, i32 186, i32 134, i32 250, i32 242, i32 205, i32 227, i32 45] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 6, i32 249, i32 41, i32 90, i32 219, i32 61, i32 132, i32 82, i32 171, i32 204, i32 107, i32 96, i32 157, i32 183, i32 74, i32 14, i32 54, i32 99, i32 145, i32 173, i32 160, i32 149, i32 176, i32 151, i32 137, i32 78, i32 207, i32 125, i32 60, i32 229, i32 124, i32 40] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 46, i32 105, i32 152, i32 253, i32 198, i32 189, i32 204, i32 202, i32 223, i32 154, i32 68, i32 126, i32 157, i32 202, i32 137, i32 109, i32 191, i32 39, i32 194, i32 248, i32 205, i32 70, i32 0, i32 43, i32 181, i32 88, i32 78, i32 183, i32 137, i32 9, i32 233, i32 45] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 84, i32 190, i32 117, i32 203, i32 5, i32 176, i32 84, i32 183, i32 231, i32 38, i32 134, i32 74, i32 252, i32 25, i32 207, i32 39, i32 70, i32 212, i32 34, i32 150, i32 90, i32 17, i32 232, i32 213, i32 27, i32 237, i32 113, i32 197, i32 93, i32 200, i32 175, i32 69] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 64, i32 123, i32 119, i32 87, i32 73, i32 158, i32 128, i32 57, i32 35, i32 238, i32 129, i32 11, i32 34, i32 207, i32 219, i32 122, i32 47, i32 20, i32 184, i32 87, i32 143, i32 161, i32 57, i32 30, i32 119, i32 252, i32 11, i32 166, i32 191, i32 138, i32 12, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 119, i32 58, i32 212, i32 216, i32 39, i32 207, i32 232, i32 161, i32 114, i32 157, i32 202, i32 221, i32 13, i32 150, i32 218, i32 121, i32 237, i32 86, i32 66, i32 21, i32 96, i32 199, i32 28, i32 107, i32 38, i32 48, i32 246, i32 106, i32 149, i32 103, i32 243, i32 10] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 197, i32 8, i32 164, i32 43, i32 47, i32 189, i32 49, i32 129, i32 42, i32 166, i32 182, i32 228, i32 0, i32 145, i32 218, i32 61, i32 178, i32 176, i32 150, i32 206, i32 138, i32 210, i32 141, i32 112, i32 179, i32 211, i32 52, i32 1, i32 144, i32 141, i32 16, i32 33] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 13, i32 231, i32 186, i32 79, i32 7, i32 223, i32 141, i32 234, i32 125, i32 160, i32 197, i32 214, i32 177, i32 176, i32 229, i32 87, i32 27, i32 91, i32 245, i32 69, i32 19, i32 20, i32 100, i32 90, i32 235, i32 92, i32 252, i32 84, i32 1, i32 118, i32 43] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 12, i32 194, i32 175, i32 150, i32 54, i32 254, i32 74, i32 226, i32 84, i32 32, i32 106, i32 235, i32 178, i32 159, i32 98, i32 215, i32 206, i32 162, i32 63, i32 32, i32 17, i32 52, i32 55, i32 224, i32 66, i32 237, i32 111, i32 249, i32 26, i32 200, i32 125] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 216, i32 185, i32 17, i32 232, i32 54, i32 63, i32 66, i32 193, i32 202, i32 220, i32 211, i32 241, i32 200, i32 35, i32 61, i32 79, i32 81, i32 123, i32 157, i32 141, i32 216, i32 228, i32 160, i32 170, i32 243, i32 4, i32 214, i32 17, i32 147, i32 200, i32 53, i32 69] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 97, i32 54, i32 214, i32 8, i32 144, i32 191, i32 167, i32 122, i32 151, i32 108, i32 15, i32 132, i32 213, i32 51, i32 45, i32 55, i32 201, i32 106, i32 128, i32 144, i32 61, i32 10, i32 162, i32 170, i32 225, i32 184, i32 132, i32 186, i32 97, i32 54, i32 221, i32 105] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 107, i32 219, i32 91, i32 156, i32 198, i32 146, i32 188, i32 35, i32 175, i32 197, i32 184, i32 117, i32 248, i32 66, i32 250, i32 214, i32 182, i32 132, i32 148, i32 99, i32 152, i32 147, i32 72, i32 120, i32 56, i32 205, i32 187, i32 24, i32 52, i32 195, i32 219, i32 103] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 150, i32 243, i32 58, i32 9, i32 86, i32 176, i32 111, i32 124, i32 81, i32 30, i32 27, i32 57, i32 72, i32 234, i32 201, i32 12, i32 37, i32 162, i32 122, i32 202, i32 231, i32 146, i32 252, i32 89, i32 48, i32 163, i32 137, i32 133, i32 223, i32 111, i32 67, i32 56] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 121, i32 132, i32 68, i32 25, i32 189, i32 233, i32 84, i32 196, i32 192, i32 110, i32 42, i32 168, i32 168, i32 155, i32 67, i32 213, i32 113, i32 34, i32 95, i32 220, i32 1, i32 250, i32 223, i32 179, i32 184, i32 71, i32 75, i32 10, i32 165, i32 68, i32 234, i32 41] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 5, i32 144, i32 80, i32 175, i32 99, i32 95, i32 157, i32 158, i32 225, i32 157, i32 56, i32 151, i32 31, i32 108, i32 172, i32 48, i32 70, i32 178, i32 106, i32 25, i32 209, i32 75, i32 219, i32 187, i32 140, i32 218, i32 46, i32 171, i32 200, i32 90, i32 119, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 43, i32 190, i32 175, i32 161, i32 109, i32 47, i32 11, i32 177, i32 143, i32 227, i32 224, i32 56, i32 205, i32 11, i32 65, i32 27, i32 74, i32 21, i32 7, i32 243, i32 111, i32 220, i32 184, i32 233, i32 222, i32 178, i32 163, i32 64, i32 1, i32 166, i32 69, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 118, i32 10, i32 218, i32 141, i32 44, i32 7, i32 63, i32 137, i32 125, i32 4, i32 173, i32 67, i32 80, i32 110, i32 210, i32 71, i32 203, i32 138, i32 230, i32 133, i32 26, i32 36, i32 243, i32 210, i32 96, i32 253, i32 223, i32 115, i32 164, i32 13, i32 115, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 253, i32 103, i32 107, i32 113, i32 155, i32 129, i32 83, i32 57, i32 57, i32 244, i32 184, i32 213, i32 195, i32 48, i32 155, i32 59, i32 124, i32 163, i32 240, i32 208, i32 132, i32 33, i32 214, i32 191, i32 183, i32 76, i32 135, i32 19, i32 69, i32 45, i32 167, i32 85] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 93, i32 4, i32 179, i32 64, i32 40, i32 149, i32 45, i32 48, i32 131, i32 236, i32 94, i32 228, i32 255, i32 117, i32 254, i32 121, i32 38, i32 157, i32 29, i32 54, i32 205, i32 10, i32 21, i32 210, i32 36, i32 20, i32 119, i32 113, i32 215, i32 138, i32 27, i32 4] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 93, i32 147, i32 201, i32 190, i32 170, i32 144, i32 205, i32 155, i32 251, i32 115, i32 126, i32 176, i32 100, i32 152, i32 87, i32 68, i32 66, i32 65, i32 177, i32 175, i32 234, i32 193, i32 195, i32 34, i32 255, i32 96, i32 70, i32 203, i32 97, i32 129, i32 112, i32 97] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 13, i32 130, i32 185, i32 254, i32 33, i32 205, i32 196, i32 245, i32 152, i32 12, i32 78, i32 114, i32 238, i32 135, i32 73, i32 248, i32 161, i32 149, i32 223, i32 143, i32 45, i32 189, i32 33, i32 6, i32 124, i32 21, i32 232, i32 18, i32 109, i32 147, i32 214, i32 56] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 145, i32 247, i32 81, i32 217, i32 239, i32 125, i32 66, i32 1, i32 19, i32 233, i32 184, i32 127, i32 166, i32 73, i32 23, i32 100, i32 33, i32 128, i32 131, i32 44, i32 99, i32 76, i32 96, i32 9, i32 89, i32 145, i32 146, i32 119, i32 57, i32 81, i32 244, i32 72] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 96, i32 213, i32 34, i32 131, i32 8, i32 47, i32 255, i32 153, i32 62, i32 105, i32 109, i32 136, i32 218, i32 231, i32 91, i32 82, i32 38, i32 49, i32 42, i32 229, i32 137, i32 222, i32 104, i32 144, i32 182, i32 34, i32 90, i32 189, i32 211, i32 133, i32 83, i32 49] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 216, i32 206, i32 220, i32 249, i32 60, i32 75, i32 162, i32 29, i32 44, i32 47, i32 54, i32 190, i32 122, i32 252, i32 205, i32 188, i32 220, i32 249, i32 48, i32 189, i32 255, i32 5, i32 199, i32 228, i32 142, i32 23, i32 98, i32 248, i32 77, i32 160, i32 86, i32 121] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 130, i32 231, i32 246, i32 186, i32 83, i32 132, i32 10, i32 163, i32 52, i32 255, i32 60, i32 163, i32 106, i32 161, i32 55, i32 234, i32 221, i32 182, i32 149, i32 179, i32 120, i32 25, i32 118, i32 30, i32 85, i32 47, i32 119, i32 46, i32 127, i32 193, i32 234, i32 94] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 131, i32 225, i32 110, i32 169, i32 7, i32 51, i32 62, i32 131, i32 255, i32 203, i32 28, i32 159, i32 177, i32 163, i32 180, i32 201, i32 225, i32 7, i32 151, i32 255, i32 248, i32 35, i32 143, i32 206, i32 64, i32 253, i32 46, i32 94, i32 219, i32 22, i32 67, i32 45] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 186, i32 56, i32 2, i32 247, i32 129, i32 67, i32 131, i32 163, i32 32, i32 79, i32 1, i32 59, i32 138, i32 4, i32 56, i32 49, i32 198, i32 15, i32 200, i32 223, i32 215, i32 250, i32 47, i32 136, i32 63, i32 252, i32 12, i32 118, i32 196, i32 166, i32 69, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 187, i32 12, i32 188, i32 106, i32 164, i32 151, i32 23, i32 147, i32 45, i32 111, i32 222, i32 114, i32 16, i32 28, i32 8, i32 44, i32 15, i32 128, i32 50, i32 104, i32 39, i32 212, i32 171, i32 221, i32 197, i32 88, i32 97, i32 19, i32 109, i32 17, i32 30, i32 77] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 185, i32 201, i32 16, i32 251, i32 30, i32 78, i32 244, i32 132, i32 75, i32 138, i32 94, i32 123, i32 75, i32 232, i32 67, i32 140, i32 143, i32 0, i32 181, i32 84, i32 19, i32 197, i32 92, i32 182, i32 53, i32 78, i32 157, i32 228, i32 91, i32 65, i32 109] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 21, i32 125, i32 18, i32 72, i32 130, i32 20, i32 66, i32 205, i32 50, i32 212, i32 75, i32 193, i32 114, i32 97, i32 42, i32 140, i32 236, i32 226, i32 248, i32 36, i32 69, i32 148, i32 227, i32 190, i32 221, i32 103, i32 168, i32 119, i32 90, i32 174, i32 91, i32 75] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 203, i32 119, i32 154, i32 32, i32 222, i32 184, i32 35, i32 217, i32 160, i32 15, i32 140, i32 123, i32 165, i32 203, i32 174, i32 182, i32 236, i32 66, i32 103, i32 14, i32 88, i32 164, i32 117, i32 152, i32 33, i32 113, i32 132, i32 179, i32 224, i32 118, i32 148, i32 115] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 223, i32 252, i32 105, i32 40, i32 35, i32 63, i32 91, i32 248, i32 59, i32 36, i32 55, i32 243, i32 29, i32 213, i32 34, i32 107, i32 208, i32 152, i32 168, i32 108, i32 207, i32 255, i32 6, i32 225, i32 19, i32 223, i32 185, i32 193, i32 12, i32 169, i32 191, i32 51] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 217, i32 129, i32 218, i32 178, i32 79, i32 130, i32 157, i32 67, i32 129, i32 9, i32 241, i32 210, i32 1, i32 239, i32 172, i32 244, i32 45, i32 125, i32 1, i32 9, i32 241, i32 255, i32 165, i32 159, i32 229, i32 202, i32 39, i32 99, i32 219, i32 32, i32 177, i32 83] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 103, i32 2, i32 232, i32 173, i32 169, i32 52, i32 212, i32 240, i32 21, i32 129, i32 170, i32 199, i32 77, i32 135, i32 148, i32 234, i32 117, i32 231, i32 76, i32 148, i32 4, i32 14, i32 105, i32 135, i32 231, i32 81, i32 145, i32 16, i32 3, i32 199, i32 190, i32 86] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 50, i32 251, i32 134, i32 236, i32 51, i32 107, i32 46, i32 81, i32 43, i32 200, i32 250, i32 108, i32 112, i32 71, i32 126, i32 206, i32 5, i32 12, i32 113, i32 243, i32 180, i32 86, i32 166, i32 220, i32 204, i32 120, i32 7, i32 117, i32 208, i32 221, i32 178, i32 106] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 198, i32 239, i32 185, i32 192, i32 43, i32 34, i32 8, i32 30, i32 113, i32 112, i32 179, i32 53, i32 156, i32 122, i32 1, i32 146, i32 68, i32 154, i32 246, i32 176, i32 88, i32 149, i32 193, i32 155, i32 2, i32 237, i32 45, i32 124, i32 52, i32 41, i32 73, i32 68] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 69, i32 98, i32 29, i32 46, i32 255, i32 42, i32 28, i32 33, i32 164, i32 37, i32 123, i32 13, i32 140, i32 21, i32 57, i32 252, i32 143, i32 124, i32 165, i32 125, i32 30, i32 37, i32 163, i32 69, i32 214, i32 171, i32 189, i32 203, i32 197, i32 94, i32 120, i32 119] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 208, i32 211, i32 66, i32 237, i32 29, i32 0, i32 60, i32 21, i32 44, i32 156, i32 119, i32 129, i32 210, i32 115, i32 209, i32 6, i32 213, i32 196, i32 127, i32 148, i32 187, i32 146, i32 45, i32 44, i32 75, i32 69, i32 75, i32 233, i32 42, i32 137, i32 107, i32 43] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 210, i32 12, i32 136, i32 197, i32 72, i32 77, i32 234, i32 13, i32 74, i32 201, i32 82, i32 106, i32 97, i32 121, i32 233, i32 118, i32 243, i32 133, i32 82, i32 92, i32 27, i32 44, i32 225, i32 214, i32 196, i32 15, i32 24, i32 14, i32 78, i32 246, i32 28, i32 127] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 180, i32 4, i32 46, i32 66, i32 203, i32 31, i32 43, i32 17, i32 81, i32 123, i32 8, i32 172, i32 170, i32 62, i32 158, i32 82, i32 96, i32 183, i32 194, i32 97, i32 87, i32 140, i32 132, i32 213, i32 24, i32 166, i32 25, i32 252, i32 183, i32 117, i32 145, i32 27] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 232, i32 104, i32 202, i32 68, i32 200, i32 56, i32 56, i32 204, i32 83, i32 10, i32 50, i32 53, i32 204, i32 82, i32 203, i32 14, i32 247, i32 197, i32 231, i32 236, i32 61, i32 133, i32 204, i32 88, i32 226, i32 23, i32 71, i32 255, i32 159, i32 165, i32 48, i32 23] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 227, i32 174, i32 200, i32 193, i32 113, i32 117, i32 49, i32 0, i32 55, i32 65, i32 92, i32 14, i32 57, i32 218, i32 115, i32 160, i32 199, i32 151, i32 54, i32 108, i32 91, i32 242, i32 238, i32 100, i32 10, i32 61, i32 137, i32 30, i32 29, i32 73, i32 140, i32 55] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 76, i32 230, i32 176, i32 193, i32 165, i32 42, i32 130, i32 9, i32 8, i32 173, i32 121, i32 156, i32 86, i32 246, i32 249, i32 193, i32 215, i32 124, i32 57, i32 127, i32 147, i32 202, i32 17, i32 85, i32 191, i32 7, i32 27, i32 130, i32 41, i32 105, i32 149, i32 92] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 135, i32 238, i32 166, i32 86, i32 158, i32 194, i32 154, i32 86, i32 36, i32 66, i32 133, i32 77, i32 152, i32 49, i32 30, i32 96, i32 77, i32 135, i32 133, i32 4, i32 174, i32 70, i32 18, i32 249, i32 142, i32 127, i32 228, i32 127, i32 246, i32 28, i32 55, i32 1] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 115, i32 76, i32 182, i32 197, i32 196, i32 233, i32 108, i32 133, i32 72, i32 74, i32 90, i32 172, i32 217, i32 31, i32 67, i32 248, i32 98, i32 91, i32 238, i32 152, i32 42, i32 51, i32 142, i32 121, i32 206, i32 97, i32 6, i32 53, i32 216, i32 215, i32 202, i32 113] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 114, i32 211, i32 174, i32 166, i32 202, i32 143, i32 205, i32 204, i32 120, i32 142, i32 25, i32 77, i32 167, i32 210, i32 39, i32 233, i32 164, i32 60, i32 22, i32 91, i32 132, i32 128, i32 249, i32 208, i32 204, i32 106, i32 30, i32 202, i32 30, i32 103, i32 189, i32 99] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 123, i32 110, i32 42, i32 210, i32 135, i32 72, i32 255, i32 161, i32 202, i32 233, i32 21, i32 133, i32 220, i32 219, i32 44, i32 57, i32 18, i32 145, i32 169, i32 32, i32 170, i32 79, i32 41, i32 244, i32 21, i32 122, i32 210, i32 245, i32 50, i32 204, i32 96, i32 4] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 229, i32 16, i32 71, i32 59, i32 250, i32 144, i32 252, i32 48, i32 181, i32 234, i32 111, i32 86, i32 143, i32 251, i32 14, i32 167, i32 59, i32 200, i32 178, i32 255, i32 2, i32 122, i32 51, i32 148, i32 147, i32 42, i32 3, i32 224, i32 150, i32 58, i32 108, i32 15] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 90, i32 99, i32 103, i32 225, i32 155, i32 71, i32 120, i32 159, i32 56, i32 121, i32 172, i32 151, i32 102, i32 29, i32 94, i32 81, i32 238, i32 36, i32 66, i32 232, i32 88, i32 75, i32 138, i32 3, i32 117, i32 134, i32 55, i32 134, i32 226, i32 151, i32 78, i32 61] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 63, i32 117, i32 142, i32 180, i32 255, i32 216, i32 221, i32 214, i32 55, i32 87, i32 157, i32 109, i32 59, i32 189, i32 213, i32 96, i32 136, i32 101, i32 154, i32 185, i32 74, i32 104, i32 132, i32 162, i32 103, i32 221, i32 23, i32 37, i32 151, i32 4, i32 139, i32 94] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 187, i32 64, i32 94, i32 188, i32 22, i32 146, i32 5, i32 196, i32 192, i32 78, i32 114, i32 144, i32 14, i32 171, i32 207, i32 138, i32 237, i32 239, i32 185, i32 45, i32 59, i32 248, i32 67, i32 91, i32 186, i32 45, i32 235, i32 47, i32 82, i32 210, i32 209, i32 90] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 64, i32 180, i32 171, i32 230, i32 173, i32 159, i32 70, i32 105, i32 74, i32 179, i32 142, i32 170, i32 234, i32 156, i32 138, i32 32, i32 22, i32 93, i32 140, i32 19, i32 189, i32 246, i32 29, i32 197, i32 36, i32 189, i32 144, i32 42, i32 28, i32 199, i32 19, i32 59] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 84, i32 220, i32 22, i32 13, i32 24, i32 190, i32 53, i32 100, i32 97, i32 82, i32 2, i32 128, i32 175, i32 5, i32 247, i32 166, i32 66, i32 211, i32 143, i32 46, i32 121, i32 38, i32 168, i32 187, i32 178, i32 23, i32 72, i32 178, i32 122, i32 10, i32 137, i32 20] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 32, i32 168, i32 136, i32 227, i32 145, i32 192, i32 110, i32 187, i32 138, i32 39, i32 130, i32 81, i32 131, i32 178, i32 40, i32 169, i32 131, i32 235, i32 166, i32 169, i32 77, i32 23, i32 89, i32 34, i32 84, i32 0, i32 80, i32 69, i32 203, i32 72, i32 75, i32 24] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 124, i32 231, i32 38, i32 186, i32 77, i32 50, i32 254, i32 83, i32 244, i32 250, i32 131, i32 227, i32 165, i32 121, i32 102, i32 115, i32 239, i32 128, i32 35, i32 104, i32 194, i32 96, i32 221, i32 169, i32 51, i32 220, i32 3, i32 122, i32 224, i32 224, i32 62] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 52, i32 92, i32 19, i32 251, i32 192, i32 227, i32 120, i32 43, i32 84, i32 88, i32 34, i32 155, i32 118, i32 129, i32 127, i32 147, i32 156, i32 37, i32 60, i32 210, i32 233, i32 150, i32 33, i32 38, i32 8, i32 245, i32 237, i32 149, i32 17, i32 174, i32 4, i32 90] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 185, i32 232, i32 197, i32 18, i32 151, i32 31, i32 131, i32 254, i32 62, i32 148, i32 153, i32 212, i32 45, i32 249, i32 82, i32 89, i32 92, i32 130, i32 166, i32 240, i32 117, i32 126, i32 232, i32 236, i32 204, i32 172, i32 24, i32 33, i32 9, i32 103, i32 102, i32 103] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 179, i32 64, i32 41, i32 209, i32 203, i32 27, i32 8, i32 158, i32 156, i32 183, i32 83, i32 185, i32 59, i32 113, i32 8, i32 149, i32 18, i32 26, i32 88, i32 175, i32 126, i32 130, i32 82, i32 67, i32 79, i32 17, i32 57, i32 244, i32 147, i32 26, i32 38, i32 5] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 110, i32 68, i32 163, i32 249, i32 100, i32 175, i32 231, i32 109, i32 125, i32 223, i32 30, i32 172, i32 4, i32 234, i32 59, i32 95, i32 155, i32 232, i32 36, i32 157, i32 14, i32 229, i32 46, i32 62, i32 223, i32 169, i32 247, i32 212, i32 80, i32 113, i32 240, i32 120] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 62, i32 168, i32 56, i32 194, i32 87, i32 86, i32 66, i32 154, i32 177, i32 226, i32 248, i32 69, i32 170, i32 17, i32 72, i32 95, i32 23, i32 196, i32 84, i32 39, i32 220, i32 93, i32 170, i32 221, i32 65, i32 188, i32 223, i32 129, i32 185, i32 83, i32 238, i32 82] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 195, i32 241, i32 167, i32 109, i32 179, i32 95, i32 146, i32 111, i32 204, i32 145, i32 184, i32 149, i32 5, i32 223, i32 60, i32 100, i32 87, i32 57, i32 97, i32 81, i32 173, i32 140, i32 56, i32 123, i32 200, i32 222, i32 0, i32 52, i32 190, i32 161, i32 176, i32 126] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 37, i32 36, i32 29, i32 138, i32 103, i32 32, i32 238, i32 66, i32 235, i32 56, i32 237, i32 11, i32 139, i32 205, i32 70, i32 157, i32 94, i32 107, i32 30, i32 36, i32 157, i32 18, i32 5, i32 26, i32 204, i32 5, i32 78, i32 146, i32 56, i32 225, i32 31, i32 80] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 78, i32 238, i32 28, i32 145, i32 230, i32 17, i32 189, i32 142, i32 85, i32 26, i32 24, i32 117, i32 102, i32 175, i32 77, i32 123, i32 15, i32 174, i32 109, i32 133, i32 202, i32 130, i32 88, i32 33, i32 156, i32 24, i32 224, i32 237, i32 236, i32 34, i32 128, i32 47] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 104, i32 59, i32 10, i32 57, i32 29, i32 106, i32 21, i32 87, i32 252, i32 240, i32 99, i32 84, i32 219, i32 57, i32 219, i32 232, i32 92, i32 100, i32 255, i32 160, i32 9, i32 79, i32 59, i32 183, i32 50, i32 96, i32 153, i32 148, i32 253, i32 148, i32 130, i32 45] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 36, i32 246, i32 90, i32 68, i32 241, i32 85, i32 44, i32 219, i32 234, i32 124, i32 132, i32 124, i32 1, i32 172, i32 227, i32 253, i32 201, i32 39, i32 193, i32 90, i32 185, i32 222, i32 79, i32 90, i32 144, i32 221, i32 198, i32 103, i32 170, i32 111, i32 138, i32 58] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 120, i32 82, i32 135, i32 201, i32 151, i32 99, i32 177, i32 221, i32 84, i32 95, i32 193, i32 248, i32 241, i32 6, i32 166, i32 168, i32 163, i32 136, i32 130, i32 212, i32 203, i32 166, i32 25, i32 221, i32 209, i32 17, i32 135, i32 8, i32 23, i32 76, i32 55, i32 42] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 161, i32 12, i32 243, i32 8, i32 67, i32 217, i32 36, i32 30, i32 131, i32 167, i32 223, i32 145, i32 202, i32 189, i32 105, i32 71, i32 141, i32 27, i32 226, i32 185, i32 78, i32 181, i32 225, i32 118, i32 179, i32 28, i32 147, i32 3, i32 206, i32 95, i32 179, i32 90] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 29, i32 218, i32 228, i32 97, i32 3, i32 80, i32 169, i32 139, i32 104, i32 24, i32 239, i32 178, i32 28, i32 132, i32 59, i32 162, i32 68, i32 149, i32 163, i32 4, i32 59, i32 214, i32 153, i32 0, i32 175, i32 118, i32 66, i32 103, i32 2, i32 125, i32 133, i32 86] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 206, i32 114, i32 14, i32 41, i32 132, i32 178, i32 125, i32 210, i32 69, i32 190, i32 87, i32 6, i32 237, i32 127, i32 207, i32 237, i32 205, i32 239, i32 25, i32 214, i32 188, i32 21, i32 121, i32 100, i32 210, i32 24, i32 227, i32 32, i32 103, i32 58, i32 84, i32 11] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 82, i32 253, i32 4, i32 197, i32 251, i32 153, i32 231, i32 232, i32 251, i32 140, i32 225, i32 66, i32 3, i32 239, i32 157, i32 217, i32 158, i32 77, i32 247, i32 128, i32 207, i32 46, i32 204, i32 155, i32 69, i32 201, i32 123, i32 122, i32 188, i32 55, i32 168, i32 82] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 150, i32 17, i32 65, i32 138, i32 71, i32 145, i32 254, i32 182, i32 218, i32 122, i32 84, i32 99, i32 209, i32 20, i32 53, i32 5, i32 134, i32 140, i32 169, i32 54, i32 63, i32 242, i32 133, i32 84, i32 78, i32 146, i32 216, i32 133, i32 1, i32 70, i32 214, i32 80] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 83, i32 205, i32 243, i32 134, i32 64, i32 230, i32 57, i32 66, i32 149, i32 214, i32 203, i32 69, i32 26, i32 32, i32 200, i32 69, i32 75, i32 50, i32 105, i32 4, i32 177, i32 175, i32 32, i32 70, i32 199, i32 107, i32 35, i32 91, i32 105, i32 238, i32 48, i32 63] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 112, i32 131, i32 71, i32 192, i32 219, i32 85, i32 8, i32 168, i32 123, i32 24, i32 109, i32 245, i32 4, i32 90, i32 32, i32 12, i32 74, i32 140, i32 96, i32 174, i32 174, i32 15, i32 100, i32 85, i32 85, i32 46, i32 213, i32 29, i32 83, i32 49, i32 66, i32 65] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 202, i32 252, i32 136, i32 107, i32 150, i32 120, i32 10, i32 139, i32 131, i32 220, i32 188, i32 175, i32 64, i32 182, i32 141, i32 127, i32 239, i32 180, i32 209, i32 63, i32 204, i32 162, i32 116, i32 201, i32 194, i32 146, i32 85, i32 0, i32 171, i32 219, i32 191, i32 79] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 147, i32 28, i32 6, i32 45, i32 102, i32 101, i32 2, i32 164, i32 151, i32 24, i32 253, i32 0, i32 231, i32 171, i32 3, i32 236, i32 206, i32 193, i32 191, i32 55, i32 248, i32 19, i32 83, i32 165, i32 229, i32 12, i32 58, i32 168, i32 85, i32 185, i32 255, i32 104] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 228, i32 230, i32 109, i32 48, i32 125, i32 48, i32 53, i32 194, i32 120, i32 135, i32 249, i32 252, i32 107, i32 90, i32 195, i32 183, i32 101, i32 216, i32 46, i32 199, i32 165, i32 12, i32 198, i32 220, i32 18, i32 170, i32 214, i32 79, i32 197, i32 56, i32 188, i32 14] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 226, i32 60, i32 118, i32 134, i32 56, i32 242, i32 123, i32 44, i32 22, i32 120, i32 141, i32 245, i32 164, i32 21, i32 218, i32 219, i32 38, i32 133, i32 160, i32 86, i32 221, i32 29, i32 227, i32 179, i32 253, i32 64, i32 239, i32 242, i32 217, i32 161, i32 179, i32 4] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 219, i32 73, i32 14, i32 230, i32 88, i32 16, i32 122, i32 82, i32 218, i32 181, i32 125, i32 55, i32 106, i32 62, i32 161, i32 120, i32 206, i32 199, i32 28, i32 36, i32 35, i32 219, i32 125, i32 251, i32 140, i32 141, i32 220, i32 48, i32 103, i32 105, i32 117, i32 59] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 169, i32 234, i32 109, i32 22, i32 22, i32 96, i32 244, i32 96, i32 135, i32 25, i32 68, i32 140, i32 74, i32 139, i32 62, i32 251, i32 22, i32 0, i32 0, i32 84, i32 166, i32 158, i32 159, i32 239, i32 207, i32 217, i32 210, i32 76, i32 116, i32 49, i32 208, i32 52] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 164, i32 235, i32 4, i32 164, i32 140, i32 143, i32 113, i32 39, i32 149, i32 133, i32 93, i32 85, i32 75, i32 177, i32 38, i32 38, i32 200, i32 174, i32 106, i32 125, i32 162, i32 33, i32 202, i32 206, i32 56, i32 171, i32 15, i32 208, i32 213, i32 43, i32 107, i32 0] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 229, i32 103, i32 12, i32 241, i32 58, i32 154, i32 234, i32 9, i32 57, i32 239, i32 209, i32 48, i32 188, i32 51, i32 186, i32 177, i32 106, i32 197, i32 39, i32 8, i32 127, i32 84, i32 128, i32 61, i32 171, i32 246, i32 21, i32 122, i32 194, i32 64, i32 115, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 132, i32 86, i32 130, i32 182, i32 18, i32 112, i32 127, i32 247, i32 240, i32 189, i32 91, i32 169, i32 213, i32 197, i32 95, i32 89, i32 191, i32 127, i32 179, i32 85, i32 34, i32 2, i32 201, i32 68, i32 85, i32 135, i32 143, i32 150, i32 152, i32 100, i32 109, i32 21] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 176, i32 139, i32 170, i32 30, i32 236, i32 199, i32 165, i32 143, i32 31, i32 146, i32 4, i32 198, i32 5, i32 246, i32 223, i32 161, i32 204, i32 31, i32 129, i32 245, i32 14, i32 156, i32 87, i32 220, i32 227, i32 187, i32 6, i32 135, i32 30, i32 254, i32 35, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 216, i32 43, i32 91, i32 22, i32 234, i32 32, i32 241, i32 211, i32 104, i32 143, i32 174, i32 91, i32 208, i32 169, i32 26, i32 25, i32 168, i32 54, i32 251, i32 43, i32 87, i32 136, i32 125, i32 144, i32 213, i32 166, i32 243, i32 220, i32 56, i32 137, i32 78, i32 31] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 204, i32 25, i32 218, i32 155, i32 59, i32 67, i32 72, i32 33, i32 46, i32 35, i32 77, i32 61, i32 174, i32 248, i32 140, i32 252, i32 221, i32 166, i32 116, i32 55, i32 101, i32 202, i32 238, i32 26, i32 25, i32 142, i32 159, i32 100, i32 111, i32 12, i32 139, i32 90] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 37, i32 185, i32 194, i32 240, i32 114, i32 184, i32 21, i32 22, i32 204, i32 141, i32 60, i32 111, i32 37, i32 237, i32 244, i32 70, i32 46, i32 12, i32 96, i32 15, i32 226, i32 132, i32 52, i32 85, i32 137, i32 89, i32 52, i32 27, i32 245, i32 141, i32 254, i32 8] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 248, i32 171, i32 147, i32 188, i32 68, i32 186, i32 27, i32 117, i32 75, i32 73, i32 111, i32 208, i32 84, i32 46, i32 99, i32 186, i32 181, i32 234, i32 237, i32 50, i32 20, i32 201, i32 148, i32 216, i32 197, i32 206, i32 244, i32 16, i32 104, i32 224, i32 56, i32 39] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 116, i32 28, i32 20, i32 155, i32 212, i32 100, i32 97, i32 113, i32 90, i32 182, i32 33, i32 51, i32 79, i32 247, i32 142, i32 186, i32 165, i32 72, i32 154, i32 199, i32 250, i32 154, i32 240, i32 180, i32 98, i32 173, i32 242, i32 94, i32 204, i32 3, i32 36, i32 26] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 245, i32 118, i32 253, i32 228, i32 175, i32 185, i32 3, i32 89, i32 206, i32 99, i32 210, i32 59, i32 31, i32 205, i32 33, i32 12, i32 173, i32 68, i32 165, i32 151, i32 172, i32 128, i32 17, i32 2, i32 155, i32 12, i32 229, i32 139, i32 205, i32 251, i32 121, i32 119] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 21, i32 190, i32 154, i32 13, i32 186, i32 56, i32 114, i32 32, i32 138, i32 245, i32 190, i32 89, i32 147, i32 121, i32 183, i32 246, i32 106, i32 12, i32 56, i32 39, i32 26, i32 96, i32 244, i32 134, i32 59, i32 171, i32 90, i32 0, i32 160, i32 206, i32 33, i32 125] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 108, i32 186, i32 20, i32 197, i32 234, i32 18, i32 158, i32 46, i32 130, i32 99, i32 206, i32 155, i32 74, i32 231, i32 29, i32 236, i32 241, i32 46, i32 81, i32 28, i32 244, i32 208, i32 105, i32 21, i32 66, i32 157, i32 163, i32 63, i32 14, i32 191, i32 233, i32 92] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 228, i32 13, i32 244, i32 189, i32 238, i32 49, i32 16, i32 237, i32 203, i32 18, i32 134, i32 173, i32 212, i32 47, i32 144, i32 55, i32 50, i32 195, i32 11, i32 115, i32 236, i32 151, i32 133, i32 164, i32 1, i32 28, i32 118, i32 53, i32 254, i32 117, i32 221, i32 113] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 17, i32 164, i32 136, i32 159, i32 62, i32 83, i32 105, i32 59, i32 27, i32 224, i32 247, i32 186, i32 155, i32 173, i32 78, i32 129, i32 95, i32 181, i32 92, i32 174, i32 190, i32 103, i32 134, i32 55, i32 52, i32 142, i32 7, i32 50, i32 69, i32 74, i32 103, i32 57] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 144, i32 112, i32 88, i32 32, i32 3, i32 30, i32 103, i32 178, i32 200, i32 155, i32 88, i32 197, i32 177, i32 235, i32 45, i32 74, i32 222, i32 130, i32 140, i32 242, i32 210, i32 20, i32 184, i32 112, i32 97, i32 78, i32 115, i32 214, i32 11, i32 107, i32 13, i32 48] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 129, i32 252, i32 85, i32 92, i32 191, i32 167, i32 196, i32 189, i32 226, i32 240, i32 75, i32 143, i32 233, i32 125, i32 153, i32 250, i32 211, i32 171, i32 188, i32 199, i32 131, i32 43, i32 4, i32 127, i32 12, i32 25, i32 67, i32 3, i32 61, i32 7, i32 202, i32 64] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 249, i32 200, i32 190, i32 140, i32 22, i32 129, i32 57, i32 150, i32 246, i32 23, i32 88, i32 200, i32 48, i32 88, i32 251, i32 194, i32 3, i32 69, i32 210, i32 82, i32 118, i32 224, i32 106, i32 38, i32 40, i32 92, i32 136, i32 89, i32 106, i32 90, i32 84, i32 66] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 181, i32 46, i32 44, i32 103, i32 21, i32 155, i32 251, i32 131, i32 105, i32 30, i32 15, i32 218, i32 214, i32 41, i32 177, i32 96, i32 224, i32 178, i32 186, i32 105, i32 162, i32 158, i32 189, i32 189, i32 224, i32 28, i32 189, i32 205, i32 6, i32 100, i32 112] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 65, i32 250, i32 140, i32 225, i32 137, i32 143, i32 39, i32 200, i32 37, i32 143, i32 111, i32 95, i32 85, i32 248, i32 222, i32 149, i32 109, i32 47, i32 117, i32 22, i32 43, i32 78, i32 68, i32 253, i32 134, i32 110, i32 233, i32 112, i32 57, i32 118, i32 151, i32 126] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 23, i32 98, i32 107, i32 20, i32 161, i32 124, i32 208, i32 121, i32 110, i32 216, i32 138, i32 165, i32 109, i32 140, i32 147, i32 210, i32 63, i32 236, i32 68, i32 141, i32 110, i32 145, i32 1, i32 140, i32 143, i32 238, i32 1, i32 143, i32 192, i32 180, i32 133, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 58, i32 112, i32 65, i32 228, i32 17, i32 87, i32 35, i32 172, i32 230, i32 252, i32 84, i32 126, i32 205, i32 215, i32 34, i32 203, i32 118, i32 159, i32 32, i32 206, i32 160, i32 115, i32 118, i32 81, i32 59, i32 164, i32 248, i32 227, i32 98, i32 18, i32 108] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 127, i32 0, i32 156, i32 38, i32 13, i32 111, i32 72, i32 127, i32 58, i32 1, i32 237, i32 197, i32 150, i32 176, i32 31, i32 79, i32 168, i32 2, i32 98, i32 39, i32 138, i32 80, i32 141, i32 154, i32 139, i32 82, i32 15, i32 30, i32 207, i32 65, i32 56, i32 25] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 245, i32 108, i32 212, i32 47, i32 15, i32 105, i32 15, i32 135, i32 63, i32 97, i32 101, i32 30, i32 53, i32 52, i32 133, i32 186, i32 2, i32 48, i32 172, i32 37, i32 61, i32 226, i32 98, i32 241, i32 204, i32 233, i32 27, i32 194, i32 239, i32 106, i32 66, i32 87] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 52, i32 31, i32 46, i32 172, i32 209, i32 199, i32 4, i32 82, i32 50, i32 102, i32 178, i32 51, i32 115, i32 33, i32 52, i32 84, i32 247, i32 113, i32 237, i32 6, i32 176, i32 255, i32 166, i32 89, i32 111, i32 138, i32 78, i32 251, i32 2, i32 176, i32 69, i32 107] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 245, i32 72, i32 11, i32 3, i32 197, i32 34, i32 125, i32 128, i32 8, i32 83, i32 254, i32 50, i32 177, i32 161, i32 138, i32 116, i32 111, i32 189, i32 63, i32 133, i32 244, i32 207, i32 245, i32 96, i32 175, i32 65, i32 126, i32 62, i32 70, i32 163, i32 90, i32 32] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 170, i32 53, i32 135, i32 68, i32 99, i32 102, i32 151, i32 248, i32 110, i32 85, i32 12, i32 4, i32 62, i32 53, i32 80, i32 191, i32 147, i32 105, i32 210, i32 139, i32 5, i32 85, i32 153, i32 190, i32 226, i32 83, i32 97, i32 236, i32 232, i32 8, i32 11, i32 50] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 179, i32 16, i32 69, i32 2, i32 105, i32 89, i32 46, i32 151, i32 217, i32 100, i32 248, i32 219, i32 37, i32 128, i32 220, i32 196, i32 213, i32 98, i32 60, i32 237, i32 101, i32 145, i32 173, i32 209, i32 87, i32 129, i32 148, i32 170, i32 161, i32 41, i32 252, i32 104] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 221, i32 181, i32 125, i32 171, i32 90, i32 33, i32 65, i32 83, i32 187, i32 23, i32 121, i32 13, i32 209, i32 168, i32 12, i32 12, i32 32, i32 136, i32 9, i32 233, i32 132, i32 232, i32 37, i32 17, i32 103, i32 122, i32 139, i32 26, i32 228, i32 93, i32 225, i32 93] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 55, i32 234, i32 254, i32 101, i32 59, i32 37, i32 232, i32 225, i32 194, i32 197, i32 2, i32 164, i32 190, i32 152, i32 10, i32 43, i32 97, i32 193, i32 155, i32 226, i32 213, i32 146, i32 230, i32 158, i32 125, i32 31, i32 202, i32 67, i32 136, i32 139, i32 44, i32 89] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 224, i32 181, i32 0, i32 29, i32 42, i32 111, i32 175, i32 121, i32 134, i32 47, i32 166, i32 90, i32 147, i32 209, i32 254, i32 174, i32 58, i32 238, i32 219, i32 124, i32 97, i32 190, i32 124, i32 1, i32 249, i32 254, i32 82, i32 220, i32 216, i32 82, i32 163, i32 66] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 34, i32 175, i32 19, i32 55, i32 189, i32 55, i32 113, i32 172, i32 4, i32 70, i32 99, i32 172, i32 164, i32 119, i32 237, i32 37, i32 56, i32 224, i32 21, i32 168, i32 100, i32 0, i32 13, i32 206, i32 81, i32 1, i32 169, i32 188, i32 15, i32 3, i32 28, i32 4] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 137, i32 249, i32 128, i32 7, i32 207, i32 63, i32 179, i32 233, i32 231, i32 69, i32 68, i32 61, i32 42, i32 124, i32 233, i32 228, i32 22, i32 92, i32 94, i32 101, i32 28, i32 199, i32 125, i32 198, i32 122, i32 251, i32 67, i32 238, i32 37, i32 118, i32 70, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 162, i32 237, i32 244, i32 143, i32 107, i32 11, i32 62, i32 235, i32 53, i32 26, i32 213, i32 126, i32 219, i32 120, i32 0, i32 150, i32 138, i32 160, i32 180, i32 207, i32 96, i32 75, i32 212, i32 213, i32 249, i32 45, i32 191, i32 136, i32 189, i32 34, i32 98] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 19, i32 83, i32 228, i32 130, i32 87, i32 250, i32 30, i32 143, i32 6, i32 43, i32 144, i32 186, i32 8, i32 182, i32 16, i32 84, i32 79, i32 124, i32 27, i32 38, i32 237, i32 218, i32 107, i32 221, i32 37, i32 208, i32 78, i32 234, i32 66, i32 187, i32 37, i32 3] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 81, i32 22, i32 80, i32 124, i32 213, i32 93, i32 246, i32 153, i32 232, i32 119, i32 114, i32 78, i32 250, i32 98, i32 203, i32 118, i32 117, i32 12, i32 226, i32 113, i32 152, i32 146, i32 213, i32 250, i32 69, i32 223, i32 92, i32 111, i32 30, i32 158, i32 40, i32 105] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 13, i32 172, i32 102, i32 109, i32 195, i32 139, i32 186, i32 22, i32 181, i32 226, i32 160, i32 13, i32 12, i32 189, i32 164, i32 142, i32 24, i32 108, i32 242, i32 220, i32 249, i32 220, i32 74, i32 134, i32 37, i32 149, i32 20, i32 203, i32 216, i32 26, i32 4, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 151, i32 165, i32 219, i32 139, i32 45, i32 170, i32 66, i32 17, i32 9, i32 242, i32 147, i32 187, i32 217, i32 6, i32 132, i32 78, i32 17, i32 168, i32 160, i32 37, i32 43, i32 166, i32 95, i32 174, i32 196, i32 180, i32 76, i32 200, i32 171, i32 199, i32 59, i32 2] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 238, i32 201, i32 41, i32 15, i32 223, i32 17, i32 133, i32 237, i32 206, i32 13, i32 98, i32 44, i32 143, i32 75, i32 249, i32 4, i32 233, i32 6, i32 114, i32 29, i32 55, i32 32, i32 80, i32 201, i32 20, i32 235, i32 236, i32 57, i32 167, i32 151, i32 43, i32 77] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 105, i32 209, i32 57, i32 189, i32 251, i32 51, i32 190, i32 196, i32 240, i32 92, i32 239, i32 240, i32 86, i32 104, i32 252, i32 151, i32 71, i32 200, i32 114, i32 182, i32 83, i32 164, i32 10, i32 152, i32 165, i32 180, i32 55, i32 113, i32 207, i32 102, i32 80, i32 109] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 23, i32 164, i32 25, i32 82, i32 17, i32 71, i32 179, i32 92, i32 91, i32 169, i32 46, i32 34, i32 180, i32 0, i32 82, i32 249, i32 87, i32 24, i32 184, i32 190, i32 90, i32 227, i32 171, i32 131, i32 200, i32 135, i32 10, i32 42, i32 216, i32 140, i32 187, i32 84] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 169, i32 98, i32 147, i32 133, i32 190, i32 232, i32 115, i32 74, i32 14, i32 176, i32 181, i32 45, i32 148, i32 80, i32 170, i32 211, i32 178, i32 234, i32 157, i32 98, i32 118, i32 59, i32 7, i32 52, i32 78, i32 45, i32 112, i32 200, i32 154, i32 21, i32 102, i32 107] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 197, i32 150, i32 202, i32 200, i32 34, i32 26, i32 238, i32 95, i32 231, i32 49, i32 96, i32 34, i32 131, i32 8, i32 99, i32 206, i32 185, i32 50, i32 68, i32 88, i32 93, i32 58, i32 155, i32 228, i32 4, i32 213, i32 239, i32 56, i32 239, i32 75, i32 221, i32 25] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 77, i32 194, i32 23, i32 117, i32 161, i32 104, i32 205, i32 195, i32 198, i32 3, i32 68, i32 227, i32 120, i32 9, i32 145, i32 71, i32 63, i32 15, i32 228, i32 146, i32 88, i32 250, i32 125, i32 31, i32 32, i32 148, i32 88, i32 94, i32 188, i32 25, i32 2, i32 111] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 32, i32 214, i32 216, i32 145, i32 84, i32 167, i32 243, i32 32, i32 75, i32 52, i32 6, i32 250, i32 48, i32 200, i32 111, i32 20, i32 16, i32 101, i32 116, i32 19, i32 78, i32 240, i32 105, i32 38, i32 206, i32 207, i32 144, i32 244, i32 208, i32 197, i32 200, i32 100] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 162, i32 80, i32 2, i32 36, i32 114, i32 241, i32 240, i32 78, i32 45, i32 147, i32 213, i32 8, i32 231, i32 174, i32 56, i32 247, i32 24, i32 165, i32 50, i32 52, i32 194, i32 240, i32 166, i32 236, i32 185, i32 97, i32 123, i32 100, i32 153, i32 172, i32 113] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 37, i32 207, i32 116, i32 85, i32 27, i32 170, i32 169, i32 56, i32 65, i32 64, i32 213, i32 149, i32 149, i32 171, i32 28, i32 94, i32 188, i32 65, i32 126, i32 20, i32 48, i32 190, i32 19, i32 137, i32 244, i32 229, i32 235, i32 40, i32 192, i32 194, i32 150, i32 58] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 43, i32 119, i32 69, i32 236, i32 103, i32 118, i32 50, i32 76, i32 185, i32 223, i32 37, i32 50, i32 107, i32 203, i32 231, i32 20, i32 97, i32 67, i32 238, i32 186, i32 155, i32 113, i32 239, i32 210, i32 72, i32 101, i32 187, i32 27, i32 138, i32 19, i32 27, i32 34] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 132, i32 173, i32 12, i32 24, i32 56, i32 90, i32 186, i32 208, i32 152, i32 89, i32 191, i32 55, i32 176, i32 79, i32 151, i32 96, i32 32, i32 179, i32 155, i32 151, i32 246, i32 8, i32 108, i32 164, i32 255, i32 251, i32 183, i32 250, i32 149, i32 178, i32 81, i32 121] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 40, i32 92, i32 63, i32 219, i32 107, i32 24, i32 59, i32 92, i32 209, i32 4, i32 40, i32 222, i32 133, i32 82, i32 49, i32 181, i32 187, i32 246, i32 169, i32 237, i32 190, i32 40, i32 79, i32 179, i32 126, i32 5, i32 106, i32 219, i32 149, i32 13, i32 27, i32 28] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 213, i32 197, i32 195, i32 154, i32 10, i32 208, i32 49, i32 62, i32 7, i32 54, i32 142, i32 192, i32 138, i32 98, i32 177, i32 202, i32 214, i32 14, i32 30, i32 157, i32 239, i32 171, i32 152, i32 77, i32 187, i32 108, i32 5, i32 224, i32 228, i32 93, i32 189, i32 87] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 204, i32 33, i32 39, i32 206, i32 253, i32 169, i32 148, i32 142, i32 225, i32 171, i32 73, i32 224, i32 70, i32 38, i32 161, i32 168, i32 140, i32 161, i32 153, i32 29, i32 180, i32 39, i32 109, i32 45, i32 200, i32 57, i32 48, i32 94, i32 55, i32 82, i32 196, i32 110] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 169, i32 133, i32 244, i32 231, i32 176, i32 21, i32 51, i32 132, i32 27, i32 20, i32 26, i32 2, i32 217, i32 59, i32 173, i32 15, i32 67, i32 108, i32 234, i32 62, i32 15, i32 126, i32 218, i32 221, i32 107, i32 76, i32 127, i32 110, i32 212, i32 107, i32 191, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 71, i32 159, i32 124, i32 86, i32 124, i32 67, i32 145, i32 28, i32 187, i32 78, i32 114, i32 62, i32 100, i32 171, i32 160, i32 160, i32 223, i32 180, i32 216, i32 135, i32 58, i32 189, i32 168, i32 72, i32 201, i32 184, i32 239, i32 46, i32 173, i32 111, i32 132, i32 79] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 45, i32 45, i32 240, i32 27, i32 126, i32 42, i32 108, i32 248, i32 169, i32 106, i32 225, i32 240, i32 153, i32 161, i32 103, i32 154, i32 212, i32 19, i32 202, i32 202, i32 186, i32 39, i32 146, i32 170, i32 161, i32 93, i32 80, i32 222, i32 204, i32 64, i32 38, i32 10] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 159, i32 62, i32 242, i32 178, i32 144, i32 206, i32 219, i32 100, i32 62, i32 3, i32 221, i32 55, i32 54, i32 84, i32 112, i32 118, i32 36, i32 181, i32 105, i32 3, i32 252, i32 160, i32 43, i32 116, i32 178, i32 5, i32 14, i32 204, i32 216, i32 31, i32 106, i32 31] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 25, i32 94, i32 96, i32 105, i32 88, i32 134, i32 160, i32 49, i32 189, i32 50, i32 233, i32 44, i32 92, i32 210, i32 133, i32 186, i32 64, i32 100, i32 168, i32 116, i32 248, i32 14, i32 28, i32 179, i32 169, i32 105, i32 232, i32 30, i32 64, i32 100, i32 153, i32 119] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 108, i32 50, i32 79, i32 253, i32 187, i32 92, i32 187, i32 141, i32 100, i32 102, i32 74, i32 113, i32 31, i32 121, i32 163, i32 173, i32 141, i32 249, i32 212, i32 236, i32 207, i32 103, i32 112, i32 250, i32 5, i32 74, i32 15, i32 110, i32 175, i32 135, i32 10, i32 111] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 198, i32 54, i32 110, i32 108, i32 140, i32 36, i32 9, i32 96, i32 190, i32 38, i32 210, i32 76, i32 94, i32 23, i32 202, i32 95, i32 29, i32 204, i32 135, i32 232, i32 66, i32 106, i32 203, i32 203, i32 125, i32 146, i32 5, i32 53, i32 129, i32 19, i32 96, i32 107] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 244, i32 21, i32 205, i32 15, i32 10, i32 175, i32 78, i32 107, i32 81, i32 253, i32 20, i32 196, i32 46, i32 19, i32 134, i32 116, i32 68, i32 203, i32 102, i32 107, i32 182, i32 157, i32 116, i32 86, i32 50, i32 172, i32 141, i32 142, i32 140, i32 140, i32 140, i32 57] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 202, i32 89, i32 116, i32 26, i32 17, i32 239, i32 109, i32 247, i32 57, i32 92, i32 59, i32 31, i32 250, i32 227, i32 64, i32 65, i32 35, i32 158, i32 246, i32 209, i32 33, i32 162, i32 191, i32 173, i32 101, i32 66, i32 107, i32 89, i32 138, i32 232, i32 197, i32 127] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 100, i32 5, i32 122, i32 132, i32 74, i32 19, i32 195, i32 246, i32 176, i32 110, i32 154, i32 107, i32 83, i32 107, i32 50, i32 218, i32 217, i32 116, i32 117, i32 196, i32 186, i32 100, i32 61, i32 59, i32 8, i32 221, i32 16, i32 70, i32 239, i32 199, i32 144, i32 31] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 123, i32 47, i32 58, i32 206, i32 200, i32 161, i32 121, i32 60, i32 48, i32 18, i32 68, i32 40, i32 246, i32 188, i32 255, i32 253, i32 244, i32 192, i32 151, i32 176, i32 204, i32 195, i32 19, i32 122, i32 185, i32 154, i32 22, i32 228, i32 203, i32 76, i32 52, i32 99] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 78, i32 211, i32 45, i32 9, i32 51, i32 14, i32 210, i32 13, i32 190, i32 62, i32 231, i32 228, i32 170, i32 183, i32 0, i32 139, i32 232, i32 173, i32 170, i32 122, i32 141, i32 52, i32 40, i32 169, i32 129, i32 148, i32 197, i32 231, i32 66, i32 172, i32 71] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 36, i32 137, i32 122, i32 143, i32 181, i32 155, i32 240, i32 194, i32 3, i32 100, i32 208, i32 30, i32 245, i32 164, i32 178, i32 243, i32 116, i32 233, i32 26, i32 22, i32 253, i32 203, i32 21, i32 234, i32 235, i32 16, i32 108, i32 53, i32 209, i32 193, i32 166, i32 40] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 204, i32 213, i32 57, i32 252, i32 165, i32 164, i32 173, i32 50, i32 21, i32 206, i32 25, i32 232, i32 52, i32 43, i32 28, i32 96, i32 145, i32 252, i32 5, i32 169, i32 179, i32 220, i32 128, i32 41, i32 196, i32 32, i32 121, i32 6, i32 57, i32 192, i32 226, i32 34] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 187, i32 168, i32 225, i32 137, i32 112, i32 87, i32 24, i32 84, i32 60, i32 246, i32 13, i32 130, i32 18, i32 5, i32 135, i32 150, i32 6, i32 57, i32 227, i32 248, i32 179, i32 149, i32 229, i32 215, i32 38, i32 191, i32 9, i32 90, i32 148, i32 249, i32 28, i32 99] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 43, i32 140, i32 45, i32 154, i32 139, i32 132, i32 242, i32 86, i32 251, i32 173, i32 46, i32 127, i32 183, i32 252, i32 48, i32 225, i32 53, i32 137, i32 186, i32 77, i32 168, i32 109, i32 206, i32 140, i32 139, i32 48, i32 224, i32 218, i32 41, i32 24, i32 17, i32 23] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 25, i32 166, i32 90, i32 101, i32 147, i32 195, i32 181, i32 49, i32 34, i32 79, i32 243, i32 246, i32 15, i32 235, i32 40, i32 195, i32 124, i32 235, i32 206, i32 134, i32 236, i32 103, i32 118, i32 110, i32 53, i32 69, i32 123, i32 216, i32 107, i32 146, i32 1, i32 101] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 61, i32 213, i32 154, i32 100, i32 115, i32 54, i32 177, i32 214, i32 134, i32 152, i32 66, i32 63, i32 138, i32 241, i32 199, i32 245, i32 66, i32 168, i32 156, i32 82, i32 168, i32 220, i32 249, i32 36, i32 63, i32 74, i32 161, i32 164, i32 91, i32 232, i32 98, i32 26] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 197, i32 189, i32 200, i32 20, i32 213, i32 13, i32 235, i32 225, i32 165, i32 230, i32 131, i32 17, i32 9, i32 0, i32 29, i32 85, i32 131, i32 81, i32 126, i32 117, i32 0, i32 129, i32 185, i32 203, i32 216, i32 197, i32 229, i32 161, i32 217, i32 23, i32 109, i32 31] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 234, i32 249, i32 228, i32 233, i32 225, i32 82, i32 63, i32 81, i32 25, i32 13, i32 221, i32 217, i32 157, i32 147, i32 49, i32 135, i32 35, i32 9, i32 213, i32 131, i32 235, i32 146, i32 9, i32 118, i32 110, i32 227, i32 248, i32 192, i32 162, i32 102, i32 181, i32 54] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 58, i32 187, i32 57, i32 237, i32 50, i32 2, i32 231, i32 67, i32 122, i32 56, i32 20, i32 132, i32 227, i32 68, i32 210, i32 94, i32 148, i32 221, i32 120, i32 137, i32 85, i32 76, i32 115, i32 158, i32 225, i32 228, i32 62, i32 67, i32 208, i32 74, i32 222, i32 27] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 178, i32 231, i32 143, i32 227, i32 163, i32 197, i32 203, i32 114, i32 238, i32 121, i32 65, i32 248, i32 223, i32 238, i32 101, i32 197, i32 69, i32 119, i32 39, i32 60, i32 189, i32 88, i32 211, i32 117, i32 226, i32 4, i32 75, i32 187, i32 101, i32 243, i32 200, i32 15] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 36, i32 123, i32 147, i32 52, i32 181, i32 226, i32 116, i32 72, i32 205, i32 160, i32 11, i32 146, i32 151, i32 102, i32 57, i32 244, i32 176, i32 226, i32 93, i32 57, i32 106, i32 91, i32 69, i32 23, i32 120, i32 30, i32 219, i32 145, i32 129, i32 28, i32 249, i32 22] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 22, i32 223, i32 209, i32 90, i32 213, i32 233, i32 78, i32 88, i32 149, i32 147, i32 95, i32 81, i32 9, i32 195, i32 42, i32 201, i32 212, i32 85, i32 72, i32 121, i32 164, i32 163, i32 178, i32 195, i32 98, i32 170, i32 140, i32 232, i32 173, i32 71, i32 57, i32 27] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 70, i32 218, i32 158, i32 81, i32 58, i32 230, i32 209, i32 166, i32 187, i32 77, i32 123, i32 8, i32 190, i32 140, i32 213, i32 243, i32 63, i32 253, i32 247, i32 68, i32 128, i32 45, i32 83, i32 75, i32 208, i32 135, i32 104, i32 193, i32 181, i32 216, i32 247, i32 7] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 244, i32 16, i32 70, i32 190, i32 183, i32 210, i32 209, i32 206, i32 94, i32 118, i32 162, i32 215, i32 3, i32 220, i32 228, i32 129, i32 90, i32 246, i32 60, i32 222, i32 174, i32 122, i32 157, i32 33, i32 52, i32 165, i32 246, i32 169, i32 115, i32 226, i32 141, i32 96] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 250, i32 68, i32 113, i32 246, i32 65, i32 216, i32 198, i32 88, i32 19, i32 55, i32 235, i32 132, i32 15, i32 150, i32 199, i32 220, i32 200, i32 169, i32 122, i32 131, i32 178, i32 47, i32 49, i32 177, i32 26, i32 216, i32 152, i32 63, i32 17, i32 208, i32 49, i32 59] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 129, i32 213, i32 52, i32 22, i32 1, i32 163, i32 147, i32 234, i32 82, i32 148, i32 236, i32 147, i32 183, i32 129, i32 17, i32 45, i32 88, i32 249, i32 181, i32 10, i32 170, i32 79, i32 246, i32 46, i32 63, i32 54, i32 191, i32 51, i32 90, i32 231, i32 209, i32 8] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 207, i32 66, i32 174, i32 204, i32 181, i32 119, i32 57, i32 196, i32 91, i32 91, i32 208, i32 38, i32 89, i32 39, i32 208, i32 85, i32 113, i32 18, i32 157, i32 136, i32 61, i32 156, i32 234, i32 65, i32 106, i32 240, i32 80, i32 147, i32 147, i32 221, i32 71] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 111, i32 201, i32 81, i32 109, i32 28, i32 170, i32 245, i32 165, i32 144, i32 63, i32 20, i32 226, i32 110, i32 142, i32 100, i32 253, i32 172, i32 224, i32 78, i32 34, i32 229, i32 193, i32 188, i32 41, i32 10, i32 106, i32 158, i32 161, i32 96, i32 203, i32 47, i32 11] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 220, i32 57, i32 50, i32 243, i32 161, i32 68, i32 233, i32 197, i32 195, i32 120, i32 251, i32 149, i32 71, i32 52, i32 53, i32 52, i32 232, i32 37, i32 222, i32 147, i32 198, i32 180, i32 118, i32 109, i32 134, i32 19, i32 198, i32 233, i32 104, i32 181, i32 1, i32 99] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 31, i32 154, i32 82, i32 100, i32 151, i32 217, i32 28, i32 8, i32 81, i32 111, i32 38, i32 157, i32 170, i32 147, i32 51, i32 67, i32 250, i32 119, i32 233, i32 98, i32 155, i32 93, i32 24, i32 117, i32 235, i32 120, i32 247, i32 135, i32 143, i32 65, i32 180, i32 77] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 19, i32 168, i32 130, i32 62, i32 233, i32 19, i32 173, i32 235, i32 1, i32 202, i32 207, i32 218, i32 205, i32 247, i32 108, i32 199, i32 122, i32 220, i32 30, i32 110, i32 200, i32 78, i32 85, i32 98, i32 128, i32 234, i32 120, i32 12, i32 134, i32 185, i32 64, i32 81] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 39, i32 174, i32 211, i32 13, i32 76, i32 143, i32 52, i32 234, i32 125, i32 60, i32 229, i32 138, i32 207, i32 91, i32 146, i32 216, i32 48, i32 22, i32 180, i32 163, i32 117, i32 255, i32 235, i32 39, i32 200, i32 92, i32 108, i32 194, i32 238, i32 108, i32 33, i32 11] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 195, i32 186, i32 18, i32 83, i32 42, i32 170, i32 119, i32 173, i32 25, i32 120, i32 85, i32 138, i32 46, i32 96, i32 135, i32 194, i32 110, i32 145, i32 56, i32 145, i32 63, i32 122, i32 197, i32 36, i32 143, i32 81, i32 197, i32 222, i32 176, i32 83, i32 48, i32 86] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 254, i32 84, i32 18, i32 24, i32 202, i32 125, i32 165, i32 104, i32 67, i32 163, i32 109, i32 20, i32 42, i32 106, i32 165, i32 142, i32 50, i32 231, i32 99, i32 79, i32 227, i32 198, i32 68, i32 62, i32 171, i32 99, i32 202, i32 23, i32 134, i32 116, i32 63] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 30, i32 100, i32 193, i32 125, i32 82, i32 220, i32 19, i32 90, i32 161, i32 156, i32 78, i32 238, i32 153, i32 40, i32 187, i32 76, i32 238, i32 172, i32 169, i32 27, i32 137, i32 162, i32 56, i32 57, i32 123, i32 196, i32 15, i32 66, i32 230, i32 137, i32 237, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 243, i32 60, i32 140, i32 128, i32 131, i32 16, i32 138, i32 55, i32 80, i32 156, i32 180, i32 223, i32 63, i32 140, i32 247, i32 35, i32 7, i32 214, i32 255, i32 160, i32 130, i32 108, i32 117, i32 59, i32 228, i32 181, i32 187, i32 228, i32 230, i32 80, i32 240, i32 8] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 98, i32 238, i32 117, i32 72, i32 146, i32 51, i32 242, i32 244, i32 173, i32 21, i32 122, i32 161, i32 1, i32 70, i32 169, i32 50, i32 6, i32 136, i32 182, i32 54, i32 71, i32 53, i32 185, i32 180, i32 66, i32 133, i32 118, i32 240, i32 72, i32 0, i32 144, i32 56] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 81, i32 21, i32 157, i32 195, i32 149, i32 209, i32 57, i32 187, i32 100, i32 157, i32 21, i32 129, i32 193, i32 104, i32 208, i32 182, i32 164, i32 44, i32 125, i32 94, i32 2, i32 57, i32 0, i32 224, i32 59, i32 164, i32 204, i32 202, i32 29, i32 129, i32 36, i32 16] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 231, i32 41, i32 249, i32 55, i32 217, i32 70, i32 90, i32 205, i32 112, i32 254, i32 77, i32 91, i32 191, i32 165, i32 207, i32 145, i32 244, i32 239, i32 238, i32 138, i32 41, i32 208, i32 231, i32 196, i32 37, i32 146, i32 138, i32 255, i32 54, i32 252, i32 228, i32 73] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 189, i32 0, i32 185, i32 4, i32 125, i32 53, i32 252, i32 235, i32 208, i32 11, i32 5, i32 50, i32 82, i32 122, i32 137, i32 36, i32 117, i32 80, i32 225, i32 99, i32 2, i32 130, i32 142, i32 231, i32 133, i32 12, i32 242, i32 86, i32 68, i32 55, i32 131, i32 37] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 143, i32 161, i32 206, i32 203, i32 96, i32 218, i32 18, i32 2, i32 30, i32 41, i32 57, i32 42, i32 3, i32 183, i32 235, i32 119, i32 64, i32 234, i32 201, i32 43, i32 44, i32 213, i32 125, i32 126, i32 44, i32 199, i32 90, i32 253, i32 255, i32 196, i32 209, i32 98] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 29, i32 136, i32 152, i32 91, i32 78, i32 252, i32 65, i32 36, i32 5, i32 230, i32 80, i32 43, i32 174, i32 150, i32 81, i32 217, i32 107, i32 114, i32 178, i32 51, i32 66, i32 152, i32 104, i32 187, i32 16, i32 90, i32 122, i32 140, i32 157, i32 7, i32 180, i32 5] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 47, i32 97, i32 159, i32 215, i32 168, i32 63, i32 131, i32 140, i32 16, i32 105, i32 144, i32 230, i32 207, i32 210, i32 99, i32 163, i32 228, i32 84, i32 126, i32 229, i32 105, i32 19, i32 28, i32 144, i32 87, i32 170, i32 233, i32 83, i32 34, i32 67, i32 41, i32 35] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 229, i32 28, i32 248, i32 10, i32 253, i32 45, i32 126, i32 245, i32 245, i32 112, i32 125, i32 65, i32 107, i32 17, i32 254, i32 190, i32 153, i32 209, i32 85, i32 41, i32 49, i32 191, i32 192, i32 151, i32 108, i32 213, i32 53, i32 204, i32 94, i32 139, i32 217, i32 105] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 142, i32 78, i32 159, i32 37, i32 248, i32 129, i32 84, i32 45, i32 14, i32 213, i32 84, i32 129, i32 155, i32 166, i32 146, i32 206, i32 75, i32 233, i32 143, i32 36, i32 59, i32 202, i32 224, i32 68, i32 171, i32 54, i32 254, i32 251, i32 135, i32 212, i32 38, i32 62] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 15, i32 147, i32 156, i32 17, i32 231, i32 219, i32 241, i32 240, i32 133, i32 67, i32 40, i32 21, i32 55, i32 221, i32 222, i32 39, i32 223, i32 173, i32 62, i32 73, i32 79, i32 224, i32 91, i32 246, i32 128, i32 89, i32 21, i32 60, i32 133, i32 183, i32 62, i32 18] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 245, i32 255, i32 204, i32 240, i32 180, i32 18, i32 3, i32 95, i32 201, i32 132, i32 203, i32 29, i32 23, i32 224, i32 188, i32 204, i32 3, i32 98, i32 169, i32 139, i32 148, i32 166, i32 170, i32 24, i32 203, i32 39, i32 141, i32 73, i32 166, i32 23, i32 21, i32 7] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 217, i32 182, i32 212, i32 157, i32 212, i32 106, i32 175, i32 112, i32 7, i32 44, i32 16, i32 158, i32 189, i32 17, i32 173, i32 228, i32 38, i32 51, i32 112, i32 146, i32 120, i32 28, i32 116, i32 159, i32 117, i32 96, i32 86, i32 244, i32 57, i32 168, i32 168, i32 98] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 59, i32 191, i32 85, i32 53, i32 97, i32 139, i32 68, i32 151, i32 232, i32 58, i32 85, i32 193, i32 200, i32 59, i32 253, i32 149, i32 41, i32 17, i32 96, i32 150, i32 30, i32 203, i32 17, i32 157, i32 194, i32 3, i32 138, i32 27, i32 198, i32 214, i32 69, i32 61] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 126, i32 14, i32 80, i32 178, i32 204, i32 13, i32 107, i32 166, i32 113, i32 91, i32 66, i32 237, i32 189, i32 175, i32 172, i32 240, i32 252, i32 18, i32 162, i32 63, i32 78, i32 218, i32 232, i32 17, i32 243, i32 35, i32 225, i32 4, i32 98, i32 3, i32 28, i32 78] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 200, i32 177, i32 27, i32 111, i32 115, i32 97, i32 61, i32 39, i32 13, i32 125, i32 122, i32 37, i32 95, i32 115, i32 14, i32 47, i32 147, i32 246, i32 36, i32 216, i32 79, i32 144, i32 172, i32 162, i32 98, i32 10, i32 240, i32 97, i32 217, i32 8, i32 89, i32 106] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 111, i32 45, i32 85, i32 248, i32 47, i32 142, i32 240, i32 24, i32 59, i32 234, i32 221, i32 38, i32 114, i32 209, i32 245, i32 254, i32 229, i32 184, i32 230, i32 211, i32 16, i32 72, i32 70, i32 73, i32 58, i32 159, i32 94, i32 69, i32 107, i32 144, i32 232, i32 127] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 211, i32 118, i32 105, i32 51, i32 123, i32 185, i32 64, i32 112, i32 238, i32 166, i32 41, i32 107, i32 221, i32 208, i32 93, i32 141, i32 193, i32 62, i32 74, i32 234, i32 55, i32 177, i32 3, i32 2, i32 3, i32 53, i32 241, i32 40, i32 157, i32 255, i32 0, i32 19] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 122, i32 219, i32 18, i32 210, i32 138, i32 130, i32 3, i32 27, i32 30, i32 175, i32 249, i32 75, i32 156, i32 190, i32 174, i32 124, i32 228, i32 148, i32 42, i32 35, i32 179, i32 98, i32 134, i32 231, i32 253, i32 35, i32 170, i32 153, i32 189, i32 43, i32 17, i32 108] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 141, i32 166, i32 213, i32 172, i32 157, i32 204, i32 104, i32 117, i32 127, i32 195, i32 77, i32 75, i32 221, i32 108, i32 187, i32 17, i32 90, i32 96, i32 229, i32 189, i32 125, i32 39, i32 139, i32 218, i32 180, i32 149, i32 246, i32 3, i32 39, i32 164, i32 146, i32 63] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 34, i32 214, i32 181, i32 23, i32 132, i32 191, i32 18, i32 204, i32 35, i32 20, i32 74, i32 223, i32 20, i32 49, i32 188, i32 161, i32 172, i32 110, i32 171, i32 250, i32 87, i32 17, i32 83, i32 179, i32 39, i32 230, i32 249, i32 71, i32 51, i32 68, i32 52, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 121, i32 252, i32 166, i32 180, i32 11, i32 53, i32 32, i32 201, i32 77, i32 34, i32 132, i32 196, i32 169, i32 32, i32 236, i32 137, i32 148, i32 186, i32 102, i32 86, i32 72, i32 185, i32 135, i32 127, i32 202, i32 30, i32 6, i32 237, i32 165, i32 85, i32 89, i32 41] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 86, i32 225, i32 245, i32 241, i32 213, i32 171, i32 168, i32 43, i32 174, i32 137, i32 243, i32 207, i32 86, i32 159, i32 242, i32 75, i32 49, i32 188, i32 24, i32 169, i32 6, i32 91, i32 190, i32 180, i32 97, i32 248, i32 178, i32 6, i32 156, i32 129, i32 171, i32 76] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 31, i32 104, i32 118, i32 1, i32 22, i32 56, i32 43, i32 15, i32 119, i32 151, i32 146, i32 103, i32 78, i32 134, i32 106, i32 139, i32 229, i32 232, i32 12, i32 247, i32 54, i32 57, i32 181, i32 51, i32 230, i32 207, i32 94, i32 189, i32 24, i32 251, i32 16, i32 31] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 131, i32 240, i32 13, i32 99, i32 239, i32 83, i32 107, i32 181, i32 107, i32 249, i32 131, i32 207, i32 222, i32 4, i32 34, i32 155, i32 44, i32 10, i32 224, i32 165, i32 216, i32 199, i32 156, i32 165, i32 163, i32 246, i32 111, i32 207, i32 144, i32 107, i32 104, i32 124] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 21, i32 215, i32 127, i32 26, i32 213, i32 33, i32 88, i32 196, i32 24, i32 165, i32 240, i32 204, i32 115, i32 168, i32 253, i32 250, i32 24, i32 209, i32 3, i32 145, i32 141, i32 82, i32 210, i32 163, i32 164, i32 211, i32 177, i32 234, i32 29, i32 15, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 204, i32 72, i32 131, i32 144, i32 229, i32 253, i32 63, i32 132, i32 170, i32 249, i32 139, i32 130, i32 89, i32 36, i32 52, i32 104, i32 79, i32 28, i32 35, i32 217, i32 204, i32 113, i32 225, i32 127, i32 140, i32 175, i32 241, i32 238, i32 0, i32 182, i32 160, i32 119] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 245, i32 26, i32 97, i32 247, i32 55, i32 157, i32 0, i32 244, i32 242, i32 105, i32 111, i32 75, i32 1, i32 133, i32 25, i32 69, i32 77, i32 127, i32 2, i32 124, i32 106, i32 5, i32 71, i32 108, i32 31, i32 129, i32 32, i32 212, i32 232, i32 80, i32 39, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 44, i32 58, i32 229, i32 173, i32 244, i32 221, i32 45, i32 247, i32 92, i32 68, i32 181, i32 91, i32 33, i32 163, i32 137, i32 95, i32 150, i32 69, i32 202, i32 77, i32 164, i32 33, i32 153, i32 112, i32 218, i32 196, i32 196, i32 160, i32 229, i32 244, i32 236, i32 10] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 104, i32 33, i32 101, i32 233, i32 8, i32 160, i32 11, i32 106, i32 74, i32 186, i32 181, i32 128, i32 175, i32 208, i32 27, i32 197, i32 245, i32 75, i32 115, i32 80, i32 96, i32 45, i32 113, i32 105, i32 97, i32 14, i32 192, i32 32, i32 64, i32 48, i32 25] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 208, i32 117, i32 87, i32 59, i32 235, i32 92, i32 20, i32 86, i32 80, i32 201, i32 79, i32 184, i32 184, i32 30, i32 163, i32 244, i32 171, i32 245, i32 169, i32 32, i32 21, i32 148, i32 130, i32 218, i32 150, i32 28, i32 155, i32 89, i32 140, i32 255, i32 244, i32 81] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 193, i32 58, i32 134, i32 215, i32 176, i32 6, i32 132, i32 127, i32 27, i32 189, i32 212, i32 7, i32 120, i32 128, i32 46, i32 177, i32 180, i32 238, i32 82, i32 56, i32 238, i32 154, i32 249, i32 246, i32 243, i32 65, i32 110, i32 212, i32 136, i32 149, i32 172, i32 53] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 65, i32 151, i32 191, i32 113, i32 106, i32 155, i32 114, i32 236, i32 243, i32 248, i32 107, i32 230, i32 14, i32 108, i32 105, i32 165, i32 47, i32 104, i32 82, i32 216, i32 97, i32 129, i32 192, i32 99, i32 63, i32 166, i32 60, i32 19, i32 144, i32 230, i32 141, i32 86] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 232, i32 57, i32 48, i32 119, i32 35, i32 177, i32 253, i32 27, i32 61, i32 62, i32 116, i32 77, i32 127, i32 174, i32 91, i32 58, i32 180, i32 101, i32 14, i32 58, i32 67, i32 220, i32 220, i32 65, i32 71, i32 230, i32 232, i32 146, i32 9, i32 34, i32 72, i32 76] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 133, i32 87, i32 159, i32 181, i32 200, i32 6, i32 178, i32 159, i32 71, i32 63, i32 240, i32 250, i32 230, i32 169, i32 177, i32 155, i32 111, i32 150, i32 125, i32 249, i32 164, i32 101, i32 9, i32 117, i32 50, i32 166, i32 108, i32 127, i32 71, i32 75, i32 47, i32 79] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 52, i32 233, i32 89, i32 147, i32 157, i32 38, i32 128, i32 84, i32 242, i32 204, i32 60, i32 194, i32 37, i32 133, i32 227, i32 106, i32 193, i32 98, i32 4, i32 167, i32 8, i32 50, i32 109, i32 161, i32 57, i32 132, i32 138, i32 59, i32 135, i32 95, i32 17, i32 19] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 218, i32 3, i32 52, i32 102, i32 196, i32 12, i32 115, i32 110, i32 188, i32 36, i32 181, i32 249, i32 112, i32 129, i32 82, i32 233, i32 244, i32 124, i32 35, i32 221, i32 159, i32 184, i32 70, i32 239, i32 29, i32 34, i32 85, i32 125, i32 113, i32 196, i32 66, i32 51] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 197, i32 55, i32 105, i32 91, i32 168, i32 198, i32 157, i32 164, i32 252, i32 97, i32 110, i32 104, i32 70, i32 234, i32 215, i32 28, i32 103, i32 210, i32 125, i32 250, i32 241, i32 204, i32 84, i32 141, i32 54, i32 53, i32 201, i32 0, i32 223, i32 108, i32 103, i32 80] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 154, i32 77, i32 66, i32 41, i32 93, i32 164, i32 107, i32 111, i32 168, i32 138, i32 77, i32 145, i32 123, i32 210, i32 223, i32 54, i32 239, i32 1, i32 34, i32 197, i32 204, i32 141, i32 235, i32 88, i32 61, i32 179, i32 80, i32 252, i32 139, i32 151, i32 150, i32 51] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 147, i32 51, i32 7, i32 200, i32 74, i32 202, i32 208, i32 177, i32 171, i32 189, i32 221, i32 167, i32 124, i32 172, i32 62, i32 69, i32 203, i32 204, i32 7, i32 145, i32 191, i32 53, i32 157, i32 203, i32 125, i32 18, i32 60, i32 17, i32 89, i32 19, i32 207, i32 92] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 69, i32 184, i32 65, i32 215, i32 171, i32 7, i32 21, i32 0, i32 142, i32 206, i32 223, i32 178, i32 67, i32 92, i32 1, i32 220, i32 244, i32 1, i32 81, i32 149, i32 16, i32 90, i32 246, i32 36, i32 36, i32 160, i32 25, i32 58, i32 9, i32 42, i32 170, i32 63] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 220, i32 142, i32 235, i32 198, i32 191, i32 221, i32 17, i32 123, i32 231, i32 71, i32 230, i32 206, i32 231, i32 182, i32 197, i32 232, i32 138, i32 220, i32 75, i32 87, i32 21, i32 59, i32 102, i32 202, i32 137, i32 163, i32 253, i32 172, i32 13, i32 225, i32 29, i32 122] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 137, i32 239, i32 191, i32 3, i32 117, i32 208, i32 41, i32 80, i32 203, i32 125, i32 214, i32 190, i32 173, i32 95, i32 123, i32 0, i32 50, i32 170, i32 152, i32 237, i32 63, i32 143, i32 146, i32 203, i32 129, i32 86, i32 1, i32 99, i32 100, i32 163, i32 56, i32 57] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 164, i32 214, i32 80, i32 180, i32 170, i32 93, i32 100, i32 100, i32 118, i32 46, i32 161, i32 166, i32 179, i32 184, i32 124, i32 122, i32 86, i32 245, i32 92, i32 78, i32 132, i32 92, i32 251, i32 221, i32 202, i32 72, i32 139, i32 72, i32 185, i32 186, i32 52] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 197, i32 227, i32 232, i32 174, i32 23, i32 39, i32 227, i32 100, i32 96, i32 113, i32 71, i32 41, i32 2, i32 15, i32 146, i32 93, i32 16, i32 147, i32 200, i32 14, i32 161, i32 237, i32 186, i32 169, i32 150, i32 28, i32 197, i32 118, i32 48, i32 205, i32 249, i32 48] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 149, i32 176, i32 189, i32 140, i32 188, i32 167, i32 79, i32 126, i32 253, i32 78, i32 58, i32 191, i32 95, i32 4, i32 121, i32 128, i32 43, i32 90, i32 159, i32 79, i32 104, i32 33, i32 25, i32 113, i32 198, i32 32, i32 1, i32 66, i32 170, i32 223, i32 174, i32 44] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 144, i32 110, i32 126, i32 75, i32 113, i32 147, i32 192, i32 114, i32 237, i32 235, i32 113, i32 36, i32 151, i32 38, i32 156, i32 254, i32 203, i32 62, i32 89, i32 25, i32 168, i32 15, i32 117, i32 125, i32 190, i32 24, i32 230, i32 150, i32 30, i32 149, i32 112, i32 96] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 137, i32 102, i32 62, i32 29, i32 76, i32 95, i32 254, i32 192, i32 4, i32 67, i32 214, i32 68, i32 25, i32 181, i32 173, i32 199, i32 34, i32 220, i32 113, i32 40, i32 100, i32 222, i32 65, i32 56, i32 39, i32 143, i32 44, i32 107, i32 8, i32 184, i32 184, i32 123] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 61, i32 112, i32 39, i32 157, i32 217, i32 175, i32 177, i32 39, i32 175, i32 227, i32 93, i32 30, i32 58, i32 48, i32 84, i32 97, i32 96, i32 232, i32 195, i32 38, i32 58, i32 188, i32 126, i32 245, i32 129, i32 221, i32 100, i32 1, i32 4, i32 235, i32 192, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 218, i32 44, i32 164, i32 209, i32 161, i32 195, i32 92, i32 110, i32 50, i32 7, i32 31, i32 184, i32 14, i32 25, i32 158, i32 153, i32 41, i32 51, i32 154, i32 174, i32 122, i32 237, i32 104, i32 66, i32 105, i32 124, i32 7, i32 179, i32 56, i32 44, i32 246, i32 61] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 100, i32 170, i32 181, i32 136, i32 121, i32 101, i32 56, i32 140, i32 148, i32 214, i32 98, i32 55, i32 125, i32 100, i32 205, i32 58, i32 235, i32 255, i32 232, i32 129, i32 9, i32 199, i32 106, i32 80, i32 9, i32 13, i32 40, i32 3, i32 13, i32 154, i32 147, i32 10] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 66, i32 163, i32 241, i32 197, i32 180, i32 15, i32 216, i32 200, i32 141, i32 21, i32 49, i32 189, i32 248, i32 7, i32 139, i32 205, i32 8, i32 138, i32 251, i32 24, i32 7, i32 254, i32 142, i32 82, i32 134, i32 239, i32 190, i32 236, i32 73, i32 82, i32 153, i32 8] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 15, i32 169, i32 213, i32 1, i32 170, i32 72, i32 79, i32 40, i32 102, i32 50, i32 26, i32 186, i32 124, i32 234, i32 17, i32 128, i32 23, i32 24, i32 155, i32 86, i32 136, i32 37, i32 6, i32 105, i32 18, i32 44, i32 234, i32 86, i32 105, i32 65, i32 36, i32 25] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 222, i32 33, i32 240, i32 218, i32 138, i32 251, i32 177, i32 184, i32 205, i32 200, i32 106, i32 130, i32 25, i32 115, i32 219, i32 199, i32 207, i32 136, i32 235, i32 150, i32 238, i32 111, i32 251, i32 6, i32 210, i32 205, i32 125, i32 123, i32 18, i32 40, i32 142, i32 12] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 147, i32 68, i32 151, i32 206, i32 40, i32 255, i32 58, i32 64, i32 196, i32 245, i32 246, i32 155, i32 244, i32 107, i32 7, i32 132, i32 251, i32 152, i32 216, i32 236, i32 140, i32 3, i32 87, i32 236, i32 73, i32 237, i32 99, i32 182, i32 170, i32 255, i32 152, i32 40] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 61, i32 22, i32 53, i32 243, i32 70, i32 188, i32 179, i32 244, i32 198, i32 182, i32 79, i32 250, i32 244, i32 160, i32 19, i32 230, i32 87, i32 69, i32 147, i32 185, i32 188, i32 214, i32 89, i32 231, i32 119, i32 148, i32 108, i32 171, i32 150, i32 59, i32 79, i32 9] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 90, i32 247, i32 107, i32 1, i32 18, i32 79, i32 81, i32 193, i32 112, i32 132, i32 148, i32 71, i32 178, i32 1, i32 108, i32 113, i32 215, i32 204, i32 23, i32 102, i32 15, i32 89, i32 93, i32 93, i32 16, i32 1, i32 87, i32 17, i32 245, i32 221, i32 226, i32 52] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 217, i32 31, i32 92, i32 88, i32 172, i32 139, i32 3, i32 210, i32 195, i32 133, i32 15, i32 58, i32 195, i32 127, i32 109, i32 142, i32 134, i32 205, i32 82, i32 116, i32 143, i32 85, i32 119, i32 23, i32 183, i32 142, i32 183, i32 136, i32 234, i32 218, i32 27] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 182, i32 234, i32 14, i32 64, i32 147, i32 32, i32 121, i32 53, i32 106, i32 97, i32 132, i32 90, i32 7, i32 109, i32 249, i32 119, i32 111, i32 237, i32 105, i32 28, i32 13, i32 37, i32 118, i32 204, i32 240, i32 219, i32 187, i32 197, i32 173, i32 226, i32 38, i32 87] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 207, i32 232, i32 14, i32 107, i32 150, i32 125, i32 237, i32 39, i32 209, i32 60, i32 169, i32 217, i32 80, i32 169, i32 152, i32 132, i32 94, i32 134, i32 239, i32 214, i32 240, i32 248, i32 14, i32 137, i32 5, i32 47, i32 217, i32 95, i32 21, i32 95, i32 115, i32 121] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 200, i32 92, i32 22, i32 254, i32 237, i32 159, i32 38, i32 86, i32 246, i32 75, i32 159, i32 167, i32 10, i32 133, i32 254, i32 165, i32 140, i32 135, i32 221, i32 152, i32 206, i32 78, i32 195, i32 88, i32 85, i32 178, i32 123, i32 61, i32 216, i32 107, i32 181, i32 76] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 56, i32 160, i32 21, i32 250, i32 167, i32 180, i32 143, i32 235, i32 196, i32 134, i32 155, i32 48, i32 165, i32 94, i32 77, i32 234, i32 138, i32 154, i32 159, i32 26, i32 216, i32 91, i32 83, i32 20, i32 25, i32 37, i32 99, i32 180, i32 111, i32 31, i32 93] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 172, i32 143, i32 188, i32 30, i32 125, i32 139, i32 90, i32 11, i32 141, i32 175, i32 118, i32 46, i32 113, i32 227, i32 59, i32 111, i32 83, i32 47, i32 62, i32 144, i32 149, i32 212, i32 53, i32 20, i32 79, i32 140, i32 60, i32 206, i32 87, i32 28, i32 118, i32 73] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 168, i32 80, i32 225, i32 97, i32 107, i32 87, i32 53, i32 235, i32 68, i32 11, i32 12, i32 110, i32 249, i32 37, i32 128, i32 116, i32 242, i32 143, i32 111, i32 122, i32 62, i32 127, i32 45, i32 243, i32 78, i32 9, i32 101, i32 16, i32 94, i32 3, i32 37, i32 50] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 169, i32 96, i32 220, i32 15, i32 100, i32 229, i32 29, i32 226, i32 141, i32 79, i32 121, i32 47, i32 14, i32 36, i32 2, i32 0, i32 5, i32 119, i32 67, i32 37, i32 61, i32 106, i32 199, i32 183, i32 191, i32 4, i32 8, i32 101, i32 244, i32 57, i32 75, i32 101] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 150, i32 25, i32 18, i32 107, i32 106, i32 183, i32 227, i32 220, i32 69, i32 155, i32 219, i32 180, i32 168, i32 174, i32 220, i32 168, i32 20, i32 68, i32 101, i32 98, i32 206, i32 52, i32 154, i32 132, i32 24, i32 18, i32 1, i32 241, i32 226, i32 123, i32 206, i32 80] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 65, i32 33, i32 48, i32 83, i32 27, i32 71, i32 1, i32 183, i32 24, i32 216, i32 130, i32 87, i32 189, i32 163, i32 96, i32 240, i32 50, i32 246, i32 91, i32 240, i32 48, i32 136, i32 145, i32 89, i32 253, i32 144, i32 162, i32 185, i32 85, i32 147, i32 33, i32 52] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 151, i32 103, i32 158, i32 235, i32 106, i32 249, i32 110, i32 214, i32 115, i32 232, i32 107, i32 41, i32 236, i32 99, i32 130, i32 0, i32 168, i32 153, i32 28, i32 29, i32 48, i32 200, i32 144, i32 82, i32 144, i32 182, i32 106, i32 128, i32 78, i32 255, i32 75, i32 81] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 15, i32 125, i32 99, i32 140, i32 110, i32 92, i32 222, i32 48, i32 223, i32 101, i32 250, i32 46, i32 176, i32 163, i32 37, i32 5, i32 84, i32 189, i32 37, i32 186, i32 6, i32 174, i32 223, i32 139, i32 217, i32 27, i32 234, i32 56, i32 179, i32 5, i32 22, i32 9] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 199, i32 140, i32 191, i32 100, i32 40, i32 173, i32 248, i32 165, i32 90, i32 111, i32 201, i32 186, i32 213, i32 127, i32 213, i32 214, i32 189, i32 102, i32 47, i32 61, i32 170, i32 84, i32 246, i32 186, i32 50, i32 34, i32 154, i32 30, i32 82, i32 5, i32 244, i32 29] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 170, i32 31, i32 187, i32 235, i32 254, i32 228, i32 135, i32 252, i32 177, i32 44, i32 183, i32 136, i32 244, i32 198, i32 185, i32 245, i32 36, i32 70, i32 242, i32 165, i32 159, i32 143, i32 138, i32 147, i32 112, i32 105, i32 212, i32 86, i32 236, i32 253, i32 6, i32 70] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 78, i32 102, i32 207, i32 78, i32 52, i32 206, i32 12, i32 217, i32 166, i32 80, i32 214, i32 94, i32 149, i32 175, i32 233, i32 88, i32 250, i32 238, i32 155, i32 184, i32 165, i32 15, i32 53, i32 224, i32 67, i32 130, i32 109, i32 101, i32 230, i32 217, i32 0, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 123, i32 117, i32 58, i32 252, i32 100, i32 211, i32 41, i32 126, i32 221, i32 73, i32 154, i32 89, i32 83, i32 191, i32 180, i32 167, i32 82, i32 179, i32 5, i32 171, i32 195, i32 175, i32 22, i32 26, i32 133, i32 66, i32 50, i32 162, i32 134, i32 250, i32 57, i32 67] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 14, i32 75, i32 163, i32 99, i32 138, i32 254, i32 165, i32 88, i32 241, i32 19, i32 189, i32 157, i32 170, i32 127, i32 118, i32 64, i32 112, i32 129, i32 16, i32 117, i32 153, i32 187, i32 190, i32 11, i32 22, i32 233, i32 186, i32 98, i32 52, i32 204, i32 7, i32 109] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 195, i32 241, i32 198, i32 147, i32 101, i32 238, i32 11, i32 188, i32 234, i32 20, i32 240, i32 193, i32 248, i32 132, i32 137, i32 194, i32 201, i32 215, i32 234, i32 52, i32 202, i32 167, i32 196, i32 153, i32 213, i32 80, i32 105, i32 203, i32 214, i32 33, i32 99, i32 124] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 153, i32 235, i32 124, i32 49, i32 115, i32 100, i32 103, i32 127, i32 12, i32 102, i32 170, i32 140, i32 105, i32 145, i32 226, i32 38, i32 211, i32 35, i32 226, i32 118, i32 93, i32 50, i32 82, i32 223, i32 93, i32 197, i32 143, i32 183, i32 124, i32 132, i32 179, i32 112] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 235, i32 1, i32 199, i32 54, i32 151, i32 78, i32 182, i32 171, i32 95, i32 13, i32 44, i32 186, i32 103, i32 100, i32 85, i32 222, i32 188, i32 255, i32 166, i32 236, i32 4, i32 211, i32 141, i32 57, i32 86, i32 94, i32 238, i32 248, i32 228, i32 46, i32 51, i32 98] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 239, i32 184, i32 159, i32 200, i32 75, i32 167, i32 253, i32 33, i32 73, i32 155, i32 146, i32 53, i32 130, i32 214, i32 10, i32 155, i32 242, i32 121, i32 241, i32 71, i32 47, i32 106, i32 126, i32 159, i32 207, i32 24, i32 2, i32 60, i32 251, i32 27, i32 62] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 47, i32 139, i32 200, i32 64, i32 81, i32 209, i32 172, i32 26, i32 11, i32 228, i32 169, i32 162, i32 66, i32 33, i32 25, i32 47, i32 123, i32 151, i32 191, i32 247, i32 87, i32 109, i32 63, i32 61, i32 79, i32 15, i32 226, i32 178, i32 129, i32 0, i32 158, i32 123] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 140, i32 133, i32 43, i32 196, i32 252, i32 241, i32 171, i32 232, i32 121, i32 34, i32 196, i32 132, i32 23, i32 58, i32 250, i32 134, i32 166, i32 125, i32 249, i32 243, i32 111, i32 3, i32 87, i32 32, i32 77, i32 121, i32 249, i32 110, i32 113, i32 84, i32 56, i32 9] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 64, i32 41, i32 116, i32 168, i32 47, i32 94, i32 249, i32 121, i32 164, i32 243, i32 62, i32 185, i32 253, i32 51, i32 49, i32 172, i32 154, i32 105, i32 136, i32 30, i32 119, i32 33, i32 45, i32 243, i32 145, i32 82, i32 38, i32 21, i32 178, i32 166, i32 207, i32 126] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 198, i32 32, i32 71, i32 108, i32 164, i32 125, i32 203, i32 99, i32 234, i32 91, i32 3, i32 223, i32 62, i32 136, i32 129, i32 109, i32 206, i32 7, i32 66, i32 24, i32 96, i32 126, i32 123, i32 85, i32 254, i32 106, i32 243, i32 218, i32 92, i32 139, i32 149, i32 16] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 98, i32 228, i32 13, i32 3, i32 180, i32 215, i32 205, i32 250, i32 189, i32 70, i32 223, i32 147, i32 113, i32 16, i32 44, i32 168, i32 59, i32 182, i32 9, i32 5, i32 112, i32 132, i32 67, i32 41, i32 168, i32 89, i32 245, i32 142, i32 16, i32 228, i32 215, i32 32] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 87, i32 130, i32 28, i32 171, i32 191, i32 98, i32 112, i32 232, i32 196, i32 207, i32 240, i32 40, i32 110, i32 22, i32 60, i32 8, i32 120, i32 137, i32 133, i32 70, i32 15, i32 246, i32 127, i32 207, i32 203, i32 126, i32 184, i32 37, i32 233, i32 90, i32 250, i32 3] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 251, i32 149, i32 146, i32 99, i32 80, i32 252, i32 98, i32 240, i32 164, i32 94, i32 140, i32 24, i32 194, i32 23, i32 36, i32 183, i32 120, i32 194, i32 169, i32 231, i32 106, i32 50, i32 214, i32 41, i32 133, i32 175, i32 203, i32 141, i32 145, i32 19, i32 218, i32 107] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 54, i32 10, i32 194, i32 182, i32 75, i32 165, i32 93, i32 7, i32 23, i32 65, i32 49, i32 95, i32 98, i32 70, i32 248, i32 146, i32 249, i32 102, i32 72, i32 115, i32 166, i32 151, i32 13, i32 125, i32 136, i32 238, i32 98, i32 177, i32 3, i32 168, i32 63, i32 44] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 74, i32 177, i32 112, i32 138, i32 169, i32 232, i32 99, i32 121, i32 0, i32 226, i32 37, i32 22, i32 202, i32 75, i32 15, i32 164, i32 102, i32 173, i32 25, i32 159, i32 136, i32 103, i32 12, i32 139, i32 194, i32 74, i32 91, i32 43, i32 109, i32 149, i32 175, i32 25] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 157, i32 182, i32 204, i32 96, i32 180, i32 114, i32 79, i32 23, i32 105, i32 90, i32 74, i32 104, i32 52, i32 171, i32 161, i32 69, i32 50, i32 60, i32 131, i32 135, i32 114, i32 48, i32 84, i32 119, i32 104, i32 174, i32 251, i32 181, i32 139, i32 34, i32 94] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 241, i32 185, i32 135, i32 53, i32 197, i32 187, i32 185, i32 207, i32 245, i32 214, i32 205, i32 213, i32 12, i32 124, i32 14, i32 230, i32 144, i32 52, i32 251, i32 81, i32 66, i32 30, i32 109, i32 172, i32 154, i32 70, i32 196, i32 151, i32 41, i32 50, i32 191, i32 69] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 102, i32 158, i32 198, i32 36, i32 192, i32 237, i32 165, i32 93, i32 136, i32 212, i32 240, i32 115, i32 151, i32 123, i32 234, i32 127, i32 66, i32 255, i32 33, i32 160, i32 155, i32 47, i32 154, i32 253, i32 83, i32 87, i32 7, i32 132, i32 72, i32 136, i32 157, i32 82] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 198, i32 150, i32 72, i32 52, i32 42, i32 6, i32 175, i32 148, i32 61, i32 244, i32 26, i32 207, i32 242, i32 192, i32 33, i32 194, i32 66, i32 94, i32 200, i32 47, i32 53, i32 162, i32 62, i32 41, i32 250, i32 12, i32 132, i32 229, i32 137, i32 114, i32 124, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 50, i32 101, i32 3, i32 229, i32 137, i32 166, i32 110, i32 179, i32 91, i32 142, i32 202, i32 235, i32 254, i32 34, i32 86, i32 139, i32 93, i32 20, i32 75, i32 77, i32 249, i32 190, i32 181, i32 245, i32 230, i32 92, i32 123, i32 139, i32 244, i32 19, i32 17, i32 52] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 198, i32 34, i32 21, i32 226, i32 156, i32 96, i32 162, i32 25, i32 217, i32 39, i32 174, i32 55, i32 78, i32 166, i32 201, i32 128, i32 166, i32 145, i32 143, i32 18, i32 73, i32 229, i32 0, i32 24, i32 71, i32 209, i32 215, i32 40, i32 34, i32 99, i32 57] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 232, i32 226, i32 0, i32 126, i32 242, i32 158, i32 30, i32 153, i32 57, i32 149, i32 4, i32 189, i32 30, i32 103, i32 123, i32 178, i32 38, i32 172, i32 230, i32 170, i32 226, i32 70, i32 213, i32 228, i32 232, i32 134, i32 189, i32 171, i32 124, i32 85, i32 89, i32 111] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 36, i32 100, i32 110, i32 155, i32 53, i32 113, i32 120, i32 206, i32 51, i32 3, i32 33, i32 51, i32 54, i32 241, i32 115, i32 155, i32 185, i32 21, i32 139, i32 44, i32 105, i32 207, i32 77, i32 237, i32 79, i32 77, i32 87, i32 20, i32 19, i32 130, i32 164, i32 77] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 110, i32 10, i32 164, i32 89, i32 7, i32 23, i32 242, i32 107, i32 74, i32 31, i32 110, i32 246, i32 181, i32 188, i32 98, i32 228, i32 182, i32 218, i32 162, i32 147, i32 188, i32 41, i32 5, i32 210, i32 210, i32 115, i32 70, i32 3, i32 22, i32 64, i32 49] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 76, i32 115, i32 109, i32 21, i32 189, i32 161, i32 77, i32 92, i32 19, i32 11, i32 36, i32 6, i32 152, i32 120, i32 28, i32 91, i32 235, i32 31, i32 24, i32 84, i32 67, i32 217, i32 85, i32 102, i32 218, i32 41, i32 33, i32 232, i32 184, i32 60, i32 66, i32 34] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 180, i32 205, i32 8, i32 111, i32 21, i32 35, i32 26, i32 11, i32 34, i32 237, i32 209, i32 241, i32 167, i32 199, i32 115, i32 69, i32 243, i32 158, i32 206, i32 118, i32 183, i32 246, i32 57, i32 182, i32 142, i32 121, i32 190, i32 233, i32 155, i32 207, i32 125, i32 98] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 146, i32 91, i32 252, i32 114, i32 253, i32 186, i32 241, i32 253, i32 166, i32 124, i32 149, i32 227, i32 97, i32 63, i32 233, i32 3, i32 212, i32 43, i32 212, i32 32, i32 217, i32 219, i32 77, i32 50, i32 62, i32 245, i32 17, i32 100, i32 227, i32 180, i32 190, i32 50] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 134, i32 23, i32 144, i32 231, i32 201, i32 31, i32 16, i32 165, i32 106, i32 45, i32 57, i32 208, i32 59, i32 196, i32 166, i32 233, i32 89, i32 19, i32 218, i32 26, i32 230, i32 160, i32 185, i32 60, i32 80, i32 184, i32 64, i32 124, i32 21, i32 54, i32 90, i32 66] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 180, i32 11, i32 50, i32 171, i32 220, i32 4, i32 81, i32 85, i32 33, i32 30, i32 11, i32 117, i32 153, i32 137, i32 115, i32 53, i32 58, i32 145, i32 43, i32 254, i32 231, i32 73, i32 234, i32 118, i32 193, i32 249, i32 70, i32 185, i32 83, i32 2, i32 35, i32 4] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 252, i32 90, i32 30, i32 29, i32 116, i32 88, i32 149, i32 166, i32 143, i32 123, i32 151, i32 62, i32 23, i32 59, i32 121, i32 45, i32 166, i32 87, i32 239, i32 69, i32 2, i32 11, i32 77, i32 110, i32 158, i32 147, i32 141, i32 47, i32 217, i32 157, i32 219, i32 4] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 192, i32 215, i32 86, i32 151, i32 88, i32 145, i32 222, i32 9, i32 79, i32 159, i32 190, i32 99, i32 176, i32 131, i32 134, i32 67, i32 93, i32 188, i32 224, i32 243, i32 192, i32 117, i32 191, i32 139, i32 142, i32 170, i32 247, i32 139, i32 100, i32 110, i32 176, i32 99] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 22, i32 174, i32 139, i32 224, i32 155, i32 36, i32 104, i32 92, i32 68, i32 194, i32 208, i32 8, i32 183, i32 123, i32 98, i32 253, i32 127, i32 216, i32 212, i32 183, i32 80, i32 253, i32 44, i32 27, i32 191, i32 65, i32 149, i32 217, i32 142, i32 216, i32 23, i32 27] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 134, i32 85, i32 55, i32 142, i32 195, i32 56, i32 72, i32 20, i32 181, i32 151, i32 210, i32 167, i32 84, i32 69, i32 241, i32 53, i32 68, i32 56, i32 158, i32 241, i32 27, i32 182, i32 52, i32 0, i32 60, i32 150, i32 238, i32 41, i32 0, i32 234, i32 44, i32 11] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 234, i32 218, i32 153, i32 158, i32 25, i32 131, i32 102, i32 109, i32 233, i32 118, i32 135, i32 80, i32 209, i32 253, i32 60, i32 96, i32 135, i32 198, i32 65, i32 217, i32 142, i32 219, i32 94, i32 222, i32 170, i32 154, i32 211, i32 40, i32 218, i32 149, i32 234, i32 71] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 208, i32 128, i32 186, i32 25, i32 174, i32 29, i32 169, i32 121, i32 246, i32 63, i32 172, i32 93, i32 111, i32 150, i32 31, i32 42, i32 206, i32 41, i32 178, i32 255, i32 55, i32 241, i32 148, i32 143, i32 12, i32 181, i32 40, i32 186, i32 154, i32 33, i32 246, i32 102] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 2, i32 251, i32 84, i32 184, i32 5, i32 243, i32 129, i32 82, i32 105, i32 52, i32 70, i32 157, i32 134, i32 118, i32 143, i32 215, i32 248, i32 106, i32 102, i32 255, i32 230, i32 167, i32 144, i32 247, i32 94, i32 205, i32 106, i32 155, i32 85, i32 252, i32 157, i32 72] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 189, i32 170, i32 19, i32 230, i32 205, i32 69, i32 74, i32 164, i32 89, i32 10, i32 100, i32 177, i32 152, i32 214, i32 52, i32 19, i32 4, i32 230, i32 151, i32 148, i32 6, i32 203, i32 212, i32 78, i32 187, i32 150, i32 205, i32 209, i32 87, i32 209, i32 227, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 122, i32 108, i32 69, i32 39, i32 196, i32 147, i32 127, i32 125, i32 124, i32 98, i32 80, i32 56, i32 58, i32 107, i32 181, i32 136, i32 198, i32 217, i32 241, i32 120, i32 25, i32 185, i32 57, i32 147, i32 61, i32 201, i32 224, i32 156, i32 60, i32 206, i32 245, i32 114] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 36, i32 234, i32 35, i32 125, i32 86, i32 44, i32 226, i32 89, i32 14, i32 133, i32 96, i32 4, i32 136, i32 90, i32 116, i32 30, i32 75, i32 239, i32 19, i32 218, i32 76, i32 255, i32 131, i32 69, i32 133, i32 63, i32 8, i32 149, i32 44, i32 32, i32 19, i32 31] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 72, i32 95, i32 39, i32 144, i32 92, i32 2, i32 66, i32 173, i32 120, i32 71, i32 92, i32 181, i32 126, i32 8, i32 133, i32 0, i32 250, i32 127, i32 253, i32 253, i32 231, i32 9, i32 17, i32 242, i32 126, i32 27, i32 56, i32 108, i32 53, i32 109, i32 51, i32 102] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 147, i32 3, i32 54, i32 129, i32 172, i32 228, i32 32, i32 9, i32 53, i32 76, i32 69, i32 178, i32 30, i32 76, i32 20, i32 33, i32 230, i32 233, i32 138, i32 123, i32 141, i32 254, i32 30, i32 198, i32 62, i32 193, i32 53, i32 250, i32 231, i32 112, i32 78, i32 29] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 97, i32 46, i32 194, i32 221, i32 149, i32 87, i32 209, i32 171, i32 128, i32 232, i32 99, i32 23, i32 181, i32 72, i32 228, i32 138, i32 17, i32 158, i32 114, i32 190, i32 133, i32 141, i32 81, i32 10, i32 242, i32 159, i32 224, i32 28, i32 169, i32 7, i32 40, i32 123] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 187, i32 113, i32 20, i32 94, i32 38, i32 140, i32 61, i32 200, i32 233, i32 124, i32 211, i32 214, i32 209, i32 47, i32 7, i32 109, i32 230, i32 223, i32 251, i32 121, i32 214, i32 153, i32 89, i32 150, i32 72, i32 64, i32 15, i32 58, i32 123, i32 178, i32 160, i32 114] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 78, i32 59, i32 105, i32 200, i32 67, i32 117, i32 81, i32 108, i32 121, i32 86, i32 228, i32 203, i32 247, i32 166, i32 81, i32 194, i32 44, i32 66, i32 11, i32 212, i32 130, i32 32, i32 28, i32 1, i32 8, i32 102, i32 215, i32 191, i32 4, i32 86, i32 252, i32 2] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 36, i32 232, i32 183, i32 96, i32 174, i32 71, i32 128, i32 252, i32 229, i32 35, i32 231, i32 194, i32 201, i32 133, i32 230, i32 152, i32 160, i32 41, i32 78, i32 225, i32 132, i32 57, i32 45, i32 149, i32 44, i32 243, i32 69, i32 60, i32 255, i32 175, i32 39, i32 76] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 107, i32 166, i32 245, i32 75, i32 17, i32 189, i32 186, i32 91, i32 158, i32 196, i32 164, i32 81, i32 30, i32 190, i32 208, i32 144, i32 58, i32 156, i32 194, i32 38, i32 182, i32 30, i32 241, i32 149, i32 125, i32 200, i32 109, i32 82, i32 230, i32 153, i32 44, i32 95] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 133, i32 224, i32 36, i32 50, i32 180, i32 209, i32 239, i32 252, i32 105, i32 162, i32 191, i32 143, i32 114, i32 44, i32 149, i32 246, i32 228, i32 110, i32 125, i32 144, i32 247, i32 87, i32 129, i32 160, i32 247, i32 218, i32 239, i32 51, i32 7, i32 227, i32 107, i32 120] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 54, i32 39, i32 62, i32 198, i32 18, i32 7, i32 171, i32 78, i32 190, i32 105, i32 157, i32 179, i32 190, i32 8, i32 124, i32 42, i32 71, i32 8, i32 253, i32 212, i32 205, i32 14, i32 39, i32 52, i32 91, i32 152, i32 52, i32 47, i32 119, i32 95, i32 58, i32 101] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 19, i32 170, i32 46, i32 76, i32 240, i32 34, i32 184, i32 108, i32 179, i32 25, i32 77, i32 235, i32 107, i32 208, i32 164, i32 198, i32 156, i32 221, i32 200, i32 91, i32 129, i32 87, i32 137, i32 223, i32 51, i32 169, i32 104, i32 73, i32 128, i32 228, i32 254, i32 33] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 0, i32 23, i32 144, i32 48, i32 233, i32 211, i32 96, i32 48, i32 49, i32 194, i32 114, i32 137, i32 122, i32 54, i32 165, i32 189, i32 57, i32 131, i32 133, i32 80, i32 161, i32 93, i32 108, i32 65, i32 29, i32 181, i32 44, i32 7, i32 64, i32 119, i32 11, i32 80] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 100, i32 52, i32 236, i32 192, i32 158, i32 68, i32 65, i32 175, i32 160, i32 54, i32 5, i32 109, i32 234, i32 48, i32 37, i32 70, i32 53, i32 36, i32 157, i32 134, i32 189, i32 149, i32 241, i32 106, i32 70, i32 215, i32 148, i32 84, i32 249, i32 59, i32 189, i32 93] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 119, i32 91, i32 226, i32 55, i32 199, i32 225, i32 124, i32 19, i32 140, i32 159, i32 123, i32 123, i32 42, i32 206, i32 66, i32 163, i32 185, i32 42, i32 153, i32 168, i32 192, i32 216, i32 60, i32 134, i32 176, i32 251, i32 233, i32 118, i32 119, i32 247, i32 245, i32 86] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 223, i32 179, i32 70, i32 17, i32 110, i32 19, i32 183, i32 40, i32 78, i32 86, i32 221, i32 241, i32 172, i32 173, i32 88, i32 195, i32 248, i32 136, i32 148, i32 94, i32 6, i32 152, i32 161, i32 228, i32 106, i32 251, i32 10, i32 73, i32 93, i32 138, i32 254, i32 119] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 70, i32 2, i32 245, i32 165, i32 175, i32 197, i32 117, i32 109, i32 186, i32 69, i32 53, i32 10, i32 254, i32 201, i32 172, i32 34, i32 145, i32 141, i32 33, i32 149, i32 51, i32 3, i32 192, i32 138, i32 22, i32 243, i32 57, i32 224, i32 1, i32 15, i32 83, i32 60] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 52, i32 117, i32 55, i32 31, i32 52, i32 78, i32 169, i32 29, i32 104, i32 103, i32 248, i32 73, i32 152, i32 150, i32 252, i32 76, i32 101, i32 151, i32 247, i32 2, i32 74, i32 82, i32 108, i32 1, i32 189, i32 72, i32 187, i32 27, i32 237, i32 164, i32 226, i32 83] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 89, i32 213, i32 155, i32 90, i32 162, i32 144, i32 211, i32 184, i32 55, i32 76, i32 85, i32 130, i32 40, i32 8, i32 15, i32 127, i32 170, i32 129, i32 101, i32 224, i32 12, i32 82, i32 201, i32 163, i32 50, i32 39, i32 100, i32 218, i32 253, i32 52, i32 35, i32 90] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 181, i32 176, i32 12, i32 77, i32 179, i32 123, i32 35, i32 200, i32 31, i32 138, i32 57, i32 102, i32 230, i32 186, i32 76, i32 16, i32 55, i32 202, i32 156, i32 124, i32 5, i32 158, i32 255, i32 192, i32 248, i32 142, i32 177, i32 143, i32 111, i32 103, i32 24, i32 38] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 75, i32 65, i32 19, i32 84, i32 35, i32 26, i32 164, i32 78, i32 169, i32 139, i32 30, i32 75, i32 252, i32 21, i32 36, i32 187, i32 126, i32 203, i32 182, i32 30, i32 27, i32 245, i32 242, i32 200, i32 86, i32 236, i32 50, i32 162, i32 96, i32 91, i32 160, i32 42] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 164, i32 41, i32 71, i32 134, i32 46, i32 146, i32 79, i32 17, i32 79, i32 243, i32 178, i32 92, i32 213, i32 62, i32 166, i32 185, i32 200, i32 226, i32 51, i32 17, i32 31, i32 1, i32 143, i32 176, i32 155, i32 199, i32 165, i32 255, i32 131, i32 15, i32 30, i32 40] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 29, i32 41, i32 122, i32 161, i32 236, i32 142, i32 181, i32 173, i32 234, i32 2, i32 104, i32 96, i32 116, i32 41, i32 28, i32 165, i32 207, i32 200, i32 59, i32 125, i32 139, i32 43, i32 124, i32 173, i32 164, i32 64, i32 23, i32 81, i32 89, i32 124, i32 46, i32 93] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 10, i32 108, i32 79, i32 188, i32 62, i32 50, i32 231, i32 74, i32 26, i32 19, i32 193, i32 73, i32 56, i32 191, i32 247, i32 194, i32 211, i32 143, i32 107, i32 173, i32 82, i32 247, i32 207, i32 188, i32 39, i32 203, i32 64, i32 103, i32 118, i32 205, i32 109, i32 86] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 229, i32 176, i32 39, i32 173, i32 190, i32 155, i32 242, i32 181, i32 99, i32 222, i32 58, i32 35, i32 149, i32 183, i32 10, i32 126, i32 243, i32 158, i32 69, i32 111, i32 25, i32 57, i32 117, i32 143, i32 57, i32 61, i32 15, i32 192, i32 159, i32 241, i32 233, i32 81] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 136, i32 170, i32 20, i32 36, i32 134, i32 148, i32 17, i32 18, i32 62, i32 26, i32 181, i32 204, i32 187, i32 224, i32 156, i32 213, i32 156, i32 109, i32 186, i32 88, i32 114, i32 141, i32 251, i32 34, i32 123, i32 159, i32 124, i32 148, i32 48, i32 179, i32 81, i32 33] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 246, i32 116, i32 61, i32 242, i32 175, i32 208, i32 30, i32 3, i32 124, i32 35, i32 107, i32 201, i32 252, i32 37, i32 112, i32 144, i32 220, i32 154, i32 164, i32 251, i32 73, i32 252, i32 61, i32 10, i32 53, i32 56, i32 111, i32 228, i32 126, i32 80, i32 1, i32 42] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 214, i32 227, i32 150, i32 97, i32 58, i32 253, i32 239, i32 155, i32 31, i32 144, i32 164, i32 36, i32 20, i32 91, i32 200, i32 222, i32 80, i32 177, i32 29, i32 175, i32 232, i32 85, i32 138, i32 135, i32 13, i32 254, i32 170, i32 59, i32 130, i32 44, i32 141, i32 123] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 133, i32 12, i32 175, i32 248, i32 131, i32 68, i32 73, i32 217, i32 69, i32 207, i32 247, i32 72, i32 217, i32 83, i32 180, i32 241, i32 101, i32 160, i32 225, i32 195, i32 179, i32 21, i32 237, i32 137, i32 155, i32 79, i32 98, i32 179, i32 87, i32 165, i32 69, i32 28] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 143, i32 18, i32 234, i32 175, i32 209, i32 31, i32 121, i32 16, i32 11, i32 246, i32 163, i32 123, i32 234, i32 172, i32 139, i32 87, i32 50, i32 98, i32 231, i32 6, i32 18, i32 81, i32 160, i32 59, i32 67, i32 94, i32 164, i32 32, i32 120, i32 49, i32 206, i32 13] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 132, i32 124, i32 194, i32 166, i32 145, i32 35, i32 206, i32 189, i32 220, i32 249, i32 206, i32 213, i32 117, i32 48, i32 34, i32 230, i32 249, i32 67, i32 98, i32 13, i32 247, i32 117, i32 157, i32 127, i32 140, i32 255, i32 125, i32 228, i32 114, i32 172, i32 159, i32 28] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 136, i32 193, i32 153, i32 208, i32 60, i32 28, i32 93, i32 180, i32 239, i32 19, i32 15, i32 144, i32 185, i32 54, i32 47, i32 149, i32 149, i32 198, i32 220, i32 222, i32 10, i32 81, i32 226, i32 141, i32 243, i32 188, i32 81, i32 236, i32 223, i32 177, i32 162, i32 95] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 46, i32 104, i32 161, i32 35, i32 125, i32 155, i32 64, i32 105, i32 133, i32 123, i32 66, i32 191, i32 144, i32 75, i32 214, i32 64, i32 47, i32 215, i32 82, i32 82, i32 178, i32 33, i32 222, i32 100, i32 189, i32 136, i32 195, i32 109, i32 165, i32 250, i32 129, i32 63] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 251, i32 253, i32 71, i32 123, i32 138, i32 102, i32 158, i32 121, i32 46, i32 100, i32 130, i32 239, i32 247, i32 33, i32 236, i32 246, i32 216, i32 134, i32 9, i32 49, i32 124, i32 221, i32 3, i32 106, i32 88, i32 160, i32 119, i32 183, i32 155, i32 140, i32 135, i32 31] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 85, i32 71, i32 228, i32 168, i32 61, i32 85, i32 33, i32 52, i32 171, i32 29, i32 174, i32 224, i32 244, i32 234, i32 219, i32 197, i32 185, i32 88, i32 191, i32 196, i32 42, i32 137, i32 49, i32 26, i32 244, i32 45, i32 225, i32 202, i32 55, i32 153, i32 71, i32 89] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 199, i32 202, i32 99, i32 193, i32 73, i32 169, i32 53, i32 69, i32 85, i32 126, i32 218, i32 100, i32 50, i32 7, i32 80, i32 247, i32 50, i32 172, i32 222, i32 117, i32 88, i32 155, i32 17, i32 178, i32 58, i32 31, i32 245, i32 247, i32 121, i32 4, i32 230, i32 8] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 70, i32 250, i32 34, i32 75, i32 250, i32 225, i32 254, i32 150, i32 252, i32 103, i32 186, i32 103, i32 151, i32 196, i32 231, i32 27, i32 134, i32 144, i32 95, i32 238, i32 244, i32 91, i32 17, i32 178, i32 205, i32 173, i32 238, i32 194, i32 72, i32 108, i32 43, i32 27] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 227, i32 57, i32 98, i32 180, i32 79, i32 49, i32 4, i32 201, i32 218, i32 213, i32 115, i32 81, i32 87, i32 197, i32 184, i32 243, i32 163, i32 67, i32 112, i32 228, i32 97, i32 129, i32 132, i32 226, i32 187, i32 191, i32 79, i32 158, i32 164, i32 94, i32 116, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 41, i32 172, i32 255, i32 39, i32 224, i32 89, i32 190, i32 57, i32 156, i32 13, i32 131, i32 215, i32 16, i32 11, i32 21, i32 183, i32 225, i32 194, i32 44, i32 48, i32 115, i32 128, i32 58, i32 125, i32 93, i32 171, i32 88, i32 107, i32 193, i32 240, i32 244, i32 34] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 254, i32 127, i32 251, i32 53, i32 125, i32 198, i32 1, i32 35, i32 40, i32 196, i32 2, i32 172, i32 31, i32 66, i32 180, i32 157, i32 252, i32 0, i32 148, i32 165, i32 238, i32 202, i32 218, i32 151, i32 9, i32 65, i32 119, i32 135, i32 93, i32 123, i32 135, i32 120] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 245, i32 251, i32 144, i32 45, i32 129, i32 25, i32 158, i32 47, i32 109, i32 133, i32 136, i32 140, i32 64, i32 92, i32 119, i32 65, i32 77, i32 1, i32 25, i32 118, i32 96, i32 232, i32 76, i32 72, i32 228, i32 51, i32 131, i32 50, i32 108, i32 180, i32 65, i32 3] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 255, i32 16, i32 194, i32 9, i32 79, i32 110, i32 244, i32 210, i32 223, i32 126, i32 202, i32 123, i32 28, i32 29, i32 186, i32 163, i32 182, i32 218, i32 103, i32 51, i32 212, i32 135, i32 54, i32 75, i32 17, i32 32, i32 5, i32 166, i32 41, i32 193, i32 135, i32 23] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 246, i32 150, i32 202, i32 47, i32 218, i32 56, i32 167, i32 27, i32 252, i32 202, i32 125, i32 254, i32 8, i32 137, i32 226, i32 71, i32 43, i32 106, i32 93, i32 75, i32 250, i32 161, i32 180, i32 222, i32 182, i32 194, i32 49, i32 81, i32 245, i32 224, i32 164, i32 11] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 92, i32 229, i32 198, i32 4, i32 142, i32 43, i32 87, i32 190, i32 56, i32 133, i32 35, i32 203, i32 183, i32 190, i32 79, i32 169, i32 211, i32 110, i32 18, i32 170, i32 213, i32 178, i32 46, i32 147, i32 41, i32 154, i32 74, i32 136, i32 24, i32 67, i32 245, i32 1] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 80, i32 252, i32 219, i32 162, i32 89, i32 33, i32 141, i32 189, i32 126, i32 51, i32 174, i32 47, i32 135, i32 26, i32 208, i32 151, i32 199, i32 13, i32 77, i32 99, i32 1, i32 239, i32 5, i32 132, i32 236, i32 64, i32 221, i32 168, i32 10, i32 79, i32 112, i32 11] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 65, i32 105, i32 1, i32 103, i32 92, i32 211, i32 138, i32 197, i32 207, i32 63, i32 209, i32 87, i32 209, i32 103, i32 62, i32 1, i32 57, i32 181, i32 203, i32 129, i32 86, i32 150, i32 38, i32 182, i32 194, i32 231, i32 92, i32 251, i32 99, i32 151, i32 88, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 12, i32 14, i32 243, i32 186, i32 240, i32 229, i32 186, i32 178, i32 87, i32 119, i32 198, i32 32, i32 155, i32 137, i32 36, i32 190, i32 242, i32 156, i32 138, i32 186, i32 105, i32 193, i32 241, i32 176, i32 79, i32 42, i32 5, i32 154, i32 238, i32 16, i32 126, i32 54] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 63, i32 38, i32 233, i32 64, i32 233, i32 3, i32 173, i32 6, i32 105, i32 145, i32 224, i32 209, i32 137, i32 96, i32 132, i32 121, i32 222, i32 39, i32 109, i32 230, i32 118, i32 189, i32 234, i32 230, i32 174, i32 72, i32 195, i32 103, i32 192, i32 87, i32 205, i32 47] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 127, i32 193, i32 220, i32 185, i32 199, i32 188, i32 134, i32 61, i32 85, i32 75, i32 40, i32 122, i32 251, i32 77, i32 199, i32 248, i32 188, i32 103, i32 42, i32 96, i32 77, i32 143, i32 7, i32 11, i32 26, i32 23, i32 191, i32 250, i32 172, i32 167, i32 61, i32 26] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 145, i32 63, i32 237, i32 94, i32 24, i32 120, i32 63, i32 35, i32 44, i32 13, i32 140, i32 68, i32 0, i32 232, i32 251, i32 233, i32 142, i32 214, i32 209, i32 54, i32 88, i32 87, i32 158, i32 174, i32 75, i32 92, i32 11, i32 7, i32 188, i32 107, i32 85, i32 43] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 111, i32 77, i32 23, i32 215, i32 225, i32 132, i32 217, i32 120, i32 177, i32 144, i32 253, i32 46, i32 179, i32 181, i32 25, i32 63, i32 27, i32 250, i32 192, i32 104, i32 179, i32 221, i32 0, i32 46, i32 137, i32 189, i32 126, i32 128, i32 50, i32 19, i32 160, i32 123] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 111, i32 64, i32 175, i32 68, i32 68, i32 176, i32 67, i32 143, i32 13, i32 208, i32 30, i32 196, i32 11, i32 25, i32 93, i32 142, i32 254, i32 193, i32 243, i32 197, i32 92, i32 145, i32 248, i32 4, i32 78, i32 190, i32 144, i32 180, i32 71, i32 92, i32 63] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 176, i32 59, i32 44, i32 243, i32 254, i32 50, i32 113, i32 7, i32 63, i32 170, i32 186, i32 69, i32 96, i32 168, i32 141, i32 234, i32 84, i32 203, i32 57, i32 16, i32 180, i32 242, i32 139, i32 210, i32 20, i32 130, i32 66, i32 7, i32 142, i32 233, i32 124, i32 83] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 176, i32 174, i32 193, i32 141, i32 201, i32 143, i32 185, i32 122, i32 119, i32 239, i32 186, i32 121, i32 160, i32 60, i32 168, i32 245, i32 106, i32 226, i32 63, i32 93, i32 0, i32 227, i32 75, i32 69, i32 36, i32 123, i32 67, i32 120, i32 85, i32 29, i32 43, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 184, i32 214, i32 22, i32 103, i32 160, i32 21, i32 185, i32 225, i32 88, i32 164, i32 167, i32 49, i32 55, i32 119, i32 47, i32 139, i32 18, i32 159, i32 244, i32 63, i32 199, i32 54, i32 102, i32 210, i32 168, i32 86, i32 247, i32 127, i32 116, i32 198, i32 65] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 93, i32 248, i32 180, i32 168, i32 48, i32 221, i32 204, i32 56, i32 165, i32 211, i32 202, i32 216, i32 209, i32 248, i32 178, i32 49, i32 145, i32 212, i32 114, i32 5, i32 87, i32 74, i32 59, i32 130, i32 74, i32 198, i32 104, i32 32, i32 226, i32 24, i32 65, i32 97] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 25, i32 212, i32 141, i32 71, i32 41, i32 18, i32 101, i32 176, i32 17, i32 120, i32 71, i32 181, i32 203, i32 163, i32 165, i32 250, i32 5, i32 133, i32 84, i32 169, i32 51, i32 151, i32 141, i32 43, i32 194, i32 254, i32 153, i32 53, i32 40, i32 229, i32 235, i32 99] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 177, i32 63, i32 63, i32 239, i32 216, i32 244, i32 252, i32 179, i32 160, i32 96, i32 80, i32 6, i32 43, i32 41, i32 82, i32 112, i32 21, i32 11, i32 36, i32 36, i32 248, i32 95, i32 121, i32 24, i32 204, i32 255, i32 137, i32 153, i32 132, i32 161, i32 174, i32 19] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 68, i32 31, i32 184, i32 194, i32 1, i32 193, i32 48, i32 25, i32 85, i32 5, i32 96, i32 16, i32 164, i32 108, i32 45, i32 103, i32 112, i32 229, i32 37, i32 27, i32 242, i32 191, i32 221, i32 251, i32 112, i32 43, i32 161, i32 140, i32 156, i32 148, i32 132, i32 8] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 231, i32 196, i32 67, i32 77, i32 201, i32 43, i32 105, i32 93, i32 29, i32 60, i32 175, i32 187, i32 67, i32 56, i32 78, i32 152, i32 61, i32 237, i32 13, i32 33, i32 3, i32 253, i32 240, i32 153, i32 71, i32 4, i32 176, i32 152, i32 105, i32 85, i32 114, i32 15] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 94, i32 223, i32 21, i32 83, i32 59, i32 134, i32 128, i32 176, i32 241, i32 112, i32 104, i32 143, i32 102, i32 124, i32 14, i32 73, i32 26, i32 216, i32 107, i32 254, i32 78, i32 239, i32 202, i32 71, i32 212, i32 3, i32 193, i32 55, i32 80, i32 156, i32 193, i32 22] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 205, i32 36, i32 198, i32 62, i32 12, i32 130, i32 155, i32 145, i32 43, i32 97, i32 74, i32 178, i32 15, i32 136, i32 85, i32 95, i32 90, i32 87, i32 255, i32 229, i32 116, i32 11, i32 19, i32 67, i32 0, i32 216, i32 107, i32 207, i32 210, i32 21, i32 3, i32 44] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 220, i32 255, i32 21, i32 97, i32 47, i32 74, i32 47, i32 98, i32 242, i32 4, i32 47, i32 181, i32 12, i32 183, i32 30, i32 63, i32 116, i32 26, i32 15, i32 215, i32 234, i32 205, i32 217, i32 125, i32 246, i32 18, i32 14, i32 47, i32 219, i32 90, i32 59, i32 22] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 27, i32 55, i32 71, i32 227, i32 245, i32 158, i32 234, i32 44, i32 42, i32 231, i32 130, i32 54, i32 244, i32 31, i32 129, i32 71, i32 146, i32 75, i32 105, i32 14, i32 17, i32 140, i32 93, i32 83, i32 91, i32 129, i32 39, i32 8, i32 188, i32 160, i32 174, i32 37] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 105, i32 50, i32 161, i32 5, i32 17, i32 66, i32 0, i32 210, i32 89, i32 172, i32 77, i32 98, i32 139, i32 19, i32 226, i32 80, i32 93, i32 160, i32 157, i32 155, i32 253, i32 187, i32 18, i32 65, i32 117, i32 65, i32 158, i32 204, i32 220, i32 199, i32 220, i32 93] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 217, i32 227, i32 56, i32 6, i32 70, i32 112, i32 130, i32 94, i32 40, i32 73, i32 121, i32 255, i32 37, i32 210, i32 78, i32 41, i32 141, i32 6, i32 176, i32 35, i32 174, i32 155, i32 102, i32 228, i32 125, i32 192, i32 112, i32 145, i32 163, i32 252, i32 236, i32 78] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 98, i32 18, i32 55, i32 106, i32 48, i32 246, i32 30, i32 251, i32 20, i32 92, i32 13, i32 14, i32 183, i32 129, i32 106, i32 231, i32 8, i32 5, i32 172, i32 170, i32 56, i32 70, i32 226, i32 115, i32 234, i32 75, i32 7, i32 129, i32 67, i32 124, i32 158, i32 94] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 252, i32 249, i32 33, i32 79, i32 46, i32 118, i32 155, i32 31, i32 40, i32 96, i32 119, i32 67, i32 50, i32 157, i32 190, i32 23, i32 48, i32 42, i32 198, i32 24, i32 146, i32 102, i32 98, i32 48, i32 152, i32 64, i32 17, i32 166, i32 127, i32 24, i32 132, i32 40] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 63, i32 171, i32 211, i32 244, i32 138, i32 118, i32 161, i32 60, i32 202, i32 45, i32 73, i32 195, i32 234, i32 8, i32 11, i32 133, i32 23, i32 42, i32 195, i32 108, i32 8, i32 253, i32 87, i32 159, i32 61, i32 95, i32 223, i32 103, i32 104, i32 66, i32 0, i32 50] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 81, i32 96, i32 27, i32 6, i32 79, i32 138, i32 33, i32 186, i32 56, i32 168, i32 186, i32 214, i32 64, i32 246, i32 233, i32 155, i32 118, i32 77, i32 86, i32 33, i32 91, i32 10, i32 155, i32 46, i32 79, i32 61, i32 129, i32 50, i32 8, i32 159, i32 151, i32 91] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 229, i32 68, i32 236, i32 6, i32 157, i32 144, i32 121, i32 159, i32 211, i32 224, i32 121, i32 175, i32 143, i32 16, i32 253, i32 221, i32 4, i32 174, i32 39, i32 151, i32 70, i32 51, i32 121, i32 234, i32 184, i32 78, i32 202, i32 90, i32 89, i32 87, i32 225, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 218, i32 243, i32 165, i32 65, i32 67, i32 40, i32 252, i32 126, i32 231, i32 113, i32 234, i32 198, i32 59, i32 89, i32 204, i32 46, i32 211, i32 64, i32 236, i32 179, i32 19, i32 111, i32 68, i32 205, i32 19, i32 178, i32 55, i32 242, i32 110, i32 217, i32 28] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 227, i32 219, i32 96, i32 205, i32 92, i32 74, i32 24, i32 15, i32 239, i32 115, i32 54, i32 113, i32 140, i32 246, i32 17, i32 180, i32 216, i32 206, i32 23, i32 94, i32 79, i32 38, i32 119, i32 151, i32 95, i32 203, i32 239, i32 145, i32 235, i32 106, i32 98, i32 122] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 24, i32 74, i32 162, i32 151, i32 8, i32 129, i32 45, i32 131, i32 196, i32 204, i32 240, i32 131, i32 126, i32 236, i32 13, i32 149, i32 76, i32 91, i32 251, i32 250, i32 152, i32 128, i32 74, i32 102, i32 86, i32 12, i32 81, i32 179, i32 242, i32 4, i32 93, i32 39] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 59, i32 185, i32 184, i32 6, i32 90, i32 46, i32 254, i32 195, i32 130, i32 55, i32 156, i32 163, i32 17, i32 31, i32 156, i32 166, i32 218, i32 99, i32 72, i32 155, i32 173, i32 222, i32 45, i32 166, i32 188, i32 110, i32 50, i32 218, i32 39, i32 101, i32 221, i32 87] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 132, i32 79, i32 55, i32 49, i32 125, i32 46, i32 188, i32 173, i32 135, i32 7, i32 42, i32 107, i32 55, i32 252, i32 95, i32 235, i32 78, i32 117, i32 53, i32 166, i32 222, i32 171, i32 10, i32 25, i32 58, i32 183, i32 177, i32 239, i32 146, i32 106, i32 59, i32 60] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 59, i32 178, i32 148, i32 109, i32 57, i32 96, i32 172, i32 238, i32 231, i32 129, i32 26, i32 59, i32 118, i32 135, i32 92, i32 5, i32 148, i32 42, i32 69, i32 185, i32 128, i32 233, i32 34, i32 177, i32 7, i32 203, i32 64, i32 158, i32 112, i32 73, i32 109, i32 18] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 253, i32 24, i32 120, i32 132, i32 168, i32 76, i32 125, i32 110, i32 89, i32 166, i32 229, i32 116, i32 241, i32 25, i32 166, i32 132, i32 46, i32 81, i32 193, i32 41, i32 19, i32 242, i32 20, i32 107, i32 93, i32 83, i32 81, i32 247, i32 239, i32 191, i32 1, i32 34] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 164, i32 75, i32 98, i32 76, i32 230, i32 253, i32 114, i32 7, i32 242, i32 129, i32 252, i32 242, i32 189, i32 18, i32 124, i32 104, i32 118, i32 42, i32 186, i32 245, i32 101, i32 177, i32 31, i32 23, i32 10, i32 56, i32 176, i32 191, i32 192, i32 248, i32 244, i32 42] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 85, i32 96, i32 85, i32 91, i32 228, i32 29, i32 113, i32 76, i32 157, i32 91, i32 159, i32 112, i32 166, i32 133, i32 154, i32 44, i32 160, i32 226, i32 50, i32 72, i32 206, i32 158, i32 42, i32 165, i32 7, i32 59, i32 199, i32 108, i32 134, i32 119, i32 222, i32 60] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 247, i32 24, i32 122, i32 150, i32 126, i32 67, i32 87, i32 169, i32 85, i32 252, i32 78, i32 182, i32 114, i32 0, i32 242, i32 228, i32 215, i32 82, i32 211, i32 211, i32 182, i32 133, i32 246, i32 113, i32 199, i32 68, i32 63, i32 127, i32 215, i32 179, i32 242, i32 121] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 70, i32 202, i32 167, i32 85, i32 123, i32 121, i32 243, i32 202, i32 90, i32 101, i32 246, i32 237, i32 80, i32 20, i32 123, i32 228, i32 196, i32 42, i32 101, i32 158, i32 226, i32 249, i32 202, i32 167, i32 34, i32 38, i32 83, i32 203, i32 33, i32 91, i32 167, i32 49] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 144, i32 215, i32 197, i32 38, i32 8, i32 189, i32 176, i32 83, i32 99, i32 88, i32 195, i32 49, i32 94, i32 117, i32 70, i32 21, i32 145, i32 166, i32 248, i32 47, i32 26, i32 8, i32 101, i32 136, i32 47, i32 152, i32 4, i32 241, i32 124, i32 110, i32 0, i32 119] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 129, i32 33, i32 97, i32 9, i32 246, i32 78, i32 241, i32 146, i32 238, i32 99, i32 97, i32 115, i32 135, i32 199, i32 84, i32 14, i32 66, i32 75, i32 201, i32 71, i32 209, i32 184, i32 126, i32 145, i32 117, i32 55, i32 153, i32 40, i32 184, i32 221, i32 127, i32 80] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 137, i32 143, i32 192, i32 190, i32 93, i32 214, i32 159, i32 160, i32 240, i32 157, i32 129, i32 206, i32 58, i32 123, i32 152, i32 88, i32 187, i32 215, i32 120, i32 200, i32 63, i32 19, i32 241, i32 116, i32 25, i32 223, i32 248, i32 152, i32 137, i32 93, i32 250, i32 95] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 158, i32 53, i32 133, i32 148, i32 71, i32 31, i32 144, i32 21, i32 38, i32 208, i32 132, i32 237, i32 138, i32 128, i32 247, i32 99, i32 66, i32 134, i32 39, i32 215, i32 244, i32 117, i32 88, i32 220, i32 156, i32 192, i32 34, i32 126, i32 32, i32 53, i32 253, i32 31] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 104, i32 14, i32 111, i32 151, i32 186, i32 112, i32 187, i32 163, i32 14, i32 229, i32 11, i32 18, i32 244, i32 162, i32 220, i32 71, i32 248, i32 230, i32 208, i32 35, i32 108, i32 51, i32 168, i32 153, i32 70, i32 110, i32 15, i32 68, i32 186, i32 118, i32 72, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 163, i32 42, i32 97, i32 55, i32 226, i32 89, i32 18, i32 14, i32 39, i32 186, i32 100, i32 67, i32 174, i32 192, i32 66, i32 105, i32 121, i32 164, i32 30, i32 41, i32 139, i32 21, i32 235, i32 248, i32 175, i32 212, i32 162, i32 104, i32 51, i32 181, i32 122, i32 36] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 44, i32 25, i32 51, i32 221, i32 27, i32 171, i32 236, i32 1, i32 176, i32 35, i32 248, i32 66, i32 43, i32 6, i32 136, i32 234, i32 61, i32 45, i32 0, i32 42, i32 120, i32 69, i32 77, i32 56, i32 237, i32 46, i32 46, i32 68, i32 73, i32 237, i32 203, i32 51] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 160, i32 104, i32 232, i32 65, i32 143, i32 145, i32 248, i32 17, i32 19, i32 144, i32 46, i32 167, i32 171, i32 48, i32 239, i32 173, i32 160, i32 97, i32 0, i32 136, i32 239, i32 219, i32 206, i32 91, i32 92, i32 187, i32 98, i32 200, i32 86, i32 249, i32 0, i32 115] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 63, i32 96, i32 193, i32 130, i32 45, i32 163, i32 40, i32 88, i32 36, i32 158, i32 159, i32 227, i32 112, i32 204, i32 9, i32 78, i32 26, i32 63, i32 17, i32 17, i32 21, i32 7, i32 60, i32 164, i32 65, i32 224, i32 101, i32 163, i32 10, i32 65, i32 109, i32 17] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 49, i32 64, i32 1, i32 82, i32 86, i32 148, i32 91, i32 40, i32 138, i32 170, i32 82, i32 238, i32 216, i32 10, i32 5, i32 141, i32 205, i32 181, i32 170, i32 46, i32 56, i32 170, i32 183, i32 135, i32 247, i32 43, i32 251, i32 4, i32 203, i32 132, i32 61, i32 84] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 32, i32 239, i32 89, i32 222, i32 164, i32 43, i32 147, i32 110, i32 46, i32 236, i32 66, i32 154, i32 212, i32 45, i32 244, i32 70, i32 88, i32 39, i32 43, i32 24, i32 143, i32 131, i32 61, i32 105, i32 158, i32 212, i32 62, i32 182, i32 197, i32 253, i32 88, i32 3] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 137, i32 201, i32 99, i32 98, i32 28, i32 23, i32 180, i32 96, i32 196, i32 38, i32 104, i32 9, i32 195, i32 46, i32 55, i32 15, i32 123, i32 180, i32 156, i32 182, i32 249, i32 251, i32 212, i32 81, i32 120, i32 200, i32 99, i32 234, i32 119, i32 71, i32 7] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 50, i32 180, i32 24, i32 71, i32 121, i32 203, i32 212, i32 90, i32 7, i32 20, i32 15, i32 160, i32 213, i32 172, i32 208, i32 65, i32 64, i32 171, i32 97, i32 35, i32 229, i32 42, i32 42, i32 111, i32 247, i32 168, i32 212, i32 118, i32 239, i32 231, i32 69, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 161, i32 94, i32 96, i32 79, i32 251, i32 225, i32 112, i32 106, i32 31, i32 85, i32 79, i32 9, i32 180, i32 149, i32 51, i32 54, i32 198, i32 129, i32 1, i32 24, i32 6, i32 37, i32 39, i32 164, i32 180, i32 36, i32 164, i32 134, i32 3, i32 76, i32 172, i32 2] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 119, i32 56, i32 222, i32 215, i32 96, i32 72, i32 7, i32 240, i32 116, i32 168, i32 255, i32 84, i32 229, i32 48, i32 67, i32 255, i32 119, i32 251, i32 33, i32 7, i32 255, i32 178, i32 7, i32 107, i32 228, i32 229, i32 48, i32 252, i32 25, i32 108, i32 163, i32 1] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 19, i32 197, i32 44, i32 172, i32 211, i32 131, i32 130, i32 124, i32 41, i32 247, i32 5, i32 165, i32 0, i32 182, i32 31, i32 134, i32 85, i32 244, i32 214, i32 47, i32 12, i32 153, i32 208, i32 101, i32 155, i32 107, i32 70, i32 13, i32 67, i32 248, i32 22, i32 40] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 30, i32 127, i32 180, i32 116, i32 126, i32 177, i32 137, i32 79, i32 24, i32 90, i32 171, i32 100, i32 6, i32 223, i32 69, i32 135, i32 224, i32 106, i32 198, i32 240, i32 14, i32 201, i32 36, i32 53, i32 56, i32 234, i32 48, i32 84, i32 180, i32 196, i32 82, i32 84] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 233, i32 159, i32 220, i32 63, i32 193, i32 137, i32 68, i32 116, i32 39, i32 228, i32 193, i32 144, i32 255, i32 74, i32 167, i32 60, i32 238, i32 205, i32 244, i32 29, i32 37, i32 148, i32 127, i32 99, i32 22, i32 72, i32 188, i32 100, i32 254, i32 149, i32 196, i32 12] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 25, i32 117, i32 110, i32 3, i32 6, i32 94, i32 106, i32 111, i32 26, i32 140, i32 227, i32 211, i32 40, i32 242, i32 224, i32 185, i32 122, i32 67, i32 105, i32 230, i32 211, i32 192, i32 254, i32 126, i32 151, i32 171, i32 108, i32 123, i32 142, i32 19, i32 66] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 212, i32 202, i32 112, i32 61, i32 171, i32 251, i32 95, i32 94, i32 0, i32 12, i32 204, i32 119, i32 34, i32 248, i32 120, i32 85, i32 174, i32 98, i32 53, i32 251, i32 154, i32 198, i32 3, i32 228, i32 12, i32 238, i32 171, i32 199, i32 192, i32 137, i32 135, i32 84] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 50, i32 173, i32 174, i32 133, i32 88, i32 67, i32 184, i32 177, i32 230, i32 62, i32 0, i32 156, i32 120, i32 136, i32 86, i32 219, i32 156, i32 252, i32 121, i32 246, i32 249, i32 65, i32 95, i32 183, i32 188, i32 17, i32 249, i32 32, i32 54, i32 28, i32 83, i32 43] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 90, i32 32, i32 91, i32 161, i32 165, i32 68, i32 145, i32 36, i32 2, i32 99, i32 18, i32 100, i32 184, i32 85, i32 246, i32 222, i32 44, i32 219, i32 71, i32 184, i32 198, i32 10, i32 195, i32 0, i32 120, i32 147, i32 216, i32 245, i32 245, i32 24, i32 40, i32 10] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 214, i32 27, i32 154, i32 108, i32 229, i32 70, i32 234, i32 112, i32 150, i32 141, i32 78, i32 42, i32 82, i32 33, i32 38, i32 75, i32 177, i32 187, i32 15, i32 124, i32 169, i32 155, i32 4, i32 187, i32 81, i32 8, i32 241, i32 154, i32 164, i32 118, i32 124, i32 24] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 250, i32 148, i32 247, i32 64, i32 208, i32 215, i32 235, i32 169, i32 130, i32 54, i32 213, i32 21, i32 185, i32 51, i32 122, i32 191, i32 138, i32 242, i32 99, i32 170, i32 55, i32 245, i32 89, i32 172, i32 189, i32 187, i32 50, i32 54, i32 190, i32 115, i32 153, i32 56] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 44, i32 179, i32 218, i32 122, i32 216, i32 61, i32 153, i32 202, i32 210, i32 244, i32 218, i32 153, i32 142, i32 79, i32 152, i32 183, i32 244, i32 174, i32 62, i32 159, i32 142, i32 53, i32 96, i32 164, i32 51, i32 117, i32 164, i32 4, i32 147, i32 177, i32 107, i32 77] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 151, i32 157, i32 168, i32 205, i32 151, i32 123, i32 157, i32 185, i32 231, i32 165, i32 239, i32 253, i32 168, i32 66, i32 107, i32 195, i32 98, i32 100, i32 125, i32 165, i32 27, i32 201, i32 158, i32 210, i32 69, i32 185, i32 238, i32 3, i32 176, i32 191, i32 192, i32 104] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 237, i32 183, i32 132, i32 44, i32 246, i32 211, i32 161, i32 107, i32 36, i32 109, i32 135, i32 86, i32 151, i32 89, i32 121, i32 98, i32 159, i32 172, i32 237, i32 243, i32 201, i32 137, i32 33, i32 46, i32 4, i32 179, i32 204, i32 47, i32 190, i32 214, i32 10, i32 75] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 57, i32 97, i32 5, i32 237, i32 37, i32 137, i32 139, i32 93, i32 27, i32 203, i32 12, i32 85, i32 244, i32 106, i32 0, i32 138, i32 70, i32 232, i32 30, i32 198, i32 131, i32 200, i32 90, i32 118, i32 219, i32 204, i32 25, i32 122, i32 204, i32 103, i32 70, i32 11] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 83, i32 207, i32 194, i32 161, i32 173, i32 106, i32 243, i32 205, i32 143, i32 201, i32 222, i32 28, i32 248, i32 108, i32 143, i32 248, i32 118, i32 66, i32 231, i32 254, i32 178, i32 114, i32 33, i32 10, i32 102, i32 116, i32 143, i32 183, i32 235, i32 228, i32 111, i32 1] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 34, i32 140, i32 107, i32 190, i32 252, i32 77, i32 112, i32 98, i32 110, i32 82, i32 119, i32 153, i32 136, i32 126, i32 123, i32 87, i32 122, i32 13, i32 254, i32 220, i32 114, i32 146, i32 241, i32 104, i32 29, i32 151, i32 215, i32 124, i32 141, i32 83, i32 16, i32 55] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 83, i32 136, i32 119, i32 2, i32 202, i32 39, i32 168, i32 229, i32 69, i32 226, i32 168, i32 72, i32 42, i32 171, i32 24, i32 202, i32 234, i32 45, i32 42, i32 84, i32 23, i32 55, i32 50, i32 9, i32 220, i32 224, i32 74, i32 183, i32 125, i32 130, i32 16, i32 125] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 138, i32 100, i32 30, i32 20, i32 10, i32 87, i32 212, i32 218, i32 92, i32 150, i32 155, i32 1, i32 76, i32 103, i32 191, i32 139, i32 48, i32 254, i32 8, i32 219, i32 13, i32 213, i32 168, i32 215, i32 9, i32 17, i32 133, i32 162, i32 211, i32 69, i32 251, i32 126] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 218, i32 140, i32 194, i32 208, i32 172, i32 24, i32 232, i32 82, i32 54, i32 212, i32 33, i32 163, i32 221, i32 87, i32 34, i32 121, i32 183, i32 248, i32 113, i32 157, i32 198, i32 145, i32 112, i32 134, i32 86, i32 191, i32 161, i32 17, i32 139, i32 25, i32 225, i32 15] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 24, i32 50, i32 152, i32 44, i32 143, i32 145, i32 174, i32 18, i32 240, i32 140, i32 234, i32 243, i32 60, i32 185, i32 93, i32 228, i32 105, i32 237, i32 178, i32 71, i32 24, i32 189, i32 206, i32 22, i32 82, i32 92, i32 35, i32 226, i32 165, i32 37, i32 82, i32 93] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 185, i32 177, i32 231, i32 93, i32 78, i32 188, i32 238, i32 187, i32 64, i32 129, i32 119, i32 130, i32 25, i32 171, i32 181, i32 198, i32 238, i32 171, i32 91, i32 107, i32 99, i32 146, i32 138, i32 52, i32 141, i32 205, i32 238, i32 79, i32 73, i32 229, i32 201, i32 126] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 33, i32 172, i32 139, i32 34, i32 205, i32 195, i32 154, i32 233, i32 94, i32 120, i32 189, i32 222, i32 186, i32 173, i32 171, i32 191, i32 117, i32 65, i32 9, i32 197, i32 88, i32 164, i32 125, i32 146, i32 176, i32 127, i32 242, i32 161, i32 209, i32 192, i32 179, i32 109] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 98, i32 79, i32 208, i32 117, i32 119, i32 186, i32 118, i32 119, i32 215, i32 184, i32 216, i32 146, i32 111, i32 152, i32 52, i32 61, i32 214, i32 78, i32 28, i32 15, i32 240, i32 143, i32 46, i32 241, i32 179, i32 189, i32 177, i32 185, i32 236, i32 153, i32 180, i32 7] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 96, i32 87, i32 46, i32 154, i32 114, i32 29, i32 107, i32 110, i32 88, i32 51, i32 36, i32 140, i32 72, i32 57, i32 70, i32 142, i32 137, i32 106, i32 136, i32 81, i32 35, i32 98, i32 181, i32 50, i32 9, i32 54, i32 227, i32 87, i32 245, i32 152, i32 222, i32 111] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 44, i32 0, i32 72, i32 74, i32 249, i32 91, i32 135, i32 105, i32 82, i32 229, i32 91, i32 209, i32 177, i32 229, i32 37, i32 37, i32 224, i32 156, i32 194, i32 19, i32 68, i32 232, i32 185, i32 10, i32 112, i32 173, i32 189, i32 15, i32 81, i32 148, i32 105] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 162, i32 220, i32 171, i32 169, i32 37, i32 45, i32 172, i32 95, i32 3, i32 51, i32 8, i32 231, i32 126, i32 254, i32 149, i32 54, i32 60, i32 91, i32 58, i32 211, i32 5, i32 130, i32 28, i32 149, i32 45, i32 216, i32 119, i32 126, i32 2, i32 217, i32 91, i32 112] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 194, i32 254, i32 27, i32 12, i32 103, i32 205, i32 214, i32 224, i32 81, i32 142, i32 44, i32 224, i32 121, i32 136, i32 240, i32 207, i32 65, i32 74, i32 173, i32 35, i32 212, i32 70, i32 202, i32 148, i32 161, i32 195, i32 235, i32 40, i32 6, i32 250, i32 23, i32 20] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 123, i32 170, i32 112, i32 10, i32 75, i32 251, i32 245, i32 191, i32 128, i32 197, i32 207, i32 8, i32 122, i32 221, i32 161, i32 244, i32 157, i32 84, i32 80, i32 83, i32 35, i32 119, i32 35, i32 245, i32 52, i32 165, i32 34, i32 209, i32 13, i32 150, i32 46, i32 71] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 204, i32 183, i32 50, i32 137, i32 87, i32 208, i32 152, i32 117, i32 228, i32 55, i32 153, i32 169, i32 232, i32 186, i32 237, i32 186, i32 235, i32 199, i32 79, i32 21, i32 118, i32 7, i32 12, i32 76, i32 239, i32 159, i32 82, i32 252, i32 4, i32 93, i32 88, i32 16] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 206, i32 130, i32 240, i32 143, i32 121, i32 2, i32 168, i32 209, i32 218, i32 20, i32 9, i32 72, i32 238, i32 138, i32 64, i32 152, i32 118, i32 96, i32 84, i32 90, i32 222, i32 3, i32 36, i32 245, i32 230, i32 47, i32 225, i32 3, i32 191, i32 104, i32 130, i32 127] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 100, i32 233, i32 40, i32 199, i32 164, i32 207, i32 42, i32 249, i32 144, i32 100, i32 114, i32 44, i32 139, i32 235, i32 236, i32 160, i32 242, i32 125, i32 53, i32 181, i32 144, i32 77, i32 127, i32 91, i32 74, i32 73, i32 228, i32 184, i32 59, i32 200, i32 161, i32 47] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 197, i32 204, i32 61, i32 105, i32 166, i32 161, i32 24, i32 68, i32 188, i32 77, i32 119, i32 55, i32 199, i32 134, i32 236, i32 12, i32 201, i32 214, i32 68, i32 169, i32 35, i32 39, i32 185, i32 3, i32 52, i32 167, i32 10, i32 213, i32 199, i32 52, i32 55] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 249, i32 126, i32 62, i32 102, i32 238, i32 249, i32 153, i32 40, i32 255, i32 173, i32 17, i32 216, i32 226, i32 102, i32 197, i32 205, i32 15, i32 13, i32 11, i32 106, i32 252, i32 124, i32 36, i32 168, i32 79, i32 168, i32 94, i32 128, i32 69, i32 139, i32 108, i32 65] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 239, i32 30, i32 236, i32 247, i32 141, i32 119, i32 242, i32 234, i32 219, i32 96, i32 3, i32 33, i32 192, i32 255, i32 94, i32 103, i32 195, i32 113, i32 11, i32 33, i32 180, i32 65, i32 160, i32 104, i32 56, i32 198, i32 1, i32 163, i32 211, i32 81, i32 60, i32 60] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 146, i32 248, i32 214, i32 75, i32 239, i32 66, i32 19, i32 178, i32 74, i32 196, i32 46, i32 114, i32 63, i32 201, i32 17, i32 189, i32 116, i32 2, i32 14, i32 245, i32 19, i32 157, i32 131, i32 26, i32 27, i32 213, i32 84, i32 222, i32 196, i32 30, i32 22, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 39, i32 82, i32 228, i32 99, i32 170, i32 148, i32 230, i32 195, i32 40, i32 156, i32 198, i32 86, i32 172, i32 250, i32 182, i32 189, i32 226, i32 204, i32 118, i32 198, i32 39, i32 39, i32 162, i32 142, i32 120, i32 43, i32 132, i32 114, i32 16, i32 189, i32 78, i32 42] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 234, i32 167, i32 35, i32 239, i32 4, i32 97, i32 128, i32 80, i32 201, i32 110, i32 165, i32 150, i32 209, i32 209, i32 200, i32 195, i32 24, i32 215, i32 45, i32 253, i32 38, i32 189, i32 203, i32 123, i32 146, i32 81, i32 14, i32 74, i32 101, i32 87, i32 184, i32 73] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 171, i32 85, i32 54, i32 195, i32 236, i32 99, i32 85, i32 17, i32 85, i32 246, i32 165, i32 199, i32 1, i32 95, i32 254, i32 121, i32 216, i32 10, i32 247, i32 3, i32 216, i32 152, i32 153, i32 245, i32 208, i32 0, i32 84, i32 107, i32 102, i32 40, i32 245, i32 37] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 122, i32 141, i32 161, i32 93, i32 112, i32 93, i32 81, i32 39, i32 238, i32 48, i32 101, i32 86, i32 149, i32 70, i32 222, i32 189, i32 3, i32 117, i32 180, i32 87, i32 89, i32 137, i32 235, i32 2, i32 158, i32 204, i32 137, i32 25, i32 167, i32 203, i32 23, i32 103] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 106, i32 235, i32 252, i32 154, i32 154, i32 16, i32 206, i32 219, i32 58, i32 28, i32 60, i32 106, i32 157, i32 234, i32 70, i32 188, i32 69, i32 73, i32 172, i32 227, i32 65, i32 18, i32 124, i32 240, i32 247, i32 79, i32 249, i32 247, i32 255, i32 44, i32 137, i32 4] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 48, i32 49, i32 84, i32 26, i32 70, i32 202, i32 230, i32 198, i32 203, i32 226, i32 195, i32 193, i32 139, i32 117, i32 129, i32 190, i32 238, i32 248, i32 163, i32 17, i32 28, i32 37, i32 163, i32 167, i32 53, i32 81, i32 85, i32 226, i32 37, i32 170, i32 226, i32 58] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 180, i32 72, i32 16, i32 159, i32 138, i32 9, i32 118, i32 250, i32 240, i32 122, i32 176, i32 112, i32 247, i32 131, i32 128, i32 82, i32 132, i32 43, i32 38, i32 162, i32 196, i32 93, i32 79, i32 186, i32 177, i32 200, i32 64, i32 13, i32 120, i32 151, i32 196, i32 96] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 212, i32 177, i32 108, i32 8, i32 199, i32 64, i32 56, i32 115, i32 95, i32 11, i32 243, i32 118, i32 93, i32 178, i32 165, i32 47, i32 87, i32 87, i32 7, i32 237, i32 8, i32 162, i32 108, i32 79, i32 8, i32 2, i32 181, i32 14, i32 238, i32 68, i32 250, i32 34] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 15, i32 0, i32 63, i32 166, i32 4, i32 25, i32 86, i32 101, i32 49, i32 127, i32 139, i32 235, i32 13, i32 225, i32 71, i32 137, i32 151, i32 22, i32 83, i32 250, i32 129, i32 167, i32 170, i32 178, i32 191, i32 103, i32 235, i32 114, i32 96, i32 129, i32 13, i32 72] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 126, i32 19, i32 51, i32 205, i32 168, i32 132, i32 86, i32 30, i32 103, i32 175, i32 107, i32 67, i32 172, i32 23, i32 175, i32 22, i32 192, i32 82, i32 153, i32 73, i32 91, i32 135, i32 115, i32 126, i32 181, i32 67, i32 218, i32 107, i32 29, i32 15, i32 45, i32 85] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 233, i32 88, i32 31, i32 255, i32 132, i32 63, i32 147, i32 28, i32 203, i32 225, i32 48, i32 105, i32 165, i32 117, i32 25, i32 126, i32 20, i32 95, i32 248, i32 252, i32 9, i32 221, i32 168, i32 120, i32 157, i32 202, i32 89, i32 139, i32 209, i32 48, i32 1, i32 19] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 255, i32 118, i32 3, i32 197, i32 75, i32 137, i32 153, i32 112, i32 0, i32 89, i32 112, i32 156, i32 213, i32 217, i32 17, i32 137, i32 90, i32 70, i32 254, i32 239, i32 220, i32 217, i32 85, i32 43, i32 69, i32 167, i32 176, i32 45, i32 251, i32 36, i32 194, i32 41] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 56, i32 6, i32 248, i32 11, i32 172, i32 130, i32 196, i32 151, i32 43, i32 144, i32 224, i32 247, i32 168, i32 171, i32 108, i32 8, i32 128, i32 102, i32 144, i32 70, i32 247, i32 38, i32 45, i32 248, i32 241, i32 196, i32 107, i32 74, i32 130, i32 152, i32 142, i32 55] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 142, i32 180, i32 238, i32 184, i32 212, i32 63, i32 178, i32 27, i32 224, i32 10, i32 61, i32 117, i32 52, i32 40, i32 162, i32 142, i32 196, i32 146, i32 123, i32 254, i32 96, i32 110, i32 109, i32 184, i32 49, i32 29, i32 98, i32 13, i32 120, i32 20, i32 66, i32 17] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 94, i32 168, i32 216, i32 4, i32 155, i32 115, i32 201, i32 201, i32 220, i32 13, i32 115, i32 191, i32 10, i32 10, i32 115, i32 255, i32 24, i32 31, i32 156, i32 81, i32 170, i32 198, i32 241, i32 131, i32 37, i32 253, i32 171, i32 163, i32 17, i32 211, i32 1, i32 36] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 77, i32 227, i32 126, i32 56, i32 98, i32 94, i32 100, i32 187, i32 43, i32 83, i32 181, i32 3, i32 104, i32 196, i32 242, i32 43, i32 90, i32 3, i32 50, i32 153, i32 74, i32 65, i32 154, i32 225, i32 26, i32 174, i32 140, i32 72, i32 243, i32 36, i32 50, i32 101] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 232, i32 221, i32 173, i32 58, i32 140, i32 234, i32 244, i32 179, i32 178, i32 229, i32 115, i32 242, i32 237, i32 139, i32 191, i32 237, i32 177, i32 12, i32 12, i32 251, i32 43, i32 241, i32 1, i32 72, i32 232, i32 38, i32 3, i32 142, i32 39, i32 77, i32 150, i32 114] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 200, i32 9, i32 59, i32 96, i32 201, i32 38, i32 77, i32 124, i32 242, i32 156, i32 212, i32 161, i32 59, i32 38, i32 194, i32 4, i32 51, i32 68, i32 118, i32 60, i32 2, i32 187, i32 17, i32 66, i32 12, i32 34, i32 183, i32 198, i32 225, i32 172, i32 180, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 111, i32 133, i32 231, i32 239, i32 222, i32 103, i32 48, i32 252, i32 191, i32 90, i32 224, i32 123, i32 122, i32 42, i32 84, i32 107, i32 93, i32 98, i32 133, i32 161, i32 248, i32 22, i32 136, i32 236, i32 97, i32 185, i32 150, i32 181, i32 239, i32 45, i32 67, i32 77] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 124, i32 49, i32 51, i32 204, i32 228, i32 207, i32 108, i32 255, i32 128, i32 71, i32 119, i32 209, i32 216, i32 233, i32 105, i32 151, i32 152, i32 127, i32 32, i32 87, i32 29, i32 29, i32 79, i32 8, i32 39, i32 200, i32 53, i32 87, i32 64, i32 198, i32 33, i32 12] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 210, i32 142, i32 155, i32 250, i32 66, i32 142, i32 223, i32 143, i32 199, i32 134, i32 249, i32 164, i32 202, i32 112, i32 0, i32 157, i32 33, i32 191, i32 236, i32 87, i32 98, i32 48, i32 88, i32 140, i32 13, i32 53, i32 219, i32 93, i32 139, i32 106, i32 160, i32 90] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 193, i32 88, i32 124, i32 13, i32 32, i32 221, i32 17, i32 38, i32 95, i32 137, i32 59, i32 151, i32 88, i32 248, i32 139, i32 227, i32 223, i32 50, i32 226, i32 252, i32 216, i32 103, i32 242, i32 165, i32 55, i32 30, i32 109, i32 236, i32 124, i32 39, i32 32, i32 121] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 208, i32 233, i32 192, i32 250, i32 149, i32 69, i32 35, i32 150, i32 241, i32 44, i32 121, i32 37, i32 20, i32 206, i32 64, i32 20, i32 68, i32 44, i32 54, i32 80, i32 217, i32 99, i32 86, i32 183, i32 86, i32 59, i32 158, i32 167, i32 239, i32 137, i32 187, i32 14] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 206, i32 127, i32 220, i32 10, i32 204, i32 130, i32 28, i32 10, i32 120, i32 113, i32 232, i32 116, i32 141, i32 1, i32 48, i32 15, i32 167, i32 17, i32 76, i32 223, i32 56, i32 215, i32 167, i32 13, i32 248, i32 72, i32 82, i32 0, i32 128, i32 123, i32 95, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 37, i32 131, i32 230, i32 148, i32 123, i32 129, i32 178, i32 145, i32 174, i32 14, i32 5, i32 201, i32 163, i32 104, i32 45, i32 217, i32 136, i32 37, i32 25, i32 42, i32 97, i32 97, i32 33, i32 151, i32 21, i32 161, i32 53, i32 165, i32 70, i32 200, i32 162, i32 14] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 27, i32 3, i32 13, i32 139, i32 90, i32 27, i32 151, i32 75, i32 242, i32 22, i32 49, i32 61, i32 31, i32 51, i32 160, i32 80, i32 58, i32 24, i32 190, i32 19, i32 161, i32 118, i32 193, i32 186, i32 27, i32 241, i32 5, i32 123, i32 51, i32 168, i32 130, i32 59] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 186, i32 54, i32 123, i32 109, i32 169, i32 234, i32 20, i32 18, i32 197, i32 250, i32 145, i32 0, i32 186, i32 155, i32 153, i32 204, i32 86, i32 2, i32 233, i32 160, i32 38, i32 64, i32 102, i32 140, i32 196, i32 248, i32 133, i32 51, i32 104, i32 231, i32 3, i32 32] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 80, i32 91, i32 255, i32 169, i32 178, i32 241, i32 241, i32 120, i32 207, i32 20, i32 164, i32 169, i32 252, i32 9, i32 70, i32 148, i32 84, i32 101, i32 13, i32 156, i32 95, i32 114, i32 33, i32 226, i32 151, i32 165, i32 45, i32 129, i32 206, i32 74, i32 95, i32 121] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 61, i32 95, i32 92, i32 210, i32 188, i32 125, i32 119, i32 14, i32 42, i32 109, i32 34, i32 69, i32 132, i32 6, i32 196, i32 221, i32 198, i32 166, i32 198, i32 215, i32 73, i32 173, i32 109, i32 135, i32 145, i32 14, i32 58, i32 103, i32 29, i32 44, i32 29, i32 86] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 254, i32 122, i32 116, i32 207, i32 212, i32 210, i32 229, i32 25, i32 222, i32 208, i32 219, i32 112, i32 35, i32 105, i32 230, i32 109, i32 236, i32 236, i32 204, i32 9, i32 51, i32 106, i32 119, i32 220, i32 107, i32 34, i32 118, i32 93, i32 146, i32 9, i32 172, i32 45] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 35, i32 21, i32 23, i32 235, i32 211, i32 219, i32 18, i32 94, i32 1, i32 240, i32 145, i32 171, i32 44, i32 65, i32 206, i32 172, i32 237, i32 27, i32 75, i32 45, i32 188, i32 219, i32 23, i32 102, i32 137, i32 70, i32 173, i32 75, i32 30, i32 111, i32 11, i32 20] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 17, i32 206, i32 191, i32 182, i32 119, i32 45, i32 72, i32 34, i32 24, i32 79, i32 163, i32 93, i32 74, i32 176, i32 112, i32 18, i32 62, i32 84, i32 215, i32 216, i32 14, i32 43, i32 39, i32 220, i32 83, i32 255, i32 202, i32 140, i32 89, i32 179, i32 78, i32 68] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 118, i32 97, i32 15, i32 102, i32 178, i32 33, i32 57, i32 126, i32 192, i32 236, i32 69, i32 40, i32 130, i32 161, i32 41, i32 50, i32 68, i32 53, i32 19, i32 94, i32 97, i32 94, i32 84, i32 203, i32 124, i32 239, i32 246, i32 65, i32 207, i32 159, i32 10] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 221, i32 249, i32 218, i32 132, i32 195, i32 230, i32 138, i32 159, i32 36, i32 210, i32 150, i32 93, i32 57, i32 111, i32 88, i32 140, i32 193, i32 86, i32 147, i32 171, i32 181, i32 121, i32 59, i32 210, i32 168, i32 115, i32 22, i32 237, i32 250, i32 180, i32 47, i32 115] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 177, i32 149, i32 229, i32 146, i32 80, i32 53, i32 17, i32 118, i32 172, i32 244, i32 77, i32 36, i32 195, i32 50, i32 230, i32 235, i32 254, i32 44, i32 135, i32 196, i32 241, i32 86, i32 196, i32 117, i32 36, i32 122, i32 86, i32 133, i32 90, i32 58, i32 19] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 13, i32 22, i32 172, i32 60, i32 74, i32 88, i32 134, i32 58, i32 70, i32 127, i32 108, i32 163, i32 82, i32 110, i32 55, i32 228, i32 150, i32 156, i32 233, i32 92, i32 102, i32 65, i32 103, i32 228, i32 251, i32 121, i32 12, i32 5, i32 246, i32 100, i32 213, i32 124] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 40, i32 193, i32 225, i32 84, i32 115, i32 242, i32 191, i32 118, i32 116, i32 25, i32 25, i32 27, i32 228, i32 185, i32 168, i32 70, i32 101, i32 115, i32 243, i32 119, i32 155, i32 41, i32 116, i32 91, i32 198, i32 137, i32 108, i32 44, i32 124, i32 248, i32 179, i32 15] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 247, i32 213, i32 233, i32 116, i32 93, i32 184, i32 37, i32 22, i32 181, i32 48, i32 188, i32 132, i32 197, i32 240, i32 173, i32 202, i32 18, i32 40, i32 188, i32 157, i32 212, i32 250, i32 130, i32 230, i32 227, i32 191, i32 162, i32 21, i32 44, i32 212, i32 52, i32 16] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 97, i32 177, i32 70, i32 186, i32 14, i32 49, i32 165, i32 103, i32 108, i32 127, i32 214, i32 217, i32 39, i32 133, i32 15, i32 121, i32 20, i32 200, i32 108, i32 47, i32 95, i32 91, i32 156, i32 53, i32 61, i32 56, i32 134, i32 119, i32 101, i32 85, i32 106, i32 123] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 211, i32 176, i32 58, i32 102, i32 96, i32 27, i32 67, i32 241, i32 38, i32 88, i32 153, i32 9, i32 143, i32 45, i32 163, i32 20, i32 113, i32 133, i32 219, i32 237, i32 246, i32 38, i32 213, i32 97, i32 154, i32 115, i32 172, i32 14, i32 234, i32 172, i32 183, i32 12] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 94, i32 244, i32 229, i32 23, i32 14, i32 16, i32 159, i32 231, i32 67, i32 95, i32 103, i32 92, i32 172, i32 75, i32 229, i32 20, i32 65, i32 210, i32 191, i32 72, i32 245, i32 20, i32 176, i32 113, i32 198, i32 97, i32 193, i32 178, i32 112, i32 88, i32 210, i32 90] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 45, i32 186, i32 22, i32 7, i32 146, i32 148, i32 220, i32 189, i32 80, i32 43, i32 201, i32 127, i32 66, i32 0, i32 186, i32 97, i32 237, i32 248, i32 67, i32 237, i32 245, i32 249, i32 64, i32 96, i32 178, i32 176, i32 130, i32 203, i32 237, i32 117, i32 199, i32 101] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 128, i32 186, i32 13, i32 9, i32 64, i32 167, i32 57, i32 166, i32 103, i32 52, i32 126, i32 102, i32 190, i32 86, i32 251, i32 83, i32 120, i32 196, i32 70, i32 232, i32 237, i32 104, i32 108, i32 127, i32 206, i32 232, i32 159, i32 206, i32 162, i32 100, i32 88, i32 83] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 232, i32 193, i32 169, i32 194, i32 123, i32 89, i32 33, i32 51, i32 226, i32 67, i32 115, i32 43, i32 172, i32 45, i32 193, i32 137, i32 59, i32 21, i32 226, i32 213, i32 192, i32 151, i32 138, i32 253, i32 111, i32 54, i32 51, i32 183, i32 185, i32 195, i32 136, i32 9] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 208, i32 182, i32 86, i32 48, i32 92, i32 174, i32 179, i32 117, i32 68, i32 164, i32 131, i32 81, i32 110, i32 1, i32 101, i32 239, i32 69, i32 118, i32 230, i32 245, i32 162, i32 13, i32 212, i32 22, i32 59, i32 88, i32 47, i32 242, i32 47, i32 54, i32 24, i32 63] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 253, i32 47, i32 224, i32 155, i32 30, i32 140, i32 197, i32 24, i32 169, i32 202, i32 212, i32 43, i32 53, i32 182, i32 149, i32 10, i32 159, i32 126, i32 251, i32 196, i32 239, i32 136, i32 123, i32 35, i32 67, i32 236, i32 47, i32 13, i32 15, i32 122, i32 252, i32 92] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 141, i32 210, i32 218, i32 199, i32 68, i32 214, i32 122, i32 219, i32 38, i32 125, i32 29, i32 184, i32 225, i32 222, i32 157, i32 122, i32 125, i32 23, i32 126, i32 28, i32 55, i32 4, i32 141, i32 45, i32 124, i32 94, i32 24, i32 56, i32 30, i32 175, i32 199, i32 27] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 72, i32 49, i32 0, i32 89, i32 246, i32 242, i32 202, i32 15, i32 39, i32 27, i32 99, i32 18, i32 126, i32 2, i32 29, i32 73, i32 192, i32 93, i32 121, i32 135, i32 239, i32 94, i32 122, i32 47, i32 31, i32 102, i32 85, i32 216, i32 9, i32 217, i32 97] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 84, i32 131, i32 2, i32 24, i32 130, i32 147, i32 153, i32 7, i32 208, i32 167, i32 218, i32 216, i32 117, i32 137, i32 250, i32 242, i32 217, i32 163, i32 184, i32 107, i32 90, i32 53, i32 40, i32 210, i32 107, i32 89, i32 194, i32 248, i32 69, i32 226, i32 188, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 192, i32 163, i32 136, i32 81, i32 149, i32 252, i32 150, i32 148, i32 120, i32 232, i32 13, i32 139, i32 65, i32 201, i32 194, i32 88, i32 72, i32 117, i32 16, i32 47, i32 205, i32 42, i32 201, i32 160, i32 109, i32 15, i32 221, i32 156, i32 152, i32 38, i32 61] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 47, i32 102, i32 41, i32 27, i32 4, i32 137, i32 189, i32 126, i32 238, i32 110, i32 221, i32 183, i32 14, i32 239, i32 176, i32 12, i32 180, i32 252, i32 127, i32 194, i32 201, i32 58, i32 60, i32 100, i32 239, i32 69, i32 68, i32 175, i32 138, i32 144, i32 101, i32 118] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 161, i32 76, i32 112, i32 75, i32 14, i32 160, i32 131, i32 112, i32 19, i32 164, i32 175, i32 184, i32 56, i32 25, i32 34, i32 101, i32 9, i32 180, i32 2, i32 79, i32 6, i32 248, i32 23, i32 206, i32 70, i32 69, i32 218, i32 80, i32 124, i32 138, i32 209, i32 78] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 247, i32 212, i32 22, i32 108, i32 78, i32 149, i32 157, i32 93, i32 15, i32 145, i32 43, i32 82, i32 254, i32 92, i32 52, i32 229, i32 48, i32 230, i32 164, i32 59, i32 243, i32 243, i32 52, i32 8, i32 169, i32 74, i32 160, i32 181, i32 110, i32 179, i32 9, i32 10] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 217, i32 94, i32 163, i32 15, i32 235, i32 162, i32 243, i32 32, i32 59, i32 55, i32 212, i32 228, i32 158, i32 206, i32 6, i32 61, i32 83, i32 237, i32 174, i32 43, i32 235, i32 182, i32 36, i32 10, i32 17, i32 163, i32 15, i32 214, i32 127, i32 164, i32 58] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 219, i32 159, i32 44, i32 252, i32 214, i32 178, i32 30, i32 46, i32 82, i32 122, i32 6, i32 135, i32 45, i32 134, i32 114, i32 43, i32 109, i32 144, i32 119, i32 70, i32 67, i32 181, i32 122, i32 248, i32 96, i32 125, i32 145, i32 96, i32 91, i32 157, i32 158, i32 7] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 151, i32 135, i32 199, i32 4, i32 28, i32 56, i32 1, i32 57, i32 88, i32 199, i32 133, i32 163, i32 252, i32 100, i32 0, i32 100, i32 37, i32 162, i32 191, i32 80, i32 148, i32 202, i32 38, i32 49, i32 69, i32 10, i32 36, i32 210, i32 81, i32 41, i32 81, i32 22] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 77, i32 74, i32 215, i32 152, i32 113, i32 87, i32 172, i32 125, i32 139, i32 55, i32 189, i32 99, i32 255, i32 135, i32 177, i32 73, i32 149, i32 32, i32 124, i32 207, i32 124, i32 89, i32 196, i32 145, i32 156, i32 239, i32 208, i32 219, i32 96, i32 9, i32 157, i32 70] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 203, i32 120, i32 148, i32 144, i32 228, i32 69, i32 179, i32 246, i32 217, i32 246, i32 87, i32 116, i32 213, i32 248, i32 131, i32 79, i32 57, i32 201, i32 189, i32 136, i32 194, i32 87, i32 33, i32 31, i32 36, i32 50, i32 104, i32 248, i32 199, i32 33, i32 95, i32 11] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 42, i32 54, i32 104, i32 252, i32 95, i32 182, i32 79, i32 165, i32 227, i32 157, i32 36, i32 47, i32 192, i32 147, i32 97, i32 207, i32 248, i32 10, i32 237, i32 225, i32 219, i32 39, i32 236, i32 14, i32 20, i32 50, i32 95, i32 142, i32 161, i32 98, i32 65, i32 22] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 149, i32 33, i32 1, i32 206, i32 149, i32 91, i32 14, i32 87, i32 199, i32 185, i32 98, i32 181, i32 40, i32 202, i32 17, i32 236, i32 180, i32 70, i32 6, i32 115, i32 38, i32 255, i32 251, i32 102, i32 125, i32 238, i32 95, i32 178, i32 86, i32 253, i32 42, i32 8] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 146, i32 103, i32 119, i32 86, i32 161, i32 255, i32 196, i32 197, i32 149, i32 240, i32 227, i32 58, i32 10, i32 202, i32 148, i32 77, i32 158, i32 126, i32 61, i32 185, i32 110, i32 182, i32 176, i32 206, i32 164, i32 48, i32 137, i32 153, i32 233, i32 173, i32 17, i32 89] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 246, i32 72, i32 149, i32 161, i32 111, i32 95, i32 183, i32 165, i32 187, i32 48, i32 0, i32 28, i32 210, i32 138, i32 214, i32 37, i32 38, i32 27, i32 178, i32 13, i32 55, i32 106, i32 5, i32 244, i32 157, i32 62, i32 23, i32 42, i32 67, i32 210, i32 58, i32 6] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 50, i32 153, i32 147, i32 209, i32 154, i32 114, i32 243, i32 169, i32 22, i32 189, i32 180, i32 76, i32 221, i32 249, i32 212, i32 178, i32 100, i32 154, i32 211, i32 5, i32 228, i32 163, i32 115, i32 28, i32 203, i32 126, i32 87, i32 103, i32 255, i32 4, i32 179, i32 16] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 185, i32 75, i32 164, i32 173, i32 208, i32 109, i32 97, i32 35, i32 180, i32 175, i32 52, i32 169, i32 170, i32 101, i32 236, i32 217, i32 105, i32 227, i32 133, i32 205, i32 204, i32 231, i32 176, i32 155, i32 65, i32 193, i32 28, i32 249, i32 160, i32 250, i32 183, i32 19] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 4, i32 253, i32 136, i32 60, i32 12, i32 208, i32 9, i32 82, i32 81, i32 79, i32 6, i32 25, i32 204, i32 195, i32 187, i32 222, i32 128, i32 197, i32 51, i32 188, i32 249, i32 243, i32 23, i32 54, i32 221, i32 198, i32 222, i32 232, i32 155, i32 93, i32 121, i32 27] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 10, i32 190, i32 81, i32 87, i32 173, i32 80, i32 121, i32 8, i32 113, i32 155, i32 7, i32 149, i32 143, i32 251, i32 174, i32 75, i32 56, i32 186, i32 207, i32 83, i32 42, i32 134, i32 30, i32 192, i32 80, i32 92, i32 103, i32 27, i32 246, i32 135, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 79, i32 0, i32 178, i32 102, i32 85, i32 237, i32 74, i32 237, i32 141, i32 225, i32 102, i32 24, i32 178, i32 20, i32 116, i32 141, i32 253, i32 26, i32 54, i32 15, i32 38, i32 92, i32 139, i32 137, i32 243, i32 171, i32 242, i32 243, i32 36, i32 103, i32 253, i32 112] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 253, i32 78, i32 42, i32 193, i32 58, i32 202, i32 143, i32 0, i32 216, i32 236, i32 116, i32 103, i32 239, i32 97, i32 224, i32 40, i32 208, i32 150, i32 244, i32 72, i32 222, i32 129, i32 227, i32 239, i32 220, i32 170, i32 125, i32 243, i32 182, i32 85, i32 166, i32 101] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 235, i32 203, i32 197, i32 112, i32 145, i32 49, i32 16, i32 147, i32 13, i32 200, i32 208, i32 239, i32 98, i32 232, i32 111, i32 130, i32 227, i32 105, i32 61, i32 145, i32 127, i32 49, i32 225, i32 38, i32 53, i32 60, i32 74, i32 47, i32 171, i32 196, i32 154, i32 94] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 171, i32 27, i32 181, i32 229, i32 43, i32 195, i32 14, i32 41, i32 176, i32 208, i32 115, i32 230, i32 79, i32 100, i32 242, i32 188, i32 228, i32 228, i32 225, i32 154, i32 82, i32 51, i32 47, i32 189, i32 204, i32 3, i32 238, i32 138, i32 250, i32 0, i32 95, i32 80] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 246, i32 219, i32 13, i32 34, i32 61, i32 181, i32 20, i32 117, i32 49, i32 240, i32 129, i32 226, i32 185, i32 55, i32 162, i32 169, i32 132, i32 17, i32 154, i32 7, i32 181, i32 83, i32 137, i32 120, i32 169, i32 48, i32 39, i32 161, i32 241, i32 78, i32 92, i32 46] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 0, i32 84, i32 251, i32 77, i32 220, i32 203, i32 23, i32 53, i32 64, i32 255, i32 183, i32 140, i32 254, i32 74, i32 228, i32 78, i32 153, i32 78, i32 168, i32 116, i32 84, i32 93, i32 92, i32 150, i32 163, i32 18, i32 85, i32 54, i32 49, i32 23, i32 92] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 206, i32 36, i32 239, i32 123, i32 134, i32 242, i32 15, i32 119, i32 232, i32 92, i32 125, i32 135, i32 56, i32 45, i32 239, i32 175, i32 242, i32 140, i32 114, i32 46, i32 235, i32 182, i32 85, i32 75, i32 110, i32 241, i32 78, i32 138, i32 14, i32 154, i32 108, i32 76] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 37, i32 234, i32 134, i32 194, i32 209, i32 79, i32 183, i32 62, i32 168, i32 92, i32 141, i32 102, i32 129, i32 37, i32 237, i32 197, i32 76, i32 5, i32 185, i32 216, i32 214, i32 112, i32 190, i32 115, i32 130, i32 232, i32 161, i32 229, i32 30, i32 113, i32 213, i32 38] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 78, i32 109, i32 195, i32 167, i32 79, i32 34, i32 69, i32 38, i32 162, i32 126, i32 22, i32 247, i32 247, i32 99, i32 220, i32 134, i32 1, i32 42, i32 113, i32 56, i32 92, i32 51, i32 195, i32 206, i32 48, i32 255, i32 249, i32 44, i32 145, i32 113, i32 138, i32 114] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 140, i32 68, i32 9, i32 40, i32 213, i32 35, i32 201, i32 143, i32 243, i32 132, i32 69, i32 198, i32 154, i32 94, i32 255, i32 210, i32 199, i32 87, i32 147, i32 163, i32 193, i32 105, i32 221, i32 98, i32 15, i32 218, i32 92, i32 48, i32 89, i32 93, i32 233, i32 76] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 146, i32 126, i32 80, i32 39, i32 114, i32 215, i32 12, i32 214, i32 105, i32 150, i32 129, i32 53, i32 132, i32 148, i32 53, i32 139, i32 108, i32 170, i32 98, i32 134, i32 110, i32 28, i32 21, i32 243, i32 108, i32 179, i32 255, i32 101, i32 27, i32 162, i32 155, i32 89] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 226, i32 169, i32 101, i32 136, i32 196, i32 80, i32 250, i32 187, i32 59, i32 110, i32 95, i32 68, i32 1, i32 202, i32 151, i32 212, i32 221, i32 246, i32 205, i32 63, i32 63, i32 229, i32 151, i32 103, i32 43, i32 140, i32 102, i32 15, i32 53, i32 155, i32 245, i32 7] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 241, i32 89, i32 39, i32 216, i32 219, i32 90, i32 17, i32 94, i32 130, i32 243, i32 56, i32 255, i32 28, i32 237, i32 254, i32 63, i32 100, i32 84, i32 63, i32 127, i32 209, i32 129, i32 237, i32 239, i32 101, i32 197, i32 203, i32 253, i32 225, i32 128, i32 205, i32 17] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 224, i32 219, i32 34, i32 40, i32 230, i32 255, i32 97, i32 157, i32 65, i32 20, i32 45, i32 59, i32 38, i32 34, i32 223, i32 241, i32 52, i32 129, i32 233, i32 69, i32 238, i32 15, i32 152, i32 139, i32 166, i32 63, i32 239, i32 247, i32 67, i32 25, i32 241, i32 67] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 238, i32 243, i32 0, i32 161, i32 80, i32 222, i32 192, i32 182, i32 1, i32 227, i32 140, i32 60, i32 77, i32 49, i32 210, i32 176, i32 88, i32 205, i32 237, i32 16, i32 74, i32 122, i32 239, i32 128, i32 169, i32 25, i32 50, i32 243, i32 216, i32 51, i32 140, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 203, i32 125, i32 79, i32 255, i32 48, i32 216, i32 18, i32 59, i32 57, i32 28, i32 6, i32 249, i32 76, i32 52, i32 53, i32 113, i32 181, i32 22, i32 148, i32 103, i32 223, i32 238, i32 17, i32 222, i32 164, i32 29, i32 136, i32 147, i32 53, i32 169, i32 50, i32 16] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 233, i32 195, i32 188, i32 123, i32 92, i32 252, i32 178, i32 249, i32 201, i32 47, i32 229, i32 186, i32 58, i32 11, i32 171, i32 100, i32 56, i32 111, i32 91, i32 75, i32 147, i32 218, i32 100, i32 236, i32 77, i32 61, i32 160, i32 245, i32 187, i32 186, i32 71, i32 72] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 96, i32 188, i32 69, i32 31, i32 35, i32 162, i32 59, i32 112, i32 118, i32 230, i32 151, i32 153, i32 79, i32 119, i32 84, i32 103, i32 48, i32 154, i32 231, i32 102, i32 214, i32 205, i32 46, i32 81, i32 36, i32 44, i32 66, i32 74, i32 17, i32 254, i32 111, i32 126] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 135, i32 192, i32 177, i32 240, i32 163, i32 111, i32 12, i32 147, i32 169, i32 10, i32 114, i32 239, i32 92, i32 190, i32 101, i32 53, i32 167, i32 106, i32 78, i32 44, i32 191, i32 33, i32 35, i32 232, i32 47, i32 151, i32 199, i32 62, i32 200, i32 23, i32 172, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 123, i32 239, i32 33, i32 229, i32 64, i32 204, i32 30, i32 220, i32 214, i32 189, i32 151, i32 122, i32 124, i32 117, i32 134, i32 122, i32 37, i32 90, i32 110, i32 124, i32 229, i32 81, i32 60, i32 27, i32 91, i32 130, i32 154, i32 7, i32 96, i32 161, i32 25, i32 4] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 150, i32 136, i32 166, i32 171, i32 143, i32 227, i32 58, i32 73, i32 248, i32 254, i32 52, i32 231, i32 106, i32 178, i32 254, i32 64, i32 38, i32 116, i32 87, i32 76, i32 246, i32 212, i32 153, i32 206, i32 93, i32 123, i32 47, i32 103, i32 214, i32 90, i32 228, i32 78] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 92, i32 130, i32 179, i32 189, i32 85, i32 37, i32 246, i32 106, i32 147, i32 164, i32 2, i32 198, i32 125, i32 92, i32 177, i32 43, i32 91, i32 255, i32 251, i32 86, i32 248, i32 1, i32 65, i32 144, i32 198, i32 182, i32 172, i32 79, i32 254, i32 167, i32 65, i32 112] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 219, i32 250, i32 155, i32 44, i32 212, i32 35, i32 103, i32 44, i32 138, i32 99, i32 108, i32 7, i32 38, i32 72, i32 79, i32 194, i32 3, i32 210, i32 83, i32 32, i32 40, i32 237, i32 101, i32 113, i32 71, i32 169, i32 22, i32 22, i32 18, i32 188, i32 40, i32 51] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 57, i32 192, i32 250, i32 250, i32 205, i32 51, i32 67, i32 199, i32 151, i32 118, i32 155, i32 147, i32 145, i32 114, i32 235, i32 197, i32 24, i32 103, i32 76, i32 17, i32 240, i32 244, i32 229, i32 115, i32 178, i32 92, i32 27, i32 194, i32 38, i32 63, i32 191, i32 43] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 134, i32 230, i32 140, i32 29, i32 223, i32 202, i32 252, i32 213, i32 248, i32 58, i32 195, i32 68, i32 114, i32 230, i32 120, i32 157, i32 43, i32 151, i32 248, i32 40, i32 69, i32 180, i32 32, i32 201, i32 42, i32 140, i32 103, i32 170, i32 17, i32 197, i32 91, i32 47] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 23, i32 15, i32 134, i32 82, i32 215, i32 157, i32 195, i32 68, i32 81, i32 118, i32 50, i32 101, i32 180, i32 55, i32 129, i32 153, i32 70, i32 55, i32 98, i32 237, i32 207, i32 100, i32 157, i32 114, i32 64, i32 122, i32 76, i32 11, i32 118, i32 42, i32 251, i32 86] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 167, i32 144, i32 124, i32 195, i32 111, i32 23, i32 165, i32 160, i32 103, i32 114, i32 23, i32 234, i32 126, i32 99, i32 20, i32 131, i32 222, i32 193, i32 113, i32 45, i32 65, i32 50, i32 122, i32 243, i32 209, i32 43, i32 216, i32 42, i32 166, i32 70, i32 54] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 172, i32 204, i32 107, i32 124, i32 249, i32 184, i32 139, i32 8, i32 92, i32 208, i32 125, i32 143, i32 115, i32 234, i32 32, i32 218, i32 134, i32 202, i32 0, i32 199, i32 173, i32 115, i32 77, i32 233, i32 232, i32 169, i32 218, i32 31, i32 3, i32 6, i32 221, i32 36] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 156, i32 178, i32 97, i32 10, i32 152, i32 42, i32 165, i32 215, i32 238, i32 169, i32 172, i32 101, i32 203, i32 10, i32 30, i32 226, i32 190, i32 220, i32 133, i32 89, i32 15, i32 156, i32 166, i32 87, i32 52, i32 165, i32 135, i32 235, i32 123, i32 30, i32 12, i32 60] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 47, i32 189, i32 132, i32 99, i32 13, i32 181, i32 160, i32 240, i32 75, i32 158, i32 147, i32 198, i32 52, i32 154, i32 52, i32 255, i32 115, i32 25, i32 47, i32 110, i32 84, i32 69, i32 44, i32 146, i32 49, i32 118, i32 52, i32 241, i32 178, i32 38, i32 232, i32 116] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 10, i32 103, i32 144, i32 109, i32 12, i32 76, i32 204, i32 192, i32 230, i32 189, i32 167, i32 94, i32 85, i32 140, i32 205, i32 88, i32 155, i32 17, i32 162, i32 187, i32 75, i32 177, i32 67, i32 4, i32 60, i32 85, i32 237, i32 35, i32 254, i32 205, i32 177, i32 83] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 5, i32 251, i32 117, i32 245, i32 1, i32 175, i32 56, i32 114, i32 88, i32 252, i32 4, i32 41, i32 52, i32 122, i32 103, i32 162, i32 8, i32 80, i32 110, i32 208, i32 43, i32 115, i32 213, i32 184, i32 228, i32 48, i32 150, i32 173, i32 69, i32 223, i32 166, i32 92] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 13, i32 136, i32 26, i32 144, i32 126, i32 220, i32 216, i32 254, i32 193, i32 47, i32 93, i32 103, i32 238, i32 103, i32 47, i32 237, i32 111, i32 85, i32 67, i32 95, i32 135, i32 20, i32 53, i32 66, i32 211, i32 117, i32 174, i32 213, i32 211, i32 133, i32 26, i32 118] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 135, i32 200, i32 160, i32 110, i32 225, i32 176, i32 173, i32 106, i32 74, i32 52, i32 113, i32 237, i32 124, i32 214, i32 68, i32 3, i32 101, i32 74, i32 92, i32 92, i32 4, i32 245, i32 36, i32 63, i32 176, i32 22, i32 94, i32 140, i32 178, i32 210, i32 197, i32 32] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 152, i32 131, i32 194, i32 55, i32 160, i32 65, i32 168, i32 72, i32 92, i32 95, i32 191, i32 200, i32 250, i32 36, i32 224, i32 89, i32 44, i32 189, i32 246, i32 129, i32 126, i32 136, i32 230, i32 202, i32 4, i32 216, i32 93, i32 96, i32 187, i32 116, i32 167, i32 11] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 33, i32 19, i32 145, i32 191, i32 119, i32 122, i32 51, i32 188, i32 233, i32 7, i32 57, i32 10, i32 221, i32 125, i32 6, i32 16, i32 154, i32 238, i32 71, i32 115, i32 27, i32 21, i32 90, i32 251, i32 205, i32 77, i32 208, i32 210, i32 58, i32 1, i32 186, i32 84] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 72, i32 213, i32 57, i32 74, i32 11, i32 32, i32 106, i32 67, i32 160, i32 7, i32 130, i32 94, i32 73, i32 124, i32 201, i32 71, i32 241, i32 124, i32 55, i32 185, i32 35, i32 239, i32 107, i32 70, i32 69, i32 140, i32 69, i32 118, i32 223, i32 20, i32 107, i32 110] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 66, i32 201, i32 202, i32 41, i32 76, i32 118, i32 55, i32 218, i32 138, i32 45, i32 124, i32 58, i32 88, i32 242, i32 3, i32 180, i32 181, i32 185, i32 26, i32 19, i32 45, i32 222, i32 95, i32 107, i32 157, i32 186, i32 82, i32 201, i32 93, i32 179, i32 243, i32 48] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 76, i32 111, i32 254, i32 107, i32 12, i32 98, i32 215, i32 72, i32 113, i32 239, i32 177, i32 133, i32 121, i32 192, i32 237, i32 36, i32 177, i32 8, i32 147, i32 118, i32 142, i32 247, i32 56, i32 142, i32 235, i32 254, i32 128, i32 64, i32 175, i32 144, i32 100, i32 73] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 74, i32 136, i32 218, i32 193, i32 152, i32 68, i32 60, i32 83, i32 78, i32 219, i32 75, i32 185, i32 18, i32 95, i32 205, i32 8, i32 4, i32 239, i32 117, i32 231, i32 177, i32 58, i32 229, i32 7, i32 250, i32 202, i32 101, i32 123, i32 114, i32 16, i32 100, i32 127] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 61, i32 129, i32 240, i32 235, i32 22, i32 253, i32 88, i32 51, i32 141, i32 124, i32 26, i32 251, i32 32, i32 44, i32 138, i32 238, i32 144, i32 187, i32 51, i32 109, i32 69, i32 233, i32 142, i32 153, i32 133, i32 225, i32 8, i32 31, i32 197, i32 241, i32 181, i32 70] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 228, i32 231, i32 67, i32 75, i32 160, i32 63, i32 43, i32 6, i32 186, i32 23, i32 174, i32 61, i32 230, i32 206, i32 189, i32 184, i32 237, i32 116, i32 17, i32 53, i32 236, i32 150, i32 254, i32 49, i32 227, i32 14, i32 122, i32 78, i32 201, i32 29, i32 203, i32 32] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 224, i32 103, i32 233, i32 123, i32 219, i32 150, i32 92, i32 176, i32 50, i32 208, i32 89, i32 49, i32 144, i32 220, i32 146, i32 151, i32 172, i32 9, i32 56, i32 49, i32 15, i32 126, i32 214, i32 93, i32 208, i32 6, i32 182, i32 31, i32 234, i32 240, i32 91, i32 7] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 129, i32 159, i32 199, i32 222, i32 107, i32 65, i32 34, i32 53, i32 20, i32 103, i32 119, i32 62, i32 144, i32 129, i32 176, i32 217, i32 133, i32 76, i32 202, i32 155, i32 63, i32 4, i32 89, i32 214, i32 170, i32 23, i32 195, i32 136, i32 52, i32 55, i32 186, i32 67] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 76, i32 182, i32 105, i32 200, i32 129, i32 149, i32 148, i32 51, i32 146, i32 52, i32 233, i32 60, i32 132, i32 13, i32 61, i32 90, i32 55, i32 156, i32 34, i32 160, i32 170, i32 101, i32 206, i32 180, i32 194, i32 45, i32 102, i32 103, i32 2, i32 255, i32 116, i32 16] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 34, i32 176, i32 213, i32 230, i32 199, i32 239, i32 177, i32 167, i32 19, i32 218, i32 96, i32 180, i32 128, i32 193, i32 66, i32 125, i32 16, i32 112, i32 151, i32 4, i32 77, i32 218, i32 35, i32 137, i32 194, i32 14, i32 104, i32 203, i32 222, i32 224, i32 155, i32 41] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 254, i32 66, i32 42, i32 54, i32 43, i32 46, i32 54, i32 100, i32 92, i32 139, i32 204, i32 129, i32 106, i32 21, i32 8, i32 161, i32 39, i32 232, i32 87, i32 229, i32 120, i32 142, i32 242, i32 88, i32 25, i32 18, i32 66, i32 174, i32 196, i32 99, i32 62] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 120, i32 150, i32 156, i32 167, i32 202, i32 128, i32 174, i32 2, i32 133, i32 177, i32 124, i32 4, i32 92, i32 193, i32 91, i32 38, i32 193, i32 186, i32 237, i32 165, i32 89, i32 112, i32 133, i32 140, i32 140, i32 232, i32 135, i32 172, i32 106, i32 40, i32 153, i32 53] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 159, i32 4, i32 8, i32 40, i32 190, i32 135, i32 218, i32 128, i32 40, i32 56, i32 222, i32 159, i32 205, i32 228, i32 227, i32 98, i32 251, i32 46, i32 70, i32 141, i32 1, i32 179, i32 6, i32 81, i32 212, i32 25, i32 59, i32 17, i32 250, i32 226, i32 173, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 160, i32 32, i32 153, i32 105, i32 10, i32 174, i32 163, i32 112, i32 78, i32 100, i32 128, i32 183, i32 133, i32 156, i32 135, i32 84, i32 67, i32 67, i32 85, i32 128, i32 109, i32 141, i32 124, i32 169, i32 100, i32 202, i32 108, i32 46, i32 33, i32 216, i32 200, i32 108] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 145, i32 74, i32 7, i32 173, i32 8, i32 117, i32 193, i32 79, i32 164, i32 178, i32 195, i32 111, i32 70, i32 62, i32 177, i32 206, i32 82, i32 171, i32 103, i32 9, i32 84, i32 72, i32 107, i32 108, i32 215, i32 29, i32 113, i32 118, i32 203, i32 255, i32 221, i32 49] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 54, i32 136, i32 250, i32 253, i32 240, i32 54, i32 111, i32 7, i32 116, i32 136, i32 80, i32 208, i32 149, i32 56, i32 74, i32 72, i32 46, i32 7, i32 100, i32 151, i32 17, i32 118, i32 1, i32 26, i32 39, i32 77, i32 142, i32 37, i32 154, i32 155, i32 28, i32 34] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 190, i32 87, i32 189, i32 14, i32 15, i32 172, i32 94, i32 118, i32 163, i32 113, i32 173, i32 43, i32 16, i32 69, i32 2, i32 236, i32 89, i32 213, i32 93, i32 169, i32 68, i32 204, i32 37, i32 76, i32 179, i32 60, i32 91, i32 105, i32 7, i32 85, i32 38, i32 107] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 48, i32 107, i32 212, i32 167, i32 81, i32 41, i32 227, i32 249, i32 122, i32 117, i32 42, i32 130, i32 47, i32 214, i32 29, i32 153, i32 43, i32 128, i32 213, i32 103, i32 30, i32 21, i32 157, i32 202, i32 253, i32 235, i32 172, i32 151, i32 53, i32 9, i32 127, i32 63] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 53, i32 13, i32 52, i32 10, i32 184, i32 103, i32 86, i32 41, i32 32, i32 243, i32 25, i32 95, i32 226, i32 131, i32 66, i32 115, i32 83, i32 168, i32 197, i32 2, i32 25, i32 51, i32 180, i32 100, i32 189, i32 195, i32 135, i32 140, i32 215, i32 118, i32 237, i32 37] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 71, i32 57, i32 55, i32 118, i32 13, i32 29, i32 12, i32 245, i32 90, i32 109, i32 67, i32 136, i32 153, i32 21, i32 180, i32 82, i32 15, i32 42, i32 179, i32 176, i32 63, i32 166, i32 179, i32 38, i32 179, i32 199, i32 69, i32 245, i32 146, i32 95, i32 155, i32 23] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 157, i32 35, i32 189, i32 21, i32 254, i32 82, i32 82, i32 21, i32 38, i32 121, i32 134, i32 186, i32 6, i32 86, i32 102, i32 187, i32 140, i32 46, i32 16, i32 17, i32 213, i32 74, i32 24, i32 82, i32 218, i32 132, i32 68, i32 240, i32 62, i32 233, i32 140, i32 53] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 173, i32 160, i32 65, i32 236, i32 200, i32 77, i32 185, i32 210, i32 110, i32 150, i32 78, i32 91, i32 197, i32 194, i32 160, i32 27, i32 207, i32 12, i32 191, i32 23, i32 102, i32 87, i32 193, i32 23, i32 144, i32 69, i32 113, i32 194, i32 225, i32 36, i32 235, i32 39] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 44, i32 185, i32 66, i32 164, i32 175, i32 59, i32 66, i32 14, i32 194, i32 15, i32 242, i32 234, i32 131, i32 175, i32 154, i32 19, i32 23, i32 176, i32 189, i32 137, i32 23, i32 227, i32 114, i32 203, i32 14, i32 118, i32 126, i32 65, i32 99, i32 4, i32 136, i32 113] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 117, i32 120, i32 56, i32 134, i32 87, i32 221, i32 159, i32 238, i32 84, i32 112, i32 101, i32 191, i32 241, i32 44, i32 224, i32 57, i32 13, i32 227, i32 137, i32 253, i32 142, i32 147, i32 79, i32 67, i32 220, i32 213, i32 91, i32 222, i32 249, i32 152, i32 229, i32 123] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 231, i32 59, i32 101, i32 17, i32 223, i32 178, i32 242, i32 99, i32 148, i32 18, i32 111, i32 92, i32 158, i32 119, i32 193, i32 182, i32 216, i32 171, i32 88, i32 122, i32 29, i32 149, i32 115, i32 221, i32 231, i32 227, i32 111, i32 242, i32 3, i32 29, i32 219, i32 118] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 174, i32 6, i32 78, i32 44, i32 82, i32 27, i32 188, i32 90, i32 90, i32 165, i32 190, i32 39, i32 189, i32 235, i32 225, i32 20, i32 23, i32 104, i32 38, i32 7, i32 3, i32 209, i32 24, i32 11, i32 223, i32 241, i32 6, i32 92, i32 166, i32 27, i32 185, i32 36] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 197, i32 102, i32 128, i32 19, i32 14, i32 72, i32 140, i32 135, i32 49, i32 132, i32 180, i32 96, i32 237, i32 197, i32 236, i32 182, i32 197, i32 5, i32 51, i32 95, i32 47, i32 125, i32 64, i32 182, i32 50, i32 29, i32 56, i32 116, i32 27, i32 241, i32 9, i32 61] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 212, i32 105, i32 130, i32 188, i32 141, i32 248, i32 52, i32 54, i32 117, i32 85, i32 24, i32 85, i32 88, i32 60, i32 121, i32 175, i32 38, i32 128, i32 171, i32 155, i32 149, i32 0, i32 241, i32 203, i32 218, i32 193, i32 159, i32 246, i32 47, i32 162, i32 244, i32 69] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 23, i32 190, i32 235, i32 133, i32 237, i32 158, i32 205, i32 86, i32 245, i32 23, i32 69, i32 66, i32 180, i32 31, i32 68, i32 76, i32 5, i32 116, i32 21, i32 71, i32 0, i32 198, i32 106, i32 61, i32 36, i32 9, i32 13, i32 88, i32 177, i32 66, i32 215, i32 4] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 141, i32 189, i32 163, i32 196, i32 6, i32 155, i32 31, i32 144, i32 88, i32 96, i32 116, i32 178, i32 0, i32 59, i32 60, i32 210, i32 218, i32 130, i32 187, i32 16, i32 144, i32 105, i32 146, i32 169, i32 180, i32 48, i32 129, i32 227, i32 124, i32 168, i32 137, i32 69] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 63, i32 220, i32 5, i32 203, i32 65, i32 60, i32 200, i32 35, i32 4, i32 44, i32 56, i32 153, i32 227, i32 104, i32 85, i32 249, i32 211, i32 50, i32 199, i32 191, i32 250, i32 212, i32 27, i32 93, i32 222, i32 220, i32 16, i32 66, i32 192, i32 66, i32 217, i32 117] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 45, i32 171, i32 53, i32 78, i32 135, i32 196, i32 101, i32 151, i32 103, i32 36, i32 164, i32 71, i32 173, i32 63, i32 142, i32 243, i32 203, i32 49, i32 23, i32 119, i32 197, i32 226, i32 215, i32 143, i32 60, i32 193, i32 205, i32 86, i32 72, i32 193, i32 108, i32 105] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 20, i32 174, i32 95, i32 136, i32 123, i32 165, i32 144, i32 223, i32 16, i32 178, i32 139, i32 94, i32 36, i32 23, i32 195, i32 163, i32 212, i32 15, i32 146, i32 97, i32 26, i32 25, i32 90, i32 173, i32 118, i32 189, i32 216, i32 28, i32 221, i32 224, i32 18, i32 109] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 142, i32 189, i32 112, i32 143, i32 2, i32 163, i32 36, i32 77, i32 90, i32 103, i32 196, i32 218, i32 247, i32 32, i32 15, i32 129, i32 91, i32 122, i32 5, i32 36, i32 103, i32 131, i32 11, i32 42, i32 128, i32 231, i32 253, i32 116, i32 75, i32 158, i32 92, i32 13] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 148, i32 213, i32 95, i32 31, i32 162, i32 251, i32 235, i32 225, i32 7, i32 52, i32 248, i32 32, i32 173, i32 129, i32 48, i32 6, i32 45, i32 161, i32 129, i32 149, i32 54, i32 207, i32 17, i32 11, i32 175, i32 193, i32 43, i32 154, i32 108, i32 85, i32 193, i32 22] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 54, i32 79, i32 241, i32 94, i32 116, i32 53, i32 19, i32 40, i32 215, i32 17, i32 207, i32 184, i32 222, i32 147, i32 179, i32 5, i32 184, i32 181, i32 115, i32 233, i32 235, i32 173, i32 25, i32 30, i32 137, i32 15, i32 139, i32 21, i32 213, i32 140, i32 227, i32 35] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 51, i32 121, i32 231, i32 24, i32 230, i32 15, i32 87, i32 147, i32 21, i32 160, i32 167, i32 170, i32 196, i32 191, i32 79, i32 48, i32 116, i32 149, i32 94, i32 105, i32 74, i32 91, i32 69, i32 228, i32 0, i32 235, i32 35, i32 116, i32 76, i32 223, i32 107, i32 69] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 151, i32 41, i32 108, i32 196, i32 66, i32 11, i32 221, i32 192, i32 41, i32 92, i32 155, i32 52, i32 151, i32 208, i32 199, i32 121, i32 128, i32 99, i32 116, i32 228, i32 142, i32 55, i32 176, i32 43, i32 124, i32 232, i32 104, i32 108, i32 195, i32 130, i32 151, i32 87] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 34, i32 190, i32 131, i32 182, i32 75, i32 128, i32 107, i32 67, i32 36, i32 94, i32 239, i32 153, i32 155, i32 168, i32 252, i32 37, i32 141, i32 59, i32 3, i32 148, i32 43, i32 62, i32 231, i32 149, i32 118, i32 155, i32 204, i32 21, i32 219, i32 50, i32 230, i32 102] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 132, i32 240, i32 74, i32 19, i32 166, i32 214, i32 250, i32 147, i32 70, i32 7, i32 246, i32 126, i32 92, i32 109, i32 94, i32 246, i32 166, i32 231, i32 72, i32 240, i32 6, i32 234, i32 255, i32 144, i32 193, i32 204, i32 76, i32 25, i32 156, i32 60, i32 78, i32 83] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 42, i32 80, i32 227, i32 7, i32 21, i32 89, i32 242, i32 139, i32 129, i32 242, i32 243, i32 211, i32 108, i32 153, i32 140, i32 112, i32 103, i32 236, i32 204, i32 238, i32 158, i32 89, i32 69, i32 89, i32 125, i32 71, i32 117, i32 105, i32 245, i32 36, i32 147, i32 93] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 106, i32 79, i32 27, i32 190, i32 107, i32 48, i32 207, i32 117, i32 70, i32 227, i32 123, i32 157, i32 252, i32 205, i32 216, i32 92, i32 31, i32 180, i32 200, i32 226, i32 36, i32 236, i32 26, i32 40, i32 5, i32 50, i32 87, i32 253, i32 60, i32 90, i32 152, i32 16] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 163, i32 219, i32 247, i32 48, i32 216, i32 194, i32 154, i32 225, i32 211, i32 206, i32 34, i32 229, i32 128, i32 30, i32 217, i32 228, i32 31, i32 171, i32 192, i32 113, i32 26, i32 134, i32 14, i32 39, i32 153, i32 91, i32 250, i32 118, i32 153, i32 176, i32 8, i32 60] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 42, i32 147, i32 210, i32 133, i32 27, i32 106, i32 93, i32 166, i32 238, i32 209, i32 209, i32 51, i32 189, i32 106, i32 54, i32 115, i32 55, i32 58, i32 68, i32 180, i32 236, i32 169, i32 122, i32 222, i32 131, i32 64, i32 215, i32 223, i32 40, i32 186, i32 162, i32 48] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 211, i32 181, i32 109, i32 5, i32 63, i32 159, i32 243, i32 21, i32 141, i32 124, i32 202, i32 201, i32 252, i32 138, i32 124, i32 148, i32 176, i32 99, i32 54, i32 155, i32 120, i32 209, i32 145, i32 31, i32 147, i32 216, i32 87, i32 67, i32 222, i32 118, i32 163, i32 67] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 155, i32 53, i32 226, i32 169, i32 61, i32 50, i32 30, i32 187, i32 22, i32 40, i32 112, i32 233, i32 69, i32 47, i32 143, i32 112, i32 127, i32 8, i32 126, i32 83, i32 196, i32 122, i32 191, i32 247, i32 225, i32 164, i32 106, i32 216, i32 172, i32 100, i32 27, i32 17] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 178, i32 235, i32 71, i32 70, i32 24, i32 62, i32 31, i32 153, i32 12, i32 204, i32 241, i32 44, i32 224, i32 231, i32 143, i32 224, i32 1, i32 126, i32 101, i32 184, i32 12, i32 208, i32 251, i32 200, i32 185, i32 144, i32 152, i32 51, i32 97, i32 59, i32 216, i32 39] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 160, i32 190, i32 114, i32 58, i32 80, i32 75, i32 116, i32 171, i32 1, i32 200, i32 147, i32 197, i32 228, i32 199, i32 8, i32 108, i32 180, i32 202, i32 238, i32 235, i32 142, i32 215, i32 78, i32 38, i32 198, i32 29, i32 226, i32 113, i32 175, i32 137, i32 160, i32 42] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 152, i32 11, i32 228, i32 222, i32 219, i32 168, i32 250, i32 130, i32 116, i32 6, i32 82, i32 109, i32 8, i32 82, i32 138, i32 255, i32 98, i32 197, i32 106, i32 68, i32 15, i32 81, i32 140, i32 31, i32 110, i32 182, i32 198, i32 44, i32 129, i32 211, i32 118, i32 70] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 244, i32 41, i32 116, i32 46, i32 128, i32 167, i32 26, i32 143, i32 246, i32 189, i32 214, i32 142, i32 191, i32 193, i32 149, i32 42, i32 235, i32 160, i32 127, i32 69, i32 160, i32 80, i32 20, i32 5, i32 177, i32 87, i32 76, i32 116, i32 183, i32 226, i32 137, i32 125] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 238, i32 167, i32 173, i32 183, i32 9, i32 11, i32 73, i32 78, i32 191, i32 202, i32 229, i32 33, i32 230, i32 230, i32 175, i32 213, i32 103, i32 243, i32 206, i32 126, i32 124, i32 147, i32 123, i32 90, i32 16, i32 18, i32 14, i32 108, i32 6, i32 17, i32 117] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 213, i32 252, i32 134, i32 163, i32 59, i32 163, i32 62, i32 10, i32 251, i32 11, i32 247, i32 54, i32 177, i32 91, i32 218, i32 112, i32 183, i32 0, i32 167, i32 218, i32 136, i32 143, i32 132, i32 168, i32 188, i32 28, i32 57, i32 184, i32 101, i32 243, i32 77, i32 96] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 150, i32 157, i32 49, i32 244, i32 162, i32 190, i32 129, i32 185, i32 165, i32 89, i32 158, i32 186, i32 7, i32 190, i32 116, i32 88, i32 216, i32 235, i32 197, i32 159, i32 61, i32 209, i32 244, i32 174, i32 206, i32 83, i32 223, i32 79, i32 199, i32 42, i32 137, i32 77] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 41, i32 216, i32 242, i32 170, i32 233, i32 14, i32 247, i32 46, i32 95, i32 157, i32 138, i32 91, i32 9, i32 237, i32 201, i32 36, i32 34, i32 244, i32 15, i32 37, i32 143, i32 28, i32 132, i32 110, i32 52, i32 20, i32 108, i32 234, i32 179, i32 134, i32 93, i32 4] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 7, i32 152, i32 97, i32 232, i32 106, i32 210, i32 129, i32 73, i32 37, i32 213, i32 91, i32 24, i32 199, i32 53, i32 82, i32 81, i32 164, i32 70, i32 173, i32 24, i32 13, i32 201, i32 95, i32 24, i32 145, i32 59, i32 180, i32 192, i32 96, i32 89, i32 141, i32 102] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 3, i32 27, i32 121, i32 83, i32 110, i32 36, i32 174, i32 87, i32 217, i32 88, i32 9, i32 133, i32 72, i32 162, i32 211, i32 181, i32 226, i32 77, i32 17, i32 130, i32 230, i32 134, i32 60, i32 233, i32 177, i32 0, i32 25, i32 194, i32 87, i32 247, i32 102, i32 122] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 15, i32 227, i32 137, i32 3, i32 215, i32 34, i32 149, i32 159, i32 202, i32 180, i32 141, i32 158, i32 109, i32 151, i32 255, i32 141, i32 33, i32 89, i32 7, i32 239, i32 3, i32 45, i32 94, i32 248, i32 68, i32 70, i32 231, i32 133, i32 128, i32 197, i32 137, i32 80] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 216, i32 83, i32 134, i32 36, i32 134, i32 41, i32 82, i32 1, i32 250, i32 32, i32 195, i32 78, i32 149, i32 203, i32 173, i32 123, i32 52, i32 148, i32 48, i32 183, i32 122, i32 250, i32 150, i32 65, i32 96, i32 43, i32 203, i32 89, i32 185, i32 202, i32 80] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 194, i32 91, i32 155, i32 120, i32 35, i32 27, i32 58, i32 136, i32 148, i32 95, i32 10, i32 155, i32 152, i32 43, i32 110, i32 83, i32 17, i32 246, i32 255, i32 198, i32 125, i32 66, i32 204, i32 2, i32 128, i32 64, i32 13, i32 30, i32 251, i32 175, i32 97, i32 7] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 176, i32 230, i32 47, i32 129, i32 112, i32 161, i32 46, i32 57, i32 4, i32 124, i32 196, i32 44, i32 135, i32 69, i32 74, i32 91, i32 105, i32 151, i32 172, i32 109, i32 44, i32 16, i32 66, i32 124, i32 59, i32 21, i32 112, i32 96, i32 14, i32 17, i32 109, i32 58] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 155, i32 24, i32 128, i32 94, i32 219, i32 5, i32 189, i32 198, i32 183, i32 60, i32 194, i32 64, i32 77, i32 93, i32 206, i32 151, i32 138, i32 52, i32 21, i32 171, i32 40, i32 93, i32 16, i32 240, i32 55, i32 12, i32 204, i32 22, i32 250, i32 31, i32 51, i32 13] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 25, i32 249, i32 53, i32 170, i32 89, i32 26, i32 12, i32 92, i32 6, i32 252, i32 106, i32 11, i32 151, i32 83, i32 54, i32 252, i32 42, i32 165, i32 90, i32 155, i32 48, i32 239, i32 35, i32 175, i32 57, i32 93, i32 154, i32 107, i32 117, i32 87, i32 72, i32 11] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 220, i32 118, i32 59, i32 252, i32 249, i32 156, i32 63, i32 137, i32 11, i32 98, i32 83, i32 175, i32 131, i32 1, i32 46, i32 188, i32 106, i32 198, i32 3, i32 13, i32 117, i32 42, i32 13, i32 230, i32 148, i32 84, i32 207, i32 179, i32 229, i32 150, i32 37] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 254, i32 130, i32 177, i32 116, i32 49, i32 138, i32 167, i32 111, i32 86, i32 189, i32 141, i32 244, i32 224, i32 148, i32 81, i32 89, i32 222, i32 44, i32 90, i32 244, i32 132, i32 107, i32 74, i32 136, i32 147, i32 192, i32 12, i32 154, i32 172, i32 167, i32 160, i32 104] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 37, i32 13, i32 214, i32 199, i32 35, i32 71, i32 16, i32 173, i32 199, i32 8, i32 92, i32 135, i32 135, i32 147, i32 152, i32 24, i32 184, i32 211, i32 156, i32 172, i32 90, i32 61, i32 197, i32 117, i32 248, i32 73, i32 50, i32 20, i32 204, i32 81, i32 150, i32 36] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 101, i32 156, i32 93, i32 240, i32 55, i32 4, i32 240, i32 52, i32 105, i32 42, i32 240, i32 165, i32 100, i32 202, i32 222, i32 43, i32 91, i32 21, i32 16, i32 210, i32 171, i32 6, i32 221, i32 196, i32 176, i32 182, i32 91, i32 193, i32 23, i32 223, i32 143, i32 2] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 189, i32 89, i32 61, i32 191, i32 92, i32 49, i32 68, i32 44, i32 50, i32 148, i32 4, i32 96, i32 132, i32 15, i32 173, i32 0, i32 182, i32 143, i32 201, i32 29, i32 204, i32 92, i32 162, i32 73, i32 14, i32 80, i32 145, i32 8, i32 154, i32 67, i32 85, i32 5] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 93, i32 147, i32 85, i32 223, i32 155, i32 18, i32 25, i32 236, i32 147, i32 133, i32 66, i32 158, i32 102, i32 15, i32 157, i32 175, i32 153, i32 175, i32 38, i32 137, i32 188, i32 97, i32 253, i32 255, i32 206, i32 75, i32 244, i32 51, i32 149, i32 201, i32 53, i32 88] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 18, i32 85, i32 249, i32 218, i32 203, i32 68, i32 167, i32 220, i32 87, i32 226, i32 249, i32 154, i32 230, i32 7, i32 35, i32 96, i32 84, i32 167, i32 57, i32 165, i32 155, i32 132, i32 86, i32 110, i32 170, i32 139, i32 143, i32 176, i32 44, i32 135, i32 175, i32 103] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 0, i32 169, i32 76, i32 178, i32 18, i32 248, i32 50, i32 168, i32 122, i32 0, i32 75, i32 73, i32 50, i32 186, i32 31, i32 93, i32 68, i32 142, i32 68, i32 122, i32 220, i32 17, i32 251, i32 57, i32 8, i32 87, i32 135, i32 165, i32 18, i32 66, i32 147, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 23, i32 180, i32 174, i32 114, i32 89, i32 208, i32 170, i32 168, i32 22, i32 139, i32 99, i32 17, i32 179, i32 67, i32 4, i32 218, i32 12, i32 168, i32 183, i32 104, i32 221, i32 78, i32 84, i32 231, i32 175, i32 93, i32 93, i32 5, i32 118, i32 54, i32 236, i32 13] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 109, i32 124, i32 130, i32 50, i32 56, i32 85, i32 87, i32 116, i32 91, i32 125, i32 195, i32 196, i32 251, i32 6, i32 41, i32 240, i32 19, i32 85, i32 84, i32 198, i32 167, i32 220, i32 76, i32 159, i32 152, i32 73, i32 32, i32 168, i32 195, i32 141, i32 250, i32 72] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 135, i32 71, i32 157, i32 233, i32 37, i32 213, i32 227, i32 71, i32 120, i32 223, i32 133, i32 167, i32 133, i32 94, i32 122, i32 76, i32 95, i32 121, i32 26, i32 243, i32 162, i32 178, i32 40, i32 160, i32 156, i32 221, i32 48, i32 64, i32 212, i32 56, i32 189, i32 40] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 252, i32 187, i32 213, i32 120, i32 109, i32 29, i32 212, i32 153, i32 180, i32 170, i32 68, i32 68, i32 122, i32 27, i32 216, i32 254, i32 180, i32 153, i32 185, i32 204, i32 231, i32 196, i32 211, i32 58, i32 115, i32 131, i32 65, i32 92, i32 64, i32 215, i32 45, i32 85] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 38, i32 225, i32 123, i32 95, i32 229, i32 220, i32 63, i32 125, i32 161, i32 167, i32 38, i32 68, i32 34, i32 35, i32 192, i32 143, i32 125, i32 241, i32 181, i32 17, i32 71, i32 123, i32 25, i32 212, i32 117, i32 111, i32 30, i32 165, i32 39, i32 254, i32 200, i32 14] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 211, i32 17, i32 61, i32 171, i32 239, i32 44, i32 237, i32 177, i32 61, i32 124, i32 50, i32 129, i32 107, i32 254, i32 248, i32 28, i32 60, i32 123, i32 192, i32 97, i32 223, i32 184, i32 117, i32 118, i32 127, i32 170, i32 216, i32 147, i32 175, i32 61, i32 232, i32 61] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 253, i32 91, i32 78, i32 141, i32 182, i32 126, i32 130, i32 155, i32 239, i32 206, i32 4, i32 105, i32 81, i32 82, i32 255, i32 239, i32 160, i32 82, i32 181, i32 121, i32 23, i32 94, i32 47, i32 222, i32 214, i32 60, i32 45, i32 160, i32 67, i32 180, i32 11, i32 25] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 192, i32 97, i32 72, i32 72, i32 23, i32 244, i32 158, i32 24, i32 81, i32 45, i32 234, i32 47, i32 242, i32 242, i32 224, i32 163, i32 20, i32 183, i32 139, i32 58, i32 48, i32 245, i32 129, i32 193, i32 93, i32 113, i32 57, i32 98, i32 85, i32 31, i32 96, i32 90] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 229, i32 137, i32 138, i32 118, i32 108, i32 219, i32 77, i32 10, i32 91, i32 114, i32 157, i32 89, i32 110, i32 99, i32 99, i32 24, i32 124, i32 227, i32 250, i32 226, i32 219, i32 161, i32 141, i32 244, i32 165, i32 215, i32 22, i32 178, i32 208, i32 179, i32 63, i32 57] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 206, i32 96, i32 9, i32 108, i32 245, i32 118, i32 23, i32 36, i32 128, i32 58, i32 150, i32 199, i32 148, i32 46, i32 247, i32 107, i32 239, i32 181, i32 5, i32 150, i32 239, i32 211, i32 123, i32 81, i32 218, i32 5, i32 68, i32 103, i32 188, i32 7, i32 33, i32 78] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 233, i32 115, i32 111, i32 33, i32 185, i32 222, i32 34, i32 125, i32 235, i32 151, i32 49, i32 16, i32 163, i32 234, i32 225, i32 198, i32 55, i32 235, i32 143, i32 67, i32 88, i32 222, i32 65, i32 100, i32 14, i32 62, i32 7, i32 153, i32 61, i32 241, i32 223, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 248, i32 173, i32 67, i32 194, i32 23, i32 6, i32 226, i32 228, i32 169, i32 134, i32 205, i32 24, i32 215, i32 120, i32 200, i32 116, i32 102, i32 210, i32 9, i32 24, i32 165, i32 241, i32 202, i32 166, i32 98, i32 146, i32 193, i32 203, i32 0, i32 235, i32 66, i32 46] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 123, i32 52, i32 36, i32 76, i32 207, i32 56, i32 229, i32 108, i32 10, i32 1, i32 44, i32 34, i32 11, i32 36, i32 56, i32 173, i32 36, i32 126, i32 25, i32 240, i32 108, i32 249, i32 49, i32 244, i32 53, i32 17, i32 246, i32 70, i32 51, i32 58, i32 35, i32 89] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 32, i32 11, i32 161, i32 8, i32 25, i32 173, i32 57, i32 84, i32 234, i32 62, i32 35, i32 9, i32 182, i32 226, i32 210, i32 188, i32 77, i32 252, i32 156, i32 240, i32 19, i32 22, i32 34, i32 63, i32 185, i32 210, i32 17, i32 134, i32 144, i32 85, i32 206, i32 60] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 196, i32 11, i32 75, i32 98, i32 153, i32 55, i32 132, i32 63, i32 116, i32 162, i32 249, i32 206, i32 226, i32 11, i32 15, i32 42, i32 61, i32 163, i32 227, i32 219, i32 90, i32 157, i32 147, i32 204, i32 165, i32 239, i32 130, i32 145, i32 29, i32 230, i32 108, i32 104] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 163, i32 100, i32 23, i32 155, i32 139, i32 200, i32 58, i32 97, i32 230, i32 157, i32 198, i32 237, i32 123, i32 3, i32 82, i32 38, i32 157, i32 58, i32 179, i32 19, i32 204, i32 138, i32 253, i32 44, i32 26, i32 29, i32 237, i32 19, i32 208, i32 85, i32 87, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 26, i32 234, i32 191, i32 253, i32 74, i32 60, i32 142, i32 236, i32 41, i32 126, i32 119, i32 119, i32 18, i32 153, i32 215, i32 132, i32 249, i32 85, i32 127, i32 241, i32 139, i32 180, i32 210, i32 149, i32 163, i32 141, i32 240, i32 138, i32 167, i32 235, i32 130, i32 75] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 44, i32 40, i32 244, i32 58, i32 246, i32 222, i32 10, i32 224, i32 65, i32 68, i32 35, i32 248, i32 63, i32 3, i32 100, i32 159, i32 195, i32 85, i32 76, i32 198, i32 193, i32 148, i32 28, i32 36, i32 93, i32 95, i32 146, i32 69, i32 150, i32 87, i32 55, i32 20] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 193, i32 205, i32 144, i32 102, i32 185, i32 118, i32 160, i32 91, i32 165, i32 133, i32 117, i32 35, i32 249, i32 137, i32 165, i32 130, i32 178, i32 111, i32 177, i32 235, i32 196, i32 105, i32 111, i32 24, i32 90, i32 237, i32 148, i32 61, i32 157, i32 217, i32 44, i32 26] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 53, i32 176, i32 230, i32 115, i32 6, i32 183, i32 55, i32 224, i32 248, i32 176, i32 34, i32 232, i32 210, i32 237, i32 11, i32 239, i32 230, i32 198, i32 90, i32 153, i32 158, i32 26, i32 159, i32 4, i32 151, i32 228, i32 77, i32 11, i32 190, i32 186, i32 68, i32 64] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 193, i32 86, i32 150, i32 145, i32 95, i32 31, i32 187, i32 84, i32 111, i32 136, i32 137, i32 10, i32 178, i32 214, i32 65, i32 66, i32 106, i32 130, i32 238, i32 20, i32 170, i32 118, i32 48, i32 101, i32 15, i32 103, i32 57, i32 166, i32 81, i32 124, i32 73, i32 36] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 53, i32 163, i32 120, i32 209, i32 17, i32 15, i32 117, i32 211, i32 112, i32 70, i32 219, i32 32, i32 81, i32 203, i32 146, i32 128, i32 84, i32 16, i32 116, i32 54, i32 134, i32 169, i32 215, i32 163, i32 8, i32 120, i32 241, i32 1, i32 41, i32 248, i32 128, i32 59] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 219, i32 167, i32 157, i32 157, i32 191, i32 160, i32 204, i32 237, i32 83, i32 162, i32 162, i32 25, i32 57, i32 72, i32 131, i32 25, i32 55, i32 88, i32 209, i32 4, i32 40, i32 64, i32 247, i32 138, i32 194, i32 8, i32 183, i32 165, i32 66, i32 207, i32 83, i32 76] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 167, i32 187, i32 246, i32 142, i32 173, i32 221, i32 247, i32 144, i32 221, i32 95, i32 147, i32 137, i32 174, i32 4, i32 55, i32 230, i32 154, i32 183, i32 232, i32 192, i32 223, i32 22, i32 42, i32 191, i32 196, i32 58, i32 60, i32 65, i32 213, i32 137, i32 114, i32 90] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 31, i32 150, i32 255, i32 52, i32 44, i32 19, i32 33, i32 203, i32 10, i32 137, i32 133, i32 190, i32 179, i32 112, i32 158, i32 30, i32 222, i32 151, i32 175, i32 150, i32 48, i32 247, i32 72, i32 137, i32 64, i32 141, i32 7, i32 241, i32 37, i32 240, i32 48, i32 88] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 30, i32 212, i32 147, i32 87, i32 226, i32 23, i32 231, i32 157, i32 171, i32 60, i32 85, i32 3, i32 130, i32 47, i32 43, i32 219, i32 86, i32 30, i32 48, i32 46, i32 36, i32 71, i32 110, i32 230, i32 255, i32 51, i32 36, i32 44, i32 117, i32 81, i32 212, i32 103] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 43, i32 6, i32 217, i32 161, i32 93, i32 225, i32 244, i32 209, i32 30, i32 60, i32 154, i32 198, i32 41, i32 43, i32 19, i32 19, i32 120, i32 192, i32 216, i32 22, i32 23, i32 45, i32 158, i32 169, i32 201, i32 121, i32 87, i32 171, i32 36, i32 145, i32 146, i32 25] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 105, i32 251, i32 161, i32 156, i32 166, i32 117, i32 73, i32 125, i32 96, i32 115, i32 64, i32 66, i32 196, i32 19, i32 10, i32 149, i32 121, i32 30, i32 4, i32 131, i32 148, i32 153, i32 155, i32 30, i32 12, i32 232, i32 31, i32 84, i32 239, i32 203, i32 192, i32 82] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 20, i32 137, i32 115, i32 161, i32 55, i32 135, i32 106, i32 122, i32 207, i32 29, i32 217, i32 46, i32 26, i32 103, i32 237, i32 116, i32 192, i32 240, i32 156, i32 51, i32 221, i32 223, i32 8, i32 191, i32 123, i32 209, i32 102, i32 218, i32 230, i32 201, i32 73, i32 8] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 233, i32 221, i32 94, i32 85, i32 176, i32 10, i32 222, i32 33, i32 76, i32 90, i32 46, i32 212, i32 128, i32 58, i32 87, i32 146, i32 122, i32 241, i32 196, i32 44, i32 64, i32 175, i32 47, i32 201, i32 146, i32 3, i32 229, i32 90, i32 188, i32 220, i32 244, i32 9] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 243, i32 225, i32 43, i32 124, i32 5, i32 134, i32 128, i32 147, i32 74, i32 173, i32 180, i32 143, i32 126, i32 153, i32 12, i32 253, i32 205, i32 239, i32 209, i32 255, i32 44, i32 105, i32 52, i32 19, i32 65, i32 100, i32 207, i32 59, i32 208, i32 144, i32 9, i32 30] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 157, i32 69, i32 214, i32 128, i32 230, i32 69, i32 170, i32 244, i32 21, i32 170, i32 92, i32 52, i32 135, i32 153, i32 162, i32 140, i32 38, i32 132, i32 98, i32 125, i32 182, i32 41, i32 192, i32 82, i32 234, i32 245, i32 129, i32 24, i32 15, i32 53, i32 169, i32 14] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 231, i32 32, i32 114, i32 124, i32 109, i32 148, i32 95, i32 82, i32 68, i32 84, i32 227, i32 241, i32 178, i32 176, i32 54, i32 70, i32 15, i32 174, i32 146, i32 232, i32 112, i32 157, i32 110, i32 121, i32 177, i32 173, i32 55, i32 169, i32 95, i32 192, i32 222, i32 3] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 21, i32 85, i32 55, i32 198, i32 28, i32 39, i32 28, i32 109, i32 20, i32 79, i32 202, i32 164, i32 196, i32 136, i32 37, i32 70, i32 57, i32 252, i32 90, i32 229, i32 254, i32 41, i32 17, i32 105, i32 245, i32 114, i32 132, i32 77, i32 120, i32 159, i32 148, i32 21] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 zeroinitializer, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 236, i32 211, i32 255, i32 87, i32 11, i32 176, i32 178, i32 220, i32 248, i32 79, i32 226, i32 18, i32 213, i32 54, i32 190, i32 107, i32 9, i32 67, i32 109, i32 163, i32 77, i32 144, i32 45, i32 184, i32 116, i32 232, i32 113, i32 69, i32 25, i32 139, i32 12, i32 106] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 184, i32 66, i32 28, i32 3, i32 173, i32 44, i32 3, i32 142, i32 172, i32 215, i32 152, i32 41, i32 19, i32 198, i32 2, i32 41, i32 181, i32 212, i32 231, i32 207, i32 204, i32 139, i32 131, i32 236, i32 53, i32 199, i32 156, i32 116, i32 183, i32 173, i32 133, i32 95] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 120, i32 132, i32 225, i32 86, i32 69, i32 105, i32 104, i32 90, i32 79, i32 184, i32 177, i32 41, i32 255, i32 51, i32 3, i32 49, i32 183, i32 203, i32 150, i32 37, i32 230, i32 230, i32 65, i32 152, i32 26, i32 187, i32 3, i32 86, i32 242, i32 178, i32 145, i32 52] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 44, i32 108, i32 247, i32 102, i32 164, i32 98, i32 107, i32 57, i32 179, i32 186, i32 101, i32 211, i32 28, i32 248, i32 17, i32 170, i32 190, i32 220, i32 128, i32 89, i32 135, i32 245, i32 123, i32 229, i32 227, i32 179, i32 62, i32 57, i32 218, i32 190, i32 136, i32 9] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 139, i32 241, i32 160, i32 245, i32 220, i32 41, i32 180, i32 226, i32 7, i32 198, i32 122, i32 0, i32 208, i32 137, i32 23, i32 81, i32 212, i32 187, i32 212, i32 34, i32 234, i32 126, i32 125, i32 124, i32 36, i32 234, i32 242, i32 232, i32 34, i32 18, i32 149, i32 6] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 218, i32 124, i32 164, i32 12, i32 244, i32 186, i32 110, i32 225, i32 137, i32 181, i32 89, i32 202, i32 241, i32 192, i32 41, i32 54, i32 9, i32 68, i32 226, i32 127, i32 209, i32 99, i32 21, i32 153, i32 234, i32 37, i32 207, i32 12, i32 157, i32 192, i32 68, i32 111] } }, %struct.ge25519_aff { %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 29, i32 134, i32 78, i32 207, i32 247, i32 55, i32 16, i32 37, i32 143, i32 18, i32 251, i32 25, i32 251, i32 224, i32 237, i32 16, i32 200, i32 226, i32 245, i32 117, i32 177, i32 51, i32 192, i32 150, i32 13, i32 251, i32 21, i32 108, i32 13, i32 7, i32 95, i32 5] }, %struct.crypto_sign_ed25519_ref_fe25519 { [32 x i32] [i32 105, i32 62, i32 71, i32 151, i32 44, i32 175, i32 82, i32 124, i32 120, i32 131, i32 173, i32 27, i32 57, i32 130, i32 47, i32 2, i32 111, i32 71, i32 219, i32 42, i32 176, i32 225, i32 145, i32 153, i32 85, i32 184, i32 153, i32 58, i32 160, i32 68, i32 17, i32 81] } }], align 16 ; [#uses=5 type=[425 x %struct.ge25519_aff]*]

; [#uses=2]
define void @_memcpy(i8* %dst, i8* %src, i32 %len) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=2 type=i8**]
  %2 = alloca i8*, align 8                        ; [#uses=2 type=i8**]
  %3 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store i8* %dst, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !483), !dbg !484 ; [debug line = 13:29] [debug variable = dst]
  store i8* %src, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !485), !dbg !486 ; [debug line = 13:49] [debug variable = src]
  store i32 %len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !487), !dbg !488 ; [debug line = 13:67] [debug variable = len]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !489), !dbg !491 ; [debug line = 14:6] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !492        ; [debug line = 15:6]
  br label %4, !dbg !492                          ; [debug line = 15:6]

; <label>:4                                       ; preds = %18, %0
  %5 = load i32* %i, align 4, !dbg !492           ; [#uses=1 type=i32] [debug line = 15:6]
  %6 = load i32* %3, align 4, !dbg !492           ; [#uses=1 type=i32] [debug line = 15:6]
  %7 = icmp ult i32 %5, %6, !dbg !492             ; [#uses=1 type=i1] [debug line = 15:6]
  br i1 %7, label %8, label %21, !dbg !492        ; [debug line = 15:6]

; <label>:8                                       ; preds = %4
  %9 = load i32* %i, align 4, !dbg !494           ; [#uses=1 type=i32] [debug line = 16:3]
  %10 = sext i32 %9 to i64, !dbg !494             ; [#uses=1 type=i64] [debug line = 16:3]
  %11 = load i8** %2, align 8, !dbg !494          ; [#uses=1 type=i8*] [debug line = 16:3]
  %12 = getelementptr inbounds i8* %11, i64 %10, !dbg !494 ; [#uses=1 type=i8*] [debug line = 16:3]
  %13 = load i8* %12, align 1, !dbg !494          ; [#uses=1 type=i8] [debug line = 16:3]
  %14 = load i32* %i, align 4, !dbg !494          ; [#uses=1 type=i32] [debug line = 16:3]
  %15 = sext i32 %14 to i64, !dbg !494            ; [#uses=1 type=i64] [debug line = 16:3]
  %16 = load i8** %1, align 8, !dbg !494          ; [#uses=1 type=i8*] [debug line = 16:3]
  %17 = getelementptr inbounds i8* %16, i64 %15, !dbg !494 ; [#uses=1 type=i8*] [debug line = 16:3]
  store i8 %13, i8* %17, align 1, !dbg !494       ; [debug line = 16:3]
  br label %18, !dbg !496                         ; [debug line = 17:2]

; <label>:18                                      ; preds = %8
  %19 = load i32* %i, align 4, !dbg !497          ; [#uses=1 type=i32] [debug line = 15:18]
  %20 = add nsw i32 %19, 1, !dbg !497             ; [#uses=1 type=i32] [debug line = 15:18]
  store i32 %20, i32* %i, align 4, !dbg !497      ; [debug line = 15:18]
  br label %4, !dbg !497                          ; [debug line = 15:18]

; <label>:21                                      ; preds = %4
  ret void, !dbg !498                             ; [debug line = 18:1]
}

; [#uses=314]
declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

; [#uses=0]
define void @_memset(i8* %dst, i8 zeroext %val, i32 %len) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=2 type=i8**]
  %2 = alloca i8, align 1                         ; [#uses=2 type=i8*]
  %3 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %i = alloca i32, align 4                        ; [#uses=5 type=i32*]
  store i8* %dst, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !499), !dbg !500 ; [debug line = 27:29] [debug variable = dst]
  store i8 %val, i8* %2, align 1
  call void @llvm.dbg.declare(metadata !{i8* %2}, metadata !501), !dbg !502 ; [debug line = 27:48] [debug variable = val]
  store i32 %len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !503), !dbg !504 ; [debug line = 27:66] [debug variable = len]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !505), !dbg !507 ; [debug line = 28:6] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !508        ; [debug line = 29:6]
  br label %4, !dbg !508                          ; [debug line = 29:6]

; <label>:4                                       ; preds = %14, %0
  %5 = load i32* %i, align 4, !dbg !508           ; [#uses=1 type=i32] [debug line = 29:6]
  %6 = load i32* %3, align 4, !dbg !508           ; [#uses=1 type=i32] [debug line = 29:6]
  %7 = icmp ult i32 %5, %6, !dbg !508             ; [#uses=1 type=i1] [debug line = 29:6]
  br i1 %7, label %8, label %17, !dbg !508        ; [debug line = 29:6]

; <label>:8                                       ; preds = %4
  %9 = load i8* %2, align 1, !dbg !510            ; [#uses=1 type=i8] [debug line = 30:3]
  %10 = load i32* %i, align 4, !dbg !510          ; [#uses=1 type=i32] [debug line = 30:3]
  %11 = sext i32 %10 to i64, !dbg !510            ; [#uses=1 type=i64] [debug line = 30:3]
  %12 = load i8** %1, align 8, !dbg !510          ; [#uses=1 type=i8*] [debug line = 30:3]
  %13 = getelementptr inbounds i8* %12, i64 %11, !dbg !510 ; [#uses=1 type=i8*] [debug line = 30:3]
  store i8 %9, i8* %13, align 1, !dbg !510        ; [debug line = 30:3]
  br label %14, !dbg !512                         ; [debug line = 31:2]

; <label>:14                                      ; preds = %8
  %15 = load i32* %i, align 4, !dbg !513          ; [#uses=1 type=i32] [debug line = 29:18]
  %16 = add nsw i32 %15, 1, !dbg !513             ; [#uses=1 type=i32] [debug line = 29:18]
  store i32 %16, i32* %i, align 4, !dbg !513      ; [debug line = 29:18]
  br label %4, !dbg !513                          ; [debug line = 29:18]

; <label>:17                                      ; preds = %4
  ret void, !dbg !514                             ; [debug line = 32:1]
}

; [#uses=3]
define void @_memmove(i8* %dst, i8* %src, i32 %len) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=2 type=i8**]
  %2 = alloca i8*, align 8                        ; [#uses=2 type=i8**]
  %3 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  store i8* %dst, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !515), !dbg !516 ; [debug line = 34:30] [debug variable = dst]
  store i8* %src, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !517), !dbg !518 ; [debug line = 34:50] [debug variable = src]
  store i32 %len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !519), !dbg !520 ; [debug line = 34:68] [debug variable = len]
  %4 = load i8** %1, align 8, !dbg !521           ; [#uses=1 type=i8*] [debug line = 35:2]
  %5 = load i8** %2, align 8, !dbg !521           ; [#uses=1 type=i8*] [debug line = 35:2]
  %6 = load i32* %3, align 4, !dbg !521           ; [#uses=1 type=i32] [debug line = 35:2]
  call void @_memcpy(i8* %4, i8* %5, i32 %6), !dbg !521 ; [debug line = 35:2]
  ret void, !dbg !523                             ; [debug line = 36:1]
}

; [#uses=0]
define i32 @crypto_sign(i8* %mem, i32 %num_blocks, i8* %sk, i8* %signature_out) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=5 type=i8**]
  %2 = alloca i32, align 4                        ; [#uses=4 type=i32*]
  %3 = alloca i8*, align 8                        ; [#uses=5 type=i8**]
  %4 = alloca i8*, align 8                        ; [#uses=4 type=i8**]
  %pk = alloca [32 x i8], align 16                ; [#uses=2 type=[32 x i8]*]
  %az = alloca [64 x i8], align 16                ; [#uses=6 type=[64 x i8]*]
  %nonce = alloca [64 x i8], align 16             ; [#uses=2 type=[64 x i8]*]
  %hram = alloca [64 x i8], align 16              ; [#uses=2 type=[64 x i8]*]
  %mlen = alloca i64, align 8                     ; [#uses=1 type=i64*]
  %signature = alloca [64 x i8], align 16         ; [#uses=9 type=[64 x i8]*]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=4 type=[128 x i8]*]
  %i = alloca i32, align 4                        ; [#uses=10 type=i32*]
  %j = alloca i32, align 4                        ; [#uses=12 type=i32*]
  %sck = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %scs = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=6 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %scsk = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %ger = alloca %struct.crypto_sign_ed25519_ref_ge25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_ge25519*]
  %hash = alloca %struct.sha512_context_, align 8 ; [#uses=12 type=%struct.sha512_context_*]
  store i8* %mem, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !524), !dbg !525 ; [debug line = 49:17] [debug variable = mem]
  store i32 %num_blocks, i32* %2, align 4
  call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !526), !dbg !527 ; [debug line = 50:16] [debug variable = num_blocks]
  store i8* %sk, i8** %3, align 8
  call void @llvm.dbg.declare(metadata !{i8** %3}, metadata !528), !dbg !529 ; [debug line = 51:17] [debug variable = sk]
  store i8* %signature_out, i8** %4, align 8
  call void @llvm.dbg.declare(metadata !{i8** %4}, metadata !530), !dbg !531 ; [debug line = 52:17] [debug variable = signature_out]
  %5 = load i8** %1, align 8, !dbg !532           ; [#uses=1 type=i8*] [debug line = 54:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %5, i32 32768) nounwind, !dbg !532 ; [debug line = 54:2]
  %6 = load i8** %3, align 8, !dbg !534           ; [#uses=1 type=i8*] [debug line = 54:36]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %6, i32 64) nounwind, !dbg !534 ; [debug line = 54:36]
  %7 = load i8** %4, align 8, !dbg !535           ; [#uses=1 type=i8*] [debug line = 54:66]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %7, i32 64) nounwind, !dbg !535 ; [debug line = 54:66]
  call void (...)* @_ssdm_op_SpecInterface(i32 0, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !536 ; [debug line = 55:1]
  %8 = load i8** %4, align 8, !dbg !537           ; [#uses=1 type=i8*] [debug line = 56:1]
  call void (...)* @_ssdm_op_SpecInterface(i8* %8, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !537 ; [debug line = 56:1]
  %9 = load i8** %3, align 8, !dbg !538           ; [#uses=1 type=i8*] [debug line = 57:1]
  call void (...)* @_ssdm_op_SpecInterface(i8* %9, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !538 ; [debug line = 57:1]
  %10 = load i32* %2, align 4, !dbg !539          ; [#uses=1 type=i32] [debug line = 58:1]
  call void (...)* @_ssdm_op_SpecInterface(i32 %10, i8* getelementptr inbounds ([10 x i8]* @.str, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !539 ; [debug line = 58:1]
  %11 = load i8** %1, align 8, !dbg !540          ; [#uses=1 type=i8*] [debug line = 59:1]
  call void (...)* @_ssdm_op_SpecInterface(i8* %11, i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 0, i32 32768, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i32 16, i32 16, i32 16, i32 16, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !540 ; [debug line = 59:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !541 ; [debug line = 60:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !542 ; [debug line = 61:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !543 ; [debug line = 62:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !544 ; [debug line = 63:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str7, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i32 0, i32 0)) nounwind, !dbg !545 ; [debug line = 64:1]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %pk}, metadata !546), !dbg !548 ; [debug line = 65:16] [debug variable = pk]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %az}, metadata !549), !dbg !553 ; [debug line = 66:17] [debug variable = az]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %nonce}, metadata !554), !dbg !555 ; [debug line = 67:17] [debug variable = nonce]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %hram}, metadata !556), !dbg !557 ; [debug line = 68:17] [debug variable = hram]
  call void @llvm.dbg.declare(metadata !{i64* %mlen}, metadata !558), !dbg !559 ; [debug line = 69:22] [debug variable = mlen]
  store i64 128, i64* %mlen, align 8, !dbg !560   ; [debug line = 69:30]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %signature}, metadata !561), !dbg !562 ; [debug line = 70:17] [debug variable = signature]
  %12 = bitcast [64 x i8]* %signature to i8*, !dbg !563 ; [#uses=1 type=i8*] [debug line = 70:36]
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 64, i32 16, i1 false), !dbg !563 ; [debug line = 70:36]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !564), !dbg !565 ; [debug line = 71:17] [debug variable = temp_buf]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !566), !dbg !567 ; [debug line = 72:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !568), !dbg !569 ; [debug line = 72:10] [debug variable = j]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %sck}, metadata !570), !dbg !575 ; [debug line = 73:35] [debug variable = sck]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %scs}, metadata !576), !dbg !577 ; [debug line = 73:40] [debug variable = scs]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %scsk}, metadata !578), !dbg !579 ; [debug line = 73:45] [debug variable = scsk]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519* %ger}, metadata !580), !dbg !581 ; [debug line = 74:35] [debug variable = ger]
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_* %hash}, metadata !582), !dbg !590 ; [debug line = 75:18] [debug variable = hash]
  %13 = getelementptr inbounds [32 x i8]* %pk, i32 0, i32 0, !dbg !591 ; [#uses=1 type=i8*] [debug line = 78:3]
  %14 = load i8** %3, align 8, !dbg !591          ; [#uses=1 type=i8*] [debug line = 78:3]
  %15 = getelementptr inbounds i8* %14, i64 32, !dbg !591 ; [#uses=1 type=i8*] [debug line = 78:3]
  call void @_memmove(i8* %13, i8* %15, i32 32), !dbg !591 ; [debug line = 78:3]
  %16 = call i32 @sha512_init(%struct.sha512_context_* %hash), !dbg !592 ; [#uses=0 type=i32] [debug line = 82:3]
  %17 = load i8** %3, align 8, !dbg !593          ; [#uses=1 type=i8*] [debug line = 83:3]
  %18 = call i32 @sha512_update_32(%struct.sha512_context_* %hash, i8* %17), !dbg !593 ; [#uses=0 type=i32] [debug line = 83:3]
  %19 = getelementptr inbounds [64 x i8]* %az, i32 0, i32 0, !dbg !594 ; [#uses=1 type=i8*] [debug line = 84:3]
  %20 = call i32 @sha512_final(%struct.sha512_context_* %hash, i8* %19), !dbg !594 ; [#uses=0 type=i32] [debug line = 84:3]
  %21 = getelementptr inbounds [64 x i8]* %az, i32 0, i64 0, !dbg !595 ; [#uses=2 type=i8*] [debug line = 86:3]
  %22 = load i8* %21, align 1, !dbg !595          ; [#uses=1 type=i8] [debug line = 86:3]
  %23 = zext i8 %22 to i32, !dbg !595             ; [#uses=1 type=i32] [debug line = 86:3]
  %24 = and i32 %23, 248, !dbg !595               ; [#uses=1 type=i32] [debug line = 86:3]
  %25 = trunc i32 %24 to i8, !dbg !595            ; [#uses=1 type=i8] [debug line = 86:3]
  store i8 %25, i8* %21, align 1, !dbg !595       ; [debug line = 86:3]
  %26 = getelementptr inbounds [64 x i8]* %az, i32 0, i64 31, !dbg !596 ; [#uses=2 type=i8*] [debug line = 87:3]
  %27 = load i8* %26, align 1, !dbg !596          ; [#uses=1 type=i8] [debug line = 87:3]
  %28 = zext i8 %27 to i32, !dbg !596             ; [#uses=1 type=i32] [debug line = 87:3]
  %29 = and i32 %28, 127, !dbg !596               ; [#uses=1 type=i32] [debug line = 87:3]
  %30 = trunc i32 %29 to i8, !dbg !596            ; [#uses=1 type=i8] [debug line = 87:3]
  store i8 %30, i8* %26, align 1, !dbg !596       ; [debug line = 87:3]
  %31 = getelementptr inbounds [64 x i8]* %az, i32 0, i64 31, !dbg !597 ; [#uses=2 type=i8*] [debug line = 88:3]
  %32 = load i8* %31, align 1, !dbg !597          ; [#uses=1 type=i8] [debug line = 88:3]
  %33 = zext i8 %32 to i32, !dbg !597             ; [#uses=1 type=i32] [debug line = 88:3]
  %34 = or i32 %33, 64, !dbg !597                 ; [#uses=1 type=i32] [debug line = 88:3]
  %35 = trunc i32 %34 to i8, !dbg !597            ; [#uses=1 type=i8] [debug line = 88:3]
  store i8 %35, i8* %31, align 1, !dbg !597       ; [debug line = 88:3]
  %36 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !598 ; [#uses=1 type=i8*] [debug line = 96:3]
  %37 = getelementptr inbounds i8* %36, i64 32, !dbg !598 ; [#uses=1 type=i8*] [debug line = 96:3]
  %38 = getelementptr inbounds [64 x i8]* %az, i32 0, i32 0, !dbg !598 ; [#uses=1 type=i8*] [debug line = 96:3]
  %39 = getelementptr inbounds i8* %38, i64 32, !dbg !598 ; [#uses=1 type=i8*] [debug line = 96:3]
  call void @_memmove(i8* %37, i8* %39, i32 32), !dbg !598 ; [debug line = 96:3]
  %40 = call i32 @sha512_init(%struct.sha512_context_* %hash), !dbg !599 ; [#uses=0 type=i32] [debug line = 100:3]
  %41 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !600 ; [#uses=1 type=i8*] [debug line = 102:3]
  %42 = getelementptr inbounds i8* %41, i64 32, !dbg !600 ; [#uses=1 type=i8*] [debug line = 102:3]
  %43 = call i32 @sha512_update_32(%struct.sha512_context_* %hash, i8* %42), !dbg !600 ; [#uses=0 type=i32] [debug line = 102:3]
  store i32 0, i32* %i, align 4, !dbg !601        ; [debug line = 104:7]
  br label %44, !dbg !601                         ; [debug line = 104:7]

; <label>:44                                      ; preds = %70, %0
  %45 = load i32* %i, align 4, !dbg !601          ; [#uses=1 type=i32] [debug line = 104:7]
  %46 = load i32* %2, align 4, !dbg !601          ; [#uses=1 type=i32] [debug line = 104:7]
  %47 = icmp ult i32 %45, %46, !dbg !601          ; [#uses=1 type=i1] [debug line = 104:7]
  br i1 %47, label %48, label %73, !dbg !601      ; [debug line = 104:7]

; <label>:48                                      ; preds = %44
  store i32 0, i32* %j, align 4, !dbg !603        ; [debug line = 106:8]
  br label %49, !dbg !603                         ; [debug line = 106:8]

; <label>:49                                      ; preds = %64, %48
  %50 = load i32* %j, align 4, !dbg !603          ; [#uses=1 type=i32] [debug line = 106:8]
  %51 = icmp slt i32 %50, 128, !dbg !603          ; [#uses=1 type=i1] [debug line = 106:8]
  br i1 %51, label %52, label %67, !dbg !603      ; [debug line = 106:8]

; <label>:52                                      ; preds = %49
  %53 = load i32* %i, align 4, !dbg !606          ; [#uses=1 type=i32] [debug line = 107:5]
  %54 = mul nsw i32 128, %53, !dbg !606           ; [#uses=1 type=i32] [debug line = 107:5]
  %55 = load i32* %j, align 4, !dbg !606          ; [#uses=1 type=i32] [debug line = 107:5]
  %56 = add nsw i32 %54, %55, !dbg !606           ; [#uses=1 type=i32] [debug line = 107:5]
  %57 = sext i32 %56 to i64, !dbg !606            ; [#uses=1 type=i64] [debug line = 107:5]
  %58 = load i8** %1, align 8, !dbg !606          ; [#uses=1 type=i8*] [debug line = 107:5]
  %59 = getelementptr inbounds i8* %58, i64 %57, !dbg !606 ; [#uses=1 type=i8*] [debug line = 107:5]
  %60 = load i8* %59, align 1, !dbg !606          ; [#uses=1 type=i8] [debug line = 107:5]
  %61 = load i32* %j, align 4, !dbg !606          ; [#uses=1 type=i32] [debug line = 107:5]
  %62 = sext i32 %61 to i64, !dbg !606            ; [#uses=1 type=i64] [debug line = 107:5]
  %63 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %62, !dbg !606 ; [#uses=1 type=i8*] [debug line = 107:5]
  store i8 %60, i8* %63, align 1, !dbg !606       ; [debug line = 107:5]
  br label %64, !dbg !608                         ; [debug line = 108:4]

; <label>:64                                      ; preds = %52
  %65 = load i32* %j, align 4, !dbg !609          ; [#uses=1 type=i32] [debug line = 106:20]
  %66 = add nsw i32 %65, 1, !dbg !609             ; [#uses=1 type=i32] [debug line = 106:20]
  store i32 %66, i32* %j, align 4, !dbg !609      ; [debug line = 106:20]
  br label %49, !dbg !609                         ; [debug line = 106:20]

; <label>:67                                      ; preds = %49
  %68 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i32 0, !dbg !610 ; [#uses=1 type=i8*] [debug line = 109:4]
  %69 = call i32 @sha512_update_128(%struct.sha512_context_* %hash, i8* %68), !dbg !610 ; [#uses=0 type=i32] [debug line = 109:4]
  br label %70, !dbg !611                         ; [debug line = 110:3]

; <label>:70                                      ; preds = %67
  %71 = load i32* %i, align 4, !dbg !612          ; [#uses=1 type=i32] [debug line = 104:26]
  %72 = add nsw i32 %71, 1, !dbg !612             ; [#uses=1 type=i32] [debug line = 104:26]
  store i32 %72, i32* %i, align 4, !dbg !612      ; [debug line = 104:26]
  br label %44, !dbg !612                         ; [debug line = 104:26]

; <label>:73                                      ; preds = %44
  %74 = getelementptr inbounds [64 x i8]* %nonce, i32 0, i32 0, !dbg !613 ; [#uses=1 type=i8*] [debug line = 111:3]
  %75 = call i32 @sha512_final(%struct.sha512_context_* %hash, i8* %74), !dbg !613 ; [#uses=0 type=i32] [debug line = 111:3]
  %76 = getelementptr inbounds [64 x i8]* %nonce, i32 0, i32 0, !dbg !614 ; [#uses=1 type=i8*] [debug line = 114:3]
  call void @crypto_sign_ed25519_ref_sc25519_from64bytes(%struct.crypto_sign_ed25519_ref_fe25519* %sck, i8* %76), !dbg !614 ; [debug line = 114:3]
  call void @crypto_sign_ed25519_ref_scalarmult_base(%struct.crypto_sign_ed25519_ref_ge25519* %ger, %struct.crypto_sign_ed25519_ref_fe25519* %sck), !dbg !615 ; [debug line = 115:3]
  %77 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !616 ; [#uses=1 type=i8*] [debug line = 117:3]
  call void @crypto_sign_ed25519_ref_pack(i8* %77, %struct.crypto_sign_ed25519_ref_ge25519* %ger), !dbg !616 ; [debug line = 117:3]
  %78 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !617 ; [#uses=1 type=i8*] [debug line = 122:3]
  %79 = getelementptr inbounds i8* %78, i64 32, !dbg !617 ; [#uses=1 type=i8*] [debug line = 122:3]
  %80 = getelementptr inbounds [32 x i8]* %pk, i32 0, i32 0, !dbg !617 ; [#uses=1 type=i8*] [debug line = 122:3]
  call void @_memmove(i8* %79, i8* %80, i32 32), !dbg !617 ; [debug line = 122:3]
  %81 = call i32 @sha512_init(%struct.sha512_context_* %hash), !dbg !618 ; [#uses=0 type=i32] [debug line = 126:3]
  %82 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !619 ; [#uses=1 type=i8*] [debug line = 127:3]
  %83 = call i32 @sha512_update_32(%struct.sha512_context_* %hash, i8* %82), !dbg !619 ; [#uses=0 type=i32] [debug line = 127:3]
  %84 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !620 ; [#uses=1 type=i8*] [debug line = 128:3]
  %85 = getelementptr inbounds i8* %84, i64 32, !dbg !620 ; [#uses=1 type=i8*] [debug line = 128:3]
  %86 = call i32 @sha512_update_32(%struct.sha512_context_* %hash, i8* %85), !dbg !620 ; [#uses=0 type=i32] [debug line = 128:3]
  store i32 0, i32* %i, align 4, !dbg !621        ; [debug line = 130:7]
  br label %87, !dbg !621                         ; [debug line = 130:7]

; <label>:87                                      ; preds = %113, %73
  %88 = load i32* %i, align 4, !dbg !621          ; [#uses=1 type=i32] [debug line = 130:7]
  %89 = load i32* %2, align 4, !dbg !621          ; [#uses=1 type=i32] [debug line = 130:7]
  %90 = icmp ult i32 %88, %89, !dbg !621          ; [#uses=1 type=i1] [debug line = 130:7]
  br i1 %90, label %91, label %116, !dbg !621     ; [debug line = 130:7]

; <label>:91                                      ; preds = %87
  store i32 0, i32* %j, align 4, !dbg !623        ; [debug line = 132:9]
  br label %92, !dbg !623                         ; [debug line = 132:9]

; <label>:92                                      ; preds = %107, %91
  %93 = load i32* %j, align 4, !dbg !623          ; [#uses=1 type=i32] [debug line = 132:9]
  %94 = icmp slt i32 %93, 128, !dbg !623          ; [#uses=1 type=i1] [debug line = 132:9]
  br i1 %94, label %95, label %110, !dbg !623     ; [debug line = 132:9]

; <label>:95                                      ; preds = %92
  %96 = load i32* %i, align 4, !dbg !626          ; [#uses=1 type=i32] [debug line = 133:7]
  %97 = mul nsw i32 128, %96, !dbg !626           ; [#uses=1 type=i32] [debug line = 133:7]
  %98 = load i32* %j, align 4, !dbg !626          ; [#uses=1 type=i32] [debug line = 133:7]
  %99 = add nsw i32 %97, %98, !dbg !626           ; [#uses=1 type=i32] [debug line = 133:7]
  %100 = sext i32 %99 to i64, !dbg !626           ; [#uses=1 type=i64] [debug line = 133:7]
  %101 = load i8** %1, align 8, !dbg !626         ; [#uses=1 type=i8*] [debug line = 133:7]
  %102 = getelementptr inbounds i8* %101, i64 %100, !dbg !626 ; [#uses=1 type=i8*] [debug line = 133:7]
  %103 = load i8* %102, align 1, !dbg !626        ; [#uses=1 type=i8] [debug line = 133:7]
  %104 = load i32* %j, align 4, !dbg !626         ; [#uses=1 type=i32] [debug line = 133:7]
  %105 = sext i32 %104 to i64, !dbg !626          ; [#uses=1 type=i64] [debug line = 133:7]
  %106 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %105, !dbg !626 ; [#uses=1 type=i8*] [debug line = 133:7]
  store i8 %103, i8* %106, align 1, !dbg !626     ; [debug line = 133:7]
  br label %107, !dbg !628                        ; [debug line = 134:5]

; <label>:107                                     ; preds = %95
  %108 = load i32* %j, align 4, !dbg !629         ; [#uses=1 type=i32] [debug line = 132:21]
  %109 = add nsw i32 %108, 1, !dbg !629           ; [#uses=1 type=i32] [debug line = 132:21]
  store i32 %109, i32* %j, align 4, !dbg !629     ; [debug line = 132:21]
  br label %92, !dbg !629                         ; [debug line = 132:21]

; <label>:110                                     ; preds = %92
  %111 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i32 0, !dbg !630 ; [#uses=1 type=i8*] [debug line = 135:2]
  %112 = call i32 @sha512_update_128(%struct.sha512_context_* %hash, i8* %111), !dbg !630 ; [#uses=0 type=i32] [debug line = 135:2]
  br label %113, !dbg !631                        ; [debug line = 136:3]

; <label>:113                                     ; preds = %110
  %114 = load i32* %i, align 4, !dbg !632         ; [#uses=1 type=i32] [debug line = 130:26]
  %115 = add nsw i32 %114, 1, !dbg !632           ; [#uses=1 type=i32] [debug line = 130:26]
  store i32 %115, i32* %i, align 4, !dbg !632     ; [debug line = 130:26]
  br label %87, !dbg !632                         ; [debug line = 130:26]

; <label>:116                                     ; preds = %87
  %117 = getelementptr inbounds [64 x i8]* %hram, i32 0, i32 0, !dbg !633 ; [#uses=1 type=i8*] [debug line = 137:3]
  %118 = call i32 @sha512_final(%struct.sha512_context_* %hash, i8* %117), !dbg !633 ; [#uses=0 type=i32] [debug line = 137:3]
  %119 = getelementptr inbounds [64 x i8]* %hram, i32 0, i32 0, !dbg !634 ; [#uses=1 type=i8*] [debug line = 141:3]
  call void @crypto_sign_ed25519_ref_sc25519_from64bytes(%struct.crypto_sign_ed25519_ref_fe25519* %scs, i8* %119), !dbg !634 ; [debug line = 141:3]
  %120 = getelementptr inbounds [64 x i8]* %az, i32 0, i32 0, !dbg !635 ; [#uses=1 type=i8*] [debug line = 142:3]
  call void @crypto_sign_ed25519_ref_sc25519_from32bytes(%struct.crypto_sign_ed25519_ref_fe25519* %scsk, i8* %120), !dbg !635 ; [debug line = 142:3]
  call void @crypto_sign_ed25519_ref_sc25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %scs, %struct.crypto_sign_ed25519_ref_fe25519* %scs, %struct.crypto_sign_ed25519_ref_fe25519* %scsk), !dbg !636 ; [debug line = 143:3]
  call void @crypto_sign_ed25519_ref_sc25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %scs, %struct.crypto_sign_ed25519_ref_fe25519* %scs, %struct.crypto_sign_ed25519_ref_fe25519* %sck), !dbg !637 ; [debug line = 144:3]
  %121 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !638 ; [#uses=1 type=i8*] [debug line = 148:3]
  %122 = getelementptr inbounds i8* %121, i64 32, !dbg !638 ; [#uses=1 type=i8*] [debug line = 148:3]
  call void @crypto_sign_ed25519_ref_sc25519_to32bytes(i8* %122, %struct.crypto_sign_ed25519_ref_fe25519* %scs), !dbg !638 ; [debug line = 148:3]
  %123 = load i8** %4, align 8, !dbg !639         ; [#uses=1 type=i8*] [debug line = 154:3]
  %124 = getelementptr inbounds [64 x i8]* %signature, i32 0, i32 0, !dbg !639 ; [#uses=1 type=i8*] [debug line = 154:3]
  call void @_memcpy(i8* %123, i8* %124, i32 64), !dbg !639 ; [debug line = 154:3]
  ret i32 0, !dbg !640                            ; [debug line = 155:3]
}

; [#uses=19]
declare void @_ssdm_SpecArrayDimSize(...) nounwind

; [#uses=5]
declare void @_ssdm_op_SpecInterface(...) nounwind

; [#uses=42]
declare void @_ssdm_op_SpecResourceLimit(...) nounwind

; [#uses=1]
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) nounwind

; [#uses=3]
define i32 @sha512_init(%struct.sha512_context_* %md) nounwind uwtable {
  %1 = alloca %struct.sha512_context_*, align 8   ; [#uses=11 type=%struct.sha512_context_**]
  store %struct.sha512_context_* %md, %struct.sha512_context_** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_** %1}, metadata !641), !dbg !642 ; [debug line = 216:34] [debug variable = md]
  %2 = load %struct.sha512_context_** %1, align 8, !dbg !643 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 219:5]
  %3 = getelementptr inbounds %struct.sha512_context_* %2, i32 0, i32 2, !dbg !643 ; [#uses=1 type=i64*] [debug line = 219:5]
  store i64 0, i64* %3, align 8, !dbg !643        ; [debug line = 219:5]
  %4 = load %struct.sha512_context_** %1, align 8, !dbg !645 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 220:5]
  %5 = getelementptr inbounds %struct.sha512_context_* %4, i32 0, i32 0, !dbg !645 ; [#uses=1 type=i64*] [debug line = 220:5]
  store i64 0, i64* %5, align 8, !dbg !645        ; [debug line = 220:5]
  %6 = load %struct.sha512_context_** %1, align 8, !dbg !646 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 221:5]
  %7 = getelementptr inbounds %struct.sha512_context_* %6, i32 0, i32 1, !dbg !646 ; [#uses=1 type=[8 x i64]*] [debug line = 221:5]
  %8 = getelementptr inbounds [8 x i64]* %7, i32 0, i64 0, !dbg !646 ; [#uses=1 type=i64*] [debug line = 221:5]
  store i64 7640891576956012808, i64* %8, align 8, !dbg !646 ; [debug line = 221:5]
  %9 = load %struct.sha512_context_** %1, align 8, !dbg !647 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 222:5]
  %10 = getelementptr inbounds %struct.sha512_context_* %9, i32 0, i32 1, !dbg !647 ; [#uses=1 type=[8 x i64]*] [debug line = 222:5]
  %11 = getelementptr inbounds [8 x i64]* %10, i32 0, i64 1, !dbg !647 ; [#uses=1 type=i64*] [debug line = 222:5]
  store i64 -4942790177534073029, i64* %11, align 8, !dbg !647 ; [debug line = 222:5]
  %12 = load %struct.sha512_context_** %1, align 8, !dbg !648 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 223:5]
  %13 = getelementptr inbounds %struct.sha512_context_* %12, i32 0, i32 1, !dbg !648 ; [#uses=1 type=[8 x i64]*] [debug line = 223:5]
  %14 = getelementptr inbounds [8 x i64]* %13, i32 0, i64 2, !dbg !648 ; [#uses=1 type=i64*] [debug line = 223:5]
  store i64 4354685564936845355, i64* %14, align 8, !dbg !648 ; [debug line = 223:5]
  %15 = load %struct.sha512_context_** %1, align 8, !dbg !649 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 224:5]
  %16 = getelementptr inbounds %struct.sha512_context_* %15, i32 0, i32 1, !dbg !649 ; [#uses=1 type=[8 x i64]*] [debug line = 224:5]
  %17 = getelementptr inbounds [8 x i64]* %16, i32 0, i64 3, !dbg !649 ; [#uses=1 type=i64*] [debug line = 224:5]
  store i64 -6534734903238641935, i64* %17, align 8, !dbg !649 ; [debug line = 224:5]
  %18 = load %struct.sha512_context_** %1, align 8, !dbg !650 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 225:5]
  %19 = getelementptr inbounds %struct.sha512_context_* %18, i32 0, i32 1, !dbg !650 ; [#uses=1 type=[8 x i64]*] [debug line = 225:5]
  %20 = getelementptr inbounds [8 x i64]* %19, i32 0, i64 4, !dbg !650 ; [#uses=1 type=i64*] [debug line = 225:5]
  store i64 5840696475078001361, i64* %20, align 8, !dbg !650 ; [debug line = 225:5]
  %21 = load %struct.sha512_context_** %1, align 8, !dbg !651 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 226:5]
  %22 = getelementptr inbounds %struct.sha512_context_* %21, i32 0, i32 1, !dbg !651 ; [#uses=1 type=[8 x i64]*] [debug line = 226:5]
  %23 = getelementptr inbounds [8 x i64]* %22, i32 0, i64 5, !dbg !651 ; [#uses=1 type=i64*] [debug line = 226:5]
  store i64 -7276294671716946913, i64* %23, align 8, !dbg !651 ; [debug line = 226:5]
  %24 = load %struct.sha512_context_** %1, align 8, !dbg !652 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 227:5]
  %25 = getelementptr inbounds %struct.sha512_context_* %24, i32 0, i32 1, !dbg !652 ; [#uses=1 type=[8 x i64]*] [debug line = 227:5]
  %26 = getelementptr inbounds [8 x i64]* %25, i32 0, i64 6, !dbg !652 ; [#uses=1 type=i64*] [debug line = 227:5]
  store i64 2270897969802886507, i64* %26, align 8, !dbg !652 ; [debug line = 227:5]
  %27 = load %struct.sha512_context_** %1, align 8, !dbg !653 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 228:5]
  %28 = getelementptr inbounds %struct.sha512_context_* %27, i32 0, i32 1, !dbg !653 ; [#uses=1 type=[8 x i64]*] [debug line = 228:5]
  %29 = getelementptr inbounds [8 x i64]* %28, i32 0, i64 7, !dbg !653 ; [#uses=1 type=i64*] [debug line = 228:5]
  store i64 6620516959819538809, i64* %29, align 8, !dbg !653 ; [debug line = 228:5]
  ret i32 0, !dbg !654                            ; [debug line = 230:5]
}

; [#uses=2]
define i32 @sha512_update_128(%struct.sha512_context_* %md, i8* %in) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=5 type=i32*]
  %2 = alloca %struct.sha512_context_*, align 8   ; [#uses=16 type=%struct.sha512_context_**]
  %3 = alloca i8*, align 8                        ; [#uses=8 type=i8**]
  %n = alloca i64, align 8                        ; [#uses=5 type=i64*]
  %i = alloca i64, align 8                        ; [#uses=6 type=i64*]
  %inlen = alloca i64, align 8                    ; [#uses=9 type=i64*]
  %temp_index = alloca i32, align 4               ; [#uses=12 type=i32*]
  %err = alloca i32, align 4                      ; [#uses=4 type=i32*]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  store %struct.sha512_context_* %md, %struct.sha512_context_** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_** %2}, metadata !655), !dbg !656 ; [debug line = 240:40] [debug variable = md]
  store i8* %in, i8** %3, align 8
  call void @llvm.dbg.declare(metadata !{i8** %3}, metadata !657), !dbg !658 ; [debug line = 240:64] [debug variable = in]
  %4 = load i8** %3, align 8, !dbg !659           ; [#uses=1 type=i8*] [debug line = 241:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %4, i32 128) nounwind, !dbg !659 ; [debug line = 241:2]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !661 ; [debug line = 242:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !662 ; [debug line = 243:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str311, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !663 ; [debug line = 244:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str412, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !664 ; [debug line = 245:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str513, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !665 ; [debug line = 246:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str614, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !666 ; [debug line = 247:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str715, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !667 ; [debug line = 248:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str816, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !668 ; [debug line = 249:1]
  call void @llvm.dbg.declare(metadata !{i64* %n}, metadata !669), !dbg !670 ; [debug line = 250:9] [debug variable = n]
  call void @llvm.dbg.declare(metadata !{i64* %i}, metadata !671), !dbg !672 ; [debug line = 251:12] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i64* %inlen}, metadata !673), !dbg !674 ; [debug line = 252:12] [debug variable = inlen]
  store i64 128, i64* %inlen, align 8, !dbg !675  ; [debug line = 252:23]
  call void @llvm.dbg.declare(metadata !{i32* %temp_index}, metadata !676), !dbg !677 ; [debug line = 253:9] [debug variable = temp_index]
  call void @llvm.dbg.declare(metadata !{i32* %err}, metadata !678), !dbg !679 ; [debug line = 254:9] [debug variable = err]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !680), !dbg !681 ; [debug line = 255:19] [debug variable = temp_buf]
  %5 = load %struct.sha512_context_** %2, align 8, !dbg !682 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 258:5]
  %6 = getelementptr inbounds %struct.sha512_context_* %5, i32 0, i32 2, !dbg !682 ; [#uses=1 type=i64*] [debug line = 258:5]
  %7 = load i64* %6, align 8, !dbg !682           ; [#uses=1 type=i64] [debug line = 258:5]
  %8 = icmp ugt i64 %7, 128, !dbg !682            ; [#uses=1 type=i1] [debug line = 258:5]
  br i1 %8, label %9, label %10, !dbg !682        ; [debug line = 258:5]

; <label>:9                                       ; preds = %0
  store i32 1, i32* %1, !dbg !683                 ; [debug line = 259:8]
  br label %141, !dbg !683                        ; [debug line = 259:8]

; <label>:10                                      ; preds = %0
  br label %11, !dbg !685                         ; [debug line = 261:5]

; <label>:11                                      ; preds = %139, %10
  %12 = load i64* %inlen, align 8, !dbg !685      ; [#uses=1 type=i64] [debug line = 261:5]
  %13 = icmp ugt i64 %12, 0, !dbg !685            ; [#uses=1 type=i1] [debug line = 261:5]
  br i1 %13, label %14, label %140, !dbg !685     ; [debug line = 261:5]

; <label>:14                                      ; preds = %11
  %15 = load %struct.sha512_context_** %2, align 8, !dbg !686 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 262:9]
  %16 = getelementptr inbounds %struct.sha512_context_* %15, i32 0, i32 2, !dbg !686 ; [#uses=1 type=i64*] [debug line = 262:9]
  %17 = load i64* %16, align 8, !dbg !686         ; [#uses=1 type=i64] [debug line = 262:9]
  %18 = icmp eq i64 %17, 0, !dbg !686             ; [#uses=1 type=i1] [debug line = 262:9]
  br i1 %18, label %19, label %38, !dbg !686      ; [debug line = 262:9]

; <label>:19                                      ; preds = %14
  %20 = load i64* %inlen, align 8, !dbg !686      ; [#uses=1 type=i64] [debug line = 262:9]
  %21 = icmp uge i64 %20, 128, !dbg !686          ; [#uses=1 type=i1] [debug line = 262:9]
  br i1 %21, label %22, label %38, !dbg !686      ; [debug line = 262:9]

; <label>:22                                      ; preds = %19
  %23 = load %struct.sha512_context_** %2, align 8, !dbg !688 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 263:23]
  %24 = load i8** %3, align 8, !dbg !688          ; [#uses=1 type=i8*] [debug line = 263:23]
  %25 = call i32 @sha512_compress_128(%struct.sha512_context_* %23, i8* %24), !dbg !688 ; [#uses=2 type=i32] [debug line = 263:23]
  store i32 %25, i32* %err, align 4, !dbg !688    ; [debug line = 263:23]
  %26 = icmp ne i32 %25, 0, !dbg !688             ; [#uses=1 type=i1] [debug line = 263:23]
  br i1 %26, label %27, label %29, !dbg !688      ; [debug line = 263:23]

; <label>:27                                      ; preds = %22
  %28 = load i32* %err, align 4, !dbg !690        ; [#uses=1 type=i32] [debug line = 264:15]
  store i32 %28, i32* %1, !dbg !690               ; [debug line = 264:15]
  br label %141, !dbg !690                        ; [debug line = 264:15]

; <label>:29                                      ; preds = %22
  %30 = load %struct.sha512_context_** %2, align 8, !dbg !692 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 266:12]
  %31 = getelementptr inbounds %struct.sha512_context_* %30, i32 0, i32 0, !dbg !692 ; [#uses=2 type=i64*] [debug line = 266:12]
  %32 = load i64* %31, align 8, !dbg !692         ; [#uses=1 type=i64] [debug line = 266:12]
  %33 = add i64 %32, 1024, !dbg !692              ; [#uses=1 type=i64] [debug line = 266:12]
  store i64 %33, i64* %31, align 8, !dbg !692     ; [debug line = 266:12]
  %34 = load i8** %3, align 8, !dbg !693          ; [#uses=1 type=i8*] [debug line = 267:12]
  %35 = getelementptr inbounds i8* %34, i64 128, !dbg !693 ; [#uses=1 type=i8*] [debug line = 267:12]
  store i8* %35, i8** %3, align 8, !dbg !693      ; [debug line = 267:12]
  %36 = load i64* %inlen, align 8, !dbg !694      ; [#uses=1 type=i64] [debug line = 268:12]
  %37 = sub i64 %36, 128, !dbg !694               ; [#uses=1 type=i64] [debug line = 268:12]
  store i64 %37, i64* %inlen, align 8, !dbg !694  ; [debug line = 268:12]
  br label %139, !dbg !695                        ; [debug line = 269:9]

; <label>:38                                      ; preds = %19, %14
  %39 = load i64* %inlen, align 8, !dbg !696      ; [#uses=1 type=i64] [debug line = 270:12]
  %40 = load %struct.sha512_context_** %2, align 8, !dbg !696 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 270:12]
  %41 = getelementptr inbounds %struct.sha512_context_* %40, i32 0, i32 2, !dbg !696 ; [#uses=1 type=i64*] [debug line = 270:12]
  %42 = load i64* %41, align 8, !dbg !696         ; [#uses=1 type=i64] [debug line = 270:12]
  %43 = sub i64 128, %42, !dbg !696               ; [#uses=1 type=i64] [debug line = 270:12]
  %44 = icmp ult i64 %39, %43, !dbg !696          ; [#uses=1 type=i1] [debug line = 270:12]
  br i1 %44, label %45, label %47, !dbg !696      ; [debug line = 270:12]

; <label>:45                                      ; preds = %38
  %46 = load i64* %inlen, align 8, !dbg !696      ; [#uses=1 type=i64] [debug line = 270:12]
  br label %52, !dbg !696                         ; [debug line = 270:12]

; <label>:47                                      ; preds = %38
  %48 = load %struct.sha512_context_** %2, align 8, !dbg !696 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 270:12]
  %49 = getelementptr inbounds %struct.sha512_context_* %48, i32 0, i32 2, !dbg !696 ; [#uses=1 type=i64*] [debug line = 270:12]
  %50 = load i64* %49, align 8, !dbg !696         ; [#uses=1 type=i64] [debug line = 270:12]
  %51 = sub i64 128, %50, !dbg !696               ; [#uses=1 type=i64] [debug line = 270:12]
  br label %52, !dbg !696                         ; [debug line = 270:12]

; <label>:52                                      ; preds = %47, %45
  %53 = phi i64 [ %46, %45 ], [ %51, %47 ], !dbg !696 ; [#uses=1 type=i64] [debug line = 270:12]
  store i64 %53, i64* %n, align 8, !dbg !696      ; [debug line = 270:12]
  store i64 0, i64* %i, align 8, !dbg !698        ; [debug line = 272:17]
  br label %54, !dbg !698                         ; [debug line = 272:17]

; <label>:54                                      ; preds = %71, %52
  %55 = load i64* %i, align 8, !dbg !698          ; [#uses=1 type=i64] [debug line = 272:17]
  %56 = load i64* %n, align 8, !dbg !698          ; [#uses=1 type=i64] [debug line = 272:17]
  %57 = icmp ult i64 %55, %56, !dbg !698          ; [#uses=1 type=i1] [debug line = 272:17]
  br i1 %57, label %58, label %74, !dbg !698      ; [debug line = 272:17]

; <label>:58                                      ; preds = %54
  %59 = load i64* %i, align 8, !dbg !700          ; [#uses=1 type=i64] [debug line = 273:13]
  %60 = load i8** %3, align 8, !dbg !700          ; [#uses=1 type=i8*] [debug line = 273:13]
  %61 = getelementptr inbounds i8* %60, i64 %59, !dbg !700 ; [#uses=1 type=i8*] [debug line = 273:13]
  %62 = load i8* %61, align 1, !dbg !700          ; [#uses=1 type=i8] [debug line = 273:13]
  %63 = load i64* %i, align 8, !dbg !700          ; [#uses=1 type=i64] [debug line = 273:13]
  %64 = load %struct.sha512_context_** %2, align 8, !dbg !700 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 273:13]
  %65 = getelementptr inbounds %struct.sha512_context_* %64, i32 0, i32 2, !dbg !700 ; [#uses=1 type=i64*] [debug line = 273:13]
  %66 = load i64* %65, align 8, !dbg !700         ; [#uses=1 type=i64] [debug line = 273:13]
  %67 = add i64 %63, %66, !dbg !700               ; [#uses=1 type=i64] [debug line = 273:13]
  %68 = load %struct.sha512_context_** %2, align 8, !dbg !700 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 273:13]
  %69 = getelementptr inbounds %struct.sha512_context_* %68, i32 0, i32 3, !dbg !700 ; [#uses=1 type=[128 x i8]*] [debug line = 273:13]
  %70 = getelementptr inbounds [128 x i8]* %69, i32 0, i64 %67, !dbg !700 ; [#uses=1 type=i8*] [debug line = 273:13]
  store i8 %62, i8* %70, align 1, !dbg !700       ; [debug line = 273:13]
  br label %71, !dbg !702                         ; [debug line = 274:12]

; <label>:71                                      ; preds = %58
  %72 = load i64* %i, align 8, !dbg !703          ; [#uses=1 type=i64] [debug line = 272:31]
  %73 = add i64 %72, 1, !dbg !703                 ; [#uses=1 type=i64] [debug line = 272:31]
  store i64 %73, i64* %i, align 8, !dbg !703      ; [debug line = 272:31]
  br label %54, !dbg !703                         ; [debug line = 272:31]

; <label>:74                                      ; preds = %54
  %75 = load i64* %n, align 8, !dbg !704          ; [#uses=1 type=i64] [debug line = 277:12]
  %76 = load %struct.sha512_context_** %2, align 8, !dbg !704 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 277:12]
  %77 = getelementptr inbounds %struct.sha512_context_* %76, i32 0, i32 2, !dbg !704 ; [#uses=2 type=i64*] [debug line = 277:12]
  %78 = load i64* %77, align 8, !dbg !704         ; [#uses=1 type=i64] [debug line = 277:12]
  %79 = add i64 %78, %75, !dbg !704               ; [#uses=1 type=i64] [debug line = 277:12]
  store i64 %79, i64* %77, align 8, !dbg !704     ; [debug line = 277:12]
  %80 = load i64* %n, align 8, !dbg !705          ; [#uses=1 type=i64] [debug line = 278:12]
  %81 = load i8** %3, align 8, !dbg !705          ; [#uses=1 type=i8*] [debug line = 278:12]
  %82 = getelementptr inbounds i8* %81, i64 %80, !dbg !705 ; [#uses=1 type=i8*] [debug line = 278:12]
  store i8* %82, i8** %3, align 8, !dbg !705      ; [debug line = 278:12]
  %83 = load i64* %n, align 8, !dbg !706          ; [#uses=1 type=i64] [debug line = 279:12]
  %84 = load i64* %inlen, align 8, !dbg !706      ; [#uses=1 type=i64] [debug line = 279:12]
  %85 = sub i64 %84, %83, !dbg !706               ; [#uses=1 type=i64] [debug line = 279:12]
  store i64 %85, i64* %inlen, align 8, !dbg !706  ; [debug line = 279:12]
  %86 = load %struct.sha512_context_** %2, align 8, !dbg !707 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 280:12]
  %87 = getelementptr inbounds %struct.sha512_context_* %86, i32 0, i32 2, !dbg !707 ; [#uses=1 type=i64*] [debug line = 280:12]
  %88 = load i64* %87, align 8, !dbg !707         ; [#uses=1 type=i64] [debug line = 280:12]
  %89 = icmp eq i64 %88, 128, !dbg !707           ; [#uses=1 type=i1] [debug line = 280:12]
  br i1 %89, label %90, label %138, !dbg !707     ; [debug line = 280:12]

; <label>:90                                      ; preds = %74
  store i32 0, i32* %temp_index, align 4, !dbg !708 ; [debug line = 281:17]
  br label %91, !dbg !708                         ; [debug line = 281:17]

; <label>:91                                      ; preds = %104, %90
  %92 = load i32* %temp_index, align 4, !dbg !708 ; [#uses=1 type=i32] [debug line = 281:17]
  %93 = icmp slt i32 %92, 128, !dbg !708          ; [#uses=1 type=i1] [debug line = 281:17]
  br i1 %93, label %94, label %107, !dbg !708     ; [debug line = 281:17]

; <label>:94                                      ; preds = %91
  %95 = load i32* %temp_index, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 282:6]
  %96 = sext i32 %95 to i64, !dbg !711            ; [#uses=1 type=i64] [debug line = 282:6]
  %97 = load %struct.sha512_context_** %2, align 8, !dbg !711 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 282:6]
  %98 = getelementptr inbounds %struct.sha512_context_* %97, i32 0, i32 3, !dbg !711 ; [#uses=1 type=[128 x i8]*] [debug line = 282:6]
  %99 = getelementptr inbounds [128 x i8]* %98, i32 0, i64 %96, !dbg !711 ; [#uses=1 type=i8*] [debug line = 282:6]
  %100 = load i8* %99, align 1, !dbg !711         ; [#uses=1 type=i8] [debug line = 282:6]
  %101 = load i32* %temp_index, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 282:6]
  %102 = sext i32 %101 to i64, !dbg !711          ; [#uses=1 type=i64] [debug line = 282:6]
  %103 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %102, !dbg !711 ; [#uses=1 type=i8*] [debug line = 282:6]
  store i8 %100, i8* %103, align 1, !dbg !711     ; [debug line = 282:6]
  br label %104, !dbg !713                        ; [debug line = 283:5]

; <label>:104                                     ; preds = %94
  %105 = load i32* %temp_index, align 4, !dbg !714 ; [#uses=1 type=i32] [debug line = 281:47]
  %106 = add nsw i32 %105, 1, !dbg !714           ; [#uses=1 type=i32] [debug line = 281:47]
  store i32 %106, i32* %temp_index, align 4, !dbg !714 ; [debug line = 281:47]
  br label %91, !dbg !714                         ; [debug line = 281:47]

; <label>:107                                     ; preds = %91
  %108 = load %struct.sha512_context_** %2, align 8, !dbg !715 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 284:26]
  %109 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i32 0, !dbg !715 ; [#uses=1 type=i8*] [debug line = 284:26]
  %110 = call i32 @sha512_compress_128(%struct.sha512_context_* %108, i8* %109), !dbg !715 ; [#uses=2 type=i32] [debug line = 284:26]
  store i32 %110, i32* %err, align 4, !dbg !715   ; [debug line = 284:26]
  %111 = icmp ne i32 %110, 0, !dbg !715           ; [#uses=1 type=i1] [debug line = 284:26]
  br i1 %111, label %112, label %114, !dbg !715   ; [debug line = 284:26]

; <label>:112                                     ; preds = %107
  %113 = load i32* %err, align 4, !dbg !716       ; [#uses=1 type=i32] [debug line = 285:18]
  store i32 %113, i32* %1, !dbg !716              ; [debug line = 285:18]
  br label %141, !dbg !716                        ; [debug line = 285:18]

; <label>:114                                     ; preds = %107
  store i32 0, i32* %temp_index, align 4, !dbg !718 ; [debug line = 287:20]
  br label %115, !dbg !718                        ; [debug line = 287:20]

; <label>:115                                     ; preds = %128, %114
  %116 = load i32* %temp_index, align 4, !dbg !718 ; [#uses=1 type=i32] [debug line = 287:20]
  %117 = icmp slt i32 %116, 128, !dbg !718        ; [#uses=1 type=i1] [debug line = 287:20]
  br i1 %117, label %118, label %131, !dbg !718   ; [debug line = 287:20]

; <label>:118                                     ; preds = %115
  %119 = load i32* %temp_index, align 4, !dbg !720 ; [#uses=1 type=i32] [debug line = 288:6]
  %120 = sext i32 %119 to i64, !dbg !720          ; [#uses=1 type=i64] [debug line = 288:6]
  %121 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %120, !dbg !720 ; [#uses=1 type=i8*] [debug line = 288:6]
  %122 = load i8* %121, align 1, !dbg !720        ; [#uses=1 type=i8] [debug line = 288:6]
  %123 = load i32* %temp_index, align 4, !dbg !720 ; [#uses=1 type=i32] [debug line = 288:6]
  %124 = sext i32 %123 to i64, !dbg !720          ; [#uses=1 type=i64] [debug line = 288:6]
  %125 = load %struct.sha512_context_** %2, align 8, !dbg !720 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 288:6]
  %126 = getelementptr inbounds %struct.sha512_context_* %125, i32 0, i32 3, !dbg !720 ; [#uses=1 type=[128 x i8]*] [debug line = 288:6]
  %127 = getelementptr inbounds [128 x i8]* %126, i32 0, i64 %124, !dbg !720 ; [#uses=1 type=i8*] [debug line = 288:6]
  store i8 %122, i8* %127, align 1, !dbg !720     ; [debug line = 288:6]
  br label %128, !dbg !722                        ; [debug line = 289:5]

; <label>:128                                     ; preds = %118
  %129 = load i32* %temp_index, align 4, !dbg !723 ; [#uses=1 type=i32] [debug line = 287:50]
  %130 = add nsw i32 %129, 1, !dbg !723           ; [#uses=1 type=i32] [debug line = 287:50]
  store i32 %130, i32* %temp_index, align 4, !dbg !723 ; [debug line = 287:50]
  br label %115, !dbg !723                        ; [debug line = 287:50]

; <label>:131                                     ; preds = %115
  %132 = load %struct.sha512_context_** %2, align 8, !dbg !724 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 290:15]
  %133 = getelementptr inbounds %struct.sha512_context_* %132, i32 0, i32 0, !dbg !724 ; [#uses=2 type=i64*] [debug line = 290:15]
  %134 = load i64* %133, align 8, !dbg !724       ; [#uses=1 type=i64] [debug line = 290:15]
  %135 = add i64 %134, 1024, !dbg !724            ; [#uses=1 type=i64] [debug line = 290:15]
  store i64 %135, i64* %133, align 8, !dbg !724   ; [debug line = 290:15]
  %136 = load %struct.sha512_context_** %2, align 8, !dbg !725 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 291:15]
  %137 = getelementptr inbounds %struct.sha512_context_* %136, i32 0, i32 2, !dbg !725 ; [#uses=1 type=i64*] [debug line = 291:15]
  store i64 0, i64* %137, align 8, !dbg !725      ; [debug line = 291:15]
  br label %138, !dbg !726                        ; [debug line = 292:12]

; <label>:138                                     ; preds = %131, %74
  br label %139

; <label>:139                                     ; preds = %138, %29
  br label %11, !dbg !727                         ; [debug line = 294:5]

; <label>:140                                     ; preds = %11
  store i32 0, i32* %1, !dbg !728                 ; [debug line = 295:5]
  br label %141, !dbg !728                        ; [debug line = 295:5]

; <label>:141                                     ; preds = %140, %112, %27, %9
  %142 = load i32* %1, !dbg !729                  ; [#uses=1 type=i32] [debug line = 296:1]
  ret i32 %142, !dbg !729                         ; [debug line = 296:1]
}

; [#uses=5]
define internal i32 @sha512_compress_128(%struct.sha512_context_* %md, i8* %buf) nounwind uwtable {
  %1 = alloca %struct.sha512_context_*, align 8   ; [#uses=4 type=%struct.sha512_context_**]
  %2 = alloca i8*, align 8                        ; [#uses=10 type=i8**]
  %S = alloca [8 x i64], align 16                 ; [#uses=194 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=22 type=[80 x i64]*]
  %t0 = alloca i64, align 8                       ; [#uses=24 type=i64*]
  %t1 = alloca i64, align 8                       ; [#uses=16 type=i64*]
  %i = alloca i32, align 4                        ; [#uses=63 type=i32*]
  store %struct.sha512_context_* %md, %struct.sha512_context_** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_** %1}, metadata !730), !dbg !731 ; [debug line = 96:48] [debug variable = md]
  store i8* %buf, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !732), !dbg !733 ; [debug line = 96:66] [debug variable = buf]
  %3 = load i8** %2, align 8, !dbg !734           ; [#uses=1 type=i8*] [debug line = 97:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 128) nounwind, !dbg !734 ; [debug line = 97:2]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !736 ; [debug line = 98:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !737 ; [debug line = 99:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str311, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !738 ; [debug line = 100:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str412, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !739 ; [debug line = 101:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str513, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !740 ; [debug line = 102:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str614, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !741 ; [debug line = 103:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str715, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !742 ; [debug line = 104:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !743), !dbg !744 ; [debug line = 105:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !745), !dbg !747 ; [debug line = 105:17] [debug variable = W]
  call void @llvm.dbg.declare(metadata !{i64* %t0}, metadata !748), !dbg !749 ; [debug line = 105:24] [debug variable = t0]
  call void @llvm.dbg.declare(metadata !{i64* %t1}, metadata !750), !dbg !751 ; [debug line = 105:28] [debug variable = t1]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !752), !dbg !753 ; [debug line = 106:9] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !754        ; [debug line = 109:10]
  br label %4, !dbg !754                          ; [debug line = 109:10]

; <label>:4                                       ; preds = %17, %0
  %5 = load i32* %i, align 4, !dbg !754           ; [#uses=1 type=i32] [debug line = 109:10]
  %6 = icmp slt i32 %5, 8, !dbg !754              ; [#uses=1 type=i1] [debug line = 109:10]
  br i1 %6, label %7, label %20, !dbg !754        ; [debug line = 109:10]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !756           ; [#uses=1 type=i32] [debug line = 110:9]
  %9 = sext i32 %8 to i64, !dbg !756              ; [#uses=1 type=i64] [debug line = 110:9]
  %10 = load %struct.sha512_context_** %1, align 8, !dbg !756 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 110:9]
  %11 = getelementptr inbounds %struct.sha512_context_* %10, i32 0, i32 1, !dbg !756 ; [#uses=1 type=[8 x i64]*] [debug line = 110:9]
  %12 = getelementptr inbounds [8 x i64]* %11, i32 0, i64 %9, !dbg !756 ; [#uses=1 type=i64*] [debug line = 110:9]
  %13 = load i64* %12, align 8, !dbg !756         ; [#uses=1 type=i64] [debug line = 110:9]
  %14 = load i32* %i, align 4, !dbg !756          ; [#uses=1 type=i32] [debug line = 110:9]
  %15 = sext i32 %14 to i64, !dbg !756            ; [#uses=1 type=i64] [debug line = 110:9]
  %16 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 %15, !dbg !756 ; [#uses=1 type=i64*] [debug line = 110:9]
  store i64 %13, i64* %16, align 8, !dbg !756     ; [debug line = 110:9]
  br label %17, !dbg !758                         ; [debug line = 111:5]

; <label>:17                                      ; preds = %7
  %18 = load i32* %i, align 4, !dbg !759          ; [#uses=1 type=i32] [debug line = 109:24]
  %19 = add nsw i32 %18, 1, !dbg !759             ; [#uses=1 type=i32] [debug line = 109:24]
  store i32 %19, i32* %i, align 4, !dbg !759      ; [debug line = 109:24]
  br label %4, !dbg !759                          ; [debug line = 109:24]

; <label>:20                                      ; preds = %4
  store i32 0, i32* %i, align 4, !dbg !760        ; [debug line = 114:10]
  br label %21, !dbg !760                         ; [debug line = 114:10]

; <label>:21                                      ; preds = %122, %20
  %22 = load i32* %i, align 4, !dbg !760          ; [#uses=1 type=i32] [debug line = 114:10]
  %23 = icmp slt i32 %22, 16, !dbg !760           ; [#uses=1 type=i1] [debug line = 114:10]
  br i1 %23, label %24, label %125, !dbg !760     ; [debug line = 114:10]

; <label>:24                                      ; preds = %21
  %25 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %26 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %27 = mul nsw i32 8, %26, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %28 = sext i32 %27 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %29 = getelementptr inbounds i8* %25, i64 %28, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %30 = getelementptr inbounds i8* %29, i64 0, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %31 = load i8* %30, align 1, !dbg !762          ; [#uses=1 type=i8] [debug line = 115:11]
  %32 = zext i8 %31 to i32, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %33 = and i32 %32, 255, !dbg !762               ; [#uses=1 type=i32] [debug line = 115:11]
  %34 = sext i32 %33 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %35 = shl i64 %34, 56, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %36 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %37 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %38 = mul nsw i32 8, %37, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %39 = sext i32 %38 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %40 = getelementptr inbounds i8* %36, i64 %39, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %41 = getelementptr inbounds i8* %40, i64 1, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %42 = load i8* %41, align 1, !dbg !762          ; [#uses=1 type=i8] [debug line = 115:11]
  %43 = zext i8 %42 to i32, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %44 = and i32 %43, 255, !dbg !762               ; [#uses=1 type=i32] [debug line = 115:11]
  %45 = sext i32 %44 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %46 = shl i64 %45, 48, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %47 = or i64 %35, %46, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %48 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %49 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %50 = mul nsw i32 8, %49, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %51 = sext i32 %50 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %52 = getelementptr inbounds i8* %48, i64 %51, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %53 = getelementptr inbounds i8* %52, i64 2, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %54 = load i8* %53, align 1, !dbg !762          ; [#uses=1 type=i8] [debug line = 115:11]
  %55 = zext i8 %54 to i32, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %56 = and i32 %55, 255, !dbg !762               ; [#uses=1 type=i32] [debug line = 115:11]
  %57 = sext i32 %56 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %58 = shl i64 %57, 40, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %59 = or i64 %47, %58, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %60 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %61 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %62 = mul nsw i32 8, %61, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %63 = sext i32 %62 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %64 = getelementptr inbounds i8* %60, i64 %63, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %65 = getelementptr inbounds i8* %64, i64 3, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %66 = load i8* %65, align 1, !dbg !762          ; [#uses=1 type=i8] [debug line = 115:11]
  %67 = zext i8 %66 to i32, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %68 = and i32 %67, 255, !dbg !762               ; [#uses=1 type=i32] [debug line = 115:11]
  %69 = sext i32 %68 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %70 = shl i64 %69, 32, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %71 = or i64 %59, %70, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %72 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %73 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %74 = mul nsw i32 8, %73, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %75 = sext i32 %74 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %76 = getelementptr inbounds i8* %72, i64 %75, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %77 = getelementptr inbounds i8* %76, i64 4, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %78 = load i8* %77, align 1, !dbg !762          ; [#uses=1 type=i8] [debug line = 115:11]
  %79 = zext i8 %78 to i32, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %80 = and i32 %79, 255, !dbg !762               ; [#uses=1 type=i32] [debug line = 115:11]
  %81 = sext i32 %80 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %82 = shl i64 %81, 24, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %83 = or i64 %71, %82, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %84 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %85 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %86 = mul nsw i32 8, %85, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %87 = sext i32 %86 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %88 = getelementptr inbounds i8* %84, i64 %87, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %89 = getelementptr inbounds i8* %88, i64 5, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %90 = load i8* %89, align 1, !dbg !762          ; [#uses=1 type=i8] [debug line = 115:11]
  %91 = zext i8 %90 to i32, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %92 = and i32 %91, 255, !dbg !762               ; [#uses=1 type=i32] [debug line = 115:11]
  %93 = sext i32 %92 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %94 = shl i64 %93, 16, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %95 = or i64 %83, %94, !dbg !762                ; [#uses=1 type=i64] [debug line = 115:11]
  %96 = load i8** %2, align 8, !dbg !762          ; [#uses=1 type=i8*] [debug line = 115:11]
  %97 = load i32* %i, align 4, !dbg !762          ; [#uses=1 type=i32] [debug line = 115:11]
  %98 = mul nsw i32 8, %97, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %99 = sext i32 %98 to i64, !dbg !762            ; [#uses=1 type=i64] [debug line = 115:11]
  %100 = getelementptr inbounds i8* %96, i64 %99, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %101 = getelementptr inbounds i8* %100, i64 6, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %102 = load i8* %101, align 1, !dbg !762        ; [#uses=1 type=i8] [debug line = 115:11]
  %103 = zext i8 %102 to i32, !dbg !762           ; [#uses=1 type=i32] [debug line = 115:11]
  %104 = and i32 %103, 255, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %105 = sext i32 %104 to i64, !dbg !762          ; [#uses=1 type=i64] [debug line = 115:11]
  %106 = shl i64 %105, 8, !dbg !762               ; [#uses=1 type=i64] [debug line = 115:11]
  %107 = or i64 %95, %106, !dbg !762              ; [#uses=1 type=i64] [debug line = 115:11]
  %108 = load i8** %2, align 8, !dbg !762         ; [#uses=1 type=i8*] [debug line = 115:11]
  %109 = load i32* %i, align 4, !dbg !762         ; [#uses=1 type=i32] [debug line = 115:11]
  %110 = mul nsw i32 8, %109, !dbg !762           ; [#uses=1 type=i32] [debug line = 115:11]
  %111 = sext i32 %110 to i64, !dbg !762          ; [#uses=1 type=i64] [debug line = 115:11]
  %112 = getelementptr inbounds i8* %108, i64 %111, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %113 = getelementptr inbounds i8* %112, i64 7, !dbg !762 ; [#uses=1 type=i8*] [debug line = 115:11]
  %114 = load i8* %113, align 1, !dbg !762        ; [#uses=1 type=i8] [debug line = 115:11]
  %115 = zext i8 %114 to i32, !dbg !762           ; [#uses=1 type=i32] [debug line = 115:11]
  %116 = and i32 %115, 255, !dbg !762             ; [#uses=1 type=i32] [debug line = 115:11]
  %117 = sext i32 %116 to i64, !dbg !762          ; [#uses=1 type=i64] [debug line = 115:11]
  %118 = or i64 %107, %117, !dbg !762             ; [#uses=1 type=i64] [debug line = 115:11]
  %119 = load i32* %i, align 4, !dbg !762         ; [#uses=1 type=i32] [debug line = 115:11]
  %120 = sext i32 %119 to i64, !dbg !762          ; [#uses=1 type=i64] [debug line = 115:11]
  %121 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %120, !dbg !762 ; [#uses=1 type=i64*] [debug line = 115:11]
  store i64 %118, i64* %121, align 8, !dbg !762   ; [debug line = 115:11]
  br label %122, !dbg !765                        ; [debug line = 116:5]

; <label>:122                                     ; preds = %24
  %123 = load i32* %i, align 4, !dbg !766         ; [#uses=1 type=i32] [debug line = 114:25]
  %124 = add nsw i32 %123, 1, !dbg !766           ; [#uses=1 type=i32] [debug line = 114:25]
  store i32 %124, i32* %i, align 4, !dbg !766     ; [debug line = 114:25]
  br label %21, !dbg !766                         ; [debug line = 114:25]

; <label>:125                                     ; preds = %21
  store i32 16, i32* %i, align 4, !dbg !767       ; [debug line = 119:10]
  br label %126, !dbg !767                        ; [debug line = 119:10]

; <label>:126                                     ; preds = %214, %125
  %127 = load i32* %i, align 4, !dbg !767         ; [#uses=1 type=i32] [debug line = 119:10]
  %128 = icmp slt i32 %127, 80, !dbg !767         ; [#uses=1 type=i1] [debug line = 119:10]
  br i1 %128, label %129, label %217, !dbg !767   ; [debug line = 119:10]

; <label>:129                                     ; preds = %126
  %130 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %131 = sub nsw i32 %130, 2, !dbg !769           ; [#uses=1 type=i32] [debug line = 120:9]
  %132 = sext i32 %131 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %133 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %132, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %134 = load i64* %133, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %135 = lshr i64 %134, 19, !dbg !769             ; [#uses=1 type=i64] [debug line = 120:9]
  %136 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %137 = sub nsw i32 %136, 2, !dbg !769           ; [#uses=1 type=i32] [debug line = 120:9]
  %138 = sext i32 %137 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %139 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %138, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %140 = load i64* %139, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %141 = shl i64 %140, 45, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %142 = or i64 %135, %141, !dbg !769             ; [#uses=1 type=i64] [debug line = 120:9]
  %143 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %144 = sub nsw i32 %143, 2, !dbg !769           ; [#uses=1 type=i32] [debug line = 120:9]
  %145 = sext i32 %144 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %146 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %145, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %147 = load i64* %146, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %148 = lshr i64 %147, 61, !dbg !769             ; [#uses=1 type=i64] [debug line = 120:9]
  %149 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %150 = sub nsw i32 %149, 2, !dbg !769           ; [#uses=1 type=i32] [debug line = 120:9]
  %151 = sext i32 %150 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %152 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %151, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %153 = load i64* %152, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %154 = shl i64 %153, 3, !dbg !769               ; [#uses=1 type=i64] [debug line = 120:9]
  %155 = or i64 %148, %154, !dbg !769             ; [#uses=1 type=i64] [debug line = 120:9]
  %156 = xor i64 %142, %155, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %157 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %158 = sub nsw i32 %157, 2, !dbg !769           ; [#uses=1 type=i32] [debug line = 120:9]
  %159 = sext i32 %158 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %160 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %159, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %161 = load i64* %160, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %162 = lshr i64 %161, 6, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %163 = xor i64 %156, %162, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %164 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %165 = sub nsw i32 %164, 7, !dbg !769           ; [#uses=1 type=i32] [debug line = 120:9]
  %166 = sext i32 %165 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %167 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %166, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %168 = load i64* %167, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %169 = add i64 %163, %168, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %170 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %171 = sub nsw i32 %170, 15, !dbg !769          ; [#uses=1 type=i32] [debug line = 120:9]
  %172 = sext i32 %171 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %173 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %172, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %174 = load i64* %173, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %175 = lshr i64 %174, 1, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %176 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %177 = sub nsw i32 %176, 15, !dbg !769          ; [#uses=1 type=i32] [debug line = 120:9]
  %178 = sext i32 %177 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %179 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %178, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %180 = load i64* %179, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %181 = shl i64 %180, 63, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %182 = or i64 %175, %181, !dbg !769             ; [#uses=1 type=i64] [debug line = 120:9]
  %183 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %184 = sub nsw i32 %183, 15, !dbg !769          ; [#uses=1 type=i32] [debug line = 120:9]
  %185 = sext i32 %184 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %186 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %185, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %187 = load i64* %186, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %188 = lshr i64 %187, 8, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %189 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %190 = sub nsw i32 %189, 15, !dbg !769          ; [#uses=1 type=i32] [debug line = 120:9]
  %191 = sext i32 %190 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %192 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %191, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %193 = load i64* %192, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %194 = shl i64 %193, 56, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %195 = or i64 %188, %194, !dbg !769             ; [#uses=1 type=i64] [debug line = 120:9]
  %196 = xor i64 %182, %195, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %197 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %198 = sub nsw i32 %197, 15, !dbg !769          ; [#uses=1 type=i32] [debug line = 120:9]
  %199 = sext i32 %198 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %200 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %199, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %201 = load i64* %200, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %202 = lshr i64 %201, 7, !dbg !769              ; [#uses=1 type=i64] [debug line = 120:9]
  %203 = xor i64 %196, %202, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %204 = add i64 %169, %203, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %205 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %206 = sub nsw i32 %205, 16, !dbg !769          ; [#uses=1 type=i32] [debug line = 120:9]
  %207 = sext i32 %206 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %208 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %207, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  %209 = load i64* %208, align 8, !dbg !769       ; [#uses=1 type=i64] [debug line = 120:9]
  %210 = add i64 %204, %209, !dbg !769            ; [#uses=1 type=i64] [debug line = 120:9]
  %211 = load i32* %i, align 4, !dbg !769         ; [#uses=1 type=i32] [debug line = 120:9]
  %212 = sext i32 %211 to i64, !dbg !769          ; [#uses=1 type=i64] [debug line = 120:9]
  %213 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %212, !dbg !769 ; [#uses=1 type=i64*] [debug line = 120:9]
  store i64 %210, i64* %213, align 8, !dbg !769   ; [debug line = 120:9]
  br label %214, !dbg !771                        ; [debug line = 121:5]

; <label>:214                                     ; preds = %129
  %215 = load i32* %i, align 4, !dbg !772         ; [#uses=1 type=i32] [debug line = 119:26]
  %216 = add nsw i32 %215, 1, !dbg !772           ; [#uses=1 type=i32] [debug line = 119:26]
  store i32 %216, i32* %i, align 4, !dbg !772     ; [debug line = 119:26]
  br label %126, !dbg !772                        ; [debug line = 119:26]

; <label>:217                                     ; preds = %126
  store i32 0, i32* %i, align 4, !dbg !773        ; [debug line = 130:10]
  br label %218, !dbg !773                        ; [debug line = 130:10]

; <label>:218                                     ; preds = %990, %217
  %219 = load i32* %i, align 4, !dbg !773         ; [#uses=1 type=i32] [debug line = 130:10]
  %220 = icmp slt i32 %219, 80, !dbg !773         ; [#uses=1 type=i1] [debug line = 130:10]
  br i1 %220, label %221, label %993, !dbg !773   ; [debug line = 130:10]

; <label>:221                                     ; preds = %218
  %222 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %223 = load i64* %222, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %224 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %225 = load i64* %224, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %226 = lshr i64 %225, 14, !dbg !775             ; [#uses=1 type=i64] [debug line = 131:8]
  %227 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %228 = load i64* %227, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %229 = shl i64 %228, 50, !dbg !775              ; [#uses=1 type=i64] [debug line = 131:8]
  %230 = or i64 %226, %229, !dbg !775             ; [#uses=1 type=i64] [debug line = 131:8]
  %231 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %232 = load i64* %231, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %233 = lshr i64 %232, 18, !dbg !775             ; [#uses=1 type=i64] [debug line = 131:8]
  %234 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %235 = load i64* %234, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %236 = shl i64 %235, 46, !dbg !775              ; [#uses=1 type=i64] [debug line = 131:8]
  %237 = or i64 %233, %236, !dbg !775             ; [#uses=1 type=i64] [debug line = 131:8]
  %238 = xor i64 %230, %237, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %239 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %240 = load i64* %239, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %241 = lshr i64 %240, 41, !dbg !775             ; [#uses=1 type=i64] [debug line = 131:8]
  %242 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %243 = load i64* %242, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %244 = shl i64 %243, 23, !dbg !775              ; [#uses=1 type=i64] [debug line = 131:8]
  %245 = or i64 %241, %244, !dbg !775             ; [#uses=1 type=i64] [debug line = 131:8]
  %246 = xor i64 %238, %245, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %247 = add i64 %223, %246, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %248 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %249 = load i64* %248, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %250 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %251 = load i64* %250, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %252 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %253 = load i64* %252, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %254 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %255 = load i64* %254, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %256 = xor i64 %253, %255, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %257 = and i64 %251, %256, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %258 = xor i64 %249, %257, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %259 = add i64 %247, %258, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %260 = load i32* %i, align 4, !dbg !775         ; [#uses=1 type=i32] [debug line = 131:8]
  %261 = add nsw i32 %260, 0, !dbg !775           ; [#uses=1 type=i32] [debug line = 131:8]
  %262 = sext i32 %261 to i64, !dbg !775          ; [#uses=1 type=i64] [debug line = 131:8]
  %263 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %262, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %264 = load i64* %263, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %265 = add i64 %259, %264, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  %266 = load i32* %i, align 4, !dbg !775         ; [#uses=1 type=i32] [debug line = 131:8]
  %267 = add nsw i32 %266, 0, !dbg !775           ; [#uses=1 type=i32] [debug line = 131:8]
  %268 = sext i32 %267 to i64, !dbg !775          ; [#uses=1 type=i64] [debug line = 131:8]
  %269 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %268, !dbg !775 ; [#uses=1 type=i64*] [debug line = 131:8]
  %270 = load i64* %269, align 8, !dbg !775       ; [#uses=1 type=i64] [debug line = 131:8]
  %271 = add i64 %265, %270, !dbg !775            ; [#uses=1 type=i64] [debug line = 131:8]
  store i64 %271, i64* %t0, align 8, !dbg !775    ; [debug line = 131:8]
  %272 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %273 = load i64* %272, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %274 = lshr i64 %273, 28, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %275 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %276 = load i64* %275, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %277 = shl i64 %276, 36, !dbg !777              ; [#uses=1 type=i64] [debug line = 131:0]
  %278 = or i64 %274, %277, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %279 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %280 = load i64* %279, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %281 = lshr i64 %280, 34, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %282 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %283 = load i64* %282, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %284 = shl i64 %283, 30, !dbg !777              ; [#uses=1 type=i64] [debug line = 131:0]
  %285 = or i64 %281, %284, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %286 = xor i64 %278, %285, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  %287 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %288 = load i64* %287, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %289 = lshr i64 %288, 39, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %290 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %291 = load i64* %290, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %292 = shl i64 %291, 25, !dbg !777              ; [#uses=1 type=i64] [debug line = 131:0]
  %293 = or i64 %289, %292, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %294 = xor i64 %286, %293, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  %295 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %296 = load i64* %295, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %297 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %298 = load i64* %297, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %299 = or i64 %296, %298, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %300 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %301 = load i64* %300, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %302 = and i64 %299, %301, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  %303 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %304 = load i64* %303, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %305 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  %306 = load i64* %305, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %307 = and i64 %304, %306, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  %308 = or i64 %302, %307, !dbg !777             ; [#uses=1 type=i64] [debug line = 131:0]
  %309 = add i64 %294, %308, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  store i64 %309, i64* %t1, align 8, !dbg !777    ; [debug line = 131:0]
  %310 = load i64* %t0, align 8, !dbg !777        ; [#uses=1 type=i64] [debug line = 131:0]
  %311 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !777 ; [#uses=2 type=i64*] [debug line = 131:0]
  %312 = load i64* %311, align 8, !dbg !777       ; [#uses=1 type=i64] [debug line = 131:0]
  %313 = add i64 %312, %310, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  store i64 %313, i64* %311, align 8, !dbg !777   ; [debug line = 131:0]
  %314 = load i64* %t0, align 8, !dbg !777        ; [#uses=1 type=i64] [debug line = 131:0]
  %315 = load i64* %t1, align 8, !dbg !777        ; [#uses=1 type=i64] [debug line = 131:0]
  %316 = add i64 %314, %315, !dbg !777            ; [#uses=1 type=i64] [debug line = 131:0]
  %317 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !777 ; [#uses=1 type=i64*] [debug line = 131:0]
  store i64 %316, i64* %317, align 8, !dbg !777   ; [debug line = 131:0]
  %318 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %319 = load i64* %318, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %320 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %321 = load i64* %320, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %322 = lshr i64 %321, 14, !dbg !778             ; [#uses=1 type=i64] [debug line = 132:8]
  %323 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %324 = load i64* %323, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %325 = shl i64 %324, 50, !dbg !778              ; [#uses=1 type=i64] [debug line = 132:8]
  %326 = or i64 %322, %325, !dbg !778             ; [#uses=1 type=i64] [debug line = 132:8]
  %327 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %328 = load i64* %327, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %329 = lshr i64 %328, 18, !dbg !778             ; [#uses=1 type=i64] [debug line = 132:8]
  %330 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %331 = load i64* %330, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %332 = shl i64 %331, 46, !dbg !778              ; [#uses=1 type=i64] [debug line = 132:8]
  %333 = or i64 %329, %332, !dbg !778             ; [#uses=1 type=i64] [debug line = 132:8]
  %334 = xor i64 %326, %333, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %335 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %336 = load i64* %335, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %337 = lshr i64 %336, 41, !dbg !778             ; [#uses=1 type=i64] [debug line = 132:8]
  %338 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %339 = load i64* %338, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %340 = shl i64 %339, 23, !dbg !778              ; [#uses=1 type=i64] [debug line = 132:8]
  %341 = or i64 %337, %340, !dbg !778             ; [#uses=1 type=i64] [debug line = 132:8]
  %342 = xor i64 %334, %341, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %343 = add i64 %319, %342, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %344 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %345 = load i64* %344, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %346 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %347 = load i64* %346, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %348 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %349 = load i64* %348, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %350 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %351 = load i64* %350, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %352 = xor i64 %349, %351, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %353 = and i64 %347, %352, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %354 = xor i64 %345, %353, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %355 = add i64 %343, %354, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %356 = load i32* %i, align 4, !dbg !778         ; [#uses=1 type=i32] [debug line = 132:8]
  %357 = add nsw i32 %356, 1, !dbg !778           ; [#uses=1 type=i32] [debug line = 132:8]
  %358 = sext i32 %357 to i64, !dbg !778          ; [#uses=1 type=i64] [debug line = 132:8]
  %359 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %358, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %360 = load i64* %359, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %361 = add i64 %355, %360, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  %362 = load i32* %i, align 4, !dbg !778         ; [#uses=1 type=i32] [debug line = 132:8]
  %363 = add nsw i32 %362, 1, !dbg !778           ; [#uses=1 type=i32] [debug line = 132:8]
  %364 = sext i32 %363 to i64, !dbg !778          ; [#uses=1 type=i64] [debug line = 132:8]
  %365 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %364, !dbg !778 ; [#uses=1 type=i64*] [debug line = 132:8]
  %366 = load i64* %365, align 8, !dbg !778       ; [#uses=1 type=i64] [debug line = 132:8]
  %367 = add i64 %361, %366, !dbg !778            ; [#uses=1 type=i64] [debug line = 132:8]
  store i64 %367, i64* %t0, align 8, !dbg !778    ; [debug line = 132:8]
  %368 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %369 = load i64* %368, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %370 = lshr i64 %369, 28, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %371 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %372 = load i64* %371, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %373 = shl i64 %372, 36, !dbg !779              ; [#uses=1 type=i64] [debug line = 132:0]
  %374 = or i64 %370, %373, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %375 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %376 = load i64* %375, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %377 = lshr i64 %376, 34, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %378 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %379 = load i64* %378, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %380 = shl i64 %379, 30, !dbg !779              ; [#uses=1 type=i64] [debug line = 132:0]
  %381 = or i64 %377, %380, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %382 = xor i64 %374, %381, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  %383 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %384 = load i64* %383, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %385 = lshr i64 %384, 39, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %386 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %387 = load i64* %386, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %388 = shl i64 %387, 25, !dbg !779              ; [#uses=1 type=i64] [debug line = 132:0]
  %389 = or i64 %385, %388, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %390 = xor i64 %382, %389, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  %391 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %392 = load i64* %391, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %393 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %394 = load i64* %393, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %395 = or i64 %392, %394, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %396 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %397 = load i64* %396, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %398 = and i64 %395, %397, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  %399 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %400 = load i64* %399, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %401 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  %402 = load i64* %401, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %403 = and i64 %400, %402, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  %404 = or i64 %398, %403, !dbg !779             ; [#uses=1 type=i64] [debug line = 132:0]
  %405 = add i64 %390, %404, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  store i64 %405, i64* %t1, align 8, !dbg !779    ; [debug line = 132:0]
  %406 = load i64* %t0, align 8, !dbg !779        ; [#uses=1 type=i64] [debug line = 132:0]
  %407 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !779 ; [#uses=2 type=i64*] [debug line = 132:0]
  %408 = load i64* %407, align 8, !dbg !779       ; [#uses=1 type=i64] [debug line = 132:0]
  %409 = add i64 %408, %406, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  store i64 %409, i64* %407, align 8, !dbg !779   ; [debug line = 132:0]
  %410 = load i64* %t0, align 8, !dbg !779        ; [#uses=1 type=i64] [debug line = 132:0]
  %411 = load i64* %t1, align 8, !dbg !779        ; [#uses=1 type=i64] [debug line = 132:0]
  %412 = add i64 %410, %411, !dbg !779            ; [#uses=1 type=i64] [debug line = 132:0]
  %413 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !779 ; [#uses=1 type=i64*] [debug line = 132:0]
  store i64 %412, i64* %413, align 8, !dbg !779   ; [debug line = 132:0]
  %414 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %415 = load i64* %414, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %416 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %417 = load i64* %416, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %418 = lshr i64 %417, 14, !dbg !780             ; [#uses=1 type=i64] [debug line = 133:8]
  %419 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %420 = load i64* %419, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %421 = shl i64 %420, 50, !dbg !780              ; [#uses=1 type=i64] [debug line = 133:8]
  %422 = or i64 %418, %421, !dbg !780             ; [#uses=1 type=i64] [debug line = 133:8]
  %423 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %424 = load i64* %423, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %425 = lshr i64 %424, 18, !dbg !780             ; [#uses=1 type=i64] [debug line = 133:8]
  %426 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %427 = load i64* %426, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %428 = shl i64 %427, 46, !dbg !780              ; [#uses=1 type=i64] [debug line = 133:8]
  %429 = or i64 %425, %428, !dbg !780             ; [#uses=1 type=i64] [debug line = 133:8]
  %430 = xor i64 %422, %429, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %431 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %432 = load i64* %431, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %433 = lshr i64 %432, 41, !dbg !780             ; [#uses=1 type=i64] [debug line = 133:8]
  %434 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %435 = load i64* %434, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %436 = shl i64 %435, 23, !dbg !780              ; [#uses=1 type=i64] [debug line = 133:8]
  %437 = or i64 %433, %436, !dbg !780             ; [#uses=1 type=i64] [debug line = 133:8]
  %438 = xor i64 %430, %437, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %439 = add i64 %415, %438, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %440 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %441 = load i64* %440, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %442 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %443 = load i64* %442, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %444 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %445 = load i64* %444, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %446 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %447 = load i64* %446, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %448 = xor i64 %445, %447, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %449 = and i64 %443, %448, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %450 = xor i64 %441, %449, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %451 = add i64 %439, %450, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %452 = load i32* %i, align 4, !dbg !780         ; [#uses=1 type=i32] [debug line = 133:8]
  %453 = add nsw i32 %452, 2, !dbg !780           ; [#uses=1 type=i32] [debug line = 133:8]
  %454 = sext i32 %453 to i64, !dbg !780          ; [#uses=1 type=i64] [debug line = 133:8]
  %455 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %454, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %456 = load i64* %455, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %457 = add i64 %451, %456, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  %458 = load i32* %i, align 4, !dbg !780         ; [#uses=1 type=i32] [debug line = 133:8]
  %459 = add nsw i32 %458, 2, !dbg !780           ; [#uses=1 type=i32] [debug line = 133:8]
  %460 = sext i32 %459 to i64, !dbg !780          ; [#uses=1 type=i64] [debug line = 133:8]
  %461 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %460, !dbg !780 ; [#uses=1 type=i64*] [debug line = 133:8]
  %462 = load i64* %461, align 8, !dbg !780       ; [#uses=1 type=i64] [debug line = 133:8]
  %463 = add i64 %457, %462, !dbg !780            ; [#uses=1 type=i64] [debug line = 133:8]
  store i64 %463, i64* %t0, align 8, !dbg !780    ; [debug line = 133:8]
  %464 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %465 = load i64* %464, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %466 = lshr i64 %465, 28, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %467 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %468 = load i64* %467, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %469 = shl i64 %468, 36, !dbg !781              ; [#uses=1 type=i64] [debug line = 133:0]
  %470 = or i64 %466, %469, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %471 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %472 = load i64* %471, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %473 = lshr i64 %472, 34, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %474 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %475 = load i64* %474, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %476 = shl i64 %475, 30, !dbg !781              ; [#uses=1 type=i64] [debug line = 133:0]
  %477 = or i64 %473, %476, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %478 = xor i64 %470, %477, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  %479 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %480 = load i64* %479, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %481 = lshr i64 %480, 39, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %482 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %483 = load i64* %482, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %484 = shl i64 %483, 25, !dbg !781              ; [#uses=1 type=i64] [debug line = 133:0]
  %485 = or i64 %481, %484, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %486 = xor i64 %478, %485, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  %487 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %488 = load i64* %487, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %489 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %490 = load i64* %489, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %491 = or i64 %488, %490, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %492 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %493 = load i64* %492, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %494 = and i64 %491, %493, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  %495 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %496 = load i64* %495, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %497 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  %498 = load i64* %497, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %499 = and i64 %496, %498, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  %500 = or i64 %494, %499, !dbg !781             ; [#uses=1 type=i64] [debug line = 133:0]
  %501 = add i64 %486, %500, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  store i64 %501, i64* %t1, align 8, !dbg !781    ; [debug line = 133:0]
  %502 = load i64* %t0, align 8, !dbg !781        ; [#uses=1 type=i64] [debug line = 133:0]
  %503 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !781 ; [#uses=2 type=i64*] [debug line = 133:0]
  %504 = load i64* %503, align 8, !dbg !781       ; [#uses=1 type=i64] [debug line = 133:0]
  %505 = add i64 %504, %502, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  store i64 %505, i64* %503, align 8, !dbg !781   ; [debug line = 133:0]
  %506 = load i64* %t0, align 8, !dbg !781        ; [#uses=1 type=i64] [debug line = 133:0]
  %507 = load i64* %t1, align 8, !dbg !781        ; [#uses=1 type=i64] [debug line = 133:0]
  %508 = add i64 %506, %507, !dbg !781            ; [#uses=1 type=i64] [debug line = 133:0]
  %509 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !781 ; [#uses=1 type=i64*] [debug line = 133:0]
  store i64 %508, i64* %509, align 8, !dbg !781   ; [debug line = 133:0]
  %510 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %511 = load i64* %510, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %512 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %513 = load i64* %512, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %514 = lshr i64 %513, 14, !dbg !782             ; [#uses=1 type=i64] [debug line = 134:8]
  %515 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %516 = load i64* %515, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %517 = shl i64 %516, 50, !dbg !782              ; [#uses=1 type=i64] [debug line = 134:8]
  %518 = or i64 %514, %517, !dbg !782             ; [#uses=1 type=i64] [debug line = 134:8]
  %519 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %520 = load i64* %519, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %521 = lshr i64 %520, 18, !dbg !782             ; [#uses=1 type=i64] [debug line = 134:8]
  %522 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %523 = load i64* %522, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %524 = shl i64 %523, 46, !dbg !782              ; [#uses=1 type=i64] [debug line = 134:8]
  %525 = or i64 %521, %524, !dbg !782             ; [#uses=1 type=i64] [debug line = 134:8]
  %526 = xor i64 %518, %525, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %527 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %528 = load i64* %527, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %529 = lshr i64 %528, 41, !dbg !782             ; [#uses=1 type=i64] [debug line = 134:8]
  %530 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %531 = load i64* %530, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %532 = shl i64 %531, 23, !dbg !782              ; [#uses=1 type=i64] [debug line = 134:8]
  %533 = or i64 %529, %532, !dbg !782             ; [#uses=1 type=i64] [debug line = 134:8]
  %534 = xor i64 %526, %533, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %535 = add i64 %511, %534, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %536 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %537 = load i64* %536, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %538 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %539 = load i64* %538, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %540 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %541 = load i64* %540, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %542 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %543 = load i64* %542, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %544 = xor i64 %541, %543, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %545 = and i64 %539, %544, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %546 = xor i64 %537, %545, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %547 = add i64 %535, %546, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %548 = load i32* %i, align 4, !dbg !782         ; [#uses=1 type=i32] [debug line = 134:8]
  %549 = add nsw i32 %548, 3, !dbg !782           ; [#uses=1 type=i32] [debug line = 134:8]
  %550 = sext i32 %549 to i64, !dbg !782          ; [#uses=1 type=i64] [debug line = 134:8]
  %551 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %550, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %552 = load i64* %551, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %553 = add i64 %547, %552, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  %554 = load i32* %i, align 4, !dbg !782         ; [#uses=1 type=i32] [debug line = 134:8]
  %555 = add nsw i32 %554, 3, !dbg !782           ; [#uses=1 type=i32] [debug line = 134:8]
  %556 = sext i32 %555 to i64, !dbg !782          ; [#uses=1 type=i64] [debug line = 134:8]
  %557 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %556, !dbg !782 ; [#uses=1 type=i64*] [debug line = 134:8]
  %558 = load i64* %557, align 8, !dbg !782       ; [#uses=1 type=i64] [debug line = 134:8]
  %559 = add i64 %553, %558, !dbg !782            ; [#uses=1 type=i64] [debug line = 134:8]
  store i64 %559, i64* %t0, align 8, !dbg !782    ; [debug line = 134:8]
  %560 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %561 = load i64* %560, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %562 = lshr i64 %561, 28, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %563 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %564 = load i64* %563, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %565 = shl i64 %564, 36, !dbg !783              ; [#uses=1 type=i64] [debug line = 134:0]
  %566 = or i64 %562, %565, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %567 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %568 = load i64* %567, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %569 = lshr i64 %568, 34, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %570 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %571 = load i64* %570, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %572 = shl i64 %571, 30, !dbg !783              ; [#uses=1 type=i64] [debug line = 134:0]
  %573 = or i64 %569, %572, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %574 = xor i64 %566, %573, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  %575 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %576 = load i64* %575, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %577 = lshr i64 %576, 39, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %578 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %579 = load i64* %578, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %580 = shl i64 %579, 25, !dbg !783              ; [#uses=1 type=i64] [debug line = 134:0]
  %581 = or i64 %577, %580, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %582 = xor i64 %574, %581, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  %583 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %584 = load i64* %583, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %585 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %586 = load i64* %585, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %587 = or i64 %584, %586, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %588 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %589 = load i64* %588, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %590 = and i64 %587, %589, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  %591 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %592 = load i64* %591, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %593 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  %594 = load i64* %593, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %595 = and i64 %592, %594, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  %596 = or i64 %590, %595, !dbg !783             ; [#uses=1 type=i64] [debug line = 134:0]
  %597 = add i64 %582, %596, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  store i64 %597, i64* %t1, align 8, !dbg !783    ; [debug line = 134:0]
  %598 = load i64* %t0, align 8, !dbg !783        ; [#uses=1 type=i64] [debug line = 134:0]
  %599 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !783 ; [#uses=2 type=i64*] [debug line = 134:0]
  %600 = load i64* %599, align 8, !dbg !783       ; [#uses=1 type=i64] [debug line = 134:0]
  %601 = add i64 %600, %598, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  store i64 %601, i64* %599, align 8, !dbg !783   ; [debug line = 134:0]
  %602 = load i64* %t0, align 8, !dbg !783        ; [#uses=1 type=i64] [debug line = 134:0]
  %603 = load i64* %t1, align 8, !dbg !783        ; [#uses=1 type=i64] [debug line = 134:0]
  %604 = add i64 %602, %603, !dbg !783            ; [#uses=1 type=i64] [debug line = 134:0]
  %605 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !783 ; [#uses=1 type=i64*] [debug line = 134:0]
  store i64 %604, i64* %605, align 8, !dbg !783   ; [debug line = 134:0]
  %606 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %607 = load i64* %606, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %608 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %609 = load i64* %608, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %610 = lshr i64 %609, 14, !dbg !784             ; [#uses=1 type=i64] [debug line = 135:8]
  %611 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %612 = load i64* %611, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %613 = shl i64 %612, 50, !dbg !784              ; [#uses=1 type=i64] [debug line = 135:8]
  %614 = or i64 %610, %613, !dbg !784             ; [#uses=1 type=i64] [debug line = 135:8]
  %615 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %616 = load i64* %615, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %617 = lshr i64 %616, 18, !dbg !784             ; [#uses=1 type=i64] [debug line = 135:8]
  %618 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %619 = load i64* %618, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %620 = shl i64 %619, 46, !dbg !784              ; [#uses=1 type=i64] [debug line = 135:8]
  %621 = or i64 %617, %620, !dbg !784             ; [#uses=1 type=i64] [debug line = 135:8]
  %622 = xor i64 %614, %621, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %623 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %624 = load i64* %623, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %625 = lshr i64 %624, 41, !dbg !784             ; [#uses=1 type=i64] [debug line = 135:8]
  %626 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %627 = load i64* %626, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %628 = shl i64 %627, 23, !dbg !784              ; [#uses=1 type=i64] [debug line = 135:8]
  %629 = or i64 %625, %628, !dbg !784             ; [#uses=1 type=i64] [debug line = 135:8]
  %630 = xor i64 %622, %629, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %631 = add i64 %607, %630, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %632 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %633 = load i64* %632, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %634 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %635 = load i64* %634, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %636 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %637 = load i64* %636, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %638 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %639 = load i64* %638, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %640 = xor i64 %637, %639, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %641 = and i64 %635, %640, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %642 = xor i64 %633, %641, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %643 = add i64 %631, %642, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %644 = load i32* %i, align 4, !dbg !784         ; [#uses=1 type=i32] [debug line = 135:8]
  %645 = add nsw i32 %644, 4, !dbg !784           ; [#uses=1 type=i32] [debug line = 135:8]
  %646 = sext i32 %645 to i64, !dbg !784          ; [#uses=1 type=i64] [debug line = 135:8]
  %647 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %646, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %648 = load i64* %647, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %649 = add i64 %643, %648, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  %650 = load i32* %i, align 4, !dbg !784         ; [#uses=1 type=i32] [debug line = 135:8]
  %651 = add nsw i32 %650, 4, !dbg !784           ; [#uses=1 type=i32] [debug line = 135:8]
  %652 = sext i32 %651 to i64, !dbg !784          ; [#uses=1 type=i64] [debug line = 135:8]
  %653 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %652, !dbg !784 ; [#uses=1 type=i64*] [debug line = 135:8]
  %654 = load i64* %653, align 8, !dbg !784       ; [#uses=1 type=i64] [debug line = 135:8]
  %655 = add i64 %649, %654, !dbg !784            ; [#uses=1 type=i64] [debug line = 135:8]
  store i64 %655, i64* %t0, align 8, !dbg !784    ; [debug line = 135:8]
  %656 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %657 = load i64* %656, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %658 = lshr i64 %657, 28, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %659 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %660 = load i64* %659, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %661 = shl i64 %660, 36, !dbg !785              ; [#uses=1 type=i64] [debug line = 135:0]
  %662 = or i64 %658, %661, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %663 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %664 = load i64* %663, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %665 = lshr i64 %664, 34, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %666 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %667 = load i64* %666, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %668 = shl i64 %667, 30, !dbg !785              ; [#uses=1 type=i64] [debug line = 135:0]
  %669 = or i64 %665, %668, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %670 = xor i64 %662, %669, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  %671 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %672 = load i64* %671, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %673 = lshr i64 %672, 39, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %674 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %675 = load i64* %674, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %676 = shl i64 %675, 25, !dbg !785              ; [#uses=1 type=i64] [debug line = 135:0]
  %677 = or i64 %673, %676, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %678 = xor i64 %670, %677, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  %679 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %680 = load i64* %679, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %681 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %682 = load i64* %681, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %683 = or i64 %680, %682, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %684 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %685 = load i64* %684, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %686 = and i64 %683, %685, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  %687 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %688 = load i64* %687, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %689 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  %690 = load i64* %689, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %691 = and i64 %688, %690, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  %692 = or i64 %686, %691, !dbg !785             ; [#uses=1 type=i64] [debug line = 135:0]
  %693 = add i64 %678, %692, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  store i64 %693, i64* %t1, align 8, !dbg !785    ; [debug line = 135:0]
  %694 = load i64* %t0, align 8, !dbg !785        ; [#uses=1 type=i64] [debug line = 135:0]
  %695 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !785 ; [#uses=2 type=i64*] [debug line = 135:0]
  %696 = load i64* %695, align 8, !dbg !785       ; [#uses=1 type=i64] [debug line = 135:0]
  %697 = add i64 %696, %694, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  store i64 %697, i64* %695, align 8, !dbg !785   ; [debug line = 135:0]
  %698 = load i64* %t0, align 8, !dbg !785        ; [#uses=1 type=i64] [debug line = 135:0]
  %699 = load i64* %t1, align 8, !dbg !785        ; [#uses=1 type=i64] [debug line = 135:0]
  %700 = add i64 %698, %699, !dbg !785            ; [#uses=1 type=i64] [debug line = 135:0]
  %701 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !785 ; [#uses=1 type=i64*] [debug line = 135:0]
  store i64 %700, i64* %701, align 8, !dbg !785   ; [debug line = 135:0]
  %702 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %703 = load i64* %702, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %704 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %705 = load i64* %704, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %706 = lshr i64 %705, 14, !dbg !786             ; [#uses=1 type=i64] [debug line = 136:8]
  %707 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %708 = load i64* %707, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %709 = shl i64 %708, 50, !dbg !786              ; [#uses=1 type=i64] [debug line = 136:8]
  %710 = or i64 %706, %709, !dbg !786             ; [#uses=1 type=i64] [debug line = 136:8]
  %711 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %712 = load i64* %711, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %713 = lshr i64 %712, 18, !dbg !786             ; [#uses=1 type=i64] [debug line = 136:8]
  %714 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %715 = load i64* %714, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %716 = shl i64 %715, 46, !dbg !786              ; [#uses=1 type=i64] [debug line = 136:8]
  %717 = or i64 %713, %716, !dbg !786             ; [#uses=1 type=i64] [debug line = 136:8]
  %718 = xor i64 %710, %717, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %719 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %720 = load i64* %719, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %721 = lshr i64 %720, 41, !dbg !786             ; [#uses=1 type=i64] [debug line = 136:8]
  %722 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %723 = load i64* %722, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %724 = shl i64 %723, 23, !dbg !786              ; [#uses=1 type=i64] [debug line = 136:8]
  %725 = or i64 %721, %724, !dbg !786             ; [#uses=1 type=i64] [debug line = 136:8]
  %726 = xor i64 %718, %725, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %727 = add i64 %703, %726, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %728 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %729 = load i64* %728, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %730 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %731 = load i64* %730, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %732 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %733 = load i64* %732, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %734 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %735 = load i64* %734, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %736 = xor i64 %733, %735, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %737 = and i64 %731, %736, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %738 = xor i64 %729, %737, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %739 = add i64 %727, %738, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %740 = load i32* %i, align 4, !dbg !786         ; [#uses=1 type=i32] [debug line = 136:8]
  %741 = add nsw i32 %740, 5, !dbg !786           ; [#uses=1 type=i32] [debug line = 136:8]
  %742 = sext i32 %741 to i64, !dbg !786          ; [#uses=1 type=i64] [debug line = 136:8]
  %743 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %742, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %744 = load i64* %743, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %745 = add i64 %739, %744, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  %746 = load i32* %i, align 4, !dbg !786         ; [#uses=1 type=i32] [debug line = 136:8]
  %747 = add nsw i32 %746, 5, !dbg !786           ; [#uses=1 type=i32] [debug line = 136:8]
  %748 = sext i32 %747 to i64, !dbg !786          ; [#uses=1 type=i64] [debug line = 136:8]
  %749 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %748, !dbg !786 ; [#uses=1 type=i64*] [debug line = 136:8]
  %750 = load i64* %749, align 8, !dbg !786       ; [#uses=1 type=i64] [debug line = 136:8]
  %751 = add i64 %745, %750, !dbg !786            ; [#uses=1 type=i64] [debug line = 136:8]
  store i64 %751, i64* %t0, align 8, !dbg !786    ; [debug line = 136:8]
  %752 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %753 = load i64* %752, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %754 = lshr i64 %753, 28, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %755 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %756 = load i64* %755, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %757 = shl i64 %756, 36, !dbg !787              ; [#uses=1 type=i64] [debug line = 136:0]
  %758 = or i64 %754, %757, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %759 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %760 = load i64* %759, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %761 = lshr i64 %760, 34, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %762 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %763 = load i64* %762, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %764 = shl i64 %763, 30, !dbg !787              ; [#uses=1 type=i64] [debug line = 136:0]
  %765 = or i64 %761, %764, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %766 = xor i64 %758, %765, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  %767 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %768 = load i64* %767, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %769 = lshr i64 %768, 39, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %770 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %771 = load i64* %770, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %772 = shl i64 %771, 25, !dbg !787              ; [#uses=1 type=i64] [debug line = 136:0]
  %773 = or i64 %769, %772, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %774 = xor i64 %766, %773, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  %775 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %776 = load i64* %775, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %777 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %778 = load i64* %777, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %779 = or i64 %776, %778, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %780 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %781 = load i64* %780, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %782 = and i64 %779, %781, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  %783 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %784 = load i64* %783, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %785 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  %786 = load i64* %785, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %787 = and i64 %784, %786, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  %788 = or i64 %782, %787, !dbg !787             ; [#uses=1 type=i64] [debug line = 136:0]
  %789 = add i64 %774, %788, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  store i64 %789, i64* %t1, align 8, !dbg !787    ; [debug line = 136:0]
  %790 = load i64* %t0, align 8, !dbg !787        ; [#uses=1 type=i64] [debug line = 136:0]
  %791 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !787 ; [#uses=2 type=i64*] [debug line = 136:0]
  %792 = load i64* %791, align 8, !dbg !787       ; [#uses=1 type=i64] [debug line = 136:0]
  %793 = add i64 %792, %790, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  store i64 %793, i64* %791, align 8, !dbg !787   ; [debug line = 136:0]
  %794 = load i64* %t0, align 8, !dbg !787        ; [#uses=1 type=i64] [debug line = 136:0]
  %795 = load i64* %t1, align 8, !dbg !787        ; [#uses=1 type=i64] [debug line = 136:0]
  %796 = add i64 %794, %795, !dbg !787            ; [#uses=1 type=i64] [debug line = 136:0]
  %797 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !787 ; [#uses=1 type=i64*] [debug line = 136:0]
  store i64 %796, i64* %797, align 8, !dbg !787   ; [debug line = 136:0]
  %798 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %799 = load i64* %798, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %800 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %801 = load i64* %800, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %802 = lshr i64 %801, 14, !dbg !788             ; [#uses=1 type=i64] [debug line = 137:8]
  %803 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %804 = load i64* %803, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %805 = shl i64 %804, 50, !dbg !788              ; [#uses=1 type=i64] [debug line = 137:8]
  %806 = or i64 %802, %805, !dbg !788             ; [#uses=1 type=i64] [debug line = 137:8]
  %807 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %808 = load i64* %807, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %809 = lshr i64 %808, 18, !dbg !788             ; [#uses=1 type=i64] [debug line = 137:8]
  %810 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %811 = load i64* %810, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %812 = shl i64 %811, 46, !dbg !788              ; [#uses=1 type=i64] [debug line = 137:8]
  %813 = or i64 %809, %812, !dbg !788             ; [#uses=1 type=i64] [debug line = 137:8]
  %814 = xor i64 %806, %813, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %815 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %816 = load i64* %815, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %817 = lshr i64 %816, 41, !dbg !788             ; [#uses=1 type=i64] [debug line = 137:8]
  %818 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %819 = load i64* %818, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %820 = shl i64 %819, 23, !dbg !788              ; [#uses=1 type=i64] [debug line = 137:8]
  %821 = or i64 %817, %820, !dbg !788             ; [#uses=1 type=i64] [debug line = 137:8]
  %822 = xor i64 %814, %821, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %823 = add i64 %799, %822, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %824 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %825 = load i64* %824, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %826 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %827 = load i64* %826, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %828 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %829 = load i64* %828, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %830 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %831 = load i64* %830, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %832 = xor i64 %829, %831, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %833 = and i64 %827, %832, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %834 = xor i64 %825, %833, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %835 = add i64 %823, %834, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %836 = load i32* %i, align 4, !dbg !788         ; [#uses=1 type=i32] [debug line = 137:8]
  %837 = add nsw i32 %836, 6, !dbg !788           ; [#uses=1 type=i32] [debug line = 137:8]
  %838 = sext i32 %837 to i64, !dbg !788          ; [#uses=1 type=i64] [debug line = 137:8]
  %839 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %838, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %840 = load i64* %839, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %841 = add i64 %835, %840, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  %842 = load i32* %i, align 4, !dbg !788         ; [#uses=1 type=i32] [debug line = 137:8]
  %843 = add nsw i32 %842, 6, !dbg !788           ; [#uses=1 type=i32] [debug line = 137:8]
  %844 = sext i32 %843 to i64, !dbg !788          ; [#uses=1 type=i64] [debug line = 137:8]
  %845 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %844, !dbg !788 ; [#uses=1 type=i64*] [debug line = 137:8]
  %846 = load i64* %845, align 8, !dbg !788       ; [#uses=1 type=i64] [debug line = 137:8]
  %847 = add i64 %841, %846, !dbg !788            ; [#uses=1 type=i64] [debug line = 137:8]
  store i64 %847, i64* %t0, align 8, !dbg !788    ; [debug line = 137:8]
  %848 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %849 = load i64* %848, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %850 = lshr i64 %849, 28, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %851 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %852 = load i64* %851, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %853 = shl i64 %852, 36, !dbg !789              ; [#uses=1 type=i64] [debug line = 137:0]
  %854 = or i64 %850, %853, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %855 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %856 = load i64* %855, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %857 = lshr i64 %856, 34, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %858 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %859 = load i64* %858, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %860 = shl i64 %859, 30, !dbg !789              ; [#uses=1 type=i64] [debug line = 137:0]
  %861 = or i64 %857, %860, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %862 = xor i64 %854, %861, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  %863 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %864 = load i64* %863, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %865 = lshr i64 %864, 39, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %866 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %867 = load i64* %866, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %868 = shl i64 %867, 25, !dbg !789              ; [#uses=1 type=i64] [debug line = 137:0]
  %869 = or i64 %865, %868, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %870 = xor i64 %862, %869, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  %871 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %872 = load i64* %871, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %873 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %874 = load i64* %873, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %875 = or i64 %872, %874, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %876 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %877 = load i64* %876, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %878 = and i64 %875, %877, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  %879 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %880 = load i64* %879, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %881 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  %882 = load i64* %881, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %883 = and i64 %880, %882, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  %884 = or i64 %878, %883, !dbg !789             ; [#uses=1 type=i64] [debug line = 137:0]
  %885 = add i64 %870, %884, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  store i64 %885, i64* %t1, align 8, !dbg !789    ; [debug line = 137:0]
  %886 = load i64* %t0, align 8, !dbg !789        ; [#uses=1 type=i64] [debug line = 137:0]
  %887 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !789 ; [#uses=2 type=i64*] [debug line = 137:0]
  %888 = load i64* %887, align 8, !dbg !789       ; [#uses=1 type=i64] [debug line = 137:0]
  %889 = add i64 %888, %886, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  store i64 %889, i64* %887, align 8, !dbg !789   ; [debug line = 137:0]
  %890 = load i64* %t0, align 8, !dbg !789        ; [#uses=1 type=i64] [debug line = 137:0]
  %891 = load i64* %t1, align 8, !dbg !789        ; [#uses=1 type=i64] [debug line = 137:0]
  %892 = add i64 %890, %891, !dbg !789            ; [#uses=1 type=i64] [debug line = 137:0]
  %893 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !789 ; [#uses=1 type=i64*] [debug line = 137:0]
  store i64 %892, i64* %893, align 8, !dbg !789   ; [debug line = 137:0]
  %894 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %895 = load i64* %894, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %896 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %897 = load i64* %896, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %898 = lshr i64 %897, 14, !dbg !790             ; [#uses=1 type=i64] [debug line = 138:8]
  %899 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %900 = load i64* %899, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %901 = shl i64 %900, 50, !dbg !790              ; [#uses=1 type=i64] [debug line = 138:8]
  %902 = or i64 %898, %901, !dbg !790             ; [#uses=1 type=i64] [debug line = 138:8]
  %903 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %904 = load i64* %903, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %905 = lshr i64 %904, 18, !dbg !790             ; [#uses=1 type=i64] [debug line = 138:8]
  %906 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %907 = load i64* %906, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %908 = shl i64 %907, 46, !dbg !790              ; [#uses=1 type=i64] [debug line = 138:8]
  %909 = or i64 %905, %908, !dbg !790             ; [#uses=1 type=i64] [debug line = 138:8]
  %910 = xor i64 %902, %909, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %911 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %912 = load i64* %911, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %913 = lshr i64 %912, 41, !dbg !790             ; [#uses=1 type=i64] [debug line = 138:8]
  %914 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %915 = load i64* %914, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %916 = shl i64 %915, 23, !dbg !790              ; [#uses=1 type=i64] [debug line = 138:8]
  %917 = or i64 %913, %916, !dbg !790             ; [#uses=1 type=i64] [debug line = 138:8]
  %918 = xor i64 %910, %917, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %919 = add i64 %895, %918, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %920 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %921 = load i64* %920, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %922 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %923 = load i64* %922, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %924 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %925 = load i64* %924, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %926 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %927 = load i64* %926, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %928 = xor i64 %925, %927, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %929 = and i64 %923, %928, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %930 = xor i64 %921, %929, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %931 = add i64 %919, %930, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %932 = load i32* %i, align 4, !dbg !790         ; [#uses=1 type=i32] [debug line = 138:8]
  %933 = add nsw i32 %932, 7, !dbg !790           ; [#uses=1 type=i32] [debug line = 138:8]
  %934 = sext i32 %933 to i64, !dbg !790          ; [#uses=1 type=i64] [debug line = 138:8]
  %935 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %934, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %936 = load i64* %935, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %937 = add i64 %931, %936, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  %938 = load i32* %i, align 4, !dbg !790         ; [#uses=1 type=i32] [debug line = 138:8]
  %939 = add nsw i32 %938, 7, !dbg !790           ; [#uses=1 type=i32] [debug line = 138:8]
  %940 = sext i32 %939 to i64, !dbg !790          ; [#uses=1 type=i64] [debug line = 138:8]
  %941 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %940, !dbg !790 ; [#uses=1 type=i64*] [debug line = 138:8]
  %942 = load i64* %941, align 8, !dbg !790       ; [#uses=1 type=i64] [debug line = 138:8]
  %943 = add i64 %937, %942, !dbg !790            ; [#uses=1 type=i64] [debug line = 138:8]
  store i64 %943, i64* %t0, align 8, !dbg !790    ; [debug line = 138:8]
  %944 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %945 = load i64* %944, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %946 = lshr i64 %945, 28, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %947 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %948 = load i64* %947, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %949 = shl i64 %948, 36, !dbg !791              ; [#uses=1 type=i64] [debug line = 138:0]
  %950 = or i64 %946, %949, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %951 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %952 = load i64* %951, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %953 = lshr i64 %952, 34, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %954 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %955 = load i64* %954, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %956 = shl i64 %955, 30, !dbg !791              ; [#uses=1 type=i64] [debug line = 138:0]
  %957 = or i64 %953, %956, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %958 = xor i64 %950, %957, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  %959 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %960 = load i64* %959, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %961 = lshr i64 %960, 39, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %962 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %963 = load i64* %962, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %964 = shl i64 %963, 25, !dbg !791              ; [#uses=1 type=i64] [debug line = 138:0]
  %965 = or i64 %961, %964, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %966 = xor i64 %958, %965, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  %967 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %968 = load i64* %967, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %969 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %970 = load i64* %969, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %971 = or i64 %968, %970, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %972 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %973 = load i64* %972, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %974 = and i64 %971, %973, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  %975 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %976 = load i64* %975, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %977 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  %978 = load i64* %977, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %979 = and i64 %976, %978, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  %980 = or i64 %974, %979, !dbg !791             ; [#uses=1 type=i64] [debug line = 138:0]
  %981 = add i64 %966, %980, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %981, i64* %t1, align 8, !dbg !791    ; [debug line = 138:0]
  %982 = load i64* %t0, align 8, !dbg !791        ; [#uses=1 type=i64] [debug line = 138:0]
  %983 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !791 ; [#uses=2 type=i64*] [debug line = 138:0]
  %984 = load i64* %983, align 8, !dbg !791       ; [#uses=1 type=i64] [debug line = 138:0]
  %985 = add i64 %984, %982, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %985, i64* %983, align 8, !dbg !791   ; [debug line = 138:0]
  %986 = load i64* %t0, align 8, !dbg !791        ; [#uses=1 type=i64] [debug line = 138:0]
  %987 = load i64* %t1, align 8, !dbg !791        ; [#uses=1 type=i64] [debug line = 138:0]
  %988 = add i64 %986, %987, !dbg !791            ; [#uses=1 type=i64] [debug line = 138:0]
  %989 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !791 ; [#uses=1 type=i64*] [debug line = 138:0]
  store i64 %988, i64* %989, align 8, !dbg !791   ; [debug line = 138:0]
  br label %990, !dbg !792                        ; [debug line = 139:4]

; <label>:990                                     ; preds = %221
  %991 = load i32* %i, align 4, !dbg !793         ; [#uses=1 type=i32] [debug line = 130:25]
  %992 = add nsw i32 %991, 8, !dbg !793           ; [#uses=1 type=i32] [debug line = 130:25]
  store i32 %992, i32* %i, align 4, !dbg !793     ; [debug line = 130:25]
  br label %218, !dbg !793                        ; [debug line = 130:25]

; <label>:993                                     ; preds = %218
  store i32 0, i32* %i, align 4, !dbg !794        ; [debug line = 146:9]
  br label %994, !dbg !794                        ; [debug line = 146:9]

; <label>:994                                     ; preds = %1014, %993
  %995 = load i32* %i, align 4, !dbg !794         ; [#uses=1 type=i32] [debug line = 146:9]
  %996 = icmp slt i32 %995, 8, !dbg !794          ; [#uses=1 type=i1] [debug line = 146:9]
  br i1 %996, label %997, label %1017, !dbg !794  ; [debug line = 146:9]

; <label>:997                                     ; preds = %994
  %998 = load i32* %i, align 4, !dbg !796         ; [#uses=1 type=i32] [debug line = 147:9]
  %999 = sext i32 %998 to i64, !dbg !796          ; [#uses=1 type=i64] [debug line = 147:9]
  %1000 = load %struct.sha512_context_** %1, align 8, !dbg !796 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 147:9]
  %1001 = getelementptr inbounds %struct.sha512_context_* %1000, i32 0, i32 1, !dbg !796 ; [#uses=1 type=[8 x i64]*] [debug line = 147:9]
  %1002 = getelementptr inbounds [8 x i64]* %1001, i32 0, i64 %999, !dbg !796 ; [#uses=1 type=i64*] [debug line = 147:9]
  %1003 = load i64* %1002, align 8, !dbg !796     ; [#uses=1 type=i64] [debug line = 147:9]
  %1004 = load i32* %i, align 4, !dbg !796        ; [#uses=1 type=i32] [debug line = 147:9]
  %1005 = sext i32 %1004 to i64, !dbg !796        ; [#uses=1 type=i64] [debug line = 147:9]
  %1006 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 %1005, !dbg !796 ; [#uses=1 type=i64*] [debug line = 147:9]
  %1007 = load i64* %1006, align 8, !dbg !796     ; [#uses=1 type=i64] [debug line = 147:9]
  %1008 = add i64 %1003, %1007, !dbg !796         ; [#uses=1 type=i64] [debug line = 147:9]
  %1009 = load i32* %i, align 4, !dbg !796        ; [#uses=1 type=i32] [debug line = 147:9]
  %1010 = sext i32 %1009 to i64, !dbg !796        ; [#uses=1 type=i64] [debug line = 147:9]
  %1011 = load %struct.sha512_context_** %1, align 8, !dbg !796 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 147:9]
  %1012 = getelementptr inbounds %struct.sha512_context_* %1011, i32 0, i32 1, !dbg !796 ; [#uses=1 type=[8 x i64]*] [debug line = 147:9]
  %1013 = getelementptr inbounds [8 x i64]* %1012, i32 0, i64 %1010, !dbg !796 ; [#uses=1 type=i64*] [debug line = 147:9]
  store i64 %1008, i64* %1013, align 8, !dbg !796 ; [debug line = 147:9]
  br label %1014, !dbg !798                       ; [debug line = 148:5]

; <label>:1014                                    ; preds = %997
  %1015 = load i32* %i, align 4, !dbg !799        ; [#uses=1 type=i32] [debug line = 146:23]
  %1016 = add nsw i32 %1015, 1, !dbg !799         ; [#uses=1 type=i32] [debug line = 146:23]
  store i32 %1016, i32* %i, align 4, !dbg !799    ; [debug line = 146:23]
  br label %994, !dbg !799                        ; [debug line = 146:23]

; <label>:1017                                    ; preds = %994
  ret i32 0, !dbg !800                            ; [debug line = 150:5]
}

; [#uses=4]
define i32 @sha512_update_32(%struct.sha512_context_* %md, i8* %in) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=5 type=i32*]
  %2 = alloca %struct.sha512_context_*, align 8   ; [#uses=16 type=%struct.sha512_context_**]
  %3 = alloca i8*, align 8                        ; [#uses=8 type=i8**]
  %n = alloca i64, align 8                        ; [#uses=5 type=i64*]
  %i = alloca i64, align 8                        ; [#uses=6 type=i64*]
  %inlen = alloca i64, align 8                    ; [#uses=9 type=i64*]
  %temp_index = alloca i32, align 4               ; [#uses=12 type=i32*]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  %err = alloca i32, align 4                      ; [#uses=4 type=i32*]
  store %struct.sha512_context_* %md, %struct.sha512_context_** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_** %2}, metadata !801), !dbg !802 ; [debug line = 298:39] [debug variable = md]
  store i8* %in, i8** %3, align 8
  call void @llvm.dbg.declare(metadata !{i8** %3}, metadata !803), !dbg !804 ; [debug line = 298:63] [debug variable = in]
  %4 = load i8** %3, align 8, !dbg !805           ; [#uses=1 type=i8*] [debug line = 299:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %4, i32 32) nounwind, !dbg !805 ; [debug line = 299:2]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !807 ; [debug line = 300:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !808 ; [debug line = 301:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str311, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !809 ; [debug line = 302:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str412, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !810 ; [debug line = 303:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str513, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !811 ; [debug line = 304:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str614, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !812 ; [debug line = 305:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str715, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !813 ; [debug line = 306:1]
  call void @llvm.dbg.declare(metadata !{i64* %n}, metadata !814), !dbg !815 ; [debug line = 307:9] [debug variable = n]
  call void @llvm.dbg.declare(metadata !{i64* %i}, metadata !816), !dbg !817 ; [debug line = 308:12] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i64* %inlen}, metadata !818), !dbg !819 ; [debug line = 309:12] [debug variable = inlen]
  store i64 32, i64* %inlen, align 8, !dbg !820   ; [debug line = 309:22]
  call void @llvm.dbg.declare(metadata !{i32* %temp_index}, metadata !821), !dbg !822 ; [debug line = 310:9] [debug variable = temp_index]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !823), !dbg !824 ; [debug line = 311:19] [debug variable = temp_buf]
  call void @llvm.dbg.declare(metadata !{i32* %err}, metadata !825), !dbg !826 ; [debug line = 312:9] [debug variable = err]
  %5 = load %struct.sha512_context_** %2, align 8, !dbg !827 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 315:5]
  %6 = getelementptr inbounds %struct.sha512_context_* %5, i32 0, i32 2, !dbg !827 ; [#uses=1 type=i64*] [debug line = 315:5]
  %7 = load i64* %6, align 8, !dbg !827           ; [#uses=1 type=i64] [debug line = 315:5]
  %8 = icmp ugt i64 %7, 128, !dbg !827            ; [#uses=1 type=i1] [debug line = 315:5]
  br i1 %8, label %9, label %10, !dbg !827        ; [debug line = 315:5]

; <label>:9                                       ; preds = %0
  store i32 1, i32* %1, !dbg !828                 ; [debug line = 316:8]
  br label %141, !dbg !828                        ; [debug line = 316:8]

; <label>:10                                      ; preds = %0
  br label %11, !dbg !830                         ; [debug line = 318:5]

; <label>:11                                      ; preds = %139, %10
  %12 = load i64* %inlen, align 8, !dbg !830      ; [#uses=1 type=i64] [debug line = 318:5]
  %13 = icmp ugt i64 %12, 0, !dbg !830            ; [#uses=1 type=i1] [debug line = 318:5]
  br i1 %13, label %14, label %140, !dbg !830     ; [debug line = 318:5]

; <label>:14                                      ; preds = %11
  %15 = load %struct.sha512_context_** %2, align 8, !dbg !831 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 319:9]
  %16 = getelementptr inbounds %struct.sha512_context_* %15, i32 0, i32 2, !dbg !831 ; [#uses=1 type=i64*] [debug line = 319:9]
  %17 = load i64* %16, align 8, !dbg !831         ; [#uses=1 type=i64] [debug line = 319:9]
  %18 = icmp eq i64 %17, 0, !dbg !831             ; [#uses=1 type=i1] [debug line = 319:9]
  br i1 %18, label %19, label %38, !dbg !831      ; [debug line = 319:9]

; <label>:19                                      ; preds = %14
  %20 = load i64* %inlen, align 8, !dbg !831      ; [#uses=1 type=i64] [debug line = 319:9]
  %21 = icmp uge i64 %20, 128, !dbg !831          ; [#uses=1 type=i1] [debug line = 319:9]
  br i1 %21, label %22, label %38, !dbg !831      ; [debug line = 319:9]

; <label>:22                                      ; preds = %19
  %23 = load %struct.sha512_context_** %2, align 8, !dbg !833 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 320:23]
  %24 = load i8** %3, align 8, !dbg !833          ; [#uses=1 type=i8*] [debug line = 320:23]
  %25 = call i32 @sha512_compress_32(%struct.sha512_context_* %23, i8* %24), !dbg !833 ; [#uses=2 type=i32] [debug line = 320:23]
  store i32 %25, i32* %err, align 4, !dbg !833    ; [debug line = 320:23]
  %26 = icmp ne i32 %25, 0, !dbg !833             ; [#uses=1 type=i1] [debug line = 320:23]
  br i1 %26, label %27, label %29, !dbg !833      ; [debug line = 320:23]

; <label>:27                                      ; preds = %22
  %28 = load i32* %err, align 4, !dbg !835        ; [#uses=1 type=i32] [debug line = 321:15]
  store i32 %28, i32* %1, !dbg !835               ; [debug line = 321:15]
  br label %141, !dbg !835                        ; [debug line = 321:15]

; <label>:29                                      ; preds = %22
  %30 = load %struct.sha512_context_** %2, align 8, !dbg !837 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 323:12]
  %31 = getelementptr inbounds %struct.sha512_context_* %30, i32 0, i32 0, !dbg !837 ; [#uses=2 type=i64*] [debug line = 323:12]
  %32 = load i64* %31, align 8, !dbg !837         ; [#uses=1 type=i64] [debug line = 323:12]
  %33 = add i64 %32, 1024, !dbg !837              ; [#uses=1 type=i64] [debug line = 323:12]
  store i64 %33, i64* %31, align 8, !dbg !837     ; [debug line = 323:12]
  %34 = load i8** %3, align 8, !dbg !838          ; [#uses=1 type=i8*] [debug line = 324:12]
  %35 = getelementptr inbounds i8* %34, i64 128, !dbg !838 ; [#uses=1 type=i8*] [debug line = 324:12]
  store i8* %35, i8** %3, align 8, !dbg !838      ; [debug line = 324:12]
  %36 = load i64* %inlen, align 8, !dbg !839      ; [#uses=1 type=i64] [debug line = 325:12]
  %37 = sub i64 %36, 128, !dbg !839               ; [#uses=1 type=i64] [debug line = 325:12]
  store i64 %37, i64* %inlen, align 8, !dbg !839  ; [debug line = 325:12]
  br label %139, !dbg !840                        ; [debug line = 326:9]

; <label>:38                                      ; preds = %19, %14
  %39 = load i64* %inlen, align 8, !dbg !841      ; [#uses=1 type=i64] [debug line = 327:12]
  %40 = load %struct.sha512_context_** %2, align 8, !dbg !841 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 327:12]
  %41 = getelementptr inbounds %struct.sha512_context_* %40, i32 0, i32 2, !dbg !841 ; [#uses=1 type=i64*] [debug line = 327:12]
  %42 = load i64* %41, align 8, !dbg !841         ; [#uses=1 type=i64] [debug line = 327:12]
  %43 = sub i64 128, %42, !dbg !841               ; [#uses=1 type=i64] [debug line = 327:12]
  %44 = icmp ult i64 %39, %43, !dbg !841          ; [#uses=1 type=i1] [debug line = 327:12]
  br i1 %44, label %45, label %47, !dbg !841      ; [debug line = 327:12]

; <label>:45                                      ; preds = %38
  %46 = load i64* %inlen, align 8, !dbg !841      ; [#uses=1 type=i64] [debug line = 327:12]
  br label %52, !dbg !841                         ; [debug line = 327:12]

; <label>:47                                      ; preds = %38
  %48 = load %struct.sha512_context_** %2, align 8, !dbg !841 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 327:12]
  %49 = getelementptr inbounds %struct.sha512_context_* %48, i32 0, i32 2, !dbg !841 ; [#uses=1 type=i64*] [debug line = 327:12]
  %50 = load i64* %49, align 8, !dbg !841         ; [#uses=1 type=i64] [debug line = 327:12]
  %51 = sub i64 128, %50, !dbg !841               ; [#uses=1 type=i64] [debug line = 327:12]
  br label %52, !dbg !841                         ; [debug line = 327:12]

; <label>:52                                      ; preds = %47, %45
  %53 = phi i64 [ %46, %45 ], [ %51, %47 ], !dbg !841 ; [#uses=1 type=i64] [debug line = 327:12]
  store i64 %53, i64* %n, align 8, !dbg !841      ; [debug line = 327:12]
  store i64 0, i64* %i, align 8, !dbg !843        ; [debug line = 329:17]
  br label %54, !dbg !843                         ; [debug line = 329:17]

; <label>:54                                      ; preds = %71, %52
  %55 = load i64* %i, align 8, !dbg !843          ; [#uses=1 type=i64] [debug line = 329:17]
  %56 = load i64* %n, align 8, !dbg !843          ; [#uses=1 type=i64] [debug line = 329:17]
  %57 = icmp ult i64 %55, %56, !dbg !843          ; [#uses=1 type=i1] [debug line = 329:17]
  br i1 %57, label %58, label %74, !dbg !843      ; [debug line = 329:17]

; <label>:58                                      ; preds = %54
  %59 = load i64* %i, align 8, !dbg !845          ; [#uses=1 type=i64] [debug line = 330:13]
  %60 = load i8** %3, align 8, !dbg !845          ; [#uses=1 type=i8*] [debug line = 330:13]
  %61 = getelementptr inbounds i8* %60, i64 %59, !dbg !845 ; [#uses=1 type=i8*] [debug line = 330:13]
  %62 = load i8* %61, align 1, !dbg !845          ; [#uses=1 type=i8] [debug line = 330:13]
  %63 = load i64* %i, align 8, !dbg !845          ; [#uses=1 type=i64] [debug line = 330:13]
  %64 = load %struct.sha512_context_** %2, align 8, !dbg !845 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 330:13]
  %65 = getelementptr inbounds %struct.sha512_context_* %64, i32 0, i32 2, !dbg !845 ; [#uses=1 type=i64*] [debug line = 330:13]
  %66 = load i64* %65, align 8, !dbg !845         ; [#uses=1 type=i64] [debug line = 330:13]
  %67 = add i64 %63, %66, !dbg !845               ; [#uses=1 type=i64] [debug line = 330:13]
  %68 = load %struct.sha512_context_** %2, align 8, !dbg !845 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 330:13]
  %69 = getelementptr inbounds %struct.sha512_context_* %68, i32 0, i32 3, !dbg !845 ; [#uses=1 type=[128 x i8]*] [debug line = 330:13]
  %70 = getelementptr inbounds [128 x i8]* %69, i32 0, i64 %67, !dbg !845 ; [#uses=1 type=i8*] [debug line = 330:13]
  store i8 %62, i8* %70, align 1, !dbg !845       ; [debug line = 330:13]
  br label %71, !dbg !847                         ; [debug line = 331:12]

; <label>:71                                      ; preds = %58
  %72 = load i64* %i, align 8, !dbg !848          ; [#uses=1 type=i64] [debug line = 329:31]
  %73 = add i64 %72, 1, !dbg !848                 ; [#uses=1 type=i64] [debug line = 329:31]
  store i64 %73, i64* %i, align 8, !dbg !848      ; [debug line = 329:31]
  br label %54, !dbg !848                         ; [debug line = 329:31]

; <label>:74                                      ; preds = %54
  %75 = load i64* %n, align 8, !dbg !849          ; [#uses=1 type=i64] [debug line = 334:12]
  %76 = load %struct.sha512_context_** %2, align 8, !dbg !849 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 334:12]
  %77 = getelementptr inbounds %struct.sha512_context_* %76, i32 0, i32 2, !dbg !849 ; [#uses=2 type=i64*] [debug line = 334:12]
  %78 = load i64* %77, align 8, !dbg !849         ; [#uses=1 type=i64] [debug line = 334:12]
  %79 = add i64 %78, %75, !dbg !849               ; [#uses=1 type=i64] [debug line = 334:12]
  store i64 %79, i64* %77, align 8, !dbg !849     ; [debug line = 334:12]
  %80 = load i64* %n, align 8, !dbg !850          ; [#uses=1 type=i64] [debug line = 335:12]
  %81 = load i8** %3, align 8, !dbg !850          ; [#uses=1 type=i8*] [debug line = 335:12]
  %82 = getelementptr inbounds i8* %81, i64 %80, !dbg !850 ; [#uses=1 type=i8*] [debug line = 335:12]
  store i8* %82, i8** %3, align 8, !dbg !850      ; [debug line = 335:12]
  %83 = load i64* %n, align 8, !dbg !851          ; [#uses=1 type=i64] [debug line = 336:12]
  %84 = load i64* %inlen, align 8, !dbg !851      ; [#uses=1 type=i64] [debug line = 336:12]
  %85 = sub i64 %84, %83, !dbg !851               ; [#uses=1 type=i64] [debug line = 336:12]
  store i64 %85, i64* %inlen, align 8, !dbg !851  ; [debug line = 336:12]
  %86 = load %struct.sha512_context_** %2, align 8, !dbg !852 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 337:4]
  %87 = getelementptr inbounds %struct.sha512_context_* %86, i32 0, i32 2, !dbg !852 ; [#uses=1 type=i64*] [debug line = 337:4]
  %88 = load i64* %87, align 8, !dbg !852         ; [#uses=1 type=i64] [debug line = 337:4]
  %89 = icmp eq i64 %88, 128, !dbg !852           ; [#uses=1 type=i1] [debug line = 337:4]
  br i1 %89, label %90, label %138, !dbg !852     ; [debug line = 337:4]

; <label>:90                                      ; preds = %74
  store i32 0, i32* %temp_index, align 4, !dbg !853 ; [debug line = 338:9]
  br label %91, !dbg !853                         ; [debug line = 338:9]

; <label>:91                                      ; preds = %104, %90
  %92 = load i32* %temp_index, align 4, !dbg !853 ; [#uses=1 type=i32] [debug line = 338:9]
  %93 = icmp slt i32 %92, 128, !dbg !853          ; [#uses=1 type=i1] [debug line = 338:9]
  br i1 %93, label %94, label %107, !dbg !853     ; [debug line = 338:9]

; <label>:94                                      ; preds = %91
  %95 = load i32* %temp_index, align 4, !dbg !856 ; [#uses=1 type=i32] [debug line = 339:6]
  %96 = sext i32 %95 to i64, !dbg !856            ; [#uses=1 type=i64] [debug line = 339:6]
  %97 = load %struct.sha512_context_** %2, align 8, !dbg !856 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 339:6]
  %98 = getelementptr inbounds %struct.sha512_context_* %97, i32 0, i32 3, !dbg !856 ; [#uses=1 type=[128 x i8]*] [debug line = 339:6]
  %99 = getelementptr inbounds [128 x i8]* %98, i32 0, i64 %96, !dbg !856 ; [#uses=1 type=i8*] [debug line = 339:6]
  %100 = load i8* %99, align 1, !dbg !856         ; [#uses=1 type=i8] [debug line = 339:6]
  %101 = load i32* %temp_index, align 4, !dbg !856 ; [#uses=1 type=i32] [debug line = 339:6]
  %102 = sext i32 %101 to i64, !dbg !856          ; [#uses=1 type=i64] [debug line = 339:6]
  %103 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %102, !dbg !856 ; [#uses=1 type=i8*] [debug line = 339:6]
  store i8 %100, i8* %103, align 1, !dbg !856     ; [debug line = 339:6]
  br label %104, !dbg !858                        ; [debug line = 340:5]

; <label>:104                                     ; preds = %94
  %105 = load i32* %temp_index, align 4, !dbg !859 ; [#uses=1 type=i32] [debug line = 338:39]
  %106 = add nsw i32 %105, 1, !dbg !859           ; [#uses=1 type=i32] [debug line = 338:39]
  store i32 %106, i32* %temp_index, align 4, !dbg !859 ; [debug line = 338:39]
  br label %91, !dbg !859                         ; [debug line = 338:39]

; <label>:107                                     ; preds = %91
  %108 = load %struct.sha512_context_** %2, align 8, !dbg !860 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 341:16]
  %109 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i32 0, !dbg !860 ; [#uses=1 type=i8*] [debug line = 341:16]
  %110 = call i32 @sha512_compress_128(%struct.sha512_context_* %108, i8* %109), !dbg !860 ; [#uses=2 type=i32] [debug line = 341:16]
  store i32 %110, i32* %err, align 4, !dbg !860   ; [debug line = 341:16]
  %111 = icmp ne i32 %110, 0, !dbg !860           ; [#uses=1 type=i1] [debug line = 341:16]
  br i1 %111, label %112, label %114, !dbg !860   ; [debug line = 341:16]

; <label>:112                                     ; preds = %107
  %113 = load i32* %err, align 4, !dbg !861       ; [#uses=1 type=i32] [debug line = 342:6]
  store i32 %113, i32* %1, !dbg !861              ; [debug line = 342:6]
  br label %141, !dbg !861                        ; [debug line = 342:6]

; <label>:114                                     ; preds = %107
  store i32 0, i32* %temp_index, align 4, !dbg !863 ; [debug line = 344:9]
  br label %115, !dbg !863                        ; [debug line = 344:9]

; <label>:115                                     ; preds = %128, %114
  %116 = load i32* %temp_index, align 4, !dbg !863 ; [#uses=1 type=i32] [debug line = 344:9]
  %117 = icmp slt i32 %116, 128, !dbg !863        ; [#uses=1 type=i1] [debug line = 344:9]
  br i1 %117, label %118, label %131, !dbg !863   ; [debug line = 344:9]

; <label>:118                                     ; preds = %115
  %119 = load i32* %temp_index, align 4, !dbg !865 ; [#uses=1 type=i32] [debug line = 345:6]
  %120 = sext i32 %119 to i64, !dbg !865          ; [#uses=1 type=i64] [debug line = 345:6]
  %121 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %120, !dbg !865 ; [#uses=1 type=i8*] [debug line = 345:6]
  %122 = load i8* %121, align 1, !dbg !865        ; [#uses=1 type=i8] [debug line = 345:6]
  %123 = load i32* %temp_index, align 4, !dbg !865 ; [#uses=1 type=i32] [debug line = 345:6]
  %124 = sext i32 %123 to i64, !dbg !865          ; [#uses=1 type=i64] [debug line = 345:6]
  %125 = load %struct.sha512_context_** %2, align 8, !dbg !865 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 345:6]
  %126 = getelementptr inbounds %struct.sha512_context_* %125, i32 0, i32 3, !dbg !865 ; [#uses=1 type=[128 x i8]*] [debug line = 345:6]
  %127 = getelementptr inbounds [128 x i8]* %126, i32 0, i64 %124, !dbg !865 ; [#uses=1 type=i8*] [debug line = 345:6]
  store i8 %122, i8* %127, align 1, !dbg !865     ; [debug line = 345:6]
  br label %128, !dbg !867                        ; [debug line = 346:5]

; <label>:128                                     ; preds = %118
  %129 = load i32* %temp_index, align 4, !dbg !868 ; [#uses=1 type=i32] [debug line = 344:39]
  %130 = add nsw i32 %129, 1, !dbg !868           ; [#uses=1 type=i32] [debug line = 344:39]
  store i32 %130, i32* %temp_index, align 4, !dbg !868 ; [debug line = 344:39]
  br label %115, !dbg !868                        ; [debug line = 344:39]

; <label>:131                                     ; preds = %115
  %132 = load %struct.sha512_context_** %2, align 8, !dbg !869 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 347:5]
  %133 = getelementptr inbounds %struct.sha512_context_* %132, i32 0, i32 0, !dbg !869 ; [#uses=2 type=i64*] [debug line = 347:5]
  %134 = load i64* %133, align 8, !dbg !869       ; [#uses=1 type=i64] [debug line = 347:5]
  %135 = add i64 %134, 1024, !dbg !869            ; [#uses=1 type=i64] [debug line = 347:5]
  store i64 %135, i64* %133, align 8, !dbg !869   ; [debug line = 347:5]
  %136 = load %struct.sha512_context_** %2, align 8, !dbg !870 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 348:5]
  %137 = getelementptr inbounds %struct.sha512_context_* %136, i32 0, i32 2, !dbg !870 ; [#uses=1 type=i64*] [debug line = 348:5]
  store i64 0, i64* %137, align 8, !dbg !870      ; [debug line = 348:5]
  br label %138, !dbg !871                        ; [debug line = 349:4]

; <label>:138                                     ; preds = %131, %74
  br label %139

; <label>:139                                     ; preds = %138, %29
  br label %11, !dbg !872                         ; [debug line = 351:5]

; <label>:140                                     ; preds = %11
  store i32 0, i32* %1, !dbg !873                 ; [debug line = 352:5]
  br label %141, !dbg !873                        ; [debug line = 352:5]

; <label>:141                                     ; preds = %140, %112, %27, %9
  %142 = load i32* %1, !dbg !874                  ; [#uses=1 type=i32] [debug line = 353:1]
  ret i32 %142, !dbg !874                         ; [debug line = 353:1]
}

; [#uses=1]
define internal i32 @sha512_compress_32(%struct.sha512_context_* %md, i8* %buf) nounwind uwtable {
  %1 = alloca %struct.sha512_context_*, align 8   ; [#uses=4 type=%struct.sha512_context_**]
  %2 = alloca i8*, align 8                        ; [#uses=10 type=i8**]
  %S = alloca [8 x i64], align 16                 ; [#uses=194 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=22 type=[80 x i64]*]
  %t0 = alloca i64, align 8                       ; [#uses=24 type=i64*]
  %t1 = alloca i64, align 8                       ; [#uses=16 type=i64*]
  %i = alloca i32, align 4                        ; [#uses=63 type=i32*]
  store %struct.sha512_context_* %md, %struct.sha512_context_** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_** %1}, metadata !875), !dbg !876 ; [debug line = 153:47] [debug variable = md]
  store i8* %buf, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !877), !dbg !878 ; [debug line = 153:65] [debug variable = buf]
  %3 = load i8** %2, align 8, !dbg !879           ; [#uses=1 type=i8*] [debug line = 154:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 32) nounwind, !dbg !879 ; [debug line = 154:2]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !881 ; [debug line = 155:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !882 ; [debug line = 156:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str311, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !883 ; [debug line = 157:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str412, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !884 ; [debug line = 158:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str513, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !885 ; [debug line = 159:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str614, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !886 ; [debug line = 160:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str715, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !887 ; [debug line = 161:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !888), !dbg !889 ; [debug line = 162:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !890), !dbg !891 ; [debug line = 162:17] [debug variable = W]
  call void @llvm.dbg.declare(metadata !{i64* %t0}, metadata !892), !dbg !893 ; [debug line = 162:24] [debug variable = t0]
  call void @llvm.dbg.declare(metadata !{i64* %t1}, metadata !894), !dbg !895 ; [debug line = 162:28] [debug variable = t1]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !896), !dbg !897 ; [debug line = 163:9] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !898        ; [debug line = 166:10]
  br label %4, !dbg !898                          ; [debug line = 166:10]

; <label>:4                                       ; preds = %17, %0
  %5 = load i32* %i, align 4, !dbg !898           ; [#uses=1 type=i32] [debug line = 166:10]
  %6 = icmp slt i32 %5, 8, !dbg !898              ; [#uses=1 type=i1] [debug line = 166:10]
  br i1 %6, label %7, label %20, !dbg !898        ; [debug line = 166:10]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !900           ; [#uses=1 type=i32] [debug line = 167:9]
  %9 = sext i32 %8 to i64, !dbg !900              ; [#uses=1 type=i64] [debug line = 167:9]
  %10 = load %struct.sha512_context_** %1, align 8, !dbg !900 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 167:9]
  %11 = getelementptr inbounds %struct.sha512_context_* %10, i32 0, i32 1, !dbg !900 ; [#uses=1 type=[8 x i64]*] [debug line = 167:9]
  %12 = getelementptr inbounds [8 x i64]* %11, i32 0, i64 %9, !dbg !900 ; [#uses=1 type=i64*] [debug line = 167:9]
  %13 = load i64* %12, align 8, !dbg !900         ; [#uses=1 type=i64] [debug line = 167:9]
  %14 = load i32* %i, align 4, !dbg !900          ; [#uses=1 type=i32] [debug line = 167:9]
  %15 = sext i32 %14 to i64, !dbg !900            ; [#uses=1 type=i64] [debug line = 167:9]
  %16 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 %15, !dbg !900 ; [#uses=1 type=i64*] [debug line = 167:9]
  store i64 %13, i64* %16, align 8, !dbg !900     ; [debug line = 167:9]
  br label %17, !dbg !902                         ; [debug line = 168:5]

; <label>:17                                      ; preds = %7
  %18 = load i32* %i, align 4, !dbg !903          ; [#uses=1 type=i32] [debug line = 166:24]
  %19 = add nsw i32 %18, 1, !dbg !903             ; [#uses=1 type=i32] [debug line = 166:24]
  store i32 %19, i32* %i, align 4, !dbg !903      ; [debug line = 166:24]
  br label %4, !dbg !903                          ; [debug line = 166:24]

; <label>:20                                      ; preds = %4
  store i32 0, i32* %i, align 4, !dbg !904        ; [debug line = 171:10]
  br label %21, !dbg !904                         ; [debug line = 171:10]

; <label>:21                                      ; preds = %122, %20
  %22 = load i32* %i, align 4, !dbg !904          ; [#uses=1 type=i32] [debug line = 171:10]
  %23 = icmp slt i32 %22, 16, !dbg !904           ; [#uses=1 type=i1] [debug line = 171:10]
  br i1 %23, label %24, label %125, !dbg !904     ; [debug line = 171:10]

; <label>:24                                      ; preds = %21
  %25 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %26 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %27 = mul nsw i32 8, %26, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %28 = sext i32 %27 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %29 = getelementptr inbounds i8* %25, i64 %28, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %30 = getelementptr inbounds i8* %29, i64 0, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %31 = load i8* %30, align 1, !dbg !906          ; [#uses=1 type=i8] [debug line = 172:11]
  %32 = zext i8 %31 to i32, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %33 = and i32 %32, 255, !dbg !906               ; [#uses=1 type=i32] [debug line = 172:11]
  %34 = sext i32 %33 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %35 = shl i64 %34, 56, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %36 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %37 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %38 = mul nsw i32 8, %37, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %39 = sext i32 %38 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %40 = getelementptr inbounds i8* %36, i64 %39, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %41 = getelementptr inbounds i8* %40, i64 1, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %42 = load i8* %41, align 1, !dbg !906          ; [#uses=1 type=i8] [debug line = 172:11]
  %43 = zext i8 %42 to i32, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %44 = and i32 %43, 255, !dbg !906               ; [#uses=1 type=i32] [debug line = 172:11]
  %45 = sext i32 %44 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %46 = shl i64 %45, 48, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %47 = or i64 %35, %46, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %48 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %49 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %50 = mul nsw i32 8, %49, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %51 = sext i32 %50 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %52 = getelementptr inbounds i8* %48, i64 %51, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %53 = getelementptr inbounds i8* %52, i64 2, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %54 = load i8* %53, align 1, !dbg !906          ; [#uses=1 type=i8] [debug line = 172:11]
  %55 = zext i8 %54 to i32, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %56 = and i32 %55, 255, !dbg !906               ; [#uses=1 type=i32] [debug line = 172:11]
  %57 = sext i32 %56 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %58 = shl i64 %57, 40, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %59 = or i64 %47, %58, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %60 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %61 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %62 = mul nsw i32 8, %61, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %63 = sext i32 %62 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %64 = getelementptr inbounds i8* %60, i64 %63, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %65 = getelementptr inbounds i8* %64, i64 3, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %66 = load i8* %65, align 1, !dbg !906          ; [#uses=1 type=i8] [debug line = 172:11]
  %67 = zext i8 %66 to i32, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %68 = and i32 %67, 255, !dbg !906               ; [#uses=1 type=i32] [debug line = 172:11]
  %69 = sext i32 %68 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %70 = shl i64 %69, 32, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %71 = or i64 %59, %70, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %72 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %73 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %74 = mul nsw i32 8, %73, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %75 = sext i32 %74 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %76 = getelementptr inbounds i8* %72, i64 %75, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %77 = getelementptr inbounds i8* %76, i64 4, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %78 = load i8* %77, align 1, !dbg !906          ; [#uses=1 type=i8] [debug line = 172:11]
  %79 = zext i8 %78 to i32, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %80 = and i32 %79, 255, !dbg !906               ; [#uses=1 type=i32] [debug line = 172:11]
  %81 = sext i32 %80 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %82 = shl i64 %81, 24, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %83 = or i64 %71, %82, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %84 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %85 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %86 = mul nsw i32 8, %85, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %87 = sext i32 %86 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %88 = getelementptr inbounds i8* %84, i64 %87, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %89 = getelementptr inbounds i8* %88, i64 5, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %90 = load i8* %89, align 1, !dbg !906          ; [#uses=1 type=i8] [debug line = 172:11]
  %91 = zext i8 %90 to i32, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %92 = and i32 %91, 255, !dbg !906               ; [#uses=1 type=i32] [debug line = 172:11]
  %93 = sext i32 %92 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %94 = shl i64 %93, 16, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %95 = or i64 %83, %94, !dbg !906                ; [#uses=1 type=i64] [debug line = 172:11]
  %96 = load i8** %2, align 8, !dbg !906          ; [#uses=1 type=i8*] [debug line = 172:11]
  %97 = load i32* %i, align 4, !dbg !906          ; [#uses=1 type=i32] [debug line = 172:11]
  %98 = mul nsw i32 8, %97, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %99 = sext i32 %98 to i64, !dbg !906            ; [#uses=1 type=i64] [debug line = 172:11]
  %100 = getelementptr inbounds i8* %96, i64 %99, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %101 = getelementptr inbounds i8* %100, i64 6, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %102 = load i8* %101, align 1, !dbg !906        ; [#uses=1 type=i8] [debug line = 172:11]
  %103 = zext i8 %102 to i32, !dbg !906           ; [#uses=1 type=i32] [debug line = 172:11]
  %104 = and i32 %103, 255, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %105 = sext i32 %104 to i64, !dbg !906          ; [#uses=1 type=i64] [debug line = 172:11]
  %106 = shl i64 %105, 8, !dbg !906               ; [#uses=1 type=i64] [debug line = 172:11]
  %107 = or i64 %95, %106, !dbg !906              ; [#uses=1 type=i64] [debug line = 172:11]
  %108 = load i8** %2, align 8, !dbg !906         ; [#uses=1 type=i8*] [debug line = 172:11]
  %109 = load i32* %i, align 4, !dbg !906         ; [#uses=1 type=i32] [debug line = 172:11]
  %110 = mul nsw i32 8, %109, !dbg !906           ; [#uses=1 type=i32] [debug line = 172:11]
  %111 = sext i32 %110 to i64, !dbg !906          ; [#uses=1 type=i64] [debug line = 172:11]
  %112 = getelementptr inbounds i8* %108, i64 %111, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %113 = getelementptr inbounds i8* %112, i64 7, !dbg !906 ; [#uses=1 type=i8*] [debug line = 172:11]
  %114 = load i8* %113, align 1, !dbg !906        ; [#uses=1 type=i8] [debug line = 172:11]
  %115 = zext i8 %114 to i32, !dbg !906           ; [#uses=1 type=i32] [debug line = 172:11]
  %116 = and i32 %115, 255, !dbg !906             ; [#uses=1 type=i32] [debug line = 172:11]
  %117 = sext i32 %116 to i64, !dbg !906          ; [#uses=1 type=i64] [debug line = 172:11]
  %118 = or i64 %107, %117, !dbg !906             ; [#uses=1 type=i64] [debug line = 172:11]
  %119 = load i32* %i, align 4, !dbg !906         ; [#uses=1 type=i32] [debug line = 172:11]
  %120 = sext i32 %119 to i64, !dbg !906          ; [#uses=1 type=i64] [debug line = 172:11]
  %121 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %120, !dbg !906 ; [#uses=1 type=i64*] [debug line = 172:11]
  store i64 %118, i64* %121, align 8, !dbg !906   ; [debug line = 172:11]
  br label %122, !dbg !909                        ; [debug line = 173:5]

; <label>:122                                     ; preds = %24
  %123 = load i32* %i, align 4, !dbg !910         ; [#uses=1 type=i32] [debug line = 171:25]
  %124 = add nsw i32 %123, 1, !dbg !910           ; [#uses=1 type=i32] [debug line = 171:25]
  store i32 %124, i32* %i, align 4, !dbg !910     ; [debug line = 171:25]
  br label %21, !dbg !910                         ; [debug line = 171:25]

; <label>:125                                     ; preds = %21
  store i32 16, i32* %i, align 4, !dbg !911       ; [debug line = 176:10]
  br label %126, !dbg !911                        ; [debug line = 176:10]

; <label>:126                                     ; preds = %214, %125
  %127 = load i32* %i, align 4, !dbg !911         ; [#uses=1 type=i32] [debug line = 176:10]
  %128 = icmp slt i32 %127, 80, !dbg !911         ; [#uses=1 type=i1] [debug line = 176:10]
  br i1 %128, label %129, label %217, !dbg !911   ; [debug line = 176:10]

; <label>:129                                     ; preds = %126
  %130 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %131 = sub nsw i32 %130, 2, !dbg !913           ; [#uses=1 type=i32] [debug line = 177:9]
  %132 = sext i32 %131 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %133 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %132, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %134 = load i64* %133, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %135 = lshr i64 %134, 19, !dbg !913             ; [#uses=1 type=i64] [debug line = 177:9]
  %136 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %137 = sub nsw i32 %136, 2, !dbg !913           ; [#uses=1 type=i32] [debug line = 177:9]
  %138 = sext i32 %137 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %139 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %138, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %140 = load i64* %139, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %141 = shl i64 %140, 45, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %142 = or i64 %135, %141, !dbg !913             ; [#uses=1 type=i64] [debug line = 177:9]
  %143 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %144 = sub nsw i32 %143, 2, !dbg !913           ; [#uses=1 type=i32] [debug line = 177:9]
  %145 = sext i32 %144 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %146 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %145, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %147 = load i64* %146, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %148 = lshr i64 %147, 61, !dbg !913             ; [#uses=1 type=i64] [debug line = 177:9]
  %149 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %150 = sub nsw i32 %149, 2, !dbg !913           ; [#uses=1 type=i32] [debug line = 177:9]
  %151 = sext i32 %150 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %152 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %151, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %153 = load i64* %152, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %154 = shl i64 %153, 3, !dbg !913               ; [#uses=1 type=i64] [debug line = 177:9]
  %155 = or i64 %148, %154, !dbg !913             ; [#uses=1 type=i64] [debug line = 177:9]
  %156 = xor i64 %142, %155, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %157 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %158 = sub nsw i32 %157, 2, !dbg !913           ; [#uses=1 type=i32] [debug line = 177:9]
  %159 = sext i32 %158 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %160 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %159, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %161 = load i64* %160, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %162 = lshr i64 %161, 6, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %163 = xor i64 %156, %162, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %164 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %165 = sub nsw i32 %164, 7, !dbg !913           ; [#uses=1 type=i32] [debug line = 177:9]
  %166 = sext i32 %165 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %167 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %166, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %168 = load i64* %167, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %169 = add i64 %163, %168, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %170 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %171 = sub nsw i32 %170, 15, !dbg !913          ; [#uses=1 type=i32] [debug line = 177:9]
  %172 = sext i32 %171 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %173 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %172, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %174 = load i64* %173, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %175 = lshr i64 %174, 1, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %176 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %177 = sub nsw i32 %176, 15, !dbg !913          ; [#uses=1 type=i32] [debug line = 177:9]
  %178 = sext i32 %177 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %179 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %178, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %180 = load i64* %179, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %181 = shl i64 %180, 63, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %182 = or i64 %175, %181, !dbg !913             ; [#uses=1 type=i64] [debug line = 177:9]
  %183 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %184 = sub nsw i32 %183, 15, !dbg !913          ; [#uses=1 type=i32] [debug line = 177:9]
  %185 = sext i32 %184 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %186 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %185, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %187 = load i64* %186, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %188 = lshr i64 %187, 8, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %189 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %190 = sub nsw i32 %189, 15, !dbg !913          ; [#uses=1 type=i32] [debug line = 177:9]
  %191 = sext i32 %190 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %192 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %191, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %193 = load i64* %192, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %194 = shl i64 %193, 56, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %195 = or i64 %188, %194, !dbg !913             ; [#uses=1 type=i64] [debug line = 177:9]
  %196 = xor i64 %182, %195, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %197 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %198 = sub nsw i32 %197, 15, !dbg !913          ; [#uses=1 type=i32] [debug line = 177:9]
  %199 = sext i32 %198 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %200 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %199, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %201 = load i64* %200, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %202 = lshr i64 %201, 7, !dbg !913              ; [#uses=1 type=i64] [debug line = 177:9]
  %203 = xor i64 %196, %202, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %204 = add i64 %169, %203, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %205 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %206 = sub nsw i32 %205, 16, !dbg !913          ; [#uses=1 type=i32] [debug line = 177:9]
  %207 = sext i32 %206 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %208 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %207, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  %209 = load i64* %208, align 8, !dbg !913       ; [#uses=1 type=i64] [debug line = 177:9]
  %210 = add i64 %204, %209, !dbg !913            ; [#uses=1 type=i64] [debug line = 177:9]
  %211 = load i32* %i, align 4, !dbg !913         ; [#uses=1 type=i32] [debug line = 177:9]
  %212 = sext i32 %211 to i64, !dbg !913          ; [#uses=1 type=i64] [debug line = 177:9]
  %213 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %212, !dbg !913 ; [#uses=1 type=i64*] [debug line = 177:9]
  store i64 %210, i64* %213, align 8, !dbg !913   ; [debug line = 177:9]
  br label %214, !dbg !915                        ; [debug line = 178:5]

; <label>:214                                     ; preds = %129
  %215 = load i32* %i, align 4, !dbg !916         ; [#uses=1 type=i32] [debug line = 176:26]
  %216 = add nsw i32 %215, 1, !dbg !916           ; [#uses=1 type=i32] [debug line = 176:26]
  store i32 %216, i32* %i, align 4, !dbg !916     ; [debug line = 176:26]
  br label %126, !dbg !916                        ; [debug line = 176:26]

; <label>:217                                     ; preds = %126
  store i32 0, i32* %i, align 4, !dbg !917        ; [debug line = 187:10]
  br label %218, !dbg !917                        ; [debug line = 187:10]

; <label>:218                                     ; preds = %990, %217
  %219 = load i32* %i, align 4, !dbg !917         ; [#uses=1 type=i32] [debug line = 187:10]
  %220 = icmp slt i32 %219, 80, !dbg !917         ; [#uses=1 type=i1] [debug line = 187:10]
  br i1 %220, label %221, label %993, !dbg !917   ; [debug line = 187:10]

; <label>:221                                     ; preds = %218
  %222 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %223 = load i64* %222, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %224 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %225 = load i64* %224, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %226 = lshr i64 %225, 14, !dbg !919             ; [#uses=1 type=i64] [debug line = 188:8]
  %227 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %228 = load i64* %227, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %229 = shl i64 %228, 50, !dbg !919              ; [#uses=1 type=i64] [debug line = 188:8]
  %230 = or i64 %226, %229, !dbg !919             ; [#uses=1 type=i64] [debug line = 188:8]
  %231 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %232 = load i64* %231, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %233 = lshr i64 %232, 18, !dbg !919             ; [#uses=1 type=i64] [debug line = 188:8]
  %234 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %235 = load i64* %234, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %236 = shl i64 %235, 46, !dbg !919              ; [#uses=1 type=i64] [debug line = 188:8]
  %237 = or i64 %233, %236, !dbg !919             ; [#uses=1 type=i64] [debug line = 188:8]
  %238 = xor i64 %230, %237, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %239 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %240 = load i64* %239, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %241 = lshr i64 %240, 41, !dbg !919             ; [#uses=1 type=i64] [debug line = 188:8]
  %242 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %243 = load i64* %242, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %244 = shl i64 %243, 23, !dbg !919              ; [#uses=1 type=i64] [debug line = 188:8]
  %245 = or i64 %241, %244, !dbg !919             ; [#uses=1 type=i64] [debug line = 188:8]
  %246 = xor i64 %238, %245, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %247 = add i64 %223, %246, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %248 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %249 = load i64* %248, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %250 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %251 = load i64* %250, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %252 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %253 = load i64* %252, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %254 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %255 = load i64* %254, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %256 = xor i64 %253, %255, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %257 = and i64 %251, %256, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %258 = xor i64 %249, %257, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %259 = add i64 %247, %258, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %260 = load i32* %i, align 4, !dbg !919         ; [#uses=1 type=i32] [debug line = 188:8]
  %261 = add nsw i32 %260, 0, !dbg !919           ; [#uses=1 type=i32] [debug line = 188:8]
  %262 = sext i32 %261 to i64, !dbg !919          ; [#uses=1 type=i64] [debug line = 188:8]
  %263 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %262, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %264 = load i64* %263, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %265 = add i64 %259, %264, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  %266 = load i32* %i, align 4, !dbg !919         ; [#uses=1 type=i32] [debug line = 188:8]
  %267 = add nsw i32 %266, 0, !dbg !919           ; [#uses=1 type=i32] [debug line = 188:8]
  %268 = sext i32 %267 to i64, !dbg !919          ; [#uses=1 type=i64] [debug line = 188:8]
  %269 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %268, !dbg !919 ; [#uses=1 type=i64*] [debug line = 188:8]
  %270 = load i64* %269, align 8, !dbg !919       ; [#uses=1 type=i64] [debug line = 188:8]
  %271 = add i64 %265, %270, !dbg !919            ; [#uses=1 type=i64] [debug line = 188:8]
  store i64 %271, i64* %t0, align 8, !dbg !919    ; [debug line = 188:8]
  %272 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %273 = load i64* %272, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %274 = lshr i64 %273, 28, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %275 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %276 = load i64* %275, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %277 = shl i64 %276, 36, !dbg !921              ; [#uses=1 type=i64] [debug line = 188:0]
  %278 = or i64 %274, %277, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %279 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %280 = load i64* %279, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %281 = lshr i64 %280, 34, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %282 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %283 = load i64* %282, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %284 = shl i64 %283, 30, !dbg !921              ; [#uses=1 type=i64] [debug line = 188:0]
  %285 = or i64 %281, %284, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %286 = xor i64 %278, %285, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  %287 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %288 = load i64* %287, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %289 = lshr i64 %288, 39, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %290 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %291 = load i64* %290, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %292 = shl i64 %291, 25, !dbg !921              ; [#uses=1 type=i64] [debug line = 188:0]
  %293 = or i64 %289, %292, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %294 = xor i64 %286, %293, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  %295 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %296 = load i64* %295, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %297 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %298 = load i64* %297, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %299 = or i64 %296, %298, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %300 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %301 = load i64* %300, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %302 = and i64 %299, %301, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  %303 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %304 = load i64* %303, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %305 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  %306 = load i64* %305, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %307 = and i64 %304, %306, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  %308 = or i64 %302, %307, !dbg !921             ; [#uses=1 type=i64] [debug line = 188:0]
  %309 = add i64 %294, %308, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  store i64 %309, i64* %t1, align 8, !dbg !921    ; [debug line = 188:0]
  %310 = load i64* %t0, align 8, !dbg !921        ; [#uses=1 type=i64] [debug line = 188:0]
  %311 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !921 ; [#uses=2 type=i64*] [debug line = 188:0]
  %312 = load i64* %311, align 8, !dbg !921       ; [#uses=1 type=i64] [debug line = 188:0]
  %313 = add i64 %312, %310, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  store i64 %313, i64* %311, align 8, !dbg !921   ; [debug line = 188:0]
  %314 = load i64* %t0, align 8, !dbg !921        ; [#uses=1 type=i64] [debug line = 188:0]
  %315 = load i64* %t1, align 8, !dbg !921        ; [#uses=1 type=i64] [debug line = 188:0]
  %316 = add i64 %314, %315, !dbg !921            ; [#uses=1 type=i64] [debug line = 188:0]
  %317 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !921 ; [#uses=1 type=i64*] [debug line = 188:0]
  store i64 %316, i64* %317, align 8, !dbg !921   ; [debug line = 188:0]
  %318 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %319 = load i64* %318, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %320 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %321 = load i64* %320, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %322 = lshr i64 %321, 14, !dbg !922             ; [#uses=1 type=i64] [debug line = 189:8]
  %323 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %324 = load i64* %323, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %325 = shl i64 %324, 50, !dbg !922              ; [#uses=1 type=i64] [debug line = 189:8]
  %326 = or i64 %322, %325, !dbg !922             ; [#uses=1 type=i64] [debug line = 189:8]
  %327 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %328 = load i64* %327, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %329 = lshr i64 %328, 18, !dbg !922             ; [#uses=1 type=i64] [debug line = 189:8]
  %330 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %331 = load i64* %330, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %332 = shl i64 %331, 46, !dbg !922              ; [#uses=1 type=i64] [debug line = 189:8]
  %333 = or i64 %329, %332, !dbg !922             ; [#uses=1 type=i64] [debug line = 189:8]
  %334 = xor i64 %326, %333, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %335 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %336 = load i64* %335, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %337 = lshr i64 %336, 41, !dbg !922             ; [#uses=1 type=i64] [debug line = 189:8]
  %338 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %339 = load i64* %338, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %340 = shl i64 %339, 23, !dbg !922              ; [#uses=1 type=i64] [debug line = 189:8]
  %341 = or i64 %337, %340, !dbg !922             ; [#uses=1 type=i64] [debug line = 189:8]
  %342 = xor i64 %334, %341, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %343 = add i64 %319, %342, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %344 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %345 = load i64* %344, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %346 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %347 = load i64* %346, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %348 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %349 = load i64* %348, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %350 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %351 = load i64* %350, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %352 = xor i64 %349, %351, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %353 = and i64 %347, %352, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %354 = xor i64 %345, %353, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %355 = add i64 %343, %354, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %356 = load i32* %i, align 4, !dbg !922         ; [#uses=1 type=i32] [debug line = 189:8]
  %357 = add nsw i32 %356, 1, !dbg !922           ; [#uses=1 type=i32] [debug line = 189:8]
  %358 = sext i32 %357 to i64, !dbg !922          ; [#uses=1 type=i64] [debug line = 189:8]
  %359 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %358, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %360 = load i64* %359, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %361 = add i64 %355, %360, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  %362 = load i32* %i, align 4, !dbg !922         ; [#uses=1 type=i32] [debug line = 189:8]
  %363 = add nsw i32 %362, 1, !dbg !922           ; [#uses=1 type=i32] [debug line = 189:8]
  %364 = sext i32 %363 to i64, !dbg !922          ; [#uses=1 type=i64] [debug line = 189:8]
  %365 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %364, !dbg !922 ; [#uses=1 type=i64*] [debug line = 189:8]
  %366 = load i64* %365, align 8, !dbg !922       ; [#uses=1 type=i64] [debug line = 189:8]
  %367 = add i64 %361, %366, !dbg !922            ; [#uses=1 type=i64] [debug line = 189:8]
  store i64 %367, i64* %t0, align 8, !dbg !922    ; [debug line = 189:8]
  %368 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %369 = load i64* %368, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %370 = lshr i64 %369, 28, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %371 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %372 = load i64* %371, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %373 = shl i64 %372, 36, !dbg !923              ; [#uses=1 type=i64] [debug line = 189:0]
  %374 = or i64 %370, %373, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %375 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %376 = load i64* %375, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %377 = lshr i64 %376, 34, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %378 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %379 = load i64* %378, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %380 = shl i64 %379, 30, !dbg !923              ; [#uses=1 type=i64] [debug line = 189:0]
  %381 = or i64 %377, %380, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %382 = xor i64 %374, %381, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  %383 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %384 = load i64* %383, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %385 = lshr i64 %384, 39, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %386 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %387 = load i64* %386, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %388 = shl i64 %387, 25, !dbg !923              ; [#uses=1 type=i64] [debug line = 189:0]
  %389 = or i64 %385, %388, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %390 = xor i64 %382, %389, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  %391 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %392 = load i64* %391, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %393 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %394 = load i64* %393, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %395 = or i64 %392, %394, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %396 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %397 = load i64* %396, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %398 = and i64 %395, %397, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  %399 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %400 = load i64* %399, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %401 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  %402 = load i64* %401, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %403 = and i64 %400, %402, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  %404 = or i64 %398, %403, !dbg !923             ; [#uses=1 type=i64] [debug line = 189:0]
  %405 = add i64 %390, %404, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  store i64 %405, i64* %t1, align 8, !dbg !923    ; [debug line = 189:0]
  %406 = load i64* %t0, align 8, !dbg !923        ; [#uses=1 type=i64] [debug line = 189:0]
  %407 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !923 ; [#uses=2 type=i64*] [debug line = 189:0]
  %408 = load i64* %407, align 8, !dbg !923       ; [#uses=1 type=i64] [debug line = 189:0]
  %409 = add i64 %408, %406, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  store i64 %409, i64* %407, align 8, !dbg !923   ; [debug line = 189:0]
  %410 = load i64* %t0, align 8, !dbg !923        ; [#uses=1 type=i64] [debug line = 189:0]
  %411 = load i64* %t1, align 8, !dbg !923        ; [#uses=1 type=i64] [debug line = 189:0]
  %412 = add i64 %410, %411, !dbg !923            ; [#uses=1 type=i64] [debug line = 189:0]
  %413 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !923 ; [#uses=1 type=i64*] [debug line = 189:0]
  store i64 %412, i64* %413, align 8, !dbg !923   ; [debug line = 189:0]
  %414 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %415 = load i64* %414, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %416 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %417 = load i64* %416, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %418 = lshr i64 %417, 14, !dbg !924             ; [#uses=1 type=i64] [debug line = 190:8]
  %419 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %420 = load i64* %419, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %421 = shl i64 %420, 50, !dbg !924              ; [#uses=1 type=i64] [debug line = 190:8]
  %422 = or i64 %418, %421, !dbg !924             ; [#uses=1 type=i64] [debug line = 190:8]
  %423 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %424 = load i64* %423, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %425 = lshr i64 %424, 18, !dbg !924             ; [#uses=1 type=i64] [debug line = 190:8]
  %426 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %427 = load i64* %426, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %428 = shl i64 %427, 46, !dbg !924              ; [#uses=1 type=i64] [debug line = 190:8]
  %429 = or i64 %425, %428, !dbg !924             ; [#uses=1 type=i64] [debug line = 190:8]
  %430 = xor i64 %422, %429, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %431 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %432 = load i64* %431, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %433 = lshr i64 %432, 41, !dbg !924             ; [#uses=1 type=i64] [debug line = 190:8]
  %434 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %435 = load i64* %434, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %436 = shl i64 %435, 23, !dbg !924              ; [#uses=1 type=i64] [debug line = 190:8]
  %437 = or i64 %433, %436, !dbg !924             ; [#uses=1 type=i64] [debug line = 190:8]
  %438 = xor i64 %430, %437, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %439 = add i64 %415, %438, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %440 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %441 = load i64* %440, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %442 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %443 = load i64* %442, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %444 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %445 = load i64* %444, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %446 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %447 = load i64* %446, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %448 = xor i64 %445, %447, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %449 = and i64 %443, %448, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %450 = xor i64 %441, %449, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %451 = add i64 %439, %450, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %452 = load i32* %i, align 4, !dbg !924         ; [#uses=1 type=i32] [debug line = 190:8]
  %453 = add nsw i32 %452, 2, !dbg !924           ; [#uses=1 type=i32] [debug line = 190:8]
  %454 = sext i32 %453 to i64, !dbg !924          ; [#uses=1 type=i64] [debug line = 190:8]
  %455 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %454, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %456 = load i64* %455, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %457 = add i64 %451, %456, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  %458 = load i32* %i, align 4, !dbg !924         ; [#uses=1 type=i32] [debug line = 190:8]
  %459 = add nsw i32 %458, 2, !dbg !924           ; [#uses=1 type=i32] [debug line = 190:8]
  %460 = sext i32 %459 to i64, !dbg !924          ; [#uses=1 type=i64] [debug line = 190:8]
  %461 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %460, !dbg !924 ; [#uses=1 type=i64*] [debug line = 190:8]
  %462 = load i64* %461, align 8, !dbg !924       ; [#uses=1 type=i64] [debug line = 190:8]
  %463 = add i64 %457, %462, !dbg !924            ; [#uses=1 type=i64] [debug line = 190:8]
  store i64 %463, i64* %t0, align 8, !dbg !924    ; [debug line = 190:8]
  %464 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %465 = load i64* %464, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %466 = lshr i64 %465, 28, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %467 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %468 = load i64* %467, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %469 = shl i64 %468, 36, !dbg !925              ; [#uses=1 type=i64] [debug line = 190:0]
  %470 = or i64 %466, %469, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %471 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %472 = load i64* %471, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %473 = lshr i64 %472, 34, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %474 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %475 = load i64* %474, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %476 = shl i64 %475, 30, !dbg !925              ; [#uses=1 type=i64] [debug line = 190:0]
  %477 = or i64 %473, %476, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %478 = xor i64 %470, %477, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  %479 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %480 = load i64* %479, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %481 = lshr i64 %480, 39, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %482 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %483 = load i64* %482, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %484 = shl i64 %483, 25, !dbg !925              ; [#uses=1 type=i64] [debug line = 190:0]
  %485 = or i64 %481, %484, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %486 = xor i64 %478, %485, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  %487 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %488 = load i64* %487, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %489 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %490 = load i64* %489, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %491 = or i64 %488, %490, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %492 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %493 = load i64* %492, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %494 = and i64 %491, %493, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  %495 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %496 = load i64* %495, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %497 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  %498 = load i64* %497, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %499 = and i64 %496, %498, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  %500 = or i64 %494, %499, !dbg !925             ; [#uses=1 type=i64] [debug line = 190:0]
  %501 = add i64 %486, %500, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  store i64 %501, i64* %t1, align 8, !dbg !925    ; [debug line = 190:0]
  %502 = load i64* %t0, align 8, !dbg !925        ; [#uses=1 type=i64] [debug line = 190:0]
  %503 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !925 ; [#uses=2 type=i64*] [debug line = 190:0]
  %504 = load i64* %503, align 8, !dbg !925       ; [#uses=1 type=i64] [debug line = 190:0]
  %505 = add i64 %504, %502, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  store i64 %505, i64* %503, align 8, !dbg !925   ; [debug line = 190:0]
  %506 = load i64* %t0, align 8, !dbg !925        ; [#uses=1 type=i64] [debug line = 190:0]
  %507 = load i64* %t1, align 8, !dbg !925        ; [#uses=1 type=i64] [debug line = 190:0]
  %508 = add i64 %506, %507, !dbg !925            ; [#uses=1 type=i64] [debug line = 190:0]
  %509 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !925 ; [#uses=1 type=i64*] [debug line = 190:0]
  store i64 %508, i64* %509, align 8, !dbg !925   ; [debug line = 190:0]
  %510 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %511 = load i64* %510, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %512 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %513 = load i64* %512, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %514 = lshr i64 %513, 14, !dbg !926             ; [#uses=1 type=i64] [debug line = 191:8]
  %515 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %516 = load i64* %515, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %517 = shl i64 %516, 50, !dbg !926              ; [#uses=1 type=i64] [debug line = 191:8]
  %518 = or i64 %514, %517, !dbg !926             ; [#uses=1 type=i64] [debug line = 191:8]
  %519 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %520 = load i64* %519, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %521 = lshr i64 %520, 18, !dbg !926             ; [#uses=1 type=i64] [debug line = 191:8]
  %522 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %523 = load i64* %522, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %524 = shl i64 %523, 46, !dbg !926              ; [#uses=1 type=i64] [debug line = 191:8]
  %525 = or i64 %521, %524, !dbg !926             ; [#uses=1 type=i64] [debug line = 191:8]
  %526 = xor i64 %518, %525, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %527 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %528 = load i64* %527, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %529 = lshr i64 %528, 41, !dbg !926             ; [#uses=1 type=i64] [debug line = 191:8]
  %530 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %531 = load i64* %530, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %532 = shl i64 %531, 23, !dbg !926              ; [#uses=1 type=i64] [debug line = 191:8]
  %533 = or i64 %529, %532, !dbg !926             ; [#uses=1 type=i64] [debug line = 191:8]
  %534 = xor i64 %526, %533, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %535 = add i64 %511, %534, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %536 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %537 = load i64* %536, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %538 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %539 = load i64* %538, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %540 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %541 = load i64* %540, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %542 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %543 = load i64* %542, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %544 = xor i64 %541, %543, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %545 = and i64 %539, %544, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %546 = xor i64 %537, %545, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %547 = add i64 %535, %546, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %548 = load i32* %i, align 4, !dbg !926         ; [#uses=1 type=i32] [debug line = 191:8]
  %549 = add nsw i32 %548, 3, !dbg !926           ; [#uses=1 type=i32] [debug line = 191:8]
  %550 = sext i32 %549 to i64, !dbg !926          ; [#uses=1 type=i64] [debug line = 191:8]
  %551 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %550, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %552 = load i64* %551, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %553 = add i64 %547, %552, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  %554 = load i32* %i, align 4, !dbg !926         ; [#uses=1 type=i32] [debug line = 191:8]
  %555 = add nsw i32 %554, 3, !dbg !926           ; [#uses=1 type=i32] [debug line = 191:8]
  %556 = sext i32 %555 to i64, !dbg !926          ; [#uses=1 type=i64] [debug line = 191:8]
  %557 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %556, !dbg !926 ; [#uses=1 type=i64*] [debug line = 191:8]
  %558 = load i64* %557, align 8, !dbg !926       ; [#uses=1 type=i64] [debug line = 191:8]
  %559 = add i64 %553, %558, !dbg !926            ; [#uses=1 type=i64] [debug line = 191:8]
  store i64 %559, i64* %t0, align 8, !dbg !926    ; [debug line = 191:8]
  %560 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %561 = load i64* %560, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %562 = lshr i64 %561, 28, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %563 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %564 = load i64* %563, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %565 = shl i64 %564, 36, !dbg !927              ; [#uses=1 type=i64] [debug line = 191:0]
  %566 = or i64 %562, %565, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %567 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %568 = load i64* %567, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %569 = lshr i64 %568, 34, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %570 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %571 = load i64* %570, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %572 = shl i64 %571, 30, !dbg !927              ; [#uses=1 type=i64] [debug line = 191:0]
  %573 = or i64 %569, %572, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %574 = xor i64 %566, %573, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  %575 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %576 = load i64* %575, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %577 = lshr i64 %576, 39, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %578 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %579 = load i64* %578, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %580 = shl i64 %579, 25, !dbg !927              ; [#uses=1 type=i64] [debug line = 191:0]
  %581 = or i64 %577, %580, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %582 = xor i64 %574, %581, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  %583 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %584 = load i64* %583, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %585 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %586 = load i64* %585, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %587 = or i64 %584, %586, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %588 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %589 = load i64* %588, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %590 = and i64 %587, %589, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  %591 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %592 = load i64* %591, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %593 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  %594 = load i64* %593, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %595 = and i64 %592, %594, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  %596 = or i64 %590, %595, !dbg !927             ; [#uses=1 type=i64] [debug line = 191:0]
  %597 = add i64 %582, %596, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  store i64 %597, i64* %t1, align 8, !dbg !927    ; [debug line = 191:0]
  %598 = load i64* %t0, align 8, !dbg !927        ; [#uses=1 type=i64] [debug line = 191:0]
  %599 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !927 ; [#uses=2 type=i64*] [debug line = 191:0]
  %600 = load i64* %599, align 8, !dbg !927       ; [#uses=1 type=i64] [debug line = 191:0]
  %601 = add i64 %600, %598, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  store i64 %601, i64* %599, align 8, !dbg !927   ; [debug line = 191:0]
  %602 = load i64* %t0, align 8, !dbg !927        ; [#uses=1 type=i64] [debug line = 191:0]
  %603 = load i64* %t1, align 8, !dbg !927        ; [#uses=1 type=i64] [debug line = 191:0]
  %604 = add i64 %602, %603, !dbg !927            ; [#uses=1 type=i64] [debug line = 191:0]
  %605 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !927 ; [#uses=1 type=i64*] [debug line = 191:0]
  store i64 %604, i64* %605, align 8, !dbg !927   ; [debug line = 191:0]
  %606 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %607 = load i64* %606, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %608 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %609 = load i64* %608, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %610 = lshr i64 %609, 14, !dbg !928             ; [#uses=1 type=i64] [debug line = 192:8]
  %611 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %612 = load i64* %611, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %613 = shl i64 %612, 50, !dbg !928              ; [#uses=1 type=i64] [debug line = 192:8]
  %614 = or i64 %610, %613, !dbg !928             ; [#uses=1 type=i64] [debug line = 192:8]
  %615 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %616 = load i64* %615, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %617 = lshr i64 %616, 18, !dbg !928             ; [#uses=1 type=i64] [debug line = 192:8]
  %618 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %619 = load i64* %618, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %620 = shl i64 %619, 46, !dbg !928              ; [#uses=1 type=i64] [debug line = 192:8]
  %621 = or i64 %617, %620, !dbg !928             ; [#uses=1 type=i64] [debug line = 192:8]
  %622 = xor i64 %614, %621, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %623 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %624 = load i64* %623, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %625 = lshr i64 %624, 41, !dbg !928             ; [#uses=1 type=i64] [debug line = 192:8]
  %626 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %627 = load i64* %626, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %628 = shl i64 %627, 23, !dbg !928              ; [#uses=1 type=i64] [debug line = 192:8]
  %629 = or i64 %625, %628, !dbg !928             ; [#uses=1 type=i64] [debug line = 192:8]
  %630 = xor i64 %622, %629, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %631 = add i64 %607, %630, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %632 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %633 = load i64* %632, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %634 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %635 = load i64* %634, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %636 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %637 = load i64* %636, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %638 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %639 = load i64* %638, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %640 = xor i64 %637, %639, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %641 = and i64 %635, %640, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %642 = xor i64 %633, %641, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %643 = add i64 %631, %642, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %644 = load i32* %i, align 4, !dbg !928         ; [#uses=1 type=i32] [debug line = 192:8]
  %645 = add nsw i32 %644, 4, !dbg !928           ; [#uses=1 type=i32] [debug line = 192:8]
  %646 = sext i32 %645 to i64, !dbg !928          ; [#uses=1 type=i64] [debug line = 192:8]
  %647 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %646, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %648 = load i64* %647, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %649 = add i64 %643, %648, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  %650 = load i32* %i, align 4, !dbg !928         ; [#uses=1 type=i32] [debug line = 192:8]
  %651 = add nsw i32 %650, 4, !dbg !928           ; [#uses=1 type=i32] [debug line = 192:8]
  %652 = sext i32 %651 to i64, !dbg !928          ; [#uses=1 type=i64] [debug line = 192:8]
  %653 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %652, !dbg !928 ; [#uses=1 type=i64*] [debug line = 192:8]
  %654 = load i64* %653, align 8, !dbg !928       ; [#uses=1 type=i64] [debug line = 192:8]
  %655 = add i64 %649, %654, !dbg !928            ; [#uses=1 type=i64] [debug line = 192:8]
  store i64 %655, i64* %t0, align 8, !dbg !928    ; [debug line = 192:8]
  %656 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %657 = load i64* %656, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %658 = lshr i64 %657, 28, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %659 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %660 = load i64* %659, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %661 = shl i64 %660, 36, !dbg !929              ; [#uses=1 type=i64] [debug line = 192:0]
  %662 = or i64 %658, %661, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %663 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %664 = load i64* %663, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %665 = lshr i64 %664, 34, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %666 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %667 = load i64* %666, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %668 = shl i64 %667, 30, !dbg !929              ; [#uses=1 type=i64] [debug line = 192:0]
  %669 = or i64 %665, %668, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %670 = xor i64 %662, %669, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  %671 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %672 = load i64* %671, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %673 = lshr i64 %672, 39, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %674 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %675 = load i64* %674, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %676 = shl i64 %675, 25, !dbg !929              ; [#uses=1 type=i64] [debug line = 192:0]
  %677 = or i64 %673, %676, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %678 = xor i64 %670, %677, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  %679 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %680 = load i64* %679, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %681 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %682 = load i64* %681, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %683 = or i64 %680, %682, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %684 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %685 = load i64* %684, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %686 = and i64 %683, %685, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  %687 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %688 = load i64* %687, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %689 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  %690 = load i64* %689, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %691 = and i64 %688, %690, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  %692 = or i64 %686, %691, !dbg !929             ; [#uses=1 type=i64] [debug line = 192:0]
  %693 = add i64 %678, %692, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  store i64 %693, i64* %t1, align 8, !dbg !929    ; [debug line = 192:0]
  %694 = load i64* %t0, align 8, !dbg !929        ; [#uses=1 type=i64] [debug line = 192:0]
  %695 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !929 ; [#uses=2 type=i64*] [debug line = 192:0]
  %696 = load i64* %695, align 8, !dbg !929       ; [#uses=1 type=i64] [debug line = 192:0]
  %697 = add i64 %696, %694, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  store i64 %697, i64* %695, align 8, !dbg !929   ; [debug line = 192:0]
  %698 = load i64* %t0, align 8, !dbg !929        ; [#uses=1 type=i64] [debug line = 192:0]
  %699 = load i64* %t1, align 8, !dbg !929        ; [#uses=1 type=i64] [debug line = 192:0]
  %700 = add i64 %698, %699, !dbg !929            ; [#uses=1 type=i64] [debug line = 192:0]
  %701 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !929 ; [#uses=1 type=i64*] [debug line = 192:0]
  store i64 %700, i64* %701, align 8, !dbg !929   ; [debug line = 192:0]
  %702 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %703 = load i64* %702, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %704 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %705 = load i64* %704, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %706 = lshr i64 %705, 14, !dbg !930             ; [#uses=1 type=i64] [debug line = 193:8]
  %707 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %708 = load i64* %707, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %709 = shl i64 %708, 50, !dbg !930              ; [#uses=1 type=i64] [debug line = 193:8]
  %710 = or i64 %706, %709, !dbg !930             ; [#uses=1 type=i64] [debug line = 193:8]
  %711 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %712 = load i64* %711, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %713 = lshr i64 %712, 18, !dbg !930             ; [#uses=1 type=i64] [debug line = 193:8]
  %714 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %715 = load i64* %714, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %716 = shl i64 %715, 46, !dbg !930              ; [#uses=1 type=i64] [debug line = 193:8]
  %717 = or i64 %713, %716, !dbg !930             ; [#uses=1 type=i64] [debug line = 193:8]
  %718 = xor i64 %710, %717, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %719 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %720 = load i64* %719, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %721 = lshr i64 %720, 41, !dbg !930             ; [#uses=1 type=i64] [debug line = 193:8]
  %722 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %723 = load i64* %722, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %724 = shl i64 %723, 23, !dbg !930              ; [#uses=1 type=i64] [debug line = 193:8]
  %725 = or i64 %721, %724, !dbg !930             ; [#uses=1 type=i64] [debug line = 193:8]
  %726 = xor i64 %718, %725, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %727 = add i64 %703, %726, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %728 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %729 = load i64* %728, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %730 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %731 = load i64* %730, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %732 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %733 = load i64* %732, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %734 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %735 = load i64* %734, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %736 = xor i64 %733, %735, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %737 = and i64 %731, %736, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %738 = xor i64 %729, %737, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %739 = add i64 %727, %738, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %740 = load i32* %i, align 4, !dbg !930         ; [#uses=1 type=i32] [debug line = 193:8]
  %741 = add nsw i32 %740, 5, !dbg !930           ; [#uses=1 type=i32] [debug line = 193:8]
  %742 = sext i32 %741 to i64, !dbg !930          ; [#uses=1 type=i64] [debug line = 193:8]
  %743 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %742, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %744 = load i64* %743, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %745 = add i64 %739, %744, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  %746 = load i32* %i, align 4, !dbg !930         ; [#uses=1 type=i32] [debug line = 193:8]
  %747 = add nsw i32 %746, 5, !dbg !930           ; [#uses=1 type=i32] [debug line = 193:8]
  %748 = sext i32 %747 to i64, !dbg !930          ; [#uses=1 type=i64] [debug line = 193:8]
  %749 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %748, !dbg !930 ; [#uses=1 type=i64*] [debug line = 193:8]
  %750 = load i64* %749, align 8, !dbg !930       ; [#uses=1 type=i64] [debug line = 193:8]
  %751 = add i64 %745, %750, !dbg !930            ; [#uses=1 type=i64] [debug line = 193:8]
  store i64 %751, i64* %t0, align 8, !dbg !930    ; [debug line = 193:8]
  %752 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %753 = load i64* %752, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %754 = lshr i64 %753, 28, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %755 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %756 = load i64* %755, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %757 = shl i64 %756, 36, !dbg !931              ; [#uses=1 type=i64] [debug line = 193:0]
  %758 = or i64 %754, %757, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %759 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %760 = load i64* %759, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %761 = lshr i64 %760, 34, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %762 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %763 = load i64* %762, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %764 = shl i64 %763, 30, !dbg !931              ; [#uses=1 type=i64] [debug line = 193:0]
  %765 = or i64 %761, %764, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %766 = xor i64 %758, %765, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  %767 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %768 = load i64* %767, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %769 = lshr i64 %768, 39, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %770 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %771 = load i64* %770, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %772 = shl i64 %771, 25, !dbg !931              ; [#uses=1 type=i64] [debug line = 193:0]
  %773 = or i64 %769, %772, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %774 = xor i64 %766, %773, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  %775 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %776 = load i64* %775, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %777 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %778 = load i64* %777, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %779 = or i64 %776, %778, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %780 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %781 = load i64* %780, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %782 = and i64 %779, %781, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  %783 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %784 = load i64* %783, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %785 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  %786 = load i64* %785, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %787 = and i64 %784, %786, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  %788 = or i64 %782, %787, !dbg !931             ; [#uses=1 type=i64] [debug line = 193:0]
  %789 = add i64 %774, %788, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  store i64 %789, i64* %t1, align 8, !dbg !931    ; [debug line = 193:0]
  %790 = load i64* %t0, align 8, !dbg !931        ; [#uses=1 type=i64] [debug line = 193:0]
  %791 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !931 ; [#uses=2 type=i64*] [debug line = 193:0]
  %792 = load i64* %791, align 8, !dbg !931       ; [#uses=1 type=i64] [debug line = 193:0]
  %793 = add i64 %792, %790, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  store i64 %793, i64* %791, align 8, !dbg !931   ; [debug line = 193:0]
  %794 = load i64* %t0, align 8, !dbg !931        ; [#uses=1 type=i64] [debug line = 193:0]
  %795 = load i64* %t1, align 8, !dbg !931        ; [#uses=1 type=i64] [debug line = 193:0]
  %796 = add i64 %794, %795, !dbg !931            ; [#uses=1 type=i64] [debug line = 193:0]
  %797 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !931 ; [#uses=1 type=i64*] [debug line = 193:0]
  store i64 %796, i64* %797, align 8, !dbg !931   ; [debug line = 193:0]
  %798 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %799 = load i64* %798, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %800 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %801 = load i64* %800, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %802 = lshr i64 %801, 14, !dbg !932             ; [#uses=1 type=i64] [debug line = 194:8]
  %803 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %804 = load i64* %803, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %805 = shl i64 %804, 50, !dbg !932              ; [#uses=1 type=i64] [debug line = 194:8]
  %806 = or i64 %802, %805, !dbg !932             ; [#uses=1 type=i64] [debug line = 194:8]
  %807 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %808 = load i64* %807, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %809 = lshr i64 %808, 18, !dbg !932             ; [#uses=1 type=i64] [debug line = 194:8]
  %810 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %811 = load i64* %810, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %812 = shl i64 %811, 46, !dbg !932              ; [#uses=1 type=i64] [debug line = 194:8]
  %813 = or i64 %809, %812, !dbg !932             ; [#uses=1 type=i64] [debug line = 194:8]
  %814 = xor i64 %806, %813, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %815 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %816 = load i64* %815, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %817 = lshr i64 %816, 41, !dbg !932             ; [#uses=1 type=i64] [debug line = 194:8]
  %818 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %819 = load i64* %818, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %820 = shl i64 %819, 23, !dbg !932              ; [#uses=1 type=i64] [debug line = 194:8]
  %821 = or i64 %817, %820, !dbg !932             ; [#uses=1 type=i64] [debug line = 194:8]
  %822 = xor i64 %814, %821, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %823 = add i64 %799, %822, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %824 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %825 = load i64* %824, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %826 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %827 = load i64* %826, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %828 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %829 = load i64* %828, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %830 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %831 = load i64* %830, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %832 = xor i64 %829, %831, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %833 = and i64 %827, %832, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %834 = xor i64 %825, %833, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %835 = add i64 %823, %834, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %836 = load i32* %i, align 4, !dbg !932         ; [#uses=1 type=i32] [debug line = 194:8]
  %837 = add nsw i32 %836, 6, !dbg !932           ; [#uses=1 type=i32] [debug line = 194:8]
  %838 = sext i32 %837 to i64, !dbg !932          ; [#uses=1 type=i64] [debug line = 194:8]
  %839 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %838, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %840 = load i64* %839, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %841 = add i64 %835, %840, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  %842 = load i32* %i, align 4, !dbg !932         ; [#uses=1 type=i32] [debug line = 194:8]
  %843 = add nsw i32 %842, 6, !dbg !932           ; [#uses=1 type=i32] [debug line = 194:8]
  %844 = sext i32 %843 to i64, !dbg !932          ; [#uses=1 type=i64] [debug line = 194:8]
  %845 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %844, !dbg !932 ; [#uses=1 type=i64*] [debug line = 194:8]
  %846 = load i64* %845, align 8, !dbg !932       ; [#uses=1 type=i64] [debug line = 194:8]
  %847 = add i64 %841, %846, !dbg !932            ; [#uses=1 type=i64] [debug line = 194:8]
  store i64 %847, i64* %t0, align 8, !dbg !932    ; [debug line = 194:8]
  %848 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %849 = load i64* %848, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %850 = lshr i64 %849, 28, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %851 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %852 = load i64* %851, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %853 = shl i64 %852, 36, !dbg !933              ; [#uses=1 type=i64] [debug line = 194:0]
  %854 = or i64 %850, %853, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %855 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %856 = load i64* %855, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %857 = lshr i64 %856, 34, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %858 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %859 = load i64* %858, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %860 = shl i64 %859, 30, !dbg !933              ; [#uses=1 type=i64] [debug line = 194:0]
  %861 = or i64 %857, %860, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %862 = xor i64 %854, %861, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  %863 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %864 = load i64* %863, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %865 = lshr i64 %864, 39, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %866 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %867 = load i64* %866, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %868 = shl i64 %867, 25, !dbg !933              ; [#uses=1 type=i64] [debug line = 194:0]
  %869 = or i64 %865, %868, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %870 = xor i64 %862, %869, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  %871 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %872 = load i64* %871, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %873 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %874 = load i64* %873, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %875 = or i64 %872, %874, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %876 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %877 = load i64* %876, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %878 = and i64 %875, %877, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  %879 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %880 = load i64* %879, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %881 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  %882 = load i64* %881, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %883 = and i64 %880, %882, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  %884 = or i64 %878, %883, !dbg !933             ; [#uses=1 type=i64] [debug line = 194:0]
  %885 = add i64 %870, %884, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  store i64 %885, i64* %t1, align 8, !dbg !933    ; [debug line = 194:0]
  %886 = load i64* %t0, align 8, !dbg !933        ; [#uses=1 type=i64] [debug line = 194:0]
  %887 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !933 ; [#uses=2 type=i64*] [debug line = 194:0]
  %888 = load i64* %887, align 8, !dbg !933       ; [#uses=1 type=i64] [debug line = 194:0]
  %889 = add i64 %888, %886, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  store i64 %889, i64* %887, align 8, !dbg !933   ; [debug line = 194:0]
  %890 = load i64* %t0, align 8, !dbg !933        ; [#uses=1 type=i64] [debug line = 194:0]
  %891 = load i64* %t1, align 8, !dbg !933        ; [#uses=1 type=i64] [debug line = 194:0]
  %892 = add i64 %890, %891, !dbg !933            ; [#uses=1 type=i64] [debug line = 194:0]
  %893 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !933 ; [#uses=1 type=i64*] [debug line = 194:0]
  store i64 %892, i64* %893, align 8, !dbg !933   ; [debug line = 194:0]
  %894 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %895 = load i64* %894, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %896 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %897 = load i64* %896, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %898 = lshr i64 %897, 14, !dbg !934             ; [#uses=1 type=i64] [debug line = 195:8]
  %899 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %900 = load i64* %899, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %901 = shl i64 %900, 50, !dbg !934              ; [#uses=1 type=i64] [debug line = 195:8]
  %902 = or i64 %898, %901, !dbg !934             ; [#uses=1 type=i64] [debug line = 195:8]
  %903 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %904 = load i64* %903, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %905 = lshr i64 %904, 18, !dbg !934             ; [#uses=1 type=i64] [debug line = 195:8]
  %906 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %907 = load i64* %906, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %908 = shl i64 %907, 46, !dbg !934              ; [#uses=1 type=i64] [debug line = 195:8]
  %909 = or i64 %905, %908, !dbg !934             ; [#uses=1 type=i64] [debug line = 195:8]
  %910 = xor i64 %902, %909, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %911 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %912 = load i64* %911, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %913 = lshr i64 %912, 41, !dbg !934             ; [#uses=1 type=i64] [debug line = 195:8]
  %914 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %915 = load i64* %914, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %916 = shl i64 %915, 23, !dbg !934              ; [#uses=1 type=i64] [debug line = 195:8]
  %917 = or i64 %913, %916, !dbg !934             ; [#uses=1 type=i64] [debug line = 195:8]
  %918 = xor i64 %910, %917, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %919 = add i64 %895, %918, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %920 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %921 = load i64* %920, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %922 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 5, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %923 = load i64* %922, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %924 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 6, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %925 = load i64* %924, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %926 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 7, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %927 = load i64* %926, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %928 = xor i64 %925, %927, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %929 = and i64 %923, %928, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %930 = xor i64 %921, %929, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %931 = add i64 %919, %930, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %932 = load i32* %i, align 4, !dbg !934         ; [#uses=1 type=i32] [debug line = 195:8]
  %933 = add nsw i32 %932, 7, !dbg !934           ; [#uses=1 type=i32] [debug line = 195:8]
  %934 = sext i32 %933 to i64, !dbg !934          ; [#uses=1 type=i64] [debug line = 195:8]
  %935 = getelementptr inbounds [80 x i64]* @K, i32 0, i64 %934, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %936 = load i64* %935, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %937 = add i64 %931, %936, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  %938 = load i32* %i, align 4, !dbg !934         ; [#uses=1 type=i32] [debug line = 195:8]
  %939 = add nsw i32 %938, 7, !dbg !934           ; [#uses=1 type=i32] [debug line = 195:8]
  %940 = sext i32 %939 to i64, !dbg !934          ; [#uses=1 type=i64] [debug line = 195:8]
  %941 = getelementptr inbounds [80 x i64]* %W, i32 0, i64 %940, !dbg !934 ; [#uses=1 type=i64*] [debug line = 195:8]
  %942 = load i64* %941, align 8, !dbg !934       ; [#uses=1 type=i64] [debug line = 195:8]
  %943 = add i64 %937, %942, !dbg !934            ; [#uses=1 type=i64] [debug line = 195:8]
  store i64 %943, i64* %t0, align 8, !dbg !934    ; [debug line = 195:8]
  %944 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %945 = load i64* %944, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %946 = lshr i64 %945, 28, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %947 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %948 = load i64* %947, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %949 = shl i64 %948, 36, !dbg !935              ; [#uses=1 type=i64] [debug line = 195:0]
  %950 = or i64 %946, %949, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %951 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %952 = load i64* %951, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %953 = lshr i64 %952, 34, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %954 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %955 = load i64* %954, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %956 = shl i64 %955, 30, !dbg !935              ; [#uses=1 type=i64] [debug line = 195:0]
  %957 = or i64 %953, %956, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %958 = xor i64 %950, %957, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  %959 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %960 = load i64* %959, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %961 = lshr i64 %960, 39, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %962 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %963 = load i64* %962, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %964 = shl i64 %963, 25, !dbg !935              ; [#uses=1 type=i64] [debug line = 195:0]
  %965 = or i64 %961, %964, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %966 = xor i64 %958, %965, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  %967 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %968 = load i64* %967, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %969 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %970 = load i64* %969, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %971 = or i64 %968, %970, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %972 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 3, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %973 = load i64* %972, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %974 = and i64 %971, %973, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  %975 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 1, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %976 = load i64* %975, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %977 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 2, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  %978 = load i64* %977, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %979 = and i64 %976, %978, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  %980 = or i64 %974, %979, !dbg !935             ; [#uses=1 type=i64] [debug line = 195:0]
  %981 = add i64 %966, %980, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  store i64 %981, i64* %t1, align 8, !dbg !935    ; [debug line = 195:0]
  %982 = load i64* %t0, align 8, !dbg !935        ; [#uses=1 type=i64] [debug line = 195:0]
  %983 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 4, !dbg !935 ; [#uses=2 type=i64*] [debug line = 195:0]
  %984 = load i64* %983, align 8, !dbg !935       ; [#uses=1 type=i64] [debug line = 195:0]
  %985 = add i64 %984, %982, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  store i64 %985, i64* %983, align 8, !dbg !935   ; [debug line = 195:0]
  %986 = load i64* %t0, align 8, !dbg !935        ; [#uses=1 type=i64] [debug line = 195:0]
  %987 = load i64* %t1, align 8, !dbg !935        ; [#uses=1 type=i64] [debug line = 195:0]
  %988 = add i64 %986, %987, !dbg !935            ; [#uses=1 type=i64] [debug line = 195:0]
  %989 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 0, !dbg !935 ; [#uses=1 type=i64*] [debug line = 195:0]
  store i64 %988, i64* %989, align 8, !dbg !935   ; [debug line = 195:0]
  br label %990, !dbg !936                        ; [debug line = 196:4]

; <label>:990                                     ; preds = %221
  %991 = load i32* %i, align 4, !dbg !937         ; [#uses=1 type=i32] [debug line = 187:25]
  %992 = add nsw i32 %991, 8, !dbg !937           ; [#uses=1 type=i32] [debug line = 187:25]
  store i32 %992, i32* %i, align 4, !dbg !937     ; [debug line = 187:25]
  br label %218, !dbg !937                        ; [debug line = 187:25]

; <label>:993                                     ; preds = %218
  store i32 0, i32* %i, align 4, !dbg !938        ; [debug line = 203:9]
  br label %994, !dbg !938                        ; [debug line = 203:9]

; <label>:994                                     ; preds = %1014, %993
  %995 = load i32* %i, align 4, !dbg !938         ; [#uses=1 type=i32] [debug line = 203:9]
  %996 = icmp slt i32 %995, 8, !dbg !938          ; [#uses=1 type=i1] [debug line = 203:9]
  br i1 %996, label %997, label %1017, !dbg !938  ; [debug line = 203:9]

; <label>:997                                     ; preds = %994
  %998 = load i32* %i, align 4, !dbg !940         ; [#uses=1 type=i32] [debug line = 204:9]
  %999 = sext i32 %998 to i64, !dbg !940          ; [#uses=1 type=i64] [debug line = 204:9]
  %1000 = load %struct.sha512_context_** %1, align 8, !dbg !940 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 204:9]
  %1001 = getelementptr inbounds %struct.sha512_context_* %1000, i32 0, i32 1, !dbg !940 ; [#uses=1 type=[8 x i64]*] [debug line = 204:9]
  %1002 = getelementptr inbounds [8 x i64]* %1001, i32 0, i64 %999, !dbg !940 ; [#uses=1 type=i64*] [debug line = 204:9]
  %1003 = load i64* %1002, align 8, !dbg !940     ; [#uses=1 type=i64] [debug line = 204:9]
  %1004 = load i32* %i, align 4, !dbg !940        ; [#uses=1 type=i32] [debug line = 204:9]
  %1005 = sext i32 %1004 to i64, !dbg !940        ; [#uses=1 type=i64] [debug line = 204:9]
  %1006 = getelementptr inbounds [8 x i64]* %S, i32 0, i64 %1005, !dbg !940 ; [#uses=1 type=i64*] [debug line = 204:9]
  %1007 = load i64* %1006, align 8, !dbg !940     ; [#uses=1 type=i64] [debug line = 204:9]
  %1008 = add i64 %1003, %1007, !dbg !940         ; [#uses=1 type=i64] [debug line = 204:9]
  %1009 = load i32* %i, align 4, !dbg !940        ; [#uses=1 type=i32] [debug line = 204:9]
  %1010 = sext i32 %1009 to i64, !dbg !940        ; [#uses=1 type=i64] [debug line = 204:9]
  %1011 = load %struct.sha512_context_** %1, align 8, !dbg !940 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 204:9]
  %1012 = getelementptr inbounds %struct.sha512_context_* %1011, i32 0, i32 1, !dbg !940 ; [#uses=1 type=[8 x i64]*] [debug line = 204:9]
  %1013 = getelementptr inbounds [8 x i64]* %1012, i32 0, i64 %1010, !dbg !940 ; [#uses=1 type=i64*] [debug line = 204:9]
  store i64 %1008, i64* %1013, align 8, !dbg !940 ; [debug line = 204:9]
  br label %1014, !dbg !942                       ; [debug line = 205:5]

; <label>:1014                                    ; preds = %997
  %1015 = load i32* %i, align 4, !dbg !943        ; [#uses=1 type=i32] [debug line = 203:23]
  %1016 = add nsw i32 %1015, 1, !dbg !943         ; [#uses=1 type=i32] [debug line = 203:23]
  store i32 %1016, i32* %i, align 4, !dbg !943    ; [debug line = 203:23]
  br label %994, !dbg !943                        ; [debug line = 203:23]

; <label>:1017                                    ; preds = %994
  ret i32 0, !dbg !944                            ; [debug line = 207:5]
}

; [#uses=3]
define i32 @sha512_final(%struct.sha512_context_* %md, i8* %out) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %2 = alloca %struct.sha512_context_*, align 8   ; [#uses=44 type=%struct.sha512_context_**]
  %3 = alloca i8*, align 8                        ; [#uses=9 type=i8**]
  %i = alloca i32, align 4                        ; [#uses=20 type=i32*]
  %temp_index = alloca i32, align 4               ; [#uses=24 type=i32*]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=6 type=[128 x i8]*]
  store %struct.sha512_context_* %md, %struct.sha512_context_** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sha512_context_** %2}, metadata !945), !dbg !946 ; [debug line = 361:35] [debug variable = md]
  store i8* %out, i8** %3, align 8
  call void @llvm.dbg.declare(metadata !{i8** %3}, metadata !947), !dbg !948 ; [debug line = 361:54] [debug variable = out]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !949 ; [debug line = 363:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !951 ; [debug line = 364:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str311, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !952 ; [debug line = 365:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str412, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !953 ; [debug line = 366:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str513, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !954 ; [debug line = 367:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([5 x i8]* @.str614, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !955 ; [debug line = 368:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([4 x i8]* @.str715, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !956 ; [debug line = 369:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str816, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str19, i32 0, i32 0)) nounwind, !dbg !957 ; [debug line = 370:1]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !958), !dbg !959 ; [debug line = 371:6] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %temp_index}, metadata !960), !dbg !961 ; [debug line = 372:9] [debug variable = temp_index]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !962), !dbg !963 ; [debug line = 373:16] [debug variable = temp_buf]
  %4 = load %struct.sha512_context_** %2, align 8, !dbg !964 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 378:5]
  %5 = getelementptr inbounds %struct.sha512_context_* %4, i32 0, i32 2, !dbg !964 ; [#uses=1 type=i64*] [debug line = 378:5]
  %6 = load i64* %5, align 8, !dbg !964           ; [#uses=1 type=i64] [debug line = 378:5]
  %7 = icmp uge i64 %6, 128, !dbg !964            ; [#uses=1 type=i1] [debug line = 378:5]
  br i1 %7, label %8, label %9, !dbg !964         ; [debug line = 378:5]

; <label>:8                                       ; preds = %0
  store i32 1, i32* %1, !dbg !965                 ; [debug line = 379:6]
  br label %349, !dbg !965                        ; [debug line = 379:6]

; <label>:9                                       ; preds = %0
  %10 = load %struct.sha512_context_** %2, align 8, !dbg !967 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 383:5]
  %11 = getelementptr inbounds %struct.sha512_context_* %10, i32 0, i32 2, !dbg !967 ; [#uses=1 type=i64*] [debug line = 383:5]
  %12 = load i64* %11, align 8, !dbg !967         ; [#uses=1 type=i64] [debug line = 383:5]
  %13 = mul i64 %12, 8, !dbg !967                 ; [#uses=1 type=i64] [debug line = 383:5]
  %14 = load %struct.sha512_context_** %2, align 8, !dbg !967 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 383:5]
  %15 = getelementptr inbounds %struct.sha512_context_* %14, i32 0, i32 0, !dbg !967 ; [#uses=2 type=i64*] [debug line = 383:5]
  %16 = load i64* %15, align 8, !dbg !967         ; [#uses=1 type=i64] [debug line = 383:5]
  %17 = add i64 %16, %13, !dbg !967               ; [#uses=1 type=i64] [debug line = 383:5]
  store i64 %17, i64* %15, align 8, !dbg !967     ; [debug line = 383:5]
  %18 = load %struct.sha512_context_** %2, align 8, !dbg !968 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 386:5]
  %19 = getelementptr inbounds %struct.sha512_context_* %18, i32 0, i32 2, !dbg !968 ; [#uses=2 type=i64*] [debug line = 386:5]
  %20 = load i64* %19, align 8, !dbg !968         ; [#uses=2 type=i64] [debug line = 386:5]
  %21 = add i64 %20, 1, !dbg !968                 ; [#uses=1 type=i64] [debug line = 386:5]
  store i64 %21, i64* %19, align 8, !dbg !968     ; [debug line = 386:5]
  %22 = load %struct.sha512_context_** %2, align 8, !dbg !968 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 386:5]
  %23 = getelementptr inbounds %struct.sha512_context_* %22, i32 0, i32 3, !dbg !968 ; [#uses=1 type=[128 x i8]*] [debug line = 386:5]
  %24 = getelementptr inbounds [128 x i8]* %23, i32 0, i64 %20, !dbg !968 ; [#uses=1 type=i8*] [debug line = 386:5]
  store i8 -128, i8* %24, align 1, !dbg !968      ; [debug line = 386:5]
  %25 = load %struct.sha512_context_** %2, align 8, !dbg !969 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 392:2]
  %26 = getelementptr inbounds %struct.sha512_context_* %25, i32 0, i32 2, !dbg !969 ; [#uses=1 type=i64*] [debug line = 392:2]
  %27 = load i64* %26, align 8, !dbg !969         ; [#uses=1 type=i64] [debug line = 392:2]
  %28 = icmp ugt i64 %27, 112, !dbg !969          ; [#uses=1 type=i1] [debug line = 392:2]
  br i1 %28, label %29, label %83, !dbg !969      ; [debug line = 392:2]

; <label>:29                                      ; preds = %9
  br label %30, !dbg !970                         ; [debug line = 393:3]

; <label>:30                                      ; preds = %35, %29
  %31 = load %struct.sha512_context_** %2, align 8, !dbg !970 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 393:3]
  %32 = getelementptr inbounds %struct.sha512_context_* %31, i32 0, i32 2, !dbg !970 ; [#uses=1 type=i64*] [debug line = 393:3]
  %33 = load i64* %32, align 8, !dbg !970         ; [#uses=1 type=i64] [debug line = 393:3]
  %34 = icmp ult i64 %33, 128, !dbg !970          ; [#uses=1 type=i1] [debug line = 393:3]
  br i1 %34, label %35, label %43, !dbg !970      ; [debug line = 393:3]

; <label>:35                                      ; preds = %30
  %36 = load %struct.sha512_context_** %2, align 8, !dbg !972 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 394:4]
  %37 = getelementptr inbounds %struct.sha512_context_* %36, i32 0, i32 2, !dbg !972 ; [#uses=2 type=i64*] [debug line = 394:4]
  %38 = load i64* %37, align 8, !dbg !972         ; [#uses=2 type=i64] [debug line = 394:4]
  %39 = add i64 %38, 1, !dbg !972                 ; [#uses=1 type=i64] [debug line = 394:4]
  store i64 %39, i64* %37, align 8, !dbg !972     ; [debug line = 394:4]
  %40 = load %struct.sha512_context_** %2, align 8, !dbg !972 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 394:4]
  %41 = getelementptr inbounds %struct.sha512_context_* %40, i32 0, i32 3, !dbg !972 ; [#uses=1 type=[128 x i8]*] [debug line = 394:4]
  %42 = getelementptr inbounds [128 x i8]* %41, i32 0, i64 %38, !dbg !972 ; [#uses=1 type=i8*] [debug line = 394:4]
  store i8 0, i8* %42, align 1, !dbg !972         ; [debug line = 394:4]
  br label %30, !dbg !974                         ; [debug line = 395:3]

; <label>:43                                      ; preds = %30
  store i32 0, i32* %temp_index, align 4, !dbg !975 ; [debug line = 396:7]
  br label %44, !dbg !975                         ; [debug line = 396:7]

; <label>:44                                      ; preds = %57, %43
  %45 = load i32* %temp_index, align 4, !dbg !975 ; [#uses=1 type=i32] [debug line = 396:7]
  %46 = icmp slt i32 %45, 128, !dbg !975          ; [#uses=1 type=i1] [debug line = 396:7]
  br i1 %46, label %47, label %60, !dbg !975      ; [debug line = 396:7]

; <label>:47                                      ; preds = %44
  %48 = load i32* %temp_index, align 4, !dbg !977 ; [#uses=1 type=i32] [debug line = 397:4]
  %49 = sext i32 %48 to i64, !dbg !977            ; [#uses=1 type=i64] [debug line = 397:4]
  %50 = load %struct.sha512_context_** %2, align 8, !dbg !977 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 397:4]
  %51 = getelementptr inbounds %struct.sha512_context_* %50, i32 0, i32 3, !dbg !977 ; [#uses=1 type=[128 x i8]*] [debug line = 397:4]
  %52 = getelementptr inbounds [128 x i8]* %51, i32 0, i64 %49, !dbg !977 ; [#uses=1 type=i8*] [debug line = 397:4]
  %53 = load i8* %52, align 1, !dbg !977          ; [#uses=1 type=i8] [debug line = 397:4]
  %54 = load i32* %temp_index, align 4, !dbg !977 ; [#uses=1 type=i32] [debug line = 397:4]
  %55 = sext i32 %54 to i64, !dbg !977            ; [#uses=1 type=i64] [debug line = 397:4]
  %56 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %55, !dbg !977 ; [#uses=1 type=i8*] [debug line = 397:4]
  store i8 %53, i8* %56, align 1, !dbg !977       ; [debug line = 397:4]
  br label %57, !dbg !979                         ; [debug line = 398:3]

; <label>:57                                      ; preds = %47
  %58 = load i32* %temp_index, align 4, !dbg !980 ; [#uses=1 type=i32] [debug line = 396:37]
  %59 = add nsw i32 %58, 1, !dbg !980             ; [#uses=1 type=i32] [debug line = 396:37]
  store i32 %59, i32* %temp_index, align 4, !dbg !980 ; [debug line = 396:37]
  br label %44, !dbg !980                         ; [debug line = 396:37]

; <label>:60                                      ; preds = %44
  %61 = load %struct.sha512_context_** %2, align 8, !dbg !981 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 399:3]
  %62 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i32 0, !dbg !981 ; [#uses=1 type=i8*] [debug line = 399:3]
  %63 = call i32 @sha512_compress_128(%struct.sha512_context_* %61, i8* %62), !dbg !981 ; [#uses=0 type=i32] [debug line = 399:3]
  store i32 0, i32* %temp_index, align 4, !dbg !982 ; [debug line = 400:7]
  br label %64, !dbg !982                         ; [debug line = 400:7]

; <label>:64                                      ; preds = %77, %60
  %65 = load i32* %temp_index, align 4, !dbg !982 ; [#uses=1 type=i32] [debug line = 400:7]
  %66 = icmp slt i32 %65, 128, !dbg !982          ; [#uses=1 type=i1] [debug line = 400:7]
  br i1 %66, label %67, label %80, !dbg !982      ; [debug line = 400:7]

; <label>:67                                      ; preds = %64
  %68 = load i32* %temp_index, align 4, !dbg !984 ; [#uses=1 type=i32] [debug line = 401:4]
  %69 = sext i32 %68 to i64, !dbg !984            ; [#uses=1 type=i64] [debug line = 401:4]
  %70 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %69, !dbg !984 ; [#uses=1 type=i8*] [debug line = 401:4]
  %71 = load i8* %70, align 1, !dbg !984          ; [#uses=1 type=i8] [debug line = 401:4]
  %72 = load i32* %temp_index, align 4, !dbg !984 ; [#uses=1 type=i32] [debug line = 401:4]
  %73 = sext i32 %72 to i64, !dbg !984            ; [#uses=1 type=i64] [debug line = 401:4]
  %74 = load %struct.sha512_context_** %2, align 8, !dbg !984 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 401:4]
  %75 = getelementptr inbounds %struct.sha512_context_* %74, i32 0, i32 3, !dbg !984 ; [#uses=1 type=[128 x i8]*] [debug line = 401:4]
  %76 = getelementptr inbounds [128 x i8]* %75, i32 0, i64 %73, !dbg !984 ; [#uses=1 type=i8*] [debug line = 401:4]
  store i8 %71, i8* %76, align 1, !dbg !984       ; [debug line = 401:4]
  br label %77, !dbg !986                         ; [debug line = 402:3]

; <label>:77                                      ; preds = %67
  %78 = load i32* %temp_index, align 4, !dbg !987 ; [#uses=1 type=i32] [debug line = 400:37]
  %79 = add nsw i32 %78, 1, !dbg !987             ; [#uses=1 type=i32] [debug line = 400:37]
  store i32 %79, i32* %temp_index, align 4, !dbg !987 ; [debug line = 400:37]
  br label %64, !dbg !987                         ; [debug line = 400:37]

; <label>:80                                      ; preds = %64
  %81 = load %struct.sha512_context_** %2, align 8, !dbg !988 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 403:3]
  %82 = getelementptr inbounds %struct.sha512_context_* %81, i32 0, i32 2, !dbg !988 ; [#uses=1 type=i64*] [debug line = 403:3]
  store i64 0, i64* %82, align 8, !dbg !988       ; [debug line = 403:3]
  br label %83, !dbg !989                         ; [debug line = 404:5]

; <label>:83                                      ; preds = %80, %9
  br label %84, !dbg !990                         ; [debug line = 410:2]

; <label>:84                                      ; preds = %89, %83
  %85 = load %struct.sha512_context_** %2, align 8, !dbg !990 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 410:2]
  %86 = getelementptr inbounds %struct.sha512_context_* %85, i32 0, i32 2, !dbg !990 ; [#uses=1 type=i64*] [debug line = 410:2]
  %87 = load i64* %86, align 8, !dbg !990         ; [#uses=1 type=i64] [debug line = 410:2]
  %88 = icmp ult i64 %87, 120, !dbg !990          ; [#uses=1 type=i1] [debug line = 410:2]
  br i1 %88, label %89, label %97, !dbg !990      ; [debug line = 410:2]

; <label>:89                                      ; preds = %84
  %90 = load %struct.sha512_context_** %2, align 8, !dbg !991 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 411:3]
  %91 = getelementptr inbounds %struct.sha512_context_* %90, i32 0, i32 2, !dbg !991 ; [#uses=2 type=i64*] [debug line = 411:3]
  %92 = load i64* %91, align 8, !dbg !991         ; [#uses=2 type=i64] [debug line = 411:3]
  %93 = add i64 %92, 1, !dbg !991                 ; [#uses=1 type=i64] [debug line = 411:3]
  store i64 %93, i64* %91, align 8, !dbg !991     ; [debug line = 411:3]
  %94 = load %struct.sha512_context_** %2, align 8, !dbg !991 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 411:3]
  %95 = getelementptr inbounds %struct.sha512_context_* %94, i32 0, i32 3, !dbg !991 ; [#uses=1 type=[128 x i8]*] [debug line = 411:3]
  %96 = getelementptr inbounds [128 x i8]* %95, i32 0, i64 %92, !dbg !991 ; [#uses=1 type=i8*] [debug line = 411:3]
  store i8 0, i8* %96, align 1, !dbg !991         ; [debug line = 411:3]
  br label %84, !dbg !993                         ; [debug line = 412:2]

; <label>:97                                      ; preds = %84
  %98 = load %struct.sha512_context_** %2, align 8, !dbg !994 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:4]
  %99 = getelementptr inbounds %struct.sha512_context_* %98, i32 0, i32 0, !dbg !994 ; [#uses=1 type=i64*] [debug line = 415:4]
  %100 = load i64* %99, align 8, !dbg !994        ; [#uses=1 type=i64] [debug line = 415:4]
  %101 = lshr i64 %100, 56, !dbg !994             ; [#uses=1 type=i64] [debug line = 415:4]
  %102 = and i64 %101, 255, !dbg !994             ; [#uses=1 type=i64] [debug line = 415:4]
  %103 = trunc i64 %102 to i8, !dbg !994          ; [#uses=1 type=i8] [debug line = 415:4]
  %104 = load %struct.sha512_context_** %2, align 8, !dbg !994 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:4]
  %105 = getelementptr inbounds %struct.sha512_context_* %104, i32 0, i32 3, !dbg !994 ; [#uses=1 type=[128 x i8]*] [debug line = 415:4]
  %106 = getelementptr inbounds [128 x i8]* %105, i32 0, i32 0, !dbg !994 ; [#uses=1 type=i8*] [debug line = 415:4]
  %107 = getelementptr inbounds i8* %106, i64 120, !dbg !994 ; [#uses=1 type=i8*] [debug line = 415:4]
  %108 = getelementptr inbounds i8* %107, i64 0, !dbg !994 ; [#uses=1 type=i8*] [debug line = 415:4]
  store i8 %103, i8* %108, align 1, !dbg !994     ; [debug line = 415:4]
  %109 = load %struct.sha512_context_** %2, align 8, !dbg !996 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:64]
  %110 = getelementptr inbounds %struct.sha512_context_* %109, i32 0, i32 0, !dbg !996 ; [#uses=1 type=i64*] [debug line = 415:64]
  %111 = load i64* %110, align 8, !dbg !996       ; [#uses=1 type=i64] [debug line = 415:64]
  %112 = lshr i64 %111, 48, !dbg !996             ; [#uses=1 type=i64] [debug line = 415:64]
  %113 = and i64 %112, 255, !dbg !996             ; [#uses=1 type=i64] [debug line = 415:64]
  %114 = trunc i64 %113 to i8, !dbg !996          ; [#uses=1 type=i8] [debug line = 415:64]
  %115 = load %struct.sha512_context_** %2, align 8, !dbg !996 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:64]
  %116 = getelementptr inbounds %struct.sha512_context_* %115, i32 0, i32 3, !dbg !996 ; [#uses=1 type=[128 x i8]*] [debug line = 415:64]
  %117 = getelementptr inbounds [128 x i8]* %116, i32 0, i32 0, !dbg !996 ; [#uses=1 type=i8*] [debug line = 415:64]
  %118 = getelementptr inbounds i8* %117, i64 120, !dbg !996 ; [#uses=1 type=i8*] [debug line = 415:64]
  %119 = getelementptr inbounds i8* %118, i64 1, !dbg !996 ; [#uses=1 type=i8*] [debug line = 415:64]
  store i8 %114, i8* %119, align 1, !dbg !996     ; [debug line = 415:64]
  %120 = load %struct.sha512_context_** %2, align 8, !dbg !997 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:124]
  %121 = getelementptr inbounds %struct.sha512_context_* %120, i32 0, i32 0, !dbg !997 ; [#uses=1 type=i64*] [debug line = 415:124]
  %122 = load i64* %121, align 8, !dbg !997       ; [#uses=1 type=i64] [debug line = 415:124]
  %123 = lshr i64 %122, 40, !dbg !997             ; [#uses=1 type=i64] [debug line = 415:124]
  %124 = and i64 %123, 255, !dbg !997             ; [#uses=1 type=i64] [debug line = 415:124]
  %125 = trunc i64 %124 to i8, !dbg !997          ; [#uses=1 type=i8] [debug line = 415:124]
  %126 = load %struct.sha512_context_** %2, align 8, !dbg !997 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:124]
  %127 = getelementptr inbounds %struct.sha512_context_* %126, i32 0, i32 3, !dbg !997 ; [#uses=1 type=[128 x i8]*] [debug line = 415:124]
  %128 = getelementptr inbounds [128 x i8]* %127, i32 0, i32 0, !dbg !997 ; [#uses=1 type=i8*] [debug line = 415:124]
  %129 = getelementptr inbounds i8* %128, i64 120, !dbg !997 ; [#uses=1 type=i8*] [debug line = 415:124]
  %130 = getelementptr inbounds i8* %129, i64 2, !dbg !997 ; [#uses=1 type=i8*] [debug line = 415:124]
  store i8 %125, i8* %130, align 1, !dbg !997     ; [debug line = 415:124]
  %131 = load %struct.sha512_context_** %2, align 8, !dbg !998 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:184]
  %132 = getelementptr inbounds %struct.sha512_context_* %131, i32 0, i32 0, !dbg !998 ; [#uses=1 type=i64*] [debug line = 415:184]
  %133 = load i64* %132, align 8, !dbg !998       ; [#uses=1 type=i64] [debug line = 415:184]
  %134 = lshr i64 %133, 32, !dbg !998             ; [#uses=1 type=i64] [debug line = 415:184]
  %135 = and i64 %134, 255, !dbg !998             ; [#uses=1 type=i64] [debug line = 415:184]
  %136 = trunc i64 %135 to i8, !dbg !998          ; [#uses=1 type=i8] [debug line = 415:184]
  %137 = load %struct.sha512_context_** %2, align 8, !dbg !998 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:184]
  %138 = getelementptr inbounds %struct.sha512_context_* %137, i32 0, i32 3, !dbg !998 ; [#uses=1 type=[128 x i8]*] [debug line = 415:184]
  %139 = getelementptr inbounds [128 x i8]* %138, i32 0, i32 0, !dbg !998 ; [#uses=1 type=i8*] [debug line = 415:184]
  %140 = getelementptr inbounds i8* %139, i64 120, !dbg !998 ; [#uses=1 type=i8*] [debug line = 415:184]
  %141 = getelementptr inbounds i8* %140, i64 3, !dbg !998 ; [#uses=1 type=i8*] [debug line = 415:184]
  store i8 %136, i8* %141, align 1, !dbg !998     ; [debug line = 415:184]
  %142 = load %struct.sha512_context_** %2, align 8, !dbg !999 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:244]
  %143 = getelementptr inbounds %struct.sha512_context_* %142, i32 0, i32 0, !dbg !999 ; [#uses=1 type=i64*] [debug line = 415:244]
  %144 = load i64* %143, align 8, !dbg !999       ; [#uses=1 type=i64] [debug line = 415:244]
  %145 = lshr i64 %144, 24, !dbg !999             ; [#uses=1 type=i64] [debug line = 415:244]
  %146 = and i64 %145, 255, !dbg !999             ; [#uses=1 type=i64] [debug line = 415:244]
  %147 = trunc i64 %146 to i8, !dbg !999          ; [#uses=1 type=i8] [debug line = 415:244]
  %148 = load %struct.sha512_context_** %2, align 8, !dbg !999 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:244]
  %149 = getelementptr inbounds %struct.sha512_context_* %148, i32 0, i32 3, !dbg !999 ; [#uses=1 type=[128 x i8]*] [debug line = 415:244]
  %150 = getelementptr inbounds [128 x i8]* %149, i32 0, i32 0, !dbg !999 ; [#uses=1 type=i8*] [debug line = 415:244]
  %151 = getelementptr inbounds i8* %150, i64 120, !dbg !999 ; [#uses=1 type=i8*] [debug line = 415:244]
  %152 = getelementptr inbounds i8* %151, i64 4, !dbg !999 ; [#uses=1 type=i8*] [debug line = 415:244]
  store i8 %147, i8* %152, align 1, !dbg !999     ; [debug line = 415:244]
  %153 = load %struct.sha512_context_** %2, align 8, !dbg !1000 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:0]
  %154 = getelementptr inbounds %struct.sha512_context_* %153, i32 0, i32 0, !dbg !1000 ; [#uses=1 type=i64*] [debug line = 415:0]
  %155 = load i64* %154, align 8, !dbg !1000      ; [#uses=1 type=i64] [debug line = 415:0]
  %156 = lshr i64 %155, 16, !dbg !1000            ; [#uses=1 type=i64] [debug line = 415:0]
  %157 = and i64 %156, 255, !dbg !1000            ; [#uses=1 type=i64] [debug line = 415:0]
  %158 = trunc i64 %157 to i8, !dbg !1000         ; [#uses=1 type=i8] [debug line = 415:0]
  %159 = load %struct.sha512_context_** %2, align 8, !dbg !1000 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:0]
  %160 = getelementptr inbounds %struct.sha512_context_* %159, i32 0, i32 3, !dbg !1000 ; [#uses=1 type=[128 x i8]*] [debug line = 415:0]
  %161 = getelementptr inbounds [128 x i8]* %160, i32 0, i32 0, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  %162 = getelementptr inbounds i8* %161, i64 120, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  %163 = getelementptr inbounds i8* %162, i64 5, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %158, i8* %163, align 1, !dbg !1000    ; [debug line = 415:0]
  %164 = load %struct.sha512_context_** %2, align 8, !dbg !1000 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:0]
  %165 = getelementptr inbounds %struct.sha512_context_* %164, i32 0, i32 0, !dbg !1000 ; [#uses=1 type=i64*] [debug line = 415:0]
  %166 = load i64* %165, align 8, !dbg !1000      ; [#uses=1 type=i64] [debug line = 415:0]
  %167 = lshr i64 %166, 8, !dbg !1000             ; [#uses=1 type=i64] [debug line = 415:0]
  %168 = and i64 %167, 255, !dbg !1000            ; [#uses=1 type=i64] [debug line = 415:0]
  %169 = trunc i64 %168 to i8, !dbg !1000         ; [#uses=1 type=i8] [debug line = 415:0]
  %170 = load %struct.sha512_context_** %2, align 8, !dbg !1000 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:0]
  %171 = getelementptr inbounds %struct.sha512_context_* %170, i32 0, i32 3, !dbg !1000 ; [#uses=1 type=[128 x i8]*] [debug line = 415:0]
  %172 = getelementptr inbounds [128 x i8]* %171, i32 0, i32 0, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  %173 = getelementptr inbounds i8* %172, i64 120, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  %174 = getelementptr inbounds i8* %173, i64 6, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %169, i8* %174, align 1, !dbg !1000    ; [debug line = 415:0]
  %175 = load %struct.sha512_context_** %2, align 8, !dbg !1000 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:0]
  %176 = getelementptr inbounds %struct.sha512_context_* %175, i32 0, i32 0, !dbg !1000 ; [#uses=1 type=i64*] [debug line = 415:0]
  %177 = load i64* %176, align 8, !dbg !1000      ; [#uses=1 type=i64] [debug line = 415:0]
  %178 = and i64 %177, 255, !dbg !1000            ; [#uses=1 type=i64] [debug line = 415:0]
  %179 = trunc i64 %178 to i8, !dbg !1000         ; [#uses=1 type=i8] [debug line = 415:0]
  %180 = load %struct.sha512_context_** %2, align 8, !dbg !1000 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 415:0]
  %181 = getelementptr inbounds %struct.sha512_context_* %180, i32 0, i32 3, !dbg !1000 ; [#uses=1 type=[128 x i8]*] [debug line = 415:0]
  %182 = getelementptr inbounds [128 x i8]* %181, i32 0, i32 0, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  %183 = getelementptr inbounds i8* %182, i64 120, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  %184 = getelementptr inbounds i8* %183, i64 7, !dbg !1000 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %179, i8* %184, align 1, !dbg !1000    ; [debug line = 415:0]
  store i32 0, i32* %temp_index, align 4, !dbg !1001 ; [debug line = 416:6]
  br label %185, !dbg !1001                       ; [debug line = 416:6]

; <label>:185                                     ; preds = %198, %97
  %186 = load i32* %temp_index, align 4, !dbg !1001 ; [#uses=1 type=i32] [debug line = 416:6]
  %187 = icmp slt i32 %186, 128, !dbg !1001       ; [#uses=1 type=i1] [debug line = 416:6]
  br i1 %187, label %188, label %201, !dbg !1001  ; [debug line = 416:6]

; <label>:188                                     ; preds = %185
  %189 = load i32* %temp_index, align 4, !dbg !1003 ; [#uses=1 type=i32] [debug line = 417:3]
  %190 = sext i32 %189 to i64, !dbg !1003         ; [#uses=1 type=i64] [debug line = 417:3]
  %191 = load %struct.sha512_context_** %2, align 8, !dbg !1003 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 417:3]
  %192 = getelementptr inbounds %struct.sha512_context_* %191, i32 0, i32 3, !dbg !1003 ; [#uses=1 type=[128 x i8]*] [debug line = 417:3]
  %193 = getelementptr inbounds [128 x i8]* %192, i32 0, i64 %190, !dbg !1003 ; [#uses=1 type=i8*] [debug line = 417:3]
  %194 = load i8* %193, align 1, !dbg !1003       ; [#uses=1 type=i8] [debug line = 417:3]
  %195 = load i32* %temp_index, align 4, !dbg !1003 ; [#uses=1 type=i32] [debug line = 417:3]
  %196 = sext i32 %195 to i64, !dbg !1003         ; [#uses=1 type=i64] [debug line = 417:3]
  %197 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %196, !dbg !1003 ; [#uses=1 type=i8*] [debug line = 417:3]
  store i8 %194, i8* %197, align 1, !dbg !1003    ; [debug line = 417:3]
  br label %198, !dbg !1005                       ; [debug line = 418:2]

; <label>:198                                     ; preds = %188
  %199 = load i32* %temp_index, align 4, !dbg !1006 ; [#uses=1 type=i32] [debug line = 416:36]
  %200 = add nsw i32 %199, 1, !dbg !1006          ; [#uses=1 type=i32] [debug line = 416:36]
  store i32 %200, i32* %temp_index, align 4, !dbg !1006 ; [debug line = 416:36]
  br label %185, !dbg !1006                       ; [debug line = 416:36]

; <label>:201                                     ; preds = %185
  %202 = load %struct.sha512_context_** %2, align 8, !dbg !1007 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 419:2]
  %203 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i32 0, !dbg !1007 ; [#uses=1 type=i8*] [debug line = 419:2]
  %204 = call i32 @sha512_compress_128(%struct.sha512_context_* %202, i8* %203), !dbg !1007 ; [#uses=0 type=i32] [debug line = 419:2]
  store i32 0, i32* %temp_index, align 4, !dbg !1008 ; [debug line = 420:6]
  br label %205, !dbg !1008                       ; [debug line = 420:6]

; <label>:205                                     ; preds = %218, %201
  %206 = load i32* %temp_index, align 4, !dbg !1008 ; [#uses=1 type=i32] [debug line = 420:6]
  %207 = icmp slt i32 %206, 128, !dbg !1008       ; [#uses=1 type=i1] [debug line = 420:6]
  br i1 %207, label %208, label %221, !dbg !1008  ; [debug line = 420:6]

; <label>:208                                     ; preds = %205
  %209 = load i32* %temp_index, align 4, !dbg !1010 ; [#uses=1 type=i32] [debug line = 421:3]
  %210 = sext i32 %209 to i64, !dbg !1010         ; [#uses=1 type=i64] [debug line = 421:3]
  %211 = getelementptr inbounds [128 x i8]* %temp_buf, i32 0, i64 %210, !dbg !1010 ; [#uses=1 type=i8*] [debug line = 421:3]
  %212 = load i8* %211, align 1, !dbg !1010       ; [#uses=1 type=i8] [debug line = 421:3]
  %213 = load i32* %temp_index, align 4, !dbg !1010 ; [#uses=1 type=i32] [debug line = 421:3]
  %214 = sext i32 %213 to i64, !dbg !1010         ; [#uses=1 type=i64] [debug line = 421:3]
  %215 = load %struct.sha512_context_** %2, align 8, !dbg !1010 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 421:3]
  %216 = getelementptr inbounds %struct.sha512_context_* %215, i32 0, i32 3, !dbg !1010 ; [#uses=1 type=[128 x i8]*] [debug line = 421:3]
  %217 = getelementptr inbounds [128 x i8]* %216, i32 0, i64 %214, !dbg !1010 ; [#uses=1 type=i8*] [debug line = 421:3]
  store i8 %212, i8* %217, align 1, !dbg !1010    ; [debug line = 421:3]
  br label %218, !dbg !1012                       ; [debug line = 422:2]

; <label>:218                                     ; preds = %208
  %219 = load i32* %temp_index, align 4, !dbg !1013 ; [#uses=1 type=i32] [debug line = 420:36]
  %220 = add nsw i32 %219, 1, !dbg !1013          ; [#uses=1 type=i32] [debug line = 420:36]
  store i32 %220, i32* %temp_index, align 4, !dbg !1013 ; [debug line = 420:36]
  br label %205, !dbg !1013                       ; [debug line = 420:36]

; <label>:221                                     ; preds = %205
  store i32 0, i32* %i, align 4, !dbg !1014       ; [debug line = 425:7]
  br label %222, !dbg !1014                       ; [debug line = 425:7]

; <label>:222                                     ; preds = %345, %221
  %223 = load i32* %i, align 4, !dbg !1014        ; [#uses=1 type=i32] [debug line = 425:7]
  %224 = icmp slt i32 %223, 8, !dbg !1014         ; [#uses=1 type=i1] [debug line = 425:7]
  br i1 %224, label %225, label %348, !dbg !1014  ; [debug line = 425:7]

; <label>:225                                     ; preds = %222
  %226 = load i32* %i, align 4, !dbg !1016        ; [#uses=1 type=i32] [debug line = 426:5]
  %227 = sext i32 %226 to i64, !dbg !1016         ; [#uses=1 type=i64] [debug line = 426:5]
  %228 = load %struct.sha512_context_** %2, align 8, !dbg !1016 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:5]
  %229 = getelementptr inbounds %struct.sha512_context_* %228, i32 0, i32 1, !dbg !1016 ; [#uses=1 type=[8 x i64]*] [debug line = 426:5]
  %230 = getelementptr inbounds [8 x i64]* %229, i32 0, i64 %227, !dbg !1016 ; [#uses=1 type=i64*] [debug line = 426:5]
  %231 = load i64* %230, align 8, !dbg !1016      ; [#uses=1 type=i64] [debug line = 426:5]
  %232 = lshr i64 %231, 56, !dbg !1016            ; [#uses=1 type=i64] [debug line = 426:5]
  %233 = and i64 %232, 255, !dbg !1016            ; [#uses=1 type=i64] [debug line = 426:5]
  %234 = trunc i64 %233 to i8, !dbg !1016         ; [#uses=1 type=i8] [debug line = 426:5]
  %235 = load i8** %3, align 8, !dbg !1016        ; [#uses=1 type=i8*] [debug line = 426:5]
  %236 = load i32* %i, align 4, !dbg !1016        ; [#uses=1 type=i32] [debug line = 426:5]
  %237 = mul nsw i32 8, %236, !dbg !1016          ; [#uses=1 type=i32] [debug line = 426:5]
  %238 = sext i32 %237 to i64, !dbg !1016         ; [#uses=1 type=i64] [debug line = 426:5]
  %239 = getelementptr inbounds i8* %235, i64 %238, !dbg !1016 ; [#uses=1 type=i8*] [debug line = 426:5]
  %240 = getelementptr inbounds i8* %239, i64 0, !dbg !1016 ; [#uses=1 type=i8*] [debug line = 426:5]
  store i8 %234, i8* %240, align 1, !dbg !1016    ; [debug line = 426:5]
  %241 = load i32* %i, align 4, !dbg !1019        ; [#uses=1 type=i32] [debug line = 426:65]
  %242 = sext i32 %241 to i64, !dbg !1019         ; [#uses=1 type=i64] [debug line = 426:65]
  %243 = load %struct.sha512_context_** %2, align 8, !dbg !1019 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:65]
  %244 = getelementptr inbounds %struct.sha512_context_* %243, i32 0, i32 1, !dbg !1019 ; [#uses=1 type=[8 x i64]*] [debug line = 426:65]
  %245 = getelementptr inbounds [8 x i64]* %244, i32 0, i64 %242, !dbg !1019 ; [#uses=1 type=i64*] [debug line = 426:65]
  %246 = load i64* %245, align 8, !dbg !1019      ; [#uses=1 type=i64] [debug line = 426:65]
  %247 = lshr i64 %246, 48, !dbg !1019            ; [#uses=1 type=i64] [debug line = 426:65]
  %248 = and i64 %247, 255, !dbg !1019            ; [#uses=1 type=i64] [debug line = 426:65]
  %249 = trunc i64 %248 to i8, !dbg !1019         ; [#uses=1 type=i8] [debug line = 426:65]
  %250 = load i8** %3, align 8, !dbg !1019        ; [#uses=1 type=i8*] [debug line = 426:65]
  %251 = load i32* %i, align 4, !dbg !1019        ; [#uses=1 type=i32] [debug line = 426:65]
  %252 = mul nsw i32 8, %251, !dbg !1019          ; [#uses=1 type=i32] [debug line = 426:65]
  %253 = sext i32 %252 to i64, !dbg !1019         ; [#uses=1 type=i64] [debug line = 426:65]
  %254 = getelementptr inbounds i8* %250, i64 %253, !dbg !1019 ; [#uses=1 type=i8*] [debug line = 426:65]
  %255 = getelementptr inbounds i8* %254, i64 1, !dbg !1019 ; [#uses=1 type=i8*] [debug line = 426:65]
  store i8 %249, i8* %255, align 1, !dbg !1019    ; [debug line = 426:65]
  %256 = load i32* %i, align 4, !dbg !1020        ; [#uses=1 type=i32] [debug line = 426:125]
  %257 = sext i32 %256 to i64, !dbg !1020         ; [#uses=1 type=i64] [debug line = 426:125]
  %258 = load %struct.sha512_context_** %2, align 8, !dbg !1020 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:125]
  %259 = getelementptr inbounds %struct.sha512_context_* %258, i32 0, i32 1, !dbg !1020 ; [#uses=1 type=[8 x i64]*] [debug line = 426:125]
  %260 = getelementptr inbounds [8 x i64]* %259, i32 0, i64 %257, !dbg !1020 ; [#uses=1 type=i64*] [debug line = 426:125]
  %261 = load i64* %260, align 8, !dbg !1020      ; [#uses=1 type=i64] [debug line = 426:125]
  %262 = lshr i64 %261, 40, !dbg !1020            ; [#uses=1 type=i64] [debug line = 426:125]
  %263 = and i64 %262, 255, !dbg !1020            ; [#uses=1 type=i64] [debug line = 426:125]
  %264 = trunc i64 %263 to i8, !dbg !1020         ; [#uses=1 type=i8] [debug line = 426:125]
  %265 = load i8** %3, align 8, !dbg !1020        ; [#uses=1 type=i8*] [debug line = 426:125]
  %266 = load i32* %i, align 4, !dbg !1020        ; [#uses=1 type=i32] [debug line = 426:125]
  %267 = mul nsw i32 8, %266, !dbg !1020          ; [#uses=1 type=i32] [debug line = 426:125]
  %268 = sext i32 %267 to i64, !dbg !1020         ; [#uses=1 type=i64] [debug line = 426:125]
  %269 = getelementptr inbounds i8* %265, i64 %268, !dbg !1020 ; [#uses=1 type=i8*] [debug line = 426:125]
  %270 = getelementptr inbounds i8* %269, i64 2, !dbg !1020 ; [#uses=1 type=i8*] [debug line = 426:125]
  store i8 %264, i8* %270, align 1, !dbg !1020    ; [debug line = 426:125]
  %271 = load i32* %i, align 4, !dbg !1021        ; [#uses=1 type=i32] [debug line = 426:185]
  %272 = sext i32 %271 to i64, !dbg !1021         ; [#uses=1 type=i64] [debug line = 426:185]
  %273 = load %struct.sha512_context_** %2, align 8, !dbg !1021 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:185]
  %274 = getelementptr inbounds %struct.sha512_context_* %273, i32 0, i32 1, !dbg !1021 ; [#uses=1 type=[8 x i64]*] [debug line = 426:185]
  %275 = getelementptr inbounds [8 x i64]* %274, i32 0, i64 %272, !dbg !1021 ; [#uses=1 type=i64*] [debug line = 426:185]
  %276 = load i64* %275, align 8, !dbg !1021      ; [#uses=1 type=i64] [debug line = 426:185]
  %277 = lshr i64 %276, 32, !dbg !1021            ; [#uses=1 type=i64] [debug line = 426:185]
  %278 = and i64 %277, 255, !dbg !1021            ; [#uses=1 type=i64] [debug line = 426:185]
  %279 = trunc i64 %278 to i8, !dbg !1021         ; [#uses=1 type=i8] [debug line = 426:185]
  %280 = load i8** %3, align 8, !dbg !1021        ; [#uses=1 type=i8*] [debug line = 426:185]
  %281 = load i32* %i, align 4, !dbg !1021        ; [#uses=1 type=i32] [debug line = 426:185]
  %282 = mul nsw i32 8, %281, !dbg !1021          ; [#uses=1 type=i32] [debug line = 426:185]
  %283 = sext i32 %282 to i64, !dbg !1021         ; [#uses=1 type=i64] [debug line = 426:185]
  %284 = getelementptr inbounds i8* %280, i64 %283, !dbg !1021 ; [#uses=1 type=i8*] [debug line = 426:185]
  %285 = getelementptr inbounds i8* %284, i64 3, !dbg !1021 ; [#uses=1 type=i8*] [debug line = 426:185]
  store i8 %279, i8* %285, align 1, !dbg !1021    ; [debug line = 426:185]
  %286 = load i32* %i, align 4, !dbg !1022        ; [#uses=1 type=i32] [debug line = 426:245]
  %287 = sext i32 %286 to i64, !dbg !1022         ; [#uses=1 type=i64] [debug line = 426:245]
  %288 = load %struct.sha512_context_** %2, align 8, !dbg !1022 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:245]
  %289 = getelementptr inbounds %struct.sha512_context_* %288, i32 0, i32 1, !dbg !1022 ; [#uses=1 type=[8 x i64]*] [debug line = 426:245]
  %290 = getelementptr inbounds [8 x i64]* %289, i32 0, i64 %287, !dbg !1022 ; [#uses=1 type=i64*] [debug line = 426:245]
  %291 = load i64* %290, align 8, !dbg !1022      ; [#uses=1 type=i64] [debug line = 426:245]
  %292 = lshr i64 %291, 24, !dbg !1022            ; [#uses=1 type=i64] [debug line = 426:245]
  %293 = and i64 %292, 255, !dbg !1022            ; [#uses=1 type=i64] [debug line = 426:245]
  %294 = trunc i64 %293 to i8, !dbg !1022         ; [#uses=1 type=i8] [debug line = 426:245]
  %295 = load i8** %3, align 8, !dbg !1022        ; [#uses=1 type=i8*] [debug line = 426:245]
  %296 = load i32* %i, align 4, !dbg !1022        ; [#uses=1 type=i32] [debug line = 426:245]
  %297 = mul nsw i32 8, %296, !dbg !1022          ; [#uses=1 type=i32] [debug line = 426:245]
  %298 = sext i32 %297 to i64, !dbg !1022         ; [#uses=1 type=i64] [debug line = 426:245]
  %299 = getelementptr inbounds i8* %295, i64 %298, !dbg !1022 ; [#uses=1 type=i8*] [debug line = 426:245]
  %300 = getelementptr inbounds i8* %299, i64 4, !dbg !1022 ; [#uses=1 type=i8*] [debug line = 426:245]
  store i8 %294, i8* %300, align 1, !dbg !1022    ; [debug line = 426:245]
  %301 = load i32* %i, align 4, !dbg !1023        ; [#uses=1 type=i32] [debug line = 426:0]
  %302 = sext i32 %301 to i64, !dbg !1023         ; [#uses=1 type=i64] [debug line = 426:0]
  %303 = load %struct.sha512_context_** %2, align 8, !dbg !1023 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:0]
  %304 = getelementptr inbounds %struct.sha512_context_* %303, i32 0, i32 1, !dbg !1023 ; [#uses=1 type=[8 x i64]*] [debug line = 426:0]
  %305 = getelementptr inbounds [8 x i64]* %304, i32 0, i64 %302, !dbg !1023 ; [#uses=1 type=i64*] [debug line = 426:0]
  %306 = load i64* %305, align 8, !dbg !1023      ; [#uses=1 type=i64] [debug line = 426:0]
  %307 = lshr i64 %306, 16, !dbg !1023            ; [#uses=1 type=i64] [debug line = 426:0]
  %308 = and i64 %307, 255, !dbg !1023            ; [#uses=1 type=i64] [debug line = 426:0]
  %309 = trunc i64 %308 to i8, !dbg !1023         ; [#uses=1 type=i8] [debug line = 426:0]
  %310 = load i8** %3, align 8, !dbg !1023        ; [#uses=1 type=i8*] [debug line = 426:0]
  %311 = load i32* %i, align 4, !dbg !1023        ; [#uses=1 type=i32] [debug line = 426:0]
  %312 = mul nsw i32 8, %311, !dbg !1023          ; [#uses=1 type=i32] [debug line = 426:0]
  %313 = sext i32 %312 to i64, !dbg !1023         ; [#uses=1 type=i64] [debug line = 426:0]
  %314 = getelementptr inbounds i8* %310, i64 %313, !dbg !1023 ; [#uses=1 type=i8*] [debug line = 426:0]
  %315 = getelementptr inbounds i8* %314, i64 5, !dbg !1023 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %309, i8* %315, align 1, !dbg !1023    ; [debug line = 426:0]
  %316 = load i32* %i, align 4, !dbg !1023        ; [#uses=1 type=i32] [debug line = 426:0]
  %317 = sext i32 %316 to i64, !dbg !1023         ; [#uses=1 type=i64] [debug line = 426:0]
  %318 = load %struct.sha512_context_** %2, align 8, !dbg !1023 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:0]
  %319 = getelementptr inbounds %struct.sha512_context_* %318, i32 0, i32 1, !dbg !1023 ; [#uses=1 type=[8 x i64]*] [debug line = 426:0]
  %320 = getelementptr inbounds [8 x i64]* %319, i32 0, i64 %317, !dbg !1023 ; [#uses=1 type=i64*] [debug line = 426:0]
  %321 = load i64* %320, align 8, !dbg !1023      ; [#uses=1 type=i64] [debug line = 426:0]
  %322 = lshr i64 %321, 8, !dbg !1023             ; [#uses=1 type=i64] [debug line = 426:0]
  %323 = and i64 %322, 255, !dbg !1023            ; [#uses=1 type=i64] [debug line = 426:0]
  %324 = trunc i64 %323 to i8, !dbg !1023         ; [#uses=1 type=i8] [debug line = 426:0]
  %325 = load i8** %3, align 8, !dbg !1023        ; [#uses=1 type=i8*] [debug line = 426:0]
  %326 = load i32* %i, align 4, !dbg !1023        ; [#uses=1 type=i32] [debug line = 426:0]
  %327 = mul nsw i32 8, %326, !dbg !1023          ; [#uses=1 type=i32] [debug line = 426:0]
  %328 = sext i32 %327 to i64, !dbg !1023         ; [#uses=1 type=i64] [debug line = 426:0]
  %329 = getelementptr inbounds i8* %325, i64 %328, !dbg !1023 ; [#uses=1 type=i8*] [debug line = 426:0]
  %330 = getelementptr inbounds i8* %329, i64 6, !dbg !1023 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %324, i8* %330, align 1, !dbg !1023    ; [debug line = 426:0]
  %331 = load i32* %i, align 4, !dbg !1023        ; [#uses=1 type=i32] [debug line = 426:0]
  %332 = sext i32 %331 to i64, !dbg !1023         ; [#uses=1 type=i64] [debug line = 426:0]
  %333 = load %struct.sha512_context_** %2, align 8, !dbg !1023 ; [#uses=1 type=%struct.sha512_context_*] [debug line = 426:0]
  %334 = getelementptr inbounds %struct.sha512_context_* %333, i32 0, i32 1, !dbg !1023 ; [#uses=1 type=[8 x i64]*] [debug line = 426:0]
  %335 = getelementptr inbounds [8 x i64]* %334, i32 0, i64 %332, !dbg !1023 ; [#uses=1 type=i64*] [debug line = 426:0]
  %336 = load i64* %335, align 8, !dbg !1023      ; [#uses=1 type=i64] [debug line = 426:0]
  %337 = and i64 %336, 255, !dbg !1023            ; [#uses=1 type=i64] [debug line = 426:0]
  %338 = trunc i64 %337 to i8, !dbg !1023         ; [#uses=1 type=i8] [debug line = 426:0]
  %339 = load i8** %3, align 8, !dbg !1023        ; [#uses=1 type=i8*] [debug line = 426:0]
  %340 = load i32* %i, align 4, !dbg !1023        ; [#uses=1 type=i32] [debug line = 426:0]
  %341 = mul nsw i32 8, %340, !dbg !1023          ; [#uses=1 type=i32] [debug line = 426:0]
  %342 = sext i32 %341 to i64, !dbg !1023         ; [#uses=1 type=i64] [debug line = 426:0]
  %343 = getelementptr inbounds i8* %339, i64 %342, !dbg !1023 ; [#uses=1 type=i8*] [debug line = 426:0]
  %344 = getelementptr inbounds i8* %343, i64 7, !dbg !1023 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %338, i8* %344, align 1, !dbg !1023    ; [debug line = 426:0]
  br label %345, !dbg !1024                       ; [debug line = 427:2]

; <label>:345                                     ; preds = %225
  %346 = load i32* %i, align 4, !dbg !1025        ; [#uses=1 type=i32] [debug line = 425:21]
  %347 = add nsw i32 %346, 1, !dbg !1025          ; [#uses=1 type=i32] [debug line = 425:21]
  store i32 %347, i32* %i, align 4, !dbg !1025    ; [debug line = 425:21]
  br label %222, !dbg !1025                       ; [debug line = 425:21]

; <label>:348                                     ; preds = %222
  store i32 0, i32* %1, !dbg !1026                ; [debug line = 429:2]
  br label %349, !dbg !1026                       ; [debug line = 429:2]

; <label>:349                                     ; preds = %348, %8
  %350 = load i32* %1, !dbg !1027                 ; [#uses=1 type=i32] [debug line = 430:1]
  ret i32 %350, !dbg !1027                        ; [debug line = 430:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_sc25519_from32bytes(%struct.crypto_sign_ed25519_ref_fe25519* %r, i8* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca i8*, align 8                        ; [#uses=3 type=i8**]
  %i = alloca i32, align 4                        ; [#uses=11 type=i32*]
  %t = alloca [64 x i32], align 16                ; [#uses=3 type=[64 x i32]*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1028), !dbg !1029 ; [debug line = 92:83] [debug variable = r]
  store i8* %x, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !1030), !dbg !1031 ; [debug line = 92:106] [debug variable = x]
  %3 = load i8** %2, align 8, !dbg !1032          ; [#uses=1 type=i8*] [debug line = 93:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 32) nounwind, !dbg !1032 ; [debug line = 93:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1034), !dbg !1035 ; [debug line = 94:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !1036), !dbg !1038 ; [debug line = 95:17] [debug variable = t]
  store i32 0, i32* %i, align 4, !dbg !1039       ; [debug line = 96:7]
  br label %4, !dbg !1039                         ; [debug line = 96:7]

; <label>:4                                       ; preds = %17, %0
  %5 = load i32* %i, align 4, !dbg !1039          ; [#uses=1 type=i32] [debug line = 96:7]
  %6 = icmp slt i32 %5, 32, !dbg !1039            ; [#uses=1 type=i1] [debug line = 96:7]
  br i1 %6, label %7, label %20, !dbg !1039       ; [debug line = 96:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1041          ; [#uses=1 type=i32] [debug line = 96:21]
  %9 = sext i32 %8 to i64, !dbg !1041             ; [#uses=1 type=i64] [debug line = 96:21]
  %10 = load i8** %2, align 8, !dbg !1041         ; [#uses=1 type=i8*] [debug line = 96:21]
  %11 = getelementptr inbounds i8* %10, i64 %9, !dbg !1041 ; [#uses=1 type=i8*] [debug line = 96:21]
  %12 = load i8* %11, align 1, !dbg !1041         ; [#uses=1 type=i8] [debug line = 96:21]
  %13 = zext i8 %12 to i32, !dbg !1041            ; [#uses=1 type=i32] [debug line = 96:21]
  %14 = load i32* %i, align 4, !dbg !1041         ; [#uses=1 type=i32] [debug line = 96:21]
  %15 = sext i32 %14 to i64, !dbg !1041           ; [#uses=1 type=i64] [debug line = 96:21]
  %16 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %15, !dbg !1041 ; [#uses=1 type=i32*] [debug line = 96:21]
  store i32 %13, i32* %16, align 4, !dbg !1041    ; [debug line = 96:21]
  br label %17, !dbg !1041                        ; [debug line = 96:21]

; <label>:17                                      ; preds = %7
  %18 = load i32* %i, align 4, !dbg !1042         ; [#uses=1 type=i32] [debug line = 96:16]
  %19 = add nsw i32 %18, 1, !dbg !1042            ; [#uses=1 type=i32] [debug line = 96:16]
  store i32 %19, i32* %i, align 4, !dbg !1042     ; [debug line = 96:16]
  br label %4, !dbg !1042                         ; [debug line = 96:16]

; <label>:20                                      ; preds = %4
  store i32 32, i32* %i, align 4, !dbg !1043      ; [debug line = 97:7]
  br label %21, !dbg !1043                        ; [debug line = 97:7]

; <label>:21                                      ; preds = %28, %20
  %22 = load i32* %i, align 4, !dbg !1043         ; [#uses=1 type=i32] [debug line = 97:7]
  %23 = icmp slt i32 %22, 64, !dbg !1043          ; [#uses=1 type=i1] [debug line = 97:7]
  br i1 %23, label %24, label %31, !dbg !1043     ; [debug line = 97:7]

; <label>:24                                      ; preds = %21
  %25 = load i32* %i, align 4, !dbg !1045         ; [#uses=1 type=i32] [debug line = 97:22]
  %26 = sext i32 %25 to i64, !dbg !1045           ; [#uses=1 type=i64] [debug line = 97:22]
  %27 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %26, !dbg !1045 ; [#uses=1 type=i32*] [debug line = 97:22]
  store i32 0, i32* %27, align 4, !dbg !1045      ; [debug line = 97:22]
  br label %28, !dbg !1045                        ; [debug line = 97:22]

; <label>:28                                      ; preds = %24
  %29 = load i32* %i, align 4, !dbg !1046         ; [#uses=1 type=i32] [debug line = 97:17]
  %30 = add nsw i32 %29, 1, !dbg !1046            ; [#uses=1 type=i32] [debug line = 97:17]
  store i32 %30, i32* %i, align 4, !dbg !1046     ; [debug line = 97:17]
  br label %21, !dbg !1046                        ; [debug line = 97:17]

; <label>:31                                      ; preds = %21
  %32 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1047 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 98:3]
  %33 = getelementptr inbounds [64 x i32]* %t, i32 0, i32 0, !dbg !1047 ; [#uses=1 type=i32*] [debug line = 98:3]
  call void @barrett_reduce(%struct.crypto_sign_ed25519_ref_fe25519* %32, i32* %33), !dbg !1047 ; [debug line = 98:3]
  ret void, !dbg !1048                            ; [debug line = 99:1]
}

; [#uses=3]
define internal void @barrett_reduce(%struct.crypto_sign_ed25519_ref_fe25519* %r, i32* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca i32*, align 8                       ; [#uses=4 type=i32**]
  %i = alloca i32, align 4                        ; [#uses=45 type=i32*]
  %j = alloca i32, align 4                        ; [#uses=14 type=i32*]
  %q2 = alloca [66 x i32], align 16               ; [#uses=7 type=[66 x i32]*]
  %q3 = alloca i32*, align 8                      ; [#uses=2 type=i32**]
  %r1 = alloca [33 x i32], align 16               ; [#uses=3 type=[33 x i32]*]
  %r2 = alloca [33 x i32], align 16               ; [#uses=6 type=[33 x i32]*]
  %carry = alloca i32, align 4                    ; [#uses=6 type=i32*]
  %pb = alloca i32, align 4                       ; [#uses=6 type=i32*]
  %b = alloca i32, align 4                        ; [#uses=3 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1049), !dbg !1050 ; [debug line = 41:61] [debug variable = r]
  store i32* %x, i32** %2, align 8
  call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !1051), !dbg !1052 ; [debug line = 41:84] [debug variable = x]
  %3 = load i32** %2, align 8, !dbg !1053         ; [#uses=1 type=i32*] [debug line = 42:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i32* %3, i32 64) nounwind, !dbg !1053 ; [debug line = 42:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1055), !dbg !1056 ; [debug line = 44:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !1057), !dbg !1058 ; [debug line = 44:9] [debug variable = j]
  call void @llvm.dbg.declare(metadata !{[66 x i32]* %q2}, metadata !1059), !dbg !1063 ; [debug line = 45:17] [debug variable = q2]
  call void @llvm.dbg.declare(metadata !{i32** %q3}, metadata !1064), !dbg !1066 ; [debug line = 46:18] [debug variable = q3]
  %4 = getelementptr inbounds [66 x i32]* %q2, i32 0, i32 0, !dbg !1067 ; [#uses=1 type=i32*] [debug line = 46:30]
  %5 = getelementptr inbounds i32* %4, i64 33, !dbg !1067 ; [#uses=1 type=i32*] [debug line = 46:30]
  store i32* %5, i32** %q3, align 8, !dbg !1067   ; [debug line = 46:30]
  call void @llvm.dbg.declare(metadata !{[33 x i32]* %r1}, metadata !1068), !dbg !1070 ; [debug line = 47:17] [debug variable = r1]
  call void @llvm.dbg.declare(metadata !{[33 x i32]* %r2}, metadata !1071), !dbg !1072 ; [debug line = 48:17] [debug variable = r2]
  call void @llvm.dbg.declare(metadata !{i32* %carry}, metadata !1073), !dbg !1074 ; [debug line = 49:17] [debug variable = carry]
  call void @llvm.dbg.declare(metadata !{i32* %pb}, metadata !1075), !dbg !1076 ; [debug line = 50:17] [debug variable = pb]
  store i32 0, i32* %pb, align 4, !dbg !1077      ; [debug line = 50:23]
  call void @llvm.dbg.declare(metadata !{i32* %b}, metadata !1078), !dbg !1079 ; [debug line = 51:17] [debug variable = b]
  store i32 0, i32* %i, align 4, !dbg !1080       ; [debug line = 53:8]
  br label %6, !dbg !1080                         ; [debug line = 53:8]

; <label>:6                                       ; preds = %13, %0
  %7 = load i32* %i, align 4, !dbg !1080          ; [#uses=1 type=i32] [debug line = 53:8]
  %8 = icmp slt i32 %7, 66, !dbg !1080            ; [#uses=1 type=i1] [debug line = 53:8]
  br i1 %8, label %9, label %16, !dbg !1080       ; [debug line = 53:8]

; <label>:9                                       ; preds = %6
  %10 = load i32* %i, align 4, !dbg !1082         ; [#uses=1 type=i32] [debug line = 53:26]
  %11 = sext i32 %10 to i64, !dbg !1082           ; [#uses=1 type=i64] [debug line = 53:26]
  %12 = getelementptr inbounds [66 x i32]* %q2, i32 0, i64 %11, !dbg !1082 ; [#uses=1 type=i32*] [debug line = 53:26]
  store i32 0, i32* %12, align 4, !dbg !1082      ; [debug line = 53:26]
  br label %13, !dbg !1082                        ; [debug line = 53:26]

; <label>:13                                      ; preds = %9
  %14 = load i32* %i, align 4, !dbg !1083         ; [#uses=1 type=i32] [debug line = 53:21]
  %15 = add nsw i32 %14, 1, !dbg !1083            ; [#uses=1 type=i32] [debug line = 53:21]
  store i32 %15, i32* %i, align 4, !dbg !1083     ; [debug line = 53:21]
  br label %6, !dbg !1083                         ; [debug line = 53:21]

; <label>:16                                      ; preds = %6
  store i32 0, i32* %i, align 4, !dbg !1084       ; [debug line = 54:8]
  br label %17, !dbg !1084                        ; [debug line = 54:8]

; <label>:17                                      ; preds = %24, %16
  %18 = load i32* %i, align 4, !dbg !1084         ; [#uses=1 type=i32] [debug line = 54:8]
  %19 = icmp slt i32 %18, 33, !dbg !1084          ; [#uses=1 type=i1] [debug line = 54:8]
  br i1 %19, label %20, label %27, !dbg !1084     ; [debug line = 54:8]

; <label>:20                                      ; preds = %17
  %21 = load i32* %i, align 4, !dbg !1086         ; [#uses=1 type=i32] [debug line = 54:26]
  %22 = sext i32 %21 to i64, !dbg !1086           ; [#uses=1 type=i64] [debug line = 54:26]
  %23 = getelementptr inbounds [33 x i32]* %r2, i32 0, i64 %22, !dbg !1086 ; [#uses=1 type=i32*] [debug line = 54:26]
  store i32 0, i32* %23, align 4, !dbg !1086      ; [debug line = 54:26]
  br label %24, !dbg !1086                        ; [debug line = 54:26]

; <label>:24                                      ; preds = %20
  %25 = load i32* %i, align 4, !dbg !1087         ; [#uses=1 type=i32] [debug line = 54:21]
  %26 = add nsw i32 %25, 1, !dbg !1087            ; [#uses=1 type=i32] [debug line = 54:21]
  store i32 %26, i32* %i, align 4, !dbg !1087     ; [debug line = 54:21]
  br label %17, !dbg !1087                        ; [debug line = 54:21]

; <label>:27                                      ; preds = %17
  store i32 0, i32* %i, align 4, !dbg !1088       ; [debug line = 56:7]
  br label %28, !dbg !1088                        ; [debug line = 56:7]

; <label>:28                                      ; preds = %64, %27
  %29 = load i32* %i, align 4, !dbg !1088         ; [#uses=1 type=i32] [debug line = 56:7]
  %30 = icmp slt i32 %29, 33, !dbg !1088          ; [#uses=1 type=i1] [debug line = 56:7]
  br i1 %30, label %31, label %67, !dbg !1088     ; [debug line = 56:7]

; <label>:31                                      ; preds = %28
  store i32 0, i32* %j, align 4, !dbg !1090       ; [debug line = 57:9]
  br label %32, !dbg !1090                        ; [debug line = 57:9]

; <label>:32                                      ; preds = %60, %31
  %33 = load i32* %j, align 4, !dbg !1090         ; [#uses=1 type=i32] [debug line = 57:9]
  %34 = icmp slt i32 %33, 33, !dbg !1090          ; [#uses=1 type=i1] [debug line = 57:9]
  br i1 %34, label %35, label %63, !dbg !1090     ; [debug line = 57:9]

; <label>:35                                      ; preds = %32
  %36 = load i32* %i, align 4, !dbg !1092         ; [#uses=1 type=i32] [debug line = 58:7]
  %37 = load i32* %j, align 4, !dbg !1092         ; [#uses=1 type=i32] [debug line = 58:7]
  %38 = add nsw i32 %36, %37, !dbg !1092          ; [#uses=1 type=i32] [debug line = 58:7]
  %39 = icmp sge i32 %38, 31, !dbg !1092          ; [#uses=1 type=i1] [debug line = 58:7]
  br i1 %39, label %40, label %59, !dbg !1092     ; [debug line = 58:7]

; <label>:40                                      ; preds = %35
  %41 = load i32* %i, align 4, !dbg !1093         ; [#uses=1 type=i32] [debug line = 58:21]
  %42 = sext i32 %41 to i64, !dbg !1093           ; [#uses=1 type=i64] [debug line = 58:21]
  %43 = getelementptr inbounds [33 x i32]* @mu, i32 0, i64 %42, !dbg !1093 ; [#uses=1 type=i32*] [debug line = 58:21]
  %44 = load i32* %43, align 4, !dbg !1093        ; [#uses=1 type=i32] [debug line = 58:21]
  %45 = load i32* %j, align 4, !dbg !1093         ; [#uses=1 type=i32] [debug line = 58:21]
  %46 = add nsw i32 %45, 31, !dbg !1093           ; [#uses=1 type=i32] [debug line = 58:21]
  %47 = sext i32 %46 to i64, !dbg !1093           ; [#uses=1 type=i64] [debug line = 58:21]
  %48 = load i32** %2, align 8, !dbg !1093        ; [#uses=1 type=i32*] [debug line = 58:21]
  %49 = getelementptr inbounds i32* %48, i64 %47, !dbg !1093 ; [#uses=1 type=i32*] [debug line = 58:21]
  %50 = load i32* %49, align 4, !dbg !1093        ; [#uses=1 type=i32] [debug line = 58:21]
  %51 = mul i32 %44, %50, !dbg !1093              ; [#uses=1 type=i32] [debug line = 58:21]
  %52 = load i32* %i, align 4, !dbg !1093         ; [#uses=1 type=i32] [debug line = 58:21]
  %53 = load i32* %j, align 4, !dbg !1093         ; [#uses=1 type=i32] [debug line = 58:21]
  %54 = add nsw i32 %52, %53, !dbg !1093          ; [#uses=1 type=i32] [debug line = 58:21]
  %55 = sext i32 %54 to i64, !dbg !1093           ; [#uses=1 type=i64] [debug line = 58:21]
  %56 = getelementptr inbounds [66 x i32]* %q2, i32 0, i64 %55, !dbg !1093 ; [#uses=2 type=i32*] [debug line = 58:21]
  %57 = load i32* %56, align 4, !dbg !1093        ; [#uses=1 type=i32] [debug line = 58:21]
  %58 = add i32 %57, %51, !dbg !1093              ; [#uses=1 type=i32] [debug line = 58:21]
  store i32 %58, i32* %56, align 4, !dbg !1093    ; [debug line = 58:21]
  br label %59, !dbg !1093                        ; [debug line = 58:21]

; <label>:59                                      ; preds = %40, %35
  br label %60, !dbg !1093                        ; [debug line = 58:21]

; <label>:60                                      ; preds = %59
  %61 = load i32* %j, align 4, !dbg !1094         ; [#uses=1 type=i32] [debug line = 57:18]
  %62 = add nsw i32 %61, 1, !dbg !1094            ; [#uses=1 type=i32] [debug line = 57:18]
  store i32 %62, i32* %j, align 4, !dbg !1094     ; [debug line = 57:18]
  br label %32, !dbg !1094                        ; [debug line = 57:18]

; <label>:63                                      ; preds = %32
  br label %64, !dbg !1095                        ; [debug line = 58:44]

; <label>:64                                      ; preds = %63
  %65 = load i32* %i, align 4, !dbg !1096         ; [#uses=1 type=i32] [debug line = 56:16]
  %66 = add nsw i32 %65, 1, !dbg !1096            ; [#uses=1 type=i32] [debug line = 56:16]
  store i32 %66, i32* %i, align 4, !dbg !1096     ; [debug line = 56:16]
  br label %28, !dbg !1096                        ; [debug line = 56:16]

; <label>:67                                      ; preds = %28
  %68 = getelementptr inbounds [66 x i32]* %q2, i32 0, i64 31, !dbg !1097 ; [#uses=1 type=i32*] [debug line = 59:3]
  %69 = load i32* %68, align 4, !dbg !1097        ; [#uses=1 type=i32] [debug line = 59:3]
  %70 = lshr i32 %69, 8, !dbg !1097               ; [#uses=1 type=i32] [debug line = 59:3]
  store i32 %70, i32* %carry, align 4, !dbg !1097 ; [debug line = 59:3]
  %71 = load i32* %carry, align 4, !dbg !1098     ; [#uses=1 type=i32] [debug line = 60:3]
  %72 = getelementptr inbounds [66 x i32]* %q2, i32 0, i64 32, !dbg !1098 ; [#uses=2 type=i32*] [debug line = 60:3]
  %73 = load i32* %72, align 4, !dbg !1098        ; [#uses=1 type=i32] [debug line = 60:3]
  %74 = add i32 %73, %71, !dbg !1098              ; [#uses=1 type=i32] [debug line = 60:3]
  store i32 %74, i32* %72, align 4, !dbg !1098    ; [debug line = 60:3]
  %75 = getelementptr inbounds [66 x i32]* %q2, i32 0, i64 32, !dbg !1099 ; [#uses=1 type=i32*] [debug line = 61:3]
  %76 = load i32* %75, align 4, !dbg !1099        ; [#uses=1 type=i32] [debug line = 61:3]
  %77 = lshr i32 %76, 8, !dbg !1099               ; [#uses=1 type=i32] [debug line = 61:3]
  store i32 %77, i32* %carry, align 4, !dbg !1099 ; [debug line = 61:3]
  %78 = load i32* %carry, align 4, !dbg !1100     ; [#uses=1 type=i32] [debug line = 62:3]
  %79 = getelementptr inbounds [66 x i32]* %q2, i32 0, i64 33, !dbg !1100 ; [#uses=2 type=i32*] [debug line = 62:3]
  %80 = load i32* %79, align 4, !dbg !1100        ; [#uses=1 type=i32] [debug line = 62:3]
  %81 = add i32 %80, %78, !dbg !1100              ; [#uses=1 type=i32] [debug line = 62:3]
  store i32 %81, i32* %79, align 4, !dbg !1100    ; [debug line = 62:3]
  store i32 0, i32* %i, align 4, !dbg !1101       ; [debug line = 64:7]
  br label %82, !dbg !1101                        ; [debug line = 64:7]

; <label>:82                                      ; preds = %94, %67
  %83 = load i32* %i, align 4, !dbg !1101         ; [#uses=1 type=i32] [debug line = 64:7]
  %84 = icmp slt i32 %83, 33, !dbg !1101          ; [#uses=1 type=i1] [debug line = 64:7]
  br i1 %84, label %85, label %97, !dbg !1101     ; [debug line = 64:7]

; <label>:85                                      ; preds = %82
  %86 = load i32* %i, align 4, !dbg !1103         ; [#uses=1 type=i32] [debug line = 64:20]
  %87 = sext i32 %86 to i64, !dbg !1103           ; [#uses=1 type=i64] [debug line = 64:20]
  %88 = load i32** %2, align 8, !dbg !1103        ; [#uses=1 type=i32*] [debug line = 64:20]
  %89 = getelementptr inbounds i32* %88, i64 %87, !dbg !1103 ; [#uses=1 type=i32*] [debug line = 64:20]
  %90 = load i32* %89, align 4, !dbg !1103        ; [#uses=1 type=i32] [debug line = 64:20]
  %91 = load i32* %i, align 4, !dbg !1103         ; [#uses=1 type=i32] [debug line = 64:20]
  %92 = sext i32 %91 to i64, !dbg !1103           ; [#uses=1 type=i64] [debug line = 64:20]
  %93 = getelementptr inbounds [33 x i32]* %r1, i32 0, i64 %92, !dbg !1103 ; [#uses=1 type=i32*] [debug line = 64:20]
  store i32 %90, i32* %93, align 4, !dbg !1103    ; [debug line = 64:20]
  br label %94, !dbg !1103                        ; [debug line = 64:20]

; <label>:94                                      ; preds = %85
  %95 = load i32* %i, align 4, !dbg !1104         ; [#uses=1 type=i32] [debug line = 64:16]
  %96 = add nsw i32 %95, 1, !dbg !1104            ; [#uses=1 type=i32] [debug line = 64:16]
  store i32 %96, i32* %i, align 4, !dbg !1104     ; [debug line = 64:16]
  br label %82, !dbg !1104                        ; [debug line = 64:16]

; <label>:97                                      ; preds = %82
  store i32 0, i32* %i, align 4, !dbg !1105       ; [debug line = 65:7]
  br label %98, !dbg !1105                        ; [debug line = 65:7]

; <label>:98                                      ; preds = %133, %97
  %99 = load i32* %i, align 4, !dbg !1105         ; [#uses=1 type=i32] [debug line = 65:7]
  %100 = icmp slt i32 %99, 32, !dbg !1105         ; [#uses=1 type=i1] [debug line = 65:7]
  br i1 %100, label %101, label %136, !dbg !1105  ; [debug line = 65:7]

; <label>:101                                     ; preds = %98
  store i32 0, i32* %j, align 4, !dbg !1107       ; [debug line = 66:9]
  br label %102, !dbg !1107                       ; [debug line = 66:9]

; <label>:102                                     ; preds = %129, %101
  %103 = load i32* %j, align 4, !dbg !1107        ; [#uses=1 type=i32] [debug line = 66:9]
  %104 = icmp slt i32 %103, 33, !dbg !1107        ; [#uses=1 type=i1] [debug line = 66:9]
  br i1 %104, label %105, label %132, !dbg !1107  ; [debug line = 66:9]

; <label>:105                                     ; preds = %102
  %106 = load i32* %i, align 4, !dbg !1109        ; [#uses=1 type=i32] [debug line = 67:7]
  %107 = load i32* %j, align 4, !dbg !1109        ; [#uses=1 type=i32] [debug line = 67:7]
  %108 = add nsw i32 %106, %107, !dbg !1109       ; [#uses=1 type=i32] [debug line = 67:7]
  %109 = icmp slt i32 %108, 33, !dbg !1109        ; [#uses=1 type=i1] [debug line = 67:7]
  br i1 %109, label %110, label %128, !dbg !1109  ; [debug line = 67:7]

; <label>:110                                     ; preds = %105
  %111 = load i32* %i, align 4, !dbg !1110        ; [#uses=1 type=i32] [debug line = 67:20]
  %112 = sext i32 %111 to i64, !dbg !1110         ; [#uses=1 type=i64] [debug line = 67:20]
  %113 = getelementptr inbounds [32 x i32]* @m, i32 0, i64 %112, !dbg !1110 ; [#uses=1 type=i32*] [debug line = 67:20]
  %114 = load i32* %113, align 4, !dbg !1110      ; [#uses=1 type=i32] [debug line = 67:20]
  %115 = load i32* %j, align 4, !dbg !1110        ; [#uses=1 type=i32] [debug line = 67:20]
  %116 = sext i32 %115 to i64, !dbg !1110         ; [#uses=1 type=i64] [debug line = 67:20]
  %117 = load i32** %q3, align 8, !dbg !1110      ; [#uses=1 type=i32*] [debug line = 67:20]
  %118 = getelementptr inbounds i32* %117, i64 %116, !dbg !1110 ; [#uses=1 type=i32*] [debug line = 67:20]
  %119 = load i32* %118, align 4, !dbg !1110      ; [#uses=1 type=i32] [debug line = 67:20]
  %120 = mul i32 %114, %119, !dbg !1110           ; [#uses=1 type=i32] [debug line = 67:20]
  %121 = load i32* %i, align 4, !dbg !1110        ; [#uses=1 type=i32] [debug line = 67:20]
  %122 = load i32* %j, align 4, !dbg !1110        ; [#uses=1 type=i32] [debug line = 67:20]
  %123 = add nsw i32 %121, %122, !dbg !1110       ; [#uses=1 type=i32] [debug line = 67:20]
  %124 = sext i32 %123 to i64, !dbg !1110         ; [#uses=1 type=i64] [debug line = 67:20]
  %125 = getelementptr inbounds [33 x i32]* %r2, i32 0, i64 %124, !dbg !1110 ; [#uses=2 type=i32*] [debug line = 67:20]
  %126 = load i32* %125, align 4, !dbg !1110      ; [#uses=1 type=i32] [debug line = 67:20]
  %127 = add i32 %126, %120, !dbg !1110           ; [#uses=1 type=i32] [debug line = 67:20]
  store i32 %127, i32* %125, align 4, !dbg !1110  ; [debug line = 67:20]
  br label %128, !dbg !1110                       ; [debug line = 67:20]

; <label>:128                                     ; preds = %110, %105
  br label %129, !dbg !1110                       ; [debug line = 67:20]

; <label>:129                                     ; preds = %128
  %130 = load i32* %j, align 4, !dbg !1111        ; [#uses=1 type=i32] [debug line = 66:18]
  %131 = add nsw i32 %130, 1, !dbg !1111          ; [#uses=1 type=i32] [debug line = 66:18]
  store i32 %131, i32* %j, align 4, !dbg !1111    ; [debug line = 66:18]
  br label %102, !dbg !1111                       ; [debug line = 66:18]

; <label>:132                                     ; preds = %102
  br label %133, !dbg !1112                       ; [debug line = 67:40]

; <label>:133                                     ; preds = %132
  %134 = load i32* %i, align 4, !dbg !1113        ; [#uses=1 type=i32] [debug line = 65:16]
  %135 = add nsw i32 %134, 1, !dbg !1113          ; [#uses=1 type=i32] [debug line = 65:16]
  store i32 %135, i32* %i, align 4, !dbg !1113    ; [debug line = 65:16]
  br label %98, !dbg !1113                        ; [debug line = 65:16]

; <label>:136                                     ; preds = %98
  store i32 0, i32* %i, align 4, !dbg !1114       ; [debug line = 69:7]
  br label %137, !dbg !1114                       ; [debug line = 69:7]

; <label>:137                                     ; preds = %158, %136
  %138 = load i32* %i, align 4, !dbg !1114        ; [#uses=1 type=i32] [debug line = 69:7]
  %139 = icmp slt i32 %138, 32, !dbg !1114        ; [#uses=1 type=i1] [debug line = 69:7]
  br i1 %139, label %140, label %161, !dbg !1114  ; [debug line = 69:7]

; <label>:140                                     ; preds = %137
  %141 = load i32* %i, align 4, !dbg !1116        ; [#uses=1 type=i32] [debug line = 71:5]
  %142 = sext i32 %141 to i64, !dbg !1116         ; [#uses=1 type=i64] [debug line = 71:5]
  %143 = getelementptr inbounds [33 x i32]* %r2, i32 0, i64 %142, !dbg !1116 ; [#uses=1 type=i32*] [debug line = 71:5]
  %144 = load i32* %143, align 4, !dbg !1116      ; [#uses=1 type=i32] [debug line = 71:5]
  %145 = lshr i32 %144, 8, !dbg !1116             ; [#uses=1 type=i32] [debug line = 71:5]
  store i32 %145, i32* %carry, align 4, !dbg !1116 ; [debug line = 71:5]
  %146 = load i32* %carry, align 4, !dbg !1118    ; [#uses=1 type=i32] [debug line = 72:5]
  %147 = load i32* %i, align 4, !dbg !1118        ; [#uses=1 type=i32] [debug line = 72:5]
  %148 = add nsw i32 %147, 1, !dbg !1118          ; [#uses=1 type=i32] [debug line = 72:5]
  %149 = sext i32 %148 to i64, !dbg !1118         ; [#uses=1 type=i64] [debug line = 72:5]
  %150 = getelementptr inbounds [33 x i32]* %r2, i32 0, i64 %149, !dbg !1118 ; [#uses=2 type=i32*] [debug line = 72:5]
  %151 = load i32* %150, align 4, !dbg !1118      ; [#uses=1 type=i32] [debug line = 72:5]
  %152 = add i32 %151, %146, !dbg !1118           ; [#uses=1 type=i32] [debug line = 72:5]
  store i32 %152, i32* %150, align 4, !dbg !1118  ; [debug line = 72:5]
  %153 = load i32* %i, align 4, !dbg !1119        ; [#uses=1 type=i32] [debug line = 73:5]
  %154 = sext i32 %153 to i64, !dbg !1119         ; [#uses=1 type=i64] [debug line = 73:5]
  %155 = getelementptr inbounds [33 x i32]* %r2, i32 0, i64 %154, !dbg !1119 ; [#uses=2 type=i32*] [debug line = 73:5]
  %156 = load i32* %155, align 4, !dbg !1119      ; [#uses=1 type=i32] [debug line = 73:5]
  %157 = and i32 %156, 255, !dbg !1119            ; [#uses=1 type=i32] [debug line = 73:5]
  store i32 %157, i32* %155, align 4, !dbg !1119  ; [debug line = 73:5]
  br label %158, !dbg !1120                       ; [debug line = 74:3]

; <label>:158                                     ; preds = %140
  %159 = load i32* %i, align 4, !dbg !1121        ; [#uses=1 type=i32] [debug line = 69:16]
  %160 = add nsw i32 %159, 1, !dbg !1121          ; [#uses=1 type=i32] [debug line = 69:16]
  store i32 %160, i32* %i, align 4, !dbg !1121    ; [debug line = 69:16]
  br label %137, !dbg !1121                       ; [debug line = 69:16]

; <label>:161                                     ; preds = %137
  store i32 0, i32* %i, align 4, !dbg !1122       ; [debug line = 76:7]
  br label %162, !dbg !1122                       ; [debug line = 76:7]

; <label>:162                                     ; preds = %193, %161
  %163 = load i32* %i, align 4, !dbg !1122        ; [#uses=1 type=i32] [debug line = 76:7]
  %164 = icmp slt i32 %163, 32, !dbg !1122        ; [#uses=1 type=i1] [debug line = 76:7]
  br i1 %164, label %165, label %196, !dbg !1122  ; [debug line = 76:7]

; <label>:165                                     ; preds = %162
  %166 = load i32* %i, align 4, !dbg !1124        ; [#uses=1 type=i32] [debug line = 78:5]
  %167 = sext i32 %166 to i64, !dbg !1124         ; [#uses=1 type=i64] [debug line = 78:5]
  %168 = getelementptr inbounds [33 x i32]* %r2, i32 0, i64 %167, !dbg !1124 ; [#uses=1 type=i32*] [debug line = 78:5]
  %169 = load i32* %168, align 4, !dbg !1124      ; [#uses=1 type=i32] [debug line = 78:5]
  %170 = load i32* %pb, align 4, !dbg !1124       ; [#uses=1 type=i32] [debug line = 78:5]
  %171 = add i32 %170, %169, !dbg !1124           ; [#uses=1 type=i32] [debug line = 78:5]
  store i32 %171, i32* %pb, align 4, !dbg !1124   ; [debug line = 78:5]
  %172 = load i32* %i, align 4, !dbg !1126        ; [#uses=1 type=i32] [debug line = 79:9]
  %173 = sext i32 %172 to i64, !dbg !1126         ; [#uses=1 type=i64] [debug line = 79:9]
  %174 = getelementptr inbounds [33 x i32]* %r1, i32 0, i64 %173, !dbg !1126 ; [#uses=1 type=i32*] [debug line = 79:9]
  %175 = load i32* %174, align 4, !dbg !1126      ; [#uses=1 type=i32] [debug line = 79:9]
  %176 = load i32* %pb, align 4, !dbg !1126       ; [#uses=1 type=i32] [debug line = 79:9]
  %177 = call i32 @lt(i32 %175, i32 %176), !dbg !1126 ; [#uses=1 type=i32] [debug line = 79:9]
  store i32 %177, i32* %b, align 4, !dbg !1126    ; [debug line = 79:9]
  %178 = load i32* %i, align 4, !dbg !1127        ; [#uses=1 type=i32] [debug line = 80:5]
  %179 = sext i32 %178 to i64, !dbg !1127         ; [#uses=1 type=i64] [debug line = 80:5]
  %180 = getelementptr inbounds [33 x i32]* %r1, i32 0, i64 %179, !dbg !1127 ; [#uses=1 type=i32*] [debug line = 80:5]
  %181 = load i32* %180, align 4, !dbg !1127      ; [#uses=1 type=i32] [debug line = 80:5]
  %182 = load i32* %pb, align 4, !dbg !1127       ; [#uses=1 type=i32] [debug line = 80:5]
  %183 = sub i32 %181, %182, !dbg !1127           ; [#uses=1 type=i32] [debug line = 80:5]
  %184 = load i32* %b, align 4, !dbg !1127        ; [#uses=1 type=i32] [debug line = 80:5]
  %185 = shl i32 %184, 8, !dbg !1127              ; [#uses=1 type=i32] [debug line = 80:5]
  %186 = add i32 %183, %185, !dbg !1127           ; [#uses=1 type=i32] [debug line = 80:5]
  %187 = load i32* %i, align 4, !dbg !1127        ; [#uses=1 type=i32] [debug line = 80:5]
  %188 = sext i32 %187 to i64, !dbg !1127         ; [#uses=1 type=i64] [debug line = 80:5]
  %189 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1127 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 80:5]
  %190 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %189, i32 0, i32 0, !dbg !1127 ; [#uses=1 type=[32 x i32]*] [debug line = 80:5]
  %191 = getelementptr inbounds [32 x i32]* %190, i32 0, i64 %188, !dbg !1127 ; [#uses=1 type=i32*] [debug line = 80:5]
  store i32 %186, i32* %191, align 4, !dbg !1127  ; [debug line = 80:5]
  %192 = load i32* %b, align 4, !dbg !1128        ; [#uses=1 type=i32] [debug line = 81:5]
  store i32 %192, i32* %pb, align 4, !dbg !1128   ; [debug line = 81:5]
  br label %193, !dbg !1129                       ; [debug line = 82:3]

; <label>:193                                     ; preds = %165
  %194 = load i32* %i, align 4, !dbg !1130        ; [#uses=1 type=i32] [debug line = 76:16]
  %195 = add nsw i32 %194, 1, !dbg !1130          ; [#uses=1 type=i32] [debug line = 76:16]
  store i32 %195, i32* %i, align 4, !dbg !1130    ; [debug line = 76:16]
  br label %162, !dbg !1130                       ; [debug line = 76:16]

; <label>:196                                     ; preds = %162
  %197 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1131 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 88:3]
  call void @reduce_add_sub(%struct.crypto_sign_ed25519_ref_fe25519* %197), !dbg !1131 ; [debug line = 88:3]
  %198 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1132 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 89:3]
  call void @reduce_add_sub(%struct.crypto_sign_ed25519_ref_fe25519* %198), !dbg !1132 ; [debug line = 89:3]
  ret void, !dbg !1133                            ; [debug line = 90:1]
}

; [#uses=0]
define void @crypto_sign_ed25519_ref_shortsc25519_from16bytes(%struct.crypto_sign_ed25519_ref_shortsc25519* %r, i8* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_shortsc25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_shortsc25519**]
  %2 = alloca i8*, align 8                        ; [#uses=3 type=i8**]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store %struct.crypto_sign_ed25519_ref_shortsc25519* %r, %struct.crypto_sign_ed25519_ref_shortsc25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_shortsc25519** %1}, metadata !1134), !dbg !1135 ; [debug line = 101:93] [debug variable = r]
  store i8* %x, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !1136), !dbg !1137 ; [debug line = 101:116] [debug variable = x]
  %3 = load i8** %2, align 8, !dbg !1138          ; [#uses=1 type=i8*] [debug line = 102:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 16) nounwind, !dbg !1138 ; [debug line = 102:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1140), !dbg !1141 ; [debug line = 103:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1142       ; [debug line = 104:7]
  br label %4, !dbg !1142                         ; [debug line = 104:7]

; <label>:4                                       ; preds = %19, %0
  %5 = load i32* %i, align 4, !dbg !1142          ; [#uses=1 type=i32] [debug line = 104:7]
  %6 = icmp slt i32 %5, 16, !dbg !1142            ; [#uses=1 type=i1] [debug line = 104:7]
  br i1 %6, label %7, label %22, !dbg !1142       ; [debug line = 104:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1144          ; [#uses=1 type=i32] [debug line = 104:21]
  %9 = sext i32 %8 to i64, !dbg !1144             ; [#uses=1 type=i64] [debug line = 104:21]
  %10 = load i8** %2, align 8, !dbg !1144         ; [#uses=1 type=i8*] [debug line = 104:21]
  %11 = getelementptr inbounds i8* %10, i64 %9, !dbg !1144 ; [#uses=1 type=i8*] [debug line = 104:21]
  %12 = load i8* %11, align 1, !dbg !1144         ; [#uses=1 type=i8] [debug line = 104:21]
  %13 = zext i8 %12 to i32, !dbg !1144            ; [#uses=1 type=i32] [debug line = 104:21]
  %14 = load i32* %i, align 4, !dbg !1144         ; [#uses=1 type=i32] [debug line = 104:21]
  %15 = sext i32 %14 to i64, !dbg !1144           ; [#uses=1 type=i64] [debug line = 104:21]
  %16 = load %struct.crypto_sign_ed25519_ref_shortsc25519** %1, align 8, !dbg !1144 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_shortsc25519*] [debug line = 104:21]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_shortsc25519* %16, i32 0, i32 0, !dbg !1144 ; [#uses=1 type=[16 x i32]*] [debug line = 104:21]
  %18 = getelementptr inbounds [16 x i32]* %17, i32 0, i64 %15, !dbg !1144 ; [#uses=1 type=i32*] [debug line = 104:21]
  store i32 %13, i32* %18, align 4, !dbg !1144    ; [debug line = 104:21]
  br label %19, !dbg !1144                        ; [debug line = 104:21]

; <label>:19                                      ; preds = %7
  %20 = load i32* %i, align 4, !dbg !1145         ; [#uses=1 type=i32] [debug line = 104:16]
  %21 = add nsw i32 %20, 1, !dbg !1145            ; [#uses=1 type=i32] [debug line = 104:16]
  store i32 %21, i32* %i, align 4, !dbg !1145     ; [debug line = 104:16]
  br label %4, !dbg !1145                         ; [debug line = 104:16]

; <label>:22                                      ; preds = %4
  ret void, !dbg !1146                            ; [debug line = 105:1]
}

; [#uses=2]
define void @crypto_sign_ed25519_ref_sc25519_from64bytes(%struct.crypto_sign_ed25519_ref_fe25519* %r, i8* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca i8*, align 8                        ; [#uses=3 type=i8**]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %t = alloca [64 x i32], align 16                ; [#uses=2 type=[64 x i32]*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1147), !dbg !1148 ; [debug line = 107:83] [debug variable = r]
  store i8* %x, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !1149), !dbg !1150 ; [debug line = 107:106] [debug variable = x]
  %3 = load i8** %2, align 8, !dbg !1151          ; [#uses=1 type=i8*] [debug line = 108:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 64) nounwind, !dbg !1151 ; [debug line = 108:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1153), !dbg !1154 ; [debug line = 109:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !1155), !dbg !1156 ; [debug line = 110:17] [debug variable = t]
  store i32 0, i32* %i, align 4, !dbg !1157       ; [debug line = 111:7]
  br label %4, !dbg !1157                         ; [debug line = 111:7]

; <label>:4                                       ; preds = %17, %0
  %5 = load i32* %i, align 4, !dbg !1157          ; [#uses=1 type=i32] [debug line = 111:7]
  %6 = icmp slt i32 %5, 64, !dbg !1157            ; [#uses=1 type=i1] [debug line = 111:7]
  br i1 %6, label %7, label %20, !dbg !1157       ; [debug line = 111:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1159          ; [#uses=1 type=i32] [debug line = 111:21]
  %9 = sext i32 %8 to i64, !dbg !1159             ; [#uses=1 type=i64] [debug line = 111:21]
  %10 = load i8** %2, align 8, !dbg !1159         ; [#uses=1 type=i8*] [debug line = 111:21]
  %11 = getelementptr inbounds i8* %10, i64 %9, !dbg !1159 ; [#uses=1 type=i8*] [debug line = 111:21]
  %12 = load i8* %11, align 1, !dbg !1159         ; [#uses=1 type=i8] [debug line = 111:21]
  %13 = zext i8 %12 to i32, !dbg !1159            ; [#uses=1 type=i32] [debug line = 111:21]
  %14 = load i32* %i, align 4, !dbg !1159         ; [#uses=1 type=i32] [debug line = 111:21]
  %15 = sext i32 %14 to i64, !dbg !1159           ; [#uses=1 type=i64] [debug line = 111:21]
  %16 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %15, !dbg !1159 ; [#uses=1 type=i32*] [debug line = 111:21]
  store i32 %13, i32* %16, align 4, !dbg !1159    ; [debug line = 111:21]
  br label %17, !dbg !1159                        ; [debug line = 111:21]

; <label>:17                                      ; preds = %7
  %18 = load i32* %i, align 4, !dbg !1160         ; [#uses=1 type=i32] [debug line = 111:16]
  %19 = add nsw i32 %18, 1, !dbg !1160            ; [#uses=1 type=i32] [debug line = 111:16]
  store i32 %19, i32* %i, align 4, !dbg !1160     ; [debug line = 111:16]
  br label %4, !dbg !1160                         ; [debug line = 111:16]

; <label>:20                                      ; preds = %4
  %21 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1161 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 112:3]
  %22 = getelementptr inbounds [64 x i32]* %t, i32 0, i32 0, !dbg !1161 ; [#uses=1 type=i32*] [debug line = 112:3]
  call void @barrett_reduce(%struct.crypto_sign_ed25519_ref_fe25519* %21, i32* %22), !dbg !1161 ; [debug line = 112:3]
  ret void, !dbg !1162                            ; [debug line = 113:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_sc25519_from_shortsc(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_shortsc25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_shortsc25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_shortsc25519**]
  %i = alloca i32, align 4                        ; [#uses=11 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1163), !dbg !1164 ; [debug line = 115:84] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_shortsc25519* %x, %struct.crypto_sign_ed25519_ref_shortsc25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_shortsc25519** %2}, metadata !1165), !dbg !1166 ; [debug line = 115:131] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1167), !dbg !1169 ; [debug line = 117:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1170       ; [debug line = 118:7]
  br label %3, !dbg !1170                         ; [debug line = 118:7]

; <label>:3                                       ; preds = %18, %0
  %4 = load i32* %i, align 4, !dbg !1170          ; [#uses=1 type=i32] [debug line = 118:7]
  %5 = icmp slt i32 %4, 16, !dbg !1170            ; [#uses=1 type=i1] [debug line = 118:7]
  br i1 %5, label %6, label %21, !dbg !1170       ; [debug line = 118:7]

; <label>:6                                       ; preds = %3
  %7 = load i32* %i, align 4, !dbg !1172          ; [#uses=1 type=i32] [debug line = 119:5]
  %8 = sext i32 %7 to i64, !dbg !1172             ; [#uses=1 type=i64] [debug line = 119:5]
  %9 = load %struct.crypto_sign_ed25519_ref_shortsc25519** %2, align 8, !dbg !1172 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_shortsc25519*] [debug line = 119:5]
  %10 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_shortsc25519* %9, i32 0, i32 0, !dbg !1172 ; [#uses=1 type=[16 x i32]*] [debug line = 119:5]
  %11 = getelementptr inbounds [16 x i32]* %10, i32 0, i64 %8, !dbg !1172 ; [#uses=1 type=i32*] [debug line = 119:5]
  %12 = load i32* %11, align 4, !dbg !1172        ; [#uses=1 type=i32] [debug line = 119:5]
  %13 = load i32* %i, align 4, !dbg !1172         ; [#uses=1 type=i32] [debug line = 119:5]
  %14 = sext i32 %13 to i64, !dbg !1172           ; [#uses=1 type=i64] [debug line = 119:5]
  %15 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1172 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 119:5]
  %16 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %15, i32 0, i32 0, !dbg !1172 ; [#uses=1 type=[32 x i32]*] [debug line = 119:5]
  %17 = getelementptr inbounds [32 x i32]* %16, i32 0, i64 %14, !dbg !1172 ; [#uses=1 type=i32*] [debug line = 119:5]
  store i32 %12, i32* %17, align 4, !dbg !1172    ; [debug line = 119:5]
  br label %18, !dbg !1172                        ; [debug line = 119:5]

; <label>:18                                      ; preds = %6
  %19 = load i32* %i, align 4, !dbg !1173         ; [#uses=1 type=i32] [debug line = 118:16]
  %20 = add nsw i32 %19, 1, !dbg !1173            ; [#uses=1 type=i32] [debug line = 118:16]
  store i32 %20, i32* %i, align 4, !dbg !1173     ; [debug line = 118:16]
  br label %3, !dbg !1173                         ; [debug line = 118:16]

; <label>:21                                      ; preds = %3
  store i32 0, i32* %i, align 4, !dbg !1174       ; [debug line = 120:7]
  br label %22, !dbg !1174                        ; [debug line = 120:7]

; <label>:22                                      ; preds = %32, %21
  %23 = load i32* %i, align 4, !dbg !1174         ; [#uses=1 type=i32] [debug line = 120:7]
  %24 = icmp slt i32 %23, 16, !dbg !1174          ; [#uses=1 type=i1] [debug line = 120:7]
  br i1 %24, label %25, label %35, !dbg !1174     ; [debug line = 120:7]

; <label>:25                                      ; preds = %22
  %26 = load i32* %i, align 4, !dbg !1176         ; [#uses=1 type=i32] [debug line = 121:5]
  %27 = add nsw i32 16, %26, !dbg !1176           ; [#uses=1 type=i32] [debug line = 121:5]
  %28 = sext i32 %27 to i64, !dbg !1176           ; [#uses=1 type=i64] [debug line = 121:5]
  %29 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1176 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 121:5]
  %30 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %29, i32 0, i32 0, !dbg !1176 ; [#uses=1 type=[32 x i32]*] [debug line = 121:5]
  %31 = getelementptr inbounds [32 x i32]* %30, i32 0, i64 %28, !dbg !1176 ; [#uses=1 type=i32*] [debug line = 121:5]
  store i32 0, i32* %31, align 4, !dbg !1176      ; [debug line = 121:5]
  br label %32, !dbg !1176                        ; [debug line = 121:5]

; <label>:32                                      ; preds = %25
  %33 = load i32* %i, align 4, !dbg !1177         ; [#uses=1 type=i32] [debug line = 120:16]
  %34 = add nsw i32 %33, 1, !dbg !1177            ; [#uses=1 type=i32] [debug line = 120:16]
  store i32 %34, i32* %i, align 4, !dbg !1177     ; [debug line = 120:16]
  br label %22, !dbg !1177                        ; [debug line = 120:16]

; <label>:35                                      ; preds = %22
  ret void, !dbg !1178                            ; [debug line = 122:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_sc25519_to32bytes(i8* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=3 type=i8**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store i8* %r, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !1179), !dbg !1180 ; [debug line = 124:62] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1181), !dbg !1182 ; [debug line = 124:108] [debug variable = x]
  %3 = load i8** %1, align 8, !dbg !1183          ; [#uses=1 type=i8*] [debug line = 125:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 32) nounwind, !dbg !1183 ; [debug line = 125:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1185), !dbg !1186 ; [debug line = 126:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1187       ; [debug line = 127:7]
  br label %4, !dbg !1187                         ; [debug line = 127:7]

; <label>:4                                       ; preds = %19, %0
  %5 = load i32* %i, align 4, !dbg !1187          ; [#uses=1 type=i32] [debug line = 127:7]
  %6 = icmp slt i32 %5, 32, !dbg !1187            ; [#uses=1 type=i1] [debug line = 127:7]
  br i1 %6, label %7, label %22, !dbg !1187       ; [debug line = 127:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1189          ; [#uses=1 type=i32] [debug line = 127:21]
  %9 = sext i32 %8 to i64, !dbg !1189             ; [#uses=1 type=i64] [debug line = 127:21]
  %10 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1189 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 127:21]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %10, i32 0, i32 0, !dbg !1189 ; [#uses=1 type=[32 x i32]*] [debug line = 127:21]
  %12 = getelementptr inbounds [32 x i32]* %11, i32 0, i64 %9, !dbg !1189 ; [#uses=1 type=i32*] [debug line = 127:21]
  %13 = load i32* %12, align 4, !dbg !1189        ; [#uses=1 type=i32] [debug line = 127:21]
  %14 = trunc i32 %13 to i8, !dbg !1189           ; [#uses=1 type=i8] [debug line = 127:21]
  %15 = load i32* %i, align 4, !dbg !1189         ; [#uses=1 type=i32] [debug line = 127:21]
  %16 = sext i32 %15 to i64, !dbg !1189           ; [#uses=1 type=i64] [debug line = 127:21]
  %17 = load i8** %1, align 8, !dbg !1189         ; [#uses=1 type=i8*] [debug line = 127:21]
  %18 = getelementptr inbounds i8* %17, i64 %16, !dbg !1189 ; [#uses=1 type=i8*] [debug line = 127:21]
  store i8 %14, i8* %18, align 1, !dbg !1189      ; [debug line = 127:21]
  br label %19, !dbg !1189                        ; [debug line = 127:21]

; <label>:19                                      ; preds = %7
  %20 = load i32* %i, align 4, !dbg !1190         ; [#uses=1 type=i32] [debug line = 127:16]
  %21 = add nsw i32 %20, 1, !dbg !1190            ; [#uses=1 type=i32] [debug line = 127:16]
  store i32 %21, i32* %i, align 4, !dbg !1190     ; [debug line = 127:16]
  br label %4, !dbg !1190                         ; [debug line = 127:16]

; <label>:22                                      ; preds = %4
  ret void, !dbg !1191                            ; [debug line = 128:1]
}

; [#uses=0]
define i32 @crypto_sign_ed25519_ref_sc25519_iszero_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=5 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1192), !dbg !1193 ; [debug line = 130:91] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1194), !dbg !1196 ; [debug line = 132:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1197       ; [debug line = 133:7]
  br label %3, !dbg !1197                         ; [debug line = 133:7]

; <label>:3                                       ; preds = %16, %0
  %4 = load i32* %i, align 4, !dbg !1197          ; [#uses=1 type=i32] [debug line = 133:7]
  %5 = icmp slt i32 %4, 32, !dbg !1197            ; [#uses=1 type=i1] [debug line = 133:7]
  br i1 %5, label %6, label %19, !dbg !1197       ; [debug line = 133:7]

; <label>:6                                       ; preds = %3
  %7 = load i32* %i, align 4, !dbg !1199          ; [#uses=1 type=i32] [debug line = 134:5]
  %8 = sext i32 %7 to i64, !dbg !1199             ; [#uses=1 type=i64] [debug line = 134:5]
  %9 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1199 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 134:5]
  %10 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %9, i32 0, i32 0, !dbg !1199 ; [#uses=1 type=[32 x i32]*] [debug line = 134:5]
  %11 = getelementptr inbounds [32 x i32]* %10, i32 0, i64 %8, !dbg !1199 ; [#uses=1 type=i32*] [debug line = 134:5]
  %12 = load i32* %11, align 4, !dbg !1199        ; [#uses=1 type=i32] [debug line = 134:5]
  %13 = icmp ne i32 %12, 0, !dbg !1199            ; [#uses=1 type=i1] [debug line = 134:5]
  br i1 %13, label %14, label %15, !dbg !1199     ; [debug line = 134:5]

; <label>:14                                      ; preds = %6
  store i32 0, i32* %1, !dbg !1200                ; [debug line = 134:22]
  br label %20, !dbg !1200                        ; [debug line = 134:22]

; <label>:15                                      ; preds = %6
  br label %16, !dbg !1200                        ; [debug line = 134:22]

; <label>:16                                      ; preds = %15
  %17 = load i32* %i, align 4, !dbg !1201         ; [#uses=1 type=i32] [debug line = 133:16]
  %18 = add nsw i32 %17, 1, !dbg !1201            ; [#uses=1 type=i32] [debug line = 133:16]
  store i32 %18, i32* %i, align 4, !dbg !1201     ; [debug line = 133:16]
  br label %3, !dbg !1201                         ; [debug line = 133:16]

; <label>:19                                      ; preds = %3
  store i32 1, i32* %1, !dbg !1202                ; [debug line = 135:3]
  br label %20, !dbg !1202                        ; [debug line = 135:3]

; <label>:20                                      ; preds = %19, %14
  %21 = load i32* %1, !dbg !1203                  ; [#uses=1 type=i32] [debug line = 136:1]
  ret i32 %21, !dbg !1203                         ; [debug line = 136:1]
}

; [#uses=0]
define i32 @crypto_sign_ed25519_ref_sc25519_isshort_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=5 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1204), !dbg !1205 ; [debug line = 138:92] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1206), !dbg !1208 ; [debug line = 140:7] [debug variable = i]
  store i32 31, i32* %i, align 4, !dbg !1209      ; [debug line = 141:7]
  br label %3, !dbg !1209                         ; [debug line = 141:7]

; <label>:3                                       ; preds = %16, %0
  %4 = load i32* %i, align 4, !dbg !1209          ; [#uses=1 type=i32] [debug line = 141:7]
  %5 = icmp sgt i32 %4, 15, !dbg !1209            ; [#uses=1 type=i1] [debug line = 141:7]
  br i1 %5, label %6, label %19, !dbg !1209       ; [debug line = 141:7]

; <label>:6                                       ; preds = %3
  %7 = load i32* %i, align 4, !dbg !1211          ; [#uses=1 type=i32] [debug line = 142:5]
  %8 = sext i32 %7 to i64, !dbg !1211             ; [#uses=1 type=i64] [debug line = 142:5]
  %9 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1211 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 142:5]
  %10 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %9, i32 0, i32 0, !dbg !1211 ; [#uses=1 type=[32 x i32]*] [debug line = 142:5]
  %11 = getelementptr inbounds [32 x i32]* %10, i32 0, i64 %8, !dbg !1211 ; [#uses=1 type=i32*] [debug line = 142:5]
  %12 = load i32* %11, align 4, !dbg !1211        ; [#uses=1 type=i32] [debug line = 142:5]
  %13 = icmp ne i32 %12, 0, !dbg !1211            ; [#uses=1 type=i1] [debug line = 142:5]
  br i1 %13, label %14, label %15, !dbg !1211     ; [debug line = 142:5]

; <label>:14                                      ; preds = %6
  store i32 0, i32* %1, !dbg !1212                ; [debug line = 142:22]
  br label %20, !dbg !1212                        ; [debug line = 142:22]

; <label>:15                                      ; preds = %6
  br label %16, !dbg !1212                        ; [debug line = 142:22]

; <label>:16                                      ; preds = %15
  %17 = load i32* %i, align 4, !dbg !1213         ; [#uses=1 type=i32] [debug line = 141:17]
  %18 = add nsw i32 %17, -1, !dbg !1213           ; [#uses=1 type=i32] [debug line = 141:17]
  store i32 %18, i32* %i, align 4, !dbg !1213     ; [debug line = 141:17]
  br label %3, !dbg !1213                         ; [debug line = 141:17]

; <label>:19                                      ; preds = %3
  store i32 1, i32* %1, !dbg !1214                ; [debug line = 143:3]
  br label %20, !dbg !1214                        ; [debug line = 143:3]

; <label>:20                                      ; preds = %19, %14
  %21 = load i32* %1, !dbg !1215                  ; [#uses=1 type=i32] [debug line = 144:1]
  ret i32 %21, !dbg !1215                         ; [debug line = 144:1]
}

; [#uses=0]
define i32 @crypto_sign_ed25519_ref_sc25519_lt_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=4 type=i32*]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=8 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1216), !dbg !1217 ; [debug line = 146:87] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1218), !dbg !1219 ; [debug line = 146:129] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1220), !dbg !1222 ; [debug line = 148:7] [debug variable = i]
  store i32 31, i32* %i, align 4, !dbg !1223      ; [debug line = 149:7]
  br label %4, !dbg !1223                         ; [debug line = 149:7]

; <label>:4                                       ; preds = %38, %0
  %5 = load i32* %i, align 4, !dbg !1223          ; [#uses=1 type=i32] [debug line = 149:7]
  %6 = icmp sge i32 %5, 0, !dbg !1223             ; [#uses=1 type=i1] [debug line = 149:7]
  br i1 %6, label %7, label %41, !dbg !1223       ; [debug line = 149:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1225          ; [#uses=1 type=i32] [debug line = 151:5]
  %9 = sext i32 %8 to i64, !dbg !1225             ; [#uses=1 type=i64] [debug line = 151:5]
  %10 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1225 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 151:5]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %10, i32 0, i32 0, !dbg !1225 ; [#uses=1 type=[32 x i32]*] [debug line = 151:5]
  %12 = getelementptr inbounds [32 x i32]* %11, i32 0, i64 %9, !dbg !1225 ; [#uses=1 type=i32*] [debug line = 151:5]
  %13 = load i32* %12, align 4, !dbg !1225        ; [#uses=1 type=i32] [debug line = 151:5]
  %14 = load i32* %i, align 4, !dbg !1225         ; [#uses=1 type=i32] [debug line = 151:5]
  %15 = sext i32 %14 to i64, !dbg !1225           ; [#uses=1 type=i64] [debug line = 151:5]
  %16 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1225 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 151:5]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %16, i32 0, i32 0, !dbg !1225 ; [#uses=1 type=[32 x i32]*] [debug line = 151:5]
  %18 = getelementptr inbounds [32 x i32]* %17, i32 0, i64 %15, !dbg !1225 ; [#uses=1 type=i32*] [debug line = 151:5]
  %19 = load i32* %18, align 4, !dbg !1225        ; [#uses=1 type=i32] [debug line = 151:5]
  %20 = icmp ult i32 %13, %19, !dbg !1225         ; [#uses=1 type=i1] [debug line = 151:5]
  br i1 %20, label %21, label %22, !dbg !1225     ; [debug line = 151:5]

; <label>:21                                      ; preds = %7
  store i32 1, i32* %1, !dbg !1227                ; [debug line = 151:27]
  br label %42, !dbg !1227                        ; [debug line = 151:27]

; <label>:22                                      ; preds = %7
  %23 = load i32* %i, align 4, !dbg !1228         ; [#uses=1 type=i32] [debug line = 152:5]
  %24 = sext i32 %23 to i64, !dbg !1228           ; [#uses=1 type=i64] [debug line = 152:5]
  %25 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1228 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 152:5]
  %26 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %25, i32 0, i32 0, !dbg !1228 ; [#uses=1 type=[32 x i32]*] [debug line = 152:5]
  %27 = getelementptr inbounds [32 x i32]* %26, i32 0, i64 %24, !dbg !1228 ; [#uses=1 type=i32*] [debug line = 152:5]
  %28 = load i32* %27, align 4, !dbg !1228        ; [#uses=1 type=i32] [debug line = 152:5]
  %29 = load i32* %i, align 4, !dbg !1228         ; [#uses=1 type=i32] [debug line = 152:5]
  %30 = sext i32 %29 to i64, !dbg !1228           ; [#uses=1 type=i64] [debug line = 152:5]
  %31 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1228 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 152:5]
  %32 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %31, i32 0, i32 0, !dbg !1228 ; [#uses=1 type=[32 x i32]*] [debug line = 152:5]
  %33 = getelementptr inbounds [32 x i32]* %32, i32 0, i64 %30, !dbg !1228 ; [#uses=1 type=i32*] [debug line = 152:5]
  %34 = load i32* %33, align 4, !dbg !1228        ; [#uses=1 type=i32] [debug line = 152:5]
  %35 = icmp ugt i32 %28, %34, !dbg !1228         ; [#uses=1 type=i1] [debug line = 152:5]
  br i1 %35, label %36, label %37, !dbg !1228     ; [debug line = 152:5]

; <label>:36                                      ; preds = %22
  store i32 0, i32* %1, !dbg !1229                ; [debug line = 152:27]
  br label %42, !dbg !1229                        ; [debug line = 152:27]

; <label>:37                                      ; preds = %22
  br label %38, !dbg !1230                        ; [debug line = 153:3]

; <label>:38                                      ; preds = %37
  %39 = load i32* %i, align 4, !dbg !1231         ; [#uses=1 type=i32] [debug line = 149:17]
  %40 = add nsw i32 %39, -1, !dbg !1231           ; [#uses=1 type=i32] [debug line = 149:17]
  store i32 %40, i32* %i, align 4, !dbg !1231     ; [debug line = 149:17]
  br label %4, !dbg !1231                         ; [debug line = 149:17]

; <label>:41                                      ; preds = %4
  store i32 0, i32* %1, !dbg !1232                ; [debug line = 154:3]
  br label %42, !dbg !1232                        ; [debug line = 154:3]

; <label>:42                                      ; preds = %41, %36, %21
  %43 = load i32* %1, !dbg !1233                  ; [#uses=1 type=i32] [debug line = 155:1]
  ret i32 %43, !dbg !1233                         ; [debug line = 155:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_sc25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=6 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=14 type=i32*]
  %carry = alloca i32, align 4                    ; [#uses=2 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1234), !dbg !1235 ; [debug line = 157:75] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1236), !dbg !1237 ; [debug line = 157:117] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1238), !dbg !1239 ; [debug line = 157:159] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1240), !dbg !1242 ; [debug line = 159:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %carry}, metadata !1243), !dbg !1244 ; [debug line = 159:10] [debug variable = carry]
  store i32 0, i32* %i, align 4, !dbg !1245       ; [debug line = 160:7]
  br label %4, !dbg !1245                         ; [debug line = 160:7]

; <label>:4                                       ; preds = %26, %0
  %5 = load i32* %i, align 4, !dbg !1245          ; [#uses=1 type=i32] [debug line = 160:7]
  %6 = icmp slt i32 %5, 32, !dbg !1245            ; [#uses=1 type=i1] [debug line = 160:7]
  br i1 %6, label %7, label %29, !dbg !1245       ; [debug line = 160:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1247          ; [#uses=1 type=i32] [debug line = 160:21]
  %9 = sext i32 %8 to i64, !dbg !1247             ; [#uses=1 type=i64] [debug line = 160:21]
  %10 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1247 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 160:21]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %10, i32 0, i32 0, !dbg !1247 ; [#uses=1 type=[32 x i32]*] [debug line = 160:21]
  %12 = getelementptr inbounds [32 x i32]* %11, i32 0, i64 %9, !dbg !1247 ; [#uses=1 type=i32*] [debug line = 160:21]
  %13 = load i32* %12, align 4, !dbg !1247        ; [#uses=1 type=i32] [debug line = 160:21]
  %14 = load i32* %i, align 4, !dbg !1247         ; [#uses=1 type=i32] [debug line = 160:21]
  %15 = sext i32 %14 to i64, !dbg !1247           ; [#uses=1 type=i64] [debug line = 160:21]
  %16 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1247 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 160:21]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %16, i32 0, i32 0, !dbg !1247 ; [#uses=1 type=[32 x i32]*] [debug line = 160:21]
  %18 = getelementptr inbounds [32 x i32]* %17, i32 0, i64 %15, !dbg !1247 ; [#uses=1 type=i32*] [debug line = 160:21]
  %19 = load i32* %18, align 4, !dbg !1247        ; [#uses=1 type=i32] [debug line = 160:21]
  %20 = add i32 %13, %19, !dbg !1247              ; [#uses=1 type=i32] [debug line = 160:21]
  %21 = load i32* %i, align 4, !dbg !1247         ; [#uses=1 type=i32] [debug line = 160:21]
  %22 = sext i32 %21 to i64, !dbg !1247           ; [#uses=1 type=i64] [debug line = 160:21]
  %23 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1247 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 160:21]
  %24 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %23, i32 0, i32 0, !dbg !1247 ; [#uses=1 type=[32 x i32]*] [debug line = 160:21]
  %25 = getelementptr inbounds [32 x i32]* %24, i32 0, i64 %22, !dbg !1247 ; [#uses=1 type=i32*] [debug line = 160:21]
  store i32 %20, i32* %25, align 4, !dbg !1247    ; [debug line = 160:21]
  br label %26, !dbg !1247                        ; [debug line = 160:21]

; <label>:26                                      ; preds = %7
  %27 = load i32* %i, align 4, !dbg !1248         ; [#uses=1 type=i32] [debug line = 160:16]
  %28 = add nsw i32 %27, 1, !dbg !1248            ; [#uses=1 type=i32] [debug line = 160:16]
  store i32 %28, i32* %i, align 4, !dbg !1248     ; [debug line = 160:16]
  br label %4, !dbg !1248                         ; [debug line = 160:16]

; <label>:29                                      ; preds = %4
  store i32 0, i32* %i, align 4, !dbg !1249       ; [debug line = 161:7]
  br label %30, !dbg !1249                        ; [debug line = 161:7]

; <label>:30                                      ; preds = %57, %29
  %31 = load i32* %i, align 4, !dbg !1249         ; [#uses=1 type=i32] [debug line = 161:7]
  %32 = icmp slt i32 %31, 31, !dbg !1249          ; [#uses=1 type=i1] [debug line = 161:7]
  br i1 %32, label %33, label %60, !dbg !1249     ; [debug line = 161:7]

; <label>:33                                      ; preds = %30
  %34 = load i32* %i, align 4, !dbg !1251         ; [#uses=1 type=i32] [debug line = 163:5]
  %35 = sext i32 %34 to i64, !dbg !1251           ; [#uses=1 type=i64] [debug line = 163:5]
  %36 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1251 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 163:5]
  %37 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %36, i32 0, i32 0, !dbg !1251 ; [#uses=1 type=[32 x i32]*] [debug line = 163:5]
  %38 = getelementptr inbounds [32 x i32]* %37, i32 0, i64 %35, !dbg !1251 ; [#uses=1 type=i32*] [debug line = 163:5]
  %39 = load i32* %38, align 4, !dbg !1251        ; [#uses=1 type=i32] [debug line = 163:5]
  %40 = lshr i32 %39, 8, !dbg !1251               ; [#uses=1 type=i32] [debug line = 163:5]
  store i32 %40, i32* %carry, align 4, !dbg !1251 ; [debug line = 163:5]
  %41 = load i32* %carry, align 4, !dbg !1253     ; [#uses=1 type=i32] [debug line = 164:5]
  %42 = load i32* %i, align 4, !dbg !1253         ; [#uses=1 type=i32] [debug line = 164:5]
  %43 = add nsw i32 %42, 1, !dbg !1253            ; [#uses=1 type=i32] [debug line = 164:5]
  %44 = sext i32 %43 to i64, !dbg !1253           ; [#uses=1 type=i64] [debug line = 164:5]
  %45 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1253 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 164:5]
  %46 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %45, i32 0, i32 0, !dbg !1253 ; [#uses=1 type=[32 x i32]*] [debug line = 164:5]
  %47 = getelementptr inbounds [32 x i32]* %46, i32 0, i64 %44, !dbg !1253 ; [#uses=2 type=i32*] [debug line = 164:5]
  %48 = load i32* %47, align 4, !dbg !1253        ; [#uses=1 type=i32] [debug line = 164:5]
  %49 = add i32 %48, %41, !dbg !1253              ; [#uses=1 type=i32] [debug line = 164:5]
  store i32 %49, i32* %47, align 4, !dbg !1253    ; [debug line = 164:5]
  %50 = load i32* %i, align 4, !dbg !1254         ; [#uses=1 type=i32] [debug line = 165:5]
  %51 = sext i32 %50 to i64, !dbg !1254           ; [#uses=1 type=i64] [debug line = 165:5]
  %52 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1254 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:5]
  %53 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %52, i32 0, i32 0, !dbg !1254 ; [#uses=1 type=[32 x i32]*] [debug line = 165:5]
  %54 = getelementptr inbounds [32 x i32]* %53, i32 0, i64 %51, !dbg !1254 ; [#uses=2 type=i32*] [debug line = 165:5]
  %55 = load i32* %54, align 4, !dbg !1254        ; [#uses=1 type=i32] [debug line = 165:5]
  %56 = and i32 %55, 255, !dbg !1254              ; [#uses=1 type=i32] [debug line = 165:5]
  store i32 %56, i32* %54, align 4, !dbg !1254    ; [debug line = 165:5]
  br label %57, !dbg !1255                        ; [debug line = 166:3]

; <label>:57                                      ; preds = %33
  %58 = load i32* %i, align 4, !dbg !1256         ; [#uses=1 type=i32] [debug line = 161:16]
  %59 = add nsw i32 %58, 1, !dbg !1256            ; [#uses=1 type=i32] [debug line = 161:16]
  store i32 %59, i32* %i, align 4, !dbg !1256     ; [debug line = 161:16]
  br label %30, !dbg !1256                        ; [debug line = 161:16]

; <label>:60                                      ; preds = %30
  %61 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1257 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 167:3]
  call void @reduce_add_sub(%struct.crypto_sign_ed25519_ref_fe25519* %61), !dbg !1257 ; [debug line = 167:3]
  ret void, !dbg !1258                            ; [debug line = 168:1]
}

; [#uses=3]
define internal void @reduce_add_sub(%struct.crypto_sign_ed25519_ref_fe25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %pb = alloca i32, align 4                       ; [#uses=6 type=i32*]
  %b = alloca i32, align 4                        ; [#uses=4 type=i32*]
  %mask = alloca i32, align 4                     ; [#uses=2 type=i32*]
  %i = alloca i32, align 4                        ; [#uses=15 type=i32*]
  %t = alloca [32 x i8], align 16                 ; [#uses=2 type=[32 x i8]*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1259), !dbg !1260 ; [debug line = 20:61] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{i32* %pb}, metadata !1261), !dbg !1263 ; [debug line = 22:17] [debug variable = pb]
  store i32 0, i32* %pb, align 4, !dbg !1264      ; [debug line = 22:23]
  call void @llvm.dbg.declare(metadata !{i32* %b}, metadata !1265), !dbg !1266 ; [debug line = 23:17] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !1267), !dbg !1268 ; [debug line = 24:17] [debug variable = mask]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1269), !dbg !1270 ; [debug line = 25:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %t}, metadata !1271), !dbg !1272 ; [debug line = 26:17] [debug variable = t]
  store i32 0, i32* %i, align 4, !dbg !1273       ; [debug line = 28:7]
  br label %2, !dbg !1273                         ; [debug line = 28:7]

; <label>:2                                       ; preds = %36, %0
  %3 = load i32* %i, align 4, !dbg !1273          ; [#uses=1 type=i32] [debug line = 28:7]
  %4 = icmp slt i32 %3, 32, !dbg !1273            ; [#uses=1 type=i1] [debug line = 28:7]
  br i1 %4, label %5, label %39, !dbg !1273       ; [debug line = 28:7]

; <label>:5                                       ; preds = %2
  %6 = load i32* %i, align 4, !dbg !1275          ; [#uses=1 type=i32] [debug line = 30:5]
  %7 = sext i32 %6 to i64, !dbg !1275             ; [#uses=1 type=i64] [debug line = 30:5]
  %8 = getelementptr inbounds [32 x i32]* @m, i32 0, i64 %7, !dbg !1275 ; [#uses=1 type=i32*] [debug line = 30:5]
  %9 = load i32* %8, align 4, !dbg !1275          ; [#uses=1 type=i32] [debug line = 30:5]
  %10 = load i32* %pb, align 4, !dbg !1275        ; [#uses=1 type=i32] [debug line = 30:5]
  %11 = add i32 %10, %9, !dbg !1275               ; [#uses=1 type=i32] [debug line = 30:5]
  store i32 %11, i32* %pb, align 4, !dbg !1275    ; [debug line = 30:5]
  %12 = load i32* %i, align 4, !dbg !1277         ; [#uses=1 type=i32] [debug line = 31:9]
  %13 = sext i32 %12 to i64, !dbg !1277           ; [#uses=1 type=i64] [debug line = 31:9]
  %14 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1277 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 31:9]
  %15 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %14, i32 0, i32 0, !dbg !1277 ; [#uses=1 type=[32 x i32]*] [debug line = 31:9]
  %16 = getelementptr inbounds [32 x i32]* %15, i32 0, i64 %13, !dbg !1277 ; [#uses=1 type=i32*] [debug line = 31:9]
  %17 = load i32* %16, align 4, !dbg !1277        ; [#uses=1 type=i32] [debug line = 31:9]
  %18 = load i32* %pb, align 4, !dbg !1277        ; [#uses=1 type=i32] [debug line = 31:9]
  %19 = call i32 @lt(i32 %17, i32 %18), !dbg !1277 ; [#uses=1 type=i32] [debug line = 31:9]
  store i32 %19, i32* %b, align 4, !dbg !1277     ; [debug line = 31:9]
  %20 = load i32* %i, align 4, !dbg !1278         ; [#uses=1 type=i32] [debug line = 32:5]
  %21 = sext i32 %20 to i64, !dbg !1278           ; [#uses=1 type=i64] [debug line = 32:5]
  %22 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1278 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 32:5]
  %23 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %22, i32 0, i32 0, !dbg !1278 ; [#uses=1 type=[32 x i32]*] [debug line = 32:5]
  %24 = getelementptr inbounds [32 x i32]* %23, i32 0, i64 %21, !dbg !1278 ; [#uses=1 type=i32*] [debug line = 32:5]
  %25 = load i32* %24, align 4, !dbg !1278        ; [#uses=1 type=i32] [debug line = 32:5]
  %26 = load i32* %pb, align 4, !dbg !1278        ; [#uses=1 type=i32] [debug line = 32:5]
  %27 = sub i32 %25, %26, !dbg !1278              ; [#uses=1 type=i32] [debug line = 32:5]
  %28 = load i32* %b, align 4, !dbg !1278         ; [#uses=1 type=i32] [debug line = 32:5]
  %29 = shl i32 %28, 8, !dbg !1278                ; [#uses=1 type=i32] [debug line = 32:5]
  %30 = add i32 %27, %29, !dbg !1278              ; [#uses=1 type=i32] [debug line = 32:5]
  %31 = trunc i32 %30 to i8, !dbg !1278           ; [#uses=1 type=i8] [debug line = 32:5]
  %32 = load i32* %i, align 4, !dbg !1278         ; [#uses=1 type=i32] [debug line = 32:5]
  %33 = sext i32 %32 to i64, !dbg !1278           ; [#uses=1 type=i64] [debug line = 32:5]
  %34 = getelementptr inbounds [32 x i8]* %t, i32 0, i64 %33, !dbg !1278 ; [#uses=1 type=i8*] [debug line = 32:5]
  store i8 %31, i8* %34, align 1, !dbg !1278      ; [debug line = 32:5]
  %35 = load i32* %b, align 4, !dbg !1279         ; [#uses=1 type=i32] [debug line = 33:5]
  store i32 %35, i32* %pb, align 4, !dbg !1279    ; [debug line = 33:5]
  br label %36, !dbg !1280                        ; [debug line = 34:3]

; <label>:36                                      ; preds = %5
  %37 = load i32* %i, align 4, !dbg !1281         ; [#uses=1 type=i32] [debug line = 28:16]
  %38 = add nsw i32 %37, 1, !dbg !1281            ; [#uses=1 type=i32] [debug line = 28:16]
  store i32 %38, i32* %i, align 4, !dbg !1281     ; [debug line = 28:16]
  br label %2, !dbg !1281                         ; [debug line = 28:16]

; <label>:39                                      ; preds = %2
  %40 = load i32* %b, align 4, !dbg !1282         ; [#uses=1 type=i32] [debug line = 35:3]
  %41 = sub i32 %40, 1, !dbg !1282                ; [#uses=1 type=i32] [debug line = 35:3]
  store i32 %41, i32* %mask, align 4, !dbg !1282  ; [debug line = 35:3]
  store i32 0, i32* %i, align 4, !dbg !1283       ; [debug line = 36:7]
  br label %42, !dbg !1283                        ; [debug line = 36:7]

; <label>:42                                      ; preds = %67, %39
  %43 = load i32* %i, align 4, !dbg !1283         ; [#uses=1 type=i32] [debug line = 36:7]
  %44 = icmp slt i32 %43, 32, !dbg !1283          ; [#uses=1 type=i1] [debug line = 36:7]
  br i1 %44, label %45, label %70, !dbg !1283     ; [debug line = 36:7]

; <label>:45                                      ; preds = %42
  %46 = load i32* %mask, align 4, !dbg !1285      ; [#uses=1 type=i32] [debug line = 37:5]
  %47 = load i32* %i, align 4, !dbg !1285         ; [#uses=1 type=i32] [debug line = 37:5]
  %48 = sext i32 %47 to i64, !dbg !1285           ; [#uses=1 type=i64] [debug line = 37:5]
  %49 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1285 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 37:5]
  %50 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %49, i32 0, i32 0, !dbg !1285 ; [#uses=1 type=[32 x i32]*] [debug line = 37:5]
  %51 = getelementptr inbounds [32 x i32]* %50, i32 0, i64 %48, !dbg !1285 ; [#uses=1 type=i32*] [debug line = 37:5]
  %52 = load i32* %51, align 4, !dbg !1285        ; [#uses=1 type=i32] [debug line = 37:5]
  %53 = load i32* %i, align 4, !dbg !1285         ; [#uses=1 type=i32] [debug line = 37:5]
  %54 = sext i32 %53 to i64, !dbg !1285           ; [#uses=1 type=i64] [debug line = 37:5]
  %55 = getelementptr inbounds [32 x i8]* %t, i32 0, i64 %54, !dbg !1285 ; [#uses=1 type=i8*] [debug line = 37:5]
  %56 = load i8* %55, align 1, !dbg !1285         ; [#uses=1 type=i8] [debug line = 37:5]
  %57 = zext i8 %56 to i32, !dbg !1285            ; [#uses=1 type=i32] [debug line = 37:5]
  %58 = xor i32 %52, %57, !dbg !1285              ; [#uses=1 type=i32] [debug line = 37:5]
  %59 = and i32 %46, %58, !dbg !1285              ; [#uses=1 type=i32] [debug line = 37:5]
  %60 = load i32* %i, align 4, !dbg !1285         ; [#uses=1 type=i32] [debug line = 37:5]
  %61 = sext i32 %60 to i64, !dbg !1285           ; [#uses=1 type=i64] [debug line = 37:5]
  %62 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1285 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 37:5]
  %63 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %62, i32 0, i32 0, !dbg !1285 ; [#uses=1 type=[32 x i32]*] [debug line = 37:5]
  %64 = getelementptr inbounds [32 x i32]* %63, i32 0, i64 %61, !dbg !1285 ; [#uses=2 type=i32*] [debug line = 37:5]
  %65 = load i32* %64, align 4, !dbg !1285        ; [#uses=1 type=i32] [debug line = 37:5]
  %66 = xor i32 %65, %59, !dbg !1285              ; [#uses=1 type=i32] [debug line = 37:5]
  store i32 %66, i32* %64, align 4, !dbg !1285    ; [debug line = 37:5]
  br label %67, !dbg !1285                        ; [debug line = 37:5]

; <label>:67                                      ; preds = %45
  %68 = load i32* %i, align 4, !dbg !1286         ; [#uses=1 type=i32] [debug line = 36:16]
  %69 = add nsw i32 %68, 1, !dbg !1286            ; [#uses=1 type=i32] [debug line = 36:16]
  store i32 %69, i32* %i, align 4, !dbg !1286     ; [debug line = 36:16]
  br label %42, !dbg !1286                        ; [debug line = 36:16]

; <label>:70                                      ; preds = %42
  ret void, !dbg !1287                            ; [debug line = 38:1]
}

; [#uses=0]
define void @crypto_sign_ed25519_ref_sc25519_sub_nored(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %b = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %t = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %i = alloca i32, align 4                        ; [#uses=7 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1288), !dbg !1289 ; [debug line = 170:81] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1290), !dbg !1291 ; [debug line = 170:123] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1292), !dbg !1293 ; [debug line = 170:165] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %b}, metadata !1294), !dbg !1296 ; [debug line = 172:17] [debug variable = b]
  store i32 0, i32* %b, align 4, !dbg !1297       ; [debug line = 172:22]
  call void @llvm.dbg.declare(metadata !{i32* %t}, metadata !1298), !dbg !1299 ; [debug line = 173:17] [debug variable = t]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1300), !dbg !1301 ; [debug line = 174:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1302       ; [debug line = 175:7]
  br label %4, !dbg !1302                         ; [debug line = 175:7]

; <label>:4                                       ; preds = %33, %0
  %5 = load i32* %i, align 4, !dbg !1302          ; [#uses=1 type=i32] [debug line = 175:7]
  %6 = icmp slt i32 %5, 32, !dbg !1302            ; [#uses=1 type=i1] [debug line = 175:7]
  br i1 %6, label %7, label %36, !dbg !1302       ; [debug line = 175:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1304          ; [#uses=1 type=i32] [debug line = 177:5]
  %9 = sext i32 %8 to i64, !dbg !1304             ; [#uses=1 type=i64] [debug line = 177:5]
  %10 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1304 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 177:5]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %10, i32 0, i32 0, !dbg !1304 ; [#uses=1 type=[32 x i32]*] [debug line = 177:5]
  %12 = getelementptr inbounds [32 x i32]* %11, i32 0, i64 %9, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 177:5]
  %13 = load i32* %12, align 4, !dbg !1304        ; [#uses=1 type=i32] [debug line = 177:5]
  %14 = load i32* %i, align 4, !dbg !1304         ; [#uses=1 type=i32] [debug line = 177:5]
  %15 = sext i32 %14 to i64, !dbg !1304           ; [#uses=1 type=i64] [debug line = 177:5]
  %16 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1304 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 177:5]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %16, i32 0, i32 0, !dbg !1304 ; [#uses=1 type=[32 x i32]*] [debug line = 177:5]
  %18 = getelementptr inbounds [32 x i32]* %17, i32 0, i64 %15, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 177:5]
  %19 = load i32* %18, align 4, !dbg !1304        ; [#uses=1 type=i32] [debug line = 177:5]
  %20 = sub i32 %13, %19, !dbg !1304              ; [#uses=1 type=i32] [debug line = 177:5]
  %21 = load i32* %b, align 4, !dbg !1304         ; [#uses=1 type=i32] [debug line = 177:5]
  %22 = sub i32 %20, %21, !dbg !1304              ; [#uses=1 type=i32] [debug line = 177:5]
  store i32 %22, i32* %t, align 4, !dbg !1304     ; [debug line = 177:5]
  %23 = load i32* %t, align 4, !dbg !1306         ; [#uses=1 type=i32] [debug line = 178:5]
  %24 = and i32 %23, 255, !dbg !1306              ; [#uses=1 type=i32] [debug line = 178:5]
  %25 = load i32* %i, align 4, !dbg !1306         ; [#uses=1 type=i32] [debug line = 178:5]
  %26 = sext i32 %25 to i64, !dbg !1306           ; [#uses=1 type=i64] [debug line = 178:5]
  %27 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1306 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 178:5]
  %28 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %27, i32 0, i32 0, !dbg !1306 ; [#uses=1 type=[32 x i32]*] [debug line = 178:5]
  %29 = getelementptr inbounds [32 x i32]* %28, i32 0, i64 %26, !dbg !1306 ; [#uses=1 type=i32*] [debug line = 178:5]
  store i32 %24, i32* %29, align 4, !dbg !1306    ; [debug line = 178:5]
  %30 = load i32* %t, align 4, !dbg !1307         ; [#uses=1 type=i32] [debug line = 179:5]
  %31 = lshr i32 %30, 8, !dbg !1307               ; [#uses=1 type=i32] [debug line = 179:5]
  %32 = and i32 %31, 1, !dbg !1307                ; [#uses=1 type=i32] [debug line = 179:5]
  store i32 %32, i32* %b, align 4, !dbg !1307     ; [debug line = 179:5]
  br label %33, !dbg !1308                        ; [debug line = 180:3]

; <label>:33                                      ; preds = %7
  %34 = load i32* %i, align 4, !dbg !1309         ; [#uses=1 type=i32] [debug line = 175:16]
  %35 = add nsw i32 %34, 1, !dbg !1309            ; [#uses=1 type=i32] [debug line = 175:16]
  store i32 %35, i32* %i, align 4, !dbg !1309     ; [debug line = 175:16]
  br label %4, !dbg !1309                         ; [debug line = 175:16]

; <label>:36                                      ; preds = %4
  ret void, !dbg !1310                            ; [debug line = 181:1]
}

; [#uses=2]
define void @crypto_sign_ed25519_ref_sc25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=18 type=i32*]
  %j = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %carry = alloca i32, align 4                    ; [#uses=2 type=i32*]
  %t = alloca [64 x i32], align 16                ; [#uses=6 type=[64 x i32]*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1311), !dbg !1312 ; [debug line = 183:75] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1313), !dbg !1314 ; [debug line = 183:117] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1315), !dbg !1316 ; [debug line = 183:159] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1317), !dbg !1319 ; [debug line = 185:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !1320), !dbg !1321 ; [debug line = 185:9] [debug variable = j]
  call void @llvm.dbg.declare(metadata !{i32* %carry}, metadata !1322), !dbg !1323 ; [debug line = 185:11] [debug variable = carry]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !1324), !dbg !1325 ; [debug line = 186:17] [debug variable = t]
  store i32 0, i32* %i, align 4, !dbg !1326       ; [debug line = 187:7]
  br label %4, !dbg !1326                         ; [debug line = 187:7]

; <label>:4                                       ; preds = %11, %0
  %5 = load i32* %i, align 4, !dbg !1326          ; [#uses=1 type=i32] [debug line = 187:7]
  %6 = icmp slt i32 %5, 64, !dbg !1326            ; [#uses=1 type=i1] [debug line = 187:7]
  br i1 %6, label %7, label %14, !dbg !1326       ; [debug line = 187:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1328          ; [#uses=1 type=i32] [debug line = 187:20]
  %9 = sext i32 %8 to i64, !dbg !1328             ; [#uses=1 type=i64] [debug line = 187:20]
  %10 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %9, !dbg !1328 ; [#uses=1 type=i32*] [debug line = 187:20]
  store i32 0, i32* %10, align 4, !dbg !1328      ; [debug line = 187:20]
  br label %11, !dbg !1328                        ; [debug line = 187:20]

; <label>:11                                      ; preds = %7
  %12 = load i32* %i, align 4, !dbg !1329         ; [#uses=1 type=i32] [debug line = 187:16]
  %13 = add nsw i32 %12, 1, !dbg !1329            ; [#uses=1 type=i32] [debug line = 187:16]
  store i32 %13, i32* %i, align 4, !dbg !1329     ; [debug line = 187:16]
  br label %4, !dbg !1329                         ; [debug line = 187:16]

; <label>:14                                      ; preds = %4
  store i32 0, i32* %i, align 4, !dbg !1330       ; [debug line = 189:7]
  br label %15, !dbg !1330                        ; [debug line = 189:7]

; <label>:15                                      ; preds = %47, %14
  %16 = load i32* %i, align 4, !dbg !1330         ; [#uses=1 type=i32] [debug line = 189:7]
  %17 = icmp slt i32 %16, 32, !dbg !1330          ; [#uses=1 type=i1] [debug line = 189:7]
  br i1 %17, label %18, label %50, !dbg !1330     ; [debug line = 189:7]

; <label>:18                                      ; preds = %15
  store i32 0, i32* %j, align 4, !dbg !1332       ; [debug line = 190:9]
  br label %19, !dbg !1332                        ; [debug line = 190:9]

; <label>:19                                      ; preds = %43, %18
  %20 = load i32* %j, align 4, !dbg !1332         ; [#uses=1 type=i32] [debug line = 190:9]
  %21 = icmp slt i32 %20, 32, !dbg !1332          ; [#uses=1 type=i1] [debug line = 190:9]
  br i1 %21, label %22, label %46, !dbg !1332     ; [debug line = 190:9]

; <label>:22                                      ; preds = %19
  %23 = load i32* %i, align 4, !dbg !1334         ; [#uses=1 type=i32] [debug line = 191:7]
  %24 = sext i32 %23 to i64, !dbg !1334           ; [#uses=1 type=i64] [debug line = 191:7]
  %25 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1334 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 191:7]
  %26 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %25, i32 0, i32 0, !dbg !1334 ; [#uses=1 type=[32 x i32]*] [debug line = 191:7]
  %27 = getelementptr inbounds [32 x i32]* %26, i32 0, i64 %24, !dbg !1334 ; [#uses=1 type=i32*] [debug line = 191:7]
  %28 = load i32* %27, align 4, !dbg !1334        ; [#uses=1 type=i32] [debug line = 191:7]
  %29 = load i32* %j, align 4, !dbg !1334         ; [#uses=1 type=i32] [debug line = 191:7]
  %30 = sext i32 %29 to i64, !dbg !1334           ; [#uses=1 type=i64] [debug line = 191:7]
  %31 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1334 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 191:7]
  %32 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %31, i32 0, i32 0, !dbg !1334 ; [#uses=1 type=[32 x i32]*] [debug line = 191:7]
  %33 = getelementptr inbounds [32 x i32]* %32, i32 0, i64 %30, !dbg !1334 ; [#uses=1 type=i32*] [debug line = 191:7]
  %34 = load i32* %33, align 4, !dbg !1334        ; [#uses=1 type=i32] [debug line = 191:7]
  %35 = mul i32 %28, %34, !dbg !1334              ; [#uses=1 type=i32] [debug line = 191:7]
  %36 = load i32* %i, align 4, !dbg !1334         ; [#uses=1 type=i32] [debug line = 191:7]
  %37 = load i32* %j, align 4, !dbg !1334         ; [#uses=1 type=i32] [debug line = 191:7]
  %38 = add nsw i32 %36, %37, !dbg !1334          ; [#uses=1 type=i32] [debug line = 191:7]
  %39 = sext i32 %38 to i64, !dbg !1334           ; [#uses=1 type=i64] [debug line = 191:7]
  %40 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %39, !dbg !1334 ; [#uses=2 type=i32*] [debug line = 191:7]
  %41 = load i32* %40, align 4, !dbg !1334        ; [#uses=1 type=i32] [debug line = 191:7]
  %42 = add i32 %41, %35, !dbg !1334              ; [#uses=1 type=i32] [debug line = 191:7]
  store i32 %42, i32* %40, align 4, !dbg !1334    ; [debug line = 191:7]
  br label %43, !dbg !1334                        ; [debug line = 191:7]

; <label>:43                                      ; preds = %22
  %44 = load i32* %j, align 4, !dbg !1335         ; [#uses=1 type=i32] [debug line = 190:18]
  %45 = add nsw i32 %44, 1, !dbg !1335            ; [#uses=1 type=i32] [debug line = 190:18]
  store i32 %45, i32* %j, align 4, !dbg !1335     ; [debug line = 190:18]
  br label %19, !dbg !1335                        ; [debug line = 190:18]

; <label>:46                                      ; preds = %19
  br label %47, !dbg !1336                        ; [debug line = 191:33]

; <label>:47                                      ; preds = %46
  %48 = load i32* %i, align 4, !dbg !1337         ; [#uses=1 type=i32] [debug line = 189:16]
  %49 = add nsw i32 %48, 1, !dbg !1337            ; [#uses=1 type=i32] [debug line = 189:16]
  store i32 %49, i32* %i, align 4, !dbg !1337     ; [debug line = 189:16]
  br label %15, !dbg !1337                        ; [debug line = 189:16]

; <label>:50                                      ; preds = %15
  store i32 0, i32* %i, align 4, !dbg !1338       ; [debug line = 194:7]
  br label %51, !dbg !1338                        ; [debug line = 194:7]

; <label>:51                                      ; preds = %72, %50
  %52 = load i32* %i, align 4, !dbg !1338         ; [#uses=1 type=i32] [debug line = 194:7]
  %53 = icmp slt i32 %52, 63, !dbg !1338          ; [#uses=1 type=i1] [debug line = 194:7]
  br i1 %53, label %54, label %75, !dbg !1338     ; [debug line = 194:7]

; <label>:54                                      ; preds = %51
  %55 = load i32* %i, align 4, !dbg !1340         ; [#uses=1 type=i32] [debug line = 196:5]
  %56 = sext i32 %55 to i64, !dbg !1340           ; [#uses=1 type=i64] [debug line = 196:5]
  %57 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %56, !dbg !1340 ; [#uses=1 type=i32*] [debug line = 196:5]
  %58 = load i32* %57, align 4, !dbg !1340        ; [#uses=1 type=i32] [debug line = 196:5]
  %59 = lshr i32 %58, 8, !dbg !1340               ; [#uses=1 type=i32] [debug line = 196:5]
  store i32 %59, i32* %carry, align 4, !dbg !1340 ; [debug line = 196:5]
  %60 = load i32* %carry, align 4, !dbg !1342     ; [#uses=1 type=i32] [debug line = 197:5]
  %61 = load i32* %i, align 4, !dbg !1342         ; [#uses=1 type=i32] [debug line = 197:5]
  %62 = add nsw i32 %61, 1, !dbg !1342            ; [#uses=1 type=i32] [debug line = 197:5]
  %63 = sext i32 %62 to i64, !dbg !1342           ; [#uses=1 type=i64] [debug line = 197:5]
  %64 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %63, !dbg !1342 ; [#uses=2 type=i32*] [debug line = 197:5]
  %65 = load i32* %64, align 4, !dbg !1342        ; [#uses=1 type=i32] [debug line = 197:5]
  %66 = add i32 %65, %60, !dbg !1342              ; [#uses=1 type=i32] [debug line = 197:5]
  store i32 %66, i32* %64, align 4, !dbg !1342    ; [debug line = 197:5]
  %67 = load i32* %i, align 4, !dbg !1343         ; [#uses=1 type=i32] [debug line = 198:5]
  %68 = sext i32 %67 to i64, !dbg !1343           ; [#uses=1 type=i64] [debug line = 198:5]
  %69 = getelementptr inbounds [64 x i32]* %t, i32 0, i64 %68, !dbg !1343 ; [#uses=2 type=i32*] [debug line = 198:5]
  %70 = load i32* %69, align 4, !dbg !1343        ; [#uses=1 type=i32] [debug line = 198:5]
  %71 = and i32 %70, 255, !dbg !1343              ; [#uses=1 type=i32] [debug line = 198:5]
  store i32 %71, i32* %69, align 4, !dbg !1343    ; [debug line = 198:5]
  br label %72, !dbg !1344                        ; [debug line = 199:3]

; <label>:72                                      ; preds = %54
  %73 = load i32* %i, align 4, !dbg !1345         ; [#uses=1 type=i32] [debug line = 194:16]
  %74 = add nsw i32 %73, 1, !dbg !1345            ; [#uses=1 type=i32] [debug line = 194:16]
  store i32 %74, i32* %i, align 4, !dbg !1345     ; [debug line = 194:16]
  br label %51, !dbg !1345                        ; [debug line = 194:16]

; <label>:75                                      ; preds = %51
  %76 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1346 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 201:3]
  %77 = getelementptr inbounds [64 x i32]* %t, i32 0, i32 0, !dbg !1346 ; [#uses=1 type=i32*] [debug line = 201:3]
  call void @barrett_reduce(%struct.crypto_sign_ed25519_ref_fe25519* %76, i32* %77), !dbg !1346 ; [debug line = 201:3]
  ret void, !dbg !1347                            ; [debug line = 202:1]
}

; [#uses=0]
define void @crypto_sign_ed25519_ref_sc25519_mul_shortsc(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_shortsc25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_shortsc25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_shortsc25519**]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1348), !dbg !1349 ; [debug line = 204:83] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1350), !dbg !1351 ; [debug line = 204:125] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_shortsc25519* %y, %struct.crypto_sign_ed25519_ref_shortsc25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_shortsc25519** %3}, metadata !1352), !dbg !1353 ; [debug line = 204:172] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !1354), !dbg !1356 ; [debug line = 206:35] [debug variable = t]
  %4 = load %struct.crypto_sign_ed25519_ref_shortsc25519** %3, align 8, !dbg !1357 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_shortsc25519*] [debug line = 207:3]
  call void @crypto_sign_ed25519_ref_sc25519_from_shortsc(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_shortsc25519* %4), !dbg !1357 ; [debug line = 207:3]
  %5 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1358 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 208:3]
  %6 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1358 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 208:3]
  call void @crypto_sign_ed25519_ref_sc25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %5, %struct.crypto_sign_ed25519_ref_fe25519* %6, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !1358 ; [debug line = 208:3]
  ret void, !dbg !1359                            ; [debug line = 209:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_sc25519_window3(i8* %r, %struct.crypto_sign_ed25519_ref_fe25519* %s) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=25 type=i8**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=17 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %carry = alloca i8, align 1                     ; [#uses=5 type=i8*]
  %i = alloca i32, align 4                        ; [#uses=46 type=i32*]
  store i8* %r, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !1360), !dbg !1361 ; [debug line = 211:58] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1362), !dbg !1363 ; [debug line = 211:104] [debug variable = s]
  %3 = load i8** %1, align 8, !dbg !1364          ; [#uses=1 type=i8*] [debug line = 212:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 85) nounwind, !dbg !1364 ; [debug line = 212:2]
  call void @llvm.dbg.declare(metadata !{i8* %carry}, metadata !1366), !dbg !1368 ; [debug line = 213:8] [debug variable = carry]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1369), !dbg !1370 ; [debug line = 214:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1371       ; [debug line = 215:7]
  br label %4, !dbg !1371                         ; [debug line = 215:7]

; <label>:4                                       ; preds = %183, %0
  %5 = load i32* %i, align 4, !dbg !1371          ; [#uses=1 type=i32] [debug line = 215:7]
  %6 = icmp slt i32 %5, 10, !dbg !1371            ; [#uses=1 type=i1] [debug line = 215:7]
  br i1 %6, label %7, label %186, !dbg !1371      ; [debug line = 215:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1373          ; [#uses=1 type=i32] [debug line = 217:5]
  %9 = mul nsw i32 3, %8, !dbg !1373              ; [#uses=1 type=i32] [debug line = 217:5]
  %10 = add nsw i32 %9, 0, !dbg !1373             ; [#uses=1 type=i32] [debug line = 217:5]
  %11 = sext i32 %10 to i64, !dbg !1373           ; [#uses=1 type=i64] [debug line = 217:5]
  %12 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1373 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 217:5]
  %13 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %12, i32 0, i32 0, !dbg !1373 ; [#uses=1 type=[32 x i32]*] [debug line = 217:5]
  %14 = getelementptr inbounds [32 x i32]* %13, i32 0, i64 %11, !dbg !1373 ; [#uses=1 type=i32*] [debug line = 217:5]
  %15 = load i32* %14, align 4, !dbg !1373        ; [#uses=1 type=i32] [debug line = 217:5]
  %16 = and i32 %15, 7, !dbg !1373                ; [#uses=1 type=i32] [debug line = 217:5]
  %17 = trunc i32 %16 to i8, !dbg !1373           ; [#uses=1 type=i8] [debug line = 217:5]
  %18 = load i32* %i, align 4, !dbg !1373         ; [#uses=1 type=i32] [debug line = 217:5]
  %19 = mul nsw i32 8, %18, !dbg !1373            ; [#uses=1 type=i32] [debug line = 217:5]
  %20 = add nsw i32 %19, 0, !dbg !1373            ; [#uses=1 type=i32] [debug line = 217:5]
  %21 = sext i32 %20 to i64, !dbg !1373           ; [#uses=1 type=i64] [debug line = 217:5]
  %22 = load i8** %1, align 8, !dbg !1373         ; [#uses=1 type=i8*] [debug line = 217:5]
  %23 = getelementptr inbounds i8* %22, i64 %21, !dbg !1373 ; [#uses=1 type=i8*] [debug line = 217:5]
  store i8 %17, i8* %23, align 1, !dbg !1373      ; [debug line = 217:5]
  %24 = load i32* %i, align 4, !dbg !1375         ; [#uses=1 type=i32] [debug line = 218:5]
  %25 = mul nsw i32 3, %24, !dbg !1375            ; [#uses=1 type=i32] [debug line = 218:5]
  %26 = add nsw i32 %25, 0, !dbg !1375            ; [#uses=1 type=i32] [debug line = 218:5]
  %27 = sext i32 %26 to i64, !dbg !1375           ; [#uses=1 type=i64] [debug line = 218:5]
  %28 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1375 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 218:5]
  %29 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %28, i32 0, i32 0, !dbg !1375 ; [#uses=1 type=[32 x i32]*] [debug line = 218:5]
  %30 = getelementptr inbounds [32 x i32]* %29, i32 0, i64 %27, !dbg !1375 ; [#uses=1 type=i32*] [debug line = 218:5]
  %31 = load i32* %30, align 4, !dbg !1375        ; [#uses=1 type=i32] [debug line = 218:5]
  %32 = lshr i32 %31, 3, !dbg !1375               ; [#uses=1 type=i32] [debug line = 218:5]
  %33 = and i32 %32, 7, !dbg !1375                ; [#uses=1 type=i32] [debug line = 218:5]
  %34 = trunc i32 %33 to i8, !dbg !1375           ; [#uses=1 type=i8] [debug line = 218:5]
  %35 = load i32* %i, align 4, !dbg !1375         ; [#uses=1 type=i32] [debug line = 218:5]
  %36 = mul nsw i32 8, %35, !dbg !1375            ; [#uses=1 type=i32] [debug line = 218:5]
  %37 = add nsw i32 %36, 1, !dbg !1375            ; [#uses=1 type=i32] [debug line = 218:5]
  %38 = sext i32 %37 to i64, !dbg !1375           ; [#uses=1 type=i64] [debug line = 218:5]
  %39 = load i8** %1, align 8, !dbg !1375         ; [#uses=1 type=i8*] [debug line = 218:5]
  %40 = getelementptr inbounds i8* %39, i64 %38, !dbg !1375 ; [#uses=1 type=i8*] [debug line = 218:5]
  store i8 %34, i8* %40, align 1, !dbg !1375      ; [debug line = 218:5]
  %41 = load i32* %i, align 4, !dbg !1376         ; [#uses=1 type=i32] [debug line = 219:5]
  %42 = mul nsw i32 3, %41, !dbg !1376            ; [#uses=1 type=i32] [debug line = 219:5]
  %43 = add nsw i32 %42, 0, !dbg !1376            ; [#uses=1 type=i32] [debug line = 219:5]
  %44 = sext i32 %43 to i64, !dbg !1376           ; [#uses=1 type=i64] [debug line = 219:5]
  %45 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1376 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 219:5]
  %46 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %45, i32 0, i32 0, !dbg !1376 ; [#uses=1 type=[32 x i32]*] [debug line = 219:5]
  %47 = getelementptr inbounds [32 x i32]* %46, i32 0, i64 %44, !dbg !1376 ; [#uses=1 type=i32*] [debug line = 219:5]
  %48 = load i32* %47, align 4, !dbg !1376        ; [#uses=1 type=i32] [debug line = 219:5]
  %49 = lshr i32 %48, 6, !dbg !1376               ; [#uses=1 type=i32] [debug line = 219:5]
  %50 = and i32 %49, 7, !dbg !1376                ; [#uses=1 type=i32] [debug line = 219:5]
  %51 = trunc i32 %50 to i8, !dbg !1376           ; [#uses=1 type=i8] [debug line = 219:5]
  %52 = load i32* %i, align 4, !dbg !1376         ; [#uses=1 type=i32] [debug line = 219:5]
  %53 = mul nsw i32 8, %52, !dbg !1376            ; [#uses=1 type=i32] [debug line = 219:5]
  %54 = add nsw i32 %53, 2, !dbg !1376            ; [#uses=1 type=i32] [debug line = 219:5]
  %55 = sext i32 %54 to i64, !dbg !1376           ; [#uses=1 type=i64] [debug line = 219:5]
  %56 = load i8** %1, align 8, !dbg !1376         ; [#uses=1 type=i8*] [debug line = 219:5]
  %57 = getelementptr inbounds i8* %56, i64 %55, !dbg !1376 ; [#uses=1 type=i8*] [debug line = 219:5]
  store i8 %51, i8* %57, align 1, !dbg !1376      ; [debug line = 219:5]
  %58 = load i32* %i, align 4, !dbg !1377         ; [#uses=1 type=i32] [debug line = 220:5]
  %59 = mul nsw i32 3, %58, !dbg !1377            ; [#uses=1 type=i32] [debug line = 220:5]
  %60 = add nsw i32 %59, 1, !dbg !1377            ; [#uses=1 type=i32] [debug line = 220:5]
  %61 = sext i32 %60 to i64, !dbg !1377           ; [#uses=1 type=i64] [debug line = 220:5]
  %62 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1377 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 220:5]
  %63 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %62, i32 0, i32 0, !dbg !1377 ; [#uses=1 type=[32 x i32]*] [debug line = 220:5]
  %64 = getelementptr inbounds [32 x i32]* %63, i32 0, i64 %61, !dbg !1377 ; [#uses=1 type=i32*] [debug line = 220:5]
  %65 = load i32* %64, align 4, !dbg !1377        ; [#uses=1 type=i32] [debug line = 220:5]
  %66 = shl i32 %65, 2, !dbg !1377                ; [#uses=1 type=i32] [debug line = 220:5]
  %67 = and i32 %66, 7, !dbg !1377                ; [#uses=1 type=i32] [debug line = 220:5]
  %68 = load i32* %i, align 4, !dbg !1377         ; [#uses=1 type=i32] [debug line = 220:5]
  %69 = mul nsw i32 8, %68, !dbg !1377            ; [#uses=1 type=i32] [debug line = 220:5]
  %70 = add nsw i32 %69, 2, !dbg !1377            ; [#uses=1 type=i32] [debug line = 220:5]
  %71 = sext i32 %70 to i64, !dbg !1377           ; [#uses=1 type=i64] [debug line = 220:5]
  %72 = load i8** %1, align 8, !dbg !1377         ; [#uses=1 type=i8*] [debug line = 220:5]
  %73 = getelementptr inbounds i8* %72, i64 %71, !dbg !1377 ; [#uses=2 type=i8*] [debug line = 220:5]
  %74 = load i8* %73, align 1, !dbg !1377         ; [#uses=1 type=i8] [debug line = 220:5]
  %75 = sext i8 %74 to i32, !dbg !1377            ; [#uses=1 type=i32] [debug line = 220:5]
  %76 = xor i32 %75, %67, !dbg !1377              ; [#uses=1 type=i32] [debug line = 220:5]
  %77 = trunc i32 %76 to i8, !dbg !1377           ; [#uses=1 type=i8] [debug line = 220:5]
  store i8 %77, i8* %73, align 1, !dbg !1377      ; [debug line = 220:5]
  %78 = load i32* %i, align 4, !dbg !1378         ; [#uses=1 type=i32] [debug line = 221:5]
  %79 = mul nsw i32 3, %78, !dbg !1378            ; [#uses=1 type=i32] [debug line = 221:5]
  %80 = add nsw i32 %79, 1, !dbg !1378            ; [#uses=1 type=i32] [debug line = 221:5]
  %81 = sext i32 %80 to i64, !dbg !1378           ; [#uses=1 type=i64] [debug line = 221:5]
  %82 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1378 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 221:5]
  %83 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %82, i32 0, i32 0, !dbg !1378 ; [#uses=1 type=[32 x i32]*] [debug line = 221:5]
  %84 = getelementptr inbounds [32 x i32]* %83, i32 0, i64 %81, !dbg !1378 ; [#uses=1 type=i32*] [debug line = 221:5]
  %85 = load i32* %84, align 4, !dbg !1378        ; [#uses=1 type=i32] [debug line = 221:5]
  %86 = lshr i32 %85, 1, !dbg !1378               ; [#uses=1 type=i32] [debug line = 221:5]
  %87 = and i32 %86, 7, !dbg !1378                ; [#uses=1 type=i32] [debug line = 221:5]
  %88 = trunc i32 %87 to i8, !dbg !1378           ; [#uses=1 type=i8] [debug line = 221:5]
  %89 = load i32* %i, align 4, !dbg !1378         ; [#uses=1 type=i32] [debug line = 221:5]
  %90 = mul nsw i32 8, %89, !dbg !1378            ; [#uses=1 type=i32] [debug line = 221:5]
  %91 = add nsw i32 %90, 3, !dbg !1378            ; [#uses=1 type=i32] [debug line = 221:5]
  %92 = sext i32 %91 to i64, !dbg !1378           ; [#uses=1 type=i64] [debug line = 221:5]
  %93 = load i8** %1, align 8, !dbg !1378         ; [#uses=1 type=i8*] [debug line = 221:5]
  %94 = getelementptr inbounds i8* %93, i64 %92, !dbg !1378 ; [#uses=1 type=i8*] [debug line = 221:5]
  store i8 %88, i8* %94, align 1, !dbg !1378      ; [debug line = 221:5]
  %95 = load i32* %i, align 4, !dbg !1379         ; [#uses=1 type=i32] [debug line = 222:5]
  %96 = mul nsw i32 3, %95, !dbg !1379            ; [#uses=1 type=i32] [debug line = 222:5]
  %97 = add nsw i32 %96, 1, !dbg !1379            ; [#uses=1 type=i32] [debug line = 222:5]
  %98 = sext i32 %97 to i64, !dbg !1379           ; [#uses=1 type=i64] [debug line = 222:5]
  %99 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1379 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 222:5]
  %100 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %99, i32 0, i32 0, !dbg !1379 ; [#uses=1 type=[32 x i32]*] [debug line = 222:5]
  %101 = getelementptr inbounds [32 x i32]* %100, i32 0, i64 %98, !dbg !1379 ; [#uses=1 type=i32*] [debug line = 222:5]
  %102 = load i32* %101, align 4, !dbg !1379      ; [#uses=1 type=i32] [debug line = 222:5]
  %103 = lshr i32 %102, 4, !dbg !1379             ; [#uses=1 type=i32] [debug line = 222:5]
  %104 = and i32 %103, 7, !dbg !1379              ; [#uses=1 type=i32] [debug line = 222:5]
  %105 = trunc i32 %104 to i8, !dbg !1379         ; [#uses=1 type=i8] [debug line = 222:5]
  %106 = load i32* %i, align 4, !dbg !1379        ; [#uses=1 type=i32] [debug line = 222:5]
  %107 = mul nsw i32 8, %106, !dbg !1379          ; [#uses=1 type=i32] [debug line = 222:5]
  %108 = add nsw i32 %107, 4, !dbg !1379          ; [#uses=1 type=i32] [debug line = 222:5]
  %109 = sext i32 %108 to i64, !dbg !1379         ; [#uses=1 type=i64] [debug line = 222:5]
  %110 = load i8** %1, align 8, !dbg !1379        ; [#uses=1 type=i8*] [debug line = 222:5]
  %111 = getelementptr inbounds i8* %110, i64 %109, !dbg !1379 ; [#uses=1 type=i8*] [debug line = 222:5]
  store i8 %105, i8* %111, align 1, !dbg !1379    ; [debug line = 222:5]
  %112 = load i32* %i, align 4, !dbg !1380        ; [#uses=1 type=i32] [debug line = 223:5]
  %113 = mul nsw i32 3, %112, !dbg !1380          ; [#uses=1 type=i32] [debug line = 223:5]
  %114 = add nsw i32 %113, 1, !dbg !1380          ; [#uses=1 type=i32] [debug line = 223:5]
  %115 = sext i32 %114 to i64, !dbg !1380         ; [#uses=1 type=i64] [debug line = 223:5]
  %116 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1380 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 223:5]
  %117 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %116, i32 0, i32 0, !dbg !1380 ; [#uses=1 type=[32 x i32]*] [debug line = 223:5]
  %118 = getelementptr inbounds [32 x i32]* %117, i32 0, i64 %115, !dbg !1380 ; [#uses=1 type=i32*] [debug line = 223:5]
  %119 = load i32* %118, align 4, !dbg !1380      ; [#uses=1 type=i32] [debug line = 223:5]
  %120 = lshr i32 %119, 7, !dbg !1380             ; [#uses=1 type=i32] [debug line = 223:5]
  %121 = and i32 %120, 7, !dbg !1380              ; [#uses=1 type=i32] [debug line = 223:5]
  %122 = trunc i32 %121 to i8, !dbg !1380         ; [#uses=1 type=i8] [debug line = 223:5]
  %123 = load i32* %i, align 4, !dbg !1380        ; [#uses=1 type=i32] [debug line = 223:5]
  %124 = mul nsw i32 8, %123, !dbg !1380          ; [#uses=1 type=i32] [debug line = 223:5]
  %125 = add nsw i32 %124, 5, !dbg !1380          ; [#uses=1 type=i32] [debug line = 223:5]
  %126 = sext i32 %125 to i64, !dbg !1380         ; [#uses=1 type=i64] [debug line = 223:5]
  %127 = load i8** %1, align 8, !dbg !1380        ; [#uses=1 type=i8*] [debug line = 223:5]
  %128 = getelementptr inbounds i8* %127, i64 %126, !dbg !1380 ; [#uses=1 type=i8*] [debug line = 223:5]
  store i8 %122, i8* %128, align 1, !dbg !1380    ; [debug line = 223:5]
  %129 = load i32* %i, align 4, !dbg !1381        ; [#uses=1 type=i32] [debug line = 224:5]
  %130 = mul nsw i32 3, %129, !dbg !1381          ; [#uses=1 type=i32] [debug line = 224:5]
  %131 = add nsw i32 %130, 2, !dbg !1381          ; [#uses=1 type=i32] [debug line = 224:5]
  %132 = sext i32 %131 to i64, !dbg !1381         ; [#uses=1 type=i64] [debug line = 224:5]
  %133 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1381 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 224:5]
  %134 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %133, i32 0, i32 0, !dbg !1381 ; [#uses=1 type=[32 x i32]*] [debug line = 224:5]
  %135 = getelementptr inbounds [32 x i32]* %134, i32 0, i64 %132, !dbg !1381 ; [#uses=1 type=i32*] [debug line = 224:5]
  %136 = load i32* %135, align 4, !dbg !1381      ; [#uses=1 type=i32] [debug line = 224:5]
  %137 = shl i32 %136, 1, !dbg !1381              ; [#uses=1 type=i32] [debug line = 224:5]
  %138 = and i32 %137, 7, !dbg !1381              ; [#uses=1 type=i32] [debug line = 224:5]
  %139 = load i32* %i, align 4, !dbg !1381        ; [#uses=1 type=i32] [debug line = 224:5]
  %140 = mul nsw i32 8, %139, !dbg !1381          ; [#uses=1 type=i32] [debug line = 224:5]
  %141 = add nsw i32 %140, 5, !dbg !1381          ; [#uses=1 type=i32] [debug line = 224:5]
  %142 = sext i32 %141 to i64, !dbg !1381         ; [#uses=1 type=i64] [debug line = 224:5]
  %143 = load i8** %1, align 8, !dbg !1381        ; [#uses=1 type=i8*] [debug line = 224:5]
  %144 = getelementptr inbounds i8* %143, i64 %142, !dbg !1381 ; [#uses=2 type=i8*] [debug line = 224:5]
  %145 = load i8* %144, align 1, !dbg !1381       ; [#uses=1 type=i8] [debug line = 224:5]
  %146 = sext i8 %145 to i32, !dbg !1381          ; [#uses=1 type=i32] [debug line = 224:5]
  %147 = xor i32 %146, %138, !dbg !1381           ; [#uses=1 type=i32] [debug line = 224:5]
  %148 = trunc i32 %147 to i8, !dbg !1381         ; [#uses=1 type=i8] [debug line = 224:5]
  store i8 %148, i8* %144, align 1, !dbg !1381    ; [debug line = 224:5]
  %149 = load i32* %i, align 4, !dbg !1382        ; [#uses=1 type=i32] [debug line = 225:5]
  %150 = mul nsw i32 3, %149, !dbg !1382          ; [#uses=1 type=i32] [debug line = 225:5]
  %151 = add nsw i32 %150, 2, !dbg !1382          ; [#uses=1 type=i32] [debug line = 225:5]
  %152 = sext i32 %151 to i64, !dbg !1382         ; [#uses=1 type=i64] [debug line = 225:5]
  %153 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1382 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 225:5]
  %154 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %153, i32 0, i32 0, !dbg !1382 ; [#uses=1 type=[32 x i32]*] [debug line = 225:5]
  %155 = getelementptr inbounds [32 x i32]* %154, i32 0, i64 %152, !dbg !1382 ; [#uses=1 type=i32*] [debug line = 225:5]
  %156 = load i32* %155, align 4, !dbg !1382      ; [#uses=1 type=i32] [debug line = 225:5]
  %157 = lshr i32 %156, 2, !dbg !1382             ; [#uses=1 type=i32] [debug line = 225:5]
  %158 = and i32 %157, 7, !dbg !1382              ; [#uses=1 type=i32] [debug line = 225:5]
  %159 = trunc i32 %158 to i8, !dbg !1382         ; [#uses=1 type=i8] [debug line = 225:5]
  %160 = load i32* %i, align 4, !dbg !1382        ; [#uses=1 type=i32] [debug line = 225:5]
  %161 = mul nsw i32 8, %160, !dbg !1382          ; [#uses=1 type=i32] [debug line = 225:5]
  %162 = add nsw i32 %161, 6, !dbg !1382          ; [#uses=1 type=i32] [debug line = 225:5]
  %163 = sext i32 %162 to i64, !dbg !1382         ; [#uses=1 type=i64] [debug line = 225:5]
  %164 = load i8** %1, align 8, !dbg !1382        ; [#uses=1 type=i8*] [debug line = 225:5]
  %165 = getelementptr inbounds i8* %164, i64 %163, !dbg !1382 ; [#uses=1 type=i8*] [debug line = 225:5]
  store i8 %159, i8* %165, align 1, !dbg !1382    ; [debug line = 225:5]
  %166 = load i32* %i, align 4, !dbg !1383        ; [#uses=1 type=i32] [debug line = 226:5]
  %167 = mul nsw i32 3, %166, !dbg !1383          ; [#uses=1 type=i32] [debug line = 226:5]
  %168 = add nsw i32 %167, 2, !dbg !1383          ; [#uses=1 type=i32] [debug line = 226:5]
  %169 = sext i32 %168 to i64, !dbg !1383         ; [#uses=1 type=i64] [debug line = 226:5]
  %170 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1383 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 226:5]
  %171 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %170, i32 0, i32 0, !dbg !1383 ; [#uses=1 type=[32 x i32]*] [debug line = 226:5]
  %172 = getelementptr inbounds [32 x i32]* %171, i32 0, i64 %169, !dbg !1383 ; [#uses=1 type=i32*] [debug line = 226:5]
  %173 = load i32* %172, align 4, !dbg !1383      ; [#uses=1 type=i32] [debug line = 226:5]
  %174 = lshr i32 %173, 5, !dbg !1383             ; [#uses=1 type=i32] [debug line = 226:5]
  %175 = and i32 %174, 7, !dbg !1383              ; [#uses=1 type=i32] [debug line = 226:5]
  %176 = trunc i32 %175 to i8, !dbg !1383         ; [#uses=1 type=i8] [debug line = 226:5]
  %177 = load i32* %i, align 4, !dbg !1383        ; [#uses=1 type=i32] [debug line = 226:5]
  %178 = mul nsw i32 8, %177, !dbg !1383          ; [#uses=1 type=i32] [debug line = 226:5]
  %179 = add nsw i32 %178, 7, !dbg !1383          ; [#uses=1 type=i32] [debug line = 226:5]
  %180 = sext i32 %179 to i64, !dbg !1383         ; [#uses=1 type=i64] [debug line = 226:5]
  %181 = load i8** %1, align 8, !dbg !1383        ; [#uses=1 type=i8*] [debug line = 226:5]
  %182 = getelementptr inbounds i8* %181, i64 %180, !dbg !1383 ; [#uses=1 type=i8*] [debug line = 226:5]
  store i8 %176, i8* %182, align 1, !dbg !1383    ; [debug line = 226:5]
  br label %183, !dbg !1384                       ; [debug line = 227:3]

; <label>:183                                     ; preds = %7
  %184 = load i32* %i, align 4, !dbg !1385        ; [#uses=1 type=i32] [debug line = 215:16]
  %185 = add nsw i32 %184, 1, !dbg !1385          ; [#uses=1 type=i32] [debug line = 215:16]
  store i32 %185, i32* %i, align 4, !dbg !1385    ; [debug line = 215:16]
  br label %4, !dbg !1385                         ; [debug line = 215:16]

; <label>:186                                     ; preds = %4
  %187 = load i32* %i, align 4, !dbg !1386        ; [#uses=1 type=i32] [debug line = 228:3]
  %188 = mul nsw i32 3, %187, !dbg !1386          ; [#uses=1 type=i32] [debug line = 228:3]
  %189 = add nsw i32 %188, 0, !dbg !1386          ; [#uses=1 type=i32] [debug line = 228:3]
  %190 = sext i32 %189 to i64, !dbg !1386         ; [#uses=1 type=i64] [debug line = 228:3]
  %191 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1386 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 228:3]
  %192 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %191, i32 0, i32 0, !dbg !1386 ; [#uses=1 type=[32 x i32]*] [debug line = 228:3]
  %193 = getelementptr inbounds [32 x i32]* %192, i32 0, i64 %190, !dbg !1386 ; [#uses=1 type=i32*] [debug line = 228:3]
  %194 = load i32* %193, align 4, !dbg !1386      ; [#uses=1 type=i32] [debug line = 228:3]
  %195 = and i32 %194, 7, !dbg !1386              ; [#uses=1 type=i32] [debug line = 228:3]
  %196 = trunc i32 %195 to i8, !dbg !1386         ; [#uses=1 type=i8] [debug line = 228:3]
  %197 = load i32* %i, align 4, !dbg !1386        ; [#uses=1 type=i32] [debug line = 228:3]
  %198 = mul nsw i32 8, %197, !dbg !1386          ; [#uses=1 type=i32] [debug line = 228:3]
  %199 = add nsw i32 %198, 0, !dbg !1386          ; [#uses=1 type=i32] [debug line = 228:3]
  %200 = sext i32 %199 to i64, !dbg !1386         ; [#uses=1 type=i64] [debug line = 228:3]
  %201 = load i8** %1, align 8, !dbg !1386        ; [#uses=1 type=i8*] [debug line = 228:3]
  %202 = getelementptr inbounds i8* %201, i64 %200, !dbg !1386 ; [#uses=1 type=i8*] [debug line = 228:3]
  store i8 %196, i8* %202, align 1, !dbg !1386    ; [debug line = 228:3]
  %203 = load i32* %i, align 4, !dbg !1387        ; [#uses=1 type=i32] [debug line = 229:3]
  %204 = mul nsw i32 3, %203, !dbg !1387          ; [#uses=1 type=i32] [debug line = 229:3]
  %205 = add nsw i32 %204, 0, !dbg !1387          ; [#uses=1 type=i32] [debug line = 229:3]
  %206 = sext i32 %205 to i64, !dbg !1387         ; [#uses=1 type=i64] [debug line = 229:3]
  %207 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1387 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 229:3]
  %208 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %207, i32 0, i32 0, !dbg !1387 ; [#uses=1 type=[32 x i32]*] [debug line = 229:3]
  %209 = getelementptr inbounds [32 x i32]* %208, i32 0, i64 %206, !dbg !1387 ; [#uses=1 type=i32*] [debug line = 229:3]
  %210 = load i32* %209, align 4, !dbg !1387      ; [#uses=1 type=i32] [debug line = 229:3]
  %211 = lshr i32 %210, 3, !dbg !1387             ; [#uses=1 type=i32] [debug line = 229:3]
  %212 = and i32 %211, 7, !dbg !1387              ; [#uses=1 type=i32] [debug line = 229:3]
  %213 = trunc i32 %212 to i8, !dbg !1387         ; [#uses=1 type=i8] [debug line = 229:3]
  %214 = load i32* %i, align 4, !dbg !1387        ; [#uses=1 type=i32] [debug line = 229:3]
  %215 = mul nsw i32 8, %214, !dbg !1387          ; [#uses=1 type=i32] [debug line = 229:3]
  %216 = add nsw i32 %215, 1, !dbg !1387          ; [#uses=1 type=i32] [debug line = 229:3]
  %217 = sext i32 %216 to i64, !dbg !1387         ; [#uses=1 type=i64] [debug line = 229:3]
  %218 = load i8** %1, align 8, !dbg !1387        ; [#uses=1 type=i8*] [debug line = 229:3]
  %219 = getelementptr inbounds i8* %218, i64 %217, !dbg !1387 ; [#uses=1 type=i8*] [debug line = 229:3]
  store i8 %213, i8* %219, align 1, !dbg !1387    ; [debug line = 229:3]
  %220 = load i32* %i, align 4, !dbg !1388        ; [#uses=1 type=i32] [debug line = 230:3]
  %221 = mul nsw i32 3, %220, !dbg !1388          ; [#uses=1 type=i32] [debug line = 230:3]
  %222 = add nsw i32 %221, 0, !dbg !1388          ; [#uses=1 type=i32] [debug line = 230:3]
  %223 = sext i32 %222 to i64, !dbg !1388         ; [#uses=1 type=i64] [debug line = 230:3]
  %224 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1388 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 230:3]
  %225 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %224, i32 0, i32 0, !dbg !1388 ; [#uses=1 type=[32 x i32]*] [debug line = 230:3]
  %226 = getelementptr inbounds [32 x i32]* %225, i32 0, i64 %223, !dbg !1388 ; [#uses=1 type=i32*] [debug line = 230:3]
  %227 = load i32* %226, align 4, !dbg !1388      ; [#uses=1 type=i32] [debug line = 230:3]
  %228 = lshr i32 %227, 6, !dbg !1388             ; [#uses=1 type=i32] [debug line = 230:3]
  %229 = and i32 %228, 7, !dbg !1388              ; [#uses=1 type=i32] [debug line = 230:3]
  %230 = trunc i32 %229 to i8, !dbg !1388         ; [#uses=1 type=i8] [debug line = 230:3]
  %231 = load i32* %i, align 4, !dbg !1388        ; [#uses=1 type=i32] [debug line = 230:3]
  %232 = mul nsw i32 8, %231, !dbg !1388          ; [#uses=1 type=i32] [debug line = 230:3]
  %233 = add nsw i32 %232, 2, !dbg !1388          ; [#uses=1 type=i32] [debug line = 230:3]
  %234 = sext i32 %233 to i64, !dbg !1388         ; [#uses=1 type=i64] [debug line = 230:3]
  %235 = load i8** %1, align 8, !dbg !1388        ; [#uses=1 type=i8*] [debug line = 230:3]
  %236 = getelementptr inbounds i8* %235, i64 %234, !dbg !1388 ; [#uses=1 type=i8*] [debug line = 230:3]
  store i8 %230, i8* %236, align 1, !dbg !1388    ; [debug line = 230:3]
  %237 = load i32* %i, align 4, !dbg !1389        ; [#uses=1 type=i32] [debug line = 231:3]
  %238 = mul nsw i32 3, %237, !dbg !1389          ; [#uses=1 type=i32] [debug line = 231:3]
  %239 = add nsw i32 %238, 1, !dbg !1389          ; [#uses=1 type=i32] [debug line = 231:3]
  %240 = sext i32 %239 to i64, !dbg !1389         ; [#uses=1 type=i64] [debug line = 231:3]
  %241 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1389 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 231:3]
  %242 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %241, i32 0, i32 0, !dbg !1389 ; [#uses=1 type=[32 x i32]*] [debug line = 231:3]
  %243 = getelementptr inbounds [32 x i32]* %242, i32 0, i64 %240, !dbg !1389 ; [#uses=1 type=i32*] [debug line = 231:3]
  %244 = load i32* %243, align 4, !dbg !1389      ; [#uses=1 type=i32] [debug line = 231:3]
  %245 = shl i32 %244, 2, !dbg !1389              ; [#uses=1 type=i32] [debug line = 231:3]
  %246 = and i32 %245, 7, !dbg !1389              ; [#uses=1 type=i32] [debug line = 231:3]
  %247 = load i32* %i, align 4, !dbg !1389        ; [#uses=1 type=i32] [debug line = 231:3]
  %248 = mul nsw i32 8, %247, !dbg !1389          ; [#uses=1 type=i32] [debug line = 231:3]
  %249 = add nsw i32 %248, 2, !dbg !1389          ; [#uses=1 type=i32] [debug line = 231:3]
  %250 = sext i32 %249 to i64, !dbg !1389         ; [#uses=1 type=i64] [debug line = 231:3]
  %251 = load i8** %1, align 8, !dbg !1389        ; [#uses=1 type=i8*] [debug line = 231:3]
  %252 = getelementptr inbounds i8* %251, i64 %250, !dbg !1389 ; [#uses=2 type=i8*] [debug line = 231:3]
  %253 = load i8* %252, align 1, !dbg !1389       ; [#uses=1 type=i8] [debug line = 231:3]
  %254 = sext i8 %253 to i32, !dbg !1389          ; [#uses=1 type=i32] [debug line = 231:3]
  %255 = xor i32 %254, %246, !dbg !1389           ; [#uses=1 type=i32] [debug line = 231:3]
  %256 = trunc i32 %255 to i8, !dbg !1389         ; [#uses=1 type=i8] [debug line = 231:3]
  store i8 %256, i8* %252, align 1, !dbg !1389    ; [debug line = 231:3]
  %257 = load i32* %i, align 4, !dbg !1390        ; [#uses=1 type=i32] [debug line = 232:3]
  %258 = mul nsw i32 3, %257, !dbg !1390          ; [#uses=1 type=i32] [debug line = 232:3]
  %259 = add nsw i32 %258, 1, !dbg !1390          ; [#uses=1 type=i32] [debug line = 232:3]
  %260 = sext i32 %259 to i64, !dbg !1390         ; [#uses=1 type=i64] [debug line = 232:3]
  %261 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1390 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 232:3]
  %262 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %261, i32 0, i32 0, !dbg !1390 ; [#uses=1 type=[32 x i32]*] [debug line = 232:3]
  %263 = getelementptr inbounds [32 x i32]* %262, i32 0, i64 %260, !dbg !1390 ; [#uses=1 type=i32*] [debug line = 232:3]
  %264 = load i32* %263, align 4, !dbg !1390      ; [#uses=1 type=i32] [debug line = 232:3]
  %265 = lshr i32 %264, 1, !dbg !1390             ; [#uses=1 type=i32] [debug line = 232:3]
  %266 = and i32 %265, 7, !dbg !1390              ; [#uses=1 type=i32] [debug line = 232:3]
  %267 = trunc i32 %266 to i8, !dbg !1390         ; [#uses=1 type=i8] [debug line = 232:3]
  %268 = load i32* %i, align 4, !dbg !1390        ; [#uses=1 type=i32] [debug line = 232:3]
  %269 = mul nsw i32 8, %268, !dbg !1390          ; [#uses=1 type=i32] [debug line = 232:3]
  %270 = add nsw i32 %269, 3, !dbg !1390          ; [#uses=1 type=i32] [debug line = 232:3]
  %271 = sext i32 %270 to i64, !dbg !1390         ; [#uses=1 type=i64] [debug line = 232:3]
  %272 = load i8** %1, align 8, !dbg !1390        ; [#uses=1 type=i8*] [debug line = 232:3]
  %273 = getelementptr inbounds i8* %272, i64 %271, !dbg !1390 ; [#uses=1 type=i8*] [debug line = 232:3]
  store i8 %267, i8* %273, align 1, !dbg !1390    ; [debug line = 232:3]
  %274 = load i32* %i, align 4, !dbg !1391        ; [#uses=1 type=i32] [debug line = 233:3]
  %275 = mul nsw i32 3, %274, !dbg !1391          ; [#uses=1 type=i32] [debug line = 233:3]
  %276 = add nsw i32 %275, 1, !dbg !1391          ; [#uses=1 type=i32] [debug line = 233:3]
  %277 = sext i32 %276 to i64, !dbg !1391         ; [#uses=1 type=i64] [debug line = 233:3]
  %278 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1391 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 233:3]
  %279 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %278, i32 0, i32 0, !dbg !1391 ; [#uses=1 type=[32 x i32]*] [debug line = 233:3]
  %280 = getelementptr inbounds [32 x i32]* %279, i32 0, i64 %277, !dbg !1391 ; [#uses=1 type=i32*] [debug line = 233:3]
  %281 = load i32* %280, align 4, !dbg !1391      ; [#uses=1 type=i32] [debug line = 233:3]
  %282 = lshr i32 %281, 4, !dbg !1391             ; [#uses=1 type=i32] [debug line = 233:3]
  %283 = and i32 %282, 7, !dbg !1391              ; [#uses=1 type=i32] [debug line = 233:3]
  %284 = trunc i32 %283 to i8, !dbg !1391         ; [#uses=1 type=i8] [debug line = 233:3]
  %285 = load i32* %i, align 4, !dbg !1391        ; [#uses=1 type=i32] [debug line = 233:3]
  %286 = mul nsw i32 8, %285, !dbg !1391          ; [#uses=1 type=i32] [debug line = 233:3]
  %287 = add nsw i32 %286, 4, !dbg !1391          ; [#uses=1 type=i32] [debug line = 233:3]
  %288 = sext i32 %287 to i64, !dbg !1391         ; [#uses=1 type=i64] [debug line = 233:3]
  %289 = load i8** %1, align 8, !dbg !1391        ; [#uses=1 type=i8*] [debug line = 233:3]
  %290 = getelementptr inbounds i8* %289, i64 %288, !dbg !1391 ; [#uses=1 type=i8*] [debug line = 233:3]
  store i8 %284, i8* %290, align 1, !dbg !1391    ; [debug line = 233:3]
  store i8 0, i8* %carry, align 1, !dbg !1392     ; [debug line = 236:3]
  store i32 0, i32* %i, align 4, !dbg !1393       ; [debug line = 237:7]
  br label %291, !dbg !1393                       ; [debug line = 237:7]

; <label>:291                                     ; preds = %348, %186
  %292 = load i32* %i, align 4, !dbg !1393        ; [#uses=1 type=i32] [debug line = 237:7]
  %293 = icmp slt i32 %292, 84, !dbg !1393        ; [#uses=1 type=i1] [debug line = 237:7]
  br i1 %293, label %294, label %351, !dbg !1393  ; [debug line = 237:7]

; <label>:294                                     ; preds = %291
  %295 = load i8* %carry, align 1, !dbg !1395     ; [#uses=1 type=i8] [debug line = 239:5]
  %296 = sext i8 %295 to i32, !dbg !1395          ; [#uses=1 type=i32] [debug line = 239:5]
  %297 = load i32* %i, align 4, !dbg !1395        ; [#uses=1 type=i32] [debug line = 239:5]
  %298 = sext i32 %297 to i64, !dbg !1395         ; [#uses=1 type=i64] [debug line = 239:5]
  %299 = load i8** %1, align 8, !dbg !1395        ; [#uses=1 type=i8*] [debug line = 239:5]
  %300 = getelementptr inbounds i8* %299, i64 %298, !dbg !1395 ; [#uses=2 type=i8*] [debug line = 239:5]
  %301 = load i8* %300, align 1, !dbg !1395       ; [#uses=1 type=i8] [debug line = 239:5]
  %302 = sext i8 %301 to i32, !dbg !1395          ; [#uses=1 type=i32] [debug line = 239:5]
  %303 = add nsw i32 %302, %296, !dbg !1395       ; [#uses=1 type=i32] [debug line = 239:5]
  %304 = trunc i32 %303 to i8, !dbg !1395         ; [#uses=1 type=i8] [debug line = 239:5]
  store i8 %304, i8* %300, align 1, !dbg !1395    ; [debug line = 239:5]
  %305 = load i32* %i, align 4, !dbg !1397        ; [#uses=1 type=i32] [debug line = 240:5]
  %306 = sext i32 %305 to i64, !dbg !1397         ; [#uses=1 type=i64] [debug line = 240:5]
  %307 = load i8** %1, align 8, !dbg !1397        ; [#uses=1 type=i8*] [debug line = 240:5]
  %308 = getelementptr inbounds i8* %307, i64 %306, !dbg !1397 ; [#uses=1 type=i8*] [debug line = 240:5]
  %309 = load i8* %308, align 1, !dbg !1397       ; [#uses=1 type=i8] [debug line = 240:5]
  %310 = sext i8 %309 to i32, !dbg !1397          ; [#uses=1 type=i32] [debug line = 240:5]
  %311 = ashr i32 %310, 3, !dbg !1397             ; [#uses=1 type=i32] [debug line = 240:5]
  %312 = load i32* %i, align 4, !dbg !1397        ; [#uses=1 type=i32] [debug line = 240:5]
  %313 = add nsw i32 %312, 1, !dbg !1397          ; [#uses=1 type=i32] [debug line = 240:5]
  %314 = sext i32 %313 to i64, !dbg !1397         ; [#uses=1 type=i64] [debug line = 240:5]
  %315 = load i8** %1, align 8, !dbg !1397        ; [#uses=1 type=i8*] [debug line = 240:5]
  %316 = getelementptr inbounds i8* %315, i64 %314, !dbg !1397 ; [#uses=2 type=i8*] [debug line = 240:5]
  %317 = load i8* %316, align 1, !dbg !1397       ; [#uses=1 type=i8] [debug line = 240:5]
  %318 = sext i8 %317 to i32, !dbg !1397          ; [#uses=1 type=i32] [debug line = 240:5]
  %319 = add nsw i32 %318, %311, !dbg !1397       ; [#uses=1 type=i32] [debug line = 240:5]
  %320 = trunc i32 %319 to i8, !dbg !1397         ; [#uses=1 type=i8] [debug line = 240:5]
  store i8 %320, i8* %316, align 1, !dbg !1397    ; [debug line = 240:5]
  %321 = load i32* %i, align 4, !dbg !1398        ; [#uses=1 type=i32] [debug line = 241:5]
  %322 = sext i32 %321 to i64, !dbg !1398         ; [#uses=1 type=i64] [debug line = 241:5]
  %323 = load i8** %1, align 8, !dbg !1398        ; [#uses=1 type=i8*] [debug line = 241:5]
  %324 = getelementptr inbounds i8* %323, i64 %322, !dbg !1398 ; [#uses=2 type=i8*] [debug line = 241:5]
  %325 = load i8* %324, align 1, !dbg !1398       ; [#uses=1 type=i8] [debug line = 241:5]
  %326 = sext i8 %325 to i32, !dbg !1398          ; [#uses=1 type=i32] [debug line = 241:5]
  %327 = and i32 %326, 7, !dbg !1398              ; [#uses=1 type=i32] [debug line = 241:5]
  %328 = trunc i32 %327 to i8, !dbg !1398         ; [#uses=1 type=i8] [debug line = 241:5]
  store i8 %328, i8* %324, align 1, !dbg !1398    ; [debug line = 241:5]
  %329 = load i32* %i, align 4, !dbg !1399        ; [#uses=1 type=i32] [debug line = 242:5]
  %330 = sext i32 %329 to i64, !dbg !1399         ; [#uses=1 type=i64] [debug line = 242:5]
  %331 = load i8** %1, align 8, !dbg !1399        ; [#uses=1 type=i8*] [debug line = 242:5]
  %332 = getelementptr inbounds i8* %331, i64 %330, !dbg !1399 ; [#uses=1 type=i8*] [debug line = 242:5]
  %333 = load i8* %332, align 1, !dbg !1399       ; [#uses=1 type=i8] [debug line = 242:5]
  %334 = sext i8 %333 to i32, !dbg !1399          ; [#uses=1 type=i32] [debug line = 242:5]
  %335 = ashr i32 %334, 2, !dbg !1399             ; [#uses=1 type=i32] [debug line = 242:5]
  %336 = trunc i32 %335 to i8, !dbg !1399         ; [#uses=1 type=i8] [debug line = 242:5]
  store i8 %336, i8* %carry, align 1, !dbg !1399  ; [debug line = 242:5]
  %337 = load i8* %carry, align 1, !dbg !1400     ; [#uses=1 type=i8] [debug line = 243:5]
  %338 = sext i8 %337 to i32, !dbg !1400          ; [#uses=1 type=i32] [debug line = 243:5]
  %339 = shl i32 %338, 3, !dbg !1400              ; [#uses=1 type=i32] [debug line = 243:5]
  %340 = load i32* %i, align 4, !dbg !1400        ; [#uses=1 type=i32] [debug line = 243:5]
  %341 = sext i32 %340 to i64, !dbg !1400         ; [#uses=1 type=i64] [debug line = 243:5]
  %342 = load i8** %1, align 8, !dbg !1400        ; [#uses=1 type=i8*] [debug line = 243:5]
  %343 = getelementptr inbounds i8* %342, i64 %341, !dbg !1400 ; [#uses=2 type=i8*] [debug line = 243:5]
  %344 = load i8* %343, align 1, !dbg !1400       ; [#uses=1 type=i8] [debug line = 243:5]
  %345 = sext i8 %344 to i32, !dbg !1400          ; [#uses=1 type=i32] [debug line = 243:5]
  %346 = sub nsw i32 %345, %339, !dbg !1400       ; [#uses=1 type=i32] [debug line = 243:5]
  %347 = trunc i32 %346 to i8, !dbg !1400         ; [#uses=1 type=i8] [debug line = 243:5]
  store i8 %347, i8* %343, align 1, !dbg !1400    ; [debug line = 243:5]
  br label %348, !dbg !1401                       ; [debug line = 244:3]

; <label>:348                                     ; preds = %294
  %349 = load i32* %i, align 4, !dbg !1402        ; [#uses=1 type=i32] [debug line = 237:16]
  %350 = add nsw i32 %349, 1, !dbg !1402          ; [#uses=1 type=i32] [debug line = 237:16]
  store i32 %350, i32* %i, align 4, !dbg !1402    ; [debug line = 237:16]
  br label %291, !dbg !1402                       ; [debug line = 237:16]

; <label>:351                                     ; preds = %291
  %352 = load i8* %carry, align 1, !dbg !1403     ; [#uses=1 type=i8] [debug line = 245:3]
  %353 = sext i8 %352 to i32, !dbg !1403          ; [#uses=1 type=i32] [debug line = 245:3]
  %354 = load i8** %1, align 8, !dbg !1403        ; [#uses=1 type=i8*] [debug line = 245:3]
  %355 = getelementptr inbounds i8* %354, i64 84, !dbg !1403 ; [#uses=2 type=i8*] [debug line = 245:3]
  %356 = load i8* %355, align 1, !dbg !1403       ; [#uses=1 type=i8] [debug line = 245:3]
  %357 = sext i8 %356 to i32, !dbg !1403          ; [#uses=1 type=i32] [debug line = 245:3]
  %358 = add nsw i32 %357, %353, !dbg !1403       ; [#uses=1 type=i32] [debug line = 245:3]
  %359 = trunc i32 %358 to i8, !dbg !1403         ; [#uses=1 type=i8] [debug line = 245:3]
  store i8 %359, i8* %355, align 1, !dbg !1403    ; [debug line = 245:3]
  ret void, !dbg !1404                            ; [debug line = 246:1]
}

; [#uses=0]
define void @crypto_sign_ed25519_ref_sc25519_window5(i8* %r, %struct.crypto_sign_ed25519_ref_fe25519* %s) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=25 type=i8**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=17 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %carry = alloca i8, align 1                     ; [#uses=5 type=i8*]
  %i = alloca i32, align 4                        ; [#uses=46 type=i32*]
  store i8* %r, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !1405), !dbg !1406 ; [debug line = 248:58] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1407), !dbg !1408 ; [debug line = 248:104] [debug variable = s]
  %3 = load i8** %1, align 8, !dbg !1409          ; [#uses=1 type=i8*] [debug line = 249:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 51) nounwind, !dbg !1409 ; [debug line = 249:2]
  call void @llvm.dbg.declare(metadata !{i8* %carry}, metadata !1411), !dbg !1412 ; [debug line = 250:8] [debug variable = carry]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1413), !dbg !1414 ; [debug line = 251:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1415       ; [debug line = 252:7]
  br label %4, !dbg !1415                         ; [debug line = 252:7]

; <label>:4                                       ; preds = %223, %0
  %5 = load i32* %i, align 4, !dbg !1415          ; [#uses=1 type=i32] [debug line = 252:7]
  %6 = icmp slt i32 %5, 6, !dbg !1415             ; [#uses=1 type=i1] [debug line = 252:7]
  br i1 %6, label %7, label %226, !dbg !1415      ; [debug line = 252:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1417          ; [#uses=1 type=i32] [debug line = 254:5]
  %9 = mul nsw i32 5, %8, !dbg !1417              ; [#uses=1 type=i32] [debug line = 254:5]
  %10 = add nsw i32 %9, 0, !dbg !1417             ; [#uses=1 type=i32] [debug line = 254:5]
  %11 = sext i32 %10 to i64, !dbg !1417           ; [#uses=1 type=i64] [debug line = 254:5]
  %12 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1417 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 254:5]
  %13 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %12, i32 0, i32 0, !dbg !1417 ; [#uses=1 type=[32 x i32]*] [debug line = 254:5]
  %14 = getelementptr inbounds [32 x i32]* %13, i32 0, i64 %11, !dbg !1417 ; [#uses=1 type=i32*] [debug line = 254:5]
  %15 = load i32* %14, align 4, !dbg !1417        ; [#uses=1 type=i32] [debug line = 254:5]
  %16 = and i32 %15, 31, !dbg !1417               ; [#uses=1 type=i32] [debug line = 254:5]
  %17 = trunc i32 %16 to i8, !dbg !1417           ; [#uses=1 type=i8] [debug line = 254:5]
  %18 = load i32* %i, align 4, !dbg !1417         ; [#uses=1 type=i32] [debug line = 254:5]
  %19 = mul nsw i32 8, %18, !dbg !1417            ; [#uses=1 type=i32] [debug line = 254:5]
  %20 = add nsw i32 %19, 0, !dbg !1417            ; [#uses=1 type=i32] [debug line = 254:5]
  %21 = sext i32 %20 to i64, !dbg !1417           ; [#uses=1 type=i64] [debug line = 254:5]
  %22 = load i8** %1, align 8, !dbg !1417         ; [#uses=1 type=i8*] [debug line = 254:5]
  %23 = getelementptr inbounds i8* %22, i64 %21, !dbg !1417 ; [#uses=1 type=i8*] [debug line = 254:5]
  store i8 %17, i8* %23, align 1, !dbg !1417      ; [debug line = 254:5]
  %24 = load i32* %i, align 4, !dbg !1419         ; [#uses=1 type=i32] [debug line = 255:5]
  %25 = mul nsw i32 5, %24, !dbg !1419            ; [#uses=1 type=i32] [debug line = 255:5]
  %26 = add nsw i32 %25, 0, !dbg !1419            ; [#uses=1 type=i32] [debug line = 255:5]
  %27 = sext i32 %26 to i64, !dbg !1419           ; [#uses=1 type=i64] [debug line = 255:5]
  %28 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1419 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 255:5]
  %29 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %28, i32 0, i32 0, !dbg !1419 ; [#uses=1 type=[32 x i32]*] [debug line = 255:5]
  %30 = getelementptr inbounds [32 x i32]* %29, i32 0, i64 %27, !dbg !1419 ; [#uses=1 type=i32*] [debug line = 255:5]
  %31 = load i32* %30, align 4, !dbg !1419        ; [#uses=1 type=i32] [debug line = 255:5]
  %32 = lshr i32 %31, 5, !dbg !1419               ; [#uses=1 type=i32] [debug line = 255:5]
  %33 = and i32 %32, 31, !dbg !1419               ; [#uses=1 type=i32] [debug line = 255:5]
  %34 = trunc i32 %33 to i8, !dbg !1419           ; [#uses=1 type=i8] [debug line = 255:5]
  %35 = load i32* %i, align 4, !dbg !1419         ; [#uses=1 type=i32] [debug line = 255:5]
  %36 = mul nsw i32 8, %35, !dbg !1419            ; [#uses=1 type=i32] [debug line = 255:5]
  %37 = add nsw i32 %36, 1, !dbg !1419            ; [#uses=1 type=i32] [debug line = 255:5]
  %38 = sext i32 %37 to i64, !dbg !1419           ; [#uses=1 type=i64] [debug line = 255:5]
  %39 = load i8** %1, align 8, !dbg !1419         ; [#uses=1 type=i8*] [debug line = 255:5]
  %40 = getelementptr inbounds i8* %39, i64 %38, !dbg !1419 ; [#uses=1 type=i8*] [debug line = 255:5]
  store i8 %34, i8* %40, align 1, !dbg !1419      ; [debug line = 255:5]
  %41 = load i32* %i, align 4, !dbg !1420         ; [#uses=1 type=i32] [debug line = 256:5]
  %42 = mul nsw i32 5, %41, !dbg !1420            ; [#uses=1 type=i32] [debug line = 256:5]
  %43 = add nsw i32 %42, 1, !dbg !1420            ; [#uses=1 type=i32] [debug line = 256:5]
  %44 = sext i32 %43 to i64, !dbg !1420           ; [#uses=1 type=i64] [debug line = 256:5]
  %45 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1420 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 256:5]
  %46 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %45, i32 0, i32 0, !dbg !1420 ; [#uses=1 type=[32 x i32]*] [debug line = 256:5]
  %47 = getelementptr inbounds [32 x i32]* %46, i32 0, i64 %44, !dbg !1420 ; [#uses=1 type=i32*] [debug line = 256:5]
  %48 = load i32* %47, align 4, !dbg !1420        ; [#uses=1 type=i32] [debug line = 256:5]
  %49 = shl i32 %48, 3, !dbg !1420                ; [#uses=1 type=i32] [debug line = 256:5]
  %50 = and i32 %49, 31, !dbg !1420               ; [#uses=1 type=i32] [debug line = 256:5]
  %51 = load i32* %i, align 4, !dbg !1420         ; [#uses=1 type=i32] [debug line = 256:5]
  %52 = mul nsw i32 8, %51, !dbg !1420            ; [#uses=1 type=i32] [debug line = 256:5]
  %53 = add nsw i32 %52, 1, !dbg !1420            ; [#uses=1 type=i32] [debug line = 256:5]
  %54 = sext i32 %53 to i64, !dbg !1420           ; [#uses=1 type=i64] [debug line = 256:5]
  %55 = load i8** %1, align 8, !dbg !1420         ; [#uses=1 type=i8*] [debug line = 256:5]
  %56 = getelementptr inbounds i8* %55, i64 %54, !dbg !1420 ; [#uses=2 type=i8*] [debug line = 256:5]
  %57 = load i8* %56, align 1, !dbg !1420         ; [#uses=1 type=i8] [debug line = 256:5]
  %58 = sext i8 %57 to i32, !dbg !1420            ; [#uses=1 type=i32] [debug line = 256:5]
  %59 = xor i32 %58, %50, !dbg !1420              ; [#uses=1 type=i32] [debug line = 256:5]
  %60 = trunc i32 %59 to i8, !dbg !1420           ; [#uses=1 type=i8] [debug line = 256:5]
  store i8 %60, i8* %56, align 1, !dbg !1420      ; [debug line = 256:5]
  %61 = load i32* %i, align 4, !dbg !1421         ; [#uses=1 type=i32] [debug line = 257:5]
  %62 = mul nsw i32 5, %61, !dbg !1421            ; [#uses=1 type=i32] [debug line = 257:5]
  %63 = add nsw i32 %62, 1, !dbg !1421            ; [#uses=1 type=i32] [debug line = 257:5]
  %64 = sext i32 %63 to i64, !dbg !1421           ; [#uses=1 type=i64] [debug line = 257:5]
  %65 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1421 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 257:5]
  %66 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %65, i32 0, i32 0, !dbg !1421 ; [#uses=1 type=[32 x i32]*] [debug line = 257:5]
  %67 = getelementptr inbounds [32 x i32]* %66, i32 0, i64 %64, !dbg !1421 ; [#uses=1 type=i32*] [debug line = 257:5]
  %68 = load i32* %67, align 4, !dbg !1421        ; [#uses=1 type=i32] [debug line = 257:5]
  %69 = lshr i32 %68, 2, !dbg !1421               ; [#uses=1 type=i32] [debug line = 257:5]
  %70 = and i32 %69, 31, !dbg !1421               ; [#uses=1 type=i32] [debug line = 257:5]
  %71 = trunc i32 %70 to i8, !dbg !1421           ; [#uses=1 type=i8] [debug line = 257:5]
  %72 = load i32* %i, align 4, !dbg !1421         ; [#uses=1 type=i32] [debug line = 257:5]
  %73 = mul nsw i32 8, %72, !dbg !1421            ; [#uses=1 type=i32] [debug line = 257:5]
  %74 = add nsw i32 %73, 2, !dbg !1421            ; [#uses=1 type=i32] [debug line = 257:5]
  %75 = sext i32 %74 to i64, !dbg !1421           ; [#uses=1 type=i64] [debug line = 257:5]
  %76 = load i8** %1, align 8, !dbg !1421         ; [#uses=1 type=i8*] [debug line = 257:5]
  %77 = getelementptr inbounds i8* %76, i64 %75, !dbg !1421 ; [#uses=1 type=i8*] [debug line = 257:5]
  store i8 %71, i8* %77, align 1, !dbg !1421      ; [debug line = 257:5]
  %78 = load i32* %i, align 4, !dbg !1422         ; [#uses=1 type=i32] [debug line = 258:5]
  %79 = mul nsw i32 5, %78, !dbg !1422            ; [#uses=1 type=i32] [debug line = 258:5]
  %80 = add nsw i32 %79, 1, !dbg !1422            ; [#uses=1 type=i32] [debug line = 258:5]
  %81 = sext i32 %80 to i64, !dbg !1422           ; [#uses=1 type=i64] [debug line = 258:5]
  %82 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1422 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 258:5]
  %83 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %82, i32 0, i32 0, !dbg !1422 ; [#uses=1 type=[32 x i32]*] [debug line = 258:5]
  %84 = getelementptr inbounds [32 x i32]* %83, i32 0, i64 %81, !dbg !1422 ; [#uses=1 type=i32*] [debug line = 258:5]
  %85 = load i32* %84, align 4, !dbg !1422        ; [#uses=1 type=i32] [debug line = 258:5]
  %86 = lshr i32 %85, 7, !dbg !1422               ; [#uses=1 type=i32] [debug line = 258:5]
  %87 = and i32 %86, 31, !dbg !1422               ; [#uses=1 type=i32] [debug line = 258:5]
  %88 = trunc i32 %87 to i8, !dbg !1422           ; [#uses=1 type=i8] [debug line = 258:5]
  %89 = load i32* %i, align 4, !dbg !1422         ; [#uses=1 type=i32] [debug line = 258:5]
  %90 = mul nsw i32 8, %89, !dbg !1422            ; [#uses=1 type=i32] [debug line = 258:5]
  %91 = add nsw i32 %90, 3, !dbg !1422            ; [#uses=1 type=i32] [debug line = 258:5]
  %92 = sext i32 %91 to i64, !dbg !1422           ; [#uses=1 type=i64] [debug line = 258:5]
  %93 = load i8** %1, align 8, !dbg !1422         ; [#uses=1 type=i8*] [debug line = 258:5]
  %94 = getelementptr inbounds i8* %93, i64 %92, !dbg !1422 ; [#uses=1 type=i8*] [debug line = 258:5]
  store i8 %88, i8* %94, align 1, !dbg !1422      ; [debug line = 258:5]
  %95 = load i32* %i, align 4, !dbg !1423         ; [#uses=1 type=i32] [debug line = 259:5]
  %96 = mul nsw i32 5, %95, !dbg !1423            ; [#uses=1 type=i32] [debug line = 259:5]
  %97 = add nsw i32 %96, 2, !dbg !1423            ; [#uses=1 type=i32] [debug line = 259:5]
  %98 = sext i32 %97 to i64, !dbg !1423           ; [#uses=1 type=i64] [debug line = 259:5]
  %99 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1423 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 259:5]
  %100 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %99, i32 0, i32 0, !dbg !1423 ; [#uses=1 type=[32 x i32]*] [debug line = 259:5]
  %101 = getelementptr inbounds [32 x i32]* %100, i32 0, i64 %98, !dbg !1423 ; [#uses=1 type=i32*] [debug line = 259:5]
  %102 = load i32* %101, align 4, !dbg !1423      ; [#uses=1 type=i32] [debug line = 259:5]
  %103 = shl i32 %102, 1, !dbg !1423              ; [#uses=1 type=i32] [debug line = 259:5]
  %104 = and i32 %103, 31, !dbg !1423             ; [#uses=1 type=i32] [debug line = 259:5]
  %105 = load i32* %i, align 4, !dbg !1423        ; [#uses=1 type=i32] [debug line = 259:5]
  %106 = mul nsw i32 8, %105, !dbg !1423          ; [#uses=1 type=i32] [debug line = 259:5]
  %107 = add nsw i32 %106, 3, !dbg !1423          ; [#uses=1 type=i32] [debug line = 259:5]
  %108 = sext i32 %107 to i64, !dbg !1423         ; [#uses=1 type=i64] [debug line = 259:5]
  %109 = load i8** %1, align 8, !dbg !1423        ; [#uses=1 type=i8*] [debug line = 259:5]
  %110 = getelementptr inbounds i8* %109, i64 %108, !dbg !1423 ; [#uses=2 type=i8*] [debug line = 259:5]
  %111 = load i8* %110, align 1, !dbg !1423       ; [#uses=1 type=i8] [debug line = 259:5]
  %112 = sext i8 %111 to i32, !dbg !1423          ; [#uses=1 type=i32] [debug line = 259:5]
  %113 = xor i32 %112, %104, !dbg !1423           ; [#uses=1 type=i32] [debug line = 259:5]
  %114 = trunc i32 %113 to i8, !dbg !1423         ; [#uses=1 type=i8] [debug line = 259:5]
  store i8 %114, i8* %110, align 1, !dbg !1423    ; [debug line = 259:5]
  %115 = load i32* %i, align 4, !dbg !1424        ; [#uses=1 type=i32] [debug line = 260:5]
  %116 = mul nsw i32 5, %115, !dbg !1424          ; [#uses=1 type=i32] [debug line = 260:5]
  %117 = add nsw i32 %116, 2, !dbg !1424          ; [#uses=1 type=i32] [debug line = 260:5]
  %118 = sext i32 %117 to i64, !dbg !1424         ; [#uses=1 type=i64] [debug line = 260:5]
  %119 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1424 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 260:5]
  %120 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %119, i32 0, i32 0, !dbg !1424 ; [#uses=1 type=[32 x i32]*] [debug line = 260:5]
  %121 = getelementptr inbounds [32 x i32]* %120, i32 0, i64 %118, !dbg !1424 ; [#uses=1 type=i32*] [debug line = 260:5]
  %122 = load i32* %121, align 4, !dbg !1424      ; [#uses=1 type=i32] [debug line = 260:5]
  %123 = lshr i32 %122, 4, !dbg !1424             ; [#uses=1 type=i32] [debug line = 260:5]
  %124 = and i32 %123, 31, !dbg !1424             ; [#uses=1 type=i32] [debug line = 260:5]
  %125 = trunc i32 %124 to i8, !dbg !1424         ; [#uses=1 type=i8] [debug line = 260:5]
  %126 = load i32* %i, align 4, !dbg !1424        ; [#uses=1 type=i32] [debug line = 260:5]
  %127 = mul nsw i32 8, %126, !dbg !1424          ; [#uses=1 type=i32] [debug line = 260:5]
  %128 = add nsw i32 %127, 4, !dbg !1424          ; [#uses=1 type=i32] [debug line = 260:5]
  %129 = sext i32 %128 to i64, !dbg !1424         ; [#uses=1 type=i64] [debug line = 260:5]
  %130 = load i8** %1, align 8, !dbg !1424        ; [#uses=1 type=i8*] [debug line = 260:5]
  %131 = getelementptr inbounds i8* %130, i64 %129, !dbg !1424 ; [#uses=1 type=i8*] [debug line = 260:5]
  store i8 %125, i8* %131, align 1, !dbg !1424    ; [debug line = 260:5]
  %132 = load i32* %i, align 4, !dbg !1425        ; [#uses=1 type=i32] [debug line = 261:5]
  %133 = mul nsw i32 5, %132, !dbg !1425          ; [#uses=1 type=i32] [debug line = 261:5]
  %134 = add nsw i32 %133, 3, !dbg !1425          ; [#uses=1 type=i32] [debug line = 261:5]
  %135 = sext i32 %134 to i64, !dbg !1425         ; [#uses=1 type=i64] [debug line = 261:5]
  %136 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1425 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 261:5]
  %137 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %136, i32 0, i32 0, !dbg !1425 ; [#uses=1 type=[32 x i32]*] [debug line = 261:5]
  %138 = getelementptr inbounds [32 x i32]* %137, i32 0, i64 %135, !dbg !1425 ; [#uses=1 type=i32*] [debug line = 261:5]
  %139 = load i32* %138, align 4, !dbg !1425      ; [#uses=1 type=i32] [debug line = 261:5]
  %140 = shl i32 %139, 4, !dbg !1425              ; [#uses=1 type=i32] [debug line = 261:5]
  %141 = and i32 %140, 31, !dbg !1425             ; [#uses=1 type=i32] [debug line = 261:5]
  %142 = load i32* %i, align 4, !dbg !1425        ; [#uses=1 type=i32] [debug line = 261:5]
  %143 = mul nsw i32 8, %142, !dbg !1425          ; [#uses=1 type=i32] [debug line = 261:5]
  %144 = add nsw i32 %143, 4, !dbg !1425          ; [#uses=1 type=i32] [debug line = 261:5]
  %145 = sext i32 %144 to i64, !dbg !1425         ; [#uses=1 type=i64] [debug line = 261:5]
  %146 = load i8** %1, align 8, !dbg !1425        ; [#uses=1 type=i8*] [debug line = 261:5]
  %147 = getelementptr inbounds i8* %146, i64 %145, !dbg !1425 ; [#uses=2 type=i8*] [debug line = 261:5]
  %148 = load i8* %147, align 1, !dbg !1425       ; [#uses=1 type=i8] [debug line = 261:5]
  %149 = sext i8 %148 to i32, !dbg !1425          ; [#uses=1 type=i32] [debug line = 261:5]
  %150 = xor i32 %149, %141, !dbg !1425           ; [#uses=1 type=i32] [debug line = 261:5]
  %151 = trunc i32 %150 to i8, !dbg !1425         ; [#uses=1 type=i8] [debug line = 261:5]
  store i8 %151, i8* %147, align 1, !dbg !1425    ; [debug line = 261:5]
  %152 = load i32* %i, align 4, !dbg !1426        ; [#uses=1 type=i32] [debug line = 262:5]
  %153 = mul nsw i32 5, %152, !dbg !1426          ; [#uses=1 type=i32] [debug line = 262:5]
  %154 = add nsw i32 %153, 3, !dbg !1426          ; [#uses=1 type=i32] [debug line = 262:5]
  %155 = sext i32 %154 to i64, !dbg !1426         ; [#uses=1 type=i64] [debug line = 262:5]
  %156 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1426 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:5]
  %157 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %156, i32 0, i32 0, !dbg !1426 ; [#uses=1 type=[32 x i32]*] [debug line = 262:5]
  %158 = getelementptr inbounds [32 x i32]* %157, i32 0, i64 %155, !dbg !1426 ; [#uses=1 type=i32*] [debug line = 262:5]
  %159 = load i32* %158, align 4, !dbg !1426      ; [#uses=1 type=i32] [debug line = 262:5]
  %160 = lshr i32 %159, 1, !dbg !1426             ; [#uses=1 type=i32] [debug line = 262:5]
  %161 = and i32 %160, 31, !dbg !1426             ; [#uses=1 type=i32] [debug line = 262:5]
  %162 = trunc i32 %161 to i8, !dbg !1426         ; [#uses=1 type=i8] [debug line = 262:5]
  %163 = load i32* %i, align 4, !dbg !1426        ; [#uses=1 type=i32] [debug line = 262:5]
  %164 = mul nsw i32 8, %163, !dbg !1426          ; [#uses=1 type=i32] [debug line = 262:5]
  %165 = add nsw i32 %164, 5, !dbg !1426          ; [#uses=1 type=i32] [debug line = 262:5]
  %166 = sext i32 %165 to i64, !dbg !1426         ; [#uses=1 type=i64] [debug line = 262:5]
  %167 = load i8** %1, align 8, !dbg !1426        ; [#uses=1 type=i8*] [debug line = 262:5]
  %168 = getelementptr inbounds i8* %167, i64 %166, !dbg !1426 ; [#uses=1 type=i8*] [debug line = 262:5]
  store i8 %162, i8* %168, align 1, !dbg !1426    ; [debug line = 262:5]
  %169 = load i32* %i, align 4, !dbg !1427        ; [#uses=1 type=i32] [debug line = 263:5]
  %170 = mul nsw i32 5, %169, !dbg !1427          ; [#uses=1 type=i32] [debug line = 263:5]
  %171 = add nsw i32 %170, 3, !dbg !1427          ; [#uses=1 type=i32] [debug line = 263:5]
  %172 = sext i32 %171 to i64, !dbg !1427         ; [#uses=1 type=i64] [debug line = 263:5]
  %173 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1427 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 263:5]
  %174 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %173, i32 0, i32 0, !dbg !1427 ; [#uses=1 type=[32 x i32]*] [debug line = 263:5]
  %175 = getelementptr inbounds [32 x i32]* %174, i32 0, i64 %172, !dbg !1427 ; [#uses=1 type=i32*] [debug line = 263:5]
  %176 = load i32* %175, align 4, !dbg !1427      ; [#uses=1 type=i32] [debug line = 263:5]
  %177 = lshr i32 %176, 6, !dbg !1427             ; [#uses=1 type=i32] [debug line = 263:5]
  %178 = and i32 %177, 31, !dbg !1427             ; [#uses=1 type=i32] [debug line = 263:5]
  %179 = trunc i32 %178 to i8, !dbg !1427         ; [#uses=1 type=i8] [debug line = 263:5]
  %180 = load i32* %i, align 4, !dbg !1427        ; [#uses=1 type=i32] [debug line = 263:5]
  %181 = mul nsw i32 8, %180, !dbg !1427          ; [#uses=1 type=i32] [debug line = 263:5]
  %182 = add nsw i32 %181, 6, !dbg !1427          ; [#uses=1 type=i32] [debug line = 263:5]
  %183 = sext i32 %182 to i64, !dbg !1427         ; [#uses=1 type=i64] [debug line = 263:5]
  %184 = load i8** %1, align 8, !dbg !1427        ; [#uses=1 type=i8*] [debug line = 263:5]
  %185 = getelementptr inbounds i8* %184, i64 %183, !dbg !1427 ; [#uses=1 type=i8*] [debug line = 263:5]
  store i8 %179, i8* %185, align 1, !dbg !1427    ; [debug line = 263:5]
  %186 = load i32* %i, align 4, !dbg !1428        ; [#uses=1 type=i32] [debug line = 264:5]
  %187 = mul nsw i32 5, %186, !dbg !1428          ; [#uses=1 type=i32] [debug line = 264:5]
  %188 = add nsw i32 %187, 4, !dbg !1428          ; [#uses=1 type=i32] [debug line = 264:5]
  %189 = sext i32 %188 to i64, !dbg !1428         ; [#uses=1 type=i64] [debug line = 264:5]
  %190 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1428 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 264:5]
  %191 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %190, i32 0, i32 0, !dbg !1428 ; [#uses=1 type=[32 x i32]*] [debug line = 264:5]
  %192 = getelementptr inbounds [32 x i32]* %191, i32 0, i64 %189, !dbg !1428 ; [#uses=1 type=i32*] [debug line = 264:5]
  %193 = load i32* %192, align 4, !dbg !1428      ; [#uses=1 type=i32] [debug line = 264:5]
  %194 = shl i32 %193, 2, !dbg !1428              ; [#uses=1 type=i32] [debug line = 264:5]
  %195 = and i32 %194, 31, !dbg !1428             ; [#uses=1 type=i32] [debug line = 264:5]
  %196 = load i32* %i, align 4, !dbg !1428        ; [#uses=1 type=i32] [debug line = 264:5]
  %197 = mul nsw i32 8, %196, !dbg !1428          ; [#uses=1 type=i32] [debug line = 264:5]
  %198 = add nsw i32 %197, 6, !dbg !1428          ; [#uses=1 type=i32] [debug line = 264:5]
  %199 = sext i32 %198 to i64, !dbg !1428         ; [#uses=1 type=i64] [debug line = 264:5]
  %200 = load i8** %1, align 8, !dbg !1428        ; [#uses=1 type=i8*] [debug line = 264:5]
  %201 = getelementptr inbounds i8* %200, i64 %199, !dbg !1428 ; [#uses=2 type=i8*] [debug line = 264:5]
  %202 = load i8* %201, align 1, !dbg !1428       ; [#uses=1 type=i8] [debug line = 264:5]
  %203 = sext i8 %202 to i32, !dbg !1428          ; [#uses=1 type=i32] [debug line = 264:5]
  %204 = xor i32 %203, %195, !dbg !1428           ; [#uses=1 type=i32] [debug line = 264:5]
  %205 = trunc i32 %204 to i8, !dbg !1428         ; [#uses=1 type=i8] [debug line = 264:5]
  store i8 %205, i8* %201, align 1, !dbg !1428    ; [debug line = 264:5]
  %206 = load i32* %i, align 4, !dbg !1429        ; [#uses=1 type=i32] [debug line = 265:5]
  %207 = mul nsw i32 5, %206, !dbg !1429          ; [#uses=1 type=i32] [debug line = 265:5]
  %208 = add nsw i32 %207, 4, !dbg !1429          ; [#uses=1 type=i32] [debug line = 265:5]
  %209 = sext i32 %208 to i64, !dbg !1429         ; [#uses=1 type=i64] [debug line = 265:5]
  %210 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1429 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:5]
  %211 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %210, i32 0, i32 0, !dbg !1429 ; [#uses=1 type=[32 x i32]*] [debug line = 265:5]
  %212 = getelementptr inbounds [32 x i32]* %211, i32 0, i64 %209, !dbg !1429 ; [#uses=1 type=i32*] [debug line = 265:5]
  %213 = load i32* %212, align 4, !dbg !1429      ; [#uses=1 type=i32] [debug line = 265:5]
  %214 = lshr i32 %213, 3, !dbg !1429             ; [#uses=1 type=i32] [debug line = 265:5]
  %215 = and i32 %214, 31, !dbg !1429             ; [#uses=1 type=i32] [debug line = 265:5]
  %216 = trunc i32 %215 to i8, !dbg !1429         ; [#uses=1 type=i8] [debug line = 265:5]
  %217 = load i32* %i, align 4, !dbg !1429        ; [#uses=1 type=i32] [debug line = 265:5]
  %218 = mul nsw i32 8, %217, !dbg !1429          ; [#uses=1 type=i32] [debug line = 265:5]
  %219 = add nsw i32 %218, 7, !dbg !1429          ; [#uses=1 type=i32] [debug line = 265:5]
  %220 = sext i32 %219 to i64, !dbg !1429         ; [#uses=1 type=i64] [debug line = 265:5]
  %221 = load i8** %1, align 8, !dbg !1429        ; [#uses=1 type=i8*] [debug line = 265:5]
  %222 = getelementptr inbounds i8* %221, i64 %220, !dbg !1429 ; [#uses=1 type=i8*] [debug line = 265:5]
  store i8 %216, i8* %222, align 1, !dbg !1429    ; [debug line = 265:5]
  br label %223, !dbg !1430                       ; [debug line = 266:3]

; <label>:223                                     ; preds = %7
  %224 = load i32* %i, align 4, !dbg !1431        ; [#uses=1 type=i32] [debug line = 252:15]
  %225 = add nsw i32 %224, 1, !dbg !1431          ; [#uses=1 type=i32] [debug line = 252:15]
  store i32 %225, i32* %i, align 4, !dbg !1431    ; [debug line = 252:15]
  br label %4, !dbg !1431                         ; [debug line = 252:15]

; <label>:226                                     ; preds = %4
  %227 = load i32* %i, align 4, !dbg !1432        ; [#uses=1 type=i32] [debug line = 267:3]
  %228 = mul nsw i32 5, %227, !dbg !1432          ; [#uses=1 type=i32] [debug line = 267:3]
  %229 = add nsw i32 %228, 0, !dbg !1432          ; [#uses=1 type=i32] [debug line = 267:3]
  %230 = sext i32 %229 to i64, !dbg !1432         ; [#uses=1 type=i64] [debug line = 267:3]
  %231 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1432 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 267:3]
  %232 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %231, i32 0, i32 0, !dbg !1432 ; [#uses=1 type=[32 x i32]*] [debug line = 267:3]
  %233 = getelementptr inbounds [32 x i32]* %232, i32 0, i64 %230, !dbg !1432 ; [#uses=1 type=i32*] [debug line = 267:3]
  %234 = load i32* %233, align 4, !dbg !1432      ; [#uses=1 type=i32] [debug line = 267:3]
  %235 = and i32 %234, 31, !dbg !1432             ; [#uses=1 type=i32] [debug line = 267:3]
  %236 = trunc i32 %235 to i8, !dbg !1432         ; [#uses=1 type=i8] [debug line = 267:3]
  %237 = load i32* %i, align 4, !dbg !1432        ; [#uses=1 type=i32] [debug line = 267:3]
  %238 = mul nsw i32 8, %237, !dbg !1432          ; [#uses=1 type=i32] [debug line = 267:3]
  %239 = add nsw i32 %238, 0, !dbg !1432          ; [#uses=1 type=i32] [debug line = 267:3]
  %240 = sext i32 %239 to i64, !dbg !1432         ; [#uses=1 type=i64] [debug line = 267:3]
  %241 = load i8** %1, align 8, !dbg !1432        ; [#uses=1 type=i8*] [debug line = 267:3]
  %242 = getelementptr inbounds i8* %241, i64 %240, !dbg !1432 ; [#uses=1 type=i8*] [debug line = 267:3]
  store i8 %236, i8* %242, align 1, !dbg !1432    ; [debug line = 267:3]
  %243 = load i32* %i, align 4, !dbg !1433        ; [#uses=1 type=i32] [debug line = 268:3]
  %244 = mul nsw i32 5, %243, !dbg !1433          ; [#uses=1 type=i32] [debug line = 268:3]
  %245 = add nsw i32 %244, 0, !dbg !1433          ; [#uses=1 type=i32] [debug line = 268:3]
  %246 = sext i32 %245 to i64, !dbg !1433         ; [#uses=1 type=i64] [debug line = 268:3]
  %247 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1433 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 268:3]
  %248 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %247, i32 0, i32 0, !dbg !1433 ; [#uses=1 type=[32 x i32]*] [debug line = 268:3]
  %249 = getelementptr inbounds [32 x i32]* %248, i32 0, i64 %246, !dbg !1433 ; [#uses=1 type=i32*] [debug line = 268:3]
  %250 = load i32* %249, align 4, !dbg !1433      ; [#uses=1 type=i32] [debug line = 268:3]
  %251 = lshr i32 %250, 5, !dbg !1433             ; [#uses=1 type=i32] [debug line = 268:3]
  %252 = and i32 %251, 31, !dbg !1433             ; [#uses=1 type=i32] [debug line = 268:3]
  %253 = trunc i32 %252 to i8, !dbg !1433         ; [#uses=1 type=i8] [debug line = 268:3]
  %254 = load i32* %i, align 4, !dbg !1433        ; [#uses=1 type=i32] [debug line = 268:3]
  %255 = mul nsw i32 8, %254, !dbg !1433          ; [#uses=1 type=i32] [debug line = 268:3]
  %256 = add nsw i32 %255, 1, !dbg !1433          ; [#uses=1 type=i32] [debug line = 268:3]
  %257 = sext i32 %256 to i64, !dbg !1433         ; [#uses=1 type=i64] [debug line = 268:3]
  %258 = load i8** %1, align 8, !dbg !1433        ; [#uses=1 type=i8*] [debug line = 268:3]
  %259 = getelementptr inbounds i8* %258, i64 %257, !dbg !1433 ; [#uses=1 type=i8*] [debug line = 268:3]
  store i8 %253, i8* %259, align 1, !dbg !1433    ; [debug line = 268:3]
  %260 = load i32* %i, align 4, !dbg !1434        ; [#uses=1 type=i32] [debug line = 269:3]
  %261 = mul nsw i32 5, %260, !dbg !1434          ; [#uses=1 type=i32] [debug line = 269:3]
  %262 = add nsw i32 %261, 1, !dbg !1434          ; [#uses=1 type=i32] [debug line = 269:3]
  %263 = sext i32 %262 to i64, !dbg !1434         ; [#uses=1 type=i64] [debug line = 269:3]
  %264 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1434 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 269:3]
  %265 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %264, i32 0, i32 0, !dbg !1434 ; [#uses=1 type=[32 x i32]*] [debug line = 269:3]
  %266 = getelementptr inbounds [32 x i32]* %265, i32 0, i64 %263, !dbg !1434 ; [#uses=1 type=i32*] [debug line = 269:3]
  %267 = load i32* %266, align 4, !dbg !1434      ; [#uses=1 type=i32] [debug line = 269:3]
  %268 = shl i32 %267, 3, !dbg !1434              ; [#uses=1 type=i32] [debug line = 269:3]
  %269 = and i32 %268, 31, !dbg !1434             ; [#uses=1 type=i32] [debug line = 269:3]
  %270 = load i32* %i, align 4, !dbg !1434        ; [#uses=1 type=i32] [debug line = 269:3]
  %271 = mul nsw i32 8, %270, !dbg !1434          ; [#uses=1 type=i32] [debug line = 269:3]
  %272 = add nsw i32 %271, 1, !dbg !1434          ; [#uses=1 type=i32] [debug line = 269:3]
  %273 = sext i32 %272 to i64, !dbg !1434         ; [#uses=1 type=i64] [debug line = 269:3]
  %274 = load i8** %1, align 8, !dbg !1434        ; [#uses=1 type=i8*] [debug line = 269:3]
  %275 = getelementptr inbounds i8* %274, i64 %273, !dbg !1434 ; [#uses=2 type=i8*] [debug line = 269:3]
  %276 = load i8* %275, align 1, !dbg !1434       ; [#uses=1 type=i8] [debug line = 269:3]
  %277 = sext i8 %276 to i32, !dbg !1434          ; [#uses=1 type=i32] [debug line = 269:3]
  %278 = xor i32 %277, %269, !dbg !1434           ; [#uses=1 type=i32] [debug line = 269:3]
  %279 = trunc i32 %278 to i8, !dbg !1434         ; [#uses=1 type=i8] [debug line = 269:3]
  store i8 %279, i8* %275, align 1, !dbg !1434    ; [debug line = 269:3]
  %280 = load i32* %i, align 4, !dbg !1435        ; [#uses=1 type=i32] [debug line = 270:3]
  %281 = mul nsw i32 5, %280, !dbg !1435          ; [#uses=1 type=i32] [debug line = 270:3]
  %282 = add nsw i32 %281, 1, !dbg !1435          ; [#uses=1 type=i32] [debug line = 270:3]
  %283 = sext i32 %282 to i64, !dbg !1435         ; [#uses=1 type=i64] [debug line = 270:3]
  %284 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1435 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 270:3]
  %285 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %284, i32 0, i32 0, !dbg !1435 ; [#uses=1 type=[32 x i32]*] [debug line = 270:3]
  %286 = getelementptr inbounds [32 x i32]* %285, i32 0, i64 %283, !dbg !1435 ; [#uses=1 type=i32*] [debug line = 270:3]
  %287 = load i32* %286, align 4, !dbg !1435      ; [#uses=1 type=i32] [debug line = 270:3]
  %288 = lshr i32 %287, 2, !dbg !1435             ; [#uses=1 type=i32] [debug line = 270:3]
  %289 = and i32 %288, 31, !dbg !1435             ; [#uses=1 type=i32] [debug line = 270:3]
  %290 = trunc i32 %289 to i8, !dbg !1435         ; [#uses=1 type=i8] [debug line = 270:3]
  %291 = load i32* %i, align 4, !dbg !1435        ; [#uses=1 type=i32] [debug line = 270:3]
  %292 = mul nsw i32 8, %291, !dbg !1435          ; [#uses=1 type=i32] [debug line = 270:3]
  %293 = add nsw i32 %292, 2, !dbg !1435          ; [#uses=1 type=i32] [debug line = 270:3]
  %294 = sext i32 %293 to i64, !dbg !1435         ; [#uses=1 type=i64] [debug line = 270:3]
  %295 = load i8** %1, align 8, !dbg !1435        ; [#uses=1 type=i8*] [debug line = 270:3]
  %296 = getelementptr inbounds i8* %295, i64 %294, !dbg !1435 ; [#uses=1 type=i8*] [debug line = 270:3]
  store i8 %290, i8* %296, align 1, !dbg !1435    ; [debug line = 270:3]
  store i8 0, i8* %carry, align 1, !dbg !1436     ; [debug line = 273:3]
  store i32 0, i32* %i, align 4, !dbg !1437       ; [debug line = 274:7]
  br label %297, !dbg !1437                       ; [debug line = 274:7]

; <label>:297                                     ; preds = %354, %226
  %298 = load i32* %i, align 4, !dbg !1437        ; [#uses=1 type=i32] [debug line = 274:7]
  %299 = icmp slt i32 %298, 50, !dbg !1437        ; [#uses=1 type=i1] [debug line = 274:7]
  br i1 %299, label %300, label %357, !dbg !1437  ; [debug line = 274:7]

; <label>:300                                     ; preds = %297
  %301 = load i8* %carry, align 1, !dbg !1439     ; [#uses=1 type=i8] [debug line = 276:5]
  %302 = sext i8 %301 to i32, !dbg !1439          ; [#uses=1 type=i32] [debug line = 276:5]
  %303 = load i32* %i, align 4, !dbg !1439        ; [#uses=1 type=i32] [debug line = 276:5]
  %304 = sext i32 %303 to i64, !dbg !1439         ; [#uses=1 type=i64] [debug line = 276:5]
  %305 = load i8** %1, align 8, !dbg !1439        ; [#uses=1 type=i8*] [debug line = 276:5]
  %306 = getelementptr inbounds i8* %305, i64 %304, !dbg !1439 ; [#uses=2 type=i8*] [debug line = 276:5]
  %307 = load i8* %306, align 1, !dbg !1439       ; [#uses=1 type=i8] [debug line = 276:5]
  %308 = sext i8 %307 to i32, !dbg !1439          ; [#uses=1 type=i32] [debug line = 276:5]
  %309 = add nsw i32 %308, %302, !dbg !1439       ; [#uses=1 type=i32] [debug line = 276:5]
  %310 = trunc i32 %309 to i8, !dbg !1439         ; [#uses=1 type=i8] [debug line = 276:5]
  store i8 %310, i8* %306, align 1, !dbg !1439    ; [debug line = 276:5]
  %311 = load i32* %i, align 4, !dbg !1441        ; [#uses=1 type=i32] [debug line = 277:5]
  %312 = sext i32 %311 to i64, !dbg !1441         ; [#uses=1 type=i64] [debug line = 277:5]
  %313 = load i8** %1, align 8, !dbg !1441        ; [#uses=1 type=i8*] [debug line = 277:5]
  %314 = getelementptr inbounds i8* %313, i64 %312, !dbg !1441 ; [#uses=1 type=i8*] [debug line = 277:5]
  %315 = load i8* %314, align 1, !dbg !1441       ; [#uses=1 type=i8] [debug line = 277:5]
  %316 = sext i8 %315 to i32, !dbg !1441          ; [#uses=1 type=i32] [debug line = 277:5]
  %317 = ashr i32 %316, 5, !dbg !1441             ; [#uses=1 type=i32] [debug line = 277:5]
  %318 = load i32* %i, align 4, !dbg !1441        ; [#uses=1 type=i32] [debug line = 277:5]
  %319 = add nsw i32 %318, 1, !dbg !1441          ; [#uses=1 type=i32] [debug line = 277:5]
  %320 = sext i32 %319 to i64, !dbg !1441         ; [#uses=1 type=i64] [debug line = 277:5]
  %321 = load i8** %1, align 8, !dbg !1441        ; [#uses=1 type=i8*] [debug line = 277:5]
  %322 = getelementptr inbounds i8* %321, i64 %320, !dbg !1441 ; [#uses=2 type=i8*] [debug line = 277:5]
  %323 = load i8* %322, align 1, !dbg !1441       ; [#uses=1 type=i8] [debug line = 277:5]
  %324 = sext i8 %323 to i32, !dbg !1441          ; [#uses=1 type=i32] [debug line = 277:5]
  %325 = add nsw i32 %324, %317, !dbg !1441       ; [#uses=1 type=i32] [debug line = 277:5]
  %326 = trunc i32 %325 to i8, !dbg !1441         ; [#uses=1 type=i8] [debug line = 277:5]
  store i8 %326, i8* %322, align 1, !dbg !1441    ; [debug line = 277:5]
  %327 = load i32* %i, align 4, !dbg !1442        ; [#uses=1 type=i32] [debug line = 278:5]
  %328 = sext i32 %327 to i64, !dbg !1442         ; [#uses=1 type=i64] [debug line = 278:5]
  %329 = load i8** %1, align 8, !dbg !1442        ; [#uses=1 type=i8*] [debug line = 278:5]
  %330 = getelementptr inbounds i8* %329, i64 %328, !dbg !1442 ; [#uses=2 type=i8*] [debug line = 278:5]
  %331 = load i8* %330, align 1, !dbg !1442       ; [#uses=1 type=i8] [debug line = 278:5]
  %332 = sext i8 %331 to i32, !dbg !1442          ; [#uses=1 type=i32] [debug line = 278:5]
  %333 = and i32 %332, 31, !dbg !1442             ; [#uses=1 type=i32] [debug line = 278:5]
  %334 = trunc i32 %333 to i8, !dbg !1442         ; [#uses=1 type=i8] [debug line = 278:5]
  store i8 %334, i8* %330, align 1, !dbg !1442    ; [debug line = 278:5]
  %335 = load i32* %i, align 4, !dbg !1443        ; [#uses=1 type=i32] [debug line = 279:5]
  %336 = sext i32 %335 to i64, !dbg !1443         ; [#uses=1 type=i64] [debug line = 279:5]
  %337 = load i8** %1, align 8, !dbg !1443        ; [#uses=1 type=i8*] [debug line = 279:5]
  %338 = getelementptr inbounds i8* %337, i64 %336, !dbg !1443 ; [#uses=1 type=i8*] [debug line = 279:5]
  %339 = load i8* %338, align 1, !dbg !1443       ; [#uses=1 type=i8] [debug line = 279:5]
  %340 = sext i8 %339 to i32, !dbg !1443          ; [#uses=1 type=i32] [debug line = 279:5]
  %341 = ashr i32 %340, 4, !dbg !1443             ; [#uses=1 type=i32] [debug line = 279:5]
  %342 = trunc i32 %341 to i8, !dbg !1443         ; [#uses=1 type=i8] [debug line = 279:5]
  store i8 %342, i8* %carry, align 1, !dbg !1443  ; [debug line = 279:5]
  %343 = load i8* %carry, align 1, !dbg !1444     ; [#uses=1 type=i8] [debug line = 280:5]
  %344 = sext i8 %343 to i32, !dbg !1444          ; [#uses=1 type=i32] [debug line = 280:5]
  %345 = shl i32 %344, 5, !dbg !1444              ; [#uses=1 type=i32] [debug line = 280:5]
  %346 = load i32* %i, align 4, !dbg !1444        ; [#uses=1 type=i32] [debug line = 280:5]
  %347 = sext i32 %346 to i64, !dbg !1444         ; [#uses=1 type=i64] [debug line = 280:5]
  %348 = load i8** %1, align 8, !dbg !1444        ; [#uses=1 type=i8*] [debug line = 280:5]
  %349 = getelementptr inbounds i8* %348, i64 %347, !dbg !1444 ; [#uses=2 type=i8*] [debug line = 280:5]
  %350 = load i8* %349, align 1, !dbg !1444       ; [#uses=1 type=i8] [debug line = 280:5]
  %351 = sext i8 %350 to i32, !dbg !1444          ; [#uses=1 type=i32] [debug line = 280:5]
  %352 = sub nsw i32 %351, %345, !dbg !1444       ; [#uses=1 type=i32] [debug line = 280:5]
  %353 = trunc i32 %352 to i8, !dbg !1444         ; [#uses=1 type=i8] [debug line = 280:5]
  store i8 %353, i8* %349, align 1, !dbg !1444    ; [debug line = 280:5]
  br label %354, !dbg !1445                       ; [debug line = 281:3]

; <label>:354                                     ; preds = %300
  %355 = load i32* %i, align 4, !dbg !1446        ; [#uses=1 type=i32] [debug line = 274:16]
  %356 = add nsw i32 %355, 1, !dbg !1446          ; [#uses=1 type=i32] [debug line = 274:16]
  store i32 %356, i32* %i, align 4, !dbg !1446    ; [debug line = 274:16]
  br label %297, !dbg !1446                       ; [debug line = 274:16]

; <label>:357                                     ; preds = %297
  %358 = load i8* %carry, align 1, !dbg !1447     ; [#uses=1 type=i8] [debug line = 282:3]
  %359 = sext i8 %358 to i32, !dbg !1447          ; [#uses=1 type=i32] [debug line = 282:3]
  %360 = load i8** %1, align 8, !dbg !1447        ; [#uses=1 type=i8*] [debug line = 282:3]
  %361 = getelementptr inbounds i8* %360, i64 50, !dbg !1447 ; [#uses=2 type=i8*] [debug line = 282:3]
  %362 = load i8* %361, align 1, !dbg !1447       ; [#uses=1 type=i8] [debug line = 282:3]
  %363 = sext i8 %362 to i32, !dbg !1447          ; [#uses=1 type=i32] [debug line = 282:3]
  %364 = add nsw i32 %363, %359, !dbg !1447       ; [#uses=1 type=i32] [debug line = 282:3]
  %365 = trunc i32 %364 to i8, !dbg !1447         ; [#uses=1 type=i8] [debug line = 282:3]
  store i8 %365, i8* %361, align 1, !dbg !1447    ; [debug line = 282:3]
  ret void, !dbg !1448                            ; [debug line = 283:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_sc25519_2interleave2(i8* %r, %struct.crypto_sign_ed25519_ref_fe25519* %s1, %struct.crypto_sign_ed25519_ref_fe25519* %s2) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=9 type=i8**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=8 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=8 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=16 type=i32*]
  store i8* %r, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !1449), !dbg !1450 ; [debug line = 285:65] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s1, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1451), !dbg !1452 ; [debug line = 285:112] [debug variable = s1]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s2, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1453), !dbg !1454 ; [debug line = 285:155] [debug variable = s2]
  %4 = load i8** %1, align 8, !dbg !1455          ; [#uses=1 type=i8*] [debug line = 286:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %4, i32 127) nounwind, !dbg !1455 ; [debug line = 286:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1457), !dbg !1458 ; [debug line = 287:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1459       ; [debug line = 288:7]
  br label %5, !dbg !1459                         ; [debug line = 288:7]

; <label>:5                                       ; preds = %106, %0
  %6 = load i32* %i, align 4, !dbg !1459          ; [#uses=1 type=i32] [debug line = 288:7]
  %7 = icmp slt i32 %6, 31, !dbg !1459            ; [#uses=1 type=i1] [debug line = 288:7]
  br i1 %7, label %8, label %109, !dbg !1459      ; [debug line = 288:7]

; <label>:8                                       ; preds = %5
  %9 = load i32* %i, align 4, !dbg !1461          ; [#uses=1 type=i32] [debug line = 290:5]
  %10 = sext i32 %9 to i64, !dbg !1461            ; [#uses=1 type=i64] [debug line = 290:5]
  %11 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1461 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 290:5]
  %12 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %11, i32 0, i32 0, !dbg !1461 ; [#uses=1 type=[32 x i32]*] [debug line = 290:5]
  %13 = getelementptr inbounds [32 x i32]* %12, i32 0, i64 %10, !dbg !1461 ; [#uses=1 type=i32*] [debug line = 290:5]
  %14 = load i32* %13, align 4, !dbg !1461        ; [#uses=1 type=i32] [debug line = 290:5]
  %15 = and i32 %14, 3, !dbg !1461                ; [#uses=1 type=i32] [debug line = 290:5]
  %16 = load i32* %i, align 4, !dbg !1461         ; [#uses=1 type=i32] [debug line = 290:5]
  %17 = sext i32 %16 to i64, !dbg !1461           ; [#uses=1 type=i64] [debug line = 290:5]
  %18 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1461 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 290:5]
  %19 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %18, i32 0, i32 0, !dbg !1461 ; [#uses=1 type=[32 x i32]*] [debug line = 290:5]
  %20 = getelementptr inbounds [32 x i32]* %19, i32 0, i64 %17, !dbg !1461 ; [#uses=1 type=i32*] [debug line = 290:5]
  %21 = load i32* %20, align 4, !dbg !1461        ; [#uses=1 type=i32] [debug line = 290:5]
  %22 = and i32 %21, 3, !dbg !1461                ; [#uses=1 type=i32] [debug line = 290:5]
  %23 = shl i32 %22, 2, !dbg !1461                ; [#uses=1 type=i32] [debug line = 290:5]
  %24 = xor i32 %15, %23, !dbg !1461              ; [#uses=1 type=i32] [debug line = 290:5]
  %25 = trunc i32 %24 to i8, !dbg !1461           ; [#uses=1 type=i8] [debug line = 290:5]
  %26 = load i32* %i, align 4, !dbg !1461         ; [#uses=1 type=i32] [debug line = 290:5]
  %27 = mul nsw i32 4, %26, !dbg !1461            ; [#uses=1 type=i32] [debug line = 290:5]
  %28 = sext i32 %27 to i64, !dbg !1461           ; [#uses=1 type=i64] [debug line = 290:5]
  %29 = load i8** %1, align 8, !dbg !1461         ; [#uses=1 type=i8*] [debug line = 290:5]
  %30 = getelementptr inbounds i8* %29, i64 %28, !dbg !1461 ; [#uses=1 type=i8*] [debug line = 290:5]
  store i8 %25, i8* %30, align 1, !dbg !1461      ; [debug line = 290:5]
  %31 = load i32* %i, align 4, !dbg !1463         ; [#uses=1 type=i32] [debug line = 291:5]
  %32 = sext i32 %31 to i64, !dbg !1463           ; [#uses=1 type=i64] [debug line = 291:5]
  %33 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1463 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 291:5]
  %34 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %33, i32 0, i32 0, !dbg !1463 ; [#uses=1 type=[32 x i32]*] [debug line = 291:5]
  %35 = getelementptr inbounds [32 x i32]* %34, i32 0, i64 %32, !dbg !1463 ; [#uses=1 type=i32*] [debug line = 291:5]
  %36 = load i32* %35, align 4, !dbg !1463        ; [#uses=1 type=i32] [debug line = 291:5]
  %37 = lshr i32 %36, 2, !dbg !1463               ; [#uses=1 type=i32] [debug line = 291:5]
  %38 = and i32 %37, 3, !dbg !1463                ; [#uses=1 type=i32] [debug line = 291:5]
  %39 = load i32* %i, align 4, !dbg !1463         ; [#uses=1 type=i32] [debug line = 291:5]
  %40 = sext i32 %39 to i64, !dbg !1463           ; [#uses=1 type=i64] [debug line = 291:5]
  %41 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1463 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 291:5]
  %42 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %41, i32 0, i32 0, !dbg !1463 ; [#uses=1 type=[32 x i32]*] [debug line = 291:5]
  %43 = getelementptr inbounds [32 x i32]* %42, i32 0, i64 %40, !dbg !1463 ; [#uses=1 type=i32*] [debug line = 291:5]
  %44 = load i32* %43, align 4, !dbg !1463        ; [#uses=1 type=i32] [debug line = 291:5]
  %45 = lshr i32 %44, 2, !dbg !1463               ; [#uses=1 type=i32] [debug line = 291:5]
  %46 = and i32 %45, 3, !dbg !1463                ; [#uses=1 type=i32] [debug line = 291:5]
  %47 = shl i32 %46, 2, !dbg !1463                ; [#uses=1 type=i32] [debug line = 291:5]
  %48 = xor i32 %38, %47, !dbg !1463              ; [#uses=1 type=i32] [debug line = 291:5]
  %49 = trunc i32 %48 to i8, !dbg !1463           ; [#uses=1 type=i8] [debug line = 291:5]
  %50 = load i32* %i, align 4, !dbg !1463         ; [#uses=1 type=i32] [debug line = 291:5]
  %51 = mul nsw i32 4, %50, !dbg !1463            ; [#uses=1 type=i32] [debug line = 291:5]
  %52 = add nsw i32 %51, 1, !dbg !1463            ; [#uses=1 type=i32] [debug line = 291:5]
  %53 = sext i32 %52 to i64, !dbg !1463           ; [#uses=1 type=i64] [debug line = 291:5]
  %54 = load i8** %1, align 8, !dbg !1463         ; [#uses=1 type=i8*] [debug line = 291:5]
  %55 = getelementptr inbounds i8* %54, i64 %53, !dbg !1463 ; [#uses=1 type=i8*] [debug line = 291:5]
  store i8 %49, i8* %55, align 1, !dbg !1463      ; [debug line = 291:5]
  %56 = load i32* %i, align 4, !dbg !1464         ; [#uses=1 type=i32] [debug line = 292:5]
  %57 = sext i32 %56 to i64, !dbg !1464           ; [#uses=1 type=i64] [debug line = 292:5]
  %58 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1464 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 292:5]
  %59 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %58, i32 0, i32 0, !dbg !1464 ; [#uses=1 type=[32 x i32]*] [debug line = 292:5]
  %60 = getelementptr inbounds [32 x i32]* %59, i32 0, i64 %57, !dbg !1464 ; [#uses=1 type=i32*] [debug line = 292:5]
  %61 = load i32* %60, align 4, !dbg !1464        ; [#uses=1 type=i32] [debug line = 292:5]
  %62 = lshr i32 %61, 4, !dbg !1464               ; [#uses=1 type=i32] [debug line = 292:5]
  %63 = and i32 %62, 3, !dbg !1464                ; [#uses=1 type=i32] [debug line = 292:5]
  %64 = load i32* %i, align 4, !dbg !1464         ; [#uses=1 type=i32] [debug line = 292:5]
  %65 = sext i32 %64 to i64, !dbg !1464           ; [#uses=1 type=i64] [debug line = 292:5]
  %66 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1464 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 292:5]
  %67 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %66, i32 0, i32 0, !dbg !1464 ; [#uses=1 type=[32 x i32]*] [debug line = 292:5]
  %68 = getelementptr inbounds [32 x i32]* %67, i32 0, i64 %65, !dbg !1464 ; [#uses=1 type=i32*] [debug line = 292:5]
  %69 = load i32* %68, align 4, !dbg !1464        ; [#uses=1 type=i32] [debug line = 292:5]
  %70 = lshr i32 %69, 4, !dbg !1464               ; [#uses=1 type=i32] [debug line = 292:5]
  %71 = and i32 %70, 3, !dbg !1464                ; [#uses=1 type=i32] [debug line = 292:5]
  %72 = shl i32 %71, 2, !dbg !1464                ; [#uses=1 type=i32] [debug line = 292:5]
  %73 = xor i32 %63, %72, !dbg !1464              ; [#uses=1 type=i32] [debug line = 292:5]
  %74 = trunc i32 %73 to i8, !dbg !1464           ; [#uses=1 type=i8] [debug line = 292:5]
  %75 = load i32* %i, align 4, !dbg !1464         ; [#uses=1 type=i32] [debug line = 292:5]
  %76 = mul nsw i32 4, %75, !dbg !1464            ; [#uses=1 type=i32] [debug line = 292:5]
  %77 = add nsw i32 %76, 2, !dbg !1464            ; [#uses=1 type=i32] [debug line = 292:5]
  %78 = sext i32 %77 to i64, !dbg !1464           ; [#uses=1 type=i64] [debug line = 292:5]
  %79 = load i8** %1, align 8, !dbg !1464         ; [#uses=1 type=i8*] [debug line = 292:5]
  %80 = getelementptr inbounds i8* %79, i64 %78, !dbg !1464 ; [#uses=1 type=i8*] [debug line = 292:5]
  store i8 %74, i8* %80, align 1, !dbg !1464      ; [debug line = 292:5]
  %81 = load i32* %i, align 4, !dbg !1465         ; [#uses=1 type=i32] [debug line = 293:5]
  %82 = sext i32 %81 to i64, !dbg !1465           ; [#uses=1 type=i64] [debug line = 293:5]
  %83 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1465 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 293:5]
  %84 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %83, i32 0, i32 0, !dbg !1465 ; [#uses=1 type=[32 x i32]*] [debug line = 293:5]
  %85 = getelementptr inbounds [32 x i32]* %84, i32 0, i64 %82, !dbg !1465 ; [#uses=1 type=i32*] [debug line = 293:5]
  %86 = load i32* %85, align 4, !dbg !1465        ; [#uses=1 type=i32] [debug line = 293:5]
  %87 = lshr i32 %86, 6, !dbg !1465               ; [#uses=1 type=i32] [debug line = 293:5]
  %88 = and i32 %87, 3, !dbg !1465                ; [#uses=1 type=i32] [debug line = 293:5]
  %89 = load i32* %i, align 4, !dbg !1465         ; [#uses=1 type=i32] [debug line = 293:5]
  %90 = sext i32 %89 to i64, !dbg !1465           ; [#uses=1 type=i64] [debug line = 293:5]
  %91 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1465 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 293:5]
  %92 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %91, i32 0, i32 0, !dbg !1465 ; [#uses=1 type=[32 x i32]*] [debug line = 293:5]
  %93 = getelementptr inbounds [32 x i32]* %92, i32 0, i64 %90, !dbg !1465 ; [#uses=1 type=i32*] [debug line = 293:5]
  %94 = load i32* %93, align 4, !dbg !1465        ; [#uses=1 type=i32] [debug line = 293:5]
  %95 = lshr i32 %94, 6, !dbg !1465               ; [#uses=1 type=i32] [debug line = 293:5]
  %96 = and i32 %95, 3, !dbg !1465                ; [#uses=1 type=i32] [debug line = 293:5]
  %97 = shl i32 %96, 2, !dbg !1465                ; [#uses=1 type=i32] [debug line = 293:5]
  %98 = xor i32 %88, %97, !dbg !1465              ; [#uses=1 type=i32] [debug line = 293:5]
  %99 = trunc i32 %98 to i8, !dbg !1465           ; [#uses=1 type=i8] [debug line = 293:5]
  %100 = load i32* %i, align 4, !dbg !1465        ; [#uses=1 type=i32] [debug line = 293:5]
  %101 = mul nsw i32 4, %100, !dbg !1465          ; [#uses=1 type=i32] [debug line = 293:5]
  %102 = add nsw i32 %101, 3, !dbg !1465          ; [#uses=1 type=i32] [debug line = 293:5]
  %103 = sext i32 %102 to i64, !dbg !1465         ; [#uses=1 type=i64] [debug line = 293:5]
  %104 = load i8** %1, align 8, !dbg !1465        ; [#uses=1 type=i8*] [debug line = 293:5]
  %105 = getelementptr inbounds i8* %104, i64 %103, !dbg !1465 ; [#uses=1 type=i8*] [debug line = 293:5]
  store i8 %99, i8* %105, align 1, !dbg !1465     ; [debug line = 293:5]
  br label %106, !dbg !1466                       ; [debug line = 294:3]

; <label>:106                                     ; preds = %8
  %107 = load i32* %i, align 4, !dbg !1467        ; [#uses=1 type=i32] [debug line = 288:16]
  %108 = add nsw i32 %107, 1, !dbg !1467          ; [#uses=1 type=i32] [debug line = 288:16]
  store i32 %108, i32* %i, align 4, !dbg !1467    ; [debug line = 288:16]
  br label %5, !dbg !1467                         ; [debug line = 288:16]

; <label>:109                                     ; preds = %5
  %110 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1468 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 295:3]
  %111 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %110, i32 0, i32 0, !dbg !1468 ; [#uses=1 type=[32 x i32]*] [debug line = 295:3]
  %112 = getelementptr inbounds [32 x i32]* %111, i32 0, i64 31, !dbg !1468 ; [#uses=1 type=i32*] [debug line = 295:3]
  %113 = load i32* %112, align 4, !dbg !1468      ; [#uses=1 type=i32] [debug line = 295:3]
  %114 = and i32 %113, 3, !dbg !1468              ; [#uses=1 type=i32] [debug line = 295:3]
  %115 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1468 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 295:3]
  %116 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %115, i32 0, i32 0, !dbg !1468 ; [#uses=1 type=[32 x i32]*] [debug line = 295:3]
  %117 = getelementptr inbounds [32 x i32]* %116, i32 0, i64 31, !dbg !1468 ; [#uses=1 type=i32*] [debug line = 295:3]
  %118 = load i32* %117, align 4, !dbg !1468      ; [#uses=1 type=i32] [debug line = 295:3]
  %119 = and i32 %118, 3, !dbg !1468              ; [#uses=1 type=i32] [debug line = 295:3]
  %120 = shl i32 %119, 2, !dbg !1468              ; [#uses=1 type=i32] [debug line = 295:3]
  %121 = xor i32 %114, %120, !dbg !1468           ; [#uses=1 type=i32] [debug line = 295:3]
  %122 = trunc i32 %121 to i8, !dbg !1468         ; [#uses=1 type=i8] [debug line = 295:3]
  %123 = load i8** %1, align 8, !dbg !1468        ; [#uses=1 type=i8*] [debug line = 295:3]
  %124 = getelementptr inbounds i8* %123, i64 124, !dbg !1468 ; [#uses=1 type=i8*] [debug line = 295:3]
  store i8 %122, i8* %124, align 1, !dbg !1468    ; [debug line = 295:3]
  %125 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1469 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 296:3]
  %126 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %125, i32 0, i32 0, !dbg !1469 ; [#uses=1 type=[32 x i32]*] [debug line = 296:3]
  %127 = getelementptr inbounds [32 x i32]* %126, i32 0, i64 31, !dbg !1469 ; [#uses=1 type=i32*] [debug line = 296:3]
  %128 = load i32* %127, align 4, !dbg !1469      ; [#uses=1 type=i32] [debug line = 296:3]
  %129 = lshr i32 %128, 2, !dbg !1469             ; [#uses=1 type=i32] [debug line = 296:3]
  %130 = and i32 %129, 3, !dbg !1469              ; [#uses=1 type=i32] [debug line = 296:3]
  %131 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1469 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 296:3]
  %132 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %131, i32 0, i32 0, !dbg !1469 ; [#uses=1 type=[32 x i32]*] [debug line = 296:3]
  %133 = getelementptr inbounds [32 x i32]* %132, i32 0, i64 31, !dbg !1469 ; [#uses=1 type=i32*] [debug line = 296:3]
  %134 = load i32* %133, align 4, !dbg !1469      ; [#uses=1 type=i32] [debug line = 296:3]
  %135 = lshr i32 %134, 2, !dbg !1469             ; [#uses=1 type=i32] [debug line = 296:3]
  %136 = and i32 %135, 3, !dbg !1469              ; [#uses=1 type=i32] [debug line = 296:3]
  %137 = shl i32 %136, 2, !dbg !1469              ; [#uses=1 type=i32] [debug line = 296:3]
  %138 = xor i32 %130, %137, !dbg !1469           ; [#uses=1 type=i32] [debug line = 296:3]
  %139 = trunc i32 %138 to i8, !dbg !1469         ; [#uses=1 type=i8] [debug line = 296:3]
  %140 = load i8** %1, align 8, !dbg !1469        ; [#uses=1 type=i8*] [debug line = 296:3]
  %141 = getelementptr inbounds i8* %140, i64 125, !dbg !1469 ; [#uses=1 type=i8*] [debug line = 296:3]
  store i8 %139, i8* %141, align 1, !dbg !1469    ; [debug line = 296:3]
  %142 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1470 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 297:3]
  %143 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %142, i32 0, i32 0, !dbg !1470 ; [#uses=1 type=[32 x i32]*] [debug line = 297:3]
  %144 = getelementptr inbounds [32 x i32]* %143, i32 0, i64 31, !dbg !1470 ; [#uses=1 type=i32*] [debug line = 297:3]
  %145 = load i32* %144, align 4, !dbg !1470      ; [#uses=1 type=i32] [debug line = 297:3]
  %146 = lshr i32 %145, 4, !dbg !1470             ; [#uses=1 type=i32] [debug line = 297:3]
  %147 = and i32 %146, 3, !dbg !1470              ; [#uses=1 type=i32] [debug line = 297:3]
  %148 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1470 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 297:3]
  %149 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %148, i32 0, i32 0, !dbg !1470 ; [#uses=1 type=[32 x i32]*] [debug line = 297:3]
  %150 = getelementptr inbounds [32 x i32]* %149, i32 0, i64 31, !dbg !1470 ; [#uses=1 type=i32*] [debug line = 297:3]
  %151 = load i32* %150, align 4, !dbg !1470      ; [#uses=1 type=i32] [debug line = 297:3]
  %152 = lshr i32 %151, 4, !dbg !1470             ; [#uses=1 type=i32] [debug line = 297:3]
  %153 = and i32 %152, 3, !dbg !1470              ; [#uses=1 type=i32] [debug line = 297:3]
  %154 = shl i32 %153, 2, !dbg !1470              ; [#uses=1 type=i32] [debug line = 297:3]
  %155 = xor i32 %147, %154, !dbg !1470           ; [#uses=1 type=i32] [debug line = 297:3]
  %156 = trunc i32 %155 to i8, !dbg !1470         ; [#uses=1 type=i8] [debug line = 297:3]
  %157 = load i8** %1, align 8, !dbg !1470        ; [#uses=1 type=i8*] [debug line = 297:3]
  %158 = getelementptr inbounds i8* %157, i64 126, !dbg !1470 ; [#uses=1 type=i8*] [debug line = 297:3]
  store i8 %156, i8* %158, align 1, !dbg !1470    ; [debug line = 297:3]
  ret void, !dbg !1471                            ; [debug line = 298:1]
}

; [#uses=2]
define internal i32 @lt(i32 %a, i32 %b) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %2 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %x = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store i32 %a, i32* %1, align 4
  call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !1472), !dbg !1473 ; [debug line = 11:39] [debug variable = a]
  store i32 %b, i32* %2, align 4
  call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !1474), !dbg !1475 ; [debug line = 11:55] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %x}, metadata !1476), !dbg !1478 ; [debug line = 13:16] [debug variable = x]
  %3 = load i32* %1, align 4, !dbg !1479          ; [#uses=1 type=i32] [debug line = 13:21]
  store i32 %3, i32* %x, align 4, !dbg !1479      ; [debug line = 13:21]
  %4 = load i32* %2, align 4, !dbg !1480          ; [#uses=1 type=i32] [debug line = 14:3]
  %5 = load i32* %x, align 4, !dbg !1480          ; [#uses=1 type=i32] [debug line = 14:3]
  %6 = sub i32 %5, %4, !dbg !1480                 ; [#uses=1 type=i32] [debug line = 14:3]
  store i32 %6, i32* %x, align 4, !dbg !1480      ; [debug line = 14:3]
  %7 = load i32* %x, align 4, !dbg !1481          ; [#uses=1 type=i32] [debug line = 15:3]
  %8 = lshr i32 %7, 31, !dbg !1481                ; [#uses=1 type=i32] [debug line = 15:3]
  store i32 %8, i32* %x, align 4, !dbg !1481      ; [debug line = 15:3]
  %9 = load i32* %x, align 4, !dbg !1482          ; [#uses=1 type=i32] [debug line = 16:3]
  ret i32 %9, !dbg !1482                          ; [debug line = 16:3]
}

; [#uses=0]
define i32 @crypto_sign_ed25519_ref_unpackneg_vartime(%struct.crypto_sign_ed25519_ref_ge25519* %r, i8* %p) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %2 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=17 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %3 = alloca i8*, align 8                        ; [#uses=4 type=i8**]
  %par = alloca i8, align 1                       ; [#uses=2 type=i8*]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=12 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %chk = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=8 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %num = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=8 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %den = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=10 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %den2 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %den4 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %den6 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %2}, metadata !1483), !dbg !1484 ; [debug line = 187:80] [debug variable = r]
  store i8* %p, i8** %3, align 8
  call void @llvm.dbg.declare(metadata !{i8** %3}, metadata !1485), !dbg !1486 ; [debug line = 187:103] [debug variable = p]
  %4 = load i8** %3, align 8, !dbg !1487          ; [#uses=1 type=i8*] [debug line = 188:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %4, i32 32) nounwind, !dbg !1487 ; [debug line = 188:2]
  call void @llvm.dbg.declare(metadata !{i8* %par}, metadata !1489), !dbg !1490 ; [debug line = 189:17] [debug variable = par]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !1491), !dbg !1492 ; [debug line = 190:35] [debug variable = t]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %chk}, metadata !1493), !dbg !1494 ; [debug line = 190:38] [debug variable = chk]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %num}, metadata !1495), !dbg !1496 ; [debug line = 190:43] [debug variable = num]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %den}, metadata !1497), !dbg !1498 ; [debug line = 190:48] [debug variable = den]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %den2}, metadata !1499), !dbg !1500 ; [debug line = 190:53] [debug variable = den2]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %den4}, metadata !1501), !dbg !1502 ; [debug line = 190:59] [debug variable = den4]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %den6}, metadata !1503), !dbg !1504 ; [debug line = 190:65] [debug variable = den6]
  %5 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1505 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 191:3]
  %6 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %5, i32 0, i32 2, !dbg !1505 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 191:3]
  call void @crypto_sign_ed25519_ref_fe25519_setone(%struct.crypto_sign_ed25519_ref_fe25519* %6), !dbg !1505 ; [debug line = 191:3]
  %7 = load i8** %3, align 8, !dbg !1506          ; [#uses=1 type=i8*] [debug line = 192:3]
  %8 = getelementptr inbounds i8* %7, i64 31, !dbg !1506 ; [#uses=1 type=i8*] [debug line = 192:3]
  %9 = load i8* %8, align 1, !dbg !1506           ; [#uses=1 type=i8] [debug line = 192:3]
  %10 = zext i8 %9 to i32, !dbg !1506             ; [#uses=1 type=i32] [debug line = 192:3]
  %11 = ashr i32 %10, 7, !dbg !1506               ; [#uses=1 type=i32] [debug line = 192:3]
  %12 = trunc i32 %11 to i8, !dbg !1506           ; [#uses=1 type=i8] [debug line = 192:3]
  store i8 %12, i8* %par, align 1, !dbg !1506     ; [debug line = 192:3]
  %13 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1507 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 193:3]
  %14 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %13, i32 0, i32 1, !dbg !1507 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 193:3]
  %15 = load i8** %3, align 8, !dbg !1507         ; [#uses=1 type=i8*] [debug line = 193:3]
  call void @crypto_sign_ed25519_ref_fe25519_unpack(%struct.crypto_sign_ed25519_ref_fe25519* %14, i8* %15), !dbg !1507 ; [debug line = 193:3]
  %16 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1508 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 194:3]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %16, i32 0, i32 1, !dbg !1508 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 194:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %num, %struct.crypto_sign_ed25519_ref_fe25519* %17), !dbg !1508 ; [debug line = 194:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %den, %struct.crypto_sign_ed25519_ref_fe25519* %num, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_ecd), !dbg !1509 ; [debug line = 195:3]
  %18 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1510 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 196:3]
  %19 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %18, i32 0, i32 2, !dbg !1510 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 196:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %num, %struct.crypto_sign_ed25519_ref_fe25519* %num, %struct.crypto_sign_ed25519_ref_fe25519* %19), !dbg !1510 ; [debug line = 196:3]
  %20 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1511 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 197:3]
  %21 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %20, i32 0, i32 2, !dbg !1511 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 197:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %den, %struct.crypto_sign_ed25519_ref_fe25519* %21, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1511 ; [debug line = 197:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %den2, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1512 ; [debug line = 201:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %den4, %struct.crypto_sign_ed25519_ref_fe25519* %den2), !dbg !1513 ; [debug line = 202:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %den6, %struct.crypto_sign_ed25519_ref_fe25519* %den4, %struct.crypto_sign_ed25519_ref_fe25519* %den2), !dbg !1514 ; [debug line = 203:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %den6, %struct.crypto_sign_ed25519_ref_fe25519* %num), !dbg !1515 ; [debug line = 204:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1516 ; [debug line = 205:3]
  call void @crypto_sign_ed25519_ref_fe25519_pow2523(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !1517 ; [debug line = 207:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %num), !dbg !1518 ; [debug line = 209:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1519 ; [debug line = 210:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1520 ; [debug line = 211:3]
  %22 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1521 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 212:3]
  %23 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %22, i32 0, i32 0, !dbg !1521 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 212:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %23, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1521 ; [debug line = 212:3]
  %24 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1522 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 215:3]
  %25 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %24, i32 0, i32 0, !dbg !1522 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 215:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %25), !dbg !1522 ; [debug line = 215:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1523 ; [debug line = 216:3]
  %26 = call i32 @crypto_sign_ed25519_ref_fe25519_iseq_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %num), !dbg !1524 ; [#uses=1 type=i32] [debug line = 217:8]
  %27 = icmp ne i32 %26, 0, !dbg !1524            ; [#uses=1 type=i1] [debug line = 217:8]
  br i1 %27, label %33, label %28, !dbg !1524     ; [debug line = 217:8]

; <label>:28                                      ; preds = %0
  %29 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1525 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 218:5]
  %30 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %29, i32 0, i32 0, !dbg !1525 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 218:5]
  %31 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1525 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 218:5]
  %32 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %31, i32 0, i32 0, !dbg !1525 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 218:5]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %30, %struct.crypto_sign_ed25519_ref_fe25519* %32, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_sqrtm1), !dbg !1525 ; [debug line = 218:5]
  br label %33, !dbg !1525                        ; [debug line = 218:5]

; <label>:33                                      ; preds = %28, %0
  %34 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1526 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 221:3]
  %35 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %34, i32 0, i32 0, !dbg !1526 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 221:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %35), !dbg !1526 ; [debug line = 221:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %den), !dbg !1527 ; [debug line = 222:3]
  %36 = call i32 @crypto_sign_ed25519_ref_fe25519_iseq_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %chk, %struct.crypto_sign_ed25519_ref_fe25519* %num), !dbg !1528 ; [#uses=1 type=i32] [debug line = 223:8]
  %37 = icmp ne i32 %36, 0, !dbg !1528            ; [#uses=1 type=i1] [debug line = 223:8]
  br i1 %37, label %39, label %38, !dbg !1528     ; [debug line = 223:8]

; <label>:38                                      ; preds = %33
  store i32 -1, i32* %1, !dbg !1529               ; [debug line = 224:5]
  br label %60, !dbg !1529                        ; [debug line = 224:5]

; <label>:39                                      ; preds = %33
  %40 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1530 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 227:6]
  %41 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %40, i32 0, i32 0, !dbg !1530 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 227:6]
  %42 = call zeroext i8 @crypto_sign_ed25519_ref_fe25519_getparity(%struct.crypto_sign_ed25519_ref_fe25519* %41), !dbg !1530 ; [#uses=1 type=i8] [debug line = 227:6]
  %43 = zext i8 %42 to i32, !dbg !1530            ; [#uses=1 type=i32] [debug line = 227:6]
  %44 = load i8* %par, align 1, !dbg !1530        ; [#uses=1 type=i8] [debug line = 227:6]
  %45 = zext i8 %44 to i32, !dbg !1530            ; [#uses=1 type=i32] [debug line = 227:6]
  %46 = sub nsw i32 1, %45, !dbg !1530            ; [#uses=1 type=i32] [debug line = 227:6]
  %47 = icmp ne i32 %43, %46, !dbg !1530          ; [#uses=1 type=i1] [debug line = 227:6]
  br i1 %47, label %48, label %53, !dbg !1530     ; [debug line = 227:6]

; <label>:48                                      ; preds = %39
  %49 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1531 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 228:5]
  %50 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %49, i32 0, i32 0, !dbg !1531 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 228:5]
  %51 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1531 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 228:5]
  %52 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %51, i32 0, i32 0, !dbg !1531 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 228:5]
  call void @crypto_sign_ed25519_ref_fe25519_neg(%struct.crypto_sign_ed25519_ref_fe25519* %50, %struct.crypto_sign_ed25519_ref_fe25519* %52), !dbg !1531 ; [debug line = 228:5]
  br label %53, !dbg !1531                        ; [debug line = 228:5]

; <label>:53                                      ; preds = %48, %39
  %54 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1532 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 230:3]
  %55 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %54, i32 0, i32 3, !dbg !1532 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 230:3]
  %56 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1532 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 230:3]
  %57 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %56, i32 0, i32 0, !dbg !1532 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 230:3]
  %58 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1532 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 230:3]
  %59 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %58, i32 0, i32 1, !dbg !1532 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 230:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %55, %struct.crypto_sign_ed25519_ref_fe25519* %57, %struct.crypto_sign_ed25519_ref_fe25519* %59), !dbg !1532 ; [debug line = 230:3]
  store i32 0, i32* %1, !dbg !1533                ; [debug line = 231:3]
  br label %60, !dbg !1533                        ; [debug line = 231:3]

; <label>:60                                      ; preds = %53, %38
  %61 = load i32* %1, !dbg !1534                  ; [#uses=1 type=i32] [debug line = 232:1]
  ret i32 %61, !dbg !1534                         ; [debug line = 232:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_pack(i8* %r, %struct.crypto_sign_ed25519_ref_ge25519* %p) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=4 type=i8**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %tx = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %ty = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %zi = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store i8* %r, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !1535), !dbg !1536 ; [debug line = 234:49] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_ge25519* %p, %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %2}, metadata !1537), !dbg !1538 ; [debug line = 234:95] [debug variable = p]
  %3 = load i8** %1, align 8, !dbg !1539          ; [#uses=1 type=i8*] [debug line = 235:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 32) nounwind, !dbg !1539 ; [debug line = 235:2]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %tx}, metadata !1541), !dbg !1542 ; [debug line = 236:35] [debug variable = tx]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %ty}, metadata !1543), !dbg !1544 ; [debug line = 236:39] [debug variable = ty]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %zi}, metadata !1545), !dbg !1546 ; [debug line = 236:43] [debug variable = zi]
  %4 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1547 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 237:3]
  %5 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %4, i32 0, i32 2, !dbg !1547 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 237:3]
  call void @crypto_sign_ed25519_ref_fe25519_invert(%struct.crypto_sign_ed25519_ref_fe25519* %zi, %struct.crypto_sign_ed25519_ref_fe25519* %5), !dbg !1547 ; [debug line = 237:3]
  %6 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1548 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 238:3]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %6, i32 0, i32 0, !dbg !1548 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 238:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %tx, %struct.crypto_sign_ed25519_ref_fe25519* %7, %struct.crypto_sign_ed25519_ref_fe25519* %zi), !dbg !1548 ; [debug line = 238:3]
  %8 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1549 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 239:3]
  %9 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 1, !dbg !1549 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 239:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %ty, %struct.crypto_sign_ed25519_ref_fe25519* %9, %struct.crypto_sign_ed25519_ref_fe25519* %zi), !dbg !1549 ; [debug line = 239:3]
  %10 = load i8** %1, align 8, !dbg !1550         ; [#uses=1 type=i8*] [debug line = 240:3]
  call void @crypto_sign_ed25519_ref_fe25519_pack(i8* %10, %struct.crypto_sign_ed25519_ref_fe25519* %ty), !dbg !1550 ; [debug line = 240:3]
  %11 = call zeroext i8 @crypto_sign_ed25519_ref_fe25519_getparity(%struct.crypto_sign_ed25519_ref_fe25519* %tx), !dbg !1551 ; [#uses=1 type=i8] [debug line = 241:12]
  %12 = zext i8 %11 to i32, !dbg !1551            ; [#uses=1 type=i32] [debug line = 241:12]
  %13 = shl i32 %12, 7, !dbg !1551                ; [#uses=1 type=i32] [debug line = 241:12]
  %14 = load i8** %1, align 8, !dbg !1551         ; [#uses=1 type=i8*] [debug line = 241:12]
  %15 = getelementptr inbounds i8* %14, i64 31, !dbg !1551 ; [#uses=2 type=i8*] [debug line = 241:12]
  %16 = load i8* %15, align 1, !dbg !1551         ; [#uses=1 type=i8] [debug line = 241:12]
  %17 = zext i8 %16 to i32, !dbg !1551            ; [#uses=1 type=i32] [debug line = 241:12]
  %18 = xor i32 %17, %13, !dbg !1551              ; [#uses=1 type=i32] [debug line = 241:12]
  %19 = trunc i32 %18 to i8, !dbg !1551           ; [#uses=1 type=i8] [debug line = 241:12]
  store i8 %19, i8* %15, align 1, !dbg !1551      ; [debug line = 241:12]
  ret void, !dbg !1552                            ; [debug line = 242:1]
}

; [#uses=0]
define i32 @crypto_sign_ed25519_ref_isneutral_vartime(%struct.crypto_sign_ed25519_ref_ge25519* %p) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %ret = alloca i32, align 4                      ; [#uses=4 type=i32*]
  store %struct.crypto_sign_ed25519_ref_ge25519* %p, %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %1}, metadata !1553), !dbg !1554 ; [debug line = 244:86] [debug variable = p]
  call void @llvm.dbg.declare(metadata !{i32* %ret}, metadata !1555), !dbg !1557 ; [debug line = 246:7] [debug variable = ret]
  store i32 1, i32* %ret, align 4, !dbg !1558     ; [debug line = 246:14]
  %2 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1559 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 247:7]
  %3 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %2, i32 0, i32 0, !dbg !1559 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 247:7]
  %4 = call i32 @crypto_sign_ed25519_ref_fe25519_iszero(%struct.crypto_sign_ed25519_ref_fe25519* %3), !dbg !1559 ; [#uses=1 type=i32] [debug line = 247:7]
  %5 = icmp ne i32 %4, 0, !dbg !1559              ; [#uses=1 type=i1] [debug line = 247:7]
  br i1 %5, label %7, label %6, !dbg !1559        ; [debug line = 247:7]

; <label>:6                                       ; preds = %0
  store i32 0, i32* %ret, align 4, !dbg !1560     ; [debug line = 247:54]
  br label %7, !dbg !1560                         ; [debug line = 247:54]

; <label>:7                                       ; preds = %6, %0
  %8 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1561 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 248:7]
  %9 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 1, !dbg !1561 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 248:7]
  %10 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1561 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 248:7]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %10, i32 0, i32 2, !dbg !1561 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 248:7]
  %12 = call i32 @crypto_sign_ed25519_ref_fe25519_iseq_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %9, %struct.crypto_sign_ed25519_ref_fe25519* %11), !dbg !1561 ; [#uses=1 type=i32] [debug line = 248:7]
  %13 = icmp ne i32 %12, 0, !dbg !1561            ; [#uses=1 type=i1] [debug line = 248:7]
  br i1 %13, label %15, label %14, !dbg !1561     ; [debug line = 248:7]

; <label>:14                                      ; preds = %7
  store i32 0, i32* %ret, align 4, !dbg !1562     ; [debug line = 248:67]
  br label %15, !dbg !1562                        ; [debug line = 248:67]

; <label>:15                                      ; preds = %14, %7
  %16 = load i32* %ret, align 4, !dbg !1563       ; [#uses=1 type=i32] [debug line = 249:3]
  ret i32 %16, !dbg !1563                         ; [debug line = 249:3]
}

; [#uses=0]
define void @crypto_sign_ed25519_ref_double_scalarmult_vartime(%struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519* %p1, %struct.crypto_sign_ed25519_ref_fe25519* %s1, %struct.crypto_sign_ed25519_ref_ge25519* %p2, %struct.crypto_sign_ed25519_ref_fe25519* %s2) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=9 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %4 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %5 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %tp1p1 = alloca %struct.ge25519_p1p1, align 4   ; [#uses=33 type=%struct.ge25519_p1p1*]
  %pre = alloca [16 x %struct.crypto_sign_ed25519_ref_ge25519], align 16 ; [#uses=39 type=[16 x %struct.crypto_sign_ed25519_ref_ge25519]*]
  %b = alloca [127 x i8], align 16                ; [#uses=4 type=[127 x i8]*]
  %i = alloca i32, align 4                        ; [#uses=7 type=i32*]
  store %struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %1}, metadata !1564), !dbg !1565 ; [debug line = 253:89] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_ge25519* %p1, %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %2}, metadata !1566), !dbg !1567 ; [debug line = 253:131] [debug variable = p1]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s1, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1568), !dbg !1569 ; [debug line = 253:174] [debug variable = s1]
  store %struct.crypto_sign_ed25519_ref_ge25519* %p2, %struct.crypto_sign_ed25519_ref_ge25519** %4, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %4}, metadata !1570), !dbg !1571 ; [debug line = 253:217] [debug variable = p2]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s2, %struct.crypto_sign_ed25519_ref_fe25519** %5, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %5}, metadata !1572), !dbg !1573 ; [debug line = 253:0] [debug variable = s2]
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p1p1* %tp1p1}, metadata !1574), !dbg !1576 ; [debug line = 255:16] [debug variable = tp1p1]
  call void @llvm.dbg.declare(metadata !{[16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre}, metadata !1577), !dbg !1579 ; [debug line = 256:35] [debug variable = pre]
  call void @llvm.dbg.declare(metadata !{[127 x i8]* %b}, metadata !1580), !dbg !1584 ; [debug line = 257:17] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1585), !dbg !1586 ; [debug line = 258:7] [debug variable = i]
  %6 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i32 0, !dbg !1587 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 261:3]
  call void @setneutral(%struct.crypto_sign_ed25519_ref_ge25519* %6), !dbg !1587 ; [debug line = 261:3]
  %7 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 1, !dbg !1588 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 262:3]
  %8 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1588 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 262:3]
  %9 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %7 to i8*, !dbg !1588 ; [#uses=0 type=i8*] [debug line = 262:3]
  %10 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %8 to i8*, !dbg !1588 ; [#uses=0 type=i8*] [debug line = 262:3]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %7, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %12 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %13 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %11, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %14 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %12, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %15 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %16 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %17 = load i32* %16, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %17, i32* %15, !dbg !1588             ; [debug line = 262:3]
  %18 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %19 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %20 = load i32* %19, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %20, i32* %18, !dbg !1588             ; [debug line = 262:3]
  %21 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %22 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %23 = load i32* %22, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %23, i32* %21, !dbg !1588             ; [debug line = 262:3]
  %24 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %25 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %26 = load i32* %25, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %26, i32* %24, !dbg !1588             ; [debug line = 262:3]
  %27 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %28 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %29 = load i32* %28, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %29, i32* %27, !dbg !1588             ; [debug line = 262:3]
  %30 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %31 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %32 = load i32* %31, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %32, i32* %30, !dbg !1588             ; [debug line = 262:3]
  %33 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %34 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %35 = load i32* %34, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %35, i32* %33, !dbg !1588             ; [debug line = 262:3]
  %36 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %37 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %38 = load i32* %37, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %38, i32* %36, !dbg !1588             ; [debug line = 262:3]
  %39 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %40 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %41 = load i32* %40, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %41, i32* %39, !dbg !1588             ; [debug line = 262:3]
  %42 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %43 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %44 = load i32* %43, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %44, i32* %42, !dbg !1588             ; [debug line = 262:3]
  %45 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %46 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %47 = load i32* %46, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %47, i32* %45, !dbg !1588             ; [debug line = 262:3]
  %48 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %49 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %50 = load i32* %49, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %50, i32* %48, !dbg !1588             ; [debug line = 262:3]
  %51 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %52 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %53 = load i32* %52, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %53, i32* %51, !dbg !1588             ; [debug line = 262:3]
  %54 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %55 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %56 = load i32* %55, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %56, i32* %54, !dbg !1588             ; [debug line = 262:3]
  %57 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %58 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %59 = load i32* %58, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %59, i32* %57, !dbg !1588             ; [debug line = 262:3]
  %60 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %61 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %62 = load i32* %61, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %62, i32* %60, !dbg !1588             ; [debug line = 262:3]
  %63 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %64 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %65 = load i32* %64, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %65, i32* %63, !dbg !1588             ; [debug line = 262:3]
  %66 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %67 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %68 = load i32* %67, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %68, i32* %66, !dbg !1588             ; [debug line = 262:3]
  %69 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %70 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %71 = load i32* %70, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %71, i32* %69, !dbg !1588             ; [debug line = 262:3]
  %72 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %73 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %74 = load i32* %73, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %74, i32* %72, !dbg !1588             ; [debug line = 262:3]
  %75 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %76 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %77 = load i32* %76, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %77, i32* %75, !dbg !1588             ; [debug line = 262:3]
  %78 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %79 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %80 = load i32* %79, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %80, i32* %78, !dbg !1588             ; [debug line = 262:3]
  %81 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %82 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %83 = load i32* %82, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %83, i32* %81, !dbg !1588             ; [debug line = 262:3]
  %84 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %85 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %86 = load i32* %85, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %86, i32* %84, !dbg !1588             ; [debug line = 262:3]
  %87 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %88 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %89 = load i32* %88, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %89, i32* %87, !dbg !1588             ; [debug line = 262:3]
  %90 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %91 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %92 = load i32* %91, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %92, i32* %90, !dbg !1588             ; [debug line = 262:3]
  %93 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %94 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %95 = load i32* %94, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %95, i32* %93, !dbg !1588             ; [debug line = 262:3]
  %96 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %97 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %98 = load i32* %97, !dbg !1588                 ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %98, i32* %96, !dbg !1588             ; [debug line = 262:3]
  %99 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %100 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %101 = load i32* %100, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %101, i32* %99, !dbg !1588            ; [debug line = 262:3]
  %102 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %103 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %104 = load i32* %103, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %104, i32* %102, !dbg !1588           ; [debug line = 262:3]
  %105 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %106 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %107 = load i32* %106, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %107, i32* %105, !dbg !1588           ; [debug line = 262:3]
  %108 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %109 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %110 = load i32* %109, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %110, i32* %108, !dbg !1588           ; [debug line = 262:3]
  %111 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %7, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %112 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %113 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %111, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %114 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %112, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %115 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %116 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %117 = load i32* %116, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %117, i32* %115, !dbg !1588           ; [debug line = 262:3]
  %118 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %119 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %120 = load i32* %119, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %120, i32* %118, !dbg !1588           ; [debug line = 262:3]
  %121 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %122 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %123 = load i32* %122, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %123, i32* %121, !dbg !1588           ; [debug line = 262:3]
  %124 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %125 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %126 = load i32* %125, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %126, i32* %124, !dbg !1588           ; [debug line = 262:3]
  %127 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %128 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %129 = load i32* %128, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %129, i32* %127, !dbg !1588           ; [debug line = 262:3]
  %130 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %131 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %132 = load i32* %131, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %132, i32* %130, !dbg !1588           ; [debug line = 262:3]
  %133 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %134 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %135 = load i32* %134, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %135, i32* %133, !dbg !1588           ; [debug line = 262:3]
  %136 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %137 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %138 = load i32* %137, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %138, i32* %136, !dbg !1588           ; [debug line = 262:3]
  %139 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %140 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %141 = load i32* %140, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %141, i32* %139, !dbg !1588           ; [debug line = 262:3]
  %142 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %143 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %144 = load i32* %143, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %144, i32* %142, !dbg !1588           ; [debug line = 262:3]
  %145 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %146 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %147 = load i32* %146, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %147, i32* %145, !dbg !1588           ; [debug line = 262:3]
  %148 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %149 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %150 = load i32* %149, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %150, i32* %148, !dbg !1588           ; [debug line = 262:3]
  %151 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %152 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %153 = load i32* %152, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %153, i32* %151, !dbg !1588           ; [debug line = 262:3]
  %154 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %155 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %156 = load i32* %155, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %156, i32* %154, !dbg !1588           ; [debug line = 262:3]
  %157 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %158 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %159 = load i32* %158, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %159, i32* %157, !dbg !1588           ; [debug line = 262:3]
  %160 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %161 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %162 = load i32* %161, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %162, i32* %160, !dbg !1588           ; [debug line = 262:3]
  %163 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %164 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %165 = load i32* %164, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %165, i32* %163, !dbg !1588           ; [debug line = 262:3]
  %166 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %167 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %168 = load i32* %167, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %168, i32* %166, !dbg !1588           ; [debug line = 262:3]
  %169 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %170 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %171 = load i32* %170, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %171, i32* %169, !dbg !1588           ; [debug line = 262:3]
  %172 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %173 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %174 = load i32* %173, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %174, i32* %172, !dbg !1588           ; [debug line = 262:3]
  %175 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %176 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %177 = load i32* %176, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %177, i32* %175, !dbg !1588           ; [debug line = 262:3]
  %178 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %179 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %180 = load i32* %179, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %180, i32* %178, !dbg !1588           ; [debug line = 262:3]
  %181 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %182 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %183 = load i32* %182, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %183, i32* %181, !dbg !1588           ; [debug line = 262:3]
  %184 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %185 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %186 = load i32* %185, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %186, i32* %184, !dbg !1588           ; [debug line = 262:3]
  %187 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %188 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %189 = load i32* %188, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %189, i32* %187, !dbg !1588           ; [debug line = 262:3]
  %190 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %191 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %192 = load i32* %191, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %192, i32* %190, !dbg !1588           ; [debug line = 262:3]
  %193 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %194 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %195 = load i32* %194, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %195, i32* %193, !dbg !1588           ; [debug line = 262:3]
  %196 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %197 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %198 = load i32* %197, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %198, i32* %196, !dbg !1588           ; [debug line = 262:3]
  %199 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %200 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %201 = load i32* %200, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %201, i32* %199, !dbg !1588           ; [debug line = 262:3]
  %202 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %203 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %204 = load i32* %203, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %204, i32* %202, !dbg !1588           ; [debug line = 262:3]
  %205 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %206 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %207 = load i32* %206, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %207, i32* %205, !dbg !1588           ; [debug line = 262:3]
  %208 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %209 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %210 = load i32* %209, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %210, i32* %208, !dbg !1588           ; [debug line = 262:3]
  %211 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %7, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %212 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %213 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %211, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %214 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %212, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %215 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %216 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %217 = load i32* %216, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %217, i32* %215, !dbg !1588           ; [debug line = 262:3]
  %218 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %219 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %220 = load i32* %219, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %220, i32* %218, !dbg !1588           ; [debug line = 262:3]
  %221 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %222 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %223 = load i32* %222, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %223, i32* %221, !dbg !1588           ; [debug line = 262:3]
  %224 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %225 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %226 = load i32* %225, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %226, i32* %224, !dbg !1588           ; [debug line = 262:3]
  %227 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %228 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %229 = load i32* %228, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %229, i32* %227, !dbg !1588           ; [debug line = 262:3]
  %230 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %231 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %232 = load i32* %231, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %232, i32* %230, !dbg !1588           ; [debug line = 262:3]
  %233 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %234 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %235 = load i32* %234, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %235, i32* %233, !dbg !1588           ; [debug line = 262:3]
  %236 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %237 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %238 = load i32* %237, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %238, i32* %236, !dbg !1588           ; [debug line = 262:3]
  %239 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %240 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %241 = load i32* %240, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %241, i32* %239, !dbg !1588           ; [debug line = 262:3]
  %242 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %243 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %244 = load i32* %243, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %244, i32* %242, !dbg !1588           ; [debug line = 262:3]
  %245 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %246 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %247 = load i32* %246, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %247, i32* %245, !dbg !1588           ; [debug line = 262:3]
  %248 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %249 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %250 = load i32* %249, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %250, i32* %248, !dbg !1588           ; [debug line = 262:3]
  %251 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %252 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %253 = load i32* %252, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %253, i32* %251, !dbg !1588           ; [debug line = 262:3]
  %254 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %255 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %256 = load i32* %255, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %256, i32* %254, !dbg !1588           ; [debug line = 262:3]
  %257 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %258 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %259 = load i32* %258, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %259, i32* %257, !dbg !1588           ; [debug line = 262:3]
  %260 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %261 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %262 = load i32* %261, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %262, i32* %260, !dbg !1588           ; [debug line = 262:3]
  %263 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %264 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %265 = load i32* %264, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %265, i32* %263, !dbg !1588           ; [debug line = 262:3]
  %266 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %267 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %268 = load i32* %267, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %268, i32* %266, !dbg !1588           ; [debug line = 262:3]
  %269 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %270 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %271 = load i32* %270, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %271, i32* %269, !dbg !1588           ; [debug line = 262:3]
  %272 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %273 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %274 = load i32* %273, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %274, i32* %272, !dbg !1588           ; [debug line = 262:3]
  %275 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %276 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %277 = load i32* %276, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %277, i32* %275, !dbg !1588           ; [debug line = 262:3]
  %278 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %279 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %280 = load i32* %279, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %280, i32* %278, !dbg !1588           ; [debug line = 262:3]
  %281 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %282 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %283 = load i32* %282, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %283, i32* %281, !dbg !1588           ; [debug line = 262:3]
  %284 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %285 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %286 = load i32* %285, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %286, i32* %284, !dbg !1588           ; [debug line = 262:3]
  %287 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %288 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %289 = load i32* %288, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %289, i32* %287, !dbg !1588           ; [debug line = 262:3]
  %290 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %291 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %292 = load i32* %291, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %292, i32* %290, !dbg !1588           ; [debug line = 262:3]
  %293 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %294 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %295 = load i32* %294, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %295, i32* %293, !dbg !1588           ; [debug line = 262:3]
  %296 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %297 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %298 = load i32* %297, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %298, i32* %296, !dbg !1588           ; [debug line = 262:3]
  %299 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %300 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %301 = load i32* %300, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %301, i32* %299, !dbg !1588           ; [debug line = 262:3]
  %302 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %303 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %304 = load i32* %303, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %304, i32* %302, !dbg !1588           ; [debug line = 262:3]
  %305 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %306 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %307 = load i32* %306, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %307, i32* %305, !dbg !1588           ; [debug line = 262:3]
  %308 = getelementptr inbounds [32 x i32]* %213, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %309 = getelementptr inbounds [32 x i32]* %214, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %310 = load i32* %309, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %310, i32* %308, !dbg !1588           ; [debug line = 262:3]
  %311 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %7, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %312 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 262:3]
  %313 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %311, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %314 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %312, i32 0, i32 0, !dbg !1588 ; [#uses=32 type=[32 x i32]*] [debug line = 262:3]
  %315 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %316 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 0, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %317 = load i32* %316, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %317, i32* %315, !dbg !1588           ; [debug line = 262:3]
  %318 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %319 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 1, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %320 = load i32* %319, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %320, i32* %318, !dbg !1588           ; [debug line = 262:3]
  %321 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %322 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 2, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %323 = load i32* %322, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %323, i32* %321, !dbg !1588           ; [debug line = 262:3]
  %324 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %325 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 3, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %326 = load i32* %325, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %326, i32* %324, !dbg !1588           ; [debug line = 262:3]
  %327 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %328 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 4, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %329 = load i32* %328, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %329, i32* %327, !dbg !1588           ; [debug line = 262:3]
  %330 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %331 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 5, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %332 = load i32* %331, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %332, i32* %330, !dbg !1588           ; [debug line = 262:3]
  %333 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %334 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 6, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %335 = load i32* %334, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %335, i32* %333, !dbg !1588           ; [debug line = 262:3]
  %336 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %337 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 7, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %338 = load i32* %337, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %338, i32* %336, !dbg !1588           ; [debug line = 262:3]
  %339 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %340 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 8, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %341 = load i32* %340, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %341, i32* %339, !dbg !1588           ; [debug line = 262:3]
  %342 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %343 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 9, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %344 = load i32* %343, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %344, i32* %342, !dbg !1588           ; [debug line = 262:3]
  %345 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %346 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 10, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %347 = load i32* %346, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %347, i32* %345, !dbg !1588           ; [debug line = 262:3]
  %348 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %349 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 11, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %350 = load i32* %349, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %350, i32* %348, !dbg !1588           ; [debug line = 262:3]
  %351 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %352 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 12, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %353 = load i32* %352, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %353, i32* %351, !dbg !1588           ; [debug line = 262:3]
  %354 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %355 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 13, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %356 = load i32* %355, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %356, i32* %354, !dbg !1588           ; [debug line = 262:3]
  %357 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %358 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 14, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %359 = load i32* %358, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %359, i32* %357, !dbg !1588           ; [debug line = 262:3]
  %360 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %361 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 15, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %362 = load i32* %361, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %362, i32* %360, !dbg !1588           ; [debug line = 262:3]
  %363 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %364 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 16, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %365 = load i32* %364, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %365, i32* %363, !dbg !1588           ; [debug line = 262:3]
  %366 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %367 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 17, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %368 = load i32* %367, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %368, i32* %366, !dbg !1588           ; [debug line = 262:3]
  %369 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %370 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 18, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %371 = load i32* %370, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %371, i32* %369, !dbg !1588           ; [debug line = 262:3]
  %372 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %373 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 19, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %374 = load i32* %373, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %374, i32* %372, !dbg !1588           ; [debug line = 262:3]
  %375 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %376 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 20, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %377 = load i32* %376, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %377, i32* %375, !dbg !1588           ; [debug line = 262:3]
  %378 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %379 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 21, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %380 = load i32* %379, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %380, i32* %378, !dbg !1588           ; [debug line = 262:3]
  %381 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %382 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 22, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %383 = load i32* %382, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %383, i32* %381, !dbg !1588           ; [debug line = 262:3]
  %384 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %385 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 23, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %386 = load i32* %385, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %386, i32* %384, !dbg !1588           ; [debug line = 262:3]
  %387 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %388 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 24, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %389 = load i32* %388, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %389, i32* %387, !dbg !1588           ; [debug line = 262:3]
  %390 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %391 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 25, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %392 = load i32* %391, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %392, i32* %390, !dbg !1588           ; [debug line = 262:3]
  %393 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %394 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 26, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %395 = load i32* %394, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %395, i32* %393, !dbg !1588           ; [debug line = 262:3]
  %396 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %397 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 27, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %398 = load i32* %397, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %398, i32* %396, !dbg !1588           ; [debug line = 262:3]
  %399 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %400 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 28, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %401 = load i32* %400, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %401, i32* %399, !dbg !1588           ; [debug line = 262:3]
  %402 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %403 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 29, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %404 = load i32* %403, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %404, i32* %402, !dbg !1588           ; [debug line = 262:3]
  %405 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %406 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 30, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %407 = load i32* %406, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %407, i32* %405, !dbg !1588           ; [debug line = 262:3]
  %408 = getelementptr inbounds [32 x i32]* %313, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %409 = getelementptr inbounds [32 x i32]* %314, i32 0, i32 31, !dbg !1588 ; [#uses=1 type=i32*] [debug line = 262:3]
  %410 = load i32* %409, !dbg !1588               ; [#uses=1 type=i32] [debug line = 262:3]
  store i32 %410, i32* %408, !dbg !1588           ; [debug line = 262:3]
  %411 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1589 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 263:3]
  %412 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %411 to %struct.ge25519_p2*, !dbg !1589 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 263:3]
  call void @dbl_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.ge25519_p2* %412), !dbg !1589 ; [debug line = 263:3]
  %413 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 2, !dbg !1590 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 263:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %413, %struct.ge25519_p1p1* %tp1p1), !dbg !1590 ; [debug line = 263:38]
  %414 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 1, !dbg !1591 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 264:3]
  %415 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 2, !dbg !1591 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 264:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %414, %struct.crypto_sign_ed25519_ref_ge25519* %415), !dbg !1591 ; [debug line = 264:3]
  %416 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 3, !dbg !1592 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 264:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %416, %struct.ge25519_p1p1* %tp1p1), !dbg !1592 ; [debug line = 264:38]
  %417 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 4, !dbg !1593 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 265:3]
  %418 = load %struct.crypto_sign_ed25519_ref_ge25519** %4, align 8, !dbg !1593 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 265:3]
  %419 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %417 to i8*, !dbg !1593 ; [#uses=0 type=i8*] [debug line = 265:3]
  %420 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %418 to i8*, !dbg !1593 ; [#uses=0 type=i8*] [debug line = 265:3]
  %421 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %417, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %422 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %418, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %423 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %421, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %424 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %422, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %425 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %426 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %427 = load i32* %426, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %427, i32* %425, !dbg !1593           ; [debug line = 265:3]
  %428 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %429 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %430 = load i32* %429, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %430, i32* %428, !dbg !1593           ; [debug line = 265:3]
  %431 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %432 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %433 = load i32* %432, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %433, i32* %431, !dbg !1593           ; [debug line = 265:3]
  %434 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %435 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %436 = load i32* %435, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %436, i32* %434, !dbg !1593           ; [debug line = 265:3]
  %437 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %438 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %439 = load i32* %438, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %439, i32* %437, !dbg !1593           ; [debug line = 265:3]
  %440 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %441 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %442 = load i32* %441, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %442, i32* %440, !dbg !1593           ; [debug line = 265:3]
  %443 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %444 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %445 = load i32* %444, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %445, i32* %443, !dbg !1593           ; [debug line = 265:3]
  %446 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %447 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %448 = load i32* %447, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %448, i32* %446, !dbg !1593           ; [debug line = 265:3]
  %449 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %450 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %451 = load i32* %450, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %451, i32* %449, !dbg !1593           ; [debug line = 265:3]
  %452 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %453 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %454 = load i32* %453, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %454, i32* %452, !dbg !1593           ; [debug line = 265:3]
  %455 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %456 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %457 = load i32* %456, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %457, i32* %455, !dbg !1593           ; [debug line = 265:3]
  %458 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %459 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %460 = load i32* %459, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %460, i32* %458, !dbg !1593           ; [debug line = 265:3]
  %461 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %462 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %463 = load i32* %462, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %463, i32* %461, !dbg !1593           ; [debug line = 265:3]
  %464 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %465 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %466 = load i32* %465, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %466, i32* %464, !dbg !1593           ; [debug line = 265:3]
  %467 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %468 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %469 = load i32* %468, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %469, i32* %467, !dbg !1593           ; [debug line = 265:3]
  %470 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %471 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %472 = load i32* %471, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %472, i32* %470, !dbg !1593           ; [debug line = 265:3]
  %473 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %474 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %475 = load i32* %474, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %475, i32* %473, !dbg !1593           ; [debug line = 265:3]
  %476 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %477 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %478 = load i32* %477, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %478, i32* %476, !dbg !1593           ; [debug line = 265:3]
  %479 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %480 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %481 = load i32* %480, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %481, i32* %479, !dbg !1593           ; [debug line = 265:3]
  %482 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %483 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %484 = load i32* %483, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %484, i32* %482, !dbg !1593           ; [debug line = 265:3]
  %485 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %486 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %487 = load i32* %486, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %487, i32* %485, !dbg !1593           ; [debug line = 265:3]
  %488 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %489 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %490 = load i32* %489, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %490, i32* %488, !dbg !1593           ; [debug line = 265:3]
  %491 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %492 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %493 = load i32* %492, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %493, i32* %491, !dbg !1593           ; [debug line = 265:3]
  %494 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %495 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %496 = load i32* %495, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %496, i32* %494, !dbg !1593           ; [debug line = 265:3]
  %497 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %498 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %499 = load i32* %498, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %499, i32* %497, !dbg !1593           ; [debug line = 265:3]
  %500 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %501 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %502 = load i32* %501, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %502, i32* %500, !dbg !1593           ; [debug line = 265:3]
  %503 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %504 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %505 = load i32* %504, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %505, i32* %503, !dbg !1593           ; [debug line = 265:3]
  %506 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %507 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %508 = load i32* %507, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %508, i32* %506, !dbg !1593           ; [debug line = 265:3]
  %509 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %510 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %511 = load i32* %510, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %511, i32* %509, !dbg !1593           ; [debug line = 265:3]
  %512 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %513 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %514 = load i32* %513, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %514, i32* %512, !dbg !1593           ; [debug line = 265:3]
  %515 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %516 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %517 = load i32* %516, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %517, i32* %515, !dbg !1593           ; [debug line = 265:3]
  %518 = getelementptr inbounds [32 x i32]* %423, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %519 = getelementptr inbounds [32 x i32]* %424, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %520 = load i32* %519, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %520, i32* %518, !dbg !1593           ; [debug line = 265:3]
  %521 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %417, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %522 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %418, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %523 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %521, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %524 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %522, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %525 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %526 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %527 = load i32* %526, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %527, i32* %525, !dbg !1593           ; [debug line = 265:3]
  %528 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %529 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %530 = load i32* %529, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %530, i32* %528, !dbg !1593           ; [debug line = 265:3]
  %531 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %532 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %533 = load i32* %532, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %533, i32* %531, !dbg !1593           ; [debug line = 265:3]
  %534 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %535 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %536 = load i32* %535, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %536, i32* %534, !dbg !1593           ; [debug line = 265:3]
  %537 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %538 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %539 = load i32* %538, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %539, i32* %537, !dbg !1593           ; [debug line = 265:3]
  %540 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %541 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %542 = load i32* %541, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %542, i32* %540, !dbg !1593           ; [debug line = 265:3]
  %543 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %544 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %545 = load i32* %544, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %545, i32* %543, !dbg !1593           ; [debug line = 265:3]
  %546 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %547 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %548 = load i32* %547, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %548, i32* %546, !dbg !1593           ; [debug line = 265:3]
  %549 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %550 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %551 = load i32* %550, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %551, i32* %549, !dbg !1593           ; [debug line = 265:3]
  %552 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %553 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %554 = load i32* %553, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %554, i32* %552, !dbg !1593           ; [debug line = 265:3]
  %555 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %556 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %557 = load i32* %556, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %557, i32* %555, !dbg !1593           ; [debug line = 265:3]
  %558 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %559 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %560 = load i32* %559, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %560, i32* %558, !dbg !1593           ; [debug line = 265:3]
  %561 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %562 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %563 = load i32* %562, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %563, i32* %561, !dbg !1593           ; [debug line = 265:3]
  %564 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %565 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %566 = load i32* %565, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %566, i32* %564, !dbg !1593           ; [debug line = 265:3]
  %567 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %568 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %569 = load i32* %568, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %569, i32* %567, !dbg !1593           ; [debug line = 265:3]
  %570 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %571 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %572 = load i32* %571, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %572, i32* %570, !dbg !1593           ; [debug line = 265:3]
  %573 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %574 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %575 = load i32* %574, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %575, i32* %573, !dbg !1593           ; [debug line = 265:3]
  %576 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %577 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %578 = load i32* %577, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %578, i32* %576, !dbg !1593           ; [debug line = 265:3]
  %579 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %580 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %581 = load i32* %580, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %581, i32* %579, !dbg !1593           ; [debug line = 265:3]
  %582 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %583 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %584 = load i32* %583, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %584, i32* %582, !dbg !1593           ; [debug line = 265:3]
  %585 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %586 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %587 = load i32* %586, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %587, i32* %585, !dbg !1593           ; [debug line = 265:3]
  %588 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %589 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %590 = load i32* %589, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %590, i32* %588, !dbg !1593           ; [debug line = 265:3]
  %591 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %592 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %593 = load i32* %592, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %593, i32* %591, !dbg !1593           ; [debug line = 265:3]
  %594 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %595 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %596 = load i32* %595, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %596, i32* %594, !dbg !1593           ; [debug line = 265:3]
  %597 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %598 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %599 = load i32* %598, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %599, i32* %597, !dbg !1593           ; [debug line = 265:3]
  %600 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %601 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %602 = load i32* %601, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %602, i32* %600, !dbg !1593           ; [debug line = 265:3]
  %603 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %604 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %605 = load i32* %604, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %605, i32* %603, !dbg !1593           ; [debug line = 265:3]
  %606 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %607 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %608 = load i32* %607, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %608, i32* %606, !dbg !1593           ; [debug line = 265:3]
  %609 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %610 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %611 = load i32* %610, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %611, i32* %609, !dbg !1593           ; [debug line = 265:3]
  %612 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %613 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %614 = load i32* %613, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %614, i32* %612, !dbg !1593           ; [debug line = 265:3]
  %615 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %616 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %617 = load i32* %616, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %617, i32* %615, !dbg !1593           ; [debug line = 265:3]
  %618 = getelementptr inbounds [32 x i32]* %523, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %619 = getelementptr inbounds [32 x i32]* %524, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %620 = load i32* %619, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %620, i32* %618, !dbg !1593           ; [debug line = 265:3]
  %621 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %417, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %622 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %418, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %623 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %621, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %624 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %622, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %625 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %626 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %627 = load i32* %626, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %627, i32* %625, !dbg !1593           ; [debug line = 265:3]
  %628 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %629 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %630 = load i32* %629, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %630, i32* %628, !dbg !1593           ; [debug line = 265:3]
  %631 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %632 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %633 = load i32* %632, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %633, i32* %631, !dbg !1593           ; [debug line = 265:3]
  %634 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %635 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %636 = load i32* %635, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %636, i32* %634, !dbg !1593           ; [debug line = 265:3]
  %637 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %638 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %639 = load i32* %638, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %639, i32* %637, !dbg !1593           ; [debug line = 265:3]
  %640 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %641 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %642 = load i32* %641, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %642, i32* %640, !dbg !1593           ; [debug line = 265:3]
  %643 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %644 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %645 = load i32* %644, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %645, i32* %643, !dbg !1593           ; [debug line = 265:3]
  %646 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %647 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %648 = load i32* %647, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %648, i32* %646, !dbg !1593           ; [debug line = 265:3]
  %649 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %650 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %651 = load i32* %650, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %651, i32* %649, !dbg !1593           ; [debug line = 265:3]
  %652 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %653 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %654 = load i32* %653, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %654, i32* %652, !dbg !1593           ; [debug line = 265:3]
  %655 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %656 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %657 = load i32* %656, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %657, i32* %655, !dbg !1593           ; [debug line = 265:3]
  %658 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %659 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %660 = load i32* %659, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %660, i32* %658, !dbg !1593           ; [debug line = 265:3]
  %661 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %662 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %663 = load i32* %662, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %663, i32* %661, !dbg !1593           ; [debug line = 265:3]
  %664 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %665 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %666 = load i32* %665, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %666, i32* %664, !dbg !1593           ; [debug line = 265:3]
  %667 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %668 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %669 = load i32* %668, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %669, i32* %667, !dbg !1593           ; [debug line = 265:3]
  %670 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %671 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %672 = load i32* %671, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %672, i32* %670, !dbg !1593           ; [debug line = 265:3]
  %673 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %674 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %675 = load i32* %674, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %675, i32* %673, !dbg !1593           ; [debug line = 265:3]
  %676 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %677 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %678 = load i32* %677, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %678, i32* %676, !dbg !1593           ; [debug line = 265:3]
  %679 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %680 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %681 = load i32* %680, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %681, i32* %679, !dbg !1593           ; [debug line = 265:3]
  %682 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %683 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %684 = load i32* %683, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %684, i32* %682, !dbg !1593           ; [debug line = 265:3]
  %685 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %686 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %687 = load i32* %686, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %687, i32* %685, !dbg !1593           ; [debug line = 265:3]
  %688 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %689 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %690 = load i32* %689, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %690, i32* %688, !dbg !1593           ; [debug line = 265:3]
  %691 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %692 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %693 = load i32* %692, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %693, i32* %691, !dbg !1593           ; [debug line = 265:3]
  %694 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %695 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %696 = load i32* %695, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %696, i32* %694, !dbg !1593           ; [debug line = 265:3]
  %697 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %698 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %699 = load i32* %698, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %699, i32* %697, !dbg !1593           ; [debug line = 265:3]
  %700 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %701 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %702 = load i32* %701, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %702, i32* %700, !dbg !1593           ; [debug line = 265:3]
  %703 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %704 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %705 = load i32* %704, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %705, i32* %703, !dbg !1593           ; [debug line = 265:3]
  %706 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %707 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %708 = load i32* %707, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %708, i32* %706, !dbg !1593           ; [debug line = 265:3]
  %709 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %710 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %711 = load i32* %710, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %711, i32* %709, !dbg !1593           ; [debug line = 265:3]
  %712 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %713 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %714 = load i32* %713, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %714, i32* %712, !dbg !1593           ; [debug line = 265:3]
  %715 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %716 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %717 = load i32* %716, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %717, i32* %715, !dbg !1593           ; [debug line = 265:3]
  %718 = getelementptr inbounds [32 x i32]* %623, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %719 = getelementptr inbounds [32 x i32]* %624, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %720 = load i32* %719, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %720, i32* %718, !dbg !1593           ; [debug line = 265:3]
  %721 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %417, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %722 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %418, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 265:3]
  %723 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %721, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %724 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %722, i32 0, i32 0, !dbg !1593 ; [#uses=32 type=[32 x i32]*] [debug line = 265:3]
  %725 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %726 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 0, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %727 = load i32* %726, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %727, i32* %725, !dbg !1593           ; [debug line = 265:3]
  %728 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %729 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 1, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %730 = load i32* %729, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %730, i32* %728, !dbg !1593           ; [debug line = 265:3]
  %731 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %732 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 2, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %733 = load i32* %732, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %733, i32* %731, !dbg !1593           ; [debug line = 265:3]
  %734 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %735 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 3, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %736 = load i32* %735, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %736, i32* %734, !dbg !1593           ; [debug line = 265:3]
  %737 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %738 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 4, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %739 = load i32* %738, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %739, i32* %737, !dbg !1593           ; [debug line = 265:3]
  %740 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %741 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 5, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %742 = load i32* %741, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %742, i32* %740, !dbg !1593           ; [debug line = 265:3]
  %743 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %744 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 6, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %745 = load i32* %744, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %745, i32* %743, !dbg !1593           ; [debug line = 265:3]
  %746 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %747 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 7, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %748 = load i32* %747, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %748, i32* %746, !dbg !1593           ; [debug line = 265:3]
  %749 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %750 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 8, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %751 = load i32* %750, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %751, i32* %749, !dbg !1593           ; [debug line = 265:3]
  %752 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %753 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 9, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %754 = load i32* %753, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %754, i32* %752, !dbg !1593           ; [debug line = 265:3]
  %755 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %756 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 10, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %757 = load i32* %756, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %757, i32* %755, !dbg !1593           ; [debug line = 265:3]
  %758 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %759 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 11, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %760 = load i32* %759, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %760, i32* %758, !dbg !1593           ; [debug line = 265:3]
  %761 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %762 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 12, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %763 = load i32* %762, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %763, i32* %761, !dbg !1593           ; [debug line = 265:3]
  %764 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %765 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 13, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %766 = load i32* %765, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %766, i32* %764, !dbg !1593           ; [debug line = 265:3]
  %767 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %768 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 14, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %769 = load i32* %768, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %769, i32* %767, !dbg !1593           ; [debug line = 265:3]
  %770 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %771 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 15, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %772 = load i32* %771, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %772, i32* %770, !dbg !1593           ; [debug line = 265:3]
  %773 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %774 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 16, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %775 = load i32* %774, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %775, i32* %773, !dbg !1593           ; [debug line = 265:3]
  %776 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %777 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 17, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %778 = load i32* %777, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %778, i32* %776, !dbg !1593           ; [debug line = 265:3]
  %779 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %780 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 18, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %781 = load i32* %780, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %781, i32* %779, !dbg !1593           ; [debug line = 265:3]
  %782 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %783 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 19, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %784 = load i32* %783, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %784, i32* %782, !dbg !1593           ; [debug line = 265:3]
  %785 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %786 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 20, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %787 = load i32* %786, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %787, i32* %785, !dbg !1593           ; [debug line = 265:3]
  %788 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %789 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 21, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %790 = load i32* %789, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %790, i32* %788, !dbg !1593           ; [debug line = 265:3]
  %791 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %792 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 22, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %793 = load i32* %792, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %793, i32* %791, !dbg !1593           ; [debug line = 265:3]
  %794 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %795 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 23, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %796 = load i32* %795, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %796, i32* %794, !dbg !1593           ; [debug line = 265:3]
  %797 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %798 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 24, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %799 = load i32* %798, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %799, i32* %797, !dbg !1593           ; [debug line = 265:3]
  %800 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %801 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 25, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %802 = load i32* %801, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %802, i32* %800, !dbg !1593           ; [debug line = 265:3]
  %803 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %804 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 26, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %805 = load i32* %804, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %805, i32* %803, !dbg !1593           ; [debug line = 265:3]
  %806 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %807 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 27, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %808 = load i32* %807, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %808, i32* %806, !dbg !1593           ; [debug line = 265:3]
  %809 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %810 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 28, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %811 = load i32* %810, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %811, i32* %809, !dbg !1593           ; [debug line = 265:3]
  %812 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %813 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 29, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %814 = load i32* %813, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %814, i32* %812, !dbg !1593           ; [debug line = 265:3]
  %815 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %816 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 30, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %817 = load i32* %816, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %817, i32* %815, !dbg !1593           ; [debug line = 265:3]
  %818 = getelementptr inbounds [32 x i32]* %723, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %819 = getelementptr inbounds [32 x i32]* %724, i32 0, i32 31, !dbg !1593 ; [#uses=1 type=i32*] [debug line = 265:3]
  %820 = load i32* %819, !dbg !1593               ; [#uses=1 type=i32] [debug line = 265:3]
  store i32 %820, i32* %818, !dbg !1593           ; [debug line = 265:3]
  %821 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 1, !dbg !1594 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 266:3]
  %822 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 4, !dbg !1594 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 266:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %821, %struct.crypto_sign_ed25519_ref_ge25519* %822), !dbg !1594 ; [debug line = 266:3]
  %823 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 5, !dbg !1595 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 266:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %823, %struct.ge25519_p1p1* %tp1p1), !dbg !1595 ; [debug line = 266:38]
  %824 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 2, !dbg !1596 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 267:3]
  %825 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 4, !dbg !1596 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 267:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %824, %struct.crypto_sign_ed25519_ref_ge25519* %825), !dbg !1596 ; [debug line = 267:3]
  %826 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 6, !dbg !1597 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 267:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %826, %struct.ge25519_p1p1* %tp1p1), !dbg !1597 ; [debug line = 267:38]
  %827 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 3, !dbg !1598 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 268:3]
  %828 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 4, !dbg !1598 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 268:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %827, %struct.crypto_sign_ed25519_ref_ge25519* %828), !dbg !1598 ; [debug line = 268:3]
  %829 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 7, !dbg !1599 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 268:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %829, %struct.ge25519_p1p1* %tp1p1), !dbg !1599 ; [debug line = 268:38]
  %830 = load %struct.crypto_sign_ed25519_ref_ge25519** %4, align 8, !dbg !1600 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 269:3]
  %831 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %830 to %struct.ge25519_p2*, !dbg !1600 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 269:3]
  call void @dbl_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.ge25519_p2* %831), !dbg !1600 ; [debug line = 269:3]
  %832 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 8, !dbg !1601 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 269:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %832, %struct.ge25519_p1p1* %tp1p1), !dbg !1601 ; [debug line = 269:38]
  %833 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 1, !dbg !1602 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 270:3]
  %834 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 8, !dbg !1602 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 270:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %833, %struct.crypto_sign_ed25519_ref_ge25519* %834), !dbg !1602 ; [debug line = 270:3]
  %835 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 9, !dbg !1603 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 270:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %835, %struct.ge25519_p1p1* %tp1p1), !dbg !1603 ; [debug line = 270:38]
  %836 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 5, !dbg !1604 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 271:3]
  %837 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %836 to %struct.ge25519_p2*, !dbg !1604 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 271:3]
  call void @dbl_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.ge25519_p2* %837), !dbg !1604 ; [debug line = 271:3]
  %838 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 10, !dbg !1605 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 271:43]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %838, %struct.ge25519_p1p1* %tp1p1), !dbg !1605 ; [debug line = 271:43]
  %839 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 3, !dbg !1606 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 272:3]
  %840 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 8, !dbg !1606 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 272:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %839, %struct.crypto_sign_ed25519_ref_ge25519* %840), !dbg !1606 ; [debug line = 272:3]
  %841 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 11, !dbg !1607 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 272:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %841, %struct.ge25519_p1p1* %tp1p1), !dbg !1607 ; [debug line = 272:38]
  %842 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 4, !dbg !1608 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 273:3]
  %843 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 8, !dbg !1608 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 273:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %842, %struct.crypto_sign_ed25519_ref_ge25519* %843), !dbg !1608 ; [debug line = 273:3]
  %844 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 12, !dbg !1609 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 273:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %844, %struct.ge25519_p1p1* %tp1p1), !dbg !1609 ; [debug line = 273:38]
  %845 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 1, !dbg !1610 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 274:3]
  %846 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 12, !dbg !1610 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 274:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %845, %struct.crypto_sign_ed25519_ref_ge25519* %846), !dbg !1610 ; [debug line = 274:3]
  %847 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 13, !dbg !1611 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 274:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %847, %struct.ge25519_p1p1* %tp1p1), !dbg !1611 ; [debug line = 274:38]
  %848 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 2, !dbg !1612 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 275:3]
  %849 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 12, !dbg !1612 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 275:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %848, %struct.crypto_sign_ed25519_ref_ge25519* %849), !dbg !1612 ; [debug line = 275:3]
  %850 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 14, !dbg !1613 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 275:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %850, %struct.ge25519_p1p1* %tp1p1), !dbg !1613 ; [debug line = 275:38]
  %851 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 3, !dbg !1614 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 276:3]
  %852 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 12, !dbg !1614 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 276:3]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %851, %struct.crypto_sign_ed25519_ref_ge25519* %852), !dbg !1614 ; [debug line = 276:3]
  %853 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 15, !dbg !1615 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 276:38]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %853, %struct.ge25519_p1p1* %tp1p1), !dbg !1615 ; [debug line = 276:38]
  %854 = getelementptr inbounds [127 x i8]* %b, i32 0, i32 0, !dbg !1616 ; [#uses=1 type=i8*] [debug line = 278:3]
  %855 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1616 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 278:3]
  %856 = load %struct.crypto_sign_ed25519_ref_fe25519** %5, align 8, !dbg !1616 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 278:3]
  call void @crypto_sign_ed25519_ref_sc25519_2interleave2(i8* %854, %struct.crypto_sign_ed25519_ref_fe25519* %855, %struct.crypto_sign_ed25519_ref_fe25519* %856), !dbg !1616 ; [debug line = 278:3]
  %857 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1617 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 281:3]
  %858 = getelementptr inbounds [127 x i8]* %b, i32 0, i64 126, !dbg !1617 ; [#uses=1 type=i8*] [debug line = 281:3]
  %859 = load i8* %858, align 1, !dbg !1617       ; [#uses=1 type=i8] [debug line = 281:3]
  %860 = zext i8 %859 to i64, !dbg !1617          ; [#uses=1 type=i64] [debug line = 281:3]
  %861 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 %860, !dbg !1617 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 281:3]
  %862 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %857 to i8*, !dbg !1617 ; [#uses=0 type=i8*] [debug line = 281:3]
  %863 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %861 to i8*, !dbg !1617 ; [#uses=0 type=i8*] [debug line = 281:3]
  %864 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %857, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %865 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %861, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %866 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %864, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %867 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %865, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %868 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %869 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %870 = load i32* %869, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %870, i32* %868, !dbg !1617           ; [debug line = 281:3]
  %871 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %872 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %873 = load i32* %872, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %873, i32* %871, !dbg !1617           ; [debug line = 281:3]
  %874 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %875 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %876 = load i32* %875, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %876, i32* %874, !dbg !1617           ; [debug line = 281:3]
  %877 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %878 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %879 = load i32* %878, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %879, i32* %877, !dbg !1617           ; [debug line = 281:3]
  %880 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %881 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %882 = load i32* %881, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %882, i32* %880, !dbg !1617           ; [debug line = 281:3]
  %883 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %884 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %885 = load i32* %884, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %885, i32* %883, !dbg !1617           ; [debug line = 281:3]
  %886 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %887 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %888 = load i32* %887, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %888, i32* %886, !dbg !1617           ; [debug line = 281:3]
  %889 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %890 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %891 = load i32* %890, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %891, i32* %889, !dbg !1617           ; [debug line = 281:3]
  %892 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %893 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %894 = load i32* %893, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %894, i32* %892, !dbg !1617           ; [debug line = 281:3]
  %895 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %896 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %897 = load i32* %896, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %897, i32* %895, !dbg !1617           ; [debug line = 281:3]
  %898 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %899 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %900 = load i32* %899, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %900, i32* %898, !dbg !1617           ; [debug line = 281:3]
  %901 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %902 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %903 = load i32* %902, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %903, i32* %901, !dbg !1617           ; [debug line = 281:3]
  %904 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %905 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %906 = load i32* %905, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %906, i32* %904, !dbg !1617           ; [debug line = 281:3]
  %907 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %908 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %909 = load i32* %908, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %909, i32* %907, !dbg !1617           ; [debug line = 281:3]
  %910 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %911 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %912 = load i32* %911, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %912, i32* %910, !dbg !1617           ; [debug line = 281:3]
  %913 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %914 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %915 = load i32* %914, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %915, i32* %913, !dbg !1617           ; [debug line = 281:3]
  %916 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %917 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %918 = load i32* %917, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %918, i32* %916, !dbg !1617           ; [debug line = 281:3]
  %919 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %920 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %921 = load i32* %920, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %921, i32* %919, !dbg !1617           ; [debug line = 281:3]
  %922 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %923 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %924 = load i32* %923, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %924, i32* %922, !dbg !1617           ; [debug line = 281:3]
  %925 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %926 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %927 = load i32* %926, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %927, i32* %925, !dbg !1617           ; [debug line = 281:3]
  %928 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %929 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %930 = load i32* %929, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %930, i32* %928, !dbg !1617           ; [debug line = 281:3]
  %931 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %932 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %933 = load i32* %932, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %933, i32* %931, !dbg !1617           ; [debug line = 281:3]
  %934 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %935 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %936 = load i32* %935, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %936, i32* %934, !dbg !1617           ; [debug line = 281:3]
  %937 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %938 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %939 = load i32* %938, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %939, i32* %937, !dbg !1617           ; [debug line = 281:3]
  %940 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %941 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %942 = load i32* %941, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %942, i32* %940, !dbg !1617           ; [debug line = 281:3]
  %943 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %944 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %945 = load i32* %944, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %945, i32* %943, !dbg !1617           ; [debug line = 281:3]
  %946 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %947 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %948 = load i32* %947, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %948, i32* %946, !dbg !1617           ; [debug line = 281:3]
  %949 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %950 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %951 = load i32* %950, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %951, i32* %949, !dbg !1617           ; [debug line = 281:3]
  %952 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %953 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %954 = load i32* %953, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %954, i32* %952, !dbg !1617           ; [debug line = 281:3]
  %955 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %956 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %957 = load i32* %956, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %957, i32* %955, !dbg !1617           ; [debug line = 281:3]
  %958 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %959 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %960 = load i32* %959, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %960, i32* %958, !dbg !1617           ; [debug line = 281:3]
  %961 = getelementptr inbounds [32 x i32]* %866, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %962 = getelementptr inbounds [32 x i32]* %867, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %963 = load i32* %962, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %963, i32* %961, !dbg !1617           ; [debug line = 281:3]
  %964 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %857, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %965 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %861, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %966 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %964, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %967 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %965, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %968 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %969 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %970 = load i32* %969, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %970, i32* %968, !dbg !1617           ; [debug line = 281:3]
  %971 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %972 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %973 = load i32* %972, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %973, i32* %971, !dbg !1617           ; [debug line = 281:3]
  %974 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %975 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %976 = load i32* %975, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %976, i32* %974, !dbg !1617           ; [debug line = 281:3]
  %977 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %978 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %979 = load i32* %978, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %979, i32* %977, !dbg !1617           ; [debug line = 281:3]
  %980 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %981 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %982 = load i32* %981, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %982, i32* %980, !dbg !1617           ; [debug line = 281:3]
  %983 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %984 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %985 = load i32* %984, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %985, i32* %983, !dbg !1617           ; [debug line = 281:3]
  %986 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %987 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %988 = load i32* %987, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %988, i32* %986, !dbg !1617           ; [debug line = 281:3]
  %989 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %990 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %991 = load i32* %990, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %991, i32* %989, !dbg !1617           ; [debug line = 281:3]
  %992 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %993 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %994 = load i32* %993, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %994, i32* %992, !dbg !1617           ; [debug line = 281:3]
  %995 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %996 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %997 = load i32* %996, !dbg !1617               ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %997, i32* %995, !dbg !1617           ; [debug line = 281:3]
  %998 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %999 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1000 = load i32* %999, !dbg !1617              ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1000, i32* %998, !dbg !1617          ; [debug line = 281:3]
  %1001 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1002 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1003 = load i32* %1002, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1003, i32* %1001, !dbg !1617         ; [debug line = 281:3]
  %1004 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1005 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1006 = load i32* %1005, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1006, i32* %1004, !dbg !1617         ; [debug line = 281:3]
  %1007 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1008 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1009 = load i32* %1008, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1009, i32* %1007, !dbg !1617         ; [debug line = 281:3]
  %1010 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1011 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1012 = load i32* %1011, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1012, i32* %1010, !dbg !1617         ; [debug line = 281:3]
  %1013 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1014 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1015 = load i32* %1014, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1015, i32* %1013, !dbg !1617         ; [debug line = 281:3]
  %1016 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1017 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1018 = load i32* %1017, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1018, i32* %1016, !dbg !1617         ; [debug line = 281:3]
  %1019 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1020 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1021 = load i32* %1020, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1021, i32* %1019, !dbg !1617         ; [debug line = 281:3]
  %1022 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1023 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1024 = load i32* %1023, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1024, i32* %1022, !dbg !1617         ; [debug line = 281:3]
  %1025 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1026 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1027 = load i32* %1026, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1027, i32* %1025, !dbg !1617         ; [debug line = 281:3]
  %1028 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1029 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1030 = load i32* %1029, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1030, i32* %1028, !dbg !1617         ; [debug line = 281:3]
  %1031 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1032 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1033 = load i32* %1032, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1033, i32* %1031, !dbg !1617         ; [debug line = 281:3]
  %1034 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1035 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1036 = load i32* %1035, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1036, i32* %1034, !dbg !1617         ; [debug line = 281:3]
  %1037 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1038 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1039 = load i32* %1038, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1039, i32* %1037, !dbg !1617         ; [debug line = 281:3]
  %1040 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1041 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1042 = load i32* %1041, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1042, i32* %1040, !dbg !1617         ; [debug line = 281:3]
  %1043 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1044 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1045 = load i32* %1044, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1045, i32* %1043, !dbg !1617         ; [debug line = 281:3]
  %1046 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1047 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1048 = load i32* %1047, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1048, i32* %1046, !dbg !1617         ; [debug line = 281:3]
  %1049 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1050 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1051 = load i32* %1050, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1051, i32* %1049, !dbg !1617         ; [debug line = 281:3]
  %1052 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1053 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1054 = load i32* %1053, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1054, i32* %1052, !dbg !1617         ; [debug line = 281:3]
  %1055 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1056 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1057 = load i32* %1056, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1057, i32* %1055, !dbg !1617         ; [debug line = 281:3]
  %1058 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1059 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1060 = load i32* %1059, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1060, i32* %1058, !dbg !1617         ; [debug line = 281:3]
  %1061 = getelementptr inbounds [32 x i32]* %966, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1062 = getelementptr inbounds [32 x i32]* %967, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1063 = load i32* %1062, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1063, i32* %1061, !dbg !1617         ; [debug line = 281:3]
  %1064 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %857, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %1065 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %861, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %1066 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %1064, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %1067 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %1065, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %1068 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1069 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1070 = load i32* %1069, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1070, i32* %1068, !dbg !1617         ; [debug line = 281:3]
  %1071 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1072 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1073 = load i32* %1072, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1073, i32* %1071, !dbg !1617         ; [debug line = 281:3]
  %1074 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1075 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1076 = load i32* %1075, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1076, i32* %1074, !dbg !1617         ; [debug line = 281:3]
  %1077 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1078 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1079 = load i32* %1078, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1079, i32* %1077, !dbg !1617         ; [debug line = 281:3]
  %1080 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1081 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1082 = load i32* %1081, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1082, i32* %1080, !dbg !1617         ; [debug line = 281:3]
  %1083 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1084 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1085 = load i32* %1084, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1085, i32* %1083, !dbg !1617         ; [debug line = 281:3]
  %1086 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1087 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1088 = load i32* %1087, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1088, i32* %1086, !dbg !1617         ; [debug line = 281:3]
  %1089 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1090 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1091 = load i32* %1090, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1091, i32* %1089, !dbg !1617         ; [debug line = 281:3]
  %1092 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1093 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1094 = load i32* %1093, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1094, i32* %1092, !dbg !1617         ; [debug line = 281:3]
  %1095 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1096 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1097 = load i32* %1096, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1097, i32* %1095, !dbg !1617         ; [debug line = 281:3]
  %1098 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1099 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1100 = load i32* %1099, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1100, i32* %1098, !dbg !1617         ; [debug line = 281:3]
  %1101 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1102 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1103 = load i32* %1102, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1103, i32* %1101, !dbg !1617         ; [debug line = 281:3]
  %1104 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1105 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1106 = load i32* %1105, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1106, i32* %1104, !dbg !1617         ; [debug line = 281:3]
  %1107 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1108 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1109 = load i32* %1108, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1109, i32* %1107, !dbg !1617         ; [debug line = 281:3]
  %1110 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1111 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1112 = load i32* %1111, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1112, i32* %1110, !dbg !1617         ; [debug line = 281:3]
  %1113 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1114 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1115 = load i32* %1114, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1115, i32* %1113, !dbg !1617         ; [debug line = 281:3]
  %1116 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1117 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1118 = load i32* %1117, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1118, i32* %1116, !dbg !1617         ; [debug line = 281:3]
  %1119 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1120 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1121 = load i32* %1120, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1121, i32* %1119, !dbg !1617         ; [debug line = 281:3]
  %1122 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1123 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1124 = load i32* %1123, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1124, i32* %1122, !dbg !1617         ; [debug line = 281:3]
  %1125 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1126 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1127 = load i32* %1126, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1127, i32* %1125, !dbg !1617         ; [debug line = 281:3]
  %1128 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1129 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1130 = load i32* %1129, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1130, i32* %1128, !dbg !1617         ; [debug line = 281:3]
  %1131 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1132 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1133 = load i32* %1132, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1133, i32* %1131, !dbg !1617         ; [debug line = 281:3]
  %1134 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1135 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1136 = load i32* %1135, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1136, i32* %1134, !dbg !1617         ; [debug line = 281:3]
  %1137 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1138 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1139 = load i32* %1138, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1139, i32* %1137, !dbg !1617         ; [debug line = 281:3]
  %1140 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1141 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1142 = load i32* %1141, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1142, i32* %1140, !dbg !1617         ; [debug line = 281:3]
  %1143 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1144 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1145 = load i32* %1144, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1145, i32* %1143, !dbg !1617         ; [debug line = 281:3]
  %1146 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1147 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1148 = load i32* %1147, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1148, i32* %1146, !dbg !1617         ; [debug line = 281:3]
  %1149 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1150 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1151 = load i32* %1150, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1151, i32* %1149, !dbg !1617         ; [debug line = 281:3]
  %1152 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1153 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1154 = load i32* %1153, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1154, i32* %1152, !dbg !1617         ; [debug line = 281:3]
  %1155 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1156 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1157 = load i32* %1156, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1157, i32* %1155, !dbg !1617         ; [debug line = 281:3]
  %1158 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1159 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1160 = load i32* %1159, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1160, i32* %1158, !dbg !1617         ; [debug line = 281:3]
  %1161 = getelementptr inbounds [32 x i32]* %1066, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1162 = getelementptr inbounds [32 x i32]* %1067, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1163 = load i32* %1162, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1163, i32* %1161, !dbg !1617         ; [debug line = 281:3]
  %1164 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %857, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %1165 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %861, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 281:3]
  %1166 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %1164, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %1167 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %1165, i32 0, i32 0, !dbg !1617 ; [#uses=32 type=[32 x i32]*] [debug line = 281:3]
  %1168 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1169 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 0, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1170 = load i32* %1169, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1170, i32* %1168, !dbg !1617         ; [debug line = 281:3]
  %1171 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1172 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 1, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1173 = load i32* %1172, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1173, i32* %1171, !dbg !1617         ; [debug line = 281:3]
  %1174 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1175 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 2, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1176 = load i32* %1175, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1176, i32* %1174, !dbg !1617         ; [debug line = 281:3]
  %1177 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1178 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 3, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1179 = load i32* %1178, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1179, i32* %1177, !dbg !1617         ; [debug line = 281:3]
  %1180 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1181 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 4, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1182 = load i32* %1181, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1182, i32* %1180, !dbg !1617         ; [debug line = 281:3]
  %1183 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1184 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 5, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1185 = load i32* %1184, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1185, i32* %1183, !dbg !1617         ; [debug line = 281:3]
  %1186 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1187 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 6, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1188 = load i32* %1187, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1188, i32* %1186, !dbg !1617         ; [debug line = 281:3]
  %1189 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1190 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 7, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1191 = load i32* %1190, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1191, i32* %1189, !dbg !1617         ; [debug line = 281:3]
  %1192 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1193 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 8, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1194 = load i32* %1193, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1194, i32* %1192, !dbg !1617         ; [debug line = 281:3]
  %1195 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1196 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 9, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1197 = load i32* %1196, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1197, i32* %1195, !dbg !1617         ; [debug line = 281:3]
  %1198 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1199 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 10, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1200 = load i32* %1199, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1200, i32* %1198, !dbg !1617         ; [debug line = 281:3]
  %1201 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1202 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 11, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1203 = load i32* %1202, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1203, i32* %1201, !dbg !1617         ; [debug line = 281:3]
  %1204 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1205 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 12, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1206 = load i32* %1205, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1206, i32* %1204, !dbg !1617         ; [debug line = 281:3]
  %1207 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1208 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 13, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1209 = load i32* %1208, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1209, i32* %1207, !dbg !1617         ; [debug line = 281:3]
  %1210 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1211 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 14, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1212 = load i32* %1211, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1212, i32* %1210, !dbg !1617         ; [debug line = 281:3]
  %1213 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1214 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 15, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1215 = load i32* %1214, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1215, i32* %1213, !dbg !1617         ; [debug line = 281:3]
  %1216 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1217 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 16, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1218 = load i32* %1217, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1218, i32* %1216, !dbg !1617         ; [debug line = 281:3]
  %1219 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1220 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 17, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1221 = load i32* %1220, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1221, i32* %1219, !dbg !1617         ; [debug line = 281:3]
  %1222 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1223 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 18, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1224 = load i32* %1223, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1224, i32* %1222, !dbg !1617         ; [debug line = 281:3]
  %1225 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1226 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 19, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1227 = load i32* %1226, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1227, i32* %1225, !dbg !1617         ; [debug line = 281:3]
  %1228 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1229 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 20, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1230 = load i32* %1229, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1230, i32* %1228, !dbg !1617         ; [debug line = 281:3]
  %1231 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1232 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 21, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1233 = load i32* %1232, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1233, i32* %1231, !dbg !1617         ; [debug line = 281:3]
  %1234 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1235 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 22, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1236 = load i32* %1235, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1236, i32* %1234, !dbg !1617         ; [debug line = 281:3]
  %1237 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1238 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 23, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1239 = load i32* %1238, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1239, i32* %1237, !dbg !1617         ; [debug line = 281:3]
  %1240 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1241 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 24, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1242 = load i32* %1241, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1242, i32* %1240, !dbg !1617         ; [debug line = 281:3]
  %1243 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1244 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 25, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1245 = load i32* %1244, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1245, i32* %1243, !dbg !1617         ; [debug line = 281:3]
  %1246 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1247 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 26, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1248 = load i32* %1247, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1248, i32* %1246, !dbg !1617         ; [debug line = 281:3]
  %1249 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1250 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 27, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1251 = load i32* %1250, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1251, i32* %1249, !dbg !1617         ; [debug line = 281:3]
  %1252 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1253 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 28, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1254 = load i32* %1253, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1254, i32* %1252, !dbg !1617         ; [debug line = 281:3]
  %1255 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1256 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 29, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1257 = load i32* %1256, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1257, i32* %1255, !dbg !1617         ; [debug line = 281:3]
  %1258 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1259 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 30, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1260 = load i32* %1259, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1260, i32* %1258, !dbg !1617         ; [debug line = 281:3]
  %1261 = getelementptr inbounds [32 x i32]* %1166, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1262 = getelementptr inbounds [32 x i32]* %1167, i32 0, i32 31, !dbg !1617 ; [#uses=1 type=i32*] [debug line = 281:3]
  %1263 = load i32* %1262, !dbg !1617             ; [#uses=1 type=i32] [debug line = 281:3]
  store i32 %1263, i32* %1261, !dbg !1617         ; [debug line = 281:3]
  store i32 125, i32* %i, align 4, !dbg !1618     ; [debug line = 282:7]
  br label %1264, !dbg !1618                      ; [debug line = 282:7]

; <label>:1264                                    ; preds = %1298, %0
  %1265 = load i32* %i, align 4, !dbg !1618       ; [#uses=1 type=i32] [debug line = 282:7]
  %1266 = icmp sge i32 %1265, 0, !dbg !1618       ; [#uses=1 type=i1] [debug line = 282:7]
  br i1 %1266, label %1267, label %1301, !dbg !1618 ; [debug line = 282:7]

; <label>:1267                                    ; preds = %1264
  %1268 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1620 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 284:5]
  %1269 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %1268 to %struct.ge25519_p2*, !dbg !1620 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 284:5]
  call void @dbl_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.ge25519_p2* %1269), !dbg !1620 ; [debug line = 284:5]
  %1270 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1622 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 285:5]
  %1271 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %1270 to %struct.ge25519_p2*, !dbg !1622 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 285:5]
  call void @p1p1_to_p2(%struct.ge25519_p2* %1271, %struct.ge25519_p1p1* %tp1p1), !dbg !1622 ; [debug line = 285:5]
  %1272 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1623 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 286:5]
  %1273 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %1272 to %struct.ge25519_p2*, !dbg !1623 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 286:5]
  call void @dbl_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.ge25519_p2* %1273), !dbg !1623 ; [debug line = 286:5]
  %1274 = load i32* %i, align 4, !dbg !1624       ; [#uses=1 type=i32] [debug line = 287:5]
  %1275 = sext i32 %1274 to i64, !dbg !1624       ; [#uses=1 type=i64] [debug line = 287:5]
  %1276 = getelementptr inbounds [127 x i8]* %b, i32 0, i64 %1275, !dbg !1624 ; [#uses=1 type=i8*] [debug line = 287:5]
  %1277 = load i8* %1276, align 1, !dbg !1624     ; [#uses=1 type=i8] [debug line = 287:5]
  %1278 = zext i8 %1277 to i32, !dbg !1624        ; [#uses=1 type=i32] [debug line = 287:5]
  %1279 = icmp ne i32 %1278, 0, !dbg !1624        ; [#uses=1 type=i1] [debug line = 287:5]
  br i1 %1279, label %1280, label %1289, !dbg !1624 ; [debug line = 287:5]

; <label>:1280                                    ; preds = %1267
  %1281 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1625 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 289:7]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %1281, %struct.ge25519_p1p1* %tp1p1), !dbg !1625 ; [debug line = 289:7]
  %1282 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1627 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 290:7]
  %1283 = load i32* %i, align 4, !dbg !1627       ; [#uses=1 type=i32] [debug line = 290:7]
  %1284 = sext i32 %1283 to i64, !dbg !1627       ; [#uses=1 type=i64] [debug line = 290:7]
  %1285 = getelementptr inbounds [127 x i8]* %b, i32 0, i64 %1284, !dbg !1627 ; [#uses=1 type=i8*] [debug line = 290:7]
  %1286 = load i8* %1285, align 1, !dbg !1627     ; [#uses=1 type=i8] [debug line = 290:7]
  %1287 = zext i8 %1286 to i64, !dbg !1627        ; [#uses=1 type=i64] [debug line = 290:7]
  %1288 = getelementptr inbounds [16 x %struct.crypto_sign_ed25519_ref_ge25519]* %pre, i32 0, i64 %1287, !dbg !1627 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 290:7]
  call void @add_p1p1(%struct.ge25519_p1p1* %tp1p1, %struct.crypto_sign_ed25519_ref_ge25519* %1282, %struct.crypto_sign_ed25519_ref_ge25519* %1288), !dbg !1627 ; [debug line = 290:7]
  br label %1289, !dbg !1628                      ; [debug line = 291:5]

; <label>:1289                                    ; preds = %1280, %1267
  %1290 = load i32* %i, align 4, !dbg !1629       ; [#uses=1 type=i32] [debug line = 292:5]
  %1291 = icmp ne i32 %1290, 0, !dbg !1629        ; [#uses=1 type=i1] [debug line = 292:5]
  br i1 %1291, label %1292, label %1295, !dbg !1629 ; [debug line = 292:5]

; <label>:1292                                    ; preds = %1289
  %1293 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1630 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 292:16]
  %1294 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %1293 to %struct.ge25519_p2*, !dbg !1630 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 292:16]
  call void @p1p1_to_p2(%struct.ge25519_p2* %1294, %struct.ge25519_p1p1* %tp1p1), !dbg !1630 ; [debug line = 292:16]
  br label %1297, !dbg !1630                      ; [debug line = 292:16]

; <label>:1295                                    ; preds = %1289
  %1296 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1631 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 293:10]
  call void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %1296, %struct.ge25519_p1p1* %tp1p1), !dbg !1631 ; [debug line = 293:10]
  br label %1297

; <label>:1297                                    ; preds = %1295, %1292
  br label %1298, !dbg !1632                      ; [debug line = 294:3]

; <label>:1298                                    ; preds = %1297
  %1299 = load i32* %i, align 4, !dbg !1633       ; [#uses=1 type=i32] [debug line = 282:18]
  %1300 = add nsw i32 %1299, -1, !dbg !1633       ; [#uses=1 type=i32] [debug line = 282:18]
  store i32 %1300, i32* %i, align 4, !dbg !1633   ; [debug line = 282:18]
  br label %1264, !dbg !1633                      ; [debug line = 282:18]

; <label>:1301                                    ; preds = %1264
  ret void, !dbg !1634                            ; [debug line = 295:1]
}

; [#uses=1]
define internal void @setneutral(%struct.crypto_sign_ed25519_ref_ge25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  store %struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %1}, metadata !1635), !dbg !1636 ; [debug line = 174:57] [debug variable = r]
  %2 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1637 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 176:3]
  %3 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %2, i32 0, i32 0, !dbg !1637 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 176:3]
  call void @crypto_sign_ed25519_ref_fe25519_setzero(%struct.crypto_sign_ed25519_ref_fe25519* %3), !dbg !1637 ; [debug line = 176:3]
  %4 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1639 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 177:3]
  %5 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %4, i32 0, i32 1, !dbg !1639 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 177:3]
  call void @crypto_sign_ed25519_ref_fe25519_setone(%struct.crypto_sign_ed25519_ref_fe25519* %5), !dbg !1639 ; [debug line = 177:3]
  %6 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1640 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 178:3]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %6, i32 0, i32 2, !dbg !1640 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 178:3]
  call void @crypto_sign_ed25519_ref_fe25519_setone(%struct.crypto_sign_ed25519_ref_fe25519* %7), !dbg !1640 ; [debug line = 178:3]
  %8 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1641 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 179:3]
  %9 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 3, !dbg !1641 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 179:3]
  call void @crypto_sign_ed25519_ref_fe25519_setzero(%struct.crypto_sign_ed25519_ref_fe25519* %9), !dbg !1641 ; [debug line = 179:3]
  ret void, !dbg !1642                            ; [debug line = 180:1]
}

; [#uses=5]
define internal void @dbl_p1p1(%struct.ge25519_p1p1* %r, %struct.ge25519_p2* %p) nounwind uwtable {
  %1 = alloca %struct.ge25519_p1p1*, align 8      ; [#uses=12 type=%struct.ge25519_p1p1**]
  %2 = alloca %struct.ge25519_p2*, align 8        ; [#uses=6 type=%struct.ge25519_p2**]
  %a = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %b = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %c = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %d = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.ge25519_p1p1* %r, %struct.ge25519_p1p1** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p1p1** %1}, metadata !1643), !dbg !1644 ; [debug line = 118:36] [debug variable = r]
  store %struct.ge25519_p2* %p, %struct.ge25519_p2** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p2** %2}, metadata !1645), !dbg !1646 ; [debug line = 118:57] [debug variable = p]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %a}, metadata !1647), !dbg !1649 ; [debug line = 120:35] [debug variable = a]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %b}, metadata !1650), !dbg !1651 ; [debug line = 120:37] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %c}, metadata !1652), !dbg !1653 ; [debug line = 120:39] [debug variable = c]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %d}, metadata !1654), !dbg !1655 ; [debug line = 120:41] [debug variable = d]
  %3 = load %struct.ge25519_p2** %2, align 8, !dbg !1656 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 121:3]
  %4 = getelementptr inbounds %struct.ge25519_p2* %3, i32 0, i32 0, !dbg !1656 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 121:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %4), !dbg !1656 ; [debug line = 121:3]
  %5 = load %struct.ge25519_p2** %2, align 8, !dbg !1657 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 122:3]
  %6 = getelementptr inbounds %struct.ge25519_p2* %5, i32 0, i32 1, !dbg !1657 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 122:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %6), !dbg !1657 ; [debug line = 122:3]
  %7 = load %struct.ge25519_p2** %2, align 8, !dbg !1658 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 123:3]
  %8 = getelementptr inbounds %struct.ge25519_p2* %7, i32 0, i32 2, !dbg !1658 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 123:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %8), !dbg !1658 ; [debug line = 123:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %c), !dbg !1659 ; [debug line = 124:3]
  call void @crypto_sign_ed25519_ref_fe25519_neg(%struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %a), !dbg !1660 ; [debug line = 125:3]
  %9 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1661 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 127:3]
  %10 = getelementptr inbounds %struct.ge25519_p1p1* %9, i32 0, i32 0, !dbg !1661 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 127:3]
  %11 = load %struct.ge25519_p2** %2, align 8, !dbg !1661 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 127:3]
  %12 = getelementptr inbounds %struct.ge25519_p2* %11, i32 0, i32 0, !dbg !1661 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 127:3]
  %13 = load %struct.ge25519_p2** %2, align 8, !dbg !1661 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 127:3]
  %14 = getelementptr inbounds %struct.ge25519_p2* %13, i32 0, i32 1, !dbg !1661 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 127:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %10, %struct.crypto_sign_ed25519_ref_fe25519* %12, %struct.crypto_sign_ed25519_ref_fe25519* %14), !dbg !1661 ; [debug line = 127:3]
  %15 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1662 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 128:3]
  %16 = getelementptr inbounds %struct.ge25519_p1p1* %15, i32 0, i32 0, !dbg !1662 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 128:3]
  %17 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1662 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 128:3]
  %18 = getelementptr inbounds %struct.ge25519_p1p1* %17, i32 0, i32 0, !dbg !1662 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 128:3]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %16, %struct.crypto_sign_ed25519_ref_fe25519* %18), !dbg !1662 ; [debug line = 128:3]
  %19 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1663 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 129:3]
  %20 = getelementptr inbounds %struct.ge25519_p1p1* %19, i32 0, i32 0, !dbg !1663 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 129:3]
  %21 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1663 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 129:3]
  %22 = getelementptr inbounds %struct.ge25519_p1p1* %21, i32 0, i32 0, !dbg !1663 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 129:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %20, %struct.crypto_sign_ed25519_ref_fe25519* %22, %struct.crypto_sign_ed25519_ref_fe25519* %a), !dbg !1663 ; [debug line = 129:3]
  %23 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1664 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 130:3]
  %24 = getelementptr inbounds %struct.ge25519_p1p1* %23, i32 0, i32 0, !dbg !1664 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 130:3]
  %25 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1664 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 130:3]
  %26 = getelementptr inbounds %struct.ge25519_p1p1* %25, i32 0, i32 0, !dbg !1664 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 130:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %24, %struct.crypto_sign_ed25519_ref_fe25519* %26, %struct.crypto_sign_ed25519_ref_fe25519* %b), !dbg !1664 ; [debug line = 130:3]
  %27 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1665 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 131:3]
  %28 = getelementptr inbounds %struct.ge25519_p1p1* %27, i32 0, i32 1, !dbg !1665 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 131:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %28, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %b), !dbg !1665 ; [debug line = 131:3]
  %29 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1666 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 132:3]
  %30 = getelementptr inbounds %struct.ge25519_p1p1* %29, i32 0, i32 3, !dbg !1666 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 132:3]
  %31 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1666 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 132:3]
  %32 = getelementptr inbounds %struct.ge25519_p1p1* %31, i32 0, i32 1, !dbg !1666 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 132:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %30, %struct.crypto_sign_ed25519_ref_fe25519* %32, %struct.crypto_sign_ed25519_ref_fe25519* %c), !dbg !1666 ; [debug line = 132:3]
  %33 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1667 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 133:3]
  %34 = getelementptr inbounds %struct.ge25519_p1p1* %33, i32 0, i32 2, !dbg !1667 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 133:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %34, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %b), !dbg !1667 ; [debug line = 133:3]
  ret void, !dbg !1668                            ; [debug line = 134:1]
}

; [#uses=15]
define internal void @p1p1_to_p3(%struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.ge25519_p1p1* %p) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %2 = alloca %struct.ge25519_p1p1*, align 8      ; [#uses=4 type=%struct.ge25519_p1p1**]
  store %struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %1}, metadata !1669), !dbg !1670 ; [debug line = 67:57] [debug variable = r]
  store %struct.ge25519_p1p1* %p, %struct.ge25519_p1p1** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p1p1** %2}, metadata !1671), !dbg !1672 ; [debug line = 67:80] [debug variable = p]
  %3 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1673 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 69:3]
  %4 = bitcast %struct.crypto_sign_ed25519_ref_ge25519* %3 to %struct.ge25519_p2*, !dbg !1673 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 69:3]
  %5 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1673 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 69:3]
  call void @p1p1_to_p2(%struct.ge25519_p2* %4, %struct.ge25519_p1p1* %5), !dbg !1673 ; [debug line = 69:3]
  %6 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1675 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 70:3]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %6, i32 0, i32 3, !dbg !1675 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 70:3]
  %8 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1675 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 70:3]
  %9 = getelementptr inbounds %struct.ge25519_p1p1* %8, i32 0, i32 0, !dbg !1675 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 70:3]
  %10 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1675 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 70:3]
  %11 = getelementptr inbounds %struct.ge25519_p1p1* %10, i32 0, i32 2, !dbg !1675 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 70:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %7, %struct.crypto_sign_ed25519_ref_fe25519* %9, %struct.crypto_sign_ed25519_ref_fe25519* %11), !dbg !1675 ; [debug line = 70:3]
  ret void, !dbg !1676                            ; [debug line = 71:1]
}

; [#uses=11]
define internal void @add_p1p1(%struct.ge25519_p1p1* %r, %struct.crypto_sign_ed25519_ref_ge25519* %p, %struct.crypto_sign_ed25519_ref_ge25519* %q) nounwind uwtable {
  %1 = alloca %struct.ge25519_p1p1*, align 8      ; [#uses=5 type=%struct.ge25519_p1p1**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=7 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=7 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %a = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %b = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %c = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %d = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=6 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.ge25519_p1p1* %r, %struct.ge25519_p1p1** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p1p1** %1}, metadata !1677), !dbg !1678 ; [debug line = 97:36] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_ge25519* %p, %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %2}, metadata !1679), !dbg !1680 ; [debug line = 97:78] [debug variable = p]
  store %struct.crypto_sign_ed25519_ref_ge25519* %q, %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %3}, metadata !1681), !dbg !1682 ; [debug line = 97:120] [debug variable = q]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %a}, metadata !1683), !dbg !1685 ; [debug line = 99:35] [debug variable = a]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %b}, metadata !1686), !dbg !1687 ; [debug line = 99:38] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %c}, metadata !1688), !dbg !1689 ; [debug line = 99:41] [debug variable = c]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %d}, metadata !1690), !dbg !1691 ; [debug line = 99:44] [debug variable = d]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !1692), !dbg !1693 ; [debug line = 99:47] [debug variable = t]
  %4 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1694 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 101:3]
  %5 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %4, i32 0, i32 1, !dbg !1694 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 101:3]
  %6 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1694 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 101:3]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %6, i32 0, i32 0, !dbg !1694 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 101:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %5, %struct.crypto_sign_ed25519_ref_fe25519* %7), !dbg !1694 ; [debug line = 101:3]
  %8 = load %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8, !dbg !1695 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 102:3]
  %9 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %8, i32 0, i32 1, !dbg !1695 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 102:3]
  %10 = load %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8, !dbg !1695 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 102:3]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %10, i32 0, i32 0, !dbg !1695 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 102:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %9, %struct.crypto_sign_ed25519_ref_fe25519* %11), !dbg !1695 ; [debug line = 102:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !1696 ; [debug line = 103:3]
  %12 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1697 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 104:3]
  %13 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %12, i32 0, i32 0, !dbg !1697 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 104:3]
  %14 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1697 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 104:3]
  %15 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %14, i32 0, i32 1, !dbg !1697 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 104:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %13, %struct.crypto_sign_ed25519_ref_fe25519* %15), !dbg !1697 ; [debug line = 104:3]
  %16 = load %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8, !dbg !1698 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 105:3]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %16, i32 0, i32 0, !dbg !1698 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 105:3]
  %18 = load %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8, !dbg !1698 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 105:3]
  %19 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %18, i32 0, i32 1, !dbg !1698 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 105:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %17, %struct.crypto_sign_ed25519_ref_fe25519* %19), !dbg !1698 ; [debug line = 105:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !1699 ; [debug line = 106:3]
  %20 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1700 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 107:3]
  %21 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %20, i32 0, i32 3, !dbg !1700 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 107:3]
  %22 = load %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8, !dbg !1700 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 107:3]
  %23 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %22, i32 0, i32 3, !dbg !1700 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 107:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %21, %struct.crypto_sign_ed25519_ref_fe25519* %23), !dbg !1700 ; [debug line = 107:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_ec2d), !dbg !1701 ; [debug line = 108:3]
  %24 = load %struct.crypto_sign_ed25519_ref_ge25519** %2, align 8, !dbg !1702 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 109:3]
  %25 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %24, i32 0, i32 2, !dbg !1702 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 109:3]
  %26 = load %struct.crypto_sign_ed25519_ref_ge25519** %3, align 8, !dbg !1702 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 109:3]
  %27 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %26, i32 0, i32 2, !dbg !1702 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 109:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %25, %struct.crypto_sign_ed25519_ref_fe25519* %27), !dbg !1702 ; [debug line = 109:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %d), !dbg !1703 ; [debug line = 110:3]
  %28 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1704 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 111:3]
  %29 = getelementptr inbounds %struct.ge25519_p1p1* %28, i32 0, i32 0, !dbg !1704 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 111:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %29, %struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %a), !dbg !1704 ; [debug line = 111:3]
  %30 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1705 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 112:3]
  %31 = getelementptr inbounds %struct.ge25519_p1p1* %30, i32 0, i32 3, !dbg !1705 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 112:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %31, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %c), !dbg !1705 ; [debug line = 112:3]
  %32 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1706 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 113:3]
  %33 = getelementptr inbounds %struct.ge25519_p1p1* %32, i32 0, i32 1, !dbg !1706 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 113:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %33, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %c), !dbg !1706 ; [debug line = 113:3]
  %34 = load %struct.ge25519_p1p1** %1, align 8, !dbg !1707 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 114:3]
  %35 = getelementptr inbounds %struct.ge25519_p1p1* %34, i32 0, i32 2, !dbg !1707 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 114:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %35, %struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %a), !dbg !1707 ; [debug line = 114:3]
  ret void, !dbg !1708                            ; [debug line = 115:1]
}

; [#uses=3]
define internal void @p1p1_to_p2(%struct.ge25519_p2* %r, %struct.ge25519_p1p1* %p) nounwind uwtable {
  %1 = alloca %struct.ge25519_p2*, align 8        ; [#uses=4 type=%struct.ge25519_p2**]
  %2 = alloca %struct.ge25519_p1p1*, align 8      ; [#uses=7 type=%struct.ge25519_p1p1**]
  store %struct.ge25519_p2* %r, %struct.ge25519_p2** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p2** %1}, metadata !1709), !dbg !1710 ; [debug line = 60:36] [debug variable = r]
  store %struct.ge25519_p1p1* %p, %struct.ge25519_p1p1** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_p1p1** %2}, metadata !1711), !dbg !1712 ; [debug line = 60:59] [debug variable = p]
  %3 = load %struct.ge25519_p2** %1, align 8, !dbg !1713 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 62:3]
  %4 = getelementptr inbounds %struct.ge25519_p2* %3, i32 0, i32 0, !dbg !1713 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 62:3]
  %5 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1713 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 62:3]
  %6 = getelementptr inbounds %struct.ge25519_p1p1* %5, i32 0, i32 0, !dbg !1713 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 62:3]
  %7 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1713 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 62:3]
  %8 = getelementptr inbounds %struct.ge25519_p1p1* %7, i32 0, i32 3, !dbg !1713 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 62:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %4, %struct.crypto_sign_ed25519_ref_fe25519* %6, %struct.crypto_sign_ed25519_ref_fe25519* %8), !dbg !1713 ; [debug line = 62:3]
  %9 = load %struct.ge25519_p2** %1, align 8, !dbg !1715 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 63:3]
  %10 = getelementptr inbounds %struct.ge25519_p2* %9, i32 0, i32 1, !dbg !1715 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 63:3]
  %11 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1715 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 63:3]
  %12 = getelementptr inbounds %struct.ge25519_p1p1* %11, i32 0, i32 2, !dbg !1715 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 63:3]
  %13 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1715 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 63:3]
  %14 = getelementptr inbounds %struct.ge25519_p1p1* %13, i32 0, i32 1, !dbg !1715 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 63:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %10, %struct.crypto_sign_ed25519_ref_fe25519* %12, %struct.crypto_sign_ed25519_ref_fe25519* %14), !dbg !1715 ; [debug line = 63:3]
  %15 = load %struct.ge25519_p2** %1, align 8, !dbg !1716 ; [#uses=1 type=%struct.ge25519_p2*] [debug line = 64:3]
  %16 = getelementptr inbounds %struct.ge25519_p2* %15, i32 0, i32 2, !dbg !1716 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 64:3]
  %17 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1716 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 64:3]
  %18 = getelementptr inbounds %struct.ge25519_p1p1* %17, i32 0, i32 1, !dbg !1716 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 64:3]
  %19 = load %struct.ge25519_p1p1** %2, align 8, !dbg !1716 ; [#uses=1 type=%struct.ge25519_p1p1*] [debug line = 64:3]
  %20 = getelementptr inbounds %struct.ge25519_p1p1* %19, i32 0, i32 3, !dbg !1716 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 64:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %16, %struct.crypto_sign_ed25519_ref_fe25519* %18, %struct.crypto_sign_ed25519_ref_fe25519* %20), !dbg !1716 ; [debug line = 64:3]
  ret void, !dbg !1717                            ; [debug line = 65:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_scalarmult_base(%struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %s) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=10 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %b = alloca [85 x i8], align 16                 ; [#uses=3 type=[85 x i8]*]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %t = alloca %struct.ge25519_aff, align 4        ; [#uses=2 type=%struct.ge25519_aff*]
  %r_temp = alloca %struct.ge25519_aff, align 4   ; [#uses=5 type=%struct.ge25519_aff*]
  store %struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %1}, metadata !1718), !dbg !1719 ; [debug line = 297:79] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %s, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1720), !dbg !1721 ; [debug line = 297:121] [debug variable = s]
  call void @llvm.dbg.declare(metadata !{[85 x i8]* %b}, metadata !1722), !dbg !1727 ; [debug line = 299:15] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1728), !dbg !1729 ; [debug line = 300:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_aff* %t}, metadata !1730), !dbg !1731 ; [debug line = 301:15] [debug variable = t]
  %3 = getelementptr inbounds [85 x i8]* %b, i32 0, i32 0, !dbg !1732 ; [#uses=1 type=i8*] [debug line = 302:3]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1732 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 302:3]
  call void @crypto_sign_ed25519_ref_sc25519_window3(i8* %3, %struct.crypto_sign_ed25519_ref_fe25519* %4), !dbg !1732 ; [debug line = 302:3]
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_aff* %r_temp}, metadata !1733), !dbg !1734 ; [debug line = 304:15] [debug variable = r_temp]
  %5 = getelementptr inbounds %struct.ge25519_aff* %r_temp, i32 0, i32 0, !dbg !1735 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 305:3]
  %6 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1735 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 305:3]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %6, i32 0, i32 0, !dbg !1735 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 305:3]
  %8 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %5 to i8*, !dbg !1735 ; [#uses=0 type=i8*] [debug line = 305:3]
  %9 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %7 to i8*, !dbg !1735 ; [#uses=0 type=i8*] [debug line = 305:3]
  %10 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %5, i32 0, i32 0, !dbg !1735 ; [#uses=32 type=[32 x i32]*] [debug line = 305:3]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %7, i32 0, i32 0, !dbg !1735 ; [#uses=32 type=[32 x i32]*] [debug line = 305:3]
  %12 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 0, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %13 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 0, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %14 = load i32* %13, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %14, i32* %12, !dbg !1735             ; [debug line = 305:3]
  %15 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 1, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %16 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 1, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %17 = load i32* %16, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %17, i32* %15, !dbg !1735             ; [debug line = 305:3]
  %18 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 2, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %19 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 2, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %20 = load i32* %19, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %20, i32* %18, !dbg !1735             ; [debug line = 305:3]
  %21 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 3, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %22 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 3, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %23 = load i32* %22, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %23, i32* %21, !dbg !1735             ; [debug line = 305:3]
  %24 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 4, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %25 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 4, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %26 = load i32* %25, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %26, i32* %24, !dbg !1735             ; [debug line = 305:3]
  %27 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 5, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %28 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 5, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %29 = load i32* %28, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %29, i32* %27, !dbg !1735             ; [debug line = 305:3]
  %30 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 6, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %31 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 6, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %32 = load i32* %31, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %32, i32* %30, !dbg !1735             ; [debug line = 305:3]
  %33 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 7, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %34 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 7, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %35 = load i32* %34, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %35, i32* %33, !dbg !1735             ; [debug line = 305:3]
  %36 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 8, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %37 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 8, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %38 = load i32* %37, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %38, i32* %36, !dbg !1735             ; [debug line = 305:3]
  %39 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 9, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %40 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 9, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %41 = load i32* %40, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %41, i32* %39, !dbg !1735             ; [debug line = 305:3]
  %42 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 10, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %43 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 10, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %44 = load i32* %43, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %44, i32* %42, !dbg !1735             ; [debug line = 305:3]
  %45 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 11, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %46 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 11, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %47 = load i32* %46, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %47, i32* %45, !dbg !1735             ; [debug line = 305:3]
  %48 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 12, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %49 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 12, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %50 = load i32* %49, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %50, i32* %48, !dbg !1735             ; [debug line = 305:3]
  %51 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 13, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %52 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 13, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %53 = load i32* %52, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %53, i32* %51, !dbg !1735             ; [debug line = 305:3]
  %54 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 14, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %55 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 14, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %56 = load i32* %55, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %56, i32* %54, !dbg !1735             ; [debug line = 305:3]
  %57 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 15, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %58 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 15, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %59 = load i32* %58, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %59, i32* %57, !dbg !1735             ; [debug line = 305:3]
  %60 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 16, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %61 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 16, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %62 = load i32* %61, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %62, i32* %60, !dbg !1735             ; [debug line = 305:3]
  %63 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 17, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %64 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 17, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %65 = load i32* %64, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %65, i32* %63, !dbg !1735             ; [debug line = 305:3]
  %66 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 18, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %67 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 18, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %68 = load i32* %67, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %68, i32* %66, !dbg !1735             ; [debug line = 305:3]
  %69 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 19, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %70 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 19, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %71 = load i32* %70, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %71, i32* %69, !dbg !1735             ; [debug line = 305:3]
  %72 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 20, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %73 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 20, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %74 = load i32* %73, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %74, i32* %72, !dbg !1735             ; [debug line = 305:3]
  %75 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 21, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %76 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 21, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %77 = load i32* %76, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %77, i32* %75, !dbg !1735             ; [debug line = 305:3]
  %78 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 22, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %79 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 22, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %80 = load i32* %79, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %80, i32* %78, !dbg !1735             ; [debug line = 305:3]
  %81 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 23, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %82 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 23, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %83 = load i32* %82, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %83, i32* %81, !dbg !1735             ; [debug line = 305:3]
  %84 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 24, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %85 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 24, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %86 = load i32* %85, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %86, i32* %84, !dbg !1735             ; [debug line = 305:3]
  %87 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 25, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %88 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 25, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %89 = load i32* %88, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %89, i32* %87, !dbg !1735             ; [debug line = 305:3]
  %90 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 26, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %91 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 26, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %92 = load i32* %91, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %92, i32* %90, !dbg !1735             ; [debug line = 305:3]
  %93 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 27, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %94 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 27, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %95 = load i32* %94, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %95, i32* %93, !dbg !1735             ; [debug line = 305:3]
  %96 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 28, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %97 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 28, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %98 = load i32* %97, !dbg !1735                 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %98, i32* %96, !dbg !1735             ; [debug line = 305:3]
  %99 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 29, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %100 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 29, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %101 = load i32* %100, !dbg !1735               ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %101, i32* %99, !dbg !1735            ; [debug line = 305:3]
  %102 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 30, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %103 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 30, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %104 = load i32* %103, !dbg !1735               ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %104, i32* %102, !dbg !1735           ; [debug line = 305:3]
  %105 = getelementptr inbounds [32 x i32]* %10, i32 0, i32 31, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %106 = getelementptr inbounds [32 x i32]* %11, i32 0, i32 31, !dbg !1735 ; [#uses=1 type=i32*] [debug line = 305:3]
  %107 = load i32* %106, !dbg !1735               ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %107, i32* %105, !dbg !1735           ; [debug line = 305:3]
  %108 = getelementptr inbounds %struct.ge25519_aff* %r_temp, i32 0, i32 1, !dbg !1736 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 306:3]
  %109 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1736 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 306:3]
  %110 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %109, i32 0, i32 1, !dbg !1736 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 306:3]
  %111 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %108 to i8*, !dbg !1736 ; [#uses=0 type=i8*] [debug line = 306:3]
  %112 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %110 to i8*, !dbg !1736 ; [#uses=0 type=i8*] [debug line = 306:3]
  %113 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %108, i32 0, i32 0, !dbg !1736 ; [#uses=32 type=[32 x i32]*] [debug line = 306:3]
  %114 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %110, i32 0, i32 0, !dbg !1736 ; [#uses=32 type=[32 x i32]*] [debug line = 306:3]
  %115 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 0, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %116 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 0, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %117 = load i32* %116, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %117, i32* %115, !dbg !1736           ; [debug line = 306:3]
  %118 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 1, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %119 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 1, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %120 = load i32* %119, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %120, i32* %118, !dbg !1736           ; [debug line = 306:3]
  %121 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 2, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %122 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 2, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %123 = load i32* %122, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %123, i32* %121, !dbg !1736           ; [debug line = 306:3]
  %124 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 3, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %125 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 3, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %126 = load i32* %125, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %126, i32* %124, !dbg !1736           ; [debug line = 306:3]
  %127 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 4, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %128 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 4, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %129 = load i32* %128, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %129, i32* %127, !dbg !1736           ; [debug line = 306:3]
  %130 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 5, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %131 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 5, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %132 = load i32* %131, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %132, i32* %130, !dbg !1736           ; [debug line = 306:3]
  %133 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 6, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %134 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 6, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %135 = load i32* %134, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %135, i32* %133, !dbg !1736           ; [debug line = 306:3]
  %136 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 7, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %137 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 7, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %138 = load i32* %137, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %138, i32* %136, !dbg !1736           ; [debug line = 306:3]
  %139 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 8, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %140 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 8, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %141 = load i32* %140, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %141, i32* %139, !dbg !1736           ; [debug line = 306:3]
  %142 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 9, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %143 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 9, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %144 = load i32* %143, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %144, i32* %142, !dbg !1736           ; [debug line = 306:3]
  %145 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 10, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %146 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 10, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %147 = load i32* %146, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %147, i32* %145, !dbg !1736           ; [debug line = 306:3]
  %148 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 11, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %149 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 11, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %150 = load i32* %149, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %150, i32* %148, !dbg !1736           ; [debug line = 306:3]
  %151 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 12, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %152 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 12, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %153 = load i32* %152, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %153, i32* %151, !dbg !1736           ; [debug line = 306:3]
  %154 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 13, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %155 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 13, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %156 = load i32* %155, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %156, i32* %154, !dbg !1736           ; [debug line = 306:3]
  %157 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 14, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %158 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 14, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %159 = load i32* %158, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %159, i32* %157, !dbg !1736           ; [debug line = 306:3]
  %160 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 15, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %161 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 15, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %162 = load i32* %161, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %162, i32* %160, !dbg !1736           ; [debug line = 306:3]
  %163 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 16, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %164 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 16, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %165 = load i32* %164, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %165, i32* %163, !dbg !1736           ; [debug line = 306:3]
  %166 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 17, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %167 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 17, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %168 = load i32* %167, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %168, i32* %166, !dbg !1736           ; [debug line = 306:3]
  %169 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 18, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %170 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 18, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %171 = load i32* %170, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %171, i32* %169, !dbg !1736           ; [debug line = 306:3]
  %172 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 19, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %173 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 19, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %174 = load i32* %173, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %174, i32* %172, !dbg !1736           ; [debug line = 306:3]
  %175 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 20, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %176 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 20, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %177 = load i32* %176, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %177, i32* %175, !dbg !1736           ; [debug line = 306:3]
  %178 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 21, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %179 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 21, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %180 = load i32* %179, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %180, i32* %178, !dbg !1736           ; [debug line = 306:3]
  %181 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 22, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %182 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 22, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %183 = load i32* %182, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %183, i32* %181, !dbg !1736           ; [debug line = 306:3]
  %184 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 23, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %185 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 23, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %186 = load i32* %185, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %186, i32* %184, !dbg !1736           ; [debug line = 306:3]
  %187 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 24, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %188 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 24, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %189 = load i32* %188, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %189, i32* %187, !dbg !1736           ; [debug line = 306:3]
  %190 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 25, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %191 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 25, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %192 = load i32* %191, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %192, i32* %190, !dbg !1736           ; [debug line = 306:3]
  %193 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 26, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %194 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 26, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %195 = load i32* %194, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %195, i32* %193, !dbg !1736           ; [debug line = 306:3]
  %196 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 27, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %197 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 27, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %198 = load i32* %197, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %198, i32* %196, !dbg !1736           ; [debug line = 306:3]
  %199 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 28, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %200 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 28, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %201 = load i32* %200, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %201, i32* %199, !dbg !1736           ; [debug line = 306:3]
  %202 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 29, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %203 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 29, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %204 = load i32* %203, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %204, i32* %202, !dbg !1736           ; [debug line = 306:3]
  %205 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 30, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %206 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 30, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %207 = load i32* %206, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %207, i32* %205, !dbg !1736           ; [debug line = 306:3]
  %208 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 31, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %209 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 31, !dbg !1736 ; [#uses=1 type=i32*] [debug line = 306:3]
  %210 = load i32* %209, !dbg !1736               ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %210, i32* %208, !dbg !1736           ; [debug line = 306:3]
  %211 = getelementptr inbounds [85 x i8]* %b, i32 0, i64 0, !dbg !1737 ; [#uses=1 type=i8*] [debug line = 308:3]
  %212 = load i8* %211, align 1, !dbg !1737       ; [#uses=1 type=i8] [debug line = 308:3]
  call void @choose_t(%struct.ge25519_aff* %r_temp, i64 0, i8 signext %212), !dbg !1737 ; [debug line = 308:3]
  %213 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1738 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 309:3]
  %214 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %213, i32 0, i32 0, !dbg !1738 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 309:3]
  %215 = getelementptr inbounds %struct.ge25519_aff* %r_temp, i32 0, i32 0, !dbg !1738 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 309:3]
  %216 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %214 to i8*, !dbg !1738 ; [#uses=0 type=i8*] [debug line = 309:3]
  %217 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %215 to i8*, !dbg !1738 ; [#uses=0 type=i8*] [debug line = 309:3]
  %218 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %214, i32 0, i32 0, !dbg !1738 ; [#uses=32 type=[32 x i32]*] [debug line = 309:3]
  %219 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %215, i32 0, i32 0, !dbg !1738 ; [#uses=32 type=[32 x i32]*] [debug line = 309:3]
  %220 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 0, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %221 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 0, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %222 = load i32* %221, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %222, i32* %220, !dbg !1738           ; [debug line = 309:3]
  %223 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 1, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %224 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 1, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %225 = load i32* %224, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %225, i32* %223, !dbg !1738           ; [debug line = 309:3]
  %226 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 2, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %227 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 2, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %228 = load i32* %227, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %228, i32* %226, !dbg !1738           ; [debug line = 309:3]
  %229 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 3, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %230 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 3, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %231 = load i32* %230, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %231, i32* %229, !dbg !1738           ; [debug line = 309:3]
  %232 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 4, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %233 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 4, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %234 = load i32* %233, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %234, i32* %232, !dbg !1738           ; [debug line = 309:3]
  %235 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 5, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %236 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 5, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %237 = load i32* %236, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %237, i32* %235, !dbg !1738           ; [debug line = 309:3]
  %238 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 6, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %239 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 6, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %240 = load i32* %239, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %240, i32* %238, !dbg !1738           ; [debug line = 309:3]
  %241 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 7, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %242 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 7, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %243 = load i32* %242, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %243, i32* %241, !dbg !1738           ; [debug line = 309:3]
  %244 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 8, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %245 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 8, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %246 = load i32* %245, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %246, i32* %244, !dbg !1738           ; [debug line = 309:3]
  %247 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 9, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %248 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 9, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %249 = load i32* %248, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %249, i32* %247, !dbg !1738           ; [debug line = 309:3]
  %250 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 10, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %251 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 10, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %252 = load i32* %251, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %252, i32* %250, !dbg !1738           ; [debug line = 309:3]
  %253 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 11, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %254 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 11, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %255 = load i32* %254, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %255, i32* %253, !dbg !1738           ; [debug line = 309:3]
  %256 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 12, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %257 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 12, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %258 = load i32* %257, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %258, i32* %256, !dbg !1738           ; [debug line = 309:3]
  %259 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 13, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %260 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 13, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %261 = load i32* %260, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %261, i32* %259, !dbg !1738           ; [debug line = 309:3]
  %262 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 14, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %263 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 14, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %264 = load i32* %263, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %264, i32* %262, !dbg !1738           ; [debug line = 309:3]
  %265 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 15, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %266 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 15, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %267 = load i32* %266, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %267, i32* %265, !dbg !1738           ; [debug line = 309:3]
  %268 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 16, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %269 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 16, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %270 = load i32* %269, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %270, i32* %268, !dbg !1738           ; [debug line = 309:3]
  %271 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 17, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %272 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 17, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %273 = load i32* %272, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %273, i32* %271, !dbg !1738           ; [debug line = 309:3]
  %274 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 18, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %275 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 18, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %276 = load i32* %275, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %276, i32* %274, !dbg !1738           ; [debug line = 309:3]
  %277 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 19, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %278 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 19, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %279 = load i32* %278, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %279, i32* %277, !dbg !1738           ; [debug line = 309:3]
  %280 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 20, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %281 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 20, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %282 = load i32* %281, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %282, i32* %280, !dbg !1738           ; [debug line = 309:3]
  %283 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 21, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %284 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 21, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %285 = load i32* %284, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %285, i32* %283, !dbg !1738           ; [debug line = 309:3]
  %286 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 22, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %287 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 22, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %288 = load i32* %287, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %288, i32* %286, !dbg !1738           ; [debug line = 309:3]
  %289 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 23, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %290 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 23, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %291 = load i32* %290, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %291, i32* %289, !dbg !1738           ; [debug line = 309:3]
  %292 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 24, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %293 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 24, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %294 = load i32* %293, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %294, i32* %292, !dbg !1738           ; [debug line = 309:3]
  %295 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 25, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %296 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 25, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %297 = load i32* %296, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %297, i32* %295, !dbg !1738           ; [debug line = 309:3]
  %298 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 26, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %299 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 26, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %300 = load i32* %299, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %300, i32* %298, !dbg !1738           ; [debug line = 309:3]
  %301 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 27, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %302 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 27, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %303 = load i32* %302, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %303, i32* %301, !dbg !1738           ; [debug line = 309:3]
  %304 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 28, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %305 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 28, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %306 = load i32* %305, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %306, i32* %304, !dbg !1738           ; [debug line = 309:3]
  %307 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 29, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %308 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 29, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %309 = load i32* %308, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %309, i32* %307, !dbg !1738           ; [debug line = 309:3]
  %310 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 30, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %311 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 30, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %312 = load i32* %311, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %312, i32* %310, !dbg !1738           ; [debug line = 309:3]
  %313 = getelementptr inbounds [32 x i32]* %218, i32 0, i32 31, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %314 = getelementptr inbounds [32 x i32]* %219, i32 0, i32 31, !dbg !1738 ; [#uses=1 type=i32*] [debug line = 309:3]
  %315 = load i32* %314, !dbg !1738               ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %315, i32* %313, !dbg !1738           ; [debug line = 309:3]
  %316 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1739 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 310:3]
  %317 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %316, i32 0, i32 1, !dbg !1739 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 310:3]
  %318 = getelementptr inbounds %struct.ge25519_aff* %r_temp, i32 0, i32 1, !dbg !1739 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 310:3]
  %319 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %317 to i8*, !dbg !1739 ; [#uses=0 type=i8*] [debug line = 310:3]
  %320 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %318 to i8*, !dbg !1739 ; [#uses=0 type=i8*] [debug line = 310:3]
  %321 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %317, i32 0, i32 0, !dbg !1739 ; [#uses=32 type=[32 x i32]*] [debug line = 310:3]
  %322 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %318, i32 0, i32 0, !dbg !1739 ; [#uses=32 type=[32 x i32]*] [debug line = 310:3]
  %323 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 0, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %324 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 0, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %325 = load i32* %324, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %325, i32* %323, !dbg !1739           ; [debug line = 310:3]
  %326 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 1, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %327 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 1, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %328 = load i32* %327, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %328, i32* %326, !dbg !1739           ; [debug line = 310:3]
  %329 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 2, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %330 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 2, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %331 = load i32* %330, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %331, i32* %329, !dbg !1739           ; [debug line = 310:3]
  %332 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 3, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %333 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 3, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %334 = load i32* %333, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %334, i32* %332, !dbg !1739           ; [debug line = 310:3]
  %335 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 4, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %336 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 4, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %337 = load i32* %336, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %337, i32* %335, !dbg !1739           ; [debug line = 310:3]
  %338 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 5, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %339 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 5, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %340 = load i32* %339, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %340, i32* %338, !dbg !1739           ; [debug line = 310:3]
  %341 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 6, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %342 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 6, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %343 = load i32* %342, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %343, i32* %341, !dbg !1739           ; [debug line = 310:3]
  %344 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 7, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %345 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 7, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %346 = load i32* %345, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %346, i32* %344, !dbg !1739           ; [debug line = 310:3]
  %347 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 8, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %348 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 8, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %349 = load i32* %348, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %349, i32* %347, !dbg !1739           ; [debug line = 310:3]
  %350 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 9, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %351 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 9, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %352 = load i32* %351, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %352, i32* %350, !dbg !1739           ; [debug line = 310:3]
  %353 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 10, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %354 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 10, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %355 = load i32* %354, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %355, i32* %353, !dbg !1739           ; [debug line = 310:3]
  %356 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 11, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %357 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 11, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %358 = load i32* %357, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %358, i32* %356, !dbg !1739           ; [debug line = 310:3]
  %359 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 12, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %360 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 12, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %361 = load i32* %360, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %361, i32* %359, !dbg !1739           ; [debug line = 310:3]
  %362 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 13, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %363 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 13, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %364 = load i32* %363, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %364, i32* %362, !dbg !1739           ; [debug line = 310:3]
  %365 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 14, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %366 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 14, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %367 = load i32* %366, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %367, i32* %365, !dbg !1739           ; [debug line = 310:3]
  %368 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 15, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %369 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 15, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %370 = load i32* %369, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %370, i32* %368, !dbg !1739           ; [debug line = 310:3]
  %371 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 16, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %372 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 16, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %373 = load i32* %372, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %373, i32* %371, !dbg !1739           ; [debug line = 310:3]
  %374 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 17, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %375 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 17, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %376 = load i32* %375, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %376, i32* %374, !dbg !1739           ; [debug line = 310:3]
  %377 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 18, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %378 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 18, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %379 = load i32* %378, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %379, i32* %377, !dbg !1739           ; [debug line = 310:3]
  %380 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 19, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %381 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 19, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %382 = load i32* %381, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %382, i32* %380, !dbg !1739           ; [debug line = 310:3]
  %383 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 20, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %384 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 20, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %385 = load i32* %384, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %385, i32* %383, !dbg !1739           ; [debug line = 310:3]
  %386 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 21, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %387 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 21, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %388 = load i32* %387, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %388, i32* %386, !dbg !1739           ; [debug line = 310:3]
  %389 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 22, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %390 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 22, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %391 = load i32* %390, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %391, i32* %389, !dbg !1739           ; [debug line = 310:3]
  %392 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 23, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %393 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 23, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %394 = load i32* %393, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %394, i32* %392, !dbg !1739           ; [debug line = 310:3]
  %395 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 24, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %396 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 24, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %397 = load i32* %396, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %397, i32* %395, !dbg !1739           ; [debug line = 310:3]
  %398 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 25, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %399 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 25, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %400 = load i32* %399, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %400, i32* %398, !dbg !1739           ; [debug line = 310:3]
  %401 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 26, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %402 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 26, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %403 = load i32* %402, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %403, i32* %401, !dbg !1739           ; [debug line = 310:3]
  %404 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 27, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %405 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 27, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %406 = load i32* %405, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %406, i32* %404, !dbg !1739           ; [debug line = 310:3]
  %407 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 28, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %408 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 28, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %409 = load i32* %408, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %409, i32* %407, !dbg !1739           ; [debug line = 310:3]
  %410 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 29, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %411 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 29, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %412 = load i32* %411, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %412, i32* %410, !dbg !1739           ; [debug line = 310:3]
  %413 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 30, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %414 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 30, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %415 = load i32* %414, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %415, i32* %413, !dbg !1739           ; [debug line = 310:3]
  %416 = getelementptr inbounds [32 x i32]* %321, i32 0, i32 31, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %417 = getelementptr inbounds [32 x i32]* %322, i32 0, i32 31, !dbg !1739 ; [#uses=1 type=i32*] [debug line = 310:3]
  %418 = load i32* %417, !dbg !1739               ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %418, i32* %416, !dbg !1739           ; [debug line = 310:3]
  %419 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1740 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 314:3]
  %420 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %419, i32 0, i32 2, !dbg !1740 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 314:3]
  call void @crypto_sign_ed25519_ref_fe25519_setone(%struct.crypto_sign_ed25519_ref_fe25519* %420), !dbg !1740 ; [debug line = 314:3]
  %421 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1741 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 315:3]
  %422 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %421, i32 0, i32 3, !dbg !1741 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 315:3]
  %423 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1741 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 315:3]
  %424 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %423, i32 0, i32 0, !dbg !1741 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 315:3]
  %425 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1741 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 315:3]
  %426 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %425, i32 0, i32 1, !dbg !1741 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 315:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %422, %struct.crypto_sign_ed25519_ref_fe25519* %424, %struct.crypto_sign_ed25519_ref_fe25519* %426), !dbg !1741 ; [debug line = 315:3]
  store i32 1, i32* %i, align 4, !dbg !1742       ; [debug line = 316:7]
  br label %427, !dbg !1742                       ; [debug line = 316:7]

; <label>:427                                     ; preds = %438, %0
  %428 = load i32* %i, align 4, !dbg !1742        ; [#uses=1 type=i32] [debug line = 316:7]
  %429 = icmp slt i32 %428, 85, !dbg !1742        ; [#uses=1 type=i1] [debug line = 316:7]
  br i1 %429, label %430, label %441, !dbg !1742  ; [debug line = 316:7]

; <label>:430                                     ; preds = %427
  %431 = load i32* %i, align 4, !dbg !1744        ; [#uses=1 type=i32] [debug line = 318:5]
  %432 = sext i32 %431 to i64, !dbg !1744         ; [#uses=1 type=i64] [debug line = 318:5]
  %433 = load i32* %i, align 4, !dbg !1744        ; [#uses=1 type=i32] [debug line = 318:5]
  %434 = sext i32 %433 to i64, !dbg !1744         ; [#uses=1 type=i64] [debug line = 318:5]
  %435 = getelementptr inbounds [85 x i8]* %b, i32 0, i64 %434, !dbg !1744 ; [#uses=1 type=i8*] [debug line = 318:5]
  %436 = load i8* %435, align 1, !dbg !1744       ; [#uses=1 type=i8] [debug line = 318:5]
  call void @choose_t(%struct.ge25519_aff* %t, i64 %432, i8 signext %436), !dbg !1744 ; [debug line = 318:5]
  %437 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1746 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 319:5]
  call void @ge25519_mixadd2(%struct.crypto_sign_ed25519_ref_ge25519* %437, %struct.ge25519_aff* %t), !dbg !1746 ; [debug line = 319:5]
  br label %438, !dbg !1747                       ; [debug line = 320:3]

; <label>:438                                     ; preds = %430
  %439 = load i32* %i, align 4, !dbg !1748        ; [#uses=1 type=i32] [debug line = 316:16]
  %440 = add nsw i32 %439, 1, !dbg !1748          ; [#uses=1 type=i32] [debug line = 316:16]
  store i32 %440, i32* %i, align 4, !dbg !1748    ; [debug line = 316:16]
  br label %427, !dbg !1748                       ; [debug line = 316:16]

; <label>:441                                     ; preds = %427
  ret void, !dbg !1749                            ; [debug line = 321:1]
}

; [#uses=2]
define internal void @choose_t(%struct.ge25519_aff* %t, i64 %pos, i8 signext %b) nounwind uwtable {
  %1 = alloca %struct.ge25519_aff*, align 8       ; [#uses=8 type=%struct.ge25519_aff**]
  %2 = alloca i64, align 8                        ; [#uses=6 type=i64*]
  %3 = alloca i8, align 1                         ; [#uses=9 type=i8*]
  %v = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.ge25519_aff* %t, %struct.ge25519_aff** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_aff** %1}, metadata !1750), !dbg !1751 ; [debug line = 161:35] [debug variable = t]
  store i64 %pos, i64* %2, align 8
  call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !1752), !dbg !1753 ; [debug line = 161:57] [debug variable = pos]
  store i8 %b, i8* %3, align 1
  call void @llvm.dbg.declare(metadata !{i8* %3}, metadata !1754), !dbg !1755 ; [debug line = 161:74] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %v}, metadata !1756), !dbg !1758 ; [debug line = 164:35] [debug variable = v]
  %4 = load %struct.ge25519_aff** %1, align 8, !dbg !1759 ; [#uses=3 type=%struct.ge25519_aff*] [debug line = 165:3]
  %5 = load i64* %2, align 8, !dbg !1759          ; [#uses=1 type=i64] [debug line = 165:3]
  %6 = mul i64 5, %5, !dbg !1759                  ; [#uses=1 type=i64] [debug line = 165:3]
  %7 = add i64 %6, 0, !dbg !1759                  ; [#uses=1 type=i64] [debug line = 165:3]
  %8 = getelementptr inbounds [425 x %struct.ge25519_aff]* @ge25519_base_multiples_affine, i32 0, i64 %7, !dbg !1759 ; [#uses=3 type=%struct.ge25519_aff*] [debug line = 165:3]
  %9 = bitcast %struct.ge25519_aff* %4 to i8*, !dbg !1759 ; [#uses=0 type=i8*] [debug line = 165:3]
  %10 = bitcast %struct.ge25519_aff* %8 to i8*, !dbg !1759 ; [#uses=0 type=i8*] [debug line = 165:3]
  %11 = getelementptr inbounds %struct.ge25519_aff* %4, i32 0, i32 0, !dbg !1759 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:3]
  %12 = getelementptr inbounds %struct.ge25519_aff* %8, i32 0, i32 0, !dbg !1759 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:3]
  %13 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %11, i32 0, i32 0, !dbg !1759 ; [#uses=32 type=[32 x i32]*] [debug line = 165:3]
  %14 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %12, i32 0, i32 0, !dbg !1759 ; [#uses=32 type=[32 x i32]*] [debug line = 165:3]
  %15 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 0, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %16 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 0, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %17 = load i32* %16, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %17, i32* %15, !dbg !1759             ; [debug line = 165:3]
  %18 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 1, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %19 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 1, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %20 = load i32* %19, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %20, i32* %18, !dbg !1759             ; [debug line = 165:3]
  %21 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 2, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %22 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 2, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %23 = load i32* %22, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %23, i32* %21, !dbg !1759             ; [debug line = 165:3]
  %24 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 3, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %25 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 3, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %26 = load i32* %25, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %26, i32* %24, !dbg !1759             ; [debug line = 165:3]
  %27 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 4, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %28 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 4, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %29 = load i32* %28, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %29, i32* %27, !dbg !1759             ; [debug line = 165:3]
  %30 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 5, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %31 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 5, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %32 = load i32* %31, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %32, i32* %30, !dbg !1759             ; [debug line = 165:3]
  %33 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 6, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %34 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 6, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %35 = load i32* %34, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %35, i32* %33, !dbg !1759             ; [debug line = 165:3]
  %36 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 7, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %37 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 7, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %38 = load i32* %37, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %38, i32* %36, !dbg !1759             ; [debug line = 165:3]
  %39 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 8, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %40 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 8, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %41 = load i32* %40, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %41, i32* %39, !dbg !1759             ; [debug line = 165:3]
  %42 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 9, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %43 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 9, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %44 = load i32* %43, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %44, i32* %42, !dbg !1759             ; [debug line = 165:3]
  %45 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 10, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %46 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 10, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %47 = load i32* %46, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %47, i32* %45, !dbg !1759             ; [debug line = 165:3]
  %48 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 11, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %49 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 11, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %50 = load i32* %49, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %50, i32* %48, !dbg !1759             ; [debug line = 165:3]
  %51 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 12, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %52 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 12, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %53 = load i32* %52, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %53, i32* %51, !dbg !1759             ; [debug line = 165:3]
  %54 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 13, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %55 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 13, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %56 = load i32* %55, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %56, i32* %54, !dbg !1759             ; [debug line = 165:3]
  %57 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 14, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %58 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 14, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %59 = load i32* %58, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %59, i32* %57, !dbg !1759             ; [debug line = 165:3]
  %60 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 15, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %61 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 15, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %62 = load i32* %61, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %62, i32* %60, !dbg !1759             ; [debug line = 165:3]
  %63 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 16, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %64 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 16, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %65 = load i32* %64, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %65, i32* %63, !dbg !1759             ; [debug line = 165:3]
  %66 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 17, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %67 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 17, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %68 = load i32* %67, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %68, i32* %66, !dbg !1759             ; [debug line = 165:3]
  %69 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 18, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %70 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 18, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %71 = load i32* %70, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %71, i32* %69, !dbg !1759             ; [debug line = 165:3]
  %72 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 19, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %73 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 19, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %74 = load i32* %73, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %74, i32* %72, !dbg !1759             ; [debug line = 165:3]
  %75 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 20, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %76 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 20, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %77 = load i32* %76, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %77, i32* %75, !dbg !1759             ; [debug line = 165:3]
  %78 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 21, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %79 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 21, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %80 = load i32* %79, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %80, i32* %78, !dbg !1759             ; [debug line = 165:3]
  %81 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 22, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %82 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 22, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %83 = load i32* %82, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %83, i32* %81, !dbg !1759             ; [debug line = 165:3]
  %84 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 23, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %85 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 23, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %86 = load i32* %85, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %86, i32* %84, !dbg !1759             ; [debug line = 165:3]
  %87 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 24, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %88 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 24, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %89 = load i32* %88, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %89, i32* %87, !dbg !1759             ; [debug line = 165:3]
  %90 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 25, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %91 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 25, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %92 = load i32* %91, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %92, i32* %90, !dbg !1759             ; [debug line = 165:3]
  %93 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 26, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %94 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 26, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %95 = load i32* %94, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %95, i32* %93, !dbg !1759             ; [debug line = 165:3]
  %96 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 27, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %97 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 27, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %98 = load i32* %97, !dbg !1759                 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %98, i32* %96, !dbg !1759             ; [debug line = 165:3]
  %99 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 28, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %100 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 28, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %101 = load i32* %100, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %101, i32* %99, !dbg !1759            ; [debug line = 165:3]
  %102 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 29, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %103 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 29, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %104 = load i32* %103, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %104, i32* %102, !dbg !1759           ; [debug line = 165:3]
  %105 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 30, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %106 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 30, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %107 = load i32* %106, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %107, i32* %105, !dbg !1759           ; [debug line = 165:3]
  %108 = getelementptr inbounds [32 x i32]* %13, i32 0, i32 31, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %109 = getelementptr inbounds [32 x i32]* %14, i32 0, i32 31, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %110 = load i32* %109, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %110, i32* %108, !dbg !1759           ; [debug line = 165:3]
  %111 = getelementptr inbounds %struct.ge25519_aff* %4, i32 0, i32 1, !dbg !1759 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:3]
  %112 = getelementptr inbounds %struct.ge25519_aff* %8, i32 0, i32 1, !dbg !1759 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:3]
  %113 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %111, i32 0, i32 0, !dbg !1759 ; [#uses=32 type=[32 x i32]*] [debug line = 165:3]
  %114 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %112, i32 0, i32 0, !dbg !1759 ; [#uses=32 type=[32 x i32]*] [debug line = 165:3]
  %115 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 0, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %116 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 0, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %117 = load i32* %116, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %117, i32* %115, !dbg !1759           ; [debug line = 165:3]
  %118 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 1, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %119 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 1, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %120 = load i32* %119, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %120, i32* %118, !dbg !1759           ; [debug line = 165:3]
  %121 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 2, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %122 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 2, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %123 = load i32* %122, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %123, i32* %121, !dbg !1759           ; [debug line = 165:3]
  %124 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 3, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %125 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 3, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %126 = load i32* %125, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %126, i32* %124, !dbg !1759           ; [debug line = 165:3]
  %127 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 4, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %128 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 4, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %129 = load i32* %128, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %129, i32* %127, !dbg !1759           ; [debug line = 165:3]
  %130 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 5, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %131 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 5, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %132 = load i32* %131, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %132, i32* %130, !dbg !1759           ; [debug line = 165:3]
  %133 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 6, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %134 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 6, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %135 = load i32* %134, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %135, i32* %133, !dbg !1759           ; [debug line = 165:3]
  %136 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 7, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %137 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 7, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %138 = load i32* %137, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %138, i32* %136, !dbg !1759           ; [debug line = 165:3]
  %139 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 8, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %140 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 8, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %141 = load i32* %140, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %141, i32* %139, !dbg !1759           ; [debug line = 165:3]
  %142 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 9, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %143 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 9, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %144 = load i32* %143, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %144, i32* %142, !dbg !1759           ; [debug line = 165:3]
  %145 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 10, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %146 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 10, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %147 = load i32* %146, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %147, i32* %145, !dbg !1759           ; [debug line = 165:3]
  %148 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 11, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %149 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 11, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %150 = load i32* %149, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %150, i32* %148, !dbg !1759           ; [debug line = 165:3]
  %151 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 12, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %152 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 12, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %153 = load i32* %152, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %153, i32* %151, !dbg !1759           ; [debug line = 165:3]
  %154 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 13, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %155 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 13, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %156 = load i32* %155, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %156, i32* %154, !dbg !1759           ; [debug line = 165:3]
  %157 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 14, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %158 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 14, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %159 = load i32* %158, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %159, i32* %157, !dbg !1759           ; [debug line = 165:3]
  %160 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 15, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %161 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 15, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %162 = load i32* %161, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %162, i32* %160, !dbg !1759           ; [debug line = 165:3]
  %163 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 16, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %164 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 16, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %165 = load i32* %164, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %165, i32* %163, !dbg !1759           ; [debug line = 165:3]
  %166 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 17, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %167 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 17, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %168 = load i32* %167, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %168, i32* %166, !dbg !1759           ; [debug line = 165:3]
  %169 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 18, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %170 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 18, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %171 = load i32* %170, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %171, i32* %169, !dbg !1759           ; [debug line = 165:3]
  %172 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 19, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %173 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 19, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %174 = load i32* %173, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %174, i32* %172, !dbg !1759           ; [debug line = 165:3]
  %175 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 20, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %176 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 20, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %177 = load i32* %176, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %177, i32* %175, !dbg !1759           ; [debug line = 165:3]
  %178 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 21, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %179 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 21, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %180 = load i32* %179, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %180, i32* %178, !dbg !1759           ; [debug line = 165:3]
  %181 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 22, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %182 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 22, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %183 = load i32* %182, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %183, i32* %181, !dbg !1759           ; [debug line = 165:3]
  %184 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 23, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %185 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 23, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %186 = load i32* %185, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %186, i32* %184, !dbg !1759           ; [debug line = 165:3]
  %187 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 24, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %188 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 24, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %189 = load i32* %188, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %189, i32* %187, !dbg !1759           ; [debug line = 165:3]
  %190 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 25, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %191 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 25, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %192 = load i32* %191, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %192, i32* %190, !dbg !1759           ; [debug line = 165:3]
  %193 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 26, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %194 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 26, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %195 = load i32* %194, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %195, i32* %193, !dbg !1759           ; [debug line = 165:3]
  %196 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 27, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %197 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 27, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %198 = load i32* %197, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %198, i32* %196, !dbg !1759           ; [debug line = 165:3]
  %199 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 28, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %200 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 28, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %201 = load i32* %200, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %201, i32* %199, !dbg !1759           ; [debug line = 165:3]
  %202 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 29, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %203 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 29, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %204 = load i32* %203, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %204, i32* %202, !dbg !1759           ; [debug line = 165:3]
  %205 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 30, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %206 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 30, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %207 = load i32* %206, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %207, i32* %205, !dbg !1759           ; [debug line = 165:3]
  %208 = getelementptr inbounds [32 x i32]* %113, i32 0, i32 31, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %209 = getelementptr inbounds [32 x i32]* %114, i32 0, i32 31, !dbg !1759 ; [#uses=1 type=i32*] [debug line = 165:3]
  %210 = load i32* %209, !dbg !1759               ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %210, i32* %208, !dbg !1759           ; [debug line = 165:3]
  %211 = load %struct.ge25519_aff** %1, align 8, !dbg !1760 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 166:3]
  %212 = load i64* %2, align 8, !dbg !1760        ; [#uses=1 type=i64] [debug line = 166:3]
  %213 = mul i64 5, %212, !dbg !1760              ; [#uses=1 type=i64] [debug line = 166:3]
  %214 = add i64 %213, 1, !dbg !1760              ; [#uses=1 type=i64] [debug line = 166:3]
  %215 = getelementptr inbounds [425 x %struct.ge25519_aff]* @ge25519_base_multiples_affine, i32 0, i64 %214, !dbg !1760 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 166:3]
  %216 = load i8* %3, align 1, !dbg !1761         ; [#uses=1 type=i8] [debug line = 166:55]
  %217 = call zeroext i8 @equal(i8 signext %216, i8 signext 1), !dbg !1761 ; [#uses=1 type=i8] [debug line = 166:55]
  %218 = zext i8 %217 to i32, !dbg !1761          ; [#uses=1 type=i32] [debug line = 166:55]
  %219 = load i8* %3, align 1, !dbg !1762         ; [#uses=1 type=i8] [debug line = 166:68]
  %220 = call zeroext i8 @equal(i8 signext %219, i8 signext -1), !dbg !1762 ; [#uses=1 type=i8] [debug line = 166:68]
  %221 = zext i8 %220 to i32, !dbg !1762          ; [#uses=1 type=i32] [debug line = 166:68]
  %222 = or i32 %218, %221, !dbg !1762            ; [#uses=1 type=i32] [debug line = 166:68]
  %223 = trunc i32 %222 to i8, !dbg !1762         ; [#uses=1 type=i8] [debug line = 166:68]
  call void @cmov_aff(%struct.ge25519_aff* %211, %struct.ge25519_aff* %215, i8 zeroext %223), !dbg !1762 ; [debug line = 166:68]
  %224 = load %struct.ge25519_aff** %1, align 8, !dbg !1763 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 167:3]
  %225 = load i64* %2, align 8, !dbg !1763        ; [#uses=1 type=i64] [debug line = 167:3]
  %226 = mul i64 5, %225, !dbg !1763              ; [#uses=1 type=i64] [debug line = 167:3]
  %227 = add i64 %226, 2, !dbg !1763              ; [#uses=1 type=i64] [debug line = 167:3]
  %228 = getelementptr inbounds [425 x %struct.ge25519_aff]* @ge25519_base_multiples_affine, i32 0, i64 %227, !dbg !1763 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 167:3]
  %229 = load i8* %3, align 1, !dbg !1764         ; [#uses=1 type=i8] [debug line = 167:55]
  %230 = call zeroext i8 @equal(i8 signext %229, i8 signext 2), !dbg !1764 ; [#uses=1 type=i8] [debug line = 167:55]
  %231 = zext i8 %230 to i32, !dbg !1764          ; [#uses=1 type=i32] [debug line = 167:55]
  %232 = load i8* %3, align 1, !dbg !1765         ; [#uses=1 type=i8] [debug line = 167:68]
  %233 = call zeroext i8 @equal(i8 signext %232, i8 signext -2), !dbg !1765 ; [#uses=1 type=i8] [debug line = 167:68]
  %234 = zext i8 %233 to i32, !dbg !1765          ; [#uses=1 type=i32] [debug line = 167:68]
  %235 = or i32 %231, %234, !dbg !1765            ; [#uses=1 type=i32] [debug line = 167:68]
  %236 = trunc i32 %235 to i8, !dbg !1765         ; [#uses=1 type=i8] [debug line = 167:68]
  call void @cmov_aff(%struct.ge25519_aff* %224, %struct.ge25519_aff* %228, i8 zeroext %236), !dbg !1765 ; [debug line = 167:68]
  %237 = load %struct.ge25519_aff** %1, align 8, !dbg !1766 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 168:3]
  %238 = load i64* %2, align 8, !dbg !1766        ; [#uses=1 type=i64] [debug line = 168:3]
  %239 = mul i64 5, %238, !dbg !1766              ; [#uses=1 type=i64] [debug line = 168:3]
  %240 = add i64 %239, 3, !dbg !1766              ; [#uses=1 type=i64] [debug line = 168:3]
  %241 = getelementptr inbounds [425 x %struct.ge25519_aff]* @ge25519_base_multiples_affine, i32 0, i64 %240, !dbg !1766 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 168:3]
  %242 = load i8* %3, align 1, !dbg !1767         ; [#uses=1 type=i8] [debug line = 168:55]
  %243 = call zeroext i8 @equal(i8 signext %242, i8 signext 3), !dbg !1767 ; [#uses=1 type=i8] [debug line = 168:55]
  %244 = zext i8 %243 to i32, !dbg !1767          ; [#uses=1 type=i32] [debug line = 168:55]
  %245 = load i8* %3, align 1, !dbg !1768         ; [#uses=1 type=i8] [debug line = 168:68]
  %246 = call zeroext i8 @equal(i8 signext %245, i8 signext -3), !dbg !1768 ; [#uses=1 type=i8] [debug line = 168:68]
  %247 = zext i8 %246 to i32, !dbg !1768          ; [#uses=1 type=i32] [debug line = 168:68]
  %248 = or i32 %244, %247, !dbg !1768            ; [#uses=1 type=i32] [debug line = 168:68]
  %249 = trunc i32 %248 to i8, !dbg !1768         ; [#uses=1 type=i8] [debug line = 168:68]
  call void @cmov_aff(%struct.ge25519_aff* %237, %struct.ge25519_aff* %241, i8 zeroext %249), !dbg !1768 ; [debug line = 168:68]
  %250 = load %struct.ge25519_aff** %1, align 8, !dbg !1769 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 169:3]
  %251 = load i64* %2, align 8, !dbg !1769        ; [#uses=1 type=i64] [debug line = 169:3]
  %252 = mul i64 5, %251, !dbg !1769              ; [#uses=1 type=i64] [debug line = 169:3]
  %253 = add i64 %252, 4, !dbg !1769              ; [#uses=1 type=i64] [debug line = 169:3]
  %254 = getelementptr inbounds [425 x %struct.ge25519_aff]* @ge25519_base_multiples_affine, i32 0, i64 %253, !dbg !1769 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 169:3]
  %255 = load i8* %3, align 1, !dbg !1770         ; [#uses=1 type=i8] [debug line = 169:55]
  %256 = call zeroext i8 @equal(i8 signext %255, i8 signext -4), !dbg !1770 ; [#uses=1 type=i8] [debug line = 169:55]
  call void @cmov_aff(%struct.ge25519_aff* %250, %struct.ge25519_aff* %254, i8 zeroext %256), !dbg !1770 ; [debug line = 169:55]
  %257 = load %struct.ge25519_aff** %1, align 8, !dbg !1771 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 170:3]
  %258 = getelementptr inbounds %struct.ge25519_aff* %257, i32 0, i32 0, !dbg !1771 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 170:3]
  call void @crypto_sign_ed25519_ref_fe25519_neg(%struct.crypto_sign_ed25519_ref_fe25519* %v, %struct.crypto_sign_ed25519_ref_fe25519* %258), !dbg !1771 ; [debug line = 170:3]
  %259 = load %struct.ge25519_aff** %1, align 8, !dbg !1772 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 171:3]
  %260 = getelementptr inbounds %struct.ge25519_aff* %259, i32 0, i32 0, !dbg !1772 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 171:3]
  %261 = load i8* %3, align 1, !dbg !1773         ; [#uses=1 type=i8] [debug line = 171:51]
  %262 = call zeroext i8 @negative(i8 signext %261), !dbg !1773 ; [#uses=1 type=i8] [debug line = 171:51]
  call void @crypto_sign_ed25519_ref_fe25519_cmov(%struct.crypto_sign_ed25519_ref_fe25519* %260, %struct.crypto_sign_ed25519_ref_fe25519* %v, i8 zeroext %262), !dbg !1773 ; [debug line = 171:51]
  ret void, !dbg !1774                            ; [debug line = 172:1]
}

; [#uses=1]
define internal void @ge25519_mixadd2(%struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.ge25519_aff* %q) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_ge25519*, align 8 ; [#uses=12 type=%struct.crypto_sign_ed25519_ref_ge25519**]
  %2 = alloca %struct.ge25519_aff*, align 8       ; [#uses=7 type=%struct.ge25519_aff**]
  %a = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %b = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t1 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t2 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %c = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %d = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %e = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %f = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %g = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %h = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %qt = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.crypto_sign_ed25519_ref_ge25519* %r, %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_ge25519** %1}, metadata !1775), !dbg !1776 ; [debug line = 74:62] [debug variable = r]
  store %struct.ge25519_aff* %q, %struct.ge25519_aff** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_aff** %2}, metadata !1777), !dbg !1778 ; [debug line = 74:84] [debug variable = q]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %a}, metadata !1779), !dbg !1781 ; [debug line = 76:35] [debug variable = a]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %b}, metadata !1782), !dbg !1783 ; [debug line = 76:37] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t1}, metadata !1784), !dbg !1785 ; [debug line = 76:39] [debug variable = t1]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t2}, metadata !1786), !dbg !1787 ; [debug line = 76:42] [debug variable = t2]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %c}, metadata !1788), !dbg !1789 ; [debug line = 76:45] [debug variable = c]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %d}, metadata !1790), !dbg !1791 ; [debug line = 76:47] [debug variable = d]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %e}, metadata !1792), !dbg !1793 ; [debug line = 76:49] [debug variable = e]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %f}, metadata !1794), !dbg !1795 ; [debug line = 76:51] [debug variable = f]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %g}, metadata !1796), !dbg !1797 ; [debug line = 76:53] [debug variable = g]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %h}, metadata !1798), !dbg !1799 ; [debug line = 76:55] [debug variable = h]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %qt}, metadata !1800), !dbg !1801 ; [debug line = 76:57] [debug variable = qt]
  %3 = load %struct.ge25519_aff** %2, align 8, !dbg !1802 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 77:3]
  %4 = getelementptr inbounds %struct.ge25519_aff* %3, i32 0, i32 0, !dbg !1802 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 77:3]
  %5 = load %struct.ge25519_aff** %2, align 8, !dbg !1802 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 77:3]
  %6 = getelementptr inbounds %struct.ge25519_aff* %5, i32 0, i32 1, !dbg !1802 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 77:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %qt, %struct.crypto_sign_ed25519_ref_fe25519* %4, %struct.crypto_sign_ed25519_ref_fe25519* %6), !dbg !1802 ; [debug line = 77:3]
  %7 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1803 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 78:3]
  %8 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %7, i32 0, i32 1, !dbg !1803 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 78:3]
  %9 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1803 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 78:3]
  %10 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %9, i32 0, i32 0, !dbg !1803 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 78:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %8, %struct.crypto_sign_ed25519_ref_fe25519* %10), !dbg !1803 ; [debug line = 78:3]
  %11 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1804 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 79:3]
  %12 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %11, i32 0, i32 1, !dbg !1804 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 79:3]
  %13 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1804 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 79:3]
  %14 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %13, i32 0, i32 0, !dbg !1804 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 79:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %12, %struct.crypto_sign_ed25519_ref_fe25519* %14), !dbg !1804 ; [debug line = 79:3]
  %15 = load %struct.ge25519_aff** %2, align 8, !dbg !1805 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 80:3]
  %16 = getelementptr inbounds %struct.ge25519_aff* %15, i32 0, i32 1, !dbg !1805 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 80:3]
  %17 = load %struct.ge25519_aff** %2, align 8, !dbg !1805 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 80:3]
  %18 = getelementptr inbounds %struct.ge25519_aff* %17, i32 0, i32 0, !dbg !1805 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 80:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %16, %struct.crypto_sign_ed25519_ref_fe25519* %18), !dbg !1805 ; [debug line = 80:3]
  %19 = load %struct.ge25519_aff** %2, align 8, !dbg !1806 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 81:3]
  %20 = getelementptr inbounds %struct.ge25519_aff* %19, i32 0, i32 1, !dbg !1806 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 81:3]
  %21 = load %struct.ge25519_aff** %2, align 8, !dbg !1806 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 81:3]
  %22 = getelementptr inbounds %struct.ge25519_aff* %21, i32 0, i32 0, !dbg !1806 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 81:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %t2, %struct.crypto_sign_ed25519_ref_fe25519* %20, %struct.crypto_sign_ed25519_ref_fe25519* %22), !dbg !1806 ; [debug line = 81:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %a, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !1807 ; [debug line = 82:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %t2), !dbg !1808 ; [debug line = 83:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %e, %struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %a), !dbg !1809 ; [debug line = 84:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %h, %struct.crypto_sign_ed25519_ref_fe25519* %b, %struct.crypto_sign_ed25519_ref_fe25519* %a), !dbg !1810 ; [debug line = 85:3]
  %23 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1811 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 86:3]
  %24 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %23, i32 0, i32 3, !dbg !1811 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 86:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %24, %struct.crypto_sign_ed25519_ref_fe25519* %qt), !dbg !1811 ; [debug line = 86:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* %c, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_ec2d), !dbg !1812 ; [debug line = 87:3]
  %25 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1813 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 88:3]
  %26 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %25, i32 0, i32 2, !dbg !1813 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 88:3]
  %27 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1813 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 88:3]
  %28 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %27, i32 0, i32 2, !dbg !1813 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 88:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %26, %struct.crypto_sign_ed25519_ref_fe25519* %28), !dbg !1813 ; [debug line = 88:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %f, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %c), !dbg !1814 ; [debug line = 89:3]
  call void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %g, %struct.crypto_sign_ed25519_ref_fe25519* %d, %struct.crypto_sign_ed25519_ref_fe25519* %c), !dbg !1815 ; [debug line = 90:3]
  %29 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1816 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 91:3]
  %30 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %29, i32 0, i32 0, !dbg !1816 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 91:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %30, %struct.crypto_sign_ed25519_ref_fe25519* %e, %struct.crypto_sign_ed25519_ref_fe25519* %f), !dbg !1816 ; [debug line = 91:3]
  %31 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1817 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 92:3]
  %32 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %31, i32 0, i32 1, !dbg !1817 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 92:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %32, %struct.crypto_sign_ed25519_ref_fe25519* %h, %struct.crypto_sign_ed25519_ref_fe25519* %g), !dbg !1817 ; [debug line = 92:3]
  %33 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1818 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 93:3]
  %34 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %33, i32 0, i32 2, !dbg !1818 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 93:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %34, %struct.crypto_sign_ed25519_ref_fe25519* %g, %struct.crypto_sign_ed25519_ref_fe25519* %f), !dbg !1818 ; [debug line = 93:3]
  %35 = load %struct.crypto_sign_ed25519_ref_ge25519** %1, align 8, !dbg !1819 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_ge25519*] [debug line = 94:3]
  %36 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_ge25519* %35, i32 0, i32 3, !dbg !1819 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 94:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %36, %struct.crypto_sign_ed25519_ref_fe25519* %e, %struct.crypto_sign_ed25519_ref_fe25519* %h), !dbg !1819 ; [debug line = 94:3]
  ret void, !dbg !1820                            ; [debug line = 95:1]
}

; [#uses=4]
define internal void @cmov_aff(%struct.ge25519_aff* %r, %struct.ge25519_aff* %p, i8 zeroext %b) nounwind uwtable {
  %1 = alloca %struct.ge25519_aff*, align 8       ; [#uses=3 type=%struct.ge25519_aff**]
  %2 = alloca %struct.ge25519_aff*, align 8       ; [#uses=3 type=%struct.ge25519_aff**]
  %3 = alloca i8, align 1                         ; [#uses=3 type=i8*]
  store %struct.ge25519_aff* %r, %struct.ge25519_aff** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_aff** %1}, metadata !1821), !dbg !1822 ; [debug line = 137:35] [debug variable = r]
  store %struct.ge25519_aff* %p, %struct.ge25519_aff** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ge25519_aff** %2}, metadata !1823), !dbg !1824 ; [debug line = 137:57] [debug variable = p]
  store i8 %b, i8* %3, align 1
  call void @llvm.dbg.declare(metadata !{i8* %3}, metadata !1825), !dbg !1826 ; [debug line = 137:74] [debug variable = b]
  %4 = load %struct.ge25519_aff** %1, align 8, !dbg !1827 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 139:3]
  %5 = getelementptr inbounds %struct.ge25519_aff* %4, i32 0, i32 0, !dbg !1827 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 139:3]
  %6 = load %struct.ge25519_aff** %2, align 8, !dbg !1827 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 139:3]
  %7 = getelementptr inbounds %struct.ge25519_aff* %6, i32 0, i32 0, !dbg !1827 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 139:3]
  %8 = load i8* %3, align 1, !dbg !1827           ; [#uses=1 type=i8] [debug line = 139:3]
  call void @crypto_sign_ed25519_ref_fe25519_cmov(%struct.crypto_sign_ed25519_ref_fe25519* %5, %struct.crypto_sign_ed25519_ref_fe25519* %7, i8 zeroext %8), !dbg !1827 ; [debug line = 139:3]
  %9 = load %struct.ge25519_aff** %1, align 8, !dbg !1829 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 140:3]
  %10 = getelementptr inbounds %struct.ge25519_aff* %9, i32 0, i32 1, !dbg !1829 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 140:3]
  %11 = load %struct.ge25519_aff** %2, align 8, !dbg !1829 ; [#uses=1 type=%struct.ge25519_aff*] [debug line = 140:3]
  %12 = getelementptr inbounds %struct.ge25519_aff* %11, i32 0, i32 1, !dbg !1829 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 140:3]
  %13 = load i8* %3, align 1, !dbg !1829          ; [#uses=1 type=i8] [debug line = 140:3]
  call void @crypto_sign_ed25519_ref_fe25519_cmov(%struct.crypto_sign_ed25519_ref_fe25519* %10, %struct.crypto_sign_ed25519_ref_fe25519* %12, i8 zeroext %13), !dbg !1829 ; [debug line = 140:3]
  ret void, !dbg !1830                            ; [debug line = 141:1]
}

; [#uses=7]
define internal zeroext i8 @equal(i8 signext %b, i8 signext %c) nounwind uwtable {
  %1 = alloca i8, align 1                         ; [#uses=2 type=i8*]
  %2 = alloca i8, align 1                         ; [#uses=2 type=i8*]
  %ub = alloca i8, align 1                        ; [#uses=2 type=i8*]
  %uc = alloca i8, align 1                        ; [#uses=2 type=i8*]
  %x = alloca i8, align 1                         ; [#uses=2 type=i8*]
  %y = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store i8 %b, i8* %1, align 1
  call void @llvm.dbg.declare(metadata !{i8* %1}, metadata !1831), !dbg !1832 ; [debug line = 143:40] [debug variable = b]
  store i8 %c, i8* %2, align 1
  call void @llvm.dbg.declare(metadata !{i8* %2}, metadata !1833), !dbg !1834 ; [debug line = 143:54] [debug variable = c]
  call void @llvm.dbg.declare(metadata !{i8* %ub}, metadata !1835), !dbg !1837 ; [debug line = 145:17] [debug variable = ub]
  %3 = load i8* %1, align 1, !dbg !1838           ; [#uses=1 type=i8] [debug line = 145:23]
  store i8 %3, i8* %ub, align 1, !dbg !1838       ; [debug line = 145:23]
  call void @llvm.dbg.declare(metadata !{i8* %uc}, metadata !1839), !dbg !1840 ; [debug line = 146:17] [debug variable = uc]
  %4 = load i8* %2, align 1, !dbg !1841           ; [#uses=1 type=i8] [debug line = 146:23]
  store i8 %4, i8* %uc, align 1, !dbg !1841       ; [debug line = 146:23]
  call void @llvm.dbg.declare(metadata !{i8* %x}, metadata !1842), !dbg !1843 ; [debug line = 147:17] [debug variable = x]
  %5 = load i8* %ub, align 1, !dbg !1844          ; [#uses=1 type=i8] [debug line = 147:28]
  %6 = zext i8 %5 to i32, !dbg !1844              ; [#uses=1 type=i32] [debug line = 147:28]
  %7 = load i8* %uc, align 1, !dbg !1844          ; [#uses=1 type=i8] [debug line = 147:28]
  %8 = zext i8 %7 to i32, !dbg !1844              ; [#uses=1 type=i32] [debug line = 147:28]
  %9 = xor i32 %6, %8, !dbg !1844                 ; [#uses=1 type=i32] [debug line = 147:28]
  %10 = trunc i32 %9 to i8, !dbg !1844            ; [#uses=1 type=i8] [debug line = 147:28]
  store i8 %10, i8* %x, align 1, !dbg !1844       ; [debug line = 147:28]
  call void @llvm.dbg.declare(metadata !{i32* %y}, metadata !1845), !dbg !1846 ; [debug line = 148:17] [debug variable = y]
  %11 = load i8* %x, align 1, !dbg !1847          ; [#uses=1 type=i8] [debug line = 148:22]
  %12 = zext i8 %11 to i32, !dbg !1847            ; [#uses=1 type=i32] [debug line = 148:22]
  store i32 %12, i32* %y, align 4, !dbg !1847     ; [debug line = 148:22]
  %13 = load i32* %y, align 4, !dbg !1848         ; [#uses=1 type=i32] [debug line = 149:3]
  %14 = sub i32 %13, 1, !dbg !1848                ; [#uses=1 type=i32] [debug line = 149:3]
  store i32 %14, i32* %y, align 4, !dbg !1848     ; [debug line = 149:3]
  %15 = load i32* %y, align 4, !dbg !1849         ; [#uses=1 type=i32] [debug line = 150:3]
  %16 = lshr i32 %15, 31, !dbg !1849              ; [#uses=1 type=i32] [debug line = 150:3]
  store i32 %16, i32* %y, align 4, !dbg !1849     ; [debug line = 150:3]
  %17 = load i32* %y, align 4, !dbg !1850         ; [#uses=1 type=i32] [debug line = 151:3]
  %18 = trunc i32 %17 to i8, !dbg !1850           ; [#uses=1 type=i8] [debug line = 151:3]
  ret i8 %18, !dbg !1850                          ; [debug line = 151:3]
}

; [#uses=1]
define internal zeroext i8 @negative(i8 signext %b) nounwind uwtable {
  %1 = alloca i8, align 1                         ; [#uses=2 type=i8*]
  %x = alloca i64, align 8                        ; [#uses=4 type=i64*]
  store i8 %b, i8* %1, align 1
  call void @llvm.dbg.declare(metadata !{i8* %1}, metadata !1851), !dbg !1852 ; [debug line = 154:43] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i64* %x}, metadata !1853), !dbg !1855 ; [debug line = 156:22] [debug variable = x]
  %2 = load i8* %1, align 1, !dbg !1856           ; [#uses=1 type=i8] [debug line = 156:27]
  %3 = sext i8 %2 to i64, !dbg !1856              ; [#uses=1 type=i64] [debug line = 156:27]
  store i64 %3, i64* %x, align 8, !dbg !1856      ; [debug line = 156:27]
  %4 = load i64* %x, align 8, !dbg !1857          ; [#uses=1 type=i64] [debug line = 157:3]
  %5 = lshr i64 %4, 63, !dbg !1857                ; [#uses=1 type=i64] [debug line = 157:3]
  store i64 %5, i64* %x, align 8, !dbg !1857      ; [debug line = 157:3]
  %6 = load i64* %x, align 8, !dbg !1858          ; [#uses=1 type=i64] [debug line = 158:3]
  %7 = trunc i64 %6 to i8, !dbg !1858             ; [#uses=1 type=i8] [debug line = 158:3]
  ret i8 %7, !dbg !1858                           ; [debug line = 158:3]
}

; [#uses=5]
define void @crypto_sign_ed25519_ref_fe25519_freeze(%struct.crypto_sign_ed25519_ref_fe25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=7 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=10 type=i32*]
  %m = alloca i32, align 4                        ; [#uses=10 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1859), !dbg !1860 ; [debug line = 74:78] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1861), !dbg !1863 ; [debug line = 76:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %m}, metadata !1864), !dbg !1865 ; [debug line = 77:17] [debug variable = m]
  %2 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1866 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 77:21]
  %3 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %2, i32 0, i32 0, !dbg !1866 ; [#uses=1 type=[32 x i32]*] [debug line = 77:21]
  %4 = getelementptr inbounds [32 x i32]* %3, i32 0, i64 31, !dbg !1866 ; [#uses=1 type=i32*] [debug line = 77:21]
  %5 = load i32* %4, align 4, !dbg !1866          ; [#uses=1 type=i32] [debug line = 77:21]
  %6 = call i32 @equal41(i32 %5, i32 127), !dbg !1866 ; [#uses=1 type=i32] [debug line = 77:21]
  store i32 %6, i32* %m, align 4, !dbg !1866      ; [debug line = 77:21]
  store i32 30, i32* %i, align 4, !dbg !1867      ; [debug line = 78:7]
  br label %7, !dbg !1867                         ; [debug line = 78:7]

; <label>:7                                       ; preds = %20, %0
  %8 = load i32* %i, align 4, !dbg !1867          ; [#uses=1 type=i32] [debug line = 78:7]
  %9 = icmp sgt i32 %8, 0, !dbg !1867             ; [#uses=1 type=i1] [debug line = 78:7]
  br i1 %9, label %10, label %23, !dbg !1867      ; [debug line = 78:7]

; <label>:10                                      ; preds = %7
  %11 = load i32* %i, align 4, !dbg !1869         ; [#uses=1 type=i32] [debug line = 79:10]
  %12 = sext i32 %11 to i64, !dbg !1869           ; [#uses=1 type=i64] [debug line = 79:10]
  %13 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1869 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 79:10]
  %14 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %13, i32 0, i32 0, !dbg !1869 ; [#uses=1 type=[32 x i32]*] [debug line = 79:10]
  %15 = getelementptr inbounds [32 x i32]* %14, i32 0, i64 %12, !dbg !1869 ; [#uses=1 type=i32*] [debug line = 79:10]
  %16 = load i32* %15, align 4, !dbg !1869        ; [#uses=1 type=i32] [debug line = 79:10]
  %17 = call i32 @equal41(i32 %16, i32 255), !dbg !1869 ; [#uses=1 type=i32] [debug line = 79:10]
  %18 = load i32* %m, align 4, !dbg !1869         ; [#uses=1 type=i32] [debug line = 79:10]
  %19 = and i32 %18, %17, !dbg !1869              ; [#uses=1 type=i32] [debug line = 79:10]
  store i32 %19, i32* %m, align 4, !dbg !1869     ; [debug line = 79:10]
  br label %20, !dbg !1869                        ; [debug line = 79:10]

; <label>:20                                      ; preds = %10
  %21 = load i32* %i, align 4, !dbg !1870         ; [#uses=1 type=i32] [debug line = 78:16]
  %22 = add nsw i32 %21, -1, !dbg !1870           ; [#uses=1 type=i32] [debug line = 78:16]
  store i32 %22, i32* %i, align 4, !dbg !1870     ; [debug line = 78:16]
  br label %7, !dbg !1870                         ; [debug line = 78:16]

; <label>:23                                      ; preds = %7
  %24 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1871 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 80:8]
  %25 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %24, i32 0, i32 0, !dbg !1871 ; [#uses=1 type=[32 x i32]*] [debug line = 80:8]
  %26 = getelementptr inbounds [32 x i32]* %25, i32 0, i64 0, !dbg !1871 ; [#uses=1 type=i32*] [debug line = 80:8]
  %27 = load i32* %26, align 4, !dbg !1871        ; [#uses=1 type=i32] [debug line = 80:8]
  %28 = call i32 @ge(i32 %27, i32 237), !dbg !1871 ; [#uses=1 type=i32] [debug line = 80:8]
  %29 = load i32* %m, align 4, !dbg !1871         ; [#uses=1 type=i32] [debug line = 80:8]
  %30 = and i32 %29, %28, !dbg !1871              ; [#uses=1 type=i32] [debug line = 80:8]
  store i32 %30, i32* %m, align 4, !dbg !1871     ; [debug line = 80:8]
  %31 = load i32* %m, align 4, !dbg !1872         ; [#uses=1 type=i32] [debug line = 82:3]
  %32 = sub i32 0, %31, !dbg !1872                ; [#uses=1 type=i32] [debug line = 82:3]
  store i32 %32, i32* %m, align 4, !dbg !1872     ; [debug line = 82:3]
  %33 = load i32* %m, align 4, !dbg !1873         ; [#uses=1 type=i32] [debug line = 84:3]
  %34 = and i32 %33, 127, !dbg !1873              ; [#uses=1 type=i32] [debug line = 84:3]
  %35 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1873 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 84:3]
  %36 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %35, i32 0, i32 0, !dbg !1873 ; [#uses=1 type=[32 x i32]*] [debug line = 84:3]
  %37 = getelementptr inbounds [32 x i32]* %36, i32 0, i64 31, !dbg !1873 ; [#uses=2 type=i32*] [debug line = 84:3]
  %38 = load i32* %37, align 4, !dbg !1873        ; [#uses=1 type=i32] [debug line = 84:3]
  %39 = sub i32 %38, %34, !dbg !1873              ; [#uses=1 type=i32] [debug line = 84:3]
  store i32 %39, i32* %37, align 4, !dbg !1873    ; [debug line = 84:3]
  store i32 30, i32* %i, align 4, !dbg !1874      ; [debug line = 85:7]
  br label %40, !dbg !1874                        ; [debug line = 85:7]

; <label>:40                                      ; preds = %53, %23
  %41 = load i32* %i, align 4, !dbg !1874         ; [#uses=1 type=i32] [debug line = 85:7]
  %42 = icmp sgt i32 %41, 0, !dbg !1874           ; [#uses=1 type=i1] [debug line = 85:7]
  br i1 %42, label %43, label %56, !dbg !1874     ; [debug line = 85:7]

; <label>:43                                      ; preds = %40
  %44 = load i32* %m, align 4, !dbg !1876         ; [#uses=1 type=i32] [debug line = 86:5]
  %45 = and i32 %44, 255, !dbg !1876              ; [#uses=1 type=i32] [debug line = 86:5]
  %46 = load i32* %i, align 4, !dbg !1876         ; [#uses=1 type=i32] [debug line = 86:5]
  %47 = sext i32 %46 to i64, !dbg !1876           ; [#uses=1 type=i64] [debug line = 86:5]
  %48 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1876 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 86:5]
  %49 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %48, i32 0, i32 0, !dbg !1876 ; [#uses=1 type=[32 x i32]*] [debug line = 86:5]
  %50 = getelementptr inbounds [32 x i32]* %49, i32 0, i64 %47, !dbg !1876 ; [#uses=2 type=i32*] [debug line = 86:5]
  %51 = load i32* %50, align 4, !dbg !1876        ; [#uses=1 type=i32] [debug line = 86:5]
  %52 = sub i32 %51, %45, !dbg !1876              ; [#uses=1 type=i32] [debug line = 86:5]
  store i32 %52, i32* %50, align 4, !dbg !1876    ; [debug line = 86:5]
  br label %53, !dbg !1876                        ; [debug line = 86:5]

; <label>:53                                      ; preds = %43
  %54 = load i32* %i, align 4, !dbg !1877         ; [#uses=1 type=i32] [debug line = 85:16]
  %55 = add nsw i32 %54, -1, !dbg !1877           ; [#uses=1 type=i32] [debug line = 85:16]
  store i32 %55, i32* %i, align 4, !dbg !1877     ; [debug line = 85:16]
  br label %40, !dbg !1877                        ; [debug line = 85:16]

; <label>:56                                      ; preds = %40
  %57 = load i32* %m, align 4, !dbg !1878         ; [#uses=1 type=i32] [debug line = 87:3]
  %58 = and i32 %57, 237, !dbg !1878              ; [#uses=1 type=i32] [debug line = 87:3]
  %59 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1878 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 87:3]
  %60 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %59, i32 0, i32 0, !dbg !1878 ; [#uses=1 type=[32 x i32]*] [debug line = 87:3]
  %61 = getelementptr inbounds [32 x i32]* %60, i32 0, i64 0, !dbg !1878 ; [#uses=2 type=i32*] [debug line = 87:3]
  %62 = load i32* %61, align 4, !dbg !1878        ; [#uses=1 type=i32] [debug line = 87:3]
  %63 = sub i32 %62, %58, !dbg !1878              ; [#uses=1 type=i32] [debug line = 87:3]
  store i32 %63, i32* %61, align 4, !dbg !1878    ; [debug line = 87:3]
  ret void, !dbg !1879                            ; [debug line = 88:1]
}

; [#uses=4]
define internal i32 @equal41(i32 %a, i32 %b) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %2 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %x = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store i32 %a, i32* %1, align 4
  call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !1880), !dbg !1881 ; [debug line = 6:42] [debug variable = a]
  store i32 %b, i32* %2, align 4
  call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !1882), !dbg !1883 ; [debug line = 6:58] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %x}, metadata !1884), !dbg !1886 ; [debug line = 8:17] [debug variable = x]
  %3 = load i32* %1, align 4, !dbg !1887          ; [#uses=1 type=i32] [debug line = 8:26]
  %4 = load i32* %2, align 4, !dbg !1887          ; [#uses=1 type=i32] [debug line = 8:26]
  %5 = xor i32 %3, %4, !dbg !1887                 ; [#uses=1 type=i32] [debug line = 8:26]
  store i32 %5, i32* %x, align 4, !dbg !1887      ; [debug line = 8:26]
  %6 = load i32* %x, align 4, !dbg !1888          ; [#uses=1 type=i32] [debug line = 9:3]
  %7 = sub i32 %6, 1, !dbg !1888                  ; [#uses=1 type=i32] [debug line = 9:3]
  store i32 %7, i32* %x, align 4, !dbg !1888      ; [debug line = 9:3]
  %8 = load i32* %x, align 4, !dbg !1889          ; [#uses=1 type=i32] [debug line = 10:3]
  %9 = lshr i32 %8, 31, !dbg !1889                ; [#uses=1 type=i32] [debug line = 10:3]
  store i32 %9, i32* %x, align 4, !dbg !1889      ; [debug line = 10:3]
  %10 = load i32* %x, align 4, !dbg !1890         ; [#uses=1 type=i32] [debug line = 11:3]
  ret i32 %10, !dbg !1890                         ; [debug line = 11:3]
}

; [#uses=1]
define internal i32 @ge(i32 %a, i32 %b) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %2 = alloca i32, align 4                        ; [#uses=2 type=i32*]
  %x = alloca i32, align 4                        ; [#uses=8 type=i32*]
  store i32 %a, i32* %1, align 4
  call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !1891), !dbg !1892 ; [debug line = 14:39] [debug variable = a]
  store i32 %b, i32* %2, align 4
  call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !1893), !dbg !1894 ; [debug line = 14:55] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %x}, metadata !1895), !dbg !1897 ; [debug line = 16:16] [debug variable = x]
  %3 = load i32* %1, align 4, !dbg !1898          ; [#uses=1 type=i32] [debug line = 16:21]
  store i32 %3, i32* %x, align 4, !dbg !1898      ; [debug line = 16:21]
  %4 = load i32* %2, align 4, !dbg !1899          ; [#uses=1 type=i32] [debug line = 17:3]
  %5 = load i32* %x, align 4, !dbg !1899          ; [#uses=1 type=i32] [debug line = 17:3]
  %6 = sub i32 %5, %4, !dbg !1899                 ; [#uses=1 type=i32] [debug line = 17:3]
  store i32 %6, i32* %x, align 4, !dbg !1899      ; [debug line = 17:3]
  %7 = load i32* %x, align 4, !dbg !1900          ; [#uses=1 type=i32] [debug line = 18:3]
  %8 = lshr i32 %7, 31, !dbg !1900                ; [#uses=1 type=i32] [debug line = 18:3]
  store i32 %8, i32* %x, align 4, !dbg !1900      ; [debug line = 18:3]
  %9 = load i32* %x, align 4, !dbg !1901          ; [#uses=1 type=i32] [debug line = 19:3]
  %10 = xor i32 %9, 1, !dbg !1901                 ; [#uses=1 type=i32] [debug line = 19:3]
  store i32 %10, i32* %x, align 4, !dbg !1901     ; [debug line = 19:3]
  %11 = load i32* %x, align 4, !dbg !1902         ; [#uses=1 type=i32] [debug line = 20:3]
  ret i32 %11, !dbg !1902                         ; [debug line = 20:3]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_fe25519_unpack(%struct.crypto_sign_ed25519_ref_fe25519* %r, i8* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca i8*, align 8                        ; [#uses=3 type=i8**]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1903), !dbg !1904 ; [debug line = 90:78] [debug variable = r]
  store i8* %x, i8** %2, align 8
  call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !1905), !dbg !1906 ; [debug line = 90:101] [debug variable = x]
  %3 = load i8** %2, align 8, !dbg !1907          ; [#uses=1 type=i8*] [debug line = 91:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 32) nounwind, !dbg !1907 ; [debug line = 91:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1909), !dbg !1910 ; [debug line = 92:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !1911       ; [debug line = 93:7]
  br label %4, !dbg !1911                         ; [debug line = 93:7]

; <label>:4                                       ; preds = %19, %0
  %5 = load i32* %i, align 4, !dbg !1911          ; [#uses=1 type=i32] [debug line = 93:7]
  %6 = icmp slt i32 %5, 32, !dbg !1911            ; [#uses=1 type=i1] [debug line = 93:7]
  br i1 %6, label %7, label %22, !dbg !1911       ; [debug line = 93:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !1913          ; [#uses=1 type=i32] [debug line = 93:21]
  %9 = sext i32 %8 to i64, !dbg !1913             ; [#uses=1 type=i64] [debug line = 93:21]
  %10 = load i8** %2, align 8, !dbg !1913         ; [#uses=1 type=i8*] [debug line = 93:21]
  %11 = getelementptr inbounds i8* %10, i64 %9, !dbg !1913 ; [#uses=1 type=i8*] [debug line = 93:21]
  %12 = load i8* %11, align 1, !dbg !1913         ; [#uses=1 type=i8] [debug line = 93:21]
  %13 = zext i8 %12 to i32, !dbg !1913            ; [#uses=1 type=i32] [debug line = 93:21]
  %14 = load i32* %i, align 4, !dbg !1913         ; [#uses=1 type=i32] [debug line = 93:21]
  %15 = sext i32 %14 to i64, !dbg !1913           ; [#uses=1 type=i64] [debug line = 93:21]
  %16 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1913 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 93:21]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %16, i32 0, i32 0, !dbg !1913 ; [#uses=1 type=[32 x i32]*] [debug line = 93:21]
  %18 = getelementptr inbounds [32 x i32]* %17, i32 0, i64 %15, !dbg !1913 ; [#uses=1 type=i32*] [debug line = 93:21]
  store i32 %13, i32* %18, align 4, !dbg !1913    ; [debug line = 93:21]
  br label %19, !dbg !1913                        ; [debug line = 93:21]

; <label>:19                                      ; preds = %7
  %20 = load i32* %i, align 4, !dbg !1914         ; [#uses=1 type=i32] [debug line = 93:16]
  %21 = add nsw i32 %20, 1, !dbg !1914            ; [#uses=1 type=i32] [debug line = 93:16]
  store i32 %21, i32* %i, align 4, !dbg !1914     ; [debug line = 93:16]
  br label %4, !dbg !1914                         ; [debug line = 93:16]

; <label>:22                                      ; preds = %4
  %23 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1915 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 94:3]
  %24 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %23, i32 0, i32 0, !dbg !1915 ; [#uses=1 type=[32 x i32]*] [debug line = 94:3]
  %25 = getelementptr inbounds [32 x i32]* %24, i32 0, i64 31, !dbg !1915 ; [#uses=2 type=i32*] [debug line = 94:3]
  %26 = load i32* %25, align 4, !dbg !1915        ; [#uses=1 type=i32] [debug line = 94:3]
  %27 = and i32 %26, 127, !dbg !1915              ; [#uses=1 type=i32] [debug line = 94:3]
  store i32 %27, i32* %25, align 4, !dbg !1915    ; [debug line = 94:3]
  ret void, !dbg !1916                            ; [debug line = 95:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_fe25519_pack(i8* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca i8*, align 8                        ; [#uses=3 type=i8**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %y = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store i8* %r, i8** %1, align 8
  call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !1917), !dbg !1918 ; [debug line = 98:57] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1919), !dbg !1920 ; [debug line = 98:103] [debug variable = x]
  %3 = load i8** %1, align 8, !dbg !1921          ; [#uses=1 type=i8*] [debug line = 99:2]
  call void (...)* @_ssdm_SpecArrayDimSize(i8* %3, i32 32) nounwind, !dbg !1921 ; [debug line = 99:2]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1923), !dbg !1924 ; [debug line = 100:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %y}, metadata !1925), !dbg !1926 ; [debug line = 101:35] [debug variable = y]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1927 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 101:41]
  %5 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %y to i8*, !dbg !1927 ; [#uses=0 type=i8*] [debug line = 101:41]
  %6 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %4 to i8*, !dbg !1927 ; [#uses=0 type=i8*] [debug line = 101:41]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %y, i32 0, i32 0, !dbg !1927 ; [#uses=32 type=[32 x i32]*] [debug line = 101:41]
  %8 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %4, i32 0, i32 0, !dbg !1927 ; [#uses=32 type=[32 x i32]*] [debug line = 101:41]
  %9 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 0, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %10 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 0, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %11 = load i32* %10, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %11, i32* %9, !dbg !1927              ; [debug line = 101:41]
  %12 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 1, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %13 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 1, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %14 = load i32* %13, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %14, i32* %12, !dbg !1927             ; [debug line = 101:41]
  %15 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 2, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %16 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 2, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %17 = load i32* %16, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %17, i32* %15, !dbg !1927             ; [debug line = 101:41]
  %18 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 3, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %19 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 3, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %20 = load i32* %19, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %20, i32* %18, !dbg !1927             ; [debug line = 101:41]
  %21 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 4, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %22 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 4, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %23 = load i32* %22, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %23, i32* %21, !dbg !1927             ; [debug line = 101:41]
  %24 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 5, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %25 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 5, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %26 = load i32* %25, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %26, i32* %24, !dbg !1927             ; [debug line = 101:41]
  %27 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 6, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %28 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 6, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %29 = load i32* %28, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %29, i32* %27, !dbg !1927             ; [debug line = 101:41]
  %30 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 7, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %31 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 7, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %32 = load i32* %31, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %32, i32* %30, !dbg !1927             ; [debug line = 101:41]
  %33 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 8, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %34 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 8, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %35 = load i32* %34, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %35, i32* %33, !dbg !1927             ; [debug line = 101:41]
  %36 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 9, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %37 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 9, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %38 = load i32* %37, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %38, i32* %36, !dbg !1927             ; [debug line = 101:41]
  %39 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 10, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %40 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 10, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %41 = load i32* %40, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %41, i32* %39, !dbg !1927             ; [debug line = 101:41]
  %42 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 11, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %43 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 11, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %44 = load i32* %43, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %44, i32* %42, !dbg !1927             ; [debug line = 101:41]
  %45 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 12, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %46 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 12, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %47 = load i32* %46, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %47, i32* %45, !dbg !1927             ; [debug line = 101:41]
  %48 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 13, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %49 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 13, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %50 = load i32* %49, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %50, i32* %48, !dbg !1927             ; [debug line = 101:41]
  %51 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 14, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %52 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 14, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %53 = load i32* %52, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %53, i32* %51, !dbg !1927             ; [debug line = 101:41]
  %54 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 15, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %55 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 15, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %56 = load i32* %55, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %56, i32* %54, !dbg !1927             ; [debug line = 101:41]
  %57 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 16, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %58 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 16, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %59 = load i32* %58, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %59, i32* %57, !dbg !1927             ; [debug line = 101:41]
  %60 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 17, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %61 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 17, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %62 = load i32* %61, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %62, i32* %60, !dbg !1927             ; [debug line = 101:41]
  %63 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 18, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %64 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 18, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %65 = load i32* %64, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %65, i32* %63, !dbg !1927             ; [debug line = 101:41]
  %66 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 19, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %67 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 19, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %68 = load i32* %67, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %68, i32* %66, !dbg !1927             ; [debug line = 101:41]
  %69 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 20, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %70 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 20, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %71 = load i32* %70, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %71, i32* %69, !dbg !1927             ; [debug line = 101:41]
  %72 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 21, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %73 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 21, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %74 = load i32* %73, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %74, i32* %72, !dbg !1927             ; [debug line = 101:41]
  %75 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 22, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %76 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 22, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %77 = load i32* %76, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %77, i32* %75, !dbg !1927             ; [debug line = 101:41]
  %78 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 23, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %79 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 23, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %80 = load i32* %79, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %80, i32* %78, !dbg !1927             ; [debug line = 101:41]
  %81 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 24, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %82 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 24, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %83 = load i32* %82, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %83, i32* %81, !dbg !1927             ; [debug line = 101:41]
  %84 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 25, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %85 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 25, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %86 = load i32* %85, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %86, i32* %84, !dbg !1927             ; [debug line = 101:41]
  %87 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 26, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %88 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 26, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %89 = load i32* %88, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %89, i32* %87, !dbg !1927             ; [debug line = 101:41]
  %90 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 27, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %91 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 27, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %92 = load i32* %91, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %92, i32* %90, !dbg !1927             ; [debug line = 101:41]
  %93 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 28, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %94 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 28, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %95 = load i32* %94, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %95, i32* %93, !dbg !1927             ; [debug line = 101:41]
  %96 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 29, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %97 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 29, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %98 = load i32* %97, !dbg !1927                 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %98, i32* %96, !dbg !1927             ; [debug line = 101:41]
  %99 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 30, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %100 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 30, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %101 = load i32* %100, !dbg !1927               ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %101, i32* %99, !dbg !1927            ; [debug line = 101:41]
  %102 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 31, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %103 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 31, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 101:41]
  %104 = load i32* %103, !dbg !1927               ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %104, i32* %102, !dbg !1927           ; [debug line = 101:41]
  call void @crypto_sign_ed25519_ref_fe25519_freeze(%struct.crypto_sign_ed25519_ref_fe25519* %y), !dbg !1928 ; [debug line = 102:3]
  store i32 0, i32* %i, align 4, !dbg !1929       ; [debug line = 103:7]
  br label %105, !dbg !1929                       ; [debug line = 103:7]

; <label>:105                                     ; preds = %119, %0
  %106 = load i32* %i, align 4, !dbg !1929        ; [#uses=1 type=i32] [debug line = 103:7]
  %107 = icmp slt i32 %106, 32, !dbg !1929        ; [#uses=1 type=i1] [debug line = 103:7]
  br i1 %107, label %108, label %122, !dbg !1929  ; [debug line = 103:7]

; <label>:108                                     ; preds = %105
  %109 = load i32* %i, align 4, !dbg !1931        ; [#uses=1 type=i32] [debug line = 104:5]
  %110 = sext i32 %109 to i64, !dbg !1931         ; [#uses=1 type=i64] [debug line = 104:5]
  %111 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %y, i32 0, i32 0, !dbg !1931 ; [#uses=1 type=[32 x i32]*] [debug line = 104:5]
  %112 = getelementptr inbounds [32 x i32]* %111, i32 0, i64 %110, !dbg !1931 ; [#uses=1 type=i32*] [debug line = 104:5]
  %113 = load i32* %112, align 4, !dbg !1931      ; [#uses=1 type=i32] [debug line = 104:5]
  %114 = trunc i32 %113 to i8, !dbg !1931         ; [#uses=1 type=i8] [debug line = 104:5]
  %115 = load i32* %i, align 4, !dbg !1931        ; [#uses=1 type=i32] [debug line = 104:5]
  %116 = sext i32 %115 to i64, !dbg !1931         ; [#uses=1 type=i64] [debug line = 104:5]
  %117 = load i8** %1, align 8, !dbg !1931        ; [#uses=1 type=i8*] [debug line = 104:5]
  %118 = getelementptr inbounds i8* %117, i64 %116, !dbg !1931 ; [#uses=1 type=i8*] [debug line = 104:5]
  store i8 %114, i8* %118, align 1, !dbg !1931    ; [debug line = 104:5]
  br label %119, !dbg !1931                       ; [debug line = 104:5]

; <label>:119                                     ; preds = %108
  %120 = load i32* %i, align 4, !dbg !1932        ; [#uses=1 type=i32] [debug line = 103:16]
  %121 = add nsw i32 %120, 1, !dbg !1932          ; [#uses=1 type=i32] [debug line = 103:16]
  store i32 %121, i32* %i, align 4, !dbg !1932    ; [debug line = 103:16]
  br label %105, !dbg !1932                       ; [debug line = 103:16]

; <label>:122                                     ; preds = %105
  ret void, !dbg !1933                            ; [debug line = 105:1]
}

; [#uses=1]
define i32 @crypto_sign_ed25519_ref_fe25519_iszero(%struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=5 type=i32*]
  %r = alloca i32, align 4                        ; [#uses=4 type=i32*]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=5 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1934), !dbg !1935 ; [debug line = 107:83] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1936), !dbg !1938 ; [debug line = 109:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !1939), !dbg !1940 ; [debug line = 110:7] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !1941), !dbg !1942 ; [debug line = 111:35] [debug variable = t]
  %2 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1943 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 111:41]
  %3 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %t to i8*, !dbg !1943 ; [#uses=0 type=i8*] [debug line = 111:41]
  %4 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %2 to i8*, !dbg !1943 ; [#uses=0 type=i8*] [debug line = 111:41]
  %5 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t, i32 0, i32 0, !dbg !1943 ; [#uses=32 type=[32 x i32]*] [debug line = 111:41]
  %6 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %2, i32 0, i32 0, !dbg !1943 ; [#uses=32 type=[32 x i32]*] [debug line = 111:41]
  %7 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 0, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %8 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 0, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %9 = load i32* %8, !dbg !1943                   ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %9, i32* %7, !dbg !1943               ; [debug line = 111:41]
  %10 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 1, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %11 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 1, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %12 = load i32* %11, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %12, i32* %10, !dbg !1943             ; [debug line = 111:41]
  %13 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 2, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %14 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 2, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %15 = load i32* %14, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %15, i32* %13, !dbg !1943             ; [debug line = 111:41]
  %16 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 3, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %17 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 3, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %18 = load i32* %17, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %18, i32* %16, !dbg !1943             ; [debug line = 111:41]
  %19 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 4, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %20 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 4, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %21 = load i32* %20, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %21, i32* %19, !dbg !1943             ; [debug line = 111:41]
  %22 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 5, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %23 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 5, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %24 = load i32* %23, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %24, i32* %22, !dbg !1943             ; [debug line = 111:41]
  %25 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 6, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %26 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 6, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %27 = load i32* %26, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %27, i32* %25, !dbg !1943             ; [debug line = 111:41]
  %28 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 7, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %29 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 7, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %30 = load i32* %29, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %30, i32* %28, !dbg !1943             ; [debug line = 111:41]
  %31 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 8, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %32 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 8, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %33 = load i32* %32, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %33, i32* %31, !dbg !1943             ; [debug line = 111:41]
  %34 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 9, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %35 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 9, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %36 = load i32* %35, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %36, i32* %34, !dbg !1943             ; [debug line = 111:41]
  %37 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 10, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %38 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 10, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %39 = load i32* %38, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %39, i32* %37, !dbg !1943             ; [debug line = 111:41]
  %40 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 11, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %41 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 11, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %42 = load i32* %41, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %42, i32* %40, !dbg !1943             ; [debug line = 111:41]
  %43 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 12, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %44 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 12, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %45 = load i32* %44, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %45, i32* %43, !dbg !1943             ; [debug line = 111:41]
  %46 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 13, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %47 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 13, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %48 = load i32* %47, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %48, i32* %46, !dbg !1943             ; [debug line = 111:41]
  %49 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 14, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %50 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 14, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %51 = load i32* %50, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %51, i32* %49, !dbg !1943             ; [debug line = 111:41]
  %52 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 15, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %53 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 15, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %54 = load i32* %53, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %54, i32* %52, !dbg !1943             ; [debug line = 111:41]
  %55 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 16, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %56 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 16, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %57 = load i32* %56, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %57, i32* %55, !dbg !1943             ; [debug line = 111:41]
  %58 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 17, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %59 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 17, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %60 = load i32* %59, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %60, i32* %58, !dbg !1943             ; [debug line = 111:41]
  %61 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 18, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %62 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 18, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %63 = load i32* %62, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %63, i32* %61, !dbg !1943             ; [debug line = 111:41]
  %64 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 19, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %65 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 19, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %66 = load i32* %65, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %66, i32* %64, !dbg !1943             ; [debug line = 111:41]
  %67 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 20, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %68 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 20, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %69 = load i32* %68, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %69, i32* %67, !dbg !1943             ; [debug line = 111:41]
  %70 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 21, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %71 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 21, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %72 = load i32* %71, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %72, i32* %70, !dbg !1943             ; [debug line = 111:41]
  %73 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 22, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %74 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 22, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %75 = load i32* %74, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %75, i32* %73, !dbg !1943             ; [debug line = 111:41]
  %76 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 23, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %77 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 23, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %78 = load i32* %77, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %78, i32* %76, !dbg !1943             ; [debug line = 111:41]
  %79 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 24, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %80 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 24, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %81 = load i32* %80, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %81, i32* %79, !dbg !1943             ; [debug line = 111:41]
  %82 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 25, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %83 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 25, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %84 = load i32* %83, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %84, i32* %82, !dbg !1943             ; [debug line = 111:41]
  %85 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 26, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %86 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 26, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %87 = load i32* %86, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %87, i32* %85, !dbg !1943             ; [debug line = 111:41]
  %88 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 27, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %89 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 27, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %90 = load i32* %89, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %90, i32* %88, !dbg !1943             ; [debug line = 111:41]
  %91 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 28, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %92 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 28, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %93 = load i32* %92, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %93, i32* %91, !dbg !1943             ; [debug line = 111:41]
  %94 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 29, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %95 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 29, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %96 = load i32* %95, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %96, i32* %94, !dbg !1943             ; [debug line = 111:41]
  %97 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 30, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %98 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 30, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %99 = load i32* %98, !dbg !1943                 ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %99, i32* %97, !dbg !1943             ; [debug line = 111:41]
  %100 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 31, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %101 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 31, !dbg !1943 ; [#uses=1 type=i32*] [debug line = 111:41]
  %102 = load i32* %101, !dbg !1943               ; [#uses=1 type=i32] [debug line = 111:41]
  store i32 %102, i32* %100, !dbg !1943           ; [debug line = 111:41]
  call void @crypto_sign_ed25519_ref_fe25519_freeze(%struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !1944 ; [debug line = 112:3]
  %103 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t, i32 0, i32 0, !dbg !1945 ; [#uses=1 type=[32 x i32]*] [debug line = 113:7]
  %104 = getelementptr inbounds [32 x i32]* %103, i32 0, i64 0, !dbg !1945 ; [#uses=1 type=i32*] [debug line = 113:7]
  %105 = load i32* %104, align 4, !dbg !1945      ; [#uses=1 type=i32] [debug line = 113:7]
  %106 = call i32 @equal41(i32 %105, i32 0), !dbg !1945 ; [#uses=1 type=i32] [debug line = 113:7]
  store i32 %106, i32* %r, align 4, !dbg !1945    ; [debug line = 113:7]
  store i32 1, i32* %i, align 4, !dbg !1946       ; [debug line = 114:7]
  br label %107, !dbg !1946                       ; [debug line = 114:7]

; <label>:107                                     ; preds = %119, %0
  %108 = load i32* %i, align 4, !dbg !1946        ; [#uses=1 type=i32] [debug line = 114:7]
  %109 = icmp slt i32 %108, 32, !dbg !1946        ; [#uses=1 type=i1] [debug line = 114:7]
  br i1 %109, label %110, label %122, !dbg !1946  ; [debug line = 114:7]

; <label>:110                                     ; preds = %107
  %111 = load i32* %i, align 4, !dbg !1948        ; [#uses=1 type=i32] [debug line = 115:10]
  %112 = sext i32 %111 to i64, !dbg !1948         ; [#uses=1 type=i64] [debug line = 115:10]
  %113 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t, i32 0, i32 0, !dbg !1948 ; [#uses=1 type=[32 x i32]*] [debug line = 115:10]
  %114 = getelementptr inbounds [32 x i32]* %113, i32 0, i64 %112, !dbg !1948 ; [#uses=1 type=i32*] [debug line = 115:10]
  %115 = load i32* %114, align 4, !dbg !1948      ; [#uses=1 type=i32] [debug line = 115:10]
  %116 = call i32 @equal41(i32 %115, i32 0), !dbg !1948 ; [#uses=1 type=i32] [debug line = 115:10]
  %117 = load i32* %r, align 4, !dbg !1948        ; [#uses=1 type=i32] [debug line = 115:10]
  %118 = and i32 %117, %116, !dbg !1948           ; [#uses=1 type=i32] [debug line = 115:10]
  store i32 %118, i32* %r, align 4, !dbg !1948    ; [debug line = 115:10]
  br label %119, !dbg !1948                       ; [debug line = 115:10]

; <label>:119                                     ; preds = %110
  %120 = load i32* %i, align 4, !dbg !1949        ; [#uses=1 type=i32] [debug line = 114:16]
  %121 = add nsw i32 %120, 1, !dbg !1949          ; [#uses=1 type=i32] [debug line = 114:16]
  store i32 %121, i32* %i, align 4, !dbg !1949    ; [debug line = 114:16]
  br label %107, !dbg !1949                       ; [debug line = 114:16]

; <label>:122                                     ; preds = %107
  %123 = load i32* %r, align 4, !dbg !1950        ; [#uses=1 type=i32] [debug line = 116:3]
  ret i32 %123, !dbg !1950                        ; [debug line = 116:3]
}

; [#uses=3]
define i32 @crypto_sign_ed25519_ref_fe25519_iseq_vartime(%struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=3 type=i32*]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %t1 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t2 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1951), !dbg !1952 ; [debug line = 119:89] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !1953), !dbg !1954 ; [debug line = 119:131] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1955), !dbg !1957 ; [debug line = 121:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t1}, metadata !1958), !dbg !1959 ; [debug line = 122:35] [debug variable = t1]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1960 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 122:42]
  %5 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %t1 to i8*, !dbg !1960 ; [#uses=0 type=i8*] [debug line = 122:42]
  %6 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %4 to i8*, !dbg !1960 ; [#uses=0 type=i8*] [debug line = 122:42]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t1, i32 0, i32 0, !dbg !1960 ; [#uses=32 type=[32 x i32]*] [debug line = 122:42]
  %8 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %4, i32 0, i32 0, !dbg !1960 ; [#uses=32 type=[32 x i32]*] [debug line = 122:42]
  %9 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 0, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %10 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 0, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %11 = load i32* %10, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %11, i32* %9, !dbg !1960              ; [debug line = 122:42]
  %12 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 1, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %13 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 1, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %14 = load i32* %13, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %14, i32* %12, !dbg !1960             ; [debug line = 122:42]
  %15 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 2, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %16 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 2, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %17 = load i32* %16, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %17, i32* %15, !dbg !1960             ; [debug line = 122:42]
  %18 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 3, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %19 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 3, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %20 = load i32* %19, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %20, i32* %18, !dbg !1960             ; [debug line = 122:42]
  %21 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 4, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %22 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 4, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %23 = load i32* %22, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %23, i32* %21, !dbg !1960             ; [debug line = 122:42]
  %24 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 5, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %25 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 5, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %26 = load i32* %25, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %26, i32* %24, !dbg !1960             ; [debug line = 122:42]
  %27 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 6, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %28 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 6, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %29 = load i32* %28, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %29, i32* %27, !dbg !1960             ; [debug line = 122:42]
  %30 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 7, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %31 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 7, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %32 = load i32* %31, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %32, i32* %30, !dbg !1960             ; [debug line = 122:42]
  %33 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 8, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %34 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 8, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %35 = load i32* %34, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %35, i32* %33, !dbg !1960             ; [debug line = 122:42]
  %36 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 9, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %37 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 9, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %38 = load i32* %37, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %38, i32* %36, !dbg !1960             ; [debug line = 122:42]
  %39 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 10, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %40 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 10, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %41 = load i32* %40, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %41, i32* %39, !dbg !1960             ; [debug line = 122:42]
  %42 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 11, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %43 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 11, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %44 = load i32* %43, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %44, i32* %42, !dbg !1960             ; [debug line = 122:42]
  %45 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 12, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %46 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 12, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %47 = load i32* %46, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %47, i32* %45, !dbg !1960             ; [debug line = 122:42]
  %48 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 13, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %49 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 13, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %50 = load i32* %49, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %50, i32* %48, !dbg !1960             ; [debug line = 122:42]
  %51 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 14, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %52 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 14, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %53 = load i32* %52, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %53, i32* %51, !dbg !1960             ; [debug line = 122:42]
  %54 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 15, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %55 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 15, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %56 = load i32* %55, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %56, i32* %54, !dbg !1960             ; [debug line = 122:42]
  %57 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 16, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %58 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 16, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %59 = load i32* %58, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %59, i32* %57, !dbg !1960             ; [debug line = 122:42]
  %60 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 17, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %61 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 17, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %62 = load i32* %61, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %62, i32* %60, !dbg !1960             ; [debug line = 122:42]
  %63 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 18, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %64 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 18, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %65 = load i32* %64, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %65, i32* %63, !dbg !1960             ; [debug line = 122:42]
  %66 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 19, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %67 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 19, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %68 = load i32* %67, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %68, i32* %66, !dbg !1960             ; [debug line = 122:42]
  %69 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 20, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %70 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 20, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %71 = load i32* %70, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %71, i32* %69, !dbg !1960             ; [debug line = 122:42]
  %72 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 21, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %73 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 21, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %74 = load i32* %73, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %74, i32* %72, !dbg !1960             ; [debug line = 122:42]
  %75 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 22, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %76 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 22, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %77 = load i32* %76, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %77, i32* %75, !dbg !1960             ; [debug line = 122:42]
  %78 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 23, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %79 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 23, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %80 = load i32* %79, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %80, i32* %78, !dbg !1960             ; [debug line = 122:42]
  %81 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 24, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %82 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 24, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %83 = load i32* %82, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %83, i32* %81, !dbg !1960             ; [debug line = 122:42]
  %84 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 25, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %85 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 25, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %86 = load i32* %85, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %86, i32* %84, !dbg !1960             ; [debug line = 122:42]
  %87 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 26, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %88 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 26, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %89 = load i32* %88, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %89, i32* %87, !dbg !1960             ; [debug line = 122:42]
  %90 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 27, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %91 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 27, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %92 = load i32* %91, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %92, i32* %90, !dbg !1960             ; [debug line = 122:42]
  %93 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 28, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %94 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 28, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %95 = load i32* %94, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %95, i32* %93, !dbg !1960             ; [debug line = 122:42]
  %96 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 29, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %97 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 29, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %98 = load i32* %97, !dbg !1960                 ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %98, i32* %96, !dbg !1960             ; [debug line = 122:42]
  %99 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 30, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %100 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 30, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %101 = load i32* %100, !dbg !1960               ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %101, i32* %99, !dbg !1960            ; [debug line = 122:42]
  %102 = getelementptr inbounds [32 x i32]* %7, i32 0, i32 31, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %103 = getelementptr inbounds [32 x i32]* %8, i32 0, i32 31, !dbg !1960 ; [#uses=1 type=i32*] [debug line = 122:42]
  %104 = load i32* %103, !dbg !1960               ; [#uses=1 type=i32] [debug line = 122:42]
  store i32 %104, i32* %102, !dbg !1960           ; [debug line = 122:42]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t2}, metadata !1961), !dbg !1962 ; [debug line = 123:35] [debug variable = t2]
  %105 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !1963 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 123:42]
  %106 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %t2 to i8*, !dbg !1963 ; [#uses=0 type=i8*] [debug line = 123:42]
  %107 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %105 to i8*, !dbg !1963 ; [#uses=0 type=i8*] [debug line = 123:42]
  %108 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t2, i32 0, i32 0, !dbg !1963 ; [#uses=32 type=[32 x i32]*] [debug line = 123:42]
  %109 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %105, i32 0, i32 0, !dbg !1963 ; [#uses=32 type=[32 x i32]*] [debug line = 123:42]
  %110 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 0, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %111 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 0, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %112 = load i32* %111, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %112, i32* %110, !dbg !1963           ; [debug line = 123:42]
  %113 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 1, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %114 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 1, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %115 = load i32* %114, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %115, i32* %113, !dbg !1963           ; [debug line = 123:42]
  %116 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 2, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %117 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 2, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %118 = load i32* %117, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %118, i32* %116, !dbg !1963           ; [debug line = 123:42]
  %119 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 3, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %120 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 3, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %121 = load i32* %120, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %121, i32* %119, !dbg !1963           ; [debug line = 123:42]
  %122 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 4, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %123 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 4, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %124 = load i32* %123, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %124, i32* %122, !dbg !1963           ; [debug line = 123:42]
  %125 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 5, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %126 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 5, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %127 = load i32* %126, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %127, i32* %125, !dbg !1963           ; [debug line = 123:42]
  %128 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 6, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %129 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 6, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %130 = load i32* %129, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %130, i32* %128, !dbg !1963           ; [debug line = 123:42]
  %131 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 7, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %132 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 7, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %133 = load i32* %132, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %133, i32* %131, !dbg !1963           ; [debug line = 123:42]
  %134 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 8, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %135 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 8, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %136 = load i32* %135, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %136, i32* %134, !dbg !1963           ; [debug line = 123:42]
  %137 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 9, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %138 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 9, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %139 = load i32* %138, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %139, i32* %137, !dbg !1963           ; [debug line = 123:42]
  %140 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 10, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %141 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 10, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %142 = load i32* %141, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %142, i32* %140, !dbg !1963           ; [debug line = 123:42]
  %143 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 11, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %144 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 11, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %145 = load i32* %144, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %145, i32* %143, !dbg !1963           ; [debug line = 123:42]
  %146 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 12, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %147 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 12, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %148 = load i32* %147, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %148, i32* %146, !dbg !1963           ; [debug line = 123:42]
  %149 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 13, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %150 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 13, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %151 = load i32* %150, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %151, i32* %149, !dbg !1963           ; [debug line = 123:42]
  %152 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 14, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %153 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 14, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %154 = load i32* %153, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %154, i32* %152, !dbg !1963           ; [debug line = 123:42]
  %155 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 15, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %156 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 15, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %157 = load i32* %156, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %157, i32* %155, !dbg !1963           ; [debug line = 123:42]
  %158 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 16, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %159 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 16, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %160 = load i32* %159, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %160, i32* %158, !dbg !1963           ; [debug line = 123:42]
  %161 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 17, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %162 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 17, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %163 = load i32* %162, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %163, i32* %161, !dbg !1963           ; [debug line = 123:42]
  %164 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 18, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %165 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 18, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %166 = load i32* %165, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %166, i32* %164, !dbg !1963           ; [debug line = 123:42]
  %167 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 19, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %168 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 19, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %169 = load i32* %168, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %169, i32* %167, !dbg !1963           ; [debug line = 123:42]
  %170 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 20, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %171 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 20, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %172 = load i32* %171, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %172, i32* %170, !dbg !1963           ; [debug line = 123:42]
  %173 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 21, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %174 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 21, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %175 = load i32* %174, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %175, i32* %173, !dbg !1963           ; [debug line = 123:42]
  %176 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 22, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %177 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 22, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %178 = load i32* %177, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %178, i32* %176, !dbg !1963           ; [debug line = 123:42]
  %179 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 23, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %180 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 23, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %181 = load i32* %180, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %181, i32* %179, !dbg !1963           ; [debug line = 123:42]
  %182 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 24, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %183 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 24, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %184 = load i32* %183, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %184, i32* %182, !dbg !1963           ; [debug line = 123:42]
  %185 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 25, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %186 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 25, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %187 = load i32* %186, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %187, i32* %185, !dbg !1963           ; [debug line = 123:42]
  %188 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 26, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %189 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 26, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %190 = load i32* %189, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %190, i32* %188, !dbg !1963           ; [debug line = 123:42]
  %191 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 27, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %192 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 27, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %193 = load i32* %192, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %193, i32* %191, !dbg !1963           ; [debug line = 123:42]
  %194 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 28, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %195 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 28, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %196 = load i32* %195, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %196, i32* %194, !dbg !1963           ; [debug line = 123:42]
  %197 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 29, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %198 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 29, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %199 = load i32* %198, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %199, i32* %197, !dbg !1963           ; [debug line = 123:42]
  %200 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 30, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %201 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 30, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %202 = load i32* %201, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %202, i32* %200, !dbg !1963           ; [debug line = 123:42]
  %203 = getelementptr inbounds [32 x i32]* %108, i32 0, i32 31, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %204 = getelementptr inbounds [32 x i32]* %109, i32 0, i32 31, !dbg !1963 ; [#uses=1 type=i32*] [debug line = 123:42]
  %205 = load i32* %204, !dbg !1963               ; [#uses=1 type=i32] [debug line = 123:42]
  store i32 %205, i32* %203, !dbg !1963           ; [debug line = 123:42]
  call void @crypto_sign_ed25519_ref_fe25519_freeze(%struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !1964 ; [debug line = 124:3]
  call void @crypto_sign_ed25519_ref_fe25519_freeze(%struct.crypto_sign_ed25519_ref_fe25519* %t2), !dbg !1965 ; [debug line = 125:3]
  store i32 0, i32* %i, align 4, !dbg !1966       ; [debug line = 126:7]
  br label %206, !dbg !1966                       ; [debug line = 126:7]

; <label>:206                                     ; preds = %223, %0
  %207 = load i32* %i, align 4, !dbg !1966        ; [#uses=1 type=i32] [debug line = 126:7]
  %208 = icmp slt i32 %207, 32, !dbg !1966        ; [#uses=1 type=i1] [debug line = 126:7]
  br i1 %208, label %209, label %226, !dbg !1966  ; [debug line = 126:7]

; <label>:209                                     ; preds = %206
  %210 = load i32* %i, align 4, !dbg !1968        ; [#uses=1 type=i32] [debug line = 127:5]
  %211 = sext i32 %210 to i64, !dbg !1968         ; [#uses=1 type=i64] [debug line = 127:5]
  %212 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t1, i32 0, i32 0, !dbg !1968 ; [#uses=1 type=[32 x i32]*] [debug line = 127:5]
  %213 = getelementptr inbounds [32 x i32]* %212, i32 0, i64 %211, !dbg !1968 ; [#uses=1 type=i32*] [debug line = 127:5]
  %214 = load i32* %213, align 4, !dbg !1968      ; [#uses=1 type=i32] [debug line = 127:5]
  %215 = load i32* %i, align 4, !dbg !1968        ; [#uses=1 type=i32] [debug line = 127:5]
  %216 = sext i32 %215 to i64, !dbg !1968         ; [#uses=1 type=i64] [debug line = 127:5]
  %217 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t2, i32 0, i32 0, !dbg !1968 ; [#uses=1 type=[32 x i32]*] [debug line = 127:5]
  %218 = getelementptr inbounds [32 x i32]* %217, i32 0, i64 %216, !dbg !1968 ; [#uses=1 type=i32*] [debug line = 127:5]
  %219 = load i32* %218, align 4, !dbg !1968      ; [#uses=1 type=i32] [debug line = 127:5]
  %220 = icmp ne i32 %214, %219, !dbg !1968       ; [#uses=1 type=i1] [debug line = 127:5]
  br i1 %220, label %221, label %222, !dbg !1968  ; [debug line = 127:5]

; <label>:221                                     ; preds = %209
  store i32 0, i32* %1, !dbg !1969                ; [debug line = 127:28]
  br label %227, !dbg !1969                       ; [debug line = 127:28]

; <label>:222                                     ; preds = %209
  br label %223, !dbg !1969                       ; [debug line = 127:28]

; <label>:223                                     ; preds = %222
  %224 = load i32* %i, align 4, !dbg !1970        ; [#uses=1 type=i32] [debug line = 126:16]
  %225 = add nsw i32 %224, 1, !dbg !1970          ; [#uses=1 type=i32] [debug line = 126:16]
  store i32 %225, i32* %i, align 4, !dbg !1970    ; [debug line = 126:16]
  br label %206, !dbg !1970                       ; [debug line = 126:16]

; <label>:226                                     ; preds = %206
  store i32 1, i32* %1, !dbg !1971                ; [debug line = 128:3]
  br label %227, !dbg !1971                       ; [debug line = 128:3]

; <label>:227                                     ; preds = %226, %221
  %228 = load i32* %1, !dbg !1972                 ; [#uses=1 type=i32] [debug line = 129:1]
  ret i32 %228, !dbg !1972                        ; [debug line = 129:1]
}

; [#uses=3]
define void @crypto_sign_ed25519_ref_fe25519_cmov(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, i8 zeroext %b) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca i8, align 1                         ; [#uses=2 type=i8*]
  %i = alloca i32, align 4                        ; [#uses=7 type=i32*]
  %mask = alloca i32, align 4                     ; [#uses=4 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1973), !dbg !1974 ; [debug line = 131:76] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !1975), !dbg !1976 ; [debug line = 131:118] [debug variable = x]
  store i8 %b, i8* %3, align 1
  call void @llvm.dbg.declare(metadata !{i8* %3}, metadata !1977), !dbg !1978 ; [debug line = 131:135] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1979), !dbg !1981 ; [debug line = 133:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !1982), !dbg !1983 ; [debug line = 134:17] [debug variable = mask]
  %4 = load i8* %3, align 1, !dbg !1984           ; [#uses=1 type=i8] [debug line = 134:25]
  %5 = zext i8 %4 to i32, !dbg !1984              ; [#uses=1 type=i32] [debug line = 134:25]
  store i32 %5, i32* %mask, align 4, !dbg !1984   ; [debug line = 134:25]
  %6 = load i32* %mask, align 4, !dbg !1985       ; [#uses=1 type=i32] [debug line = 135:3]
  %7 = sub i32 0, %6, !dbg !1985                  ; [#uses=1 type=i32] [debug line = 135:3]
  store i32 %7, i32* %mask, align 4, !dbg !1985   ; [debug line = 135:3]
  store i32 0, i32* %i, align 4, !dbg !1986       ; [debug line = 136:7]
  br label %8, !dbg !1986                         ; [debug line = 136:7]

; <label>:8                                       ; preds = %34, %0
  %9 = load i32* %i, align 4, !dbg !1986          ; [#uses=1 type=i32] [debug line = 136:7]
  %10 = icmp slt i32 %9, 32, !dbg !1986           ; [#uses=1 type=i1] [debug line = 136:7]
  br i1 %10, label %11, label %37, !dbg !1986     ; [debug line = 136:7]

; <label>:11                                      ; preds = %8
  %12 = load i32* %mask, align 4, !dbg !1988      ; [#uses=1 type=i32] [debug line = 136:21]
  %13 = load i32* %i, align 4, !dbg !1988         ; [#uses=1 type=i32] [debug line = 136:21]
  %14 = sext i32 %13 to i64, !dbg !1988           ; [#uses=1 type=i64] [debug line = 136:21]
  %15 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !1988 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 136:21]
  %16 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %15, i32 0, i32 0, !dbg !1988 ; [#uses=1 type=[32 x i32]*] [debug line = 136:21]
  %17 = getelementptr inbounds [32 x i32]* %16, i32 0, i64 %14, !dbg !1988 ; [#uses=1 type=i32*] [debug line = 136:21]
  %18 = load i32* %17, align 4, !dbg !1988        ; [#uses=1 type=i32] [debug line = 136:21]
  %19 = load i32* %i, align 4, !dbg !1988         ; [#uses=1 type=i32] [debug line = 136:21]
  %20 = sext i32 %19 to i64, !dbg !1988           ; [#uses=1 type=i64] [debug line = 136:21]
  %21 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1988 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 136:21]
  %22 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %21, i32 0, i32 0, !dbg !1988 ; [#uses=1 type=[32 x i32]*] [debug line = 136:21]
  %23 = getelementptr inbounds [32 x i32]* %22, i32 0, i64 %20, !dbg !1988 ; [#uses=1 type=i32*] [debug line = 136:21]
  %24 = load i32* %23, align 4, !dbg !1988        ; [#uses=1 type=i32] [debug line = 136:21]
  %25 = xor i32 %18, %24, !dbg !1988              ; [#uses=1 type=i32] [debug line = 136:21]
  %26 = and i32 %12, %25, !dbg !1988              ; [#uses=1 type=i32] [debug line = 136:21]
  %27 = load i32* %i, align 4, !dbg !1988         ; [#uses=1 type=i32] [debug line = 136:21]
  %28 = sext i32 %27 to i64, !dbg !1988           ; [#uses=1 type=i64] [debug line = 136:21]
  %29 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1988 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 136:21]
  %30 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %29, i32 0, i32 0, !dbg !1988 ; [#uses=1 type=[32 x i32]*] [debug line = 136:21]
  %31 = getelementptr inbounds [32 x i32]* %30, i32 0, i64 %28, !dbg !1988 ; [#uses=2 type=i32*] [debug line = 136:21]
  %32 = load i32* %31, align 4, !dbg !1988        ; [#uses=1 type=i32] [debug line = 136:21]
  %33 = xor i32 %32, %26, !dbg !1988              ; [#uses=1 type=i32] [debug line = 136:21]
  store i32 %33, i32* %31, align 4, !dbg !1988    ; [debug line = 136:21]
  br label %34, !dbg !1988                        ; [debug line = 136:21]

; <label>:34                                      ; preds = %11
  %35 = load i32* %i, align 4, !dbg !1989         ; [#uses=1 type=i32] [debug line = 136:16]
  %36 = add nsw i32 %35, 1, !dbg !1989            ; [#uses=1 type=i32] [debug line = 136:16]
  store i32 %36, i32* %i, align 4, !dbg !1989     ; [debug line = 136:16]
  br label %8, !dbg !1989                         ; [debug line = 136:16]

; <label>:37                                      ; preds = %8
  ret void, !dbg !1990                            ; [debug line = 137:1]
}

; [#uses=2]
define zeroext i8 @crypto_sign_ed25519_ref_fe25519_getparity(%struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1991), !dbg !1992 ; [debug line = 139:96] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !1993), !dbg !1995 ; [debug line = 141:35] [debug variable = t]
  %2 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !1996 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 141:41]
  %3 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %t to i8*, !dbg !1996 ; [#uses=0 type=i8*] [debug line = 141:41]
  %4 = bitcast %struct.crypto_sign_ed25519_ref_fe25519* %2 to i8*, !dbg !1996 ; [#uses=0 type=i8*] [debug line = 141:41]
  %5 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t, i32 0, i32 0, !dbg !1996 ; [#uses=32 type=[32 x i32]*] [debug line = 141:41]
  %6 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %2, i32 0, i32 0, !dbg !1996 ; [#uses=32 type=[32 x i32]*] [debug line = 141:41]
  %7 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 0, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %8 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 0, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %9 = load i32* %8, !dbg !1996                   ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %9, i32* %7, !dbg !1996               ; [debug line = 141:41]
  %10 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 1, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %11 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 1, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %12 = load i32* %11, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %12, i32* %10, !dbg !1996             ; [debug line = 141:41]
  %13 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 2, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %14 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 2, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %15 = load i32* %14, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %15, i32* %13, !dbg !1996             ; [debug line = 141:41]
  %16 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 3, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %17 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 3, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %18 = load i32* %17, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %18, i32* %16, !dbg !1996             ; [debug line = 141:41]
  %19 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 4, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %20 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 4, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %21 = load i32* %20, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %21, i32* %19, !dbg !1996             ; [debug line = 141:41]
  %22 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 5, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %23 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 5, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %24 = load i32* %23, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %24, i32* %22, !dbg !1996             ; [debug line = 141:41]
  %25 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 6, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %26 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 6, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %27 = load i32* %26, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %27, i32* %25, !dbg !1996             ; [debug line = 141:41]
  %28 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 7, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %29 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 7, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %30 = load i32* %29, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %30, i32* %28, !dbg !1996             ; [debug line = 141:41]
  %31 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 8, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %32 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 8, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %33 = load i32* %32, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %33, i32* %31, !dbg !1996             ; [debug line = 141:41]
  %34 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 9, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %35 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 9, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %36 = load i32* %35, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %36, i32* %34, !dbg !1996             ; [debug line = 141:41]
  %37 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 10, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %38 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 10, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %39 = load i32* %38, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %39, i32* %37, !dbg !1996             ; [debug line = 141:41]
  %40 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 11, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %41 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 11, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %42 = load i32* %41, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %42, i32* %40, !dbg !1996             ; [debug line = 141:41]
  %43 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 12, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %44 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 12, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %45 = load i32* %44, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %45, i32* %43, !dbg !1996             ; [debug line = 141:41]
  %46 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 13, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %47 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 13, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %48 = load i32* %47, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %48, i32* %46, !dbg !1996             ; [debug line = 141:41]
  %49 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 14, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %50 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 14, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %51 = load i32* %50, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %51, i32* %49, !dbg !1996             ; [debug line = 141:41]
  %52 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 15, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %53 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 15, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %54 = load i32* %53, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %54, i32* %52, !dbg !1996             ; [debug line = 141:41]
  %55 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 16, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %56 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 16, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %57 = load i32* %56, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %57, i32* %55, !dbg !1996             ; [debug line = 141:41]
  %58 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 17, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %59 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 17, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %60 = load i32* %59, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %60, i32* %58, !dbg !1996             ; [debug line = 141:41]
  %61 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 18, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %62 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 18, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %63 = load i32* %62, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %63, i32* %61, !dbg !1996             ; [debug line = 141:41]
  %64 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 19, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %65 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 19, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %66 = load i32* %65, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %66, i32* %64, !dbg !1996             ; [debug line = 141:41]
  %67 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 20, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %68 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 20, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %69 = load i32* %68, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %69, i32* %67, !dbg !1996             ; [debug line = 141:41]
  %70 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 21, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %71 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 21, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %72 = load i32* %71, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %72, i32* %70, !dbg !1996             ; [debug line = 141:41]
  %73 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 22, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %74 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 22, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %75 = load i32* %74, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %75, i32* %73, !dbg !1996             ; [debug line = 141:41]
  %76 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 23, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %77 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 23, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %78 = load i32* %77, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %78, i32* %76, !dbg !1996             ; [debug line = 141:41]
  %79 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 24, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %80 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 24, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %81 = load i32* %80, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %81, i32* %79, !dbg !1996             ; [debug line = 141:41]
  %82 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 25, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %83 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 25, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %84 = load i32* %83, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %84, i32* %82, !dbg !1996             ; [debug line = 141:41]
  %85 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 26, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %86 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 26, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %87 = load i32* %86, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %87, i32* %85, !dbg !1996             ; [debug line = 141:41]
  %88 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 27, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %89 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 27, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %90 = load i32* %89, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %90, i32* %88, !dbg !1996             ; [debug line = 141:41]
  %91 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 28, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %92 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 28, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %93 = load i32* %92, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %93, i32* %91, !dbg !1996             ; [debug line = 141:41]
  %94 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 29, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %95 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 29, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %96 = load i32* %95, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %96, i32* %94, !dbg !1996             ; [debug line = 141:41]
  %97 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 30, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %98 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 30, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %99 = load i32* %98, !dbg !1996                 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %99, i32* %97, !dbg !1996             ; [debug line = 141:41]
  %100 = getelementptr inbounds [32 x i32]* %5, i32 0, i32 31, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %101 = getelementptr inbounds [32 x i32]* %6, i32 0, i32 31, !dbg !1996 ; [#uses=1 type=i32*] [debug line = 141:41]
  %102 = load i32* %101, !dbg !1996               ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %102, i32* %100, !dbg !1996           ; [debug line = 141:41]
  call void @crypto_sign_ed25519_ref_fe25519_freeze(%struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !1997 ; [debug line = 142:3]
  %103 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t, i32 0, i32 0, !dbg !1998 ; [#uses=1 type=[32 x i32]*] [debug line = 143:3]
  %104 = getelementptr inbounds [32 x i32]* %103, i32 0, i64 0, !dbg !1998 ; [#uses=1 type=i32*] [debug line = 143:3]
  %105 = load i32* %104, align 4, !dbg !1998      ; [#uses=1 type=i32] [debug line = 143:3]
  %106 = and i32 %105, 1, !dbg !1998              ; [#uses=1 type=i32] [debug line = 143:3]
  %107 = trunc i32 %106 to i8, !dbg !1998         ; [#uses=1 type=i8] [debug line = 143:3]
  ret i8 %107, !dbg !1998                         ; [debug line = 143:3]
}

; [#uses=4]
define void @crypto_sign_ed25519_ref_fe25519_setone(%struct.crypto_sign_ed25519_ref_fe25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=5 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !1999), !dbg !2000 ; [debug line = 146:78] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2001), !dbg !2003 ; [debug line = 148:7] [debug variable = i]
  %2 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2004 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 149:3]
  %3 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %2, i32 0, i32 0, !dbg !2004 ; [#uses=1 type=[32 x i32]*] [debug line = 149:3]
  %4 = getelementptr inbounds [32 x i32]* %3, i32 0, i64 0, !dbg !2004 ; [#uses=1 type=i32*] [debug line = 149:3]
  store i32 1, i32* %4, align 4, !dbg !2004       ; [debug line = 149:3]
  store i32 1, i32* %i, align 4, !dbg !2005       ; [debug line = 150:7]
  br label %5, !dbg !2005                         ; [debug line = 150:7]

; <label>:5                                       ; preds = %14, %0
  %6 = load i32* %i, align 4, !dbg !2005          ; [#uses=1 type=i32] [debug line = 150:7]
  %7 = icmp slt i32 %6, 32, !dbg !2005            ; [#uses=1 type=i1] [debug line = 150:7]
  br i1 %7, label %8, label %17, !dbg !2005       ; [debug line = 150:7]

; <label>:8                                       ; preds = %5
  %9 = load i32* %i, align 4, !dbg !2007          ; [#uses=1 type=i32] [debug line = 150:21]
  %10 = sext i32 %9 to i64, !dbg !2007            ; [#uses=1 type=i64] [debug line = 150:21]
  %11 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2007 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 150:21]
  %12 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %11, i32 0, i32 0, !dbg !2007 ; [#uses=1 type=[32 x i32]*] [debug line = 150:21]
  %13 = getelementptr inbounds [32 x i32]* %12, i32 0, i64 %10, !dbg !2007 ; [#uses=1 type=i32*] [debug line = 150:21]
  store i32 0, i32* %13, align 4, !dbg !2007      ; [debug line = 150:21]
  br label %14, !dbg !2007                        ; [debug line = 150:21]

; <label>:14                                      ; preds = %8
  %15 = load i32* %i, align 4, !dbg !2008         ; [#uses=1 type=i32] [debug line = 150:16]
  %16 = add nsw i32 %15, 1, !dbg !2008            ; [#uses=1 type=i32] [debug line = 150:16]
  store i32 %16, i32* %i, align 4, !dbg !2008     ; [debug line = 150:16]
  br label %5, !dbg !2008                         ; [debug line = 150:16]

; <label>:17                                      ; preds = %5
  ret void, !dbg !2009                            ; [debug line = 151:1]
}

; [#uses=3]
define void @crypto_sign_ed25519_ref_fe25519_setzero(%struct.crypto_sign_ed25519_ref_fe25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=5 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2010), !dbg !2011 ; [debug line = 153:79] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2012), !dbg !2014 ; [debug line = 155:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !2015       ; [debug line = 156:7]
  br label %2, !dbg !2015                         ; [debug line = 156:7]

; <label>:2                                       ; preds = %11, %0
  %3 = load i32* %i, align 4, !dbg !2015          ; [#uses=1 type=i32] [debug line = 156:7]
  %4 = icmp slt i32 %3, 32, !dbg !2015            ; [#uses=1 type=i1] [debug line = 156:7]
  br i1 %4, label %5, label %14, !dbg !2015       ; [debug line = 156:7]

; <label>:5                                       ; preds = %2
  %6 = load i32* %i, align 4, !dbg !2017          ; [#uses=1 type=i32] [debug line = 156:21]
  %7 = sext i32 %6 to i64, !dbg !2017             ; [#uses=1 type=i64] [debug line = 156:21]
  %8 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2017 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 156:21]
  %9 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %8, i32 0, i32 0, !dbg !2017 ; [#uses=1 type=[32 x i32]*] [debug line = 156:21]
  %10 = getelementptr inbounds [32 x i32]* %9, i32 0, i64 %7, !dbg !2017 ; [#uses=1 type=i32*] [debug line = 156:21]
  store i32 0, i32* %10, align 4, !dbg !2017      ; [debug line = 156:21]
  br label %11, !dbg !2017                        ; [debug line = 156:21]

; <label>:11                                      ; preds = %5
  %12 = load i32* %i, align 4, !dbg !2018         ; [#uses=1 type=i32] [debug line = 156:16]
  %13 = add nsw i32 %12, 1, !dbg !2018            ; [#uses=1 type=i32] [debug line = 156:16]
  store i32 %13, i32* %i, align 4, !dbg !2018     ; [debug line = 156:16]
  br label %2, !dbg !2018                         ; [debug line = 156:16]

; <label>:14                                      ; preds = %2
  ret void, !dbg !2019                            ; [debug line = 157:1]
}

; [#uses=3]
define void @crypto_sign_ed25519_ref_fe25519_neg(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %i = alloca i32, align 4                        ; [#uses=6 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2020), !dbg !2021 ; [debug line = 159:75] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2022), !dbg !2023 ; [debug line = 159:117] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !2024), !dbg !2026 ; [debug line = 161:35] [debug variable = t]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2027), !dbg !2028 ; [debug line = 162:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !2029       ; [debug line = 163:7]
  br label %3, !dbg !2029                         ; [debug line = 163:7]

; <label>:3                                       ; preds = %17, %0
  %4 = load i32* %i, align 4, !dbg !2029          ; [#uses=1 type=i32] [debug line = 163:7]
  %5 = icmp slt i32 %4, 32, !dbg !2029            ; [#uses=1 type=i1] [debug line = 163:7]
  br i1 %5, label %6, label %20, !dbg !2029       ; [debug line = 163:7]

; <label>:6                                       ; preds = %3
  %7 = load i32* %i, align 4, !dbg !2031          ; [#uses=1 type=i32] [debug line = 163:21]
  %8 = sext i32 %7 to i64, !dbg !2031             ; [#uses=1 type=i64] [debug line = 163:21]
  %9 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2031 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 163:21]
  %10 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %9, i32 0, i32 0, !dbg !2031 ; [#uses=1 type=[32 x i32]*] [debug line = 163:21]
  %11 = getelementptr inbounds [32 x i32]* %10, i32 0, i64 %8, !dbg !2031 ; [#uses=1 type=i32*] [debug line = 163:21]
  %12 = load i32* %11, align 4, !dbg !2031        ; [#uses=1 type=i32] [debug line = 163:21]
  %13 = load i32* %i, align 4, !dbg !2031         ; [#uses=1 type=i32] [debug line = 163:21]
  %14 = sext i32 %13 to i64, !dbg !2031           ; [#uses=1 type=i64] [debug line = 163:21]
  %15 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %t, i32 0, i32 0, !dbg !2031 ; [#uses=1 type=[32 x i32]*] [debug line = 163:21]
  %16 = getelementptr inbounds [32 x i32]* %15, i32 0, i64 %14, !dbg !2031 ; [#uses=1 type=i32*] [debug line = 163:21]
  store i32 %12, i32* %16, align 4, !dbg !2031    ; [debug line = 163:21]
  br label %17, !dbg !2031                        ; [debug line = 163:21]

; <label>:17                                      ; preds = %6
  %18 = load i32* %i, align 4, !dbg !2032         ; [#uses=1 type=i32] [debug line = 163:16]
  %19 = add nsw i32 %18, 1, !dbg !2032            ; [#uses=1 type=i32] [debug line = 163:16]
  store i32 %19, i32* %i, align 4, !dbg !2032     ; [debug line = 163:16]
  br label %3, !dbg !2032                         ; [debug line = 163:16]

; <label>:20                                      ; preds = %3
  %21 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2033 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 164:3]
  call void @crypto_sign_ed25519_ref_fe25519_setzero(%struct.crypto_sign_ed25519_ref_fe25519* %21), !dbg !2033 ; [debug line = 164:3]
  %22 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2034 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:3]
  %23 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2034 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 165:3]
  call void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %22, %struct.crypto_sign_ed25519_ref_fe25519* %23, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2034 ; [debug line = 165:3]
  ret void, !dbg !2035                            ; [debug line = 166:1]
}

; [#uses=14]
define void @crypto_sign_ed25519_ref_fe25519_sub(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=13 type=i32*]
  %t = alloca [32 x i32], align 16                ; [#uses=4 type=[32 x i32]*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2036), !dbg !2037 ; [debug line = 175:75] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2038), !dbg !2039 ; [debug line = 175:117] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !2040), !dbg !2041 ; [debug line = 175:159] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2042), !dbg !2044 ; [debug line = 177:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t}, metadata !2045), !dbg !2046 ; [debug line = 178:17] [debug variable = t]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2047 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 179:3]
  %5 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %4, i32 0, i32 0, !dbg !2047 ; [#uses=1 type=[32 x i32]*] [debug line = 179:3]
  %6 = getelementptr inbounds [32 x i32]* %5, i32 0, i64 0, !dbg !2047 ; [#uses=1 type=i32*] [debug line = 179:3]
  %7 = load i32* %6, align 4, !dbg !2047          ; [#uses=1 type=i32] [debug line = 179:3]
  %8 = add i32 %7, 474, !dbg !2047                ; [#uses=1 type=i32] [debug line = 179:3]
  %9 = getelementptr inbounds [32 x i32]* %t, i32 0, i64 0, !dbg !2047 ; [#uses=1 type=i32*] [debug line = 179:3]
  store i32 %8, i32* %9, align 4, !dbg !2047      ; [debug line = 179:3]
  %10 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2048 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 180:3]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %10, i32 0, i32 0, !dbg !2048 ; [#uses=1 type=[32 x i32]*] [debug line = 180:3]
  %12 = getelementptr inbounds [32 x i32]* %11, i32 0, i64 31, !dbg !2048 ; [#uses=1 type=i32*] [debug line = 180:3]
  %13 = load i32* %12, align 4, !dbg !2048        ; [#uses=1 type=i32] [debug line = 180:3]
  %14 = add i32 %13, 254, !dbg !2048              ; [#uses=1 type=i32] [debug line = 180:3]
  %15 = getelementptr inbounds [32 x i32]* %t, i32 0, i64 31, !dbg !2048 ; [#uses=1 type=i32*] [debug line = 180:3]
  store i32 %14, i32* %15, align 4, !dbg !2048    ; [debug line = 180:3]
  store i32 1, i32* %i, align 4, !dbg !2049       ; [debug line = 181:7]
  br label %16, !dbg !2049                        ; [debug line = 181:7]

; <label>:16                                      ; preds = %30, %0
  %17 = load i32* %i, align 4, !dbg !2049         ; [#uses=1 type=i32] [debug line = 181:7]
  %18 = icmp slt i32 %17, 31, !dbg !2049          ; [#uses=1 type=i1] [debug line = 181:7]
  br i1 %18, label %19, label %33, !dbg !2049     ; [debug line = 181:7]

; <label>:19                                      ; preds = %16
  %20 = load i32* %i, align 4, !dbg !2051         ; [#uses=1 type=i32] [debug line = 181:21]
  %21 = sext i32 %20 to i64, !dbg !2051           ; [#uses=1 type=i64] [debug line = 181:21]
  %22 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2051 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 181:21]
  %23 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %22, i32 0, i32 0, !dbg !2051 ; [#uses=1 type=[32 x i32]*] [debug line = 181:21]
  %24 = getelementptr inbounds [32 x i32]* %23, i32 0, i64 %21, !dbg !2051 ; [#uses=1 type=i32*] [debug line = 181:21]
  %25 = load i32* %24, align 4, !dbg !2051        ; [#uses=1 type=i32] [debug line = 181:21]
  %26 = add i32 %25, 510, !dbg !2051              ; [#uses=1 type=i32] [debug line = 181:21]
  %27 = load i32* %i, align 4, !dbg !2051         ; [#uses=1 type=i32] [debug line = 181:21]
  %28 = sext i32 %27 to i64, !dbg !2051           ; [#uses=1 type=i64] [debug line = 181:21]
  %29 = getelementptr inbounds [32 x i32]* %t, i32 0, i64 %28, !dbg !2051 ; [#uses=1 type=i32*] [debug line = 181:21]
  store i32 %26, i32* %29, align 4, !dbg !2051    ; [debug line = 181:21]
  br label %30, !dbg !2051                        ; [debug line = 181:21]

; <label>:30                                      ; preds = %19
  %31 = load i32* %i, align 4, !dbg !2052         ; [#uses=1 type=i32] [debug line = 181:16]
  %32 = add nsw i32 %31, 1, !dbg !2052            ; [#uses=1 type=i32] [debug line = 181:16]
  store i32 %32, i32* %i, align 4, !dbg !2052     ; [debug line = 181:16]
  br label %16, !dbg !2052                        ; [debug line = 181:16]

; <label>:33                                      ; preds = %16
  store i32 0, i32* %i, align 4, !dbg !2053       ; [debug line = 182:7]
  br label %34, !dbg !2053                        ; [debug line = 182:7]

; <label>:34                                      ; preds = %54, %33
  %35 = load i32* %i, align 4, !dbg !2053         ; [#uses=1 type=i32] [debug line = 182:7]
  %36 = icmp slt i32 %35, 32, !dbg !2053          ; [#uses=1 type=i1] [debug line = 182:7]
  br i1 %36, label %37, label %57, !dbg !2053     ; [debug line = 182:7]

; <label>:37                                      ; preds = %34
  %38 = load i32* %i, align 4, !dbg !2055         ; [#uses=1 type=i32] [debug line = 182:21]
  %39 = sext i32 %38 to i64, !dbg !2055           ; [#uses=1 type=i64] [debug line = 182:21]
  %40 = getelementptr inbounds [32 x i32]* %t, i32 0, i64 %39, !dbg !2055 ; [#uses=1 type=i32*] [debug line = 182:21]
  %41 = load i32* %40, align 4, !dbg !2055        ; [#uses=1 type=i32] [debug line = 182:21]
  %42 = load i32* %i, align 4, !dbg !2055         ; [#uses=1 type=i32] [debug line = 182:21]
  %43 = sext i32 %42 to i64, !dbg !2055           ; [#uses=1 type=i64] [debug line = 182:21]
  %44 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !2055 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 182:21]
  %45 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %44, i32 0, i32 0, !dbg !2055 ; [#uses=1 type=[32 x i32]*] [debug line = 182:21]
  %46 = getelementptr inbounds [32 x i32]* %45, i32 0, i64 %43, !dbg !2055 ; [#uses=1 type=i32*] [debug line = 182:21]
  %47 = load i32* %46, align 4, !dbg !2055        ; [#uses=1 type=i32] [debug line = 182:21]
  %48 = sub i32 %41, %47, !dbg !2055              ; [#uses=1 type=i32] [debug line = 182:21]
  %49 = load i32* %i, align 4, !dbg !2055         ; [#uses=1 type=i32] [debug line = 182:21]
  %50 = sext i32 %49 to i64, !dbg !2055           ; [#uses=1 type=i64] [debug line = 182:21]
  %51 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2055 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 182:21]
  %52 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %51, i32 0, i32 0, !dbg !2055 ; [#uses=1 type=[32 x i32]*] [debug line = 182:21]
  %53 = getelementptr inbounds [32 x i32]* %52, i32 0, i64 %50, !dbg !2055 ; [#uses=1 type=i32*] [debug line = 182:21]
  store i32 %48, i32* %53, align 4, !dbg !2055    ; [debug line = 182:21]
  br label %54, !dbg !2055                        ; [debug line = 182:21]

; <label>:54                                      ; preds = %37
  %55 = load i32* %i, align 4, !dbg !2056         ; [#uses=1 type=i32] [debug line = 182:16]
  %56 = add nsw i32 %55, 1, !dbg !2056            ; [#uses=1 type=i32] [debug line = 182:16]
  store i32 %56, i32* %i, align 4, !dbg !2056     ; [debug line = 182:16]
  br label %34, !dbg !2056                        ; [debug line = 182:16]

; <label>:57                                      ; preds = %34
  %58 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2057 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 183:3]
  call void @reduce_add_sub64(%struct.crypto_sign_ed25519_ref_fe25519* %58), !dbg !2057 ; [debug line = 183:3]
  ret void, !dbg !2058                            ; [debug line = 184:1]
}

; [#uses=14]
define void @crypto_sign_ed25519_ref_fe25519_add(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=7 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2059), !dbg !2060 ; [debug line = 168:75] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2061), !dbg !2062 ; [debug line = 168:117] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !2063), !dbg !2064 ; [debug line = 168:159] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2065), !dbg !2067 ; [debug line = 170:7] [debug variable = i]
  store i32 0, i32* %i, align 4, !dbg !2068       ; [debug line = 171:7]
  br label %4, !dbg !2068                         ; [debug line = 171:7]

; <label>:4                                       ; preds = %26, %0
  %5 = load i32* %i, align 4, !dbg !2068          ; [#uses=1 type=i32] [debug line = 171:7]
  %6 = icmp slt i32 %5, 32, !dbg !2068            ; [#uses=1 type=i1] [debug line = 171:7]
  br i1 %6, label %7, label %29, !dbg !2068       ; [debug line = 171:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !2070          ; [#uses=1 type=i32] [debug line = 171:21]
  %9 = sext i32 %8 to i64, !dbg !2070             ; [#uses=1 type=i64] [debug line = 171:21]
  %10 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2070 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 171:21]
  %11 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %10, i32 0, i32 0, !dbg !2070 ; [#uses=1 type=[32 x i32]*] [debug line = 171:21]
  %12 = getelementptr inbounds [32 x i32]* %11, i32 0, i64 %9, !dbg !2070 ; [#uses=1 type=i32*] [debug line = 171:21]
  %13 = load i32* %12, align 4, !dbg !2070        ; [#uses=1 type=i32] [debug line = 171:21]
  %14 = load i32* %i, align 4, !dbg !2070         ; [#uses=1 type=i32] [debug line = 171:21]
  %15 = sext i32 %14 to i64, !dbg !2070           ; [#uses=1 type=i64] [debug line = 171:21]
  %16 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !2070 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 171:21]
  %17 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %16, i32 0, i32 0, !dbg !2070 ; [#uses=1 type=[32 x i32]*] [debug line = 171:21]
  %18 = getelementptr inbounds [32 x i32]* %17, i32 0, i64 %15, !dbg !2070 ; [#uses=1 type=i32*] [debug line = 171:21]
  %19 = load i32* %18, align 4, !dbg !2070        ; [#uses=1 type=i32] [debug line = 171:21]
  %20 = add i32 %13, %19, !dbg !2070              ; [#uses=1 type=i32] [debug line = 171:21]
  %21 = load i32* %i, align 4, !dbg !2070         ; [#uses=1 type=i32] [debug line = 171:21]
  %22 = sext i32 %21 to i64, !dbg !2070           ; [#uses=1 type=i64] [debug line = 171:21]
  %23 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2070 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 171:21]
  %24 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %23, i32 0, i32 0, !dbg !2070 ; [#uses=1 type=[32 x i32]*] [debug line = 171:21]
  %25 = getelementptr inbounds [32 x i32]* %24, i32 0, i64 %22, !dbg !2070 ; [#uses=1 type=i32*] [debug line = 171:21]
  store i32 %20, i32* %25, align 4, !dbg !2070    ; [debug line = 171:21]
  br label %26, !dbg !2070                        ; [debug line = 171:21]

; <label>:26                                      ; preds = %7
  %27 = load i32* %i, align 4, !dbg !2071         ; [#uses=1 type=i32] [debug line = 171:16]
  %28 = add nsw i32 %27, 1, !dbg !2071            ; [#uses=1 type=i32] [debug line = 171:16]
  store i32 %28, i32* %i, align 4, !dbg !2071     ; [debug line = 171:16]
  br label %4, !dbg !2071                         ; [debug line = 171:16]

; <label>:29                                      ; preds = %4
  %30 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2072 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 172:3]
  call void @reduce_add_sub64(%struct.crypto_sign_ed25519_ref_fe25519* %30), !dbg !2072 ; [debug line = 172:3]
  ret void, !dbg !2073                            ; [debug line = 173:1]
}

; [#uses=2]
define internal void @reduce_add_sub64(%struct.crypto_sign_ed25519_ref_fe25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=7 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %t = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %i = alloca i32, align 4                        ; [#uses=7 type=i32*]
  %rep = alloca i32, align 4                      ; [#uses=4 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2074), !dbg !2075 ; [debug line = 33:61] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{i32* %t}, metadata !2076), !dbg !2078 ; [debug line = 35:17] [debug variable = t]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2079), !dbg !2080 ; [debug line = 36:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %rep}, metadata !2081), !dbg !2082 ; [debug line = 36:9] [debug variable = rep]
  store i32 0, i32* %rep, align 4, !dbg !2083     ; [debug line = 38:7]
  br label %2, !dbg !2083                         ; [debug line = 38:7]

; <label>:2                                       ; preds = %55, %0
  %3 = load i32* %rep, align 4, !dbg !2083        ; [#uses=1 type=i32] [debug line = 38:7]
  %4 = icmp slt i32 %3, 4, !dbg !2083             ; [#uses=1 type=i1] [debug line = 38:7]
  br i1 %4, label %5, label %58, !dbg !2083       ; [debug line = 38:7]

; <label>:5                                       ; preds = %2
  %6 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2085 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 40:5]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %6, i32 0, i32 0, !dbg !2085 ; [#uses=1 type=[32 x i32]*] [debug line = 40:5]
  %8 = getelementptr inbounds [32 x i32]* %7, i32 0, i64 31, !dbg !2085 ; [#uses=1 type=i32*] [debug line = 40:5]
  %9 = load i32* %8, align 4, !dbg !2085          ; [#uses=1 type=i32] [debug line = 40:5]
  %10 = lshr i32 %9, 7, !dbg !2085                ; [#uses=1 type=i32] [debug line = 40:5]
  store i32 %10, i32* %t, align 4, !dbg !2085     ; [debug line = 40:5]
  %11 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2087 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 41:5]
  %12 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %11, i32 0, i32 0, !dbg !2087 ; [#uses=1 type=[32 x i32]*] [debug line = 41:5]
  %13 = getelementptr inbounds [32 x i32]* %12, i32 0, i64 31, !dbg !2087 ; [#uses=2 type=i32*] [debug line = 41:5]
  %14 = load i32* %13, align 4, !dbg !2087        ; [#uses=1 type=i32] [debug line = 41:5]
  %15 = and i32 %14, 127, !dbg !2087              ; [#uses=1 type=i32] [debug line = 41:5]
  store i32 %15, i32* %13, align 4, !dbg !2087    ; [debug line = 41:5]
  %16 = load i32* %t, align 4, !dbg !2088         ; [#uses=1 type=i32] [debug line = 42:9]
  %17 = call i32 @times19(i32 %16), !dbg !2088    ; [#uses=1 type=i32] [debug line = 42:9]
  store i32 %17, i32* %t, align 4, !dbg !2088     ; [debug line = 42:9]
  %18 = load i32* %t, align 4, !dbg !2089         ; [#uses=1 type=i32] [debug line = 43:5]
  %19 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2089 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 43:5]
  %20 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %19, i32 0, i32 0, !dbg !2089 ; [#uses=1 type=[32 x i32]*] [debug line = 43:5]
  %21 = getelementptr inbounds [32 x i32]* %20, i32 0, i64 0, !dbg !2089 ; [#uses=2 type=i32*] [debug line = 43:5]
  %22 = load i32* %21, align 4, !dbg !2089        ; [#uses=1 type=i32] [debug line = 43:5]
  %23 = add i32 %22, %18, !dbg !2089              ; [#uses=1 type=i32] [debug line = 43:5]
  store i32 %23, i32* %21, align 4, !dbg !2089    ; [debug line = 43:5]
  store i32 0, i32* %i, align 4, !dbg !2090       ; [debug line = 44:9]
  br label %24, !dbg !2090                        ; [debug line = 44:9]

; <label>:24                                      ; preds = %51, %5
  %25 = load i32* %i, align 4, !dbg !2090         ; [#uses=1 type=i32] [debug line = 44:9]
  %26 = icmp slt i32 %25, 31, !dbg !2090          ; [#uses=1 type=i1] [debug line = 44:9]
  br i1 %26, label %27, label %54, !dbg !2090     ; [debug line = 44:9]

; <label>:27                                      ; preds = %24
  %28 = load i32* %i, align 4, !dbg !2092         ; [#uses=1 type=i32] [debug line = 46:7]
  %29 = sext i32 %28 to i64, !dbg !2092           ; [#uses=1 type=i64] [debug line = 46:7]
  %30 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2092 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 46:7]
  %31 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %30, i32 0, i32 0, !dbg !2092 ; [#uses=1 type=[32 x i32]*] [debug line = 46:7]
  %32 = getelementptr inbounds [32 x i32]* %31, i32 0, i64 %29, !dbg !2092 ; [#uses=1 type=i32*] [debug line = 46:7]
  %33 = load i32* %32, align 4, !dbg !2092        ; [#uses=1 type=i32] [debug line = 46:7]
  %34 = lshr i32 %33, 8, !dbg !2092               ; [#uses=1 type=i32] [debug line = 46:7]
  store i32 %34, i32* %t, align 4, !dbg !2092     ; [debug line = 46:7]
  %35 = load i32* %t, align 4, !dbg !2094         ; [#uses=1 type=i32] [debug line = 47:7]
  %36 = load i32* %i, align 4, !dbg !2094         ; [#uses=1 type=i32] [debug line = 47:7]
  %37 = add nsw i32 %36, 1, !dbg !2094            ; [#uses=1 type=i32] [debug line = 47:7]
  %38 = sext i32 %37 to i64, !dbg !2094           ; [#uses=1 type=i64] [debug line = 47:7]
  %39 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2094 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 47:7]
  %40 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %39, i32 0, i32 0, !dbg !2094 ; [#uses=1 type=[32 x i32]*] [debug line = 47:7]
  %41 = getelementptr inbounds [32 x i32]* %40, i32 0, i64 %38, !dbg !2094 ; [#uses=2 type=i32*] [debug line = 47:7]
  %42 = load i32* %41, align 4, !dbg !2094        ; [#uses=1 type=i32] [debug line = 47:7]
  %43 = add i32 %42, %35, !dbg !2094              ; [#uses=1 type=i32] [debug line = 47:7]
  store i32 %43, i32* %41, align 4, !dbg !2094    ; [debug line = 47:7]
  %44 = load i32* %i, align 4, !dbg !2095         ; [#uses=1 type=i32] [debug line = 48:7]
  %45 = sext i32 %44 to i64, !dbg !2095           ; [#uses=1 type=i64] [debug line = 48:7]
  %46 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2095 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 48:7]
  %47 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %46, i32 0, i32 0, !dbg !2095 ; [#uses=1 type=[32 x i32]*] [debug line = 48:7]
  %48 = getelementptr inbounds [32 x i32]* %47, i32 0, i64 %45, !dbg !2095 ; [#uses=2 type=i32*] [debug line = 48:7]
  %49 = load i32* %48, align 4, !dbg !2095        ; [#uses=1 type=i32] [debug line = 48:7]
  %50 = and i32 %49, 255, !dbg !2095              ; [#uses=1 type=i32] [debug line = 48:7]
  store i32 %50, i32* %48, align 4, !dbg !2095    ; [debug line = 48:7]
  br label %51, !dbg !2096                        ; [debug line = 49:5]

; <label>:51                                      ; preds = %27
  %52 = load i32* %i, align 4, !dbg !2097         ; [#uses=1 type=i32] [debug line = 44:18]
  %53 = add nsw i32 %52, 1, !dbg !2097            ; [#uses=1 type=i32] [debug line = 44:18]
  store i32 %53, i32* %i, align 4, !dbg !2097     ; [debug line = 44:18]
  br label %24, !dbg !2097                        ; [debug line = 44:18]

; <label>:54                                      ; preds = %24
  br label %55, !dbg !2098                        ; [debug line = 50:3]

; <label>:55                                      ; preds = %54
  %56 = load i32* %rep, align 4, !dbg !2099       ; [#uses=1 type=i32] [debug line = 38:19]
  %57 = add nsw i32 %56, 1, !dbg !2099            ; [#uses=1 type=i32] [debug line = 38:19]
  store i32 %57, i32* %rep, align 4, !dbg !2099   ; [debug line = 38:19]
  br label %2, !dbg !2099                         ; [debug line = 38:19]

; <label>:58                                      ; preds = %2
  ret void, !dbg !2100                            ; [debug line = 51:1]
}

; [#uses=56]
define void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519* %y) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %3 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %i = alloca i32, align 4                        ; [#uses=18 type=i32*]
  %j = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2101), !dbg !2102 ; [debug line = 186:75] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2103), !dbg !2104 ; [debug line = 186:117] [debug variable = x]
  store %struct.crypto_sign_ed25519_ref_fe25519* %y, %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %3}, metadata !2105), !dbg !2106 ; [debug line = 186:159] [debug variable = y]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2107), !dbg !2109 ; [debug line = 188:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !2110), !dbg !2111 ; [debug line = 188:9] [debug variable = j]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !2112), !dbg !2116 ; [debug line = 189:17] [debug variable = t]
  store i32 0, i32* %i, align 4, !dbg !2117       ; [debug line = 190:7]
  br label %4, !dbg !2117                         ; [debug line = 190:7]

; <label>:4                                       ; preds = %11, %0
  %5 = load i32* %i, align 4, !dbg !2117          ; [#uses=1 type=i32] [debug line = 190:7]
  %6 = icmp slt i32 %5, 63, !dbg !2117            ; [#uses=1 type=i1] [debug line = 190:7]
  br i1 %6, label %7, label %14, !dbg !2117       ; [debug line = 190:7]

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4, !dbg !2119          ; [#uses=1 type=i32] [debug line = 190:20]
  %9 = sext i32 %8 to i64, !dbg !2119             ; [#uses=1 type=i64] [debug line = 190:20]
  %10 = getelementptr inbounds [63 x i32]* %t, i32 0, i64 %9, !dbg !2119 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %10, align 4, !dbg !2119      ; [debug line = 190:20]
  br label %11, !dbg !2119                        ; [debug line = 190:20]

; <label>:11                                      ; preds = %7
  %12 = load i32* %i, align 4, !dbg !2120         ; [#uses=1 type=i32] [debug line = 190:16]
  %13 = add nsw i32 %12, 1, !dbg !2120            ; [#uses=1 type=i32] [debug line = 190:16]
  store i32 %13, i32* %i, align 4, !dbg !2120     ; [debug line = 190:16]
  br label %4, !dbg !2120                         ; [debug line = 190:16]

; <label>:14                                      ; preds = %4
  store i32 0, i32* %i, align 4, !dbg !2121       ; [debug line = 192:7]
  br label %15, !dbg !2121                        ; [debug line = 192:7]

; <label>:15                                      ; preds = %47, %14
  %16 = load i32* %i, align 4, !dbg !2121         ; [#uses=1 type=i32] [debug line = 192:7]
  %17 = icmp slt i32 %16, 32, !dbg !2121          ; [#uses=1 type=i1] [debug line = 192:7]
  br i1 %17, label %18, label %50, !dbg !2121     ; [debug line = 192:7]

; <label>:18                                      ; preds = %15
  store i32 0, i32* %j, align 4, !dbg !2123       ; [debug line = 193:9]
  br label %19, !dbg !2123                        ; [debug line = 193:9]

; <label>:19                                      ; preds = %43, %18
  %20 = load i32* %j, align 4, !dbg !2123         ; [#uses=1 type=i32] [debug line = 193:9]
  %21 = icmp slt i32 %20, 32, !dbg !2123          ; [#uses=1 type=i1] [debug line = 193:9]
  br i1 %21, label %22, label %46, !dbg !2123     ; [debug line = 193:9]

; <label>:22                                      ; preds = %19
  %23 = load i32* %i, align 4, !dbg !2125         ; [#uses=1 type=i32] [debug line = 194:7]
  %24 = sext i32 %23 to i64, !dbg !2125           ; [#uses=1 type=i64] [debug line = 194:7]
  %25 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2125 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 194:7]
  %26 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %25, i32 0, i32 0, !dbg !2125 ; [#uses=1 type=[32 x i32]*] [debug line = 194:7]
  %27 = getelementptr inbounds [32 x i32]* %26, i32 0, i64 %24, !dbg !2125 ; [#uses=1 type=i32*] [debug line = 194:7]
  %28 = load i32* %27, align 4, !dbg !2125        ; [#uses=1 type=i32] [debug line = 194:7]
  %29 = load i32* %j, align 4, !dbg !2125         ; [#uses=1 type=i32] [debug line = 194:7]
  %30 = sext i32 %29 to i64, !dbg !2125           ; [#uses=1 type=i64] [debug line = 194:7]
  %31 = load %struct.crypto_sign_ed25519_ref_fe25519** %3, align 8, !dbg !2125 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 194:7]
  %32 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %31, i32 0, i32 0, !dbg !2125 ; [#uses=1 type=[32 x i32]*] [debug line = 194:7]
  %33 = getelementptr inbounds [32 x i32]* %32, i32 0, i64 %30, !dbg !2125 ; [#uses=1 type=i32*] [debug line = 194:7]
  %34 = load i32* %33, align 4, !dbg !2125        ; [#uses=1 type=i32] [debug line = 194:7]
  %35 = mul i32 %28, %34, !dbg !2125              ; [#uses=1 type=i32] [debug line = 194:7]
  %36 = load i32* %i, align 4, !dbg !2125         ; [#uses=1 type=i32] [debug line = 194:7]
  %37 = load i32* %j, align 4, !dbg !2125         ; [#uses=1 type=i32] [debug line = 194:7]
  %38 = add nsw i32 %36, %37, !dbg !2125          ; [#uses=1 type=i32] [debug line = 194:7]
  %39 = sext i32 %38 to i64, !dbg !2125           ; [#uses=1 type=i64] [debug line = 194:7]
  %40 = getelementptr inbounds [63 x i32]* %t, i32 0, i64 %39, !dbg !2125 ; [#uses=2 type=i32*] [debug line = 194:7]
  %41 = load i32* %40, align 4, !dbg !2125        ; [#uses=1 type=i32] [debug line = 194:7]
  %42 = add i32 %41, %35, !dbg !2125              ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %42, i32* %40, align 4, !dbg !2125    ; [debug line = 194:7]
  br label %43, !dbg !2125                        ; [debug line = 194:7]

; <label>:43                                      ; preds = %22
  %44 = load i32* %j, align 4, !dbg !2126         ; [#uses=1 type=i32] [debug line = 193:18]
  %45 = add nsw i32 %44, 1, !dbg !2126            ; [#uses=1 type=i32] [debug line = 193:18]
  store i32 %45, i32* %j, align 4, !dbg !2126     ; [debug line = 193:18]
  br label %19, !dbg !2126                        ; [debug line = 193:18]

; <label>:46                                      ; preds = %19
  br label %47, !dbg !2127                        ; [debug line = 194:33]

; <label>:47                                      ; preds = %46
  %48 = load i32* %i, align 4, !dbg !2128         ; [#uses=1 type=i32] [debug line = 192:16]
  %49 = add nsw i32 %48, 1, !dbg !2128            ; [#uses=1 type=i32] [debug line = 192:16]
  store i32 %49, i32* %i, align 4, !dbg !2128     ; [debug line = 192:16]
  br label %15, !dbg !2128                        ; [debug line = 192:16]

; <label>:50                                      ; preds = %15
  store i32 32, i32* %i, align 4, !dbg !2129      ; [debug line = 196:7]
  br label %51, !dbg !2129                        ; [debug line = 196:7]

; <label>:51                                      ; preds = %72, %50
  %52 = load i32* %i, align 4, !dbg !2129         ; [#uses=1 type=i32] [debug line = 196:7]
  %53 = icmp slt i32 %52, 63, !dbg !2129          ; [#uses=1 type=i1] [debug line = 196:7]
  br i1 %53, label %54, label %75, !dbg !2129     ; [debug line = 196:7]

; <label>:54                                      ; preds = %51
  %55 = load i32* %i, align 4, !dbg !2131         ; [#uses=1 type=i32] [debug line = 197:5]
  %56 = sub nsw i32 %55, 32, !dbg !2131           ; [#uses=1 type=i32] [debug line = 197:5]
  %57 = sext i32 %56 to i64, !dbg !2131           ; [#uses=1 type=i64] [debug line = 197:5]
  %58 = getelementptr inbounds [63 x i32]* %t, i32 0, i64 %57, !dbg !2131 ; [#uses=1 type=i32*] [debug line = 197:5]
  %59 = load i32* %58, align 4, !dbg !2131        ; [#uses=1 type=i32] [debug line = 197:5]
  %60 = load i32* %i, align 4, !dbg !2132         ; [#uses=1 type=i32] [debug line = 197:28]
  %61 = sext i32 %60 to i64, !dbg !2132           ; [#uses=1 type=i64] [debug line = 197:28]
  %62 = getelementptr inbounds [63 x i32]* %t, i32 0, i64 %61, !dbg !2132 ; [#uses=1 type=i32*] [debug line = 197:28]
  %63 = load i32* %62, align 4, !dbg !2132        ; [#uses=1 type=i32] [debug line = 197:28]
  %64 = call i32 @times38(i32 %63), !dbg !2132    ; [#uses=1 type=i32] [debug line = 197:28]
  %65 = add i32 %59, %64, !dbg !2132              ; [#uses=1 type=i32] [debug line = 197:28]
  %66 = load i32* %i, align 4, !dbg !2132         ; [#uses=1 type=i32] [debug line = 197:28]
  %67 = sub nsw i32 %66, 32, !dbg !2132           ; [#uses=1 type=i32] [debug line = 197:28]
  %68 = sext i32 %67 to i64, !dbg !2132           ; [#uses=1 type=i64] [debug line = 197:28]
  %69 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2132 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 197:28]
  %70 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %69, i32 0, i32 0, !dbg !2132 ; [#uses=1 type=[32 x i32]*] [debug line = 197:28]
  %71 = getelementptr inbounds [32 x i32]* %70, i32 0, i64 %68, !dbg !2132 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %65, i32* %71, align 4, !dbg !2132    ; [debug line = 197:28]
  br label %72, !dbg !2132                        ; [debug line = 197:28]

; <label>:72                                      ; preds = %54
  %73 = load i32* %i, align 4, !dbg !2133         ; [#uses=1 type=i32] [debug line = 196:17]
  %74 = add nsw i32 %73, 1, !dbg !2133            ; [#uses=1 type=i32] [debug line = 196:17]
  store i32 %74, i32* %i, align 4, !dbg !2133     ; [debug line = 196:17]
  br label %51, !dbg !2133                        ; [debug line = 196:17]

; <label>:75                                      ; preds = %51
  %76 = getelementptr inbounds [63 x i32]* %t, i32 0, i64 31, !dbg !2134 ; [#uses=1 type=i32*] [debug line = 198:3]
  %77 = load i32* %76, align 4, !dbg !2134        ; [#uses=1 type=i32] [debug line = 198:3]
  %78 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2134 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 198:3]
  %79 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %78, i32 0, i32 0, !dbg !2134 ; [#uses=1 type=[32 x i32]*] [debug line = 198:3]
  %80 = getelementptr inbounds [32 x i32]* %79, i32 0, i64 31, !dbg !2134 ; [#uses=1 type=i32*] [debug line = 198:3]
  store i32 %77, i32* %80, align 4, !dbg !2134    ; [debug line = 198:3]
  %81 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2135 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 200:3]
  call void @reduce_mul(%struct.crypto_sign_ed25519_ref_fe25519* %81), !dbg !2135 ; [debug line = 200:3]
  ret void, !dbg !2136                            ; [debug line = 201:1]
}

; [#uses=1]
define internal i32 @times38(i32 %a) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=4 type=i32*]
  store i32 %a, i32* %1, align 4
  call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !2137), !dbg !2138 ; [debug line = 28:44] [debug variable = a]
  %2 = load i32* %1, align 4, !dbg !2139          ; [#uses=1 type=i32] [debug line = 30:3]
  %3 = shl i32 %2, 5, !dbg !2139                  ; [#uses=1 type=i32] [debug line = 30:3]
  %4 = load i32* %1, align 4, !dbg !2139          ; [#uses=1 type=i32] [debug line = 30:3]
  %5 = shl i32 %4, 2, !dbg !2139                  ; [#uses=1 type=i32] [debug line = 30:3]
  %6 = add i32 %3, %5, !dbg !2139                 ; [#uses=1 type=i32] [debug line = 30:3]
  %7 = load i32* %1, align 4, !dbg !2139          ; [#uses=1 type=i32] [debug line = 30:3]
  %8 = shl i32 %7, 1, !dbg !2139                  ; [#uses=1 type=i32] [debug line = 30:3]
  %9 = add i32 %6, %8, !dbg !2139                 ; [#uses=1 type=i32] [debug line = 30:3]
  ret i32 %9, !dbg !2139                          ; [debug line = 30:3]
}

; [#uses=1]
define internal void @reduce_mul(%struct.crypto_sign_ed25519_ref_fe25519* %r) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=7 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %t = alloca i32, align 4                        ; [#uses=6 type=i32*]
  %i = alloca i32, align 4                        ; [#uses=7 type=i32*]
  %rep = alloca i32, align 4                      ; [#uses=4 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2141), !dbg !2142 ; [debug line = 53:57] [debug variable = r]
  call void @llvm.dbg.declare(metadata !{i32* %t}, metadata !2143), !dbg !2145 ; [debug line = 55:17] [debug variable = t]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2146), !dbg !2147 ; [debug line = 56:7] [debug variable = i]
  call void @llvm.dbg.declare(metadata !{i32* %rep}, metadata !2148), !dbg !2149 ; [debug line = 56:9] [debug variable = rep]
  store i32 0, i32* %rep, align 4, !dbg !2150     ; [debug line = 58:7]
  br label %2, !dbg !2150                         ; [debug line = 58:7]

; <label>:2                                       ; preds = %55, %0
  %3 = load i32* %rep, align 4, !dbg !2150        ; [#uses=1 type=i32] [debug line = 58:7]
  %4 = icmp slt i32 %3, 2, !dbg !2150             ; [#uses=1 type=i1] [debug line = 58:7]
  br i1 %4, label %5, label %58, !dbg !2150       ; [debug line = 58:7]

; <label>:5                                       ; preds = %2
  %6 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2152 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 60:5]
  %7 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %6, i32 0, i32 0, !dbg !2152 ; [#uses=1 type=[32 x i32]*] [debug line = 60:5]
  %8 = getelementptr inbounds [32 x i32]* %7, i32 0, i64 31, !dbg !2152 ; [#uses=1 type=i32*] [debug line = 60:5]
  %9 = load i32* %8, align 4, !dbg !2152          ; [#uses=1 type=i32] [debug line = 60:5]
  %10 = lshr i32 %9, 7, !dbg !2152                ; [#uses=1 type=i32] [debug line = 60:5]
  store i32 %10, i32* %t, align 4, !dbg !2152     ; [debug line = 60:5]
  %11 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2154 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 61:5]
  %12 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %11, i32 0, i32 0, !dbg !2154 ; [#uses=1 type=[32 x i32]*] [debug line = 61:5]
  %13 = getelementptr inbounds [32 x i32]* %12, i32 0, i64 31, !dbg !2154 ; [#uses=2 type=i32*] [debug line = 61:5]
  %14 = load i32* %13, align 4, !dbg !2154        ; [#uses=1 type=i32] [debug line = 61:5]
  %15 = and i32 %14, 127, !dbg !2154              ; [#uses=1 type=i32] [debug line = 61:5]
  store i32 %15, i32* %13, align 4, !dbg !2154    ; [debug line = 61:5]
  %16 = load i32* %t, align 4, !dbg !2155         ; [#uses=1 type=i32] [debug line = 62:9]
  %17 = call i32 @times19(i32 %16), !dbg !2155    ; [#uses=1 type=i32] [debug line = 62:9]
  store i32 %17, i32* %t, align 4, !dbg !2155     ; [debug line = 62:9]
  %18 = load i32* %t, align 4, !dbg !2156         ; [#uses=1 type=i32] [debug line = 63:5]
  %19 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2156 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 63:5]
  %20 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %19, i32 0, i32 0, !dbg !2156 ; [#uses=1 type=[32 x i32]*] [debug line = 63:5]
  %21 = getelementptr inbounds [32 x i32]* %20, i32 0, i64 0, !dbg !2156 ; [#uses=2 type=i32*] [debug line = 63:5]
  %22 = load i32* %21, align 4, !dbg !2156        ; [#uses=1 type=i32] [debug line = 63:5]
  %23 = add i32 %22, %18, !dbg !2156              ; [#uses=1 type=i32] [debug line = 63:5]
  store i32 %23, i32* %21, align 4, !dbg !2156    ; [debug line = 63:5]
  store i32 0, i32* %i, align 4, !dbg !2157       ; [debug line = 64:9]
  br label %24, !dbg !2157                        ; [debug line = 64:9]

; <label>:24                                      ; preds = %51, %5
  %25 = load i32* %i, align 4, !dbg !2157         ; [#uses=1 type=i32] [debug line = 64:9]
  %26 = icmp slt i32 %25, 31, !dbg !2157          ; [#uses=1 type=i1] [debug line = 64:9]
  br i1 %26, label %27, label %54, !dbg !2157     ; [debug line = 64:9]

; <label>:27                                      ; preds = %24
  %28 = load i32* %i, align 4, !dbg !2159         ; [#uses=1 type=i32] [debug line = 66:7]
  %29 = sext i32 %28 to i64, !dbg !2159           ; [#uses=1 type=i64] [debug line = 66:7]
  %30 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2159 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 66:7]
  %31 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %30, i32 0, i32 0, !dbg !2159 ; [#uses=1 type=[32 x i32]*] [debug line = 66:7]
  %32 = getelementptr inbounds [32 x i32]* %31, i32 0, i64 %29, !dbg !2159 ; [#uses=1 type=i32*] [debug line = 66:7]
  %33 = load i32* %32, align 4, !dbg !2159        ; [#uses=1 type=i32] [debug line = 66:7]
  %34 = lshr i32 %33, 8, !dbg !2159               ; [#uses=1 type=i32] [debug line = 66:7]
  store i32 %34, i32* %t, align 4, !dbg !2159     ; [debug line = 66:7]
  %35 = load i32* %t, align 4, !dbg !2161         ; [#uses=1 type=i32] [debug line = 67:7]
  %36 = load i32* %i, align 4, !dbg !2161         ; [#uses=1 type=i32] [debug line = 67:7]
  %37 = add nsw i32 %36, 1, !dbg !2161            ; [#uses=1 type=i32] [debug line = 67:7]
  %38 = sext i32 %37 to i64, !dbg !2161           ; [#uses=1 type=i64] [debug line = 67:7]
  %39 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2161 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 67:7]
  %40 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %39, i32 0, i32 0, !dbg !2161 ; [#uses=1 type=[32 x i32]*] [debug line = 67:7]
  %41 = getelementptr inbounds [32 x i32]* %40, i32 0, i64 %38, !dbg !2161 ; [#uses=2 type=i32*] [debug line = 67:7]
  %42 = load i32* %41, align 4, !dbg !2161        ; [#uses=1 type=i32] [debug line = 67:7]
  %43 = add i32 %42, %35, !dbg !2161              ; [#uses=1 type=i32] [debug line = 67:7]
  store i32 %43, i32* %41, align 4, !dbg !2161    ; [debug line = 67:7]
  %44 = load i32* %i, align 4, !dbg !2162         ; [#uses=1 type=i32] [debug line = 68:7]
  %45 = sext i32 %44 to i64, !dbg !2162           ; [#uses=1 type=i64] [debug line = 68:7]
  %46 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2162 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 68:7]
  %47 = getelementptr inbounds %struct.crypto_sign_ed25519_ref_fe25519* %46, i32 0, i32 0, !dbg !2162 ; [#uses=1 type=[32 x i32]*] [debug line = 68:7]
  %48 = getelementptr inbounds [32 x i32]* %47, i32 0, i64 %45, !dbg !2162 ; [#uses=2 type=i32*] [debug line = 68:7]
  %49 = load i32* %48, align 4, !dbg !2162        ; [#uses=1 type=i32] [debug line = 68:7]
  %50 = and i32 %49, 255, !dbg !2162              ; [#uses=1 type=i32] [debug line = 68:7]
  store i32 %50, i32* %48, align 4, !dbg !2162    ; [debug line = 68:7]
  br label %51, !dbg !2163                        ; [debug line = 69:5]

; <label>:51                                      ; preds = %27
  %52 = load i32* %i, align 4, !dbg !2164         ; [#uses=1 type=i32] [debug line = 64:18]
  %53 = add nsw i32 %52, 1, !dbg !2164            ; [#uses=1 type=i32] [debug line = 64:18]
  store i32 %53, i32* %i, align 4, !dbg !2164     ; [debug line = 64:18]
  br label %24, !dbg !2164                        ; [debug line = 64:18]

; <label>:54                                      ; preds = %24
  br label %55, !dbg !2165                        ; [debug line = 70:3]

; <label>:55                                      ; preds = %54
  %56 = load i32* %rep, align 4, !dbg !2166       ; [#uses=1 type=i32] [debug line = 58:19]
  %57 = add nsw i32 %56, 1, !dbg !2166            ; [#uses=1 type=i32] [debug line = 58:19]
  store i32 %57, i32* %rep, align 4, !dbg !2166   ; [debug line = 58:19]
  br label %2, !dbg !2166                         ; [debug line = 58:19]

; <label>:58                                      ; preds = %2
  ret void, !dbg !2167                            ; [debug line = 71:1]
}

; [#uses=67]
define void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2168), !dbg !2169 ; [debug line = 203:78] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2170), !dbg !2171 ; [debug line = 203:120] [debug variable = x]
  %3 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2172 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 205:3]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2172 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 205:3]
  %5 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2172 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 205:3]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %3, %struct.crypto_sign_ed25519_ref_fe25519* %4, %struct.crypto_sign_ed25519_ref_fe25519* %5), !dbg !2172 ; [debug line = 205:3]
  ret void, !dbg !2174                            ; [debug line = 206:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_fe25519_invert(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %z2 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z9 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z11 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_5_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_10_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_20_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_50_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_100_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=42 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t1 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=38 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %i = alloca i32, align 4                        ; [#uses=24 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2175), !dbg !2176 ; [debug line = 208:78] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2177), !dbg !2178 ; [debug line = 208:120] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2}, metadata !2179), !dbg !2181 ; [debug line = 210:34] [debug variable = z2]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z9}, metadata !2182), !dbg !2183 ; [debug line = 211:34] [debug variable = z9]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z11}, metadata !2184), !dbg !2185 ; [debug line = 212:34] [debug variable = z11]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0}, metadata !2186), !dbg !2187 ; [debug line = 213:34] [debug variable = z2_5_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0}, metadata !2188), !dbg !2189 ; [debug line = 214:34] [debug variable = z2_10_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0}, metadata !2190), !dbg !2191 ; [debug line = 215:34] [debug variable = z2_20_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0}, metadata !2192), !dbg !2193 ; [debug line = 216:34] [debug variable = z2_50_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0}, metadata !2194), !dbg !2195 ; [debug line = 217:34] [debug variable = z2_100_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t0}, metadata !2196), !dbg !2197 ; [debug line = 218:34] [debug variable = t0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t1}, metadata !2198), !dbg !2199 ; [debug line = 219:34] [debug variable = t1]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2200), !dbg !2201 ; [debug line = 220:6] [debug variable = i]
  %3 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2202 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 222:10]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %z2, %struct.crypto_sign_ed25519_ref_fe25519* %3), !dbg !2202 ; [debug line = 222:10]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z2), !dbg !2203 ; [debug line = 223:10]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2204 ; [debug line = 224:10]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2205 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 225:10]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z9, %struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %4), !dbg !2205 ; [debug line = 225:10]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z11, %struct.crypto_sign_ed25519_ref_fe25519* %z9, %struct.crypto_sign_ed25519_ref_fe25519* %z2), !dbg !2206 ; [debug line = 226:11]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z11), !dbg !2207 ; [debug line = 227:11]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0, %struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z9), !dbg !2208 ; [debug line = 228:23]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0), !dbg !2209 ; [debug line = 230:18]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2210 ; [debug line = 231:18]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2211 ; [debug line = 232:18]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2212 ; [debug line = 233:18]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2213 ; [debug line = 234:19]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0, %struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0), !dbg !2214 ; [debug line = 235:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0), !dbg !2215 ; [debug line = 237:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2216 ; [debug line = 238:19]
  store i32 2, i32* %i, align 4, !dbg !2217       ; [debug line = 239:25]
  br label %5, !dbg !2217                         ; [debug line = 239:25]

; <label>:5                                       ; preds = %9, %0
  %6 = load i32* %i, align 4, !dbg !2217          ; [#uses=1 type=i32] [debug line = 239:25]
  %7 = icmp slt i32 %6, 10, !dbg !2217            ; [#uses=1 type=i1] [debug line = 239:25]
  br i1 %7, label %8, label %12, !dbg !2217       ; [debug line = 239:25]

; <label>:8                                       ; preds = %5
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2219 ; [debug line = 239:48]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2221 ; [debug line = 239:97]
  br label %9, !dbg !2222                         ; [debug line = 239:146]

; <label>:9                                       ; preds = %8
  %10 = load i32* %i, align 4, !dbg !2223         ; [#uses=1 type=i32] [debug line = 239:38]
  %11 = add nsw i32 %10, 2, !dbg !2223            ; [#uses=1 type=i32] [debug line = 239:38]
  store i32 %11, i32* %i, align 4, !dbg !2223     ; [debug line = 239:38]
  br label %5, !dbg !2223                         ; [debug line = 239:38]

; <label>:12                                      ; preds = %5
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0, %struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0), !dbg !2224 ; [debug line = 240:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0), !dbg !2225 ; [debug line = 242:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2226 ; [debug line = 243:19]
  store i32 2, i32* %i, align 4, !dbg !2227       ; [debug line = 244:25]
  br label %13, !dbg !2227                        ; [debug line = 244:25]

; <label>:13                                      ; preds = %17, %12
  %14 = load i32* %i, align 4, !dbg !2227         ; [#uses=1 type=i32] [debug line = 244:25]
  %15 = icmp slt i32 %14, 20, !dbg !2227          ; [#uses=1 type=i1] [debug line = 244:25]
  br i1 %15, label %16, label %20, !dbg !2227     ; [debug line = 244:25]

; <label>:16                                      ; preds = %13
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2229 ; [debug line = 244:48]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2231 ; [debug line = 244:97]
  br label %17, !dbg !2232                        ; [debug line = 244:146]

; <label>:17                                      ; preds = %16
  %18 = load i32* %i, align 4, !dbg !2233         ; [#uses=1 type=i32] [debug line = 244:38]
  %19 = add nsw i32 %18, 2, !dbg !2233            ; [#uses=1 type=i32] [debug line = 244:38]
  store i32 %19, i32* %i, align 4, !dbg !2233     ; [debug line = 244:38]
  br label %13, !dbg !2233                        ; [debug line = 244:38]

; <label>:20                                      ; preds = %13
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0), !dbg !2234 ; [debug line = 245:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2235 ; [debug line = 247:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2236 ; [debug line = 248:19]
  store i32 2, i32* %i, align 4, !dbg !2237       ; [debug line = 249:25]
  br label %21, !dbg !2237                        ; [debug line = 249:25]

; <label>:21                                      ; preds = %25, %20
  %22 = load i32* %i, align 4, !dbg !2237         ; [#uses=1 type=i32] [debug line = 249:25]
  %23 = icmp slt i32 %22, 10, !dbg !2237          ; [#uses=1 type=i1] [debug line = 249:25]
  br i1 %23, label %24, label %28, !dbg !2237     ; [debug line = 249:25]

; <label>:24                                      ; preds = %21
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2239 ; [debug line = 249:48]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2241 ; [debug line = 249:97]
  br label %25, !dbg !2242                        ; [debug line = 249:146]

; <label>:25                                      ; preds = %24
  %26 = load i32* %i, align 4, !dbg !2243         ; [#uses=1 type=i32] [debug line = 249:38]
  %27 = add nsw i32 %26, 2, !dbg !2243            ; [#uses=1 type=i32] [debug line = 249:38]
  store i32 %27, i32* %i, align 4, !dbg !2243     ; [debug line = 249:38]
  br label %21, !dbg !2243                        ; [debug line = 249:38]

; <label>:28                                      ; preds = %21
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0, %struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0), !dbg !2244 ; [debug line = 250:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0), !dbg !2245 ; [debug line = 252:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2246 ; [debug line = 253:19]
  store i32 2, i32* %i, align 4, !dbg !2247       ; [debug line = 254:26]
  br label %29, !dbg !2247                        ; [debug line = 254:26]

; <label>:29                                      ; preds = %33, %28
  %30 = load i32* %i, align 4, !dbg !2247         ; [#uses=1 type=i32] [debug line = 254:26]
  %31 = icmp slt i32 %30, 50, !dbg !2247          ; [#uses=1 type=i1] [debug line = 254:26]
  br i1 %31, label %32, label %36, !dbg !2247     ; [debug line = 254:26]

; <label>:32                                      ; preds = %29
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2249 ; [debug line = 254:49]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2251 ; [debug line = 254:98]
  br label %33, !dbg !2252                        ; [debug line = 254:147]

; <label>:33                                      ; preds = %32
  %34 = load i32* %i, align 4, !dbg !2253         ; [#uses=1 type=i32] [debug line = 254:39]
  %35 = add nsw i32 %34, 2, !dbg !2253            ; [#uses=1 type=i32] [debug line = 254:39]
  store i32 %35, i32* %i, align 4, !dbg !2253     ; [debug line = 254:39]
  br label %29, !dbg !2253                        ; [debug line = 254:39]

; <label>:36                                      ; preds = %29
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0, %struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0), !dbg !2254 ; [debug line = 255:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0), !dbg !2255 ; [debug line = 257:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2256 ; [debug line = 258:20]
  store i32 2, i32* %i, align 4, !dbg !2257       ; [debug line = 259:27]
  br label %37, !dbg !2257                        ; [debug line = 259:27]

; <label>:37                                      ; preds = %41, %36
  %38 = load i32* %i, align 4, !dbg !2257         ; [#uses=1 type=i32] [debug line = 259:27]
  %39 = icmp slt i32 %38, 100, !dbg !2257         ; [#uses=1 type=i1] [debug line = 259:27]
  br i1 %39, label %40, label %44, !dbg !2257     ; [debug line = 259:27]

; <label>:40                                      ; preds = %37
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2259 ; [debug line = 259:51]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2261 ; [debug line = 259:100]
  br label %41, !dbg !2262                        ; [debug line = 259:149]

; <label>:41                                      ; preds = %40
  %42 = load i32* %i, align 4, !dbg !2263         ; [#uses=1 type=i32] [debug line = 259:41]
  %43 = add nsw i32 %42, 2, !dbg !2263            ; [#uses=1 type=i32] [debug line = 259:41]
  store i32 %43, i32* %i, align 4, !dbg !2263     ; [debug line = 259:41]
  br label %37, !dbg !2263                        ; [debug line = 259:41]

; <label>:44                                      ; preds = %37
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0), !dbg !2264 ; [debug line = 260:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2265 ; [debug line = 262:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2266 ; [debug line = 263:20]
  store i32 2, i32* %i, align 4, !dbg !2267       ; [debug line = 264:26]
  br label %45, !dbg !2267                        ; [debug line = 264:26]

; <label>:45                                      ; preds = %49, %44
  %46 = load i32* %i, align 4, !dbg !2267         ; [#uses=1 type=i32] [debug line = 264:26]
  %47 = icmp slt i32 %46, 50, !dbg !2267          ; [#uses=1 type=i1] [debug line = 264:26]
  br i1 %47, label %48, label %52, !dbg !2267     ; [debug line = 264:26]

; <label>:48                                      ; preds = %45
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2269 ; [debug line = 264:49]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2271 ; [debug line = 264:98]
  br label %49, !dbg !2272                        ; [debug line = 264:147]

; <label>:49                                      ; preds = %48
  %50 = load i32* %i, align 4, !dbg !2273         ; [#uses=1 type=i32] [debug line = 264:39]
  %51 = add nsw i32 %50, 2, !dbg !2273            ; [#uses=1 type=i32] [debug line = 264:39]
  store i32 %51, i32* %i, align 4, !dbg !2273     ; [debug line = 264:39]
  br label %45, !dbg !2273                        ; [debug line = 264:39]

; <label>:52                                      ; preds = %45
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0), !dbg !2274 ; [debug line = 265:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2275 ; [debug line = 267:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2276 ; [debug line = 268:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2277 ; [debug line = 269:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t0, %struct.crypto_sign_ed25519_ref_fe25519* %t1), !dbg !2278 ; [debug line = 270:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %t0), !dbg !2279 ; [debug line = 271:20]
  %53 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2280 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 272:19]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %53, %struct.crypto_sign_ed25519_ref_fe25519* %t1, %struct.crypto_sign_ed25519_ref_fe25519* %z11), !dbg !2280 ; [debug line = 272:19]
  ret void, !dbg !2281                            ; [debug line = 273:1]
}

; [#uses=1]
define void @crypto_sign_ed25519_ref_fe25519_pow2523(%struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519* %x) nounwind uwtable {
  %1 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %2 = alloca %struct.crypto_sign_ed25519_ref_fe25519*, align 8 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519**]
  %z2 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z9 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z11 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=2 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_5_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_10_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_20_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_50_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=4 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %z2_100_0 = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=3 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %t = alloca %struct.crypto_sign_ed25519_ref_fe25519, align 4 ; [#uses=44 type=%struct.crypto_sign_ed25519_ref_fe25519*]
  %i = alloca i32, align 4                        ; [#uses=28 type=i32*]
  store %struct.crypto_sign_ed25519_ref_fe25519* %r, %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %1}, metadata !2282), !dbg !2283 ; [debug line = 275:79] [debug variable = r]
  store %struct.crypto_sign_ed25519_ref_fe25519* %x, %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519** %2}, metadata !2284), !dbg !2285 ; [debug line = 275:121] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2}, metadata !2286), !dbg !2288 ; [debug line = 277:34] [debug variable = z2]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z9}, metadata !2289), !dbg !2290 ; [debug line = 278:34] [debug variable = z9]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z11}, metadata !2291), !dbg !2292 ; [debug line = 279:34] [debug variable = z11]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0}, metadata !2293), !dbg !2294 ; [debug line = 280:34] [debug variable = z2_5_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0}, metadata !2295), !dbg !2296 ; [debug line = 281:34] [debug variable = z2_10_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0}, metadata !2297), !dbg !2298 ; [debug line = 282:34] [debug variable = z2_20_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0}, metadata !2299), !dbg !2300 ; [debug line = 283:34] [debug variable = z2_50_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0}, metadata !2301), !dbg !2302 ; [debug line = 284:34] [debug variable = z2_100_0]
  call void @llvm.dbg.declare(metadata !{%struct.crypto_sign_ed25519_ref_fe25519* %t}, metadata !2303), !dbg !2304 ; [debug line = 285:34] [debug variable = t]
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2305), !dbg !2306 ; [debug line = 286:6] [debug variable = i]
  %3 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2307 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 288:10]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %z2, %struct.crypto_sign_ed25519_ref_fe25519* %3), !dbg !2307 ; [debug line = 288:10]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2), !dbg !2308 ; [debug line = 289:10]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2309 ; [debug line = 290:10]
  %4 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2310 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 291:10]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z9, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %4), !dbg !2310 ; [debug line = 291:10]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z11, %struct.crypto_sign_ed25519_ref_fe25519* %z9, %struct.crypto_sign_ed25519_ref_fe25519* %z2), !dbg !2311 ; [debug line = 292:11]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z11), !dbg !2312 ; [debug line = 293:11]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z9), !dbg !2313 ; [debug line = 294:23]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0), !dbg !2314 ; [debug line = 296:18]
  store i32 1, i32* %i, align 4, !dbg !2315       ; [debug line = 297:24]
  br label %5, !dbg !2315                         ; [debug line = 297:24]

; <label>:5                                       ; preds = %9, %0
  %6 = load i32* %i, align 4, !dbg !2315          ; [#uses=1 type=i32] [debug line = 297:24]
  %7 = icmp slt i32 %6, 5, !dbg !2315             ; [#uses=1 type=i1] [debug line = 297:24]
  br i1 %7, label %8, label %12, !dbg !2315       ; [debug line = 297:24]

; <label>:8                                       ; preds = %5
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2317 ; [debug line = 297:43]
  br label %9, !dbg !2319                         ; [debug line = 297:90]

; <label>:9                                       ; preds = %8
  %10 = load i32* %i, align 4, !dbg !2320         ; [#uses=1 type=i32] [debug line = 297:36]
  %11 = add nsw i32 %10, 1, !dbg !2320            ; [#uses=1 type=i32] [debug line = 297:36]
  store i32 %11, i32* %i, align 4, !dbg !2320     ; [debug line = 297:36]
  br label %5, !dbg !2320                         ; [debug line = 297:36]

; <label>:12                                      ; preds = %5
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_5_0), !dbg !2321 ; [debug line = 298:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0), !dbg !2322 ; [debug line = 300:19]
  store i32 1, i32* %i, align 4, !dbg !2323       ; [debug line = 301:25]
  br label %13, !dbg !2323                        ; [debug line = 301:25]

; <label>:13                                      ; preds = %17, %12
  %14 = load i32* %i, align 4, !dbg !2323         ; [#uses=1 type=i32] [debug line = 301:25]
  %15 = icmp slt i32 %14, 10, !dbg !2323          ; [#uses=1 type=i1] [debug line = 301:25]
  br i1 %15, label %16, label %20, !dbg !2323     ; [debug line = 301:25]

; <label>:16                                      ; preds = %13
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2325 ; [debug line = 301:45]
  br label %17, !dbg !2327                        ; [debug line = 301:92]

; <label>:17                                      ; preds = %16
  %18 = load i32* %i, align 4, !dbg !2328         ; [#uses=1 type=i32] [debug line = 301:38]
  %19 = add nsw i32 %18, 1, !dbg !2328            ; [#uses=1 type=i32] [debug line = 301:38]
  store i32 %19, i32* %i, align 4, !dbg !2328     ; [debug line = 301:38]
  br label %13, !dbg !2328                        ; [debug line = 301:38]

; <label>:20                                      ; preds = %13
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0), !dbg !2329 ; [debug line = 302:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0), !dbg !2330 ; [debug line = 304:19]
  store i32 1, i32* %i, align 4, !dbg !2331       ; [debug line = 305:25]
  br label %21, !dbg !2331                        ; [debug line = 305:25]

; <label>:21                                      ; preds = %25, %20
  %22 = load i32* %i, align 4, !dbg !2331         ; [#uses=1 type=i32] [debug line = 305:25]
  %23 = icmp slt i32 %22, 20, !dbg !2331          ; [#uses=1 type=i1] [debug line = 305:25]
  br i1 %23, label %24, label %28, !dbg !2331     ; [debug line = 305:25]

; <label>:24                                      ; preds = %21
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2333 ; [debug line = 305:45]
  br label %25, !dbg !2335                        ; [debug line = 305:92]

; <label>:25                                      ; preds = %24
  %26 = load i32* %i, align 4, !dbg !2336         ; [#uses=1 type=i32] [debug line = 305:38]
  %27 = add nsw i32 %26, 1, !dbg !2336            ; [#uses=1 type=i32] [debug line = 305:38]
  store i32 %27, i32* %i, align 4, !dbg !2336     ; [debug line = 305:38]
  br label %21, !dbg !2336                        ; [debug line = 305:38]

; <label>:28                                      ; preds = %21
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_20_0), !dbg !2337 ; [debug line = 306:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2338 ; [debug line = 308:19]
  store i32 1, i32* %i, align 4, !dbg !2339       ; [debug line = 309:25]
  br label %29, !dbg !2339                        ; [debug line = 309:25]

; <label>:29                                      ; preds = %33, %28
  %30 = load i32* %i, align 4, !dbg !2339         ; [#uses=1 type=i32] [debug line = 309:25]
  %31 = icmp slt i32 %30, 10, !dbg !2339          ; [#uses=1 type=i1] [debug line = 309:25]
  br i1 %31, label %32, label %36, !dbg !2339     ; [debug line = 309:25]

; <label>:32                                      ; preds = %29
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2341 ; [debug line = 309:45]
  br label %33, !dbg !2343                        ; [debug line = 309:92]

; <label>:33                                      ; preds = %32
  %34 = load i32* %i, align 4, !dbg !2344         ; [#uses=1 type=i32] [debug line = 309:38]
  %35 = add nsw i32 %34, 1, !dbg !2344            ; [#uses=1 type=i32] [debug line = 309:38]
  store i32 %35, i32* %i, align 4, !dbg !2344     ; [debug line = 309:38]
  br label %29, !dbg !2344                        ; [debug line = 309:38]

; <label>:36                                      ; preds = %29
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_10_0), !dbg !2345 ; [debug line = 310:19]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0), !dbg !2346 ; [debug line = 312:19]
  store i32 1, i32* %i, align 4, !dbg !2347       ; [debug line = 313:26]
  br label %37, !dbg !2347                        ; [debug line = 313:26]

; <label>:37                                      ; preds = %41, %36
  %38 = load i32* %i, align 4, !dbg !2347         ; [#uses=1 type=i32] [debug line = 313:26]
  %39 = icmp slt i32 %38, 50, !dbg !2347          ; [#uses=1 type=i1] [debug line = 313:26]
  br i1 %39, label %40, label %44, !dbg !2347     ; [debug line = 313:26]

; <label>:40                                      ; preds = %37
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2349 ; [debug line = 313:46]
  br label %41, !dbg !2351                        ; [debug line = 313:93]

; <label>:41                                      ; preds = %40
  %42 = load i32* %i, align 4, !dbg !2352         ; [#uses=1 type=i32] [debug line = 313:39]
  %43 = add nsw i32 %42, 1, !dbg !2352            ; [#uses=1 type=i32] [debug line = 313:39]
  store i32 %43, i32* %i, align 4, !dbg !2352     ; [debug line = 313:39]
  br label %37, !dbg !2352                        ; [debug line = 313:39]

; <label>:44                                      ; preds = %37
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0), !dbg !2353 ; [debug line = 314:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0), !dbg !2354 ; [debug line = 316:20]
  store i32 1, i32* %i, align 4, !dbg !2355       ; [debug line = 317:27]
  br label %45, !dbg !2355                        ; [debug line = 317:27]

; <label>:45                                      ; preds = %49, %44
  %46 = load i32* %i, align 4, !dbg !2355         ; [#uses=1 type=i32] [debug line = 317:27]
  %47 = icmp slt i32 %46, 100, !dbg !2355         ; [#uses=1 type=i1] [debug line = 317:27]
  br i1 %47, label %48, label %52, !dbg !2355     ; [debug line = 317:27]

; <label>:48                                      ; preds = %45
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2357 ; [debug line = 317:48]
  br label %49, !dbg !2359                        ; [debug line = 317:95]

; <label>:49                                      ; preds = %48
  %50 = load i32* %i, align 4, !dbg !2360         ; [#uses=1 type=i32] [debug line = 317:41]
  %51 = add nsw i32 %50, 1, !dbg !2360            ; [#uses=1 type=i32] [debug line = 317:41]
  store i32 %51, i32* %i, align 4, !dbg !2360     ; [debug line = 317:41]
  br label %45, !dbg !2360                        ; [debug line = 317:41]

; <label>:52                                      ; preds = %45
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_100_0), !dbg !2361 ; [debug line = 318:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2362 ; [debug line = 320:20]
  store i32 1, i32* %i, align 4, !dbg !2363       ; [debug line = 321:26]
  br label %53, !dbg !2363                        ; [debug line = 321:26]

; <label>:53                                      ; preds = %57, %52
  %54 = load i32* %i, align 4, !dbg !2363         ; [#uses=1 type=i32] [debug line = 321:26]
  %55 = icmp slt i32 %54, 50, !dbg !2363          ; [#uses=1 type=i1] [debug line = 321:26]
  br i1 %55, label %56, label %60, !dbg !2363     ; [debug line = 321:26]

; <label>:56                                      ; preds = %53
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2365 ; [debug line = 321:46]
  br label %57, !dbg !2367                        ; [debug line = 321:93]

; <label>:57                                      ; preds = %56
  %58 = load i32* %i, align 4, !dbg !2368         ; [#uses=1 type=i32] [debug line = 321:39]
  %59 = add nsw i32 %58, 1, !dbg !2368            ; [#uses=1 type=i32] [debug line = 321:39]
  store i32 %59, i32* %i, align 4, !dbg !2368     ; [debug line = 321:39]
  br label %53, !dbg !2368                        ; [debug line = 321:39]

; <label>:60                                      ; preds = %53
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %z2_50_0), !dbg !2369 ; [debug line = 322:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2370 ; [debug line = 324:20]
  call void @crypto_sign_ed25519_ref_fe25519_square(%struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %t), !dbg !2371 ; [debug line = 325:20]
  %61 = load %struct.crypto_sign_ed25519_ref_fe25519** %1, align 8, !dbg !2372 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 326:18]
  %62 = load %struct.crypto_sign_ed25519_ref_fe25519** %2, align 8, !dbg !2372 ; [#uses=1 type=%struct.crypto_sign_ed25519_ref_fe25519*] [debug line = 326:18]
  call void @crypto_sign_ed25519_ref_fe25519_mul(%struct.crypto_sign_ed25519_ref_fe25519* %61, %struct.crypto_sign_ed25519_ref_fe25519* %t, %struct.crypto_sign_ed25519_ref_fe25519* %62), !dbg !2372 ; [debug line = 326:18]
  ret void, !dbg !2373                            ; [debug line = 327:1]
}

; [#uses=2]
define internal i32 @times19(i32 %a) nounwind uwtable {
  %1 = alloca i32, align 4                        ; [#uses=4 type=i32*]
  store i32 %a, i32* %1, align 4
  call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !2374), !dbg !2375 ; [debug line = 23:44] [debug variable = a]
  %2 = load i32* %1, align 4, !dbg !2376          ; [#uses=1 type=i32] [debug line = 25:3]
  %3 = shl i32 %2, 4, !dbg !2376                  ; [#uses=1 type=i32] [debug line = 25:3]
  %4 = load i32* %1, align 4, !dbg !2376          ; [#uses=1 type=i32] [debug line = 25:3]
  %5 = shl i32 %4, 1, !dbg !2376                  ; [#uses=1 type=i32] [debug line = 25:3]
  %6 = add i32 %3, %5, !dbg !2376                 ; [#uses=1 type=i32] [debug line = 25:3]
  %7 = load i32* %1, align 4, !dbg !2376          ; [#uses=1 type=i32] [debug line = 25:3]
  %8 = add i32 %6, %7, !dbg !2376                 ; [#uses=1 type=i32] [debug line = 25:3]
  ret i32 %8, !dbg !2376                          ; [debug line = 25:3]
}

!llvm.dbg.cu = !{!0, !44, !88, !165, !274}
!opencl.kernels = !{!329, !336, !340, !341, !347, !353, !359, !360, !363, !365, !366, !369, !371, !372, !374, !376, !380, !381, !385, !390, !391, !392, !394, !397, !398, !401, !403, !407, !409, !412, !414, !417, !423, !425, !428, !431, !435, !438, !442, !444, !447, !449, !451, !452, !454, !456, !458, !459, !461, !464, !465, !466, !467, !468, !470, !471, !472, !473, !474, !475, !476, !479, !480, !481, !482}
!hls.encrypted.func = !{}

!0 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/sign.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, metadata !1, metadata !1, metadata !3, metadata !22} ; [ DW_TAG_compile_unit ]
!1 = metadata !{metadata !2}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{metadata !5, metadata !14, metadata !17, metadata !18}
!5 = metadata !{i32 786478, i32 0, metadata !6, metadata !"_memcpy", metadata !"_memcpy", metadata !"", metadata !6, i32 13, metadata !7, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8*, i32)* @_memcpy, null, null, metadata !12, i32 13} ; [ DW_TAG_subprogram ]
!6 = metadata !{i32 786473, metadata !"ed25519_ref/src/sign.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!7 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !8, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!8 = metadata !{null, metadata !9, metadata !9, metadata !11}
!9 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !10} ; [ DW_TAG_pointer_type ]
!10 = metadata !{i32 786468, null, metadata !"unsigned char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!11 = metadata !{i32 786468, null, metadata !"unsigned int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!12 = metadata !{metadata !13}
!13 = metadata !{i32 786468}                      ; [ DW_TAG_base_type ]
!14 = metadata !{i32 786478, i32 0, metadata !6, metadata !"_memset", metadata !"_memset", metadata !"", metadata !6, i32 27, metadata !15, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8, i32)* @_memset, null, null, metadata !12, i32 27} ; [ DW_TAG_subprogram ]
!15 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !16, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!16 = metadata !{null, metadata !9, metadata !10, metadata !11}
!17 = metadata !{i32 786478, i32 0, metadata !6, metadata !"_memmove", metadata !"_memmove", metadata !"", metadata !6, i32 34, metadata !7, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8*, i32)* @_memmove, null, null, metadata !12, i32 34} ; [ DW_TAG_subprogram ]
!18 = metadata !{i32 786478, i32 0, metadata !6, metadata !"crypto_sign", metadata !"crypto_sign", metadata !"", metadata !6, i32 48, metadata !19, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i32, i8*, i8*)* @crypto_sign, null, null, metadata !12, i32 54} ; [ DW_TAG_subprogram ]
!19 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !20, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!20 = metadata !{metadata !21, metadata !9, metadata !11, metadata !9, metadata !9}
!21 = metadata !{i32 786468, null, metadata !"int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!22 = metadata !{metadata !23}
!23 = metadata !{metadata !24}
!24 = metadata !{i32 786484, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base", metadata !"crypto_sign_ed25519_ref_ge25519_base", metadata !"", metadata !25, i32 23, metadata !26, i32 0, i32 1, %struct.crypto_sign_ed25519_ref_ge25519* @crypto_sign_ed25519_ref_ge25519_base} ; [ DW_TAG_variable ]
!25 = metadata !{i32 786473, metadata !"ed25519_ref/src/ge25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!26 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !27} ; [ DW_TAG_const_type ]
!27 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_ge25519", metadata !6, i32 21, i64 0, i64 0, i64 0, i32 0, metadata !28} ; [ DW_TAG_typedef ]
!28 = metadata !{i32 786451, null, metadata !"", metadata !25, i32 15, i64 4096, i64 32, i32 0, i32 0, null, metadata !29, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!29 = metadata !{metadata !30, metadata !41, metadata !42, metadata !43}
!30 = metadata !{i32 786445, metadata !28, metadata !"x", metadata !25, i32 17, i64 1024, i64 32, i64 0, i32 0, metadata !31} ; [ DW_TAG_member ]
!31 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !25, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !32} ; [ DW_TAG_typedef ]
!32 = metadata !{i32 786451, null, metadata !"", metadata !33, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !34, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!33 = metadata !{i32 786473, metadata !"ed25519_ref/src/fe25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!34 = metadata !{metadata !35}
!35 = metadata !{i32 786445, metadata !32, metadata !"v", metadata !33, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !36} ; [ DW_TAG_member ]
!36 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !37, metadata !39, i32 0, i32 0} ; [ DW_TAG_array_type ]
!37 = metadata !{i32 786454, null, metadata !"crypto_uint32", metadata !38, i32 4, i64 0, i64 0, i64 0, i32 0, metadata !11} ; [ DW_TAG_typedef ]
!38 = metadata !{i32 786473, metadata !"ed25519_ref/src/sc25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!39 = metadata !{metadata !40}
!40 = metadata !{i32 786465, i64 0, i64 31}       ; [ DW_TAG_subrange_type ]
!41 = metadata !{i32 786445, metadata !28, metadata !"y", metadata !25, i32 18, i64 1024, i64 32, i64 1024, i32 0, metadata !31} ; [ DW_TAG_member ]
!42 = metadata !{i32 786445, metadata !28, metadata !"z", metadata !25, i32 19, i64 1024, i64 32, i64 2048, i32 0, metadata !31} ; [ DW_TAG_member ]
!43 = metadata !{i32 786445, metadata !28, metadata !"t", metadata !25, i32 20, i64 1024, i64 32, i64 3072, i32 0, metadata !31} ; [ DW_TAG_member ]
!44 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/sha512.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, metadata !1, metadata !1, metadata !45, metadata !81} ; [ DW_TAG_compile_unit ]
!45 = metadata !{metadata !46}
!46 = metadata !{metadata !47, metadata !70, metadata !75, metadata !76, metadata !79, metadata !80}
!47 = metadata !{i32 786478, i32 0, metadata !48, metadata !"sha512_init", metadata !"sha512_init", metadata !"", metadata !48, i32 216, metadata !49, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sha512_context_*)* @sha512_init, null, null, metadata !12, i32 216} ; [ DW_TAG_subprogram ]
!48 = metadata !{i32 786473, metadata !"ed25519_ref/src/sha512.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!49 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !50, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!50 = metadata !{metadata !21, metadata !51}
!51 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !52} ; [ DW_TAG_pointer_type ]
!52 = metadata !{i32 786454, null, metadata !"sha512_context", metadata !48, i32 15, i64 0, i64 0, i64 0, i32 0, metadata !53} ; [ DW_TAG_typedef ]
!53 = metadata !{i32 786451, null, metadata !"sha512_context_", metadata !54, i32 11, i64 1664, i64 64, i32 0, i32 0, null, metadata !55, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!54 = metadata !{i32 786473, metadata !"ed25519_ref/src/sha512.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!55 = metadata !{metadata !56, metadata !59, metadata !63, metadata !66}
!56 = metadata !{i32 786445, metadata !53, metadata !"length", metadata !54, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !57} ; [ DW_TAG_member ]
!57 = metadata !{i32 786454, null, metadata !"uint64_t", metadata !54, i32 56, i64 0, i64 0, i64 0, i32 0, metadata !58} ; [ DW_TAG_typedef ]
!58 = metadata !{i32 786468, null, metadata !"long long unsigned int", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!59 = metadata !{i32 786445, metadata !53, metadata !"state", metadata !54, i32 12, i64 512, i64 64, i64 64, i32 0, metadata !60} ; [ DW_TAG_member ]
!60 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 64, i32 0, i32 0, metadata !57, metadata !61, i32 0, i32 0} ; [ DW_TAG_array_type ]
!61 = metadata !{metadata !62}
!62 = metadata !{i32 786465, i64 0, i64 7}        ; [ DW_TAG_subrange_type ]
!63 = metadata !{i32 786445, metadata !53, metadata !"curlen", metadata !54, i32 13, i64 64, i64 64, i64 576, i32 0, metadata !64} ; [ DW_TAG_member ]
!64 = metadata !{i32 786454, null, metadata !"size_t", metadata !54, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !65} ; [ DW_TAG_typedef ]
!65 = metadata !{i32 786468, null, metadata !"long unsigned int", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!66 = metadata !{i32 786445, metadata !53, metadata !"buf", metadata !54, i32 14, i64 1024, i64 8, i64 640, i32 0, metadata !67} ; [ DW_TAG_member ]
!67 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 8, i32 0, i32 0, metadata !10, metadata !68, i32 0, i32 0} ; [ DW_TAG_array_type ]
!68 = metadata !{metadata !69}
!69 = metadata !{i32 786465, i64 0, i64 127}      ; [ DW_TAG_subrange_type ]
!70 = metadata !{i32 786478, i32 0, metadata !48, metadata !"sha512_update_128", metadata !"sha512_update_128", metadata !"", metadata !48, i32 240, metadata !71, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sha512_context_*, i8*)* @sha512_update_128, null, null, metadata !12, i32 241} ; [ DW_TAG_subprogram ]
!71 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !72, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!72 = metadata !{metadata !21, metadata !51, metadata !73}
!73 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !74} ; [ DW_TAG_pointer_type ]
!74 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !10} ; [ DW_TAG_const_type ]
!75 = metadata !{i32 786478, i32 0, metadata !48, metadata !"sha512_update_32", metadata !"sha512_update_32", metadata !"", metadata !48, i32 298, metadata !71, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sha512_context_*, i8*)* @sha512_update_32, null, null, metadata !12, i32 299} ; [ DW_TAG_subprogram ]
!76 = metadata !{i32 786478, i32 0, metadata !48, metadata !"sha512_final", metadata !"sha512_final", metadata !"", metadata !48, i32 361, metadata !77, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sha512_context_*, i8*)* @sha512_final, null, null, metadata !12, i32 362} ; [ DW_TAG_subprogram ]
!77 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !78, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!78 = metadata !{metadata !21, metadata !51, metadata !9}
!79 = metadata !{i32 786478, i32 0, metadata !48, metadata !"sha512_compress_32", metadata !"sha512_compress_32", metadata !"", metadata !48, i32 153, metadata !77, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sha512_context_*, i8*)* @sha512_compress_32, null, null, metadata !12, i32 154} ; [ DW_TAG_subprogram ]
!80 = metadata !{i32 786478, i32 0, metadata !48, metadata !"sha512_compress_128", metadata !"sha512_compress_128", metadata !"", metadata !48, i32 96, metadata !77, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sha512_context_*, i8*)* @sha512_compress_128, null, null, metadata !12, i32 97} ; [ DW_TAG_subprogram ]
!81 = metadata !{metadata !82}
!82 = metadata !{metadata !83}
!83 = metadata !{i32 786484, i32 0, null, metadata !"K", metadata !"K", metadata !"", metadata !48, i32 16, metadata !84, i32 1, i32 1, [80 x i64]* @K} ; [ DW_TAG_variable ]
!84 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 5120, i64 64, i32 0, i32 0, metadata !85, metadata !86, i32 0, i32 0} ; [ DW_TAG_array_type ]
!85 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !57} ; [ DW_TAG_const_type ]
!86 = metadata !{metadata !87}
!87 = metadata !{i32 786465, i64 0, i64 79}       ; [ DW_TAG_subrange_type ]
!88 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/sc25519.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, metadata !1, metadata !1, metadata !89, metadata !157} ; [ DW_TAG_compile_unit ]
!89 = metadata !{metadata !90}
!90 = metadata !{metadata !91, metadata !100, metadata !111, metadata !112, metadata !117, metadata !122, metadata !125, metadata !126, metadata !129, metadata !132, metadata !133, metadata !134, metadata !137, metadata !142, metadata !143, metadata !146, metadata !149, metadata !152}
!91 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_from32bytes", metadata !"crypto_sign_ed25519_ref_sc25519_from32bytes", metadata !"", metadata !92, i32 92, metadata !93, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, i8*)* @crypto_sign_ed25519_ref_sc25519_from32bytes, null, null, metadata !12, i32 93} ; [ DW_TAG_subprogram ]
!92 = metadata !{i32 786473, metadata !"ed25519_ref/src/sc25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!93 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !94, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!94 = metadata !{null, metadata !95, metadata !73}
!95 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !96} ; [ DW_TAG_pointer_type ]
!96 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !92, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !97} ; [ DW_TAG_typedef ]
!97 = metadata !{i32 786451, null, metadata !"", metadata !38, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !98, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!98 = metadata !{metadata !99}
!99 = metadata !{i32 786445, metadata !97, metadata !"v", metadata !38, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !36} ; [ DW_TAG_member ]
!100 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_shortsc25519_from16bytes", metadata !"crypto_sign_ed25519_ref_shortsc25519_from16bytes", metadata !"", metadata !92, i32 101, metadata !101, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_shortsc25519*, i8*)* @crypto_sign_ed25519_ref_shortsc25519_from16bytes, null, null, metadata !12, i32 102} ; [ DW_TAG_subprogram ]
!101 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !102, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!102 = metadata !{null, metadata !103, metadata !73}
!103 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !104} ; [ DW_TAG_pointer_type ]
!104 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_shortsc25519", metadata !92, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !105} ; [ DW_TAG_typedef ]
!105 = metadata !{i32 786451, null, metadata !"", metadata !38, i32 31, i64 512, i64 32, i32 0, i32 0, null, metadata !106, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!106 = metadata !{metadata !107}
!107 = metadata !{i32 786445, metadata !105, metadata !"v", metadata !38, i32 33, i64 512, i64 32, i64 0, i32 0, metadata !108} ; [ DW_TAG_member ]
!108 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 32, i32 0, i32 0, metadata !37, metadata !109, i32 0, i32 0} ; [ DW_TAG_array_type ]
!109 = metadata !{metadata !110}
!110 = metadata !{i32 786465, i64 0, i64 15}      ; [ DW_TAG_subrange_type ]
!111 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_from64bytes", metadata !"crypto_sign_ed25519_ref_sc25519_from64bytes", metadata !"", metadata !92, i32 107, metadata !93, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, i8*)* @crypto_sign_ed25519_ref_sc25519_from64bytes, null, null, metadata !12, i32 108} ; [ DW_TAG_subprogram ]
!112 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_from_shortsc", metadata !"crypto_sign_ed25519_ref_sc25519_from_shortsc", metadata !"", metadata !92, i32 115, metadata !113, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_shortsc25519*)* @crypto_sign_ed25519_ref_sc25519_from_shortsc, null, null, metadata !12, i32 116} ; [ DW_TAG_subprogram ]
!113 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !114, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!114 = metadata !{null, metadata !95, metadata !115}
!115 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !116} ; [ DW_TAG_pointer_type ]
!116 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !104} ; [ DW_TAG_const_type ]
!117 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_to32bytes", metadata !"crypto_sign_ed25519_ref_sc25519_to32bytes", metadata !"", metadata !92, i32 124, metadata !118, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_to32bytes, null, null, metadata !12, i32 125} ; [ DW_TAG_subprogram ]
!118 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !119, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!119 = metadata !{null, metadata !9, metadata !120}
!120 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !121} ; [ DW_TAG_pointer_type ]
!121 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !96} ; [ DW_TAG_const_type ]
!122 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_iszero_vartime", metadata !"crypto_sign_ed25519_ref_sc25519_iszero_vartime", metadata !"", metadata !92, i32 130, metadata !123, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_iszero_vartime, null, null, metadata !12, i32 131} ; [ DW_TAG_subprogram ]
!123 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !124, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!124 = metadata !{metadata !21, metadata !120}
!125 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_isshort_vartime", metadata !"crypto_sign_ed25519_ref_sc25519_isshort_vartime", metadata !"", metadata !92, i32 138, metadata !123, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_isshort_vartime, null, null, metadata !12, i32 139} ; [ DW_TAG_subprogram ]
!126 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_lt_vartime", metadata !"crypto_sign_ed25519_ref_sc25519_lt_vartime", metadata !"", metadata !92, i32 146, metadata !127, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_lt_vartime, null, null, metadata !12, i32 147} ; [ DW_TAG_subprogram ]
!127 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !128, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!128 = metadata !{metadata !21, metadata !120, metadata !120}
!129 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_add", metadata !"crypto_sign_ed25519_ref_sc25519_add", metadata !"", metadata !92, i32 157, metadata !130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_add, null, null, metadata !12, i32 158} ; [ DW_TAG_subprogram ]
!130 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !131, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!131 = metadata !{null, metadata !95, metadata !120, metadata !120}
!132 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_sub_nored", metadata !"crypto_sign_ed25519_ref_sc25519_sub_nored", metadata !"", metadata !92, i32 170, metadata !130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_sub_nored, null, null, metadata !12, i32 171} ; [ DW_TAG_subprogram ]
!133 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_mul", metadata !"crypto_sign_ed25519_ref_sc25519_mul", metadata !"", metadata !92, i32 183, metadata !130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_mul, null, null, metadata !12, i32 184} ; [ DW_TAG_subprogram ]
!134 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_mul_shortsc", metadata !"crypto_sign_ed25519_ref_sc25519_mul_shortsc", metadata !"", metadata !92, i32 204, metadata !135, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_shortsc25519*)* @crypto_sign_ed25519_ref_sc25519_mul_shortsc, null, null, metadata !12, i32 205} ; [ DW_TAG_subprogram ]
!135 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !136, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!136 = metadata !{null, metadata !95, metadata !120, metadata !115}
!137 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_window3", metadata !"crypto_sign_ed25519_ref_sc25519_window3", metadata !"", metadata !92, i32 211, metadata !138, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_window3, null, null, metadata !12, i32 212} ; [ DW_TAG_subprogram ]
!138 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !139, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!139 = metadata !{null, metadata !140, metadata !120}
!140 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !141} ; [ DW_TAG_pointer_type ]
!141 = metadata !{i32 786468, null, metadata !"signed char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!142 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_window5", metadata !"crypto_sign_ed25519_ref_sc25519_window5", metadata !"", metadata !92, i32 248, metadata !138, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_window5, null, null, metadata !12, i32 249} ; [ DW_TAG_subprogram ]
!143 = metadata !{i32 786478, i32 0, metadata !92, metadata !"crypto_sign_ed25519_ref_sc25519_2interleave2", metadata !"crypto_sign_ed25519_ref_sc25519_2interleave2", metadata !"", metadata !92, i32 285, metadata !144, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_2interleave2, null, null, metadata !12, i32 286} ; [ DW_TAG_subprogram ]
!144 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !145, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!145 = metadata !{null, metadata !9, metadata !120, metadata !120}
!146 = metadata !{i32 786478, i32 0, metadata !92, metadata !"reduce_add_sub", metadata !"reduce_add_sub", metadata !"", metadata !92, i32 20, metadata !147, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*)* @reduce_add_sub, null, null, metadata !12, i32 21} ; [ DW_TAG_subprogram ]
!147 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !148, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!148 = metadata !{null, metadata !95}
!149 = metadata !{i32 786478, i32 0, metadata !92, metadata !"lt", metadata !"lt", metadata !"", metadata !92, i32 11, metadata !150, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)* @lt, null, null, metadata !12, i32 12} ; [ DW_TAG_subprogram ]
!150 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !151, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!151 = metadata !{metadata !37, metadata !37, metadata !37}
!152 = metadata !{i32 786478, i32 0, metadata !92, metadata !"barrett_reduce", metadata !"barrett_reduce", metadata !"", metadata !92, i32 41, metadata !153, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, i32*)* @barrett_reduce, null, null, metadata !12, i32 42} ; [ DW_TAG_subprogram ]
!153 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !154, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!154 = metadata !{null, metadata !95, metadata !155}
!155 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !156} ; [ DW_TAG_pointer_type ]
!156 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !37} ; [ DW_TAG_const_type ]
!157 = metadata !{metadata !158}
!158 = metadata !{metadata !159, metadata !161}
!159 = metadata !{i32 786484, i32 0, null, metadata !"m", metadata !"m", metadata !"", metadata !92, i32 5, metadata !160, i32 1, i32 1, [32 x i32]* @m} ; [ DW_TAG_variable ]
!160 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !156, metadata !39, i32 0, i32 0} ; [ DW_TAG_array_type ]
!161 = metadata !{i32 786484, i32 0, null, metadata !"mu", metadata !"mu", metadata !"", metadata !92, i32 8, metadata !162, i32 1, i32 1, [33 x i32]* @mu} ; [ DW_TAG_variable ]
!162 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1056, i64 32, i32 0, i32 0, metadata !156, metadata !163, i32 0, i32 0} ; [ DW_TAG_array_type ]
!163 = metadata !{metadata !164}
!164 = metadata !{i32 786465, i64 0, i64 32}      ; [ DW_TAG_subrange_type ]
!165 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/ge25519.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, metadata !1, metadata !1, metadata !166, metadata !263} ; [ DW_TAG_compile_unit ]
!166 = metadata !{metadata !167}
!167 = metadata !{metadata !168, metadata !186, metadata !191, metadata !194, metadata !203, metadata !206, metadata !216, metadata !220, metadata !223, metadata !226, metadata !229, metadata !248, metadata !252, metadata !255, metadata !260}
!168 = metadata !{i32 786478, i32 0, metadata !169, metadata !"crypto_sign_ed25519_ref_unpackneg_vartime", metadata !"crypto_sign_ed25519_ref_unpackneg_vartime", metadata !"", metadata !169, i32 187, metadata !170, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_ge25519*, i8*)* @crypto_sign_ed25519_ref_unpackneg_vartime, null, null, metadata !12, i32 188} ; [ DW_TAG_subprogram ]
!169 = metadata !{i32 786473, metadata !"ed25519_ref/src/ge25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!170 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !171, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!171 = metadata !{metadata !21, metadata !172, metadata !73}
!172 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !173} ; [ DW_TAG_pointer_type ]
!173 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_ge25519", metadata !169, i32 21, i64 0, i64 0, i64 0, i32 0, metadata !174} ; [ DW_TAG_typedef ]
!174 = metadata !{i32 786451, null, metadata !"", metadata !25, i32 15, i64 4096, i64 32, i32 0, i32 0, null, metadata !175, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!175 = metadata !{metadata !176, metadata !183, metadata !184, metadata !185}
!176 = metadata !{i32 786445, metadata !174, metadata !"x", metadata !25, i32 17, i64 1024, i64 32, i64 0, i32 0, metadata !177} ; [ DW_TAG_member ]
!177 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !25, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !178} ; [ DW_TAG_typedef ]
!178 = metadata !{i32 786451, null, metadata !"", metadata !33, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !179, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!179 = metadata !{metadata !180}
!180 = metadata !{i32 786445, metadata !178, metadata !"v", metadata !33, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !181} ; [ DW_TAG_member ]
!181 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !182, metadata !39, i32 0, i32 0} ; [ DW_TAG_array_type ]
!182 = metadata !{i32 786454, null, metadata !"crypto_uint32", metadata !33, i32 4, i64 0, i64 0, i64 0, i32 0, metadata !11} ; [ DW_TAG_typedef ]
!183 = metadata !{i32 786445, metadata !174, metadata !"y", metadata !25, i32 18, i64 1024, i64 32, i64 1024, i32 0, metadata !177} ; [ DW_TAG_member ]
!184 = metadata !{i32 786445, metadata !174, metadata !"z", metadata !25, i32 19, i64 1024, i64 32, i64 2048, i32 0, metadata !177} ; [ DW_TAG_member ]
!185 = metadata !{i32 786445, metadata !174, metadata !"t", metadata !25, i32 20, i64 1024, i64 32, i64 3072, i32 0, metadata !177} ; [ DW_TAG_member ]
!186 = metadata !{i32 786478, i32 0, metadata !169, metadata !"crypto_sign_ed25519_ref_pack", metadata !"crypto_sign_ed25519_ref_pack", metadata !"", metadata !169, i32 234, metadata !187, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.crypto_sign_ed25519_ref_ge25519*)* @crypto_sign_ed25519_ref_pack, null, null, metadata !12, i32 235} ; [ DW_TAG_subprogram ]
!187 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !188, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!188 = metadata !{null, metadata !9, metadata !189}
!189 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !190} ; [ DW_TAG_pointer_type ]
!190 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !173} ; [ DW_TAG_const_type ]
!191 = metadata !{i32 786478, i32 0, metadata !169, metadata !"crypto_sign_ed25519_ref_isneutral_vartime", metadata !"crypto_sign_ed25519_ref_isneutral_vartime", metadata !"", metadata !169, i32 244, metadata !192, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_ge25519*)* @crypto_sign_ed25519_ref_isneutral_vartime, null, null, metadata !12, i32 245} ; [ DW_TAG_subprogram ]
!192 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !193, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!193 = metadata !{metadata !21, metadata !189}
!194 = metadata !{i32 786478, i32 0, metadata !169, metadata !"crypto_sign_ed25519_ref_double_scalarmult_vartime", metadata !"crypto_sign_ed25519_ref_double_scalarmult_vartime", metadata !"", metadata !169, i32 253, metadata !195, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_double_scalarmult_vartime, null, null, metadata !12, i32 254} ; [ DW_TAG_subprogram ]
!195 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !196, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!196 = metadata !{null, metadata !172, metadata !189, metadata !197, metadata !189, metadata !197}
!197 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !198} ; [ DW_TAG_pointer_type ]
!198 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !199} ; [ DW_TAG_const_type ]
!199 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !169, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !200} ; [ DW_TAG_typedef ]
!200 = metadata !{i32 786451, null, metadata !"", metadata !38, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !201, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!201 = metadata !{metadata !202}
!202 = metadata !{i32 786445, metadata !200, metadata !"v", metadata !38, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !181} ; [ DW_TAG_member ]
!203 = metadata !{i32 786478, i32 0, metadata !169, metadata !"crypto_sign_ed25519_ref_scalarmult_base", metadata !"crypto_sign_ed25519_ref_scalarmult_base", metadata !"", metadata !169, i32 297, metadata !204, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_scalarmult_base, null, null, metadata !12, i32 298} ; [ DW_TAG_subprogram ]
!204 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !205, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!205 = metadata !{null, metadata !172, metadata !197}
!206 = metadata !{i32 786478, i32 0, metadata !169, metadata !"ge25519_mixadd2", metadata !"ge25519_mixadd2", metadata !"", metadata !169, i32 74, metadata !207, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.ge25519_aff*)* @ge25519_mixadd2, null, null, metadata !12, i32 75} ; [ DW_TAG_subprogram ]
!207 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !208, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!208 = metadata !{null, metadata !172, metadata !209}
!209 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !210} ; [ DW_TAG_pointer_type ]
!210 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !211} ; [ DW_TAG_const_type ]
!211 = metadata !{i32 786454, null, metadata !"ge25519_aff", metadata !169, i32 42, i64 0, i64 0, i64 0, i32 0, metadata !212} ; [ DW_TAG_typedef ]
!212 = metadata !{i32 786451, null, metadata !"", metadata !169, i32 38, i64 2048, i64 32, i32 0, i32 0, null, metadata !213, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!213 = metadata !{metadata !214, metadata !215}
!214 = metadata !{i32 786445, metadata !212, metadata !"x", metadata !169, i32 40, i64 1024, i64 32, i64 0, i32 0, metadata !177} ; [ DW_TAG_member ]
!215 = metadata !{i32 786445, metadata !212, metadata !"y", metadata !169, i32 41, i64 1024, i64 32, i64 1024, i32 0, metadata !177} ; [ DW_TAG_member ]
!216 = metadata !{i32 786478, i32 0, metadata !169, metadata !"choose_t", metadata !"choose_t", metadata !"", metadata !169, i32 161, metadata !217, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ge25519_aff*, i64, i8)* @choose_t, null, null, metadata !12, i32 162} ; [ DW_TAG_subprogram ]
!217 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !218, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!218 = metadata !{null, metadata !219, metadata !58, metadata !141}
!219 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !211} ; [ DW_TAG_pointer_type ]
!220 = metadata !{i32 786478, i32 0, metadata !169, metadata !"negative", metadata !"negative", metadata !"", metadata !169, i32 154, metadata !221, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8 (i8)* @negative, null, null, metadata !12, i32 155} ; [ DW_TAG_subprogram ]
!221 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !222, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!222 = metadata !{metadata !10, metadata !141}
!223 = metadata !{i32 786478, i32 0, metadata !169, metadata !"equal", metadata !"equal", metadata !"", metadata !169, i32 143, metadata !224, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8 (i8, i8)* @equal, null, null, metadata !12, i32 144} ; [ DW_TAG_subprogram ]
!224 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !225, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!225 = metadata !{metadata !10, metadata !141, metadata !141}
!226 = metadata !{i32 786478, i32 0, metadata !169, metadata !"cmov_aff", metadata !"cmov_aff", metadata !"", metadata !169, i32 137, metadata !227, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ge25519_aff*, %struct.ge25519_aff*, i8)* @cmov_aff, null, null, metadata !12, i32 138} ; [ DW_TAG_subprogram ]
!227 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !228, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!228 = metadata !{null, metadata !219, metadata !209, metadata !10}
!229 = metadata !{i32 786478, i32 0, metadata !169, metadata !"p1p1_to_p2", metadata !"p1p1_to_p2", metadata !"", metadata !169, i32 60, metadata !230, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ge25519_p2*, %struct.ge25519_p1p1*)* @p1p1_to_p2, null, null, metadata !12, i32 61} ; [ DW_TAG_subprogram ]
!230 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !231, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!231 = metadata !{null, metadata !232, metadata !239}
!232 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !233} ; [ DW_TAG_pointer_type ]
!233 = metadata !{i32 786454, null, metadata !"ge25519_p2", metadata !169, i32 36, i64 0, i64 0, i64 0, i32 0, metadata !234} ; [ DW_TAG_typedef ]
!234 = metadata !{i32 786451, null, metadata !"", metadata !169, i32 31, i64 3072, i64 32, i32 0, i32 0, null, metadata !235, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!235 = metadata !{metadata !236, metadata !237, metadata !238}
!236 = metadata !{i32 786445, metadata !234, metadata !"x", metadata !169, i32 33, i64 1024, i64 32, i64 0, i32 0, metadata !177} ; [ DW_TAG_member ]
!237 = metadata !{i32 786445, metadata !234, metadata !"y", metadata !169, i32 34, i64 1024, i64 32, i64 1024, i32 0, metadata !177} ; [ DW_TAG_member ]
!238 = metadata !{i32 786445, metadata !234, metadata !"z", metadata !169, i32 35, i64 1024, i64 32, i64 2048, i32 0, metadata !177} ; [ DW_TAG_member ]
!239 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !240} ; [ DW_TAG_pointer_type ]
!240 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !241} ; [ DW_TAG_const_type ]
!241 = metadata !{i32 786454, null, metadata !"ge25519_p1p1", metadata !169, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !242} ; [ DW_TAG_typedef ]
!242 = metadata !{i32 786451, null, metadata !"", metadata !169, i32 23, i64 4096, i64 32, i32 0, i32 0, null, metadata !243, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!243 = metadata !{metadata !244, metadata !245, metadata !246, metadata !247}
!244 = metadata !{i32 786445, metadata !242, metadata !"x", metadata !169, i32 25, i64 1024, i64 32, i64 0, i32 0, metadata !177} ; [ DW_TAG_member ]
!245 = metadata !{i32 786445, metadata !242, metadata !"z", metadata !169, i32 26, i64 1024, i64 32, i64 1024, i32 0, metadata !177} ; [ DW_TAG_member ]
!246 = metadata !{i32 786445, metadata !242, metadata !"y", metadata !169, i32 27, i64 1024, i64 32, i64 2048, i32 0, metadata !177} ; [ DW_TAG_member ]
!247 = metadata !{i32 786445, metadata !242, metadata !"t", metadata !169, i32 28, i64 1024, i64 32, i64 3072, i32 0, metadata !177} ; [ DW_TAG_member ]
!248 = metadata !{i32 786478, i32 0, metadata !169, metadata !"add_p1p1", metadata !"add_p1p1", metadata !"", metadata !169, i32 97, metadata !249, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ge25519_p1p1*, %struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_ge25519*)* @add_p1p1, null, null, metadata !12, i32 98} ; [ DW_TAG_subprogram ]
!249 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !250, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!250 = metadata !{null, metadata !251, metadata !189, metadata !189}
!251 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !241} ; [ DW_TAG_pointer_type ]
!252 = metadata !{i32 786478, i32 0, metadata !169, metadata !"p1p1_to_p3", metadata !"p1p1_to_p3", metadata !"", metadata !169, i32 67, metadata !253, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.ge25519_p1p1*)* @p1p1_to_p3, null, null, metadata !12, i32 68} ; [ DW_TAG_subprogram ]
!253 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !254, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!254 = metadata !{null, metadata !172, metadata !239}
!255 = metadata !{i32 786478, i32 0, metadata !169, metadata !"dbl_p1p1", metadata !"dbl_p1p1", metadata !"", metadata !169, i32 118, metadata !256, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ge25519_p1p1*, %struct.ge25519_p2*)* @dbl_p1p1, null, null, metadata !12, i32 119} ; [ DW_TAG_subprogram ]
!256 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !257, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!257 = metadata !{null, metadata !251, metadata !258}
!258 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !259} ; [ DW_TAG_pointer_type ]
!259 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !233} ; [ DW_TAG_const_type ]
!260 = metadata !{i32 786478, i32 0, metadata !169, metadata !"setneutral", metadata !"setneutral", metadata !"", metadata !169, i32 174, metadata !261, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_ge25519*)* @setneutral, null, null, metadata !12, i32 175} ; [ DW_TAG_subprogram ]
!261 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !262, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!262 = metadata !{null, metadata !172}
!263 = metadata !{metadata !264}
!264 = metadata !{metadata !265, metadata !266, metadata !268, metadata !272, metadata !273}
!265 = metadata !{i32 786484, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base", metadata !"crypto_sign_ed25519_ref_ge25519_base", metadata !"", metadata !169, i32 46, metadata !190, i32 0, i32 1, %struct.crypto_sign_ed25519_ref_ge25519* @crypto_sign_ed25519_ref_ge25519_base} ; [ DW_TAG_variable ]
!266 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_ec2d", metadata !"ge25519_ec2d", metadata !"", metadata !169, i32 15, metadata !267, i32 1, i32 1, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_ec2d} ; [ DW_TAG_variable ]
!267 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !177} ; [ DW_TAG_const_type ]
!268 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_base_multiples_affine", metadata !"ge25519_base_multiples_affine", metadata !"", metadata !169, i32 56, metadata !269, i32 1, i32 1, [425 x %struct.ge25519_aff]* @ge25519_base_multiples_affine} ; [ DW_TAG_variable ]
!269 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 870400, i64 32, i32 0, i32 0, metadata !210, metadata !270, i32 0, i32 0} ; [ DW_TAG_array_type ]
!270 = metadata !{metadata !271}
!271 = metadata !{i32 786465, i64 0, i64 424}     ; [ DW_TAG_subrange_type ]
!272 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_sqrtm1", metadata !"ge25519_sqrtm1", metadata !"", metadata !169, i32 18, metadata !267, i32 1, i32 1, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_sqrtm1} ; [ DW_TAG_variable ]
!273 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_ecd", metadata !"ge25519_ecd", metadata !"", metadata !169, i32 12, metadata !267, i32 1, i32 1, %struct.crypto_sign_ed25519_ref_fe25519* @ge25519_ecd} ; [ DW_TAG_variable ]
!274 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/fe25519.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, metadata !1, metadata !1, metadata !275, metadata !1} ; [ DW_TAG_compile_unit ]
!275 = metadata !{metadata !276}
!276 = metadata !{metadata !277, metadata !286, metadata !289, metadata !294, metadata !297, metadata !300, metadata !303, metadata !306, metadata !307, metadata !308, metadata !311, metadata !314, metadata !315, metadata !316, metadata !317, metadata !318, metadata !319, metadata !320, metadata !323, metadata !324, metadata !325, metadata !328}
!277 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_freeze", metadata !"crypto_sign_ed25519_ref_fe25519_freeze", metadata !"", metadata !278, i32 74, metadata !279, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_freeze, null, null, metadata !12, i32 75} ; [ DW_TAG_subprogram ]
!278 = metadata !{i32 786473, metadata !"ed25519_ref/src/fe25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!279 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !280, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!280 = metadata !{null, metadata !281}
!281 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !282} ; [ DW_TAG_pointer_type ]
!282 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !278, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !283} ; [ DW_TAG_typedef ]
!283 = metadata !{i32 786451, null, metadata !"", metadata !33, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !284, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!284 = metadata !{metadata !285}
!285 = metadata !{i32 786445, metadata !283, metadata !"v", metadata !33, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !181} ; [ DW_TAG_member ]
!286 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_unpack", metadata !"crypto_sign_ed25519_ref_fe25519_unpack", metadata !"", metadata !278, i32 90, metadata !287, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, i8*)* @crypto_sign_ed25519_ref_fe25519_unpack, null, null, metadata !12, i32 91} ; [ DW_TAG_subprogram ]
!287 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !288, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!288 = metadata !{null, metadata !281, metadata !73}
!289 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_pack", metadata !"crypto_sign_ed25519_ref_fe25519_pack", metadata !"", metadata !278, i32 98, metadata !290, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_pack, null, null, metadata !12, i32 99} ; [ DW_TAG_subprogram ]
!290 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !291, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!291 = metadata !{null, metadata !9, metadata !292}
!292 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !293} ; [ DW_TAG_pointer_type ]
!293 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !282} ; [ DW_TAG_const_type ]
!294 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_iszero", metadata !"crypto_sign_ed25519_ref_fe25519_iszero", metadata !"", metadata !278, i32 107, metadata !295, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_iszero, null, null, metadata !12, i32 108} ; [ DW_TAG_subprogram ]
!295 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !296, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!296 = metadata !{metadata !21, metadata !292}
!297 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_iseq_vartime", metadata !"crypto_sign_ed25519_ref_fe25519_iseq_vartime", metadata !"", metadata !278, i32 119, metadata !298, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_iseq_vartime, null, null, metadata !12, i32 120} ; [ DW_TAG_subprogram ]
!298 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !299, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!299 = metadata !{metadata !21, metadata !292, metadata !292}
!300 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_cmov", metadata !"crypto_sign_ed25519_ref_fe25519_cmov", metadata !"", metadata !278, i32 131, metadata !301, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, i8)* @crypto_sign_ed25519_ref_fe25519_cmov, null, null, metadata !12, i32 132} ; [ DW_TAG_subprogram ]
!301 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !302, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!302 = metadata !{null, metadata !281, metadata !292, metadata !10}
!303 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_getparity", metadata !"crypto_sign_ed25519_ref_fe25519_getparity", metadata !"", metadata !278, i32 139, metadata !304, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_getparity, null, null, metadata !12, i32 140} ; [ DW_TAG_subprogram ]
!304 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !305, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!305 = metadata !{metadata !10, metadata !292}
!306 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_setone", metadata !"crypto_sign_ed25519_ref_fe25519_setone", metadata !"", metadata !278, i32 146, metadata !279, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_setone, null, null, metadata !12, i32 147} ; [ DW_TAG_subprogram ]
!307 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_setzero", metadata !"crypto_sign_ed25519_ref_fe25519_setzero", metadata !"", metadata !278, i32 153, metadata !279, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_setzero, null, null, metadata !12, i32 154} ; [ DW_TAG_subprogram ]
!308 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_neg", metadata !"crypto_sign_ed25519_ref_fe25519_neg", metadata !"", metadata !278, i32 159, metadata !309, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_neg, null, null, metadata !12, i32 160} ; [ DW_TAG_subprogram ]
!309 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !310, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!310 = metadata !{null, metadata !281, metadata !292}
!311 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_add", metadata !"crypto_sign_ed25519_ref_fe25519_add", metadata !"", metadata !278, i32 168, metadata !312, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_add, null, null, metadata !12, i32 169} ; [ DW_TAG_subprogram ]
!312 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !313, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!313 = metadata !{null, metadata !281, metadata !292, metadata !292}
!314 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_sub", metadata !"crypto_sign_ed25519_ref_fe25519_sub", metadata !"", metadata !278, i32 175, metadata !312, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_sub, null, null, metadata !12, i32 176} ; [ DW_TAG_subprogram ]
!315 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_mul", metadata !"crypto_sign_ed25519_ref_fe25519_mul", metadata !"", metadata !278, i32 186, metadata !312, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_mul, null, null, metadata !12, i32 187} ; [ DW_TAG_subprogram ]
!316 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_square", metadata !"crypto_sign_ed25519_ref_fe25519_square", metadata !"", metadata !278, i32 203, metadata !309, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_square, null, null, metadata !12, i32 204} ; [ DW_TAG_subprogram ]
!317 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_invert", metadata !"crypto_sign_ed25519_ref_fe25519_invert", metadata !"", metadata !278, i32 208, metadata !309, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_invert, null, null, metadata !12, i32 209} ; [ DW_TAG_subprogram ]
!318 = metadata !{i32 786478, i32 0, metadata !278, metadata !"crypto_sign_ed25519_ref_fe25519_pow2523", metadata !"crypto_sign_ed25519_ref_fe25519_pow2523", metadata !"", metadata !278, i32 275, metadata !309, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_pow2523, null, null, metadata !12, i32 276} ; [ DW_TAG_subprogram ]
!319 = metadata !{i32 786478, i32 0, metadata !278, metadata !"reduce_mul", metadata !"reduce_mul", metadata !"", metadata !278, i32 53, metadata !279, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*)* @reduce_mul, null, null, metadata !12, i32 54} ; [ DW_TAG_subprogram ]
!320 = metadata !{i32 786478, i32 0, metadata !278, metadata !"times19", metadata !"times19", metadata !"", metadata !278, i32 23, metadata !321, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @times19, null, null, metadata !12, i32 24} ; [ DW_TAG_subprogram ]
!321 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !322, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!322 = metadata !{metadata !182, metadata !182}
!323 = metadata !{i32 786478, i32 0, metadata !278, metadata !"times38", metadata !"times38", metadata !"", metadata !278, i32 28, metadata !321, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @times38, null, null, metadata !12, i32 29} ; [ DW_TAG_subprogram ]
!324 = metadata !{i32 786478, i32 0, metadata !278, metadata !"reduce_add_sub", metadata !"reduce_add_sub", metadata !"", metadata !278, i32 33, metadata !279, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.crypto_sign_ed25519_ref_fe25519*)* @reduce_add_sub64, null, null, metadata !12, i32 34} ; [ DW_TAG_subprogram ]
!325 = metadata !{i32 786478, i32 0, metadata !278, metadata !"ge", metadata !"ge", metadata !"", metadata !278, i32 14, metadata !326, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)* @ge, null, null, metadata !12, i32 15} ; [ DW_TAG_subprogram ]
!326 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !327, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!327 = metadata !{metadata !182, metadata !182, metadata !182}
!328 = metadata !{i32 786478, i32 0, metadata !278, metadata !"equal", metadata !"equal", metadata !"", metadata !278, i32 6, metadata !326, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)* @equal41, null, null, metadata !12, i32 7} ; [ DW_TAG_subprogram ]
!329 = metadata !{void (i8*, i8*, i32)* @_memcpy, metadata !330, metadata !331, metadata !332, metadata !333, metadata !334, metadata !335}
!330 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 0}
!331 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!332 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uchar*", metadata !"uint"}
!333 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !""}
!334 = metadata !{metadata !"kernel_arg_name", metadata !"dst", metadata !"src", metadata !"len"}
!335 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!336 = metadata !{void (i8*, i8, i32)* @_memset, metadata !337, metadata !331, metadata !338, metadata !333, metadata !339, metadata !335}
!337 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 0}
!338 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uchar", metadata !"uint"}
!339 = metadata !{metadata !"kernel_arg_name", metadata !"dst", metadata !"val", metadata !"len"}
!340 = metadata !{void (i8*, i8*, i32)* @_memmove, metadata !330, metadata !331, metadata !332, metadata !333, metadata !334, metadata !335}
!341 = metadata !{i32 (i8*, i32, i8*, i8*)* @crypto_sign, metadata !342, metadata !343, metadata !344, metadata !345, metadata !346, metadata !335}
!342 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 1, i32 1}
!343 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!344 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uint", metadata !"uchar*", metadata !"uchar*"}
!345 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !""}
!346 = metadata !{metadata !"kernel_arg_name", metadata !"mem", metadata !"num_blocks", metadata !"sk", metadata !"signature_out"}
!347 = metadata !{i32 (%struct.sha512_context_*)* @sha512_init, metadata !348, metadata !349, metadata !350, metadata !351, metadata !352, metadata !335}
!348 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!349 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!350 = metadata !{metadata !"kernel_arg_type", metadata !"sha512_context*"}
!351 = metadata !{metadata !"kernel_arg_type_qual", metadata !""}
!352 = metadata !{metadata !"kernel_arg_name", metadata !"md"}
!353 = metadata !{i32 (%struct.sha512_context_*, i8*)* @sha512_update_128, metadata !354, metadata !355, metadata !356, metadata !357, metadata !358, metadata !335}
!354 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1}
!355 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none"}
!356 = metadata !{metadata !"kernel_arg_type", metadata !"sha512_context*", metadata !"uchar*"}
!357 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const"}
!358 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"in"}
!359 = metadata !{i32 (%struct.sha512_context_*, i8*)* @sha512_update_32, metadata !354, metadata !355, metadata !356, metadata !357, metadata !358, metadata !335}
!360 = metadata !{i32 (%struct.sha512_context_*, i8*)* @sha512_final, metadata !354, metadata !355, metadata !356, metadata !361, metadata !362, metadata !335}
!361 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !""}
!362 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"out"}
!363 = metadata !{i32 (%struct.sha512_context_*, i8*)* @sha512_compress_32, metadata !354, metadata !355, metadata !356, metadata !361, metadata !364, metadata !335}
!364 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"buf"}
!365 = metadata !{i32 (%struct.sha512_context_*, i8*)* @sha512_compress_128, metadata !354, metadata !355, metadata !356, metadata !361, metadata !364, metadata !335}
!366 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, i8*)* @crypto_sign_ed25519_ref_sc25519_from32bytes, metadata !354, metadata !355, metadata !367, metadata !357, metadata !368, metadata !335}
!367 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"uchar*"}
!368 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x"}
!369 = metadata !{void (%struct.crypto_sign_ed25519_ref_shortsc25519*, i8*)* @crypto_sign_ed25519_ref_shortsc25519_from16bytes, metadata !354, metadata !355, metadata !370, metadata !357, metadata !368, metadata !335}
!370 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_shortsc25519*", metadata !"uchar*"}
!371 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, i8*)* @crypto_sign_ed25519_ref_sc25519_from64bytes, metadata !354, metadata !355, metadata !367, metadata !357, metadata !368, metadata !335}
!372 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_shortsc25519*)* @crypto_sign_ed25519_ref_sc25519_from_shortsc, metadata !354, metadata !355, metadata !373, metadata !357, metadata !368, metadata !335}
!373 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_shortsc25519*"}
!374 = metadata !{void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_to32bytes, metadata !354, metadata !355, metadata !375, metadata !357, metadata !368, metadata !335}
!375 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!376 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_iszero_vartime, metadata !348, metadata !349, metadata !377, metadata !378, metadata !379, metadata !335}
!377 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!378 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const"}
!379 = metadata !{metadata !"kernel_arg_name", metadata !"x"}
!380 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_isshort_vartime, metadata !348, metadata !349, metadata !377, metadata !378, metadata !379, metadata !335}
!381 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_lt_vartime, metadata !354, metadata !355, metadata !382, metadata !383, metadata !384, metadata !335}
!382 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!383 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const", metadata !"const"}
!384 = metadata !{metadata !"kernel_arg_name", metadata !"x", metadata !"y"}
!385 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_add, metadata !386, metadata !331, metadata !387, metadata !388, metadata !389, metadata !335}
!386 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1}
!387 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!388 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !"const"}
!389 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x", metadata !"y"}
!390 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_sub_nored, metadata !386, metadata !331, metadata !387, metadata !388, metadata !389, metadata !335}
!391 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_mul, metadata !386, metadata !331, metadata !387, metadata !388, metadata !389, metadata !335}
!392 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_shortsc25519*)* @crypto_sign_ed25519_ref_sc25519_mul_shortsc, metadata !386, metadata !331, metadata !393, metadata !388, metadata !389, metadata !335}
!393 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_shortsc25519*"}
!394 = metadata !{void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_window3, metadata !354, metadata !355, metadata !395, metadata !357, metadata !396, metadata !335}
!395 = metadata !{metadata !"kernel_arg_type", metadata !"signed char*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!396 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"s"}
!397 = metadata !{void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_window5, metadata !354, metadata !355, metadata !395, metadata !357, metadata !396, metadata !335}
!398 = metadata !{void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_sc25519_2interleave2, metadata !386, metadata !331, metadata !399, metadata !388, metadata !400, metadata !335}
!399 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!400 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"s1", metadata !"s2"}
!401 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*)* @reduce_add_sub, metadata !348, metadata !349, metadata !377, metadata !351, metadata !402, metadata !335}
!402 = metadata !{metadata !"kernel_arg_name", metadata !"r"}
!403 = metadata !{i32 (i32, i32)* @lt, metadata !404, metadata !355, metadata !405, metadata !361, metadata !406, metadata !335}
!404 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0}
!405 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_uint32", metadata !"crypto_uint32"}
!406 = metadata !{metadata !"kernel_arg_name", metadata !"a", metadata !"b"}
!407 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, i32*)* @barrett_reduce, metadata !354, metadata !355, metadata !408, metadata !357, metadata !368, metadata !335}
!408 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_uint32*"}
!409 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_ge25519*, i8*)* @crypto_sign_ed25519_ref_unpackneg_vartime, metadata !354, metadata !355, metadata !410, metadata !357, metadata !411, metadata !335}
!410 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"uchar*"}
!411 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p"}
!412 = metadata !{void (i8*, %struct.crypto_sign_ed25519_ref_ge25519*)* @crypto_sign_ed25519_ref_pack, metadata !354, metadata !355, metadata !413, metadata !357, metadata !411, metadata !335}
!413 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!414 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_ge25519*)* @crypto_sign_ed25519_ref_isneutral_vartime, metadata !348, metadata !349, metadata !415, metadata !378, metadata !416, metadata !335}
!415 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!416 = metadata !{metadata !"kernel_arg_name", metadata !"p"}
!417 = metadata !{void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_double_scalarmult_vartime, metadata !418, metadata !419, metadata !420, metadata !421, metadata !422, metadata !335}
!418 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1, i32 1}
!419 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!420 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!421 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !"const", metadata !"const", metadata !"const"}
!422 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p1", metadata !"s1", metadata !"p2", metadata !"s2"}
!423 = metadata !{void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_scalarmult_base, metadata !354, metadata !355, metadata !424, metadata !357, metadata !396, metadata !335}
!424 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!425 = metadata !{void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.ge25519_aff*)* @ge25519_mixadd2, metadata !354, metadata !355, metadata !426, metadata !357, metadata !427, metadata !335}
!426 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"ge25519_aff*"}
!427 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"q"}
!428 = metadata !{void (%struct.ge25519_aff*, i64, i8)* @choose_t, metadata !337, metadata !331, metadata !429, metadata !333, metadata !430, metadata !335}
!429 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_aff*", metadata !"ulong long", metadata !"signed char"}
!430 = metadata !{metadata !"kernel_arg_name", metadata !"t", metadata !"pos", metadata !"b"}
!431 = metadata !{i8 (i8)* @negative, metadata !432, metadata !349, metadata !433, metadata !351, metadata !434, metadata !335}
!432 = metadata !{metadata !"kernel_arg_addr_space", i32 0}
!433 = metadata !{metadata !"kernel_arg_type", metadata !"signed char"}
!434 = metadata !{metadata !"kernel_arg_name", metadata !"b"}
!435 = metadata !{i8 (i8, i8)* @equal, metadata !404, metadata !355, metadata !436, metadata !361, metadata !437, metadata !335}
!436 = metadata !{metadata !"kernel_arg_type", metadata !"signed char", metadata !"signed char"}
!437 = metadata !{metadata !"kernel_arg_name", metadata !"b", metadata !"c"}
!438 = metadata !{void (%struct.ge25519_aff*, %struct.ge25519_aff*, i8)* @cmov_aff, metadata !330, metadata !331, metadata !439, metadata !440, metadata !441, metadata !335}
!439 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_aff*", metadata !"ge25519_aff*", metadata !"uchar"}
!440 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !""}
!441 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p", metadata !"b"}
!442 = metadata !{void (%struct.ge25519_p2*, %struct.ge25519_p1p1*)* @p1p1_to_p2, metadata !354, metadata !355, metadata !443, metadata !357, metadata !411, metadata !335}
!443 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p2*", metadata !"ge25519_p1p1*"}
!444 = metadata !{void (%struct.ge25519_p1p1*, %struct.crypto_sign_ed25519_ref_ge25519*, %struct.crypto_sign_ed25519_ref_ge25519*)* @add_p1p1, metadata !386, metadata !331, metadata !445, metadata !388, metadata !446, metadata !335}
!445 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p1p1*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!446 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p", metadata !"q"}
!447 = metadata !{void (%struct.crypto_sign_ed25519_ref_ge25519*, %struct.ge25519_p1p1*)* @p1p1_to_p3, metadata !354, metadata !355, metadata !448, metadata !357, metadata !411, metadata !335}
!448 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"ge25519_p1p1*"}
!449 = metadata !{void (%struct.ge25519_p1p1*, %struct.ge25519_p2*)* @dbl_p1p1, metadata !354, metadata !355, metadata !450, metadata !357, metadata !411, metadata !335}
!450 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p1p1*", metadata !"ge25519_p2*"}
!451 = metadata !{void (%struct.crypto_sign_ed25519_ref_ge25519*)* @setneutral, metadata !348, metadata !349, metadata !415, metadata !351, metadata !402, metadata !335}
!452 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_freeze, metadata !348, metadata !349, metadata !453, metadata !351, metadata !402, metadata !335}
!453 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!454 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, i8*)* @crypto_sign_ed25519_ref_fe25519_unpack, metadata !354, metadata !355, metadata !455, metadata !357, metadata !368, metadata !335}
!455 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"uchar*"}
!456 = metadata !{void (i8*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_pack, metadata !354, metadata !355, metadata !457, metadata !357, metadata !368, metadata !335}
!457 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!458 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_iszero, metadata !348, metadata !349, metadata !453, metadata !378, metadata !379, metadata !335}
!459 = metadata !{i32 (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_iseq_vartime, metadata !354, metadata !355, metadata !460, metadata !383, metadata !384, metadata !335}
!460 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!461 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, i8)* @crypto_sign_ed25519_ref_fe25519_cmov, metadata !330, metadata !331, metadata !462, metadata !440, metadata !463, metadata !335}
!462 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"uchar"}
!463 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x", metadata !"b"}
!464 = metadata !{i8 (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_getparity, metadata !348, metadata !349, metadata !453, metadata !378, metadata !379, metadata !335}
!465 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_setone, metadata !348, metadata !349, metadata !453, metadata !351, metadata !402, metadata !335}
!466 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_setzero, metadata !348, metadata !349, metadata !453, metadata !351, metadata !402, metadata !335}
!467 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_neg, metadata !354, metadata !355, metadata !460, metadata !357, metadata !368, metadata !335}
!468 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_add, metadata !386, metadata !331, metadata !469, metadata !388, metadata !389, metadata !335}
!469 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!470 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_sub, metadata !386, metadata !331, metadata !469, metadata !388, metadata !389, metadata !335}
!471 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_mul, metadata !386, metadata !331, metadata !469, metadata !388, metadata !389, metadata !335}
!472 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_square, metadata !354, metadata !355, metadata !460, metadata !357, metadata !368, metadata !335}
!473 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_invert, metadata !354, metadata !355, metadata !460, metadata !357, metadata !368, metadata !335}
!474 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*, %struct.crypto_sign_ed25519_ref_fe25519*)* @crypto_sign_ed25519_ref_fe25519_pow2523, metadata !354, metadata !355, metadata !460, metadata !357, metadata !368, metadata !335}
!475 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*)* @reduce_mul, metadata !348, metadata !349, metadata !453, metadata !351, metadata !402, metadata !335}
!476 = metadata !{i32 (i32)* @times19, metadata !432, metadata !349, metadata !477, metadata !351, metadata !478, metadata !335}
!477 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_uint32"}
!478 = metadata !{metadata !"kernel_arg_name", metadata !"a"}
!479 = metadata !{i32 (i32)* @times38, metadata !432, metadata !349, metadata !477, metadata !351, metadata !478, metadata !335}
!480 = metadata !{void (%struct.crypto_sign_ed25519_ref_fe25519*)* @reduce_add_sub64, metadata !348, metadata !349, metadata !453, metadata !351, metadata !402, metadata !335}
!481 = metadata !{i32 (i32, i32)* @ge, metadata !404, metadata !355, metadata !405, metadata !361, metadata !406, metadata !335}
!482 = metadata !{i32 (i32, i32)* @equal41, metadata !404, metadata !355, metadata !405, metadata !361, metadata !406, metadata !335}
!483 = metadata !{i32 786689, metadata !5, metadata !"dst", metadata !6, i32 16777229, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!484 = metadata !{i32 13, i32 29, metadata !5, null}
!485 = metadata !{i32 786689, metadata !5, metadata !"src", metadata !6, i32 33554445, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!486 = metadata !{i32 13, i32 49, metadata !5, null}
!487 = metadata !{i32 786689, metadata !5, metadata !"len", metadata !6, i32 50331661, metadata !11, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!488 = metadata !{i32 13, i32 67, metadata !5, null}
!489 = metadata !{i32 786688, metadata !490, metadata !"i", metadata !6, i32 14, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!490 = metadata !{i32 786443, metadata !5, i32 13, i32 71, metadata !6, i32 0} ; [ DW_TAG_lexical_block ]
!491 = metadata !{i32 14, i32 6, metadata !490, null}
!492 = metadata !{i32 15, i32 6, metadata !493, null}
!493 = metadata !{i32 786443, metadata !490, i32 15, i32 2, metadata !6, i32 1} ; [ DW_TAG_lexical_block ]
!494 = metadata !{i32 16, i32 3, metadata !495, null}
!495 = metadata !{i32 786443, metadata !493, i32 15, i32 22, metadata !6, i32 2} ; [ DW_TAG_lexical_block ]
!496 = metadata !{i32 17, i32 2, metadata !495, null}
!497 = metadata !{i32 15, i32 18, metadata !493, null}
!498 = metadata !{i32 18, i32 1, metadata !490, null}
!499 = metadata !{i32 786689, metadata !14, metadata !"dst", metadata !6, i32 16777243, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!500 = metadata !{i32 27, i32 29, metadata !14, null}
!501 = metadata !{i32 786689, metadata !14, metadata !"val", metadata !6, i32 33554459, metadata !10, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!502 = metadata !{i32 27, i32 48, metadata !14, null}
!503 = metadata !{i32 786689, metadata !14, metadata !"len", metadata !6, i32 50331675, metadata !11, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!504 = metadata !{i32 27, i32 66, metadata !14, null}
!505 = metadata !{i32 786688, metadata !506, metadata !"i", metadata !6, i32 28, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!506 = metadata !{i32 786443, metadata !14, i32 27, i32 70, metadata !6, i32 3} ; [ DW_TAG_lexical_block ]
!507 = metadata !{i32 28, i32 6, metadata !506, null}
!508 = metadata !{i32 29, i32 6, metadata !509, null}
!509 = metadata !{i32 786443, metadata !506, i32 29, i32 2, metadata !6, i32 4} ; [ DW_TAG_lexical_block ]
!510 = metadata !{i32 30, i32 3, metadata !511, null}
!511 = metadata !{i32 786443, metadata !509, i32 29, i32 22, metadata !6, i32 5} ; [ DW_TAG_lexical_block ]
!512 = metadata !{i32 31, i32 2, metadata !511, null}
!513 = metadata !{i32 29, i32 18, metadata !509, null}
!514 = metadata !{i32 32, i32 1, metadata !506, null}
!515 = metadata !{i32 786689, metadata !17, metadata !"dst", metadata !6, i32 16777250, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!516 = metadata !{i32 34, i32 30, metadata !17, null}
!517 = metadata !{i32 786689, metadata !17, metadata !"src", metadata !6, i32 33554466, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!518 = metadata !{i32 34, i32 50, metadata !17, null}
!519 = metadata !{i32 786689, metadata !17, metadata !"len", metadata !6, i32 50331682, metadata !11, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!520 = metadata !{i32 34, i32 68, metadata !17, null}
!521 = metadata !{i32 35, i32 2, metadata !522, null}
!522 = metadata !{i32 786443, metadata !17, i32 34, i32 72, metadata !6, i32 6} ; [ DW_TAG_lexical_block ]
!523 = metadata !{i32 36, i32 1, metadata !522, null}
!524 = metadata !{i32 786689, metadata !18, metadata !"mem", metadata !6, i32 16777265, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!525 = metadata !{i32 49, i32 17, metadata !18, null}
!526 = metadata !{i32 786689, metadata !18, metadata !"num_blocks", metadata !6, i32 33554482, metadata !11, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!527 = metadata !{i32 50, i32 16, metadata !18, null}
!528 = metadata !{i32 786689, metadata !18, metadata !"sk", metadata !6, i32 50331699, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!529 = metadata !{i32 51, i32 17, metadata !18, null}
!530 = metadata !{i32 786689, metadata !18, metadata !"signature_out", metadata !6, i32 67108916, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!531 = metadata !{i32 52, i32 17, metadata !18, null}
!532 = metadata !{i32 54, i32 2, metadata !533, null}
!533 = metadata !{i32 786443, metadata !18, i32 54, i32 1, metadata !6, i32 7} ; [ DW_TAG_lexical_block ]
!534 = metadata !{i32 54, i32 36, metadata !533, null}
!535 = metadata !{i32 54, i32 66, metadata !533, null}
!536 = metadata !{i32 55, i32 1, metadata !533, null}
!537 = metadata !{i32 56, i32 1, metadata !533, null}
!538 = metadata !{i32 57, i32 1, metadata !533, null}
!539 = metadata !{i32 58, i32 1, metadata !533, null}
!540 = metadata !{i32 59, i32 1, metadata !533, null}
!541 = metadata !{i32 60, i32 1, metadata !533, null}
!542 = metadata !{i32 61, i32 1, metadata !533, null}
!543 = metadata !{i32 62, i32 1, metadata !533, null}
!544 = metadata !{i32 63, i32 1, metadata !533, null}
!545 = metadata !{i32 64, i32 1, metadata !533, null}
!546 = metadata !{i32 786688, metadata !533, metadata !"pk", metadata !6, i32 65, metadata !547, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!547 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 256, i64 8, i32 0, i32 0, metadata !10, metadata !39, i32 0, i32 0} ; [ DW_TAG_array_type ]
!548 = metadata !{i32 65, i32 16, metadata !533, null}
!549 = metadata !{i32 786688, metadata !533, metadata !"az", metadata !6, i32 66, metadata !550, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!550 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 8, i32 0, i32 0, metadata !10, metadata !551, i32 0, i32 0} ; [ DW_TAG_array_type ]
!551 = metadata !{metadata !552}
!552 = metadata !{i32 786465, i64 0, i64 63}      ; [ DW_TAG_subrange_type ]
!553 = metadata !{i32 66, i32 17, metadata !533, null}
!554 = metadata !{i32 786688, metadata !533, metadata !"nonce", metadata !6, i32 67, metadata !550, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!555 = metadata !{i32 67, i32 17, metadata !533, null}
!556 = metadata !{i32 786688, metadata !533, metadata !"hram", metadata !6, i32 68, metadata !550, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!557 = metadata !{i32 68, i32 17, metadata !533, null}
!558 = metadata !{i32 786688, metadata !533, metadata !"mlen", metadata !6, i32 69, metadata !58, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!559 = metadata !{i32 69, i32 22, metadata !533, null}
!560 = metadata !{i32 69, i32 30, metadata !533, null}
!561 = metadata !{i32 786688, metadata !533, metadata !"signature", metadata !6, i32 70, metadata !550, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!562 = metadata !{i32 70, i32 17, metadata !533, null}
!563 = metadata !{i32 70, i32 36, metadata !533, null}
!564 = metadata !{i32 786688, metadata !533, metadata !"temp_buf", metadata !6, i32 71, metadata !67, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!565 = metadata !{i32 71, i32 17, metadata !533, null}
!566 = metadata !{i32 786688, metadata !533, metadata !"i", metadata !6, i32 72, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!567 = metadata !{i32 72, i32 7, metadata !533, null}
!568 = metadata !{i32 786688, metadata !533, metadata !"j", metadata !6, i32 72, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!569 = metadata !{i32 72, i32 10, metadata !533, null}
!570 = metadata !{i32 786688, metadata !533, metadata !"sck", metadata !6, i32 73, metadata !571, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!571 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !6, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !572} ; [ DW_TAG_typedef ]
!572 = metadata !{i32 786451, null, metadata !"", metadata !38, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !573, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!573 = metadata !{metadata !574}
!574 = metadata !{i32 786445, metadata !572, metadata !"v", metadata !38, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !36} ; [ DW_TAG_member ]
!575 = metadata !{i32 73, i32 35, metadata !533, null}
!576 = metadata !{i32 786688, metadata !533, metadata !"scs", metadata !6, i32 73, metadata !571, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!577 = metadata !{i32 73, i32 40, metadata !533, null}
!578 = metadata !{i32 786688, metadata !533, metadata !"scsk", metadata !6, i32 73, metadata !571, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!579 = metadata !{i32 73, i32 45, metadata !533, null}
!580 = metadata !{i32 786688, metadata !533, metadata !"ger", metadata !6, i32 74, metadata !27, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!581 = metadata !{i32 74, i32 35, metadata !533, null}
!582 = metadata !{i32 786688, metadata !533, metadata !"hash", metadata !6, i32 75, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!583 = metadata !{i32 786454, null, metadata !"sha512_context", metadata !6, i32 15, i64 0, i64 0, i64 0, i32 0, metadata !584} ; [ DW_TAG_typedef ]
!584 = metadata !{i32 786451, null, metadata !"sha512_context_", metadata !54, i32 11, i64 1664, i64 64, i32 0, i32 0, null, metadata !585, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!585 = metadata !{metadata !586, metadata !587, metadata !588, metadata !589}
!586 = metadata !{i32 786445, metadata !584, metadata !"length", metadata !54, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !57} ; [ DW_TAG_member ]
!587 = metadata !{i32 786445, metadata !584, metadata !"state", metadata !54, i32 12, i64 512, i64 64, i64 64, i32 0, metadata !60} ; [ DW_TAG_member ]
!588 = metadata !{i32 786445, metadata !584, metadata !"curlen", metadata !54, i32 13, i64 64, i64 64, i64 576, i32 0, metadata !64} ; [ DW_TAG_member ]
!589 = metadata !{i32 786445, metadata !584, metadata !"buf", metadata !54, i32 14, i64 1024, i64 8, i64 640, i32 0, metadata !67} ; [ DW_TAG_member ]
!590 = metadata !{i32 75, i32 18, metadata !533, null}
!591 = metadata !{i32 78, i32 3, metadata !533, null}
!592 = metadata !{i32 82, i32 3, metadata !533, null}
!593 = metadata !{i32 83, i32 3, metadata !533, null}
!594 = metadata !{i32 84, i32 3, metadata !533, null}
!595 = metadata !{i32 86, i32 3, metadata !533, null}
!596 = metadata !{i32 87, i32 3, metadata !533, null}
!597 = metadata !{i32 88, i32 3, metadata !533, null}
!598 = metadata !{i32 96, i32 3, metadata !533, null}
!599 = metadata !{i32 100, i32 3, metadata !533, null}
!600 = metadata !{i32 102, i32 3, metadata !533, null}
!601 = metadata !{i32 104, i32 7, metadata !602, null}
!602 = metadata !{i32 786443, metadata !533, i32 104, i32 3, metadata !6, i32 8} ; [ DW_TAG_lexical_block ]
!603 = metadata !{i32 106, i32 8, metadata !604, null}
!604 = metadata !{i32 786443, metadata !605, i32 106, i32 4, metadata !6, i32 10} ; [ DW_TAG_lexical_block ]
!605 = metadata !{i32 786443, metadata !602, i32 104, i32 30, metadata !6, i32 9} ; [ DW_TAG_lexical_block ]
!606 = metadata !{i32 107, i32 5, metadata !607, null}
!607 = metadata !{i32 786443, metadata !604, i32 106, i32 24, metadata !6, i32 11} ; [ DW_TAG_lexical_block ]
!608 = metadata !{i32 108, i32 4, metadata !607, null}
!609 = metadata !{i32 106, i32 20, metadata !604, null}
!610 = metadata !{i32 109, i32 4, metadata !605, null}
!611 = metadata !{i32 110, i32 3, metadata !605, null}
!612 = metadata !{i32 104, i32 26, metadata !602, null}
!613 = metadata !{i32 111, i32 3, metadata !533, null}
!614 = metadata !{i32 114, i32 3, metadata !533, null}
!615 = metadata !{i32 115, i32 3, metadata !533, null}
!616 = metadata !{i32 117, i32 3, metadata !533, null}
!617 = metadata !{i32 122, i32 3, metadata !533, null}
!618 = metadata !{i32 126, i32 3, metadata !533, null}
!619 = metadata !{i32 127, i32 3, metadata !533, null}
!620 = metadata !{i32 128, i32 3, metadata !533, null}
!621 = metadata !{i32 130, i32 7, metadata !622, null}
!622 = metadata !{i32 786443, metadata !533, i32 130, i32 3, metadata !6, i32 12} ; [ DW_TAG_lexical_block ]
!623 = metadata !{i32 132, i32 9, metadata !624, null}
!624 = metadata !{i32 786443, metadata !625, i32 132, i32 5, metadata !6, i32 14} ; [ DW_TAG_lexical_block ]
!625 = metadata !{i32 786443, metadata !622, i32 130, i32 30, metadata !6, i32 13} ; [ DW_TAG_lexical_block ]
!626 = metadata !{i32 133, i32 7, metadata !627, null}
!627 = metadata !{i32 786443, metadata !624, i32 132, i32 25, metadata !6, i32 15} ; [ DW_TAG_lexical_block ]
!628 = metadata !{i32 134, i32 5, metadata !627, null}
!629 = metadata !{i32 132, i32 21, metadata !624, null}
!630 = metadata !{i32 135, i32 2, metadata !625, null}
!631 = metadata !{i32 136, i32 3, metadata !625, null}
!632 = metadata !{i32 130, i32 26, metadata !622, null}
!633 = metadata !{i32 137, i32 3, metadata !533, null}
!634 = metadata !{i32 141, i32 3, metadata !533, null}
!635 = metadata !{i32 142, i32 3, metadata !533, null}
!636 = metadata !{i32 143, i32 3, metadata !533, null}
!637 = metadata !{i32 144, i32 3, metadata !533, null}
!638 = metadata !{i32 148, i32 3, metadata !533, null}
!639 = metadata !{i32 154, i32 3, metadata !533, null}
!640 = metadata !{i32 155, i32 3, metadata !533, null}
!641 = metadata !{i32 786689, metadata !47, metadata !"md", metadata !48, i32 16777432, metadata !51, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!642 = metadata !{i32 216, i32 34, metadata !47, null}
!643 = metadata !{i32 219, i32 5, metadata !644, null}
!644 = metadata !{i32 786443, metadata !47, i32 216, i32 38, metadata !48, i32 0} ; [ DW_TAG_lexical_block ]
!645 = metadata !{i32 220, i32 5, metadata !644, null}
!646 = metadata !{i32 221, i32 5, metadata !644, null}
!647 = metadata !{i32 222, i32 5, metadata !644, null}
!648 = metadata !{i32 223, i32 5, metadata !644, null}
!649 = metadata !{i32 224, i32 5, metadata !644, null}
!650 = metadata !{i32 225, i32 5, metadata !644, null}
!651 = metadata !{i32 226, i32 5, metadata !644, null}
!652 = metadata !{i32 227, i32 5, metadata !644, null}
!653 = metadata !{i32 228, i32 5, metadata !644, null}
!654 = metadata !{i32 230, i32 5, metadata !644, null}
!655 = metadata !{i32 786689, metadata !70, metadata !"md", metadata !48, i32 16777456, metadata !51, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!656 = metadata !{i32 240, i32 40, metadata !70, null}
!657 = metadata !{i32 786689, metadata !70, metadata !"in", metadata !48, i32 33554672, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!658 = metadata !{i32 240, i32 64, metadata !70, null}
!659 = metadata !{i32 241, i32 2, metadata !660, null}
!660 = metadata !{i32 786443, metadata !70, i32 241, i32 1, metadata !48, i32 1} ; [ DW_TAG_lexical_block ]
!661 = metadata !{i32 242, i32 1, metadata !660, null}
!662 = metadata !{i32 243, i32 1, metadata !660, null}
!663 = metadata !{i32 244, i32 1, metadata !660, null}
!664 = metadata !{i32 245, i32 1, metadata !660, null}
!665 = metadata !{i32 246, i32 1, metadata !660, null}
!666 = metadata !{i32 247, i32 1, metadata !660, null}
!667 = metadata !{i32 248, i32 1, metadata !660, null}
!668 = metadata !{i32 249, i32 1, metadata !660, null}
!669 = metadata !{i32 786688, metadata !660, metadata !"n", metadata !48, i32 250, metadata !64, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!670 = metadata !{i32 250, i32 9, metadata !660, null}
!671 = metadata !{i32 786688, metadata !660, metadata !"i", metadata !48, i32 251, metadata !64, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!672 = metadata !{i32 251, i32 12, metadata !660, null}
!673 = metadata !{i32 786688, metadata !660, metadata !"inlen", metadata !48, i32 252, metadata !64, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!674 = metadata !{i32 252, i32 12, metadata !660, null}
!675 = metadata !{i32 252, i32 23, metadata !660, null}
!676 = metadata !{i32 786688, metadata !660, metadata !"temp_index", metadata !48, i32 253, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!677 = metadata !{i32 253, i32 9, metadata !660, null}
!678 = metadata !{i32 786688, metadata !660, metadata !"err", metadata !48, i32 254, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!679 = metadata !{i32 254, i32 9, metadata !660, null}
!680 = metadata !{i32 786688, metadata !660, metadata !"temp_buf", metadata !48, i32 255, metadata !67, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!681 = metadata !{i32 255, i32 19, metadata !660, null}
!682 = metadata !{i32 258, i32 5, metadata !660, null}
!683 = metadata !{i32 259, i32 8, metadata !684, null}
!684 = metadata !{i32 786443, metadata !660, i32 258, i32 39, metadata !48, i32 2} ; [ DW_TAG_lexical_block ]
!685 = metadata !{i32 261, i32 5, metadata !660, null}
!686 = metadata !{i32 262, i32 9, metadata !687, null}
!687 = metadata !{i32 786443, metadata !660, i32 261, i32 23, metadata !48, i32 3} ; [ DW_TAG_lexical_block ]
!688 = metadata !{i32 263, i32 23, metadata !689, null}
!689 = metadata !{i32 786443, metadata !687, i32 262, i32 46, metadata !48, i32 4} ; [ DW_TAG_lexical_block ]
!690 = metadata !{i32 264, i32 15, metadata !691, null}
!691 = metadata !{i32 786443, metadata !689, i32 263, i32 75, metadata !48, i32 5} ; [ DW_TAG_lexical_block ]
!692 = metadata !{i32 266, i32 12, metadata !689, null}
!693 = metadata !{i32 267, i32 12, metadata !689, null}
!694 = metadata !{i32 268, i32 12, metadata !689, null}
!695 = metadata !{i32 269, i32 9, metadata !689, null}
!696 = metadata !{i32 270, i32 12, metadata !697, null}
!697 = metadata !{i32 786443, metadata !687, i32 269, i32 16, metadata !48, i32 6} ; [ DW_TAG_lexical_block ]
!698 = metadata !{i32 272, i32 17, metadata !699, null}
!699 = metadata !{i32 786443, metadata !697, i32 272, i32 12, metadata !48, i32 7} ; [ DW_TAG_lexical_block ]
!700 = metadata !{i32 273, i32 13, metadata !701, null}
!701 = metadata !{i32 786443, metadata !699, i32 272, i32 36, metadata !48, i32 8} ; [ DW_TAG_lexical_block ]
!702 = metadata !{i32 274, i32 12, metadata !701, null}
!703 = metadata !{i32 272, i32 31, metadata !699, null}
!704 = metadata !{i32 277, i32 12, metadata !697, null}
!705 = metadata !{i32 278, i32 12, metadata !697, null}
!706 = metadata !{i32 279, i32 12, metadata !697, null}
!707 = metadata !{i32 280, i32 12, metadata !697, null}
!708 = metadata !{i32 281, i32 17, metadata !709, null}
!709 = metadata !{i32 786443, metadata !710, i32 281, i32 13, metadata !48, i32 10} ; [ DW_TAG_lexical_block ]
!710 = metadata !{i32 786443, metadata !697, i32 280, i32 35, metadata !48, i32 9} ; [ DW_TAG_lexical_block ]
!711 = metadata !{i32 282, i32 6, metadata !712, null}
!712 = metadata !{i32 786443, metadata !709, i32 281, i32 60, metadata !48, i32 11} ; [ DW_TAG_lexical_block ]
!713 = metadata !{i32 283, i32 5, metadata !712, null}
!714 = metadata !{i32 281, i32 47, metadata !709, null}
!715 = metadata !{i32 284, i32 26, metadata !710, null}
!716 = metadata !{i32 285, i32 18, metadata !717, null}
!717 = metadata !{i32 786443, metadata !710, i32 284, i32 67, metadata !48, i32 12} ; [ DW_TAG_lexical_block ]
!718 = metadata !{i32 287, i32 20, metadata !719, null}
!719 = metadata !{i32 786443, metadata !710, i32 287, i32 16, metadata !48, i32 13} ; [ DW_TAG_lexical_block ]
!720 = metadata !{i32 288, i32 6, metadata !721, null}
!721 = metadata !{i32 786443, metadata !719, i32 287, i32 63, metadata !48, i32 14} ; [ DW_TAG_lexical_block ]
!722 = metadata !{i32 289, i32 5, metadata !721, null}
!723 = metadata !{i32 287, i32 50, metadata !719, null}
!724 = metadata !{i32 290, i32 15, metadata !710, null}
!725 = metadata !{i32 291, i32 15, metadata !710, null}
!726 = metadata !{i32 292, i32 12, metadata !710, null}
!727 = metadata !{i32 294, i32 5, metadata !687, null}
!728 = metadata !{i32 295, i32 5, metadata !660, null}
!729 = metadata !{i32 296, i32 1, metadata !660, null}
!730 = metadata !{i32 786689, metadata !80, metadata !"md", metadata !48, i32 16777312, metadata !51, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!731 = metadata !{i32 96, i32 48, metadata !80, null}
!732 = metadata !{i32 786689, metadata !80, metadata !"buf", metadata !48, i32 33554528, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!733 = metadata !{i32 96, i32 66, metadata !80, null}
!734 = metadata !{i32 97, i32 2, metadata !735, null}
!735 = metadata !{i32 786443, metadata !80, i32 97, i32 1, metadata !48, i32 58} ; [ DW_TAG_lexical_block ]
!736 = metadata !{i32 98, i32 1, metadata !735, null}
!737 = metadata !{i32 99, i32 1, metadata !735, null}
!738 = metadata !{i32 100, i32 1, metadata !735, null}
!739 = metadata !{i32 101, i32 1, metadata !735, null}
!740 = metadata !{i32 102, i32 1, metadata !735, null}
!741 = metadata !{i32 103, i32 1, metadata !735, null}
!742 = metadata !{i32 104, i32 1, metadata !735, null}
!743 = metadata !{i32 786688, metadata !735, metadata !"S", metadata !48, i32 105, metadata !60, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!744 = metadata !{i32 105, i32 11, metadata !735, null}
!745 = metadata !{i32 786688, metadata !735, metadata !"W", metadata !48, i32 105, metadata !746, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!746 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 5120, i64 64, i32 0, i32 0, metadata !57, metadata !86, i32 0, i32 0} ; [ DW_TAG_array_type ]
!747 = metadata !{i32 105, i32 17, metadata !735, null}
!748 = metadata !{i32 786688, metadata !735, metadata !"t0", metadata !48, i32 105, metadata !57, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!749 = metadata !{i32 105, i32 24, metadata !735, null}
!750 = metadata !{i32 786688, metadata !735, metadata !"t1", metadata !48, i32 105, metadata !57, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!751 = metadata !{i32 105, i32 28, metadata !735, null}
!752 = metadata !{i32 786688, metadata !735, metadata !"i", metadata !48, i32 106, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!753 = metadata !{i32 106, i32 9, metadata !735, null}
!754 = metadata !{i32 109, i32 10, metadata !755, null}
!755 = metadata !{i32 786443, metadata !735, i32 109, i32 5, metadata !48, i32 59} ; [ DW_TAG_lexical_block ]
!756 = metadata !{i32 110, i32 9, metadata !757, null}
!757 = metadata !{i32 786443, metadata !755, i32 109, i32 29, metadata !48, i32 60} ; [ DW_TAG_lexical_block ]
!758 = metadata !{i32 111, i32 5, metadata !757, null}
!759 = metadata !{i32 109, i32 24, metadata !755, null}
!760 = metadata !{i32 114, i32 10, metadata !761, null}
!761 = metadata !{i32 786443, metadata !735, i32 114, i32 5, metadata !48, i32 61} ; [ DW_TAG_lexical_block ]
!762 = metadata !{i32 115, i32 11, metadata !763, null}
!763 = metadata !{i32 786443, metadata !764, i32 115, i32 9, metadata !48, i32 63} ; [ DW_TAG_lexical_block ]
!764 = metadata !{i32 786443, metadata !761, i32 114, i32 30, metadata !48, i32 62} ; [ DW_TAG_lexical_block ]
!765 = metadata !{i32 116, i32 5, metadata !764, null}
!766 = metadata !{i32 114, i32 25, metadata !761, null}
!767 = metadata !{i32 119, i32 10, metadata !768, null}
!768 = metadata !{i32 786443, metadata !735, i32 119, i32 5, metadata !48, i32 64} ; [ DW_TAG_lexical_block ]
!769 = metadata !{i32 120, i32 9, metadata !770, null}
!770 = metadata !{i32 786443, metadata !768, i32 119, i32 31, metadata !48, i32 65} ; [ DW_TAG_lexical_block ]
!771 = metadata !{i32 121, i32 5, metadata !770, null}
!772 = metadata !{i32 119, i32 26, metadata !768, null}
!773 = metadata !{i32 130, i32 10, metadata !774, null}
!774 = metadata !{i32 786443, metadata !735, i32 130, i32 5, metadata !48, i32 66} ; [ DW_TAG_lexical_block ]
!775 = metadata !{i32 131, i32 8, metadata !776, null}
!776 = metadata !{i32 786443, metadata !774, i32 130, i32 33, metadata !48, i32 67} ; [ DW_TAG_lexical_block ]
!777 = metadata !{i32 131, i32 0, metadata !776, null}
!778 = metadata !{i32 132, i32 8, metadata !776, null}
!779 = metadata !{i32 132, i32 0, metadata !776, null}
!780 = metadata !{i32 133, i32 8, metadata !776, null}
!781 = metadata !{i32 133, i32 0, metadata !776, null}
!782 = metadata !{i32 134, i32 8, metadata !776, null}
!783 = metadata !{i32 134, i32 0, metadata !776, null}
!784 = metadata !{i32 135, i32 8, metadata !776, null}
!785 = metadata !{i32 135, i32 0, metadata !776, null}
!786 = metadata !{i32 136, i32 8, metadata !776, null}
!787 = metadata !{i32 136, i32 0, metadata !776, null}
!788 = metadata !{i32 137, i32 8, metadata !776, null}
!789 = metadata !{i32 137, i32 0, metadata !776, null}
!790 = metadata !{i32 138, i32 8, metadata !776, null}
!791 = metadata !{i32 138, i32 0, metadata !776, null}
!792 = metadata !{i32 139, i32 4, metadata !776, null}
!793 = metadata !{i32 130, i32 25, metadata !774, null}
!794 = metadata !{i32 146, i32 9, metadata !795, null}
!795 = metadata !{i32 786443, metadata !735, i32 146, i32 4, metadata !48, i32 68} ; [ DW_TAG_lexical_block ]
!796 = metadata !{i32 147, i32 9, metadata !797, null}
!797 = metadata !{i32 786443, metadata !795, i32 146, i32 28, metadata !48, i32 69} ; [ DW_TAG_lexical_block ]
!798 = metadata !{i32 148, i32 5, metadata !797, null}
!799 = metadata !{i32 146, i32 23, metadata !795, null}
!800 = metadata !{i32 150, i32 5, metadata !735, null}
!801 = metadata !{i32 786689, metadata !75, metadata !"md", metadata !48, i32 16777514, metadata !51, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!802 = metadata !{i32 298, i32 39, metadata !75, null}
!803 = metadata !{i32 786689, metadata !75, metadata !"in", metadata !48, i32 33554730, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!804 = metadata !{i32 298, i32 63, metadata !75, null}
!805 = metadata !{i32 299, i32 2, metadata !806, null}
!806 = metadata !{i32 786443, metadata !75, i32 299, i32 1, metadata !48, i32 15} ; [ DW_TAG_lexical_block ]
!807 = metadata !{i32 300, i32 1, metadata !806, null}
!808 = metadata !{i32 301, i32 1, metadata !806, null}
!809 = metadata !{i32 302, i32 1, metadata !806, null}
!810 = metadata !{i32 303, i32 1, metadata !806, null}
!811 = metadata !{i32 304, i32 1, metadata !806, null}
!812 = metadata !{i32 305, i32 1, metadata !806, null}
!813 = metadata !{i32 306, i32 1, metadata !806, null}
!814 = metadata !{i32 786688, metadata !806, metadata !"n", metadata !48, i32 307, metadata !64, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!815 = metadata !{i32 307, i32 9, metadata !806, null}
!816 = metadata !{i32 786688, metadata !806, metadata !"i", metadata !48, i32 308, metadata !64, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!817 = metadata !{i32 308, i32 12, metadata !806, null}
!818 = metadata !{i32 786688, metadata !806, metadata !"inlen", metadata !48, i32 309, metadata !64, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!819 = metadata !{i32 309, i32 12, metadata !806, null}
!820 = metadata !{i32 309, i32 22, metadata !806, null}
!821 = metadata !{i32 786688, metadata !806, metadata !"temp_index", metadata !48, i32 310, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!822 = metadata !{i32 310, i32 9, metadata !806, null}
!823 = metadata !{i32 786688, metadata !806, metadata !"temp_buf", metadata !48, i32 311, metadata !67, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!824 = metadata !{i32 311, i32 19, metadata !806, null}
!825 = metadata !{i32 786688, metadata !806, metadata !"err", metadata !48, i32 312, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!826 = metadata !{i32 312, i32 9, metadata !806, null}
!827 = metadata !{i32 315, i32 5, metadata !806, null}
!828 = metadata !{i32 316, i32 8, metadata !829, null}
!829 = metadata !{i32 786443, metadata !806, i32 315, i32 39, metadata !48, i32 16} ; [ DW_TAG_lexical_block ]
!830 = metadata !{i32 318, i32 5, metadata !806, null}
!831 = metadata !{i32 319, i32 9, metadata !832, null}
!832 = metadata !{i32 786443, metadata !806, i32 318, i32 23, metadata !48, i32 17} ; [ DW_TAG_lexical_block ]
!833 = metadata !{i32 320, i32 23, metadata !834, null}
!834 = metadata !{i32 786443, metadata !832, i32 319, i32 46, metadata !48, i32 18} ; [ DW_TAG_lexical_block ]
!835 = metadata !{i32 321, i32 15, metadata !836, null}
!836 = metadata !{i32 786443, metadata !834, i32 320, i32 74, metadata !48, i32 19} ; [ DW_TAG_lexical_block ]
!837 = metadata !{i32 323, i32 12, metadata !834, null}
!838 = metadata !{i32 324, i32 12, metadata !834, null}
!839 = metadata !{i32 325, i32 12, metadata !834, null}
!840 = metadata !{i32 326, i32 9, metadata !834, null}
!841 = metadata !{i32 327, i32 12, metadata !842, null}
!842 = metadata !{i32 786443, metadata !832, i32 326, i32 16, metadata !48, i32 20} ; [ DW_TAG_lexical_block ]
!843 = metadata !{i32 329, i32 17, metadata !844, null}
!844 = metadata !{i32 786443, metadata !842, i32 329, i32 12, metadata !48, i32 21} ; [ DW_TAG_lexical_block ]
!845 = metadata !{i32 330, i32 13, metadata !846, null}
!846 = metadata !{i32 786443, metadata !844, i32 329, i32 36, metadata !48, i32 22} ; [ DW_TAG_lexical_block ]
!847 = metadata !{i32 331, i32 12, metadata !846, null}
!848 = metadata !{i32 329, i32 31, metadata !844, null}
!849 = metadata !{i32 334, i32 12, metadata !842, null}
!850 = metadata !{i32 335, i32 12, metadata !842, null}
!851 = metadata !{i32 336, i32 12, metadata !842, null}
!852 = metadata !{i32 337, i32 4, metadata !842, null}
!853 = metadata !{i32 338, i32 9, metadata !854, null}
!854 = metadata !{i32 786443, metadata !855, i32 338, i32 5, metadata !48, i32 24} ; [ DW_TAG_lexical_block ]
!855 = metadata !{i32 786443, metadata !842, i32 337, i32 27, metadata !48, i32 23} ; [ DW_TAG_lexical_block ]
!856 = metadata !{i32 339, i32 6, metadata !857, null}
!857 = metadata !{i32 786443, metadata !854, i32 338, i32 52, metadata !48, i32 25} ; [ DW_TAG_lexical_block ]
!858 = metadata !{i32 340, i32 5, metadata !857, null}
!859 = metadata !{i32 338, i32 39, metadata !854, null}
!860 = metadata !{i32 341, i32 16, metadata !855, null}
!861 = metadata !{i32 342, i32 6, metadata !862, null}
!862 = metadata !{i32 786443, metadata !855, i32 341, i32 57, metadata !48, i32 26} ; [ DW_TAG_lexical_block ]
!863 = metadata !{i32 344, i32 9, metadata !864, null}
!864 = metadata !{i32 786443, metadata !855, i32 344, i32 5, metadata !48, i32 27} ; [ DW_TAG_lexical_block ]
!865 = metadata !{i32 345, i32 6, metadata !866, null}
!866 = metadata !{i32 786443, metadata !864, i32 344, i32 52, metadata !48, i32 28} ; [ DW_TAG_lexical_block ]
!867 = metadata !{i32 346, i32 5, metadata !866, null}
!868 = metadata !{i32 344, i32 39, metadata !864, null}
!869 = metadata !{i32 347, i32 5, metadata !855, null}
!870 = metadata !{i32 348, i32 5, metadata !855, null}
!871 = metadata !{i32 349, i32 4, metadata !855, null}
!872 = metadata !{i32 351, i32 5, metadata !832, null}
!873 = metadata !{i32 352, i32 5, metadata !806, null}
!874 = metadata !{i32 353, i32 1, metadata !806, null}
!875 = metadata !{i32 786689, metadata !79, metadata !"md", metadata !48, i32 16777369, metadata !51, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!876 = metadata !{i32 153, i32 47, metadata !79, null}
!877 = metadata !{i32 786689, metadata !79, metadata !"buf", metadata !48, i32 33554585, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!878 = metadata !{i32 153, i32 65, metadata !79, null}
!879 = metadata !{i32 154, i32 2, metadata !880, null}
!880 = metadata !{i32 786443, metadata !79, i32 154, i32 1, metadata !48, i32 46} ; [ DW_TAG_lexical_block ]
!881 = metadata !{i32 155, i32 1, metadata !880, null}
!882 = metadata !{i32 156, i32 1, metadata !880, null}
!883 = metadata !{i32 157, i32 1, metadata !880, null}
!884 = metadata !{i32 158, i32 1, metadata !880, null}
!885 = metadata !{i32 159, i32 1, metadata !880, null}
!886 = metadata !{i32 160, i32 1, metadata !880, null}
!887 = metadata !{i32 161, i32 1, metadata !880, null}
!888 = metadata !{i32 786688, metadata !880, metadata !"S", metadata !48, i32 162, metadata !60, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!889 = metadata !{i32 162, i32 11, metadata !880, null}
!890 = metadata !{i32 786688, metadata !880, metadata !"W", metadata !48, i32 162, metadata !746, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!891 = metadata !{i32 162, i32 17, metadata !880, null}
!892 = metadata !{i32 786688, metadata !880, metadata !"t0", metadata !48, i32 162, metadata !57, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!893 = metadata !{i32 162, i32 24, metadata !880, null}
!894 = metadata !{i32 786688, metadata !880, metadata !"t1", metadata !48, i32 162, metadata !57, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!895 = metadata !{i32 162, i32 28, metadata !880, null}
!896 = metadata !{i32 786688, metadata !880, metadata !"i", metadata !48, i32 163, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!897 = metadata !{i32 163, i32 9, metadata !880, null}
!898 = metadata !{i32 166, i32 10, metadata !899, null}
!899 = metadata !{i32 786443, metadata !880, i32 166, i32 5, metadata !48, i32 47} ; [ DW_TAG_lexical_block ]
!900 = metadata !{i32 167, i32 9, metadata !901, null}
!901 = metadata !{i32 786443, metadata !899, i32 166, i32 29, metadata !48, i32 48} ; [ DW_TAG_lexical_block ]
!902 = metadata !{i32 168, i32 5, metadata !901, null}
!903 = metadata !{i32 166, i32 24, metadata !899, null}
!904 = metadata !{i32 171, i32 10, metadata !905, null}
!905 = metadata !{i32 786443, metadata !880, i32 171, i32 5, metadata !48, i32 49} ; [ DW_TAG_lexical_block ]
!906 = metadata !{i32 172, i32 11, metadata !907, null}
!907 = metadata !{i32 786443, metadata !908, i32 172, i32 9, metadata !48, i32 51} ; [ DW_TAG_lexical_block ]
!908 = metadata !{i32 786443, metadata !905, i32 171, i32 30, metadata !48, i32 50} ; [ DW_TAG_lexical_block ]
!909 = metadata !{i32 173, i32 5, metadata !908, null}
!910 = metadata !{i32 171, i32 25, metadata !905, null}
!911 = metadata !{i32 176, i32 10, metadata !912, null}
!912 = metadata !{i32 786443, metadata !880, i32 176, i32 5, metadata !48, i32 52} ; [ DW_TAG_lexical_block ]
!913 = metadata !{i32 177, i32 9, metadata !914, null}
!914 = metadata !{i32 786443, metadata !912, i32 176, i32 31, metadata !48, i32 53} ; [ DW_TAG_lexical_block ]
!915 = metadata !{i32 178, i32 5, metadata !914, null}
!916 = metadata !{i32 176, i32 26, metadata !912, null}
!917 = metadata !{i32 187, i32 10, metadata !918, null}
!918 = metadata !{i32 786443, metadata !880, i32 187, i32 5, metadata !48, i32 54} ; [ DW_TAG_lexical_block ]
!919 = metadata !{i32 188, i32 8, metadata !920, null}
!920 = metadata !{i32 786443, metadata !918, i32 187, i32 33, metadata !48, i32 55} ; [ DW_TAG_lexical_block ]
!921 = metadata !{i32 188, i32 0, metadata !920, null}
!922 = metadata !{i32 189, i32 8, metadata !920, null}
!923 = metadata !{i32 189, i32 0, metadata !920, null}
!924 = metadata !{i32 190, i32 8, metadata !920, null}
!925 = metadata !{i32 190, i32 0, metadata !920, null}
!926 = metadata !{i32 191, i32 8, metadata !920, null}
!927 = metadata !{i32 191, i32 0, metadata !920, null}
!928 = metadata !{i32 192, i32 8, metadata !920, null}
!929 = metadata !{i32 192, i32 0, metadata !920, null}
!930 = metadata !{i32 193, i32 8, metadata !920, null}
!931 = metadata !{i32 193, i32 0, metadata !920, null}
!932 = metadata !{i32 194, i32 8, metadata !920, null}
!933 = metadata !{i32 194, i32 0, metadata !920, null}
!934 = metadata !{i32 195, i32 8, metadata !920, null}
!935 = metadata !{i32 195, i32 0, metadata !920, null}
!936 = metadata !{i32 196, i32 4, metadata !920, null}
!937 = metadata !{i32 187, i32 25, metadata !918, null}
!938 = metadata !{i32 203, i32 9, metadata !939, null}
!939 = metadata !{i32 786443, metadata !880, i32 203, i32 4, metadata !48, i32 56} ; [ DW_TAG_lexical_block ]
!940 = metadata !{i32 204, i32 9, metadata !941, null}
!941 = metadata !{i32 786443, metadata !939, i32 203, i32 28, metadata !48, i32 57} ; [ DW_TAG_lexical_block ]
!942 = metadata !{i32 205, i32 5, metadata !941, null}
!943 = metadata !{i32 203, i32 23, metadata !939, null}
!944 = metadata !{i32 207, i32 5, metadata !880, null}
!945 = metadata !{i32 786689, metadata !76, metadata !"md", metadata !48, i32 16777577, metadata !51, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!946 = metadata !{i32 361, i32 35, metadata !76, null}
!947 = metadata !{i32 786689, metadata !76, metadata !"out", metadata !48, i32 33554793, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!948 = metadata !{i32 361, i32 54, metadata !76, null}
!949 = metadata !{i32 363, i32 1, metadata !950, null}
!950 = metadata !{i32 786443, metadata !76, i32 362, i32 1, metadata !48, i32 29} ; [ DW_TAG_lexical_block ]
!951 = metadata !{i32 364, i32 1, metadata !950, null}
!952 = metadata !{i32 365, i32 1, metadata !950, null}
!953 = metadata !{i32 366, i32 1, metadata !950, null}
!954 = metadata !{i32 367, i32 1, metadata !950, null}
!955 = metadata !{i32 368, i32 1, metadata !950, null}
!956 = metadata !{i32 369, i32 1, metadata !950, null}
!957 = metadata !{i32 370, i32 1, metadata !950, null}
!958 = metadata !{i32 786688, metadata !950, metadata !"i", metadata !48, i32 371, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!959 = metadata !{i32 371, i32 6, metadata !950, null}
!960 = metadata !{i32 786688, metadata !950, metadata !"temp_index", metadata !48, i32 372, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!961 = metadata !{i32 372, i32 9, metadata !950, null}
!962 = metadata !{i32 786688, metadata !950, metadata !"temp_buf", metadata !48, i32 373, metadata !67, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!963 = metadata !{i32 373, i32 16, metadata !950, null}
!964 = metadata !{i32 378, i32 5, metadata !950, null}
!965 = metadata !{i32 379, i32 6, metadata !966, null}
!966 = metadata !{i32 786443, metadata !950, i32 378, i32 40, metadata !48, i32 30} ; [ DW_TAG_lexical_block ]
!967 = metadata !{i32 383, i32 5, metadata !950, null}
!968 = metadata !{i32 386, i32 5, metadata !950, null}
!969 = metadata !{i32 392, i32 2, metadata !950, null}
!970 = metadata !{i32 393, i32 3, metadata !971, null}
!971 = metadata !{i32 786443, metadata !950, i32 392, i32 24, metadata !48, i32 31} ; [ DW_TAG_lexical_block ]
!972 = metadata !{i32 394, i32 4, metadata !973, null}
!973 = metadata !{i32 786443, metadata !971, i32 393, i32 28, metadata !48, i32 32} ; [ DW_TAG_lexical_block ]
!974 = metadata !{i32 395, i32 3, metadata !973, null}
!975 = metadata !{i32 396, i32 7, metadata !976, null}
!976 = metadata !{i32 786443, metadata !971, i32 396, i32 3, metadata !48, i32 33} ; [ DW_TAG_lexical_block ]
!977 = metadata !{i32 397, i32 4, metadata !978, null}
!978 = metadata !{i32 786443, metadata !976, i32 396, i32 50, metadata !48, i32 34} ; [ DW_TAG_lexical_block ]
!979 = metadata !{i32 398, i32 3, metadata !978, null}
!980 = metadata !{i32 396, i32 37, metadata !976, null}
!981 = metadata !{i32 399, i32 3, metadata !971, null}
!982 = metadata !{i32 400, i32 7, metadata !983, null}
!983 = metadata !{i32 786443, metadata !971, i32 400, i32 3, metadata !48, i32 35} ; [ DW_TAG_lexical_block ]
!984 = metadata !{i32 401, i32 4, metadata !985, null}
!985 = metadata !{i32 786443, metadata !983, i32 400, i32 50, metadata !48, i32 36} ; [ DW_TAG_lexical_block ]
!986 = metadata !{i32 402, i32 3, metadata !985, null}
!987 = metadata !{i32 400, i32 37, metadata !983, null}
!988 = metadata !{i32 403, i32 3, metadata !971, null}
!989 = metadata !{i32 404, i32 5, metadata !971, null}
!990 = metadata !{i32 410, i32 2, metadata !950, null}
!991 = metadata !{i32 411, i32 3, metadata !992, null}
!992 = metadata !{i32 786443, metadata !950, i32 410, i32 27, metadata !48, i32 37} ; [ DW_TAG_lexical_block ]
!993 = metadata !{i32 412, i32 2, metadata !992, null}
!994 = metadata !{i32 415, i32 4, metadata !995, null}
!995 = metadata !{i32 786443, metadata !950, i32 415, i32 2, metadata !48, i32 38} ; [ DW_TAG_lexical_block ]
!996 = metadata !{i32 415, i32 64, metadata !995, null}
!997 = metadata !{i32 415, i32 124, metadata !995, null}
!998 = metadata !{i32 415, i32 184, metadata !995, null}
!999 = metadata !{i32 415, i32 244, metadata !995, null}
!1000 = metadata !{i32 415, i32 0, metadata !995, null}
!1001 = metadata !{i32 416, i32 6, metadata !1002, null}
!1002 = metadata !{i32 786443, metadata !950, i32 416, i32 2, metadata !48, i32 39} ; [ DW_TAG_lexical_block ]
!1003 = metadata !{i32 417, i32 3, metadata !1004, null}
!1004 = metadata !{i32 786443, metadata !1002, i32 416, i32 49, metadata !48, i32 40} ; [ DW_TAG_lexical_block ]
!1005 = metadata !{i32 418, i32 2, metadata !1004, null}
!1006 = metadata !{i32 416, i32 36, metadata !1002, null}
!1007 = metadata !{i32 419, i32 2, metadata !950, null}
!1008 = metadata !{i32 420, i32 6, metadata !1009, null}
!1009 = metadata !{i32 786443, metadata !950, i32 420, i32 2, metadata !48, i32 41} ; [ DW_TAG_lexical_block ]
!1010 = metadata !{i32 421, i32 3, metadata !1011, null}
!1011 = metadata !{i32 786443, metadata !1009, i32 420, i32 49, metadata !48, i32 42} ; [ DW_TAG_lexical_block ]
!1012 = metadata !{i32 422, i32 2, metadata !1011, null}
!1013 = metadata !{i32 420, i32 36, metadata !1009, null}
!1014 = metadata !{i32 425, i32 7, metadata !1015, null}
!1015 = metadata !{i32 786443, metadata !950, i32 425, i32 2, metadata !48, i32 43} ; [ DW_TAG_lexical_block ]
!1016 = metadata !{i32 426, i32 5, metadata !1017, null}
!1017 = metadata !{i32 786443, metadata !1018, i32 426, i32 3, metadata !48, i32 45} ; [ DW_TAG_lexical_block ]
!1018 = metadata !{i32 786443, metadata !1015, i32 425, i32 26, metadata !48, i32 44} ; [ DW_TAG_lexical_block ]
!1019 = metadata !{i32 426, i32 65, metadata !1017, null}
!1020 = metadata !{i32 426, i32 125, metadata !1017, null}
!1021 = metadata !{i32 426, i32 185, metadata !1017, null}
!1022 = metadata !{i32 426, i32 245, metadata !1017, null}
!1023 = metadata !{i32 426, i32 0, metadata !1017, null}
!1024 = metadata !{i32 427, i32 2, metadata !1018, null}
!1025 = metadata !{i32 425, i32 21, metadata !1015, null}
!1026 = metadata !{i32 429, i32 2, metadata !950, null}
!1027 = metadata !{i32 430, i32 1, metadata !950, null}
!1028 = metadata !{i32 786689, metadata !91, metadata !"r", metadata !92, i32 16777308, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1029 = metadata !{i32 92, i32 83, metadata !91, null}
!1030 = metadata !{i32 786689, metadata !91, metadata !"x", metadata !92, i32 33554524, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1031 = metadata !{i32 92, i32 106, metadata !91, null}
!1032 = metadata !{i32 93, i32 2, metadata !1033, null}
!1033 = metadata !{i32 786443, metadata !91, i32 93, i32 1, metadata !92, i32 0} ; [ DW_TAG_lexical_block ]
!1034 = metadata !{i32 786688, metadata !1033, metadata !"i", metadata !92, i32 94, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1035 = metadata !{i32 94, i32 7, metadata !1033, null}
!1036 = metadata !{i32 786688, metadata !1033, metadata !"t", metadata !92, i32 95, metadata !1037, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1037 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2048, i64 32, i32 0, i32 0, metadata !37, metadata !551, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1038 = metadata !{i32 95, i32 17, metadata !1033, null}
!1039 = metadata !{i32 96, i32 7, metadata !1040, null}
!1040 = metadata !{i32 786443, metadata !1033, i32 96, i32 3, metadata !92, i32 1} ; [ DW_TAG_lexical_block ]
!1041 = metadata !{i32 96, i32 21, metadata !1040, null}
!1042 = metadata !{i32 96, i32 16, metadata !1040, null}
!1043 = metadata !{i32 97, i32 7, metadata !1044, null}
!1044 = metadata !{i32 786443, metadata !1033, i32 97, i32 3, metadata !92, i32 2} ; [ DW_TAG_lexical_block ]
!1045 = metadata !{i32 97, i32 22, metadata !1044, null}
!1046 = metadata !{i32 97, i32 17, metadata !1044, null}
!1047 = metadata !{i32 98, i32 3, metadata !1033, null}
!1048 = metadata !{i32 99, i32 1, metadata !1033, null}
!1049 = metadata !{i32 786689, metadata !152, metadata !"r", metadata !92, i32 16777257, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1050 = metadata !{i32 41, i32 61, metadata !152, null}
!1051 = metadata !{i32 786689, metadata !152, metadata !"x", metadata !92, i32 33554473, metadata !155, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1052 = metadata !{i32 41, i32 84, metadata !152, null}
!1053 = metadata !{i32 42, i32 2, metadata !1054, null}
!1054 = metadata !{i32 786443, metadata !152, i32 42, i32 1, metadata !92, i32 51} ; [ DW_TAG_lexical_block ]
!1055 = metadata !{i32 786688, metadata !1054, metadata !"i", metadata !92, i32 44, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1056 = metadata !{i32 44, i32 7, metadata !1054, null}
!1057 = metadata !{i32 786688, metadata !1054, metadata !"j", metadata !92, i32 44, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1058 = metadata !{i32 44, i32 9, metadata !1054, null}
!1059 = metadata !{i32 786688, metadata !1054, metadata !"q2", metadata !92, i32 45, metadata !1060, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1060 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2112, i64 32, i32 0, i32 0, metadata !37, metadata !1061, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1061 = metadata !{metadata !1062}
!1062 = metadata !{i32 786465, i64 0, i64 65}     ; [ DW_TAG_subrange_type ]
!1063 = metadata !{i32 45, i32 17, metadata !1054, null}
!1064 = metadata !{i32 786688, metadata !1054, metadata !"q3", metadata !92, i32 46, metadata !1065, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1065 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !37} ; [ DW_TAG_pointer_type ]
!1066 = metadata !{i32 46, i32 18, metadata !1054, null}
!1067 = metadata !{i32 46, i32 30, metadata !1054, null}
!1068 = metadata !{i32 786688, metadata !1054, metadata !"r1", metadata !92, i32 47, metadata !1069, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1069 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1056, i64 32, i32 0, i32 0, metadata !37, metadata !163, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1070 = metadata !{i32 47, i32 17, metadata !1054, null}
!1071 = metadata !{i32 786688, metadata !1054, metadata !"r2", metadata !92, i32 48, metadata !1069, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1072 = metadata !{i32 48, i32 17, metadata !1054, null}
!1073 = metadata !{i32 786688, metadata !1054, metadata !"carry", metadata !92, i32 49, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1074 = metadata !{i32 49, i32 17, metadata !1054, null}
!1075 = metadata !{i32 786688, metadata !1054, metadata !"pb", metadata !92, i32 50, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1076 = metadata !{i32 50, i32 17, metadata !1054, null}
!1077 = metadata !{i32 50, i32 23, metadata !1054, null}
!1078 = metadata !{i32 786688, metadata !1054, metadata !"b", metadata !92, i32 51, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1079 = metadata !{i32 51, i32 17, metadata !1054, null}
!1080 = metadata !{i32 53, i32 8, metadata !1081, null}
!1081 = metadata !{i32 786443, metadata !1054, i32 53, i32 3, metadata !92, i32 52} ; [ DW_TAG_lexical_block ]
!1082 = metadata !{i32 53, i32 26, metadata !1081, null}
!1083 = metadata !{i32 53, i32 21, metadata !1081, null}
!1084 = metadata !{i32 54, i32 8, metadata !1085, null}
!1085 = metadata !{i32 786443, metadata !1054, i32 54, i32 3, metadata !92, i32 53} ; [ DW_TAG_lexical_block ]
!1086 = metadata !{i32 54, i32 26, metadata !1085, null}
!1087 = metadata !{i32 54, i32 21, metadata !1085, null}
!1088 = metadata !{i32 56, i32 7, metadata !1089, null}
!1089 = metadata !{i32 786443, metadata !1054, i32 56, i32 3, metadata !92, i32 54} ; [ DW_TAG_lexical_block ]
!1090 = metadata !{i32 57, i32 9, metadata !1091, null}
!1091 = metadata !{i32 786443, metadata !1089, i32 57, i32 5, metadata !92, i32 55} ; [ DW_TAG_lexical_block ]
!1092 = metadata !{i32 58, i32 7, metadata !1091, null}
!1093 = metadata !{i32 58, i32 21, metadata !1091, null}
!1094 = metadata !{i32 57, i32 18, metadata !1091, null}
!1095 = metadata !{i32 58, i32 44, metadata !1091, null}
!1096 = metadata !{i32 56, i32 16, metadata !1089, null}
!1097 = metadata !{i32 59, i32 3, metadata !1054, null}
!1098 = metadata !{i32 60, i32 3, metadata !1054, null}
!1099 = metadata !{i32 61, i32 3, metadata !1054, null}
!1100 = metadata !{i32 62, i32 3, metadata !1054, null}
!1101 = metadata !{i32 64, i32 7, metadata !1102, null}
!1102 = metadata !{i32 786443, metadata !1054, i32 64, i32 3, metadata !92, i32 56} ; [ DW_TAG_lexical_block ]
!1103 = metadata !{i32 64, i32 20, metadata !1102, null}
!1104 = metadata !{i32 64, i32 16, metadata !1102, null}
!1105 = metadata !{i32 65, i32 7, metadata !1106, null}
!1106 = metadata !{i32 786443, metadata !1054, i32 65, i32 3, metadata !92, i32 57} ; [ DW_TAG_lexical_block ]
!1107 = metadata !{i32 66, i32 9, metadata !1108, null}
!1108 = metadata !{i32 786443, metadata !1106, i32 66, i32 5, metadata !92, i32 58} ; [ DW_TAG_lexical_block ]
!1109 = metadata !{i32 67, i32 7, metadata !1108, null}
!1110 = metadata !{i32 67, i32 20, metadata !1108, null}
!1111 = metadata !{i32 66, i32 18, metadata !1108, null}
!1112 = metadata !{i32 67, i32 40, metadata !1108, null}
!1113 = metadata !{i32 65, i32 16, metadata !1106, null}
!1114 = metadata !{i32 69, i32 7, metadata !1115, null}
!1115 = metadata !{i32 786443, metadata !1054, i32 69, i32 3, metadata !92, i32 59} ; [ DW_TAG_lexical_block ]
!1116 = metadata !{i32 71, i32 5, metadata !1117, null}
!1117 = metadata !{i32 786443, metadata !1115, i32 70, i32 3, metadata !92, i32 60} ; [ DW_TAG_lexical_block ]
!1118 = metadata !{i32 72, i32 5, metadata !1117, null}
!1119 = metadata !{i32 73, i32 5, metadata !1117, null}
!1120 = metadata !{i32 74, i32 3, metadata !1117, null}
!1121 = metadata !{i32 69, i32 16, metadata !1115, null}
!1122 = metadata !{i32 76, i32 7, metadata !1123, null}
!1123 = metadata !{i32 786443, metadata !1054, i32 76, i32 3, metadata !92, i32 61} ; [ DW_TAG_lexical_block ]
!1124 = metadata !{i32 78, i32 5, metadata !1125, null}
!1125 = metadata !{i32 786443, metadata !1123, i32 77, i32 3, metadata !92, i32 62} ; [ DW_TAG_lexical_block ]
!1126 = metadata !{i32 79, i32 9, metadata !1125, null}
!1127 = metadata !{i32 80, i32 5, metadata !1125, null}
!1128 = metadata !{i32 81, i32 5, metadata !1125, null}
!1129 = metadata !{i32 82, i32 3, metadata !1125, null}
!1130 = metadata !{i32 76, i32 16, metadata !1123, null}
!1131 = metadata !{i32 88, i32 3, metadata !1054, null}
!1132 = metadata !{i32 89, i32 3, metadata !1054, null}
!1133 = metadata !{i32 90, i32 1, metadata !1054, null}
!1134 = metadata !{i32 786689, metadata !100, metadata !"r", metadata !92, i32 16777317, metadata !103, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1135 = metadata !{i32 101, i32 93, metadata !100, null}
!1136 = metadata !{i32 786689, metadata !100, metadata !"x", metadata !92, i32 33554533, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1137 = metadata !{i32 101, i32 116, metadata !100, null}
!1138 = metadata !{i32 102, i32 2, metadata !1139, null}
!1139 = metadata !{i32 786443, metadata !100, i32 102, i32 1, metadata !92, i32 3} ; [ DW_TAG_lexical_block ]
!1140 = metadata !{i32 786688, metadata !1139, metadata !"i", metadata !92, i32 103, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1141 = metadata !{i32 103, i32 7, metadata !1139, null}
!1142 = metadata !{i32 104, i32 7, metadata !1143, null}
!1143 = metadata !{i32 786443, metadata !1139, i32 104, i32 3, metadata !92, i32 4} ; [ DW_TAG_lexical_block ]
!1144 = metadata !{i32 104, i32 21, metadata !1143, null}
!1145 = metadata !{i32 104, i32 16, metadata !1143, null}
!1146 = metadata !{i32 105, i32 1, metadata !1139, null}
!1147 = metadata !{i32 786689, metadata !111, metadata !"r", metadata !92, i32 16777323, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1148 = metadata !{i32 107, i32 83, metadata !111, null}
!1149 = metadata !{i32 786689, metadata !111, metadata !"x", metadata !92, i32 33554539, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1150 = metadata !{i32 107, i32 106, metadata !111, null}
!1151 = metadata !{i32 108, i32 2, metadata !1152, null}
!1152 = metadata !{i32 786443, metadata !111, i32 108, i32 1, metadata !92, i32 5} ; [ DW_TAG_lexical_block ]
!1153 = metadata !{i32 786688, metadata !1152, metadata !"i", metadata !92, i32 109, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1154 = metadata !{i32 109, i32 7, metadata !1152, null}
!1155 = metadata !{i32 786688, metadata !1152, metadata !"t", metadata !92, i32 110, metadata !1037, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1156 = metadata !{i32 110, i32 17, metadata !1152, null}
!1157 = metadata !{i32 111, i32 7, metadata !1158, null}
!1158 = metadata !{i32 786443, metadata !1152, i32 111, i32 3, metadata !92, i32 6} ; [ DW_TAG_lexical_block ]
!1159 = metadata !{i32 111, i32 21, metadata !1158, null}
!1160 = metadata !{i32 111, i32 16, metadata !1158, null}
!1161 = metadata !{i32 112, i32 3, metadata !1152, null}
!1162 = metadata !{i32 113, i32 1, metadata !1152, null}
!1163 = metadata !{i32 786689, metadata !112, metadata !"r", metadata !92, i32 16777331, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1164 = metadata !{i32 115, i32 84, metadata !112, null}
!1165 = metadata !{i32 786689, metadata !112, metadata !"x", metadata !92, i32 33554547, metadata !115, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1166 = metadata !{i32 115, i32 131, metadata !112, null}
!1167 = metadata !{i32 786688, metadata !1168, metadata !"i", metadata !92, i32 117, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1168 = metadata !{i32 786443, metadata !112, i32 116, i32 1, metadata !92, i32 7} ; [ DW_TAG_lexical_block ]
!1169 = metadata !{i32 117, i32 7, metadata !1168, null}
!1170 = metadata !{i32 118, i32 7, metadata !1171, null}
!1171 = metadata !{i32 786443, metadata !1168, i32 118, i32 3, metadata !92, i32 8} ; [ DW_TAG_lexical_block ]
!1172 = metadata !{i32 119, i32 5, metadata !1171, null}
!1173 = metadata !{i32 118, i32 16, metadata !1171, null}
!1174 = metadata !{i32 120, i32 7, metadata !1175, null}
!1175 = metadata !{i32 786443, metadata !1168, i32 120, i32 3, metadata !92, i32 9} ; [ DW_TAG_lexical_block ]
!1176 = metadata !{i32 121, i32 5, metadata !1175, null}
!1177 = metadata !{i32 120, i32 16, metadata !1175, null}
!1178 = metadata !{i32 122, i32 1, metadata !1168, null}
!1179 = metadata !{i32 786689, metadata !117, metadata !"r", metadata !92, i32 16777340, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1180 = metadata !{i32 124, i32 62, metadata !117, null}
!1181 = metadata !{i32 786689, metadata !117, metadata !"x", metadata !92, i32 33554556, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1182 = metadata !{i32 124, i32 108, metadata !117, null}
!1183 = metadata !{i32 125, i32 2, metadata !1184, null}
!1184 = metadata !{i32 786443, metadata !117, i32 125, i32 1, metadata !92, i32 10} ; [ DW_TAG_lexical_block ]
!1185 = metadata !{i32 786688, metadata !1184, metadata !"i", metadata !92, i32 126, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1186 = metadata !{i32 126, i32 7, metadata !1184, null}
!1187 = metadata !{i32 127, i32 7, metadata !1188, null}
!1188 = metadata !{i32 786443, metadata !1184, i32 127, i32 3, metadata !92, i32 11} ; [ DW_TAG_lexical_block ]
!1189 = metadata !{i32 127, i32 21, metadata !1188, null}
!1190 = metadata !{i32 127, i32 16, metadata !1188, null}
!1191 = metadata !{i32 128, i32 1, metadata !1184, null}
!1192 = metadata !{i32 786689, metadata !122, metadata !"x", metadata !92, i32 16777346, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1193 = metadata !{i32 130, i32 91, metadata !122, null}
!1194 = metadata !{i32 786688, metadata !1195, metadata !"i", metadata !92, i32 132, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1195 = metadata !{i32 786443, metadata !122, i32 131, i32 1, metadata !92, i32 12} ; [ DW_TAG_lexical_block ]
!1196 = metadata !{i32 132, i32 7, metadata !1195, null}
!1197 = metadata !{i32 133, i32 7, metadata !1198, null}
!1198 = metadata !{i32 786443, metadata !1195, i32 133, i32 3, metadata !92, i32 13} ; [ DW_TAG_lexical_block ]
!1199 = metadata !{i32 134, i32 5, metadata !1198, null}
!1200 = metadata !{i32 134, i32 22, metadata !1198, null}
!1201 = metadata !{i32 133, i32 16, metadata !1198, null}
!1202 = metadata !{i32 135, i32 3, metadata !1195, null}
!1203 = metadata !{i32 136, i32 1, metadata !1195, null}
!1204 = metadata !{i32 786689, metadata !125, metadata !"x", metadata !92, i32 16777354, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1205 = metadata !{i32 138, i32 92, metadata !125, null}
!1206 = metadata !{i32 786688, metadata !1207, metadata !"i", metadata !92, i32 140, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1207 = metadata !{i32 786443, metadata !125, i32 139, i32 1, metadata !92, i32 14} ; [ DW_TAG_lexical_block ]
!1208 = metadata !{i32 140, i32 7, metadata !1207, null}
!1209 = metadata !{i32 141, i32 7, metadata !1210, null}
!1210 = metadata !{i32 786443, metadata !1207, i32 141, i32 3, metadata !92, i32 15} ; [ DW_TAG_lexical_block ]
!1211 = metadata !{i32 142, i32 5, metadata !1210, null}
!1212 = metadata !{i32 142, i32 22, metadata !1210, null}
!1213 = metadata !{i32 141, i32 17, metadata !1210, null}
!1214 = metadata !{i32 143, i32 3, metadata !1207, null}
!1215 = metadata !{i32 144, i32 1, metadata !1207, null}
!1216 = metadata !{i32 786689, metadata !126, metadata !"x", metadata !92, i32 16777362, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1217 = metadata !{i32 146, i32 87, metadata !126, null}
!1218 = metadata !{i32 786689, metadata !126, metadata !"y", metadata !92, i32 33554578, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1219 = metadata !{i32 146, i32 129, metadata !126, null}
!1220 = metadata !{i32 786688, metadata !1221, metadata !"i", metadata !92, i32 148, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1221 = metadata !{i32 786443, metadata !126, i32 147, i32 1, metadata !92, i32 16} ; [ DW_TAG_lexical_block ]
!1222 = metadata !{i32 148, i32 7, metadata !1221, null}
!1223 = metadata !{i32 149, i32 7, metadata !1224, null}
!1224 = metadata !{i32 786443, metadata !1221, i32 149, i32 3, metadata !92, i32 17} ; [ DW_TAG_lexical_block ]
!1225 = metadata !{i32 151, i32 5, metadata !1226, null}
!1226 = metadata !{i32 786443, metadata !1224, i32 150, i32 3, metadata !92, i32 18} ; [ DW_TAG_lexical_block ]
!1227 = metadata !{i32 151, i32 27, metadata !1226, null}
!1228 = metadata !{i32 152, i32 5, metadata !1226, null}
!1229 = metadata !{i32 152, i32 27, metadata !1226, null}
!1230 = metadata !{i32 153, i32 3, metadata !1226, null}
!1231 = metadata !{i32 149, i32 17, metadata !1224, null}
!1232 = metadata !{i32 154, i32 3, metadata !1221, null}
!1233 = metadata !{i32 155, i32 1, metadata !1221, null}
!1234 = metadata !{i32 786689, metadata !129, metadata !"r", metadata !92, i32 16777373, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1235 = metadata !{i32 157, i32 75, metadata !129, null}
!1236 = metadata !{i32 786689, metadata !129, metadata !"x", metadata !92, i32 33554589, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1237 = metadata !{i32 157, i32 117, metadata !129, null}
!1238 = metadata !{i32 786689, metadata !129, metadata !"y", metadata !92, i32 50331805, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1239 = metadata !{i32 157, i32 159, metadata !129, null}
!1240 = metadata !{i32 786688, metadata !1241, metadata !"i", metadata !92, i32 159, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1241 = metadata !{i32 786443, metadata !129, i32 158, i32 1, metadata !92, i32 19} ; [ DW_TAG_lexical_block ]
!1242 = metadata !{i32 159, i32 7, metadata !1241, null}
!1243 = metadata !{i32 786688, metadata !1241, metadata !"carry", metadata !92, i32 159, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1244 = metadata !{i32 159, i32 10, metadata !1241, null}
!1245 = metadata !{i32 160, i32 7, metadata !1246, null}
!1246 = metadata !{i32 786443, metadata !1241, i32 160, i32 3, metadata !92, i32 20} ; [ DW_TAG_lexical_block ]
!1247 = metadata !{i32 160, i32 21, metadata !1246, null}
!1248 = metadata !{i32 160, i32 16, metadata !1246, null}
!1249 = metadata !{i32 161, i32 7, metadata !1250, null}
!1250 = metadata !{i32 786443, metadata !1241, i32 161, i32 3, metadata !92, i32 21} ; [ DW_TAG_lexical_block ]
!1251 = metadata !{i32 163, i32 5, metadata !1252, null}
!1252 = metadata !{i32 786443, metadata !1250, i32 162, i32 3, metadata !92, i32 22} ; [ DW_TAG_lexical_block ]
!1253 = metadata !{i32 164, i32 5, metadata !1252, null}
!1254 = metadata !{i32 165, i32 5, metadata !1252, null}
!1255 = metadata !{i32 166, i32 3, metadata !1252, null}
!1256 = metadata !{i32 161, i32 16, metadata !1250, null}
!1257 = metadata !{i32 167, i32 3, metadata !1241, null}
!1258 = metadata !{i32 168, i32 1, metadata !1241, null}
!1259 = metadata !{i32 786689, metadata !146, metadata !"r", metadata !92, i32 16777236, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1260 = metadata !{i32 20, i32 61, metadata !146, null}
!1261 = metadata !{i32 786688, metadata !1262, metadata !"pb", metadata !92, i32 22, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1262 = metadata !{i32 786443, metadata !146, i32 21, i32 1, metadata !92, i32 46} ; [ DW_TAG_lexical_block ]
!1263 = metadata !{i32 22, i32 17, metadata !1262, null}
!1264 = metadata !{i32 22, i32 23, metadata !1262, null}
!1265 = metadata !{i32 786688, metadata !1262, metadata !"b", metadata !92, i32 23, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1266 = metadata !{i32 23, i32 17, metadata !1262, null}
!1267 = metadata !{i32 786688, metadata !1262, metadata !"mask", metadata !92, i32 24, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1268 = metadata !{i32 24, i32 17, metadata !1262, null}
!1269 = metadata !{i32 786688, metadata !1262, metadata !"i", metadata !92, i32 25, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1270 = metadata !{i32 25, i32 7, metadata !1262, null}
!1271 = metadata !{i32 786688, metadata !1262, metadata !"t", metadata !92, i32 26, metadata !547, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1272 = metadata !{i32 26, i32 17, metadata !1262, null}
!1273 = metadata !{i32 28, i32 7, metadata !1274, null}
!1274 = metadata !{i32 786443, metadata !1262, i32 28, i32 3, metadata !92, i32 47} ; [ DW_TAG_lexical_block ]
!1275 = metadata !{i32 30, i32 5, metadata !1276, null}
!1276 = metadata !{i32 786443, metadata !1274, i32 29, i32 3, metadata !92, i32 48} ; [ DW_TAG_lexical_block ]
!1277 = metadata !{i32 31, i32 9, metadata !1276, null}
!1278 = metadata !{i32 32, i32 5, metadata !1276, null}
!1279 = metadata !{i32 33, i32 5, metadata !1276, null}
!1280 = metadata !{i32 34, i32 3, metadata !1276, null}
!1281 = metadata !{i32 28, i32 16, metadata !1274, null}
!1282 = metadata !{i32 35, i32 3, metadata !1262, null}
!1283 = metadata !{i32 36, i32 7, metadata !1284, null}
!1284 = metadata !{i32 786443, metadata !1262, i32 36, i32 3, metadata !92, i32 49} ; [ DW_TAG_lexical_block ]
!1285 = metadata !{i32 37, i32 5, metadata !1284, null}
!1286 = metadata !{i32 36, i32 16, metadata !1284, null}
!1287 = metadata !{i32 38, i32 1, metadata !1262, null}
!1288 = metadata !{i32 786689, metadata !132, metadata !"r", metadata !92, i32 16777386, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1289 = metadata !{i32 170, i32 81, metadata !132, null}
!1290 = metadata !{i32 786689, metadata !132, metadata !"x", metadata !92, i32 33554602, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1291 = metadata !{i32 170, i32 123, metadata !132, null}
!1292 = metadata !{i32 786689, metadata !132, metadata !"y", metadata !92, i32 50331818, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1293 = metadata !{i32 170, i32 165, metadata !132, null}
!1294 = metadata !{i32 786688, metadata !1295, metadata !"b", metadata !92, i32 172, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1295 = metadata !{i32 786443, metadata !132, i32 171, i32 1, metadata !92, i32 23} ; [ DW_TAG_lexical_block ]
!1296 = metadata !{i32 172, i32 17, metadata !1295, null}
!1297 = metadata !{i32 172, i32 22, metadata !1295, null}
!1298 = metadata !{i32 786688, metadata !1295, metadata !"t", metadata !92, i32 173, metadata !37, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1299 = metadata !{i32 173, i32 17, metadata !1295, null}
!1300 = metadata !{i32 786688, metadata !1295, metadata !"i", metadata !92, i32 174, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1301 = metadata !{i32 174, i32 7, metadata !1295, null}
!1302 = metadata !{i32 175, i32 7, metadata !1303, null}
!1303 = metadata !{i32 786443, metadata !1295, i32 175, i32 3, metadata !92, i32 24} ; [ DW_TAG_lexical_block ]
!1304 = metadata !{i32 177, i32 5, metadata !1305, null}
!1305 = metadata !{i32 786443, metadata !1303, i32 176, i32 3, metadata !92, i32 25} ; [ DW_TAG_lexical_block ]
!1306 = metadata !{i32 178, i32 5, metadata !1305, null}
!1307 = metadata !{i32 179, i32 5, metadata !1305, null}
!1308 = metadata !{i32 180, i32 3, metadata !1305, null}
!1309 = metadata !{i32 175, i32 16, metadata !1303, null}
!1310 = metadata !{i32 181, i32 1, metadata !1295, null}
!1311 = metadata !{i32 786689, metadata !133, metadata !"r", metadata !92, i32 16777399, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1312 = metadata !{i32 183, i32 75, metadata !133, null}
!1313 = metadata !{i32 786689, metadata !133, metadata !"x", metadata !92, i32 33554615, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1314 = metadata !{i32 183, i32 117, metadata !133, null}
!1315 = metadata !{i32 786689, metadata !133, metadata !"y", metadata !92, i32 50331831, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1316 = metadata !{i32 183, i32 159, metadata !133, null}
!1317 = metadata !{i32 786688, metadata !1318, metadata !"i", metadata !92, i32 185, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1318 = metadata !{i32 786443, metadata !133, i32 184, i32 1, metadata !92, i32 26} ; [ DW_TAG_lexical_block ]
!1319 = metadata !{i32 185, i32 7, metadata !1318, null}
!1320 = metadata !{i32 786688, metadata !1318, metadata !"j", metadata !92, i32 185, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1321 = metadata !{i32 185, i32 9, metadata !1318, null}
!1322 = metadata !{i32 786688, metadata !1318, metadata !"carry", metadata !92, i32 185, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1323 = metadata !{i32 185, i32 11, metadata !1318, null}
!1324 = metadata !{i32 786688, metadata !1318, metadata !"t", metadata !92, i32 186, metadata !1037, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1325 = metadata !{i32 186, i32 17, metadata !1318, null}
!1326 = metadata !{i32 187, i32 7, metadata !1327, null}
!1327 = metadata !{i32 786443, metadata !1318, i32 187, i32 3, metadata !92, i32 27} ; [ DW_TAG_lexical_block ]
!1328 = metadata !{i32 187, i32 20, metadata !1327, null}
!1329 = metadata !{i32 187, i32 16, metadata !1327, null}
!1330 = metadata !{i32 189, i32 7, metadata !1331, null}
!1331 = metadata !{i32 786443, metadata !1318, i32 189, i32 3, metadata !92, i32 28} ; [ DW_TAG_lexical_block ]
!1332 = metadata !{i32 190, i32 9, metadata !1333, null}
!1333 = metadata !{i32 786443, metadata !1331, i32 190, i32 5, metadata !92, i32 29} ; [ DW_TAG_lexical_block ]
!1334 = metadata !{i32 191, i32 7, metadata !1333, null}
!1335 = metadata !{i32 190, i32 18, metadata !1333, null}
!1336 = metadata !{i32 191, i32 33, metadata !1333, null}
!1337 = metadata !{i32 189, i32 16, metadata !1331, null}
!1338 = metadata !{i32 194, i32 7, metadata !1339, null}
!1339 = metadata !{i32 786443, metadata !1318, i32 194, i32 3, metadata !92, i32 30} ; [ DW_TAG_lexical_block ]
!1340 = metadata !{i32 196, i32 5, metadata !1341, null}
!1341 = metadata !{i32 786443, metadata !1339, i32 195, i32 3, metadata !92, i32 31} ; [ DW_TAG_lexical_block ]
!1342 = metadata !{i32 197, i32 5, metadata !1341, null}
!1343 = metadata !{i32 198, i32 5, metadata !1341, null}
!1344 = metadata !{i32 199, i32 3, metadata !1341, null}
!1345 = metadata !{i32 194, i32 16, metadata !1339, null}
!1346 = metadata !{i32 201, i32 3, metadata !1318, null}
!1347 = metadata !{i32 202, i32 1, metadata !1318, null}
!1348 = metadata !{i32 786689, metadata !134, metadata !"r", metadata !92, i32 16777420, metadata !95, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1349 = metadata !{i32 204, i32 83, metadata !134, null}
!1350 = metadata !{i32 786689, metadata !134, metadata !"x", metadata !92, i32 33554636, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1351 = metadata !{i32 204, i32 125, metadata !134, null}
!1352 = metadata !{i32 786689, metadata !134, metadata !"y", metadata !92, i32 50331852, metadata !115, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1353 = metadata !{i32 204, i32 172, metadata !134, null}
!1354 = metadata !{i32 786688, metadata !1355, metadata !"t", metadata !92, i32 206, metadata !96, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1355 = metadata !{i32 786443, metadata !134, i32 205, i32 1, metadata !92, i32 32} ; [ DW_TAG_lexical_block ]
!1356 = metadata !{i32 206, i32 35, metadata !1355, null}
!1357 = metadata !{i32 207, i32 3, metadata !1355, null}
!1358 = metadata !{i32 208, i32 3, metadata !1355, null}
!1359 = metadata !{i32 209, i32 1, metadata !1355, null}
!1360 = metadata !{i32 786689, metadata !137, metadata !"r", metadata !92, i32 16777427, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1361 = metadata !{i32 211, i32 58, metadata !137, null}
!1362 = metadata !{i32 786689, metadata !137, metadata !"s", metadata !92, i32 33554643, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1363 = metadata !{i32 211, i32 104, metadata !137, null}
!1364 = metadata !{i32 212, i32 2, metadata !1365, null}
!1365 = metadata !{i32 786443, metadata !137, i32 212, i32 1, metadata !92, i32 33} ; [ DW_TAG_lexical_block ]
!1366 = metadata !{i32 786688, metadata !1365, metadata !"carry", metadata !92, i32 213, metadata !1367, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1367 = metadata !{i32 786468, null, metadata !"char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1368 = metadata !{i32 213, i32 8, metadata !1365, null}
!1369 = metadata !{i32 786688, metadata !1365, metadata !"i", metadata !92, i32 214, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1370 = metadata !{i32 214, i32 7, metadata !1365, null}
!1371 = metadata !{i32 215, i32 7, metadata !1372, null}
!1372 = metadata !{i32 786443, metadata !1365, i32 215, i32 3, metadata !92, i32 34} ; [ DW_TAG_lexical_block ]
!1373 = metadata !{i32 217, i32 5, metadata !1374, null}
!1374 = metadata !{i32 786443, metadata !1372, i32 216, i32 3, metadata !92, i32 35} ; [ DW_TAG_lexical_block ]
!1375 = metadata !{i32 218, i32 5, metadata !1374, null}
!1376 = metadata !{i32 219, i32 5, metadata !1374, null}
!1377 = metadata !{i32 220, i32 5, metadata !1374, null}
!1378 = metadata !{i32 221, i32 5, metadata !1374, null}
!1379 = metadata !{i32 222, i32 5, metadata !1374, null}
!1380 = metadata !{i32 223, i32 5, metadata !1374, null}
!1381 = metadata !{i32 224, i32 5, metadata !1374, null}
!1382 = metadata !{i32 225, i32 5, metadata !1374, null}
!1383 = metadata !{i32 226, i32 5, metadata !1374, null}
!1384 = metadata !{i32 227, i32 3, metadata !1374, null}
!1385 = metadata !{i32 215, i32 16, metadata !1372, null}
!1386 = metadata !{i32 228, i32 3, metadata !1365, null}
!1387 = metadata !{i32 229, i32 3, metadata !1365, null}
!1388 = metadata !{i32 230, i32 3, metadata !1365, null}
!1389 = metadata !{i32 231, i32 3, metadata !1365, null}
!1390 = metadata !{i32 232, i32 3, metadata !1365, null}
!1391 = metadata !{i32 233, i32 3, metadata !1365, null}
!1392 = metadata !{i32 236, i32 3, metadata !1365, null}
!1393 = metadata !{i32 237, i32 7, metadata !1394, null}
!1394 = metadata !{i32 786443, metadata !1365, i32 237, i32 3, metadata !92, i32 36} ; [ DW_TAG_lexical_block ]
!1395 = metadata !{i32 239, i32 5, metadata !1396, null}
!1396 = metadata !{i32 786443, metadata !1394, i32 238, i32 3, metadata !92, i32 37} ; [ DW_TAG_lexical_block ]
!1397 = metadata !{i32 240, i32 5, metadata !1396, null}
!1398 = metadata !{i32 241, i32 5, metadata !1396, null}
!1399 = metadata !{i32 242, i32 5, metadata !1396, null}
!1400 = metadata !{i32 243, i32 5, metadata !1396, null}
!1401 = metadata !{i32 244, i32 3, metadata !1396, null}
!1402 = metadata !{i32 237, i32 16, metadata !1394, null}
!1403 = metadata !{i32 245, i32 3, metadata !1365, null}
!1404 = metadata !{i32 246, i32 1, metadata !1365, null}
!1405 = metadata !{i32 786689, metadata !142, metadata !"r", metadata !92, i32 16777464, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1406 = metadata !{i32 248, i32 58, metadata !142, null}
!1407 = metadata !{i32 786689, metadata !142, metadata !"s", metadata !92, i32 33554680, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1408 = metadata !{i32 248, i32 104, metadata !142, null}
!1409 = metadata !{i32 249, i32 2, metadata !1410, null}
!1410 = metadata !{i32 786443, metadata !142, i32 249, i32 1, metadata !92, i32 38} ; [ DW_TAG_lexical_block ]
!1411 = metadata !{i32 786688, metadata !1410, metadata !"carry", metadata !92, i32 250, metadata !1367, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1412 = metadata !{i32 250, i32 8, metadata !1410, null}
!1413 = metadata !{i32 786688, metadata !1410, metadata !"i", metadata !92, i32 251, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1414 = metadata !{i32 251, i32 7, metadata !1410, null}
!1415 = metadata !{i32 252, i32 7, metadata !1416, null}
!1416 = metadata !{i32 786443, metadata !1410, i32 252, i32 3, metadata !92, i32 39} ; [ DW_TAG_lexical_block ]
!1417 = metadata !{i32 254, i32 5, metadata !1418, null}
!1418 = metadata !{i32 786443, metadata !1416, i32 253, i32 3, metadata !92, i32 40} ; [ DW_TAG_lexical_block ]
!1419 = metadata !{i32 255, i32 5, metadata !1418, null}
!1420 = metadata !{i32 256, i32 5, metadata !1418, null}
!1421 = metadata !{i32 257, i32 5, metadata !1418, null}
!1422 = metadata !{i32 258, i32 5, metadata !1418, null}
!1423 = metadata !{i32 259, i32 5, metadata !1418, null}
!1424 = metadata !{i32 260, i32 5, metadata !1418, null}
!1425 = metadata !{i32 261, i32 5, metadata !1418, null}
!1426 = metadata !{i32 262, i32 5, metadata !1418, null}
!1427 = metadata !{i32 263, i32 5, metadata !1418, null}
!1428 = metadata !{i32 264, i32 5, metadata !1418, null}
!1429 = metadata !{i32 265, i32 5, metadata !1418, null}
!1430 = metadata !{i32 266, i32 3, metadata !1418, null}
!1431 = metadata !{i32 252, i32 15, metadata !1416, null}
!1432 = metadata !{i32 267, i32 3, metadata !1410, null}
!1433 = metadata !{i32 268, i32 3, metadata !1410, null}
!1434 = metadata !{i32 269, i32 3, metadata !1410, null}
!1435 = metadata !{i32 270, i32 3, metadata !1410, null}
!1436 = metadata !{i32 273, i32 3, metadata !1410, null}
!1437 = metadata !{i32 274, i32 7, metadata !1438, null}
!1438 = metadata !{i32 786443, metadata !1410, i32 274, i32 3, metadata !92, i32 41} ; [ DW_TAG_lexical_block ]
!1439 = metadata !{i32 276, i32 5, metadata !1440, null}
!1440 = metadata !{i32 786443, metadata !1438, i32 275, i32 3, metadata !92, i32 42} ; [ DW_TAG_lexical_block ]
!1441 = metadata !{i32 277, i32 5, metadata !1440, null}
!1442 = metadata !{i32 278, i32 5, metadata !1440, null}
!1443 = metadata !{i32 279, i32 5, metadata !1440, null}
!1444 = metadata !{i32 280, i32 5, metadata !1440, null}
!1445 = metadata !{i32 281, i32 3, metadata !1440, null}
!1446 = metadata !{i32 274, i32 16, metadata !1438, null}
!1447 = metadata !{i32 282, i32 3, metadata !1410, null}
!1448 = metadata !{i32 283, i32 1, metadata !1410, null}
!1449 = metadata !{i32 786689, metadata !143, metadata !"r", metadata !92, i32 16777501, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1450 = metadata !{i32 285, i32 65, metadata !143, null}
!1451 = metadata !{i32 786689, metadata !143, metadata !"s1", metadata !92, i32 33554717, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1452 = metadata !{i32 285, i32 112, metadata !143, null}
!1453 = metadata !{i32 786689, metadata !143, metadata !"s2", metadata !92, i32 50331933, metadata !120, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1454 = metadata !{i32 285, i32 155, metadata !143, null}
!1455 = metadata !{i32 286, i32 2, metadata !1456, null}
!1456 = metadata !{i32 786443, metadata !143, i32 286, i32 1, metadata !92, i32 43} ; [ DW_TAG_lexical_block ]
!1457 = metadata !{i32 786688, metadata !1456, metadata !"i", metadata !92, i32 287, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1458 = metadata !{i32 287, i32 7, metadata !1456, null}
!1459 = metadata !{i32 288, i32 7, metadata !1460, null}
!1460 = metadata !{i32 786443, metadata !1456, i32 288, i32 3, metadata !92, i32 44} ; [ DW_TAG_lexical_block ]
!1461 = metadata !{i32 290, i32 5, metadata !1462, null}
!1462 = metadata !{i32 786443, metadata !1460, i32 289, i32 3, metadata !92, i32 45} ; [ DW_TAG_lexical_block ]
!1463 = metadata !{i32 291, i32 5, metadata !1462, null}
!1464 = metadata !{i32 292, i32 5, metadata !1462, null}
!1465 = metadata !{i32 293, i32 5, metadata !1462, null}
!1466 = metadata !{i32 294, i32 3, metadata !1462, null}
!1467 = metadata !{i32 288, i32 16, metadata !1460, null}
!1468 = metadata !{i32 295, i32 3, metadata !1456, null}
!1469 = metadata !{i32 296, i32 3, metadata !1456, null}
!1470 = metadata !{i32 297, i32 3, metadata !1456, null}
!1471 = metadata !{i32 298, i32 1, metadata !1456, null}
!1472 = metadata !{i32 786689, metadata !149, metadata !"a", metadata !92, i32 16777227, metadata !37, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1473 = metadata !{i32 11, i32 39, metadata !149, null}
!1474 = metadata !{i32 786689, metadata !149, metadata !"b", metadata !92, i32 33554443, metadata !37, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1475 = metadata !{i32 11, i32 55, metadata !149, null}
!1476 = metadata !{i32 786688, metadata !1477, metadata !"x", metadata !92, i32 13, metadata !11, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1477 = metadata !{i32 786443, metadata !149, i32 12, i32 1, metadata !92, i32 50} ; [ DW_TAG_lexical_block ]
!1478 = metadata !{i32 13, i32 16, metadata !1477, null}
!1479 = metadata !{i32 13, i32 21, metadata !1477, null}
!1480 = metadata !{i32 14, i32 3, metadata !1477, null}
!1481 = metadata !{i32 15, i32 3, metadata !1477, null}
!1482 = metadata !{i32 16, i32 3, metadata !1477, null}
!1483 = metadata !{i32 786689, metadata !168, metadata !"r", metadata !169, i32 16777403, metadata !172, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1484 = metadata !{i32 187, i32 80, metadata !168, null}
!1485 = metadata !{i32 786689, metadata !168, metadata !"p", metadata !169, i32 33554619, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1486 = metadata !{i32 187, i32 103, metadata !168, null}
!1487 = metadata !{i32 188, i32 2, metadata !1488, null}
!1488 = metadata !{i32 786443, metadata !168, i32 188, i32 1, metadata !169, i32 0} ; [ DW_TAG_lexical_block ]
!1489 = metadata !{i32 786688, metadata !1488, metadata !"par", metadata !169, i32 189, metadata !10, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1490 = metadata !{i32 189, i32 17, metadata !1488, null}
!1491 = metadata !{i32 786688, metadata !1488, metadata !"t", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1492 = metadata !{i32 190, i32 35, metadata !1488, null}
!1493 = metadata !{i32 786688, metadata !1488, metadata !"chk", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1494 = metadata !{i32 190, i32 38, metadata !1488, null}
!1495 = metadata !{i32 786688, metadata !1488, metadata !"num", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1496 = metadata !{i32 190, i32 43, metadata !1488, null}
!1497 = metadata !{i32 786688, metadata !1488, metadata !"den", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1498 = metadata !{i32 190, i32 48, metadata !1488, null}
!1499 = metadata !{i32 786688, metadata !1488, metadata !"den2", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1500 = metadata !{i32 190, i32 53, metadata !1488, null}
!1501 = metadata !{i32 786688, metadata !1488, metadata !"den4", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1502 = metadata !{i32 190, i32 59, metadata !1488, null}
!1503 = metadata !{i32 786688, metadata !1488, metadata !"den6", metadata !169, i32 190, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1504 = metadata !{i32 190, i32 65, metadata !1488, null}
!1505 = metadata !{i32 191, i32 3, metadata !1488, null}
!1506 = metadata !{i32 192, i32 3, metadata !1488, null}
!1507 = metadata !{i32 193, i32 3, metadata !1488, null}
!1508 = metadata !{i32 194, i32 3, metadata !1488, null}
!1509 = metadata !{i32 195, i32 3, metadata !1488, null}
!1510 = metadata !{i32 196, i32 3, metadata !1488, null}
!1511 = metadata !{i32 197, i32 3, metadata !1488, null}
!1512 = metadata !{i32 201, i32 3, metadata !1488, null}
!1513 = metadata !{i32 202, i32 3, metadata !1488, null}
!1514 = metadata !{i32 203, i32 3, metadata !1488, null}
!1515 = metadata !{i32 204, i32 3, metadata !1488, null}
!1516 = metadata !{i32 205, i32 3, metadata !1488, null}
!1517 = metadata !{i32 207, i32 3, metadata !1488, null}
!1518 = metadata !{i32 209, i32 3, metadata !1488, null}
!1519 = metadata !{i32 210, i32 3, metadata !1488, null}
!1520 = metadata !{i32 211, i32 3, metadata !1488, null}
!1521 = metadata !{i32 212, i32 3, metadata !1488, null}
!1522 = metadata !{i32 215, i32 3, metadata !1488, null}
!1523 = metadata !{i32 216, i32 3, metadata !1488, null}
!1524 = metadata !{i32 217, i32 8, metadata !1488, null}
!1525 = metadata !{i32 218, i32 5, metadata !1488, null}
!1526 = metadata !{i32 221, i32 3, metadata !1488, null}
!1527 = metadata !{i32 222, i32 3, metadata !1488, null}
!1528 = metadata !{i32 223, i32 8, metadata !1488, null}
!1529 = metadata !{i32 224, i32 5, metadata !1488, null}
!1530 = metadata !{i32 227, i32 6, metadata !1488, null}
!1531 = metadata !{i32 228, i32 5, metadata !1488, null}
!1532 = metadata !{i32 230, i32 3, metadata !1488, null}
!1533 = metadata !{i32 231, i32 3, metadata !1488, null}
!1534 = metadata !{i32 232, i32 1, metadata !1488, null}
!1535 = metadata !{i32 786689, metadata !186, metadata !"r", metadata !169, i32 16777450, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1536 = metadata !{i32 234, i32 49, metadata !186, null}
!1537 = metadata !{i32 786689, metadata !186, metadata !"p", metadata !169, i32 33554666, metadata !189, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1538 = metadata !{i32 234, i32 95, metadata !186, null}
!1539 = metadata !{i32 235, i32 2, metadata !1540, null}
!1540 = metadata !{i32 786443, metadata !186, i32 235, i32 1, metadata !169, i32 1} ; [ DW_TAG_lexical_block ]
!1541 = metadata !{i32 786688, metadata !1540, metadata !"tx", metadata !169, i32 236, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1542 = metadata !{i32 236, i32 35, metadata !1540, null}
!1543 = metadata !{i32 786688, metadata !1540, metadata !"ty", metadata !169, i32 236, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1544 = metadata !{i32 236, i32 39, metadata !1540, null}
!1545 = metadata !{i32 786688, metadata !1540, metadata !"zi", metadata !169, i32 236, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1546 = metadata !{i32 236, i32 43, metadata !1540, null}
!1547 = metadata !{i32 237, i32 3, metadata !1540, null}
!1548 = metadata !{i32 238, i32 3, metadata !1540, null}
!1549 = metadata !{i32 239, i32 3, metadata !1540, null}
!1550 = metadata !{i32 240, i32 3, metadata !1540, null}
!1551 = metadata !{i32 241, i32 12, metadata !1540, null}
!1552 = metadata !{i32 242, i32 1, metadata !1540, null}
!1553 = metadata !{i32 786689, metadata !191, metadata !"p", metadata !169, i32 16777460, metadata !189, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1554 = metadata !{i32 244, i32 86, metadata !191, null}
!1555 = metadata !{i32 786688, metadata !1556, metadata !"ret", metadata !169, i32 246, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1556 = metadata !{i32 786443, metadata !191, i32 245, i32 1, metadata !169, i32 2} ; [ DW_TAG_lexical_block ]
!1557 = metadata !{i32 246, i32 7, metadata !1556, null}
!1558 = metadata !{i32 246, i32 14, metadata !1556, null}
!1559 = metadata !{i32 247, i32 7, metadata !1556, null}
!1560 = metadata !{i32 247, i32 54, metadata !1556, null}
!1561 = metadata !{i32 248, i32 7, metadata !1556, null}
!1562 = metadata !{i32 248, i32 67, metadata !1556, null}
!1563 = metadata !{i32 249, i32 3, metadata !1556, null}
!1564 = metadata !{i32 786689, metadata !194, metadata !"r", metadata !169, i32 16777469, metadata !172, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1565 = metadata !{i32 253, i32 89, metadata !194, null}
!1566 = metadata !{i32 786689, metadata !194, metadata !"p1", metadata !169, i32 33554685, metadata !189, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1567 = metadata !{i32 253, i32 131, metadata !194, null}
!1568 = metadata !{i32 786689, metadata !194, metadata !"s1", metadata !169, i32 50331901, metadata !197, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1569 = metadata !{i32 253, i32 174, metadata !194, null}
!1570 = metadata !{i32 786689, metadata !194, metadata !"p2", metadata !169, i32 67109117, metadata !189, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1571 = metadata !{i32 253, i32 217, metadata !194, null}
!1572 = metadata !{i32 786689, metadata !194, metadata !"s2", metadata !169, i32 83886333, metadata !197, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1573 = metadata !{i32 253, i32 0, metadata !194, null}
!1574 = metadata !{i32 786688, metadata !1575, metadata !"tp1p1", metadata !169, i32 255, metadata !241, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1575 = metadata !{i32 786443, metadata !194, i32 254, i32 1, metadata !169, i32 3} ; [ DW_TAG_lexical_block ]
!1576 = metadata !{i32 255, i32 16, metadata !1575, null}
!1577 = metadata !{i32 786688, metadata !1575, metadata !"pre", metadata !169, i32 256, metadata !1578, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1578 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 65536, i64 32, i32 0, i32 0, metadata !173, metadata !109, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1579 = metadata !{i32 256, i32 35, metadata !1575, null}
!1580 = metadata !{i32 786688, metadata !1575, metadata !"b", metadata !169, i32 257, metadata !1581, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1581 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1016, i64 8, i32 0, i32 0, metadata !10, metadata !1582, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1582 = metadata !{metadata !1583}
!1583 = metadata !{i32 786465, i64 0, i64 126}    ; [ DW_TAG_subrange_type ]
!1584 = metadata !{i32 257, i32 17, metadata !1575, null}
!1585 = metadata !{i32 786688, metadata !1575, metadata !"i", metadata !169, i32 258, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1586 = metadata !{i32 258, i32 7, metadata !1575, null}
!1587 = metadata !{i32 261, i32 3, metadata !1575, null}
!1588 = metadata !{i32 262, i32 3, metadata !1575, null}
!1589 = metadata !{i32 263, i32 3, metadata !1575, null}
!1590 = metadata !{i32 263, i32 38, metadata !1575, null}
!1591 = metadata !{i32 264, i32 3, metadata !1575, null}
!1592 = metadata !{i32 264, i32 38, metadata !1575, null}
!1593 = metadata !{i32 265, i32 3, metadata !1575, null}
!1594 = metadata !{i32 266, i32 3, metadata !1575, null}
!1595 = metadata !{i32 266, i32 38, metadata !1575, null}
!1596 = metadata !{i32 267, i32 3, metadata !1575, null}
!1597 = metadata !{i32 267, i32 38, metadata !1575, null}
!1598 = metadata !{i32 268, i32 3, metadata !1575, null}
!1599 = metadata !{i32 268, i32 38, metadata !1575, null}
!1600 = metadata !{i32 269, i32 3, metadata !1575, null}
!1601 = metadata !{i32 269, i32 38, metadata !1575, null}
!1602 = metadata !{i32 270, i32 3, metadata !1575, null}
!1603 = metadata !{i32 270, i32 38, metadata !1575, null}
!1604 = metadata !{i32 271, i32 3, metadata !1575, null}
!1605 = metadata !{i32 271, i32 43, metadata !1575, null}
!1606 = metadata !{i32 272, i32 3, metadata !1575, null}
!1607 = metadata !{i32 272, i32 38, metadata !1575, null}
!1608 = metadata !{i32 273, i32 3, metadata !1575, null}
!1609 = metadata !{i32 273, i32 38, metadata !1575, null}
!1610 = metadata !{i32 274, i32 3, metadata !1575, null}
!1611 = metadata !{i32 274, i32 38, metadata !1575, null}
!1612 = metadata !{i32 275, i32 3, metadata !1575, null}
!1613 = metadata !{i32 275, i32 38, metadata !1575, null}
!1614 = metadata !{i32 276, i32 3, metadata !1575, null}
!1615 = metadata !{i32 276, i32 38, metadata !1575, null}
!1616 = metadata !{i32 278, i32 3, metadata !1575, null}
!1617 = metadata !{i32 281, i32 3, metadata !1575, null}
!1618 = metadata !{i32 282, i32 7, metadata !1619, null}
!1619 = metadata !{i32 786443, metadata !1575, i32 282, i32 3, metadata !169, i32 4} ; [ DW_TAG_lexical_block ]
!1620 = metadata !{i32 284, i32 5, metadata !1621, null}
!1621 = metadata !{i32 786443, metadata !1619, i32 283, i32 3, metadata !169, i32 5} ; [ DW_TAG_lexical_block ]
!1622 = metadata !{i32 285, i32 5, metadata !1621, null}
!1623 = metadata !{i32 286, i32 5, metadata !1621, null}
!1624 = metadata !{i32 287, i32 5, metadata !1621, null}
!1625 = metadata !{i32 289, i32 7, metadata !1626, null}
!1626 = metadata !{i32 786443, metadata !1621, i32 288, i32 5, metadata !169, i32 6} ; [ DW_TAG_lexical_block ]
!1627 = metadata !{i32 290, i32 7, metadata !1626, null}
!1628 = metadata !{i32 291, i32 5, metadata !1626, null}
!1629 = metadata !{i32 292, i32 5, metadata !1621, null}
!1630 = metadata !{i32 292, i32 16, metadata !1621, null}
!1631 = metadata !{i32 293, i32 10, metadata !1621, null}
!1632 = metadata !{i32 294, i32 3, metadata !1621, null}
!1633 = metadata !{i32 282, i32 18, metadata !1619, null}
!1634 = metadata !{i32 295, i32 1, metadata !1575, null}
!1635 = metadata !{i32 786689, metadata !260, metadata !"r", metadata !169, i32 16777390, metadata !172, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1636 = metadata !{i32 174, i32 57, metadata !260, null}
!1637 = metadata !{i32 176, i32 3, metadata !1638, null}
!1638 = metadata !{i32 786443, metadata !260, i32 175, i32 1, metadata !169, i32 19} ; [ DW_TAG_lexical_block ]
!1639 = metadata !{i32 177, i32 3, metadata !1638, null}
!1640 = metadata !{i32 178, i32 3, metadata !1638, null}
!1641 = metadata !{i32 179, i32 3, metadata !1638, null}
!1642 = metadata !{i32 180, i32 1, metadata !1638, null}
!1643 = metadata !{i32 786689, metadata !255, metadata !"r", metadata !169, i32 16777334, metadata !251, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1644 = metadata !{i32 118, i32 36, metadata !255, null}
!1645 = metadata !{i32 786689, metadata !255, metadata !"p", metadata !169, i32 33554550, metadata !258, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1646 = metadata !{i32 118, i32 57, metadata !255, null}
!1647 = metadata !{i32 786688, metadata !1648, metadata !"a", metadata !169, i32 120, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1648 = metadata !{i32 786443, metadata !255, i32 119, i32 1, metadata !169, i32 18} ; [ DW_TAG_lexical_block ]
!1649 = metadata !{i32 120, i32 35, metadata !1648, null}
!1650 = metadata !{i32 786688, metadata !1648, metadata !"b", metadata !169, i32 120, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1651 = metadata !{i32 120, i32 37, metadata !1648, null}
!1652 = metadata !{i32 786688, metadata !1648, metadata !"c", metadata !169, i32 120, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1653 = metadata !{i32 120, i32 39, metadata !1648, null}
!1654 = metadata !{i32 786688, metadata !1648, metadata !"d", metadata !169, i32 120, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1655 = metadata !{i32 120, i32 41, metadata !1648, null}
!1656 = metadata !{i32 121, i32 3, metadata !1648, null}
!1657 = metadata !{i32 122, i32 3, metadata !1648, null}
!1658 = metadata !{i32 123, i32 3, metadata !1648, null}
!1659 = metadata !{i32 124, i32 3, metadata !1648, null}
!1660 = metadata !{i32 125, i32 3, metadata !1648, null}
!1661 = metadata !{i32 127, i32 3, metadata !1648, null}
!1662 = metadata !{i32 128, i32 3, metadata !1648, null}
!1663 = metadata !{i32 129, i32 3, metadata !1648, null}
!1664 = metadata !{i32 130, i32 3, metadata !1648, null}
!1665 = metadata !{i32 131, i32 3, metadata !1648, null}
!1666 = metadata !{i32 132, i32 3, metadata !1648, null}
!1667 = metadata !{i32 133, i32 3, metadata !1648, null}
!1668 = metadata !{i32 134, i32 1, metadata !1648, null}
!1669 = metadata !{i32 786689, metadata !252, metadata !"r", metadata !169, i32 16777283, metadata !172, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1670 = metadata !{i32 67, i32 57, metadata !252, null}
!1671 = metadata !{i32 786689, metadata !252, metadata !"p", metadata !169, i32 33554499, metadata !239, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1672 = metadata !{i32 67, i32 80, metadata !252, null}
!1673 = metadata !{i32 69, i32 3, metadata !1674, null}
!1674 = metadata !{i32 786443, metadata !252, i32 68, i32 1, metadata !169, i32 17} ; [ DW_TAG_lexical_block ]
!1675 = metadata !{i32 70, i32 3, metadata !1674, null}
!1676 = metadata !{i32 71, i32 1, metadata !1674, null}
!1677 = metadata !{i32 786689, metadata !248, metadata !"r", metadata !169, i32 16777313, metadata !251, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1678 = metadata !{i32 97, i32 36, metadata !248, null}
!1679 = metadata !{i32 786689, metadata !248, metadata !"p", metadata !169, i32 33554529, metadata !189, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1680 = metadata !{i32 97, i32 78, metadata !248, null}
!1681 = metadata !{i32 786689, metadata !248, metadata !"q", metadata !169, i32 50331745, metadata !189, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1682 = metadata !{i32 97, i32 120, metadata !248, null}
!1683 = metadata !{i32 786688, metadata !1684, metadata !"a", metadata !169, i32 99, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1684 = metadata !{i32 786443, metadata !248, i32 98, i32 1, metadata !169, i32 16} ; [ DW_TAG_lexical_block ]
!1685 = metadata !{i32 99, i32 35, metadata !1684, null}
!1686 = metadata !{i32 786688, metadata !1684, metadata !"b", metadata !169, i32 99, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1687 = metadata !{i32 99, i32 38, metadata !1684, null}
!1688 = metadata !{i32 786688, metadata !1684, metadata !"c", metadata !169, i32 99, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1689 = metadata !{i32 99, i32 41, metadata !1684, null}
!1690 = metadata !{i32 786688, metadata !1684, metadata !"d", metadata !169, i32 99, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1691 = metadata !{i32 99, i32 44, metadata !1684, null}
!1692 = metadata !{i32 786688, metadata !1684, metadata !"t", metadata !169, i32 99, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1693 = metadata !{i32 99, i32 47, metadata !1684, null}
!1694 = metadata !{i32 101, i32 3, metadata !1684, null}
!1695 = metadata !{i32 102, i32 3, metadata !1684, null}
!1696 = metadata !{i32 103, i32 3, metadata !1684, null}
!1697 = metadata !{i32 104, i32 3, metadata !1684, null}
!1698 = metadata !{i32 105, i32 3, metadata !1684, null}
!1699 = metadata !{i32 106, i32 3, metadata !1684, null}
!1700 = metadata !{i32 107, i32 3, metadata !1684, null}
!1701 = metadata !{i32 108, i32 3, metadata !1684, null}
!1702 = metadata !{i32 109, i32 3, metadata !1684, null}
!1703 = metadata !{i32 110, i32 3, metadata !1684, null}
!1704 = metadata !{i32 111, i32 3, metadata !1684, null}
!1705 = metadata !{i32 112, i32 3, metadata !1684, null}
!1706 = metadata !{i32 113, i32 3, metadata !1684, null}
!1707 = metadata !{i32 114, i32 3, metadata !1684, null}
!1708 = metadata !{i32 115, i32 1, metadata !1684, null}
!1709 = metadata !{i32 786689, metadata !229, metadata !"r", metadata !169, i32 16777276, metadata !232, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1710 = metadata !{i32 60, i32 36, metadata !229, null}
!1711 = metadata !{i32 786689, metadata !229, metadata !"p", metadata !169, i32 33554492, metadata !239, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1712 = metadata !{i32 60, i32 59, metadata !229, null}
!1713 = metadata !{i32 62, i32 3, metadata !1714, null}
!1714 = metadata !{i32 786443, metadata !229, i32 61, i32 1, metadata !169, i32 15} ; [ DW_TAG_lexical_block ]
!1715 = metadata !{i32 63, i32 3, metadata !1714, null}
!1716 = metadata !{i32 64, i32 3, metadata !1714, null}
!1717 = metadata !{i32 65, i32 1, metadata !1714, null}
!1718 = metadata !{i32 786689, metadata !203, metadata !"r", metadata !169, i32 16777513, metadata !172, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1719 = metadata !{i32 297, i32 79, metadata !203, null}
!1720 = metadata !{i32 786689, metadata !203, metadata !"s", metadata !169, i32 33554729, metadata !197, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1721 = metadata !{i32 297, i32 121, metadata !203, null}
!1722 = metadata !{i32 786688, metadata !1723, metadata !"b", metadata !169, i32 299, metadata !1724, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1723 = metadata !{i32 786443, metadata !203, i32 298, i32 1, metadata !169, i32 7} ; [ DW_TAG_lexical_block ]
!1724 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 680, i64 8, i32 0, i32 0, metadata !141, metadata !1725, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1725 = metadata !{metadata !1726}
!1726 = metadata !{i32 786465, i64 0, i64 84}     ; [ DW_TAG_subrange_type ]
!1727 = metadata !{i32 299, i32 15, metadata !1723, null}
!1728 = metadata !{i32 786688, metadata !1723, metadata !"i", metadata !169, i32 300, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1729 = metadata !{i32 300, i32 7, metadata !1723, null}
!1730 = metadata !{i32 786688, metadata !1723, metadata !"t", metadata !169, i32 301, metadata !211, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1731 = metadata !{i32 301, i32 15, metadata !1723, null}
!1732 = metadata !{i32 302, i32 3, metadata !1723, null}
!1733 = metadata !{i32 786688, metadata !1723, metadata !"r_temp", metadata !169, i32 304, metadata !211, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1734 = metadata !{i32 304, i32 15, metadata !1723, null}
!1735 = metadata !{i32 305, i32 3, metadata !1723, null}
!1736 = metadata !{i32 306, i32 3, metadata !1723, null}
!1737 = metadata !{i32 308, i32 3, metadata !1723, null}
!1738 = metadata !{i32 309, i32 3, metadata !1723, null}
!1739 = metadata !{i32 310, i32 3, metadata !1723, null}
!1740 = metadata !{i32 314, i32 3, metadata !1723, null}
!1741 = metadata !{i32 315, i32 3, metadata !1723, null}
!1742 = metadata !{i32 316, i32 7, metadata !1743, null}
!1743 = metadata !{i32 786443, metadata !1723, i32 316, i32 3, metadata !169, i32 8} ; [ DW_TAG_lexical_block ]
!1744 = metadata !{i32 318, i32 5, metadata !1745, null}
!1745 = metadata !{i32 786443, metadata !1743, i32 317, i32 3, metadata !169, i32 9} ; [ DW_TAG_lexical_block ]
!1746 = metadata !{i32 319, i32 5, metadata !1745, null}
!1747 = metadata !{i32 320, i32 3, metadata !1745, null}
!1748 = metadata !{i32 316, i32 16, metadata !1743, null}
!1749 = metadata !{i32 321, i32 1, metadata !1723, null}
!1750 = metadata !{i32 786689, metadata !216, metadata !"t", metadata !169, i32 16777377, metadata !219, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1751 = metadata !{i32 161, i32 35, metadata !216, null}
!1752 = metadata !{i32 786689, metadata !216, metadata !"pos", metadata !169, i32 33554593, metadata !58, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1753 = metadata !{i32 161, i32 57, metadata !216, null}
!1754 = metadata !{i32 786689, metadata !216, metadata !"b", metadata !169, i32 50331809, metadata !141, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1755 = metadata !{i32 161, i32 74, metadata !216, null}
!1756 = metadata !{i32 786688, metadata !1757, metadata !"v", metadata !169, i32 164, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1757 = metadata !{i32 786443, metadata !216, i32 162, i32 1, metadata !169, i32 11} ; [ DW_TAG_lexical_block ]
!1758 = metadata !{i32 164, i32 35, metadata !1757, null}
!1759 = metadata !{i32 165, i32 3, metadata !1757, null}
!1760 = metadata !{i32 166, i32 3, metadata !1757, null}
!1761 = metadata !{i32 166, i32 55, metadata !1757, null}
!1762 = metadata !{i32 166, i32 68, metadata !1757, null}
!1763 = metadata !{i32 167, i32 3, metadata !1757, null}
!1764 = metadata !{i32 167, i32 55, metadata !1757, null}
!1765 = metadata !{i32 167, i32 68, metadata !1757, null}
!1766 = metadata !{i32 168, i32 3, metadata !1757, null}
!1767 = metadata !{i32 168, i32 55, metadata !1757, null}
!1768 = metadata !{i32 168, i32 68, metadata !1757, null}
!1769 = metadata !{i32 169, i32 3, metadata !1757, null}
!1770 = metadata !{i32 169, i32 55, metadata !1757, null}
!1771 = metadata !{i32 170, i32 3, metadata !1757, null}
!1772 = metadata !{i32 171, i32 3, metadata !1757, null}
!1773 = metadata !{i32 171, i32 51, metadata !1757, null}
!1774 = metadata !{i32 172, i32 1, metadata !1757, null}
!1775 = metadata !{i32 786689, metadata !206, metadata !"r", metadata !169, i32 16777290, metadata !172, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1776 = metadata !{i32 74, i32 62, metadata !206, null}
!1777 = metadata !{i32 786689, metadata !206, metadata !"q", metadata !169, i32 33554506, metadata !209, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1778 = metadata !{i32 74, i32 84, metadata !206, null}
!1779 = metadata !{i32 786688, metadata !1780, metadata !"a", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1780 = metadata !{i32 786443, metadata !206, i32 75, i32 1, metadata !169, i32 10} ; [ DW_TAG_lexical_block ]
!1781 = metadata !{i32 76, i32 35, metadata !1780, null}
!1782 = metadata !{i32 786688, metadata !1780, metadata !"b", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1783 = metadata !{i32 76, i32 37, metadata !1780, null}
!1784 = metadata !{i32 786688, metadata !1780, metadata !"t1", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1785 = metadata !{i32 76, i32 39, metadata !1780, null}
!1786 = metadata !{i32 786688, metadata !1780, metadata !"t2", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1787 = metadata !{i32 76, i32 42, metadata !1780, null}
!1788 = metadata !{i32 786688, metadata !1780, metadata !"c", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1789 = metadata !{i32 76, i32 45, metadata !1780, null}
!1790 = metadata !{i32 786688, metadata !1780, metadata !"d", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1791 = metadata !{i32 76, i32 47, metadata !1780, null}
!1792 = metadata !{i32 786688, metadata !1780, metadata !"e", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1793 = metadata !{i32 76, i32 49, metadata !1780, null}
!1794 = metadata !{i32 786688, metadata !1780, metadata !"f", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1795 = metadata !{i32 76, i32 51, metadata !1780, null}
!1796 = metadata !{i32 786688, metadata !1780, metadata !"g", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1797 = metadata !{i32 76, i32 53, metadata !1780, null}
!1798 = metadata !{i32 786688, metadata !1780, metadata !"h", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1799 = metadata !{i32 76, i32 55, metadata !1780, null}
!1800 = metadata !{i32 786688, metadata !1780, metadata !"qt", metadata !169, i32 76, metadata !177, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1801 = metadata !{i32 76, i32 57, metadata !1780, null}
!1802 = metadata !{i32 77, i32 3, metadata !1780, null}
!1803 = metadata !{i32 78, i32 3, metadata !1780, null}
!1804 = metadata !{i32 79, i32 3, metadata !1780, null}
!1805 = metadata !{i32 80, i32 3, metadata !1780, null}
!1806 = metadata !{i32 81, i32 3, metadata !1780, null}
!1807 = metadata !{i32 82, i32 3, metadata !1780, null}
!1808 = metadata !{i32 83, i32 3, metadata !1780, null}
!1809 = metadata !{i32 84, i32 3, metadata !1780, null}
!1810 = metadata !{i32 85, i32 3, metadata !1780, null}
!1811 = metadata !{i32 86, i32 3, metadata !1780, null}
!1812 = metadata !{i32 87, i32 3, metadata !1780, null}
!1813 = metadata !{i32 88, i32 3, metadata !1780, null}
!1814 = metadata !{i32 89, i32 3, metadata !1780, null}
!1815 = metadata !{i32 90, i32 3, metadata !1780, null}
!1816 = metadata !{i32 91, i32 3, metadata !1780, null}
!1817 = metadata !{i32 92, i32 3, metadata !1780, null}
!1818 = metadata !{i32 93, i32 3, metadata !1780, null}
!1819 = metadata !{i32 94, i32 3, metadata !1780, null}
!1820 = metadata !{i32 95, i32 1, metadata !1780, null}
!1821 = metadata !{i32 786689, metadata !226, metadata !"r", metadata !169, i32 16777353, metadata !219, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1822 = metadata !{i32 137, i32 35, metadata !226, null}
!1823 = metadata !{i32 786689, metadata !226, metadata !"p", metadata !169, i32 33554569, metadata !209, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1824 = metadata !{i32 137, i32 57, metadata !226, null}
!1825 = metadata !{i32 786689, metadata !226, metadata !"b", metadata !169, i32 50331785, metadata !10, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1826 = metadata !{i32 137, i32 74, metadata !226, null}
!1827 = metadata !{i32 139, i32 3, metadata !1828, null}
!1828 = metadata !{i32 786443, metadata !226, i32 138, i32 1, metadata !169, i32 14} ; [ DW_TAG_lexical_block ]
!1829 = metadata !{i32 140, i32 3, metadata !1828, null}
!1830 = metadata !{i32 141, i32 1, metadata !1828, null}
!1831 = metadata !{i32 786689, metadata !223, metadata !"b", metadata !169, i32 16777359, metadata !141, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1832 = metadata !{i32 143, i32 40, metadata !223, null}
!1833 = metadata !{i32 786689, metadata !223, metadata !"c", metadata !169, i32 33554575, metadata !141, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1834 = metadata !{i32 143, i32 54, metadata !223, null}
!1835 = metadata !{i32 786688, metadata !1836, metadata !"ub", metadata !169, i32 145, metadata !10, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1836 = metadata !{i32 786443, metadata !223, i32 144, i32 1, metadata !169, i32 13} ; [ DW_TAG_lexical_block ]
!1837 = metadata !{i32 145, i32 17, metadata !1836, null}
!1838 = metadata !{i32 145, i32 23, metadata !1836, null}
!1839 = metadata !{i32 786688, metadata !1836, metadata !"uc", metadata !169, i32 146, metadata !10, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1840 = metadata !{i32 146, i32 17, metadata !1836, null}
!1841 = metadata !{i32 146, i32 23, metadata !1836, null}
!1842 = metadata !{i32 786688, metadata !1836, metadata !"x", metadata !169, i32 147, metadata !10, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1843 = metadata !{i32 147, i32 17, metadata !1836, null}
!1844 = metadata !{i32 147, i32 28, metadata !1836, null}
!1845 = metadata !{i32 786688, metadata !1836, metadata !"y", metadata !169, i32 148, metadata !182, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1846 = metadata !{i32 148, i32 17, metadata !1836, null}
!1847 = metadata !{i32 148, i32 22, metadata !1836, null}
!1848 = metadata !{i32 149, i32 3, metadata !1836, null}
!1849 = metadata !{i32 150, i32 3, metadata !1836, null}
!1850 = metadata !{i32 151, i32 3, metadata !1836, null}
!1851 = metadata !{i32 786689, metadata !220, metadata !"b", metadata !169, i32 16777370, metadata !141, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1852 = metadata !{i32 154, i32 43, metadata !220, null}
!1853 = metadata !{i32 786688, metadata !1854, metadata !"x", metadata !169, i32 156, metadata !58, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1854 = metadata !{i32 786443, metadata !220, i32 155, i32 1, metadata !169, i32 12} ; [ DW_TAG_lexical_block ]
!1855 = metadata !{i32 156, i32 22, metadata !1854, null}
!1856 = metadata !{i32 156, i32 27, metadata !1854, null}
!1857 = metadata !{i32 157, i32 3, metadata !1854, null}
!1858 = metadata !{i32 158, i32 3, metadata !1854, null}
!1859 = metadata !{i32 786689, metadata !277, metadata !"r", metadata !278, i32 16777290, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1860 = metadata !{i32 74, i32 78, metadata !277, null}
!1861 = metadata !{i32 786688, metadata !1862, metadata !"i", metadata !278, i32 76, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1862 = metadata !{i32 786443, metadata !277, i32 75, i32 1, metadata !278, i32 0} ; [ DW_TAG_lexical_block ]
!1863 = metadata !{i32 76, i32 7, metadata !1862, null}
!1864 = metadata !{i32 786688, metadata !1862, metadata !"m", metadata !278, i32 77, metadata !182, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1865 = metadata !{i32 77, i32 17, metadata !1862, null}
!1866 = metadata !{i32 77, i32 21, metadata !1862, null}
!1867 = metadata !{i32 78, i32 7, metadata !1868, null}
!1868 = metadata !{i32 786443, metadata !1862, i32 78, i32 3, metadata !278, i32 1} ; [ DW_TAG_lexical_block ]
!1869 = metadata !{i32 79, i32 10, metadata !1868, null}
!1870 = metadata !{i32 78, i32 16, metadata !1868, null}
!1871 = metadata !{i32 80, i32 8, metadata !1862, null}
!1872 = metadata !{i32 82, i32 3, metadata !1862, null}
!1873 = metadata !{i32 84, i32 3, metadata !1862, null}
!1874 = metadata !{i32 85, i32 7, metadata !1875, null}
!1875 = metadata !{i32 786443, metadata !1862, i32 85, i32 3, metadata !278, i32 2} ; [ DW_TAG_lexical_block ]
!1876 = metadata !{i32 86, i32 5, metadata !1875, null}
!1877 = metadata !{i32 85, i32 16, metadata !1875, null}
!1878 = metadata !{i32 87, i32 3, metadata !1862, null}
!1879 = metadata !{i32 88, i32 1, metadata !1862, null}
!1880 = metadata !{i32 786689, metadata !328, metadata !"a", metadata !278, i32 16777222, metadata !182, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1881 = metadata !{i32 6, i32 42, metadata !328, null}
!1882 = metadata !{i32 786689, metadata !328, metadata !"b", metadata !278, i32 33554438, metadata !182, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1883 = metadata !{i32 6, i32 58, metadata !328, null}
!1884 = metadata !{i32 786688, metadata !1885, metadata !"x", metadata !278, i32 8, metadata !182, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1885 = metadata !{i32 786443, metadata !328, i32 7, i32 1, metadata !278, i32 72} ; [ DW_TAG_lexical_block ]
!1886 = metadata !{i32 8, i32 17, metadata !1885, null}
!1887 = metadata !{i32 8, i32 26, metadata !1885, null}
!1888 = metadata !{i32 9, i32 3, metadata !1885, null}
!1889 = metadata !{i32 10, i32 3, metadata !1885, null}
!1890 = metadata !{i32 11, i32 3, metadata !1885, null}
!1891 = metadata !{i32 786689, metadata !325, metadata !"a", metadata !278, i32 16777230, metadata !182, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1892 = metadata !{i32 14, i32 39, metadata !325, null}
!1893 = metadata !{i32 786689, metadata !325, metadata !"b", metadata !278, i32 33554446, metadata !182, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1894 = metadata !{i32 14, i32 55, metadata !325, null}
!1895 = metadata !{i32 786688, metadata !1896, metadata !"x", metadata !278, i32 16, metadata !11, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1896 = metadata !{i32 786443, metadata !325, i32 15, i32 1, metadata !278, i32 71} ; [ DW_TAG_lexical_block ]
!1897 = metadata !{i32 16, i32 16, metadata !1896, null}
!1898 = metadata !{i32 16, i32 21, metadata !1896, null}
!1899 = metadata !{i32 17, i32 3, metadata !1896, null}
!1900 = metadata !{i32 18, i32 3, metadata !1896, null}
!1901 = metadata !{i32 19, i32 3, metadata !1896, null}
!1902 = metadata !{i32 20, i32 3, metadata !1896, null}
!1903 = metadata !{i32 786689, metadata !286, metadata !"r", metadata !278, i32 16777306, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1904 = metadata !{i32 90, i32 78, metadata !286, null}
!1905 = metadata !{i32 786689, metadata !286, metadata !"x", metadata !278, i32 33554522, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1906 = metadata !{i32 90, i32 101, metadata !286, null}
!1907 = metadata !{i32 91, i32 2, metadata !1908, null}
!1908 = metadata !{i32 786443, metadata !286, i32 91, i32 1, metadata !278, i32 3} ; [ DW_TAG_lexical_block ]
!1909 = metadata !{i32 786688, metadata !1908, metadata !"i", metadata !278, i32 92, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1910 = metadata !{i32 92, i32 7, metadata !1908, null}
!1911 = metadata !{i32 93, i32 7, metadata !1912, null}
!1912 = metadata !{i32 786443, metadata !1908, i32 93, i32 3, metadata !278, i32 4} ; [ DW_TAG_lexical_block ]
!1913 = metadata !{i32 93, i32 21, metadata !1912, null}
!1914 = metadata !{i32 93, i32 16, metadata !1912, null}
!1915 = metadata !{i32 94, i32 3, metadata !1908, null}
!1916 = metadata !{i32 95, i32 1, metadata !1908, null}
!1917 = metadata !{i32 786689, metadata !289, metadata !"r", metadata !278, i32 16777314, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1918 = metadata !{i32 98, i32 57, metadata !289, null}
!1919 = metadata !{i32 786689, metadata !289, metadata !"x", metadata !278, i32 33554530, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1920 = metadata !{i32 98, i32 103, metadata !289, null}
!1921 = metadata !{i32 99, i32 2, metadata !1922, null}
!1922 = metadata !{i32 786443, metadata !289, i32 99, i32 1, metadata !278, i32 5} ; [ DW_TAG_lexical_block ]
!1923 = metadata !{i32 786688, metadata !1922, metadata !"i", metadata !278, i32 100, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1924 = metadata !{i32 100, i32 7, metadata !1922, null}
!1925 = metadata !{i32 786688, metadata !1922, metadata !"y", metadata !278, i32 101, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1926 = metadata !{i32 101, i32 35, metadata !1922, null}
!1927 = metadata !{i32 101, i32 41, metadata !1922, null}
!1928 = metadata !{i32 102, i32 3, metadata !1922, null}
!1929 = metadata !{i32 103, i32 7, metadata !1930, null}
!1930 = metadata !{i32 786443, metadata !1922, i32 103, i32 3, metadata !278, i32 6} ; [ DW_TAG_lexical_block ]
!1931 = metadata !{i32 104, i32 5, metadata !1930, null}
!1932 = metadata !{i32 103, i32 16, metadata !1930, null}
!1933 = metadata !{i32 105, i32 1, metadata !1922, null}
!1934 = metadata !{i32 786689, metadata !294, metadata !"x", metadata !278, i32 16777323, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1935 = metadata !{i32 107, i32 83, metadata !294, null}
!1936 = metadata !{i32 786688, metadata !1937, metadata !"i", metadata !278, i32 109, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1937 = metadata !{i32 786443, metadata !294, i32 108, i32 1, metadata !278, i32 7} ; [ DW_TAG_lexical_block ]
!1938 = metadata !{i32 109, i32 7, metadata !1937, null}
!1939 = metadata !{i32 786688, metadata !1937, metadata !"r", metadata !278, i32 110, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1940 = metadata !{i32 110, i32 7, metadata !1937, null}
!1941 = metadata !{i32 786688, metadata !1937, metadata !"t", metadata !278, i32 111, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1942 = metadata !{i32 111, i32 35, metadata !1937, null}
!1943 = metadata !{i32 111, i32 41, metadata !1937, null}
!1944 = metadata !{i32 112, i32 3, metadata !1937, null}
!1945 = metadata !{i32 113, i32 7, metadata !1937, null}
!1946 = metadata !{i32 114, i32 7, metadata !1947, null}
!1947 = metadata !{i32 786443, metadata !1937, i32 114, i32 3, metadata !278, i32 8} ; [ DW_TAG_lexical_block ]
!1948 = metadata !{i32 115, i32 10, metadata !1947, null}
!1949 = metadata !{i32 114, i32 16, metadata !1947, null}
!1950 = metadata !{i32 116, i32 3, metadata !1937, null}
!1951 = metadata !{i32 786689, metadata !297, metadata !"x", metadata !278, i32 16777335, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1952 = metadata !{i32 119, i32 89, metadata !297, null}
!1953 = metadata !{i32 786689, metadata !297, metadata !"y", metadata !278, i32 33554551, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1954 = metadata !{i32 119, i32 131, metadata !297, null}
!1955 = metadata !{i32 786688, metadata !1956, metadata !"i", metadata !278, i32 121, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1956 = metadata !{i32 786443, metadata !297, i32 120, i32 1, metadata !278, i32 9} ; [ DW_TAG_lexical_block ]
!1957 = metadata !{i32 121, i32 7, metadata !1956, null}
!1958 = metadata !{i32 786688, metadata !1956, metadata !"t1", metadata !278, i32 122, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1959 = metadata !{i32 122, i32 35, metadata !1956, null}
!1960 = metadata !{i32 122, i32 42, metadata !1956, null}
!1961 = metadata !{i32 786688, metadata !1956, metadata !"t2", metadata !278, i32 123, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1962 = metadata !{i32 123, i32 35, metadata !1956, null}
!1963 = metadata !{i32 123, i32 42, metadata !1956, null}
!1964 = metadata !{i32 124, i32 3, metadata !1956, null}
!1965 = metadata !{i32 125, i32 3, metadata !1956, null}
!1966 = metadata !{i32 126, i32 7, metadata !1967, null}
!1967 = metadata !{i32 786443, metadata !1956, i32 126, i32 3, metadata !278, i32 10} ; [ DW_TAG_lexical_block ]
!1968 = metadata !{i32 127, i32 5, metadata !1967, null}
!1969 = metadata !{i32 127, i32 28, metadata !1967, null}
!1970 = metadata !{i32 126, i32 16, metadata !1967, null}
!1971 = metadata !{i32 128, i32 3, metadata !1956, null}
!1972 = metadata !{i32 129, i32 1, metadata !1956, null}
!1973 = metadata !{i32 786689, metadata !300, metadata !"r", metadata !278, i32 16777347, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1974 = metadata !{i32 131, i32 76, metadata !300, null}
!1975 = metadata !{i32 786689, metadata !300, metadata !"x", metadata !278, i32 33554563, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1976 = metadata !{i32 131, i32 118, metadata !300, null}
!1977 = metadata !{i32 786689, metadata !300, metadata !"b", metadata !278, i32 50331779, metadata !10, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1978 = metadata !{i32 131, i32 135, metadata !300, null}
!1979 = metadata !{i32 786688, metadata !1980, metadata !"i", metadata !278, i32 133, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1980 = metadata !{i32 786443, metadata !300, i32 132, i32 1, metadata !278, i32 11} ; [ DW_TAG_lexical_block ]
!1981 = metadata !{i32 133, i32 7, metadata !1980, null}
!1982 = metadata !{i32 786688, metadata !1980, metadata !"mask", metadata !278, i32 134, metadata !182, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1983 = metadata !{i32 134, i32 17, metadata !1980, null}
!1984 = metadata !{i32 134, i32 25, metadata !1980, null}
!1985 = metadata !{i32 135, i32 3, metadata !1980, null}
!1986 = metadata !{i32 136, i32 7, metadata !1987, null}
!1987 = metadata !{i32 786443, metadata !1980, i32 136, i32 3, metadata !278, i32 12} ; [ DW_TAG_lexical_block ]
!1988 = metadata !{i32 136, i32 21, metadata !1987, null}
!1989 = metadata !{i32 136, i32 16, metadata !1987, null}
!1990 = metadata !{i32 137, i32 1, metadata !1980, null}
!1991 = metadata !{i32 786689, metadata !303, metadata !"x", metadata !278, i32 16777355, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1992 = metadata !{i32 139, i32 96, metadata !303, null}
!1993 = metadata !{i32 786688, metadata !1994, metadata !"t", metadata !278, i32 141, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1994 = metadata !{i32 786443, metadata !303, i32 140, i32 1, metadata !278, i32 13} ; [ DW_TAG_lexical_block ]
!1995 = metadata !{i32 141, i32 35, metadata !1994, null}
!1996 = metadata !{i32 141, i32 41, metadata !1994, null}
!1997 = metadata !{i32 142, i32 3, metadata !1994, null}
!1998 = metadata !{i32 143, i32 3, metadata !1994, null}
!1999 = metadata !{i32 786689, metadata !306, metadata !"r", metadata !278, i32 16777362, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2000 = metadata !{i32 146, i32 78, metadata !306, null}
!2001 = metadata !{i32 786688, metadata !2002, metadata !"i", metadata !278, i32 148, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2002 = metadata !{i32 786443, metadata !306, i32 147, i32 1, metadata !278, i32 14} ; [ DW_TAG_lexical_block ]
!2003 = metadata !{i32 148, i32 7, metadata !2002, null}
!2004 = metadata !{i32 149, i32 3, metadata !2002, null}
!2005 = metadata !{i32 150, i32 7, metadata !2006, null}
!2006 = metadata !{i32 786443, metadata !2002, i32 150, i32 3, metadata !278, i32 15} ; [ DW_TAG_lexical_block ]
!2007 = metadata !{i32 150, i32 21, metadata !2006, null}
!2008 = metadata !{i32 150, i32 16, metadata !2006, null}
!2009 = metadata !{i32 151, i32 1, metadata !2002, null}
!2010 = metadata !{i32 786689, metadata !307, metadata !"r", metadata !278, i32 16777369, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2011 = metadata !{i32 153, i32 79, metadata !307, null}
!2012 = metadata !{i32 786688, metadata !2013, metadata !"i", metadata !278, i32 155, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2013 = metadata !{i32 786443, metadata !307, i32 154, i32 1, metadata !278, i32 16} ; [ DW_TAG_lexical_block ]
!2014 = metadata !{i32 155, i32 7, metadata !2013, null}
!2015 = metadata !{i32 156, i32 7, metadata !2016, null}
!2016 = metadata !{i32 786443, metadata !2013, i32 156, i32 3, metadata !278, i32 17} ; [ DW_TAG_lexical_block ]
!2017 = metadata !{i32 156, i32 21, metadata !2016, null}
!2018 = metadata !{i32 156, i32 16, metadata !2016, null}
!2019 = metadata !{i32 157, i32 1, metadata !2013, null}
!2020 = metadata !{i32 786689, metadata !308, metadata !"r", metadata !278, i32 16777375, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2021 = metadata !{i32 159, i32 75, metadata !308, null}
!2022 = metadata !{i32 786689, metadata !308, metadata !"x", metadata !278, i32 33554591, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2023 = metadata !{i32 159, i32 117, metadata !308, null}
!2024 = metadata !{i32 786688, metadata !2025, metadata !"t", metadata !278, i32 161, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2025 = metadata !{i32 786443, metadata !308, i32 160, i32 1, metadata !278, i32 18} ; [ DW_TAG_lexical_block ]
!2026 = metadata !{i32 161, i32 35, metadata !2025, null}
!2027 = metadata !{i32 786688, metadata !2025, metadata !"i", metadata !278, i32 162, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2028 = metadata !{i32 162, i32 7, metadata !2025, null}
!2029 = metadata !{i32 163, i32 7, metadata !2030, null}
!2030 = metadata !{i32 786443, metadata !2025, i32 163, i32 3, metadata !278, i32 19} ; [ DW_TAG_lexical_block ]
!2031 = metadata !{i32 163, i32 21, metadata !2030, null}
!2032 = metadata !{i32 163, i32 16, metadata !2030, null}
!2033 = metadata !{i32 164, i32 3, metadata !2025, null}
!2034 = metadata !{i32 165, i32 3, metadata !2025, null}
!2035 = metadata !{i32 166, i32 1, metadata !2025, null}
!2036 = metadata !{i32 786689, metadata !314, metadata !"r", metadata !278, i32 16777391, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2037 = metadata !{i32 175, i32 75, metadata !314, null}
!2038 = metadata !{i32 786689, metadata !314, metadata !"x", metadata !278, i32 33554607, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2039 = metadata !{i32 175, i32 117, metadata !314, null}
!2040 = metadata !{i32 786689, metadata !314, metadata !"y", metadata !278, i32 50331823, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2041 = metadata !{i32 175, i32 159, metadata !314, null}
!2042 = metadata !{i32 786688, metadata !2043, metadata !"i", metadata !278, i32 177, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2043 = metadata !{i32 786443, metadata !314, i32 176, i32 1, metadata !278, i32 22} ; [ DW_TAG_lexical_block ]
!2044 = metadata !{i32 177, i32 7, metadata !2043, null}
!2045 = metadata !{i32 786688, metadata !2043, metadata !"t", metadata !278, i32 178, metadata !181, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2046 = metadata !{i32 178, i32 17, metadata !2043, null}
!2047 = metadata !{i32 179, i32 3, metadata !2043, null}
!2048 = metadata !{i32 180, i32 3, metadata !2043, null}
!2049 = metadata !{i32 181, i32 7, metadata !2050, null}
!2050 = metadata !{i32 786443, metadata !2043, i32 181, i32 3, metadata !278, i32 23} ; [ DW_TAG_lexical_block ]
!2051 = metadata !{i32 181, i32 21, metadata !2050, null}
!2052 = metadata !{i32 181, i32 16, metadata !2050, null}
!2053 = metadata !{i32 182, i32 7, metadata !2054, null}
!2054 = metadata !{i32 786443, metadata !2043, i32 182, i32 3, metadata !278, i32 24} ; [ DW_TAG_lexical_block ]
!2055 = metadata !{i32 182, i32 21, metadata !2054, null}
!2056 = metadata !{i32 182, i32 16, metadata !2054, null}
!2057 = metadata !{i32 183, i32 3, metadata !2043, null}
!2058 = metadata !{i32 184, i32 1, metadata !2043, null}
!2059 = metadata !{i32 786689, metadata !311, metadata !"r", metadata !278, i32 16777384, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2060 = metadata !{i32 168, i32 75, metadata !311, null}
!2061 = metadata !{i32 786689, metadata !311, metadata !"x", metadata !278, i32 33554600, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2062 = metadata !{i32 168, i32 117, metadata !311, null}
!2063 = metadata !{i32 786689, metadata !311, metadata !"y", metadata !278, i32 50331816, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2064 = metadata !{i32 168, i32 159, metadata !311, null}
!2065 = metadata !{i32 786688, metadata !2066, metadata !"i", metadata !278, i32 170, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2066 = metadata !{i32 786443, metadata !311, i32 169, i32 1, metadata !278, i32 20} ; [ DW_TAG_lexical_block ]
!2067 = metadata !{i32 170, i32 7, metadata !2066, null}
!2068 = metadata !{i32 171, i32 7, metadata !2069, null}
!2069 = metadata !{i32 786443, metadata !2066, i32 171, i32 3, metadata !278, i32 21} ; [ DW_TAG_lexical_block ]
!2070 = metadata !{i32 171, i32 21, metadata !2069, null}
!2071 = metadata !{i32 171, i32 16, metadata !2069, null}
!2072 = metadata !{i32 172, i32 3, metadata !2066, null}
!2073 = metadata !{i32 173, i32 1, metadata !2066, null}
!2074 = metadata !{i32 786689, metadata !324, metadata !"r", metadata !278, i32 16777249, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2075 = metadata !{i32 33, i32 61, metadata !324, null}
!2076 = metadata !{i32 786688, metadata !2077, metadata !"t", metadata !278, i32 35, metadata !182, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2077 = metadata !{i32 786443, metadata !324, i32 34, i32 1, metadata !278, i32 66} ; [ DW_TAG_lexical_block ]
!2078 = metadata !{i32 35, i32 17, metadata !2077, null}
!2079 = metadata !{i32 786688, metadata !2077, metadata !"i", metadata !278, i32 36, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2080 = metadata !{i32 36, i32 7, metadata !2077, null}
!2081 = metadata !{i32 786688, metadata !2077, metadata !"rep", metadata !278, i32 36, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2082 = metadata !{i32 36, i32 9, metadata !2077, null}
!2083 = metadata !{i32 38, i32 7, metadata !2084, null}
!2084 = metadata !{i32 786443, metadata !2077, i32 38, i32 3, metadata !278, i32 67} ; [ DW_TAG_lexical_block ]
!2085 = metadata !{i32 40, i32 5, metadata !2086, null}
!2086 = metadata !{i32 786443, metadata !2084, i32 39, i32 3, metadata !278, i32 68} ; [ DW_TAG_lexical_block ]
!2087 = metadata !{i32 41, i32 5, metadata !2086, null}
!2088 = metadata !{i32 42, i32 9, metadata !2086, null}
!2089 = metadata !{i32 43, i32 5, metadata !2086, null}
!2090 = metadata !{i32 44, i32 9, metadata !2091, null}
!2091 = metadata !{i32 786443, metadata !2086, i32 44, i32 5, metadata !278, i32 69} ; [ DW_TAG_lexical_block ]
!2092 = metadata !{i32 46, i32 7, metadata !2093, null}
!2093 = metadata !{i32 786443, metadata !2091, i32 45, i32 5, metadata !278, i32 70} ; [ DW_TAG_lexical_block ]
!2094 = metadata !{i32 47, i32 7, metadata !2093, null}
!2095 = metadata !{i32 48, i32 7, metadata !2093, null}
!2096 = metadata !{i32 49, i32 5, metadata !2093, null}
!2097 = metadata !{i32 44, i32 18, metadata !2091, null}
!2098 = metadata !{i32 50, i32 3, metadata !2086, null}
!2099 = metadata !{i32 38, i32 19, metadata !2084, null}
!2100 = metadata !{i32 51, i32 1, metadata !2077, null}
!2101 = metadata !{i32 786689, metadata !315, metadata !"r", metadata !278, i32 16777402, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2102 = metadata !{i32 186, i32 75, metadata !315, null}
!2103 = metadata !{i32 786689, metadata !315, metadata !"x", metadata !278, i32 33554618, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2104 = metadata !{i32 186, i32 117, metadata !315, null}
!2105 = metadata !{i32 786689, metadata !315, metadata !"y", metadata !278, i32 50331834, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2106 = metadata !{i32 186, i32 159, metadata !315, null}
!2107 = metadata !{i32 786688, metadata !2108, metadata !"i", metadata !278, i32 188, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2108 = metadata !{i32 786443, metadata !315, i32 187, i32 1, metadata !278, i32 25} ; [ DW_TAG_lexical_block ]
!2109 = metadata !{i32 188, i32 7, metadata !2108, null}
!2110 = metadata !{i32 786688, metadata !2108, metadata !"j", metadata !278, i32 188, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2111 = metadata !{i32 188, i32 9, metadata !2108, null}
!2112 = metadata !{i32 786688, metadata !2108, metadata !"t", metadata !278, i32 189, metadata !2113, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2113 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2016, i64 32, i32 0, i32 0, metadata !182, metadata !2114, i32 0, i32 0} ; [ DW_TAG_array_type ]
!2114 = metadata !{metadata !2115}
!2115 = metadata !{i32 786465, i64 0, i64 62}     ; [ DW_TAG_subrange_type ]
!2116 = metadata !{i32 189, i32 17, metadata !2108, null}
!2117 = metadata !{i32 190, i32 7, metadata !2118, null}
!2118 = metadata !{i32 786443, metadata !2108, i32 190, i32 3, metadata !278, i32 26} ; [ DW_TAG_lexical_block ]
!2119 = metadata !{i32 190, i32 20, metadata !2118, null}
!2120 = metadata !{i32 190, i32 16, metadata !2118, null}
!2121 = metadata !{i32 192, i32 7, metadata !2122, null}
!2122 = metadata !{i32 786443, metadata !2108, i32 192, i32 3, metadata !278, i32 27} ; [ DW_TAG_lexical_block ]
!2123 = metadata !{i32 193, i32 9, metadata !2124, null}
!2124 = metadata !{i32 786443, metadata !2122, i32 193, i32 5, metadata !278, i32 28} ; [ DW_TAG_lexical_block ]
!2125 = metadata !{i32 194, i32 7, metadata !2124, null}
!2126 = metadata !{i32 193, i32 18, metadata !2124, null}
!2127 = metadata !{i32 194, i32 33, metadata !2124, null}
!2128 = metadata !{i32 192, i32 16, metadata !2122, null}
!2129 = metadata !{i32 196, i32 7, metadata !2130, null}
!2130 = metadata !{i32 786443, metadata !2108, i32 196, i32 3, metadata !278, i32 29} ; [ DW_TAG_lexical_block ]
!2131 = metadata !{i32 197, i32 5, metadata !2130, null}
!2132 = metadata !{i32 197, i32 28, metadata !2130, null}
!2133 = metadata !{i32 196, i32 17, metadata !2130, null}
!2134 = metadata !{i32 198, i32 3, metadata !2108, null}
!2135 = metadata !{i32 200, i32 3, metadata !2108, null}
!2136 = metadata !{i32 201, i32 1, metadata !2108, null}
!2137 = metadata !{i32 786689, metadata !323, metadata !"a", metadata !278, i32 16777244, metadata !182, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2138 = metadata !{i32 28, i32 44, metadata !323, null}
!2139 = metadata !{i32 30, i32 3, metadata !2140, null}
!2140 = metadata !{i32 786443, metadata !323, i32 29, i32 1, metadata !278, i32 65} ; [ DW_TAG_lexical_block ]
!2141 = metadata !{i32 786689, metadata !319, metadata !"r", metadata !278, i32 16777269, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2142 = metadata !{i32 53, i32 57, metadata !319, null}
!2143 = metadata !{i32 786688, metadata !2144, metadata !"t", metadata !278, i32 55, metadata !182, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2144 = metadata !{i32 786443, metadata !319, i32 54, i32 1, metadata !278, i32 59} ; [ DW_TAG_lexical_block ]
!2145 = metadata !{i32 55, i32 17, metadata !2144, null}
!2146 = metadata !{i32 786688, metadata !2144, metadata !"i", metadata !278, i32 56, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2147 = metadata !{i32 56, i32 7, metadata !2144, null}
!2148 = metadata !{i32 786688, metadata !2144, metadata !"rep", metadata !278, i32 56, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2149 = metadata !{i32 56, i32 9, metadata !2144, null}
!2150 = metadata !{i32 58, i32 7, metadata !2151, null}
!2151 = metadata !{i32 786443, metadata !2144, i32 58, i32 3, metadata !278, i32 60} ; [ DW_TAG_lexical_block ]
!2152 = metadata !{i32 60, i32 5, metadata !2153, null}
!2153 = metadata !{i32 786443, metadata !2151, i32 59, i32 3, metadata !278, i32 61} ; [ DW_TAG_lexical_block ]
!2154 = metadata !{i32 61, i32 5, metadata !2153, null}
!2155 = metadata !{i32 62, i32 9, metadata !2153, null}
!2156 = metadata !{i32 63, i32 5, metadata !2153, null}
!2157 = metadata !{i32 64, i32 9, metadata !2158, null}
!2158 = metadata !{i32 786443, metadata !2153, i32 64, i32 5, metadata !278, i32 62} ; [ DW_TAG_lexical_block ]
!2159 = metadata !{i32 66, i32 7, metadata !2160, null}
!2160 = metadata !{i32 786443, metadata !2158, i32 65, i32 5, metadata !278, i32 63} ; [ DW_TAG_lexical_block ]
!2161 = metadata !{i32 67, i32 7, metadata !2160, null}
!2162 = metadata !{i32 68, i32 7, metadata !2160, null}
!2163 = metadata !{i32 69, i32 5, metadata !2160, null}
!2164 = metadata !{i32 64, i32 18, metadata !2158, null}
!2165 = metadata !{i32 70, i32 3, metadata !2153, null}
!2166 = metadata !{i32 58, i32 19, metadata !2151, null}
!2167 = metadata !{i32 71, i32 1, metadata !2144, null}
!2168 = metadata !{i32 786689, metadata !316, metadata !"r", metadata !278, i32 16777419, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2169 = metadata !{i32 203, i32 78, metadata !316, null}
!2170 = metadata !{i32 786689, metadata !316, metadata !"x", metadata !278, i32 33554635, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2171 = metadata !{i32 203, i32 120, metadata !316, null}
!2172 = metadata !{i32 205, i32 3, metadata !2173, null}
!2173 = metadata !{i32 786443, metadata !316, i32 204, i32 1, metadata !278, i32 30} ; [ DW_TAG_lexical_block ]
!2174 = metadata !{i32 206, i32 1, metadata !2173, null}
!2175 = metadata !{i32 786689, metadata !317, metadata !"r", metadata !278, i32 16777424, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2176 = metadata !{i32 208, i32 78, metadata !317, null}
!2177 = metadata !{i32 786689, metadata !317, metadata !"x", metadata !278, i32 33554640, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2178 = metadata !{i32 208, i32 120, metadata !317, null}
!2179 = metadata !{i32 786688, metadata !2180, metadata !"z2", metadata !278, i32 210, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2180 = metadata !{i32 786443, metadata !317, i32 209, i32 1, metadata !278, i32 31} ; [ DW_TAG_lexical_block ]
!2181 = metadata !{i32 210, i32 34, metadata !2180, null}
!2182 = metadata !{i32 786688, metadata !2180, metadata !"z9", metadata !278, i32 211, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2183 = metadata !{i32 211, i32 34, metadata !2180, null}
!2184 = metadata !{i32 786688, metadata !2180, metadata !"z11", metadata !278, i32 212, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2185 = metadata !{i32 212, i32 34, metadata !2180, null}
!2186 = metadata !{i32 786688, metadata !2180, metadata !"z2_5_0", metadata !278, i32 213, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2187 = metadata !{i32 213, i32 34, metadata !2180, null}
!2188 = metadata !{i32 786688, metadata !2180, metadata !"z2_10_0", metadata !278, i32 214, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2189 = metadata !{i32 214, i32 34, metadata !2180, null}
!2190 = metadata !{i32 786688, metadata !2180, metadata !"z2_20_0", metadata !278, i32 215, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2191 = metadata !{i32 215, i32 34, metadata !2180, null}
!2192 = metadata !{i32 786688, metadata !2180, metadata !"z2_50_0", metadata !278, i32 216, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2193 = metadata !{i32 216, i32 34, metadata !2180, null}
!2194 = metadata !{i32 786688, metadata !2180, metadata !"z2_100_0", metadata !278, i32 217, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2195 = metadata !{i32 217, i32 34, metadata !2180, null}
!2196 = metadata !{i32 786688, metadata !2180, metadata !"t0", metadata !278, i32 218, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2197 = metadata !{i32 218, i32 34, metadata !2180, null}
!2198 = metadata !{i32 786688, metadata !2180, metadata !"t1", metadata !278, i32 219, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2199 = metadata !{i32 219, i32 34, metadata !2180, null}
!2200 = metadata !{i32 786688, metadata !2180, metadata !"i", metadata !278, i32 220, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2201 = metadata !{i32 220, i32 6, metadata !2180, null}
!2202 = metadata !{i32 222, i32 10, metadata !2180, null}
!2203 = metadata !{i32 223, i32 10, metadata !2180, null}
!2204 = metadata !{i32 224, i32 10, metadata !2180, null}
!2205 = metadata !{i32 225, i32 10, metadata !2180, null}
!2206 = metadata !{i32 226, i32 11, metadata !2180, null}
!2207 = metadata !{i32 227, i32 11, metadata !2180, null}
!2208 = metadata !{i32 228, i32 23, metadata !2180, null}
!2209 = metadata !{i32 230, i32 18, metadata !2180, null}
!2210 = metadata !{i32 231, i32 18, metadata !2180, null}
!2211 = metadata !{i32 232, i32 18, metadata !2180, null}
!2212 = metadata !{i32 233, i32 18, metadata !2180, null}
!2213 = metadata !{i32 234, i32 19, metadata !2180, null}
!2214 = metadata !{i32 235, i32 19, metadata !2180, null}
!2215 = metadata !{i32 237, i32 19, metadata !2180, null}
!2216 = metadata !{i32 238, i32 19, metadata !2180, null}
!2217 = metadata !{i32 239, i32 25, metadata !2218, null}
!2218 = metadata !{i32 786443, metadata !2180, i32 239, i32 20, metadata !278, i32 32} ; [ DW_TAG_lexical_block ]
!2219 = metadata !{i32 239, i32 48, metadata !2220, null}
!2220 = metadata !{i32 786443, metadata !2218, i32 239, i32 46, metadata !278, i32 33} ; [ DW_TAG_lexical_block ]
!2221 = metadata !{i32 239, i32 97, metadata !2220, null}
!2222 = metadata !{i32 239, i32 146, metadata !2220, null}
!2223 = metadata !{i32 239, i32 38, metadata !2218, null}
!2224 = metadata !{i32 240, i32 19, metadata !2180, null}
!2225 = metadata !{i32 242, i32 19, metadata !2180, null}
!2226 = metadata !{i32 243, i32 19, metadata !2180, null}
!2227 = metadata !{i32 244, i32 25, metadata !2228, null}
!2228 = metadata !{i32 786443, metadata !2180, i32 244, i32 20, metadata !278, i32 34} ; [ DW_TAG_lexical_block ]
!2229 = metadata !{i32 244, i32 48, metadata !2230, null}
!2230 = metadata !{i32 786443, metadata !2228, i32 244, i32 46, metadata !278, i32 35} ; [ DW_TAG_lexical_block ]
!2231 = metadata !{i32 244, i32 97, metadata !2230, null}
!2232 = metadata !{i32 244, i32 146, metadata !2230, null}
!2233 = metadata !{i32 244, i32 38, metadata !2228, null}
!2234 = metadata !{i32 245, i32 19, metadata !2180, null}
!2235 = metadata !{i32 247, i32 19, metadata !2180, null}
!2236 = metadata !{i32 248, i32 19, metadata !2180, null}
!2237 = metadata !{i32 249, i32 25, metadata !2238, null}
!2238 = metadata !{i32 786443, metadata !2180, i32 249, i32 20, metadata !278, i32 36} ; [ DW_TAG_lexical_block ]
!2239 = metadata !{i32 249, i32 48, metadata !2240, null}
!2240 = metadata !{i32 786443, metadata !2238, i32 249, i32 46, metadata !278, i32 37} ; [ DW_TAG_lexical_block ]
!2241 = metadata !{i32 249, i32 97, metadata !2240, null}
!2242 = metadata !{i32 249, i32 146, metadata !2240, null}
!2243 = metadata !{i32 249, i32 38, metadata !2238, null}
!2244 = metadata !{i32 250, i32 19, metadata !2180, null}
!2245 = metadata !{i32 252, i32 19, metadata !2180, null}
!2246 = metadata !{i32 253, i32 19, metadata !2180, null}
!2247 = metadata !{i32 254, i32 26, metadata !2248, null}
!2248 = metadata !{i32 786443, metadata !2180, i32 254, i32 21, metadata !278, i32 38} ; [ DW_TAG_lexical_block ]
!2249 = metadata !{i32 254, i32 49, metadata !2250, null}
!2250 = metadata !{i32 786443, metadata !2248, i32 254, i32 47, metadata !278, i32 39} ; [ DW_TAG_lexical_block ]
!2251 = metadata !{i32 254, i32 98, metadata !2250, null}
!2252 = metadata !{i32 254, i32 147, metadata !2250, null}
!2253 = metadata !{i32 254, i32 39, metadata !2248, null}
!2254 = metadata !{i32 255, i32 20, metadata !2180, null}
!2255 = metadata !{i32 257, i32 20, metadata !2180, null}
!2256 = metadata !{i32 258, i32 20, metadata !2180, null}
!2257 = metadata !{i32 259, i32 27, metadata !2258, null}
!2258 = metadata !{i32 786443, metadata !2180, i32 259, i32 22, metadata !278, i32 40} ; [ DW_TAG_lexical_block ]
!2259 = metadata !{i32 259, i32 51, metadata !2260, null}
!2260 = metadata !{i32 786443, metadata !2258, i32 259, i32 49, metadata !278, i32 41} ; [ DW_TAG_lexical_block ]
!2261 = metadata !{i32 259, i32 100, metadata !2260, null}
!2262 = metadata !{i32 259, i32 149, metadata !2260, null}
!2263 = metadata !{i32 259, i32 41, metadata !2258, null}
!2264 = metadata !{i32 260, i32 20, metadata !2180, null}
!2265 = metadata !{i32 262, i32 20, metadata !2180, null}
!2266 = metadata !{i32 263, i32 20, metadata !2180, null}
!2267 = metadata !{i32 264, i32 26, metadata !2268, null}
!2268 = metadata !{i32 786443, metadata !2180, i32 264, i32 21, metadata !278, i32 42} ; [ DW_TAG_lexical_block ]
!2269 = metadata !{i32 264, i32 49, metadata !2270, null}
!2270 = metadata !{i32 786443, metadata !2268, i32 264, i32 47, metadata !278, i32 43} ; [ DW_TAG_lexical_block ]
!2271 = metadata !{i32 264, i32 98, metadata !2270, null}
!2272 = metadata !{i32 264, i32 147, metadata !2270, null}
!2273 = metadata !{i32 264, i32 39, metadata !2268, null}
!2274 = metadata !{i32 265, i32 20, metadata !2180, null}
!2275 = metadata !{i32 267, i32 20, metadata !2180, null}
!2276 = metadata !{i32 268, i32 20, metadata !2180, null}
!2277 = metadata !{i32 269, i32 20, metadata !2180, null}
!2278 = metadata !{i32 270, i32 20, metadata !2180, null}
!2279 = metadata !{i32 271, i32 20, metadata !2180, null}
!2280 = metadata !{i32 272, i32 19, metadata !2180, null}
!2281 = metadata !{i32 273, i32 1, metadata !2180, null}
!2282 = metadata !{i32 786689, metadata !318, metadata !"r", metadata !278, i32 16777491, metadata !281, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2283 = metadata !{i32 275, i32 79, metadata !318, null}
!2284 = metadata !{i32 786689, metadata !318, metadata !"x", metadata !278, i32 33554707, metadata !292, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2285 = metadata !{i32 275, i32 121, metadata !318, null}
!2286 = metadata !{i32 786688, metadata !2287, metadata !"z2", metadata !278, i32 277, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2287 = metadata !{i32 786443, metadata !318, i32 276, i32 1, metadata !278, i32 44} ; [ DW_TAG_lexical_block ]
!2288 = metadata !{i32 277, i32 34, metadata !2287, null}
!2289 = metadata !{i32 786688, metadata !2287, metadata !"z9", metadata !278, i32 278, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2290 = metadata !{i32 278, i32 34, metadata !2287, null}
!2291 = metadata !{i32 786688, metadata !2287, metadata !"z11", metadata !278, i32 279, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2292 = metadata !{i32 279, i32 34, metadata !2287, null}
!2293 = metadata !{i32 786688, metadata !2287, metadata !"z2_5_0", metadata !278, i32 280, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2294 = metadata !{i32 280, i32 34, metadata !2287, null}
!2295 = metadata !{i32 786688, metadata !2287, metadata !"z2_10_0", metadata !278, i32 281, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2296 = metadata !{i32 281, i32 34, metadata !2287, null}
!2297 = metadata !{i32 786688, metadata !2287, metadata !"z2_20_0", metadata !278, i32 282, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2298 = metadata !{i32 282, i32 34, metadata !2287, null}
!2299 = metadata !{i32 786688, metadata !2287, metadata !"z2_50_0", metadata !278, i32 283, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2300 = metadata !{i32 283, i32 34, metadata !2287, null}
!2301 = metadata !{i32 786688, metadata !2287, metadata !"z2_100_0", metadata !278, i32 284, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2302 = metadata !{i32 284, i32 34, metadata !2287, null}
!2303 = metadata !{i32 786688, metadata !2287, metadata !"t", metadata !278, i32 285, metadata !282, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2304 = metadata !{i32 285, i32 34, metadata !2287, null}
!2305 = metadata !{i32 786688, metadata !2287, metadata !"i", metadata !278, i32 286, metadata !21, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!2306 = metadata !{i32 286, i32 6, metadata !2287, null}
!2307 = metadata !{i32 288, i32 10, metadata !2287, null}
!2308 = metadata !{i32 289, i32 10, metadata !2287, null}
!2309 = metadata !{i32 290, i32 10, metadata !2287, null}
!2310 = metadata !{i32 291, i32 10, metadata !2287, null}
!2311 = metadata !{i32 292, i32 11, metadata !2287, null}
!2312 = metadata !{i32 293, i32 11, metadata !2287, null}
!2313 = metadata !{i32 294, i32 23, metadata !2287, null}
!2314 = metadata !{i32 296, i32 18, metadata !2287, null}
!2315 = metadata !{i32 297, i32 24, metadata !2316, null}
!2316 = metadata !{i32 786443, metadata !2287, i32 297, i32 19, metadata !278, i32 45} ; [ DW_TAG_lexical_block ]
!2317 = metadata !{i32 297, i32 43, metadata !2318, null}
!2318 = metadata !{i32 786443, metadata !2316, i32 297, i32 41, metadata !278, i32 46} ; [ DW_TAG_lexical_block ]
!2319 = metadata !{i32 297, i32 90, metadata !2318, null}
!2320 = metadata !{i32 297, i32 36, metadata !2316, null}
!2321 = metadata !{i32 298, i32 19, metadata !2287, null}
!2322 = metadata !{i32 300, i32 19, metadata !2287, null}
!2323 = metadata !{i32 301, i32 25, metadata !2324, null}
!2324 = metadata !{i32 786443, metadata !2287, i32 301, i32 20, metadata !278, i32 47} ; [ DW_TAG_lexical_block ]
!2325 = metadata !{i32 301, i32 45, metadata !2326, null}
!2326 = metadata !{i32 786443, metadata !2324, i32 301, i32 43, metadata !278, i32 48} ; [ DW_TAG_lexical_block ]
!2327 = metadata !{i32 301, i32 92, metadata !2326, null}
!2328 = metadata !{i32 301, i32 38, metadata !2324, null}
!2329 = metadata !{i32 302, i32 19, metadata !2287, null}
!2330 = metadata !{i32 304, i32 19, metadata !2287, null}
!2331 = metadata !{i32 305, i32 25, metadata !2332, null}
!2332 = metadata !{i32 786443, metadata !2287, i32 305, i32 20, metadata !278, i32 49} ; [ DW_TAG_lexical_block ]
!2333 = metadata !{i32 305, i32 45, metadata !2334, null}
!2334 = metadata !{i32 786443, metadata !2332, i32 305, i32 43, metadata !278, i32 50} ; [ DW_TAG_lexical_block ]
!2335 = metadata !{i32 305, i32 92, metadata !2334, null}
!2336 = metadata !{i32 305, i32 38, metadata !2332, null}
!2337 = metadata !{i32 306, i32 19, metadata !2287, null}
!2338 = metadata !{i32 308, i32 19, metadata !2287, null}
!2339 = metadata !{i32 309, i32 25, metadata !2340, null}
!2340 = metadata !{i32 786443, metadata !2287, i32 309, i32 20, metadata !278, i32 51} ; [ DW_TAG_lexical_block ]
!2341 = metadata !{i32 309, i32 45, metadata !2342, null}
!2342 = metadata !{i32 786443, metadata !2340, i32 309, i32 43, metadata !278, i32 52} ; [ DW_TAG_lexical_block ]
!2343 = metadata !{i32 309, i32 92, metadata !2342, null}
!2344 = metadata !{i32 309, i32 38, metadata !2340, null}
!2345 = metadata !{i32 310, i32 19, metadata !2287, null}
!2346 = metadata !{i32 312, i32 19, metadata !2287, null}
!2347 = metadata !{i32 313, i32 26, metadata !2348, null}
!2348 = metadata !{i32 786443, metadata !2287, i32 313, i32 21, metadata !278, i32 53} ; [ DW_TAG_lexical_block ]
!2349 = metadata !{i32 313, i32 46, metadata !2350, null}
!2350 = metadata !{i32 786443, metadata !2348, i32 313, i32 44, metadata !278, i32 54} ; [ DW_TAG_lexical_block ]
!2351 = metadata !{i32 313, i32 93, metadata !2350, null}
!2352 = metadata !{i32 313, i32 39, metadata !2348, null}
!2353 = metadata !{i32 314, i32 20, metadata !2287, null}
!2354 = metadata !{i32 316, i32 20, metadata !2287, null}
!2355 = metadata !{i32 317, i32 27, metadata !2356, null}
!2356 = metadata !{i32 786443, metadata !2287, i32 317, i32 22, metadata !278, i32 55} ; [ DW_TAG_lexical_block ]
!2357 = metadata !{i32 317, i32 48, metadata !2358, null}
!2358 = metadata !{i32 786443, metadata !2356, i32 317, i32 46, metadata !278, i32 56} ; [ DW_TAG_lexical_block ]
!2359 = metadata !{i32 317, i32 95, metadata !2358, null}
!2360 = metadata !{i32 317, i32 41, metadata !2356, null}
!2361 = metadata !{i32 318, i32 20, metadata !2287, null}
!2362 = metadata !{i32 320, i32 20, metadata !2287, null}
!2363 = metadata !{i32 321, i32 26, metadata !2364, null}
!2364 = metadata !{i32 786443, metadata !2287, i32 321, i32 21, metadata !278, i32 57} ; [ DW_TAG_lexical_block ]
!2365 = metadata !{i32 321, i32 46, metadata !2366, null}
!2366 = metadata !{i32 786443, metadata !2364, i32 321, i32 44, metadata !278, i32 58} ; [ DW_TAG_lexical_block ]
!2367 = metadata !{i32 321, i32 93, metadata !2366, null}
!2368 = metadata !{i32 321, i32 39, metadata !2364, null}
!2369 = metadata !{i32 322, i32 20, metadata !2287, null}
!2370 = metadata !{i32 324, i32 20, metadata !2287, null}
!2371 = metadata !{i32 325, i32 20, metadata !2287, null}
!2372 = metadata !{i32 326, i32 18, metadata !2287, null}
!2373 = metadata !{i32 327, i32 1, metadata !2287, null}
!2374 = metadata !{i32 786689, metadata !320, metadata !"a", metadata !278, i32 16777239, metadata !182, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!2375 = metadata !{i32 23, i32 44, metadata !320, null}
!2376 = metadata !{i32 25, i32 3, metadata !2377, null}
!2377 = metadata !{i32 786443, metadata !320, i32 24, i32 1, metadata !278, i32 64} ; [ DW_TAG_lexical_block ]
