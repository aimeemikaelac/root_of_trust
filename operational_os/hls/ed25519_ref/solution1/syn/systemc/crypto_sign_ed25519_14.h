// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_sign_ed25519_14_HH_
#define _crypto_sign_ed25519_14_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct crypto_sign_ed25519_14 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > r_address0;
    sc_out< sc_logic > r_ce0;
    sc_out< sc_logic > r_we0;
    sc_out< sc_lv<8> > r_d0;
    sc_in< sc_lv<8> > r_q0;
    sc_out< sc_lv<7> > r_address1;
    sc_out< sc_logic > r_ce1;
    sc_out< sc_logic > r_we1;
    sc_out< sc_lv<8> > r_d1;
    sc_in< sc_lv<8> > r_q1;
    sc_out< sc_lv<5> > s_v_address0;
    sc_out< sc_logic > s_v_ce0;
    sc_in< sc_lv<32> > s_v_q0;
    sc_out< sc_lv<5> > s_v_address1;
    sc_out< sc_logic > s_v_ce1;
    sc_in< sc_lv<32> > s_v_q1;


    // Module declarations
    crypto_sign_ed25519_14(sc_module_name name);
    SC_HAS_PROCESS(crypto_sign_ed25519_14);

    ~crypto_sign_ed25519_14();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > reg_324;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > tmp_782_fu_338_p2;
    sc_signal< sc_lv<4> > tmp_782_reg_785;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > tmp_749_fu_356_p2;
    sc_signal< sc_lv<7> > tmp_749_reg_790;
    sc_signal< sc_lv<1> > exitcond1_fu_332_p2;
    sc_signal< sc_lv<7> > tmp_751_fu_380_p3;
    sc_signal< sc_lv<7> > tmp_751_reg_806;
    sc_signal< sc_lv<3> > tmp_804_cast_reg_826;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > tmp_775_fu_527_p2;
    sc_signal< sc_lv<3> > tmp_775_reg_831;
    sc_signal< sc_lv<3> > tmp_820_cast_reg_836;
    sc_signal< sc_lv<3> > tmp_825_cast_reg_841;
    sc_signal< sc_lv<3> > tmp_774_cast_reg_851;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<7> > r_addr_4_reg_856;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > carry_cast_fu_675_p1;
    sc_signal< sc_lv<8> > carry_cast_reg_862;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<7> > i_56_fu_685_p2;
    sc_signal< sc_lv<7> > i_56_reg_871;
    sc_signal< sc_lv<7> > r_addr_13_reg_876;
    sc_signal< sc_lv<1> > exitcond_fu_679_p2;
    sc_signal< sc_lv<7> > r_addr_14_reg_881;
    sc_signal< sc_lv<1> > tmp_796_fu_745_p3;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > i_reg_269;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > carry_reg_281;
    sc_signal< sc_lv<7> > i_1_reg_293;
    sc_signal< sc_lv<64> > tmp_750_fu_366_p1;
    sc_signal< sc_lv<64> > tmp_752_fu_388_p1;
    sc_signal< sc_lv<64> > tmp_755_fu_404_p1;
    sc_signal< sc_lv<64> > tmp_760_fu_418_p1;
    sc_signal< sc_lv<64> > tmp_773_fu_432_p1;
    sc_signal< sc_lv<64> > tmp_758_fu_442_p1;
    sc_signal< sc_lv<64> > tmp_765_fu_490_p1;
    sc_signal< sc_lv<64> > tmp_768_fu_562_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_771_fu_572_p1;
    sc_signal< sc_lv<64> > tmp_778_fu_590_p1;
    sc_signal< sc_lv<64> > tmp_781_fu_604_p1;
    sc_signal< sc_lv<64> > tmp_784_fu_691_p1;
    sc_signal< sc_lv<64> > tmp_786_fu_696_p1;
    sc_signal< sc_lv<8> > tmp_779_cast_fu_375_p1;
    sc_signal< sc_lv<8> > tmp_784_cast_fu_393_p1;
    sc_signal< sc_lv<8> > tmp_797_cast_fu_465_p1;
    sc_signal< sc_lv<8> > tmp_800_cast_fu_480_p1;
    sc_signal< sc_lv<8> > tmp_805_cast_fu_553_p1;
    sc_signal< sc_lv<8> > tmp_818_cast_fu_577_p1;
    sc_signal< sc_lv<8> > tmp_821_cast_fu_581_p1;
    sc_signal< sc_lv<8> > tmp_826_cast_fu_595_p1;
    sc_signal< sc_lv<8> > tmp_cast_fu_613_p1;
    sc_signal< sc_lv<8> > tmp_762_cast_fu_618_p1;
    sc_signal< sc_lv<8> > tmp_769_cast_fu_641_p1;
    sc_signal< sc_lv<8> > tmp_772_cast_fu_656_p1;
    sc_signal< sc_lv<8> > tmp_775_cast_fu_671_p1;
    sc_signal< sc_lv<8> > tmp_788_fu_734_p2;
    sc_signal< sc_lv<8> > tmp_839_cast_fu_771_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > tmp_783_fu_776_p2;
    sc_signal< sc_lv<6> > p_shl_fu_344_p3;
    sc_signal< sc_lv<7> > p_shl_cast_fu_352_p1;
    sc_signal< sc_lv<7> > i_cast_fu_328_p1;
    sc_signal< sc_lv<32> > tmp_776_cast_fu_362_p1;
    sc_signal< sc_lv<3> > tmp_792_fu_371_p1;
    sc_signal< sc_lv<3> > grp_fu_304_p4;
    sc_signal< sc_lv<7> > tmp_754_fu_398_p2;
    sc_signal< sc_lv<7> > tmp_759_fu_409_p2;
    sc_signal< sc_lv<32> > tmp_792_cast_fu_414_p1;
    sc_signal< sc_lv<7> > tmp_772_fu_423_p2;
    sc_signal< sc_lv<32> > tmp_813_cast_fu_428_p1;
    sc_signal< sc_lv<7> > tmp_757_fu_437_p2;
    sc_signal< sc_lv<1> > tmp_793_fu_447_p1;
    sc_signal< sc_lv<3> > tmp_761_fu_451_p3;
    sc_signal< sc_lv<3> > tmp_762_fu_459_p2;
    sc_signal< sc_lv<3> > tmp_799_cast_fu_470_p4;
    sc_signal< sc_lv<7> > tmp_764_fu_485_p2;
    sc_signal< sc_lv<2> > tmp_794_fu_515_p1;
    sc_signal< sc_lv<3> > tmp_774_fu_519_p3;
    sc_signal< sc_lv<3> > tmp_809_cast_fu_505_p4;
    sc_signal< sc_lv<7> > tmp_767_fu_557_p2;
    sc_signal< sc_lv<7> > tmp_770_fu_567_p2;
    sc_signal< sc_lv<7> > tmp_777_fu_585_p2;
    sc_signal< sc_lv<7> > tmp_780_fu_599_p2;
    sc_signal< sc_lv<3> > tmp_fu_609_p1;
    sc_signal< sc_lv<1> > tmp_791_fu_623_p1;
    sc_signal< sc_lv<3> > tmp_745_fu_627_p3;
    sc_signal< sc_lv<3> > tmp_746_fu_635_p2;
    sc_signal< sc_lv<3> > tmp_771_cast_fu_646_p4;
    sc_signal< sc_lv<3> > tmp_795_fu_701_p1;
    sc_signal< sc_lv<3> > tmp_77_fu_705_p1;
    sc_signal< sc_lv<8> > tmp_785_fu_709_p2;
    sc_signal< sc_lv<5> > tmp_9_fu_720_p4;
    sc_signal< sc_lv<8> > tmp_787_fu_730_p1;
    sc_signal< sc_lv<3> > tmp_832_cast_fu_714_p2;
    sc_signal< sc_lv<4> > tmp_s_fu_753_p3;
    sc_signal< sc_lv<5> > tmp_836_cast1_fu_741_p1;
    sc_signal< sc_lv<5> > tmp_838_cast_fu_761_p1;
    sc_signal< sc_lv<5> > tmp_790_fu_765_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<64> ap_const_lv64_1E;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<64> ap_const_lv64_50;
    static const sc_lv<64> ap_const_lv64_51;
    static const sc_lv<64> ap_const_lv64_1F;
    static const sc_lv<64> ap_const_lv64_52;
    static const sc_lv<64> ap_const_lv64_53;
    static const sc_lv<64> ap_const_lv64_54;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<7> ap_const_lv7_4;
    static const sc_lv<7> ap_const_lv7_5;
    static const sc_lv<7> ap_const_lv7_6;
    static const sc_lv<7> ap_const_lv7_7;
    static const sc_lv<7> ap_const_lv7_54;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_carry_cast_fu_675_p1();
    void thread_exitcond1_fu_332_p2();
    void thread_exitcond_fu_679_p2();
    void thread_grp_fu_304_p4();
    void thread_i_56_fu_685_p2();
    void thread_i_cast_fu_328_p1();
    void thread_p_shl_cast_fu_352_p1();
    void thread_p_shl_fu_344_p3();
    void thread_r_addr_4_reg_856();
    void thread_r_address0();
    void thread_r_address1();
    void thread_r_ce0();
    void thread_r_ce1();
    void thread_r_d0();
    void thread_r_d1();
    void thread_r_we0();
    void thread_r_we1();
    void thread_s_v_address0();
    void thread_s_v_address1();
    void thread_s_v_ce0();
    void thread_s_v_ce1();
    void thread_tmp_745_fu_627_p3();
    void thread_tmp_746_fu_635_p2();
    void thread_tmp_749_fu_356_p2();
    void thread_tmp_750_fu_366_p1();
    void thread_tmp_751_fu_380_p3();
    void thread_tmp_752_fu_388_p1();
    void thread_tmp_754_fu_398_p2();
    void thread_tmp_755_fu_404_p1();
    void thread_tmp_757_fu_437_p2();
    void thread_tmp_758_fu_442_p1();
    void thread_tmp_759_fu_409_p2();
    void thread_tmp_760_fu_418_p1();
    void thread_tmp_761_fu_451_p3();
    void thread_tmp_762_cast_fu_618_p1();
    void thread_tmp_762_fu_459_p2();
    void thread_tmp_764_fu_485_p2();
    void thread_tmp_765_fu_490_p1();
    void thread_tmp_767_fu_557_p2();
    void thread_tmp_768_fu_562_p1();
    void thread_tmp_769_cast_fu_641_p1();
    void thread_tmp_770_fu_567_p2();
    void thread_tmp_771_cast_fu_646_p4();
    void thread_tmp_771_fu_572_p1();
    void thread_tmp_772_cast_fu_656_p1();
    void thread_tmp_772_fu_423_p2();
    void thread_tmp_773_fu_432_p1();
    void thread_tmp_774_fu_519_p3();
    void thread_tmp_775_cast_fu_671_p1();
    void thread_tmp_775_fu_527_p2();
    void thread_tmp_776_cast_fu_362_p1();
    void thread_tmp_777_fu_585_p2();
    void thread_tmp_778_fu_590_p1();
    void thread_tmp_779_cast_fu_375_p1();
    void thread_tmp_77_fu_705_p1();
    void thread_tmp_780_fu_599_p2();
    void thread_tmp_781_fu_604_p1();
    void thread_tmp_782_fu_338_p2();
    void thread_tmp_783_fu_776_p2();
    void thread_tmp_784_cast_fu_393_p1();
    void thread_tmp_784_fu_691_p1();
    void thread_tmp_785_fu_709_p2();
    void thread_tmp_786_fu_696_p1();
    void thread_tmp_787_fu_730_p1();
    void thread_tmp_788_fu_734_p2();
    void thread_tmp_790_fu_765_p2();
    void thread_tmp_791_fu_623_p1();
    void thread_tmp_792_cast_fu_414_p1();
    void thread_tmp_792_fu_371_p1();
    void thread_tmp_793_fu_447_p1();
    void thread_tmp_794_fu_515_p1();
    void thread_tmp_795_fu_701_p1();
    void thread_tmp_796_fu_745_p3();
    void thread_tmp_797_cast_fu_465_p1();
    void thread_tmp_799_cast_fu_470_p4();
    void thread_tmp_800_cast_fu_480_p1();
    void thread_tmp_805_cast_fu_553_p1();
    void thread_tmp_809_cast_fu_505_p4();
    void thread_tmp_813_cast_fu_428_p1();
    void thread_tmp_818_cast_fu_577_p1();
    void thread_tmp_821_cast_fu_581_p1();
    void thread_tmp_826_cast_fu_595_p1();
    void thread_tmp_832_cast_fu_714_p2();
    void thread_tmp_836_cast1_fu_741_p1();
    void thread_tmp_838_cast_fu_761_p1();
    void thread_tmp_839_cast_fu_771_p1();
    void thread_tmp_9_fu_720_p4();
    void thread_tmp_cast_fu_613_p1();
    void thread_tmp_fu_609_p1();
    void thread_tmp_s_fu_753_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
