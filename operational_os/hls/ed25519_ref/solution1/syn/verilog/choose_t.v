// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module choose_t (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_x_v_address0,
        t_x_v_ce0,
        t_x_v_we0,
        t_x_v_d0,
        t_x_v_q0,
        t_x_v_address1,
        t_x_v_ce1,
        t_x_v_we1,
        t_x_v_d1,
        t_x_v_q1,
        t_y_v_address0,
        t_y_v_ce0,
        t_y_v_we0,
        t_y_v_d0,
        t_y_v_q0,
        t_y_v_address1,
        t_y_v_ce1,
        t_y_v_we1,
        t_y_v_d1,
        pos_r,
        b
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] t_x_v_address0;
output   t_x_v_ce0;
output   t_x_v_we0;
output  [31:0] t_x_v_d0;
input  [31:0] t_x_v_q0;
output  [4:0] t_x_v_address1;
output   t_x_v_ce1;
output   t_x_v_we1;
output  [31:0] t_x_v_d1;
input  [31:0] t_x_v_q1;
output  [4:0] t_y_v_address0;
output   t_y_v_ce0;
output   t_y_v_we0;
output  [31:0] t_y_v_d0;
input  [31:0] t_y_v_q0;
output  [4:0] t_y_v_address1;
output   t_y_v_ce1;
output   t_y_v_we1;
output  [31:0] t_y_v_d1;
input  [6:0] pos_r;
input  [7:0] b;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] t_x_v_address0;
reg t_x_v_ce0;
reg t_x_v_we0;
reg[31:0] t_x_v_d0;
reg[4:0] t_x_v_address1;
reg t_x_v_ce1;
reg t_x_v_we1;
reg[4:0] t_y_v_address0;
reg t_y_v_ce0;
reg t_y_v_we0;
reg[31:0] t_y_v_d0;
reg[4:0] t_y_v_address1;
reg t_y_v_ce1;
reg t_y_v_we1;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] ge25519_base_multipl_1_address0;
reg    ge25519_base_multipl_1_ce0;
wire   [31:0] ge25519_base_multipl_1_q0;
reg   [13:0] ge25519_base_multipl_1_address1;
reg    ge25519_base_multipl_1_ce1;
wire   [31:0] ge25519_base_multipl_1_q1;
reg   [13:0] ge25519_base_multipl_address0;
reg    ge25519_base_multipl_ce0;
wire   [31:0] ge25519_base_multipl_q0;
reg   [13:0] ge25519_base_multipl_address1;
reg    ge25519_base_multipl_ce1;
wire   [31:0] ge25519_base_multipl_q1;
wire   [8:0] tmp_fu_1457_p2;
reg   [8:0] tmp_reg_2240;
wire   [13:0] tmp_792_fu_1463_p3;
reg   [13:0] tmp_792_reg_2248;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire   [8:0] tmp_s_fu_1943_p2;
reg   [8:0] tmp_s_reg_2612;
wire   [0:0] tmp_856_fu_1998_p2;
reg   [0:0] tmp_856_reg_2618;
wire   [8:0] tmp_857_fu_2005_p2;
reg   [8:0] tmp_857_reg_2623;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_858_fu_2058_p2;
reg   [0:0] tmp_858_reg_2629;
wire   [8:0] tmp_859_fu_2065_p2;
reg   [8:0] tmp_859_reg_2634;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_860_fu_2118_p2;
reg   [0:0] tmp_860_reg_2640;
wire   [8:0] tmp_861_fu_2125_p2;
reg   [8:0] tmp_861_reg_2645;
wire    ap_CS_fsm_state24;
reg   [0:0] tmp_868_reg_2651;
wire   [5:0] i_fu_2162_p2;
reg   [5:0] i_reg_2659;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_i1_fu_2168_p1;
reg   [63:0] tmp_i1_reg_2664;
wire   [0:0] exitcond_i_fu_2156_p2;
wire   [5:0] i_82_fu_2179_p2;
wire    ap_CS_fsm_state28;
reg   [0:0] tmp_869_reg_2682;
wire   [0:0] exitcond_i_i_fu_2173_p2;
wire   [31:0] mask_fu_2197_p3;
reg   [31:0] mask_reg_2687;
wire    ap_CS_fsm_state29;
wire    grp_crypto_sign_ed25519_7_fu_1424_ap_done;
wire   [5:0] i_83_fu_2210_p2;
reg   [5:0] i_83_reg_2695;
wire    ap_CS_fsm_state30;
wire   [0:0] exitcond_i5_fu_2204_p2;
reg   [4:0] t_x_v_addr_33_reg_2705;
reg   [4:0] t_v_address0;
reg    t_v_ce0;
reg    t_v_we0;
wire   [31:0] t_v_q0;
reg   [4:0] v_v_address0;
reg    v_v_ce0;
reg    v_v_we0;
reg   [31:0] v_v_d0;
wire   [31:0] v_v_q0;
reg    v_v_ce1;
reg    v_v_we1;
wire   [31:0] v_v_q1;
wire    grp_crypto_sign_ed25519_7_fu_1424_ap_start;
wire    grp_crypto_sign_ed25519_7_fu_1424_ap_idle;
wire    grp_crypto_sign_ed25519_7_fu_1424_ap_ready;
wire   [4:0] grp_crypto_sign_ed25519_7_fu_1424_r_v_address0;
wire    grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0;
wire    grp_crypto_sign_ed25519_7_fu_1424_r_v_we0;
wire   [31:0] grp_crypto_sign_ed25519_7_fu_1424_r_v_d0;
wire   [4:0] grp_crypto_sign_ed25519_7_fu_1424_r_v_address1;
wire    grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1;
wire    grp_crypto_sign_ed25519_7_fu_1424_r_v_we1;
wire   [31:0] grp_crypto_sign_ed25519_7_fu_1424_r_v_d1;
wire   [4:0] grp_crypto_sign_ed25519_7_fu_1424_y_v_address0;
wire    grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0;
wire    grp_cmov_aff_fu_1430_ap_start;
wire    grp_cmov_aff_fu_1430_ap_done;
wire    grp_cmov_aff_fu_1430_ap_idle;
wire    grp_cmov_aff_fu_1430_ap_ready;
wire   [4:0] grp_cmov_aff_fu_1430_r_x_v_address0;
wire    grp_cmov_aff_fu_1430_r_x_v_ce0;
wire    grp_cmov_aff_fu_1430_r_x_v_we0;
wire   [31:0] grp_cmov_aff_fu_1430_r_x_v_d0;
wire   [4:0] grp_cmov_aff_fu_1430_r_y_v_address0;
wire    grp_cmov_aff_fu_1430_r_y_v_ce0;
wire    grp_cmov_aff_fu_1430_r_y_v_we0;
wire   [31:0] grp_cmov_aff_fu_1430_r_y_v_d0;
wire   [13:0] grp_cmov_aff_fu_1430_p_x_v_address0;
wire    grp_cmov_aff_fu_1430_p_x_v_ce0;
reg   [8:0] grp_cmov_aff_fu_1430_tmp_919;
wire   [13:0] grp_cmov_aff_fu_1430_p_y_v_address0;
wire    grp_cmov_aff_fu_1430_p_y_v_ce0;
reg   [8:0] grp_cmov_aff_fu_1430_tmp_9191;
reg   [0:0] grp_cmov_aff_fu_1430_b;
reg   [5:0] i_i_reg_1391;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
reg   [5:0] i_i_i_reg_1402;
reg   [5:0] i_i5_reg_1413;
wire    ap_CS_fsm_state31;
reg    ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start;
reg    ap_reg_grp_cmov_aff_fu_1430_ap_start;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire   [63:0] tmp_793_fu_1471_p1;
wire   [63:0] tmp_795_fu_1483_p3;
wire   [63:0] tmp_797_fu_1498_p3;
wire   [63:0] tmp_799_fu_1513_p3;
wire   [63:0] tmp_801_fu_1528_p3;
wire   [63:0] tmp_803_fu_1543_p3;
wire   [63:0] tmp_805_fu_1558_p3;
wire   [63:0] tmp_807_fu_1573_p3;
wire   [63:0] tmp_809_fu_1588_p3;
wire   [63:0] tmp_811_fu_1603_p3;
wire   [63:0] tmp_813_fu_1618_p3;
wire   [63:0] tmp_815_fu_1633_p3;
wire   [63:0] tmp_817_fu_1648_p3;
wire   [63:0] tmp_819_fu_1663_p3;
wire   [63:0] tmp_821_fu_1678_p3;
wire   [63:0] tmp_823_fu_1693_p3;
wire   [63:0] tmp_825_fu_1708_p3;
wire   [63:0] tmp_827_fu_1723_p3;
wire   [63:0] tmp_829_fu_1738_p3;
wire   [63:0] tmp_831_fu_1753_p3;
wire   [63:0] tmp_833_fu_1768_p3;
wire   [63:0] tmp_835_fu_1783_p3;
wire   [63:0] tmp_837_fu_1798_p3;
wire   [63:0] tmp_839_fu_1813_p3;
wire   [63:0] tmp_841_fu_1828_p3;
wire   [63:0] tmp_843_fu_1843_p3;
wire   [63:0] tmp_845_fu_1858_p3;
wire   [63:0] tmp_847_fu_1873_p3;
wire   [63:0] tmp_849_fu_1888_p3;
wire   [63:0] tmp_851_fu_1903_p3;
wire   [63:0] tmp_853_fu_1918_p3;
wire   [63:0] tmp_855_fu_1933_p3;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_i_i_fu_2185_p1;
wire   [63:0] tmp_i_fu_2216_p1;
wire   [31:0] tmp_896_i_fu_2233_p2;
wire   [8:0] p_shl_fu_1449_p3;
wire   [8:0] pos_cast4_fu_1445_p1;
wire   [13:0] tmp_794_fu_1477_p2;
wire   [13:0] tmp_796_fu_1493_p2;
wire   [13:0] tmp_798_fu_1508_p2;
wire   [13:0] tmp_800_fu_1523_p2;
wire   [13:0] tmp_802_fu_1538_p2;
wire   [13:0] tmp_804_fu_1553_p2;
wire   [13:0] tmp_806_fu_1568_p2;
wire   [13:0] tmp_808_fu_1583_p2;
wire   [13:0] tmp_810_fu_1598_p2;
wire   [13:0] tmp_812_fu_1613_p2;
wire   [13:0] tmp_814_fu_1628_p2;
wire   [13:0] tmp_816_fu_1643_p2;
wire   [13:0] tmp_818_fu_1658_p2;
wire   [13:0] tmp_820_fu_1673_p2;
wire   [13:0] tmp_822_fu_1688_p2;
wire   [13:0] tmp_824_fu_1703_p2;
wire   [13:0] tmp_826_fu_1718_p2;
wire   [13:0] tmp_828_fu_1733_p2;
wire   [13:0] tmp_830_fu_1748_p2;
wire   [13:0] tmp_832_fu_1763_p2;
wire   [13:0] tmp_834_fu_1778_p2;
wire   [13:0] tmp_836_fu_1793_p2;
wire   [13:0] tmp_838_fu_1808_p2;
wire   [13:0] tmp_840_fu_1823_p2;
wire   [13:0] tmp_842_fu_1838_p2;
wire   [13:0] tmp_844_fu_1853_p2;
wire   [13:0] tmp_846_fu_1868_p2;
wire   [13:0] tmp_848_fu_1883_p2;
wire   [13:0] tmp_850_fu_1898_p2;
wire   [13:0] tmp_852_fu_1913_p2;
wire   [13:0] tmp_854_fu_1928_p2;
wire   [7:0] x_fu_1950_p2;
wire   [8:0] y_cast_fu_1956_p1;
wire   [8:0] y_fu_1960_p2;
wire   [7:0] x_8_fu_1974_p2;
wire   [8:0] y_3_cast_fu_1980_p1;
wire   [8:0] y_1_fu_1984_p2;
wire   [0:0] tmp_863_fu_1990_p3;
wire   [0:0] tmp_862_fu_1966_p3;
wire   [7:0] x_9_fu_2012_p2;
wire   [8:0] y_6_cast_fu_2017_p1;
wire   [8:0] y_2_fu_2021_p2;
wire   [7:0] x_10_fu_2035_p2;
wire   [8:0] y_9_cast_fu_2040_p1;
wire   [8:0] y_3_fu_2044_p2;
wire   [0:0] tmp_865_fu_2050_p3;
wire   [0:0] tmp_864_fu_2027_p3;
wire   [7:0] x_11_fu_2072_p2;
wire   [8:0] y_12_cast_fu_2077_p1;
wire   [8:0] y_4_fu_2081_p2;
wire   [7:0] x_12_fu_2095_p2;
wire   [8:0] y_15_cast_fu_2100_p1;
wire   [8:0] y_5_fu_2104_p2;
wire   [0:0] tmp_867_fu_2110_p3;
wire   [0:0] tmp_866_fu_2087_p3;
wire   [7:0] x_13_fu_2132_p2;
wire   [8:0] y_18_cast_fu_2137_p1;
wire   [8:0] y_6_fu_2141_p2;
wire   [31:0] tmp_894_i_fu_2222_p2;
wire   [31:0] tmp_895_i_fu_2228_p2;
reg   [30:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start = 1'b0;
#0 ap_reg_grp_cmov_aff_fu_1430_ap_start = 1'b0;
end

choose_t_ge25519_qcK #(
    .DataWidth( 32 ),
    .AddressRange( 13600 ),
    .AddressWidth( 14 ))
ge25519_base_multipl_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ge25519_base_multipl_1_address0),
    .ce0(ge25519_base_multipl_1_ce0),
    .q0(ge25519_base_multipl_1_q0),
    .address1(ge25519_base_multipl_1_address1),
    .ce1(ge25519_base_multipl_1_ce1),
    .q1(ge25519_base_multipl_1_q1)
);

choose_t_ge25519_rcU #(
    .DataWidth( 32 ),
    .AddressRange( 13600 ),
    .AddressWidth( 14 ))
ge25519_base_multipl_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ge25519_base_multipl_address0),
    .ce0(ge25519_base_multipl_ce0),
    .q0(ge25519_base_multipl_q0),
    .address1(ge25519_base_multipl_address1),
    .ce1(ge25519_base_multipl_ce1),
    .q1(ge25519_base_multipl_q1)
);

choose_t_t_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
t_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_v_address0),
    .ce0(t_v_ce0),
    .we0(t_v_we0),
    .d0(t_x_v_q0),
    .q0(t_v_q0)
);

choose_t_v_v #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
v_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_v_address0),
    .ce0(v_v_ce0),
    .we0(v_v_we0),
    .d0(v_v_d0),
    .q0(v_v_q0),
    .address1(grp_crypto_sign_ed25519_7_fu_1424_r_v_address1),
    .ce1(v_v_ce1),
    .we1(v_v_we1),
    .d1(grp_crypto_sign_ed25519_7_fu_1424_r_v_d1),
    .q1(v_v_q1)
);

crypto_sign_ed25519_7 grp_crypto_sign_ed25519_7_fu_1424(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sign_ed25519_7_fu_1424_ap_start),
    .ap_done(grp_crypto_sign_ed25519_7_fu_1424_ap_done),
    .ap_idle(grp_crypto_sign_ed25519_7_fu_1424_ap_idle),
    .ap_ready(grp_crypto_sign_ed25519_7_fu_1424_ap_ready),
    .r_v_address0(grp_crypto_sign_ed25519_7_fu_1424_r_v_address0),
    .r_v_ce0(grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0),
    .r_v_we0(grp_crypto_sign_ed25519_7_fu_1424_r_v_we0),
    .r_v_d0(grp_crypto_sign_ed25519_7_fu_1424_r_v_d0),
    .r_v_q0(v_v_q0),
    .r_v_address1(grp_crypto_sign_ed25519_7_fu_1424_r_v_address1),
    .r_v_ce1(grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1),
    .r_v_we1(grp_crypto_sign_ed25519_7_fu_1424_r_v_we1),
    .r_v_d1(grp_crypto_sign_ed25519_7_fu_1424_r_v_d1),
    .r_v_q1(v_v_q1),
    .y_v_address0(grp_crypto_sign_ed25519_7_fu_1424_y_v_address0),
    .y_v_ce0(grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0),
    .y_v_q0(t_v_q0)
);

cmov_aff grp_cmov_aff_fu_1430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cmov_aff_fu_1430_ap_start),
    .ap_done(grp_cmov_aff_fu_1430_ap_done),
    .ap_idle(grp_cmov_aff_fu_1430_ap_idle),
    .ap_ready(grp_cmov_aff_fu_1430_ap_ready),
    .r_x_v_address0(grp_cmov_aff_fu_1430_r_x_v_address0),
    .r_x_v_ce0(grp_cmov_aff_fu_1430_r_x_v_ce0),
    .r_x_v_we0(grp_cmov_aff_fu_1430_r_x_v_we0),
    .r_x_v_d0(grp_cmov_aff_fu_1430_r_x_v_d0),
    .r_x_v_q0(t_x_v_q0),
    .r_y_v_address0(grp_cmov_aff_fu_1430_r_y_v_address0),
    .r_y_v_ce0(grp_cmov_aff_fu_1430_r_y_v_ce0),
    .r_y_v_we0(grp_cmov_aff_fu_1430_r_y_v_we0),
    .r_y_v_d0(grp_cmov_aff_fu_1430_r_y_v_d0),
    .r_y_v_q0(t_y_v_q0),
    .p_x_v_address0(grp_cmov_aff_fu_1430_p_x_v_address0),
    .p_x_v_ce0(grp_cmov_aff_fu_1430_p_x_v_ce0),
    .p_x_v_q0(ge25519_base_multipl_1_q0),
    .tmp_919(grp_cmov_aff_fu_1430_tmp_919),
    .p_y_v_address0(grp_cmov_aff_fu_1430_p_y_v_address0),
    .p_y_v_ce0(grp_cmov_aff_fu_1430_p_y_v_ce0),
    .p_y_v_q0(ge25519_base_multipl_q0),
    .tmp_9191(grp_cmov_aff_fu_1430_tmp_9191),
    .b(grp_cmov_aff_fu_1430_b)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_cmov_aff_fu_1430_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
            ap_reg_grp_cmov_aff_fu_1430_ap_start <= 1'b1;
        end else if ((1'b1 == grp_cmov_aff_fu_1430_ap_ready)) begin
            ap_reg_grp_cmov_aff_fu_1430_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i_i_fu_2173_p2 == 1'd1))) begin
            ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start <= 1'b1;
        end else if ((1'b1 == grp_crypto_sign_ed25519_7_fu_1424_ap_ready)) begin
            ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_i5_reg_1413 <= i_83_reg_2695;
    end else if (((1'b1 == ap_CS_fsm_state29) & (grp_crypto_sign_ed25519_7_fu_1424_ap_done == 1'b1))) begin
        i_i5_reg_1413 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i_fu_2156_p2 == 1'd1))) begin
        i_i_i_reg_1402 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond_i_i_fu_2173_p2))) begin
        i_i_i_reg_1402 <= i_82_fu_2179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_i_reg_1391 <= i_reg_2659;
    end else if (((1'b1 == ap_CS_fsm_state25) & (grp_cmov_aff_fu_1430_ap_done == 1'b1))) begin
        i_i_reg_1391 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_83_reg_2695 <= i_83_fu_2210_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_reg_2659 <= i_fu_2162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (grp_crypto_sign_ed25519_7_fu_1424_ap_done == 1'b1))) begin
        mask_reg_2687 <= mask_fu_2197_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond_i5_fu_2204_p2))) begin
        t_x_v_addr_33_reg_2705 <= tmp_i_fu_2216_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_792_reg_2248[13 : 5] <= tmp_792_fu_1463_p3[13 : 5];
        tmp_reg_2240 <= tmp_fu_1457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_856_reg_2618 <= tmp_856_fu_1998_p2;
        tmp_s_reg_2612 <= tmp_s_fu_1943_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_857_reg_2623 <= tmp_857_fu_2005_p2;
        tmp_858_reg_2629 <= tmp_858_fu_2058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_859_reg_2634 <= tmp_859_fu_2065_p2;
        tmp_860_reg_2640 <= tmp_860_fu_2118_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_861_reg_2645 <= tmp_861_fu_2125_p2;
        tmp_868_reg_2651 <= y_6_fu_2141_p2[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i_i_fu_2173_p2 == 1'd1))) begin
        tmp_869_reg_2682 <= b[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i_fu_2156_p2 == 1'd0))) begin
        tmp_i1_reg_2664[5 : 0] <= tmp_i1_fu_2168_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_i5_fu_2204_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_i5_fu_2204_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ge25519_base_multipl_1_address0 = tmp_853_fu_1918_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        ge25519_base_multipl_1_address0 = tmp_849_fu_1888_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ge25519_base_multipl_1_address0 = tmp_845_fu_1858_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ge25519_base_multipl_1_address0 = tmp_841_fu_1828_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ge25519_base_multipl_1_address0 = tmp_837_fu_1798_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ge25519_base_multipl_1_address0 = tmp_833_fu_1768_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ge25519_base_multipl_1_address0 = tmp_829_fu_1738_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ge25519_base_multipl_1_address0 = tmp_825_fu_1708_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ge25519_base_multipl_1_address0 = tmp_821_fu_1678_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ge25519_base_multipl_1_address0 = tmp_817_fu_1648_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ge25519_base_multipl_1_address0 = tmp_813_fu_1618_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ge25519_base_multipl_1_address0 = tmp_809_fu_1588_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ge25519_base_multipl_1_address0 = tmp_805_fu_1558_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ge25519_base_multipl_1_address0 = tmp_801_fu_1528_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ge25519_base_multipl_1_address0 = tmp_797_fu_1498_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ge25519_base_multipl_1_address0 = tmp_793_fu_1471_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ge25519_base_multipl_1_address0 = grp_cmov_aff_fu_1430_p_x_v_address0;
    end else begin
        ge25519_base_multipl_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ge25519_base_multipl_1_address1 = tmp_855_fu_1933_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        ge25519_base_multipl_1_address1 = tmp_851_fu_1903_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ge25519_base_multipl_1_address1 = tmp_847_fu_1873_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ge25519_base_multipl_1_address1 = tmp_843_fu_1843_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ge25519_base_multipl_1_address1 = tmp_839_fu_1813_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ge25519_base_multipl_1_address1 = tmp_835_fu_1783_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ge25519_base_multipl_1_address1 = tmp_831_fu_1753_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ge25519_base_multipl_1_address1 = tmp_827_fu_1723_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ge25519_base_multipl_1_address1 = tmp_823_fu_1693_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ge25519_base_multipl_1_address1 = tmp_819_fu_1663_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ge25519_base_multipl_1_address1 = tmp_815_fu_1633_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ge25519_base_multipl_1_address1 = tmp_811_fu_1603_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ge25519_base_multipl_1_address1 = tmp_807_fu_1573_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ge25519_base_multipl_1_address1 = tmp_803_fu_1543_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ge25519_base_multipl_1_address1 = tmp_799_fu_1513_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ge25519_base_multipl_1_address1 = tmp_795_fu_1483_p3;
    end else begin
        ge25519_base_multipl_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16))) begin
        ge25519_base_multipl_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ge25519_base_multipl_1_ce0 = grp_cmov_aff_fu_1430_p_x_v_ce0;
    end else begin
        ge25519_base_multipl_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16))) begin
        ge25519_base_multipl_1_ce1 = 1'b1;
    end else begin
        ge25519_base_multipl_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ge25519_base_multipl_address0 = tmp_853_fu_1918_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        ge25519_base_multipl_address0 = tmp_849_fu_1888_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ge25519_base_multipl_address0 = tmp_845_fu_1858_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ge25519_base_multipl_address0 = tmp_841_fu_1828_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ge25519_base_multipl_address0 = tmp_837_fu_1798_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ge25519_base_multipl_address0 = tmp_833_fu_1768_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ge25519_base_multipl_address0 = tmp_829_fu_1738_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ge25519_base_multipl_address0 = tmp_825_fu_1708_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ge25519_base_multipl_address0 = tmp_821_fu_1678_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ge25519_base_multipl_address0 = tmp_817_fu_1648_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ge25519_base_multipl_address0 = tmp_813_fu_1618_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ge25519_base_multipl_address0 = tmp_809_fu_1588_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ge25519_base_multipl_address0 = tmp_805_fu_1558_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ge25519_base_multipl_address0 = tmp_801_fu_1528_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ge25519_base_multipl_address0 = tmp_797_fu_1498_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ge25519_base_multipl_address0 = tmp_793_fu_1471_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ge25519_base_multipl_address0 = grp_cmov_aff_fu_1430_p_y_v_address0;
    end else begin
        ge25519_base_multipl_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ge25519_base_multipl_address1 = tmp_855_fu_1933_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        ge25519_base_multipl_address1 = tmp_851_fu_1903_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ge25519_base_multipl_address1 = tmp_847_fu_1873_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ge25519_base_multipl_address1 = tmp_843_fu_1843_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ge25519_base_multipl_address1 = tmp_839_fu_1813_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        ge25519_base_multipl_address1 = tmp_835_fu_1783_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ge25519_base_multipl_address1 = tmp_831_fu_1753_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ge25519_base_multipl_address1 = tmp_827_fu_1723_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ge25519_base_multipl_address1 = tmp_823_fu_1693_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ge25519_base_multipl_address1 = tmp_819_fu_1663_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ge25519_base_multipl_address1 = tmp_815_fu_1633_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ge25519_base_multipl_address1 = tmp_811_fu_1603_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ge25519_base_multipl_address1 = tmp_807_fu_1573_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ge25519_base_multipl_address1 = tmp_803_fu_1543_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ge25519_base_multipl_address1 = tmp_799_fu_1513_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ge25519_base_multipl_address1 = tmp_795_fu_1483_p3;
    end else begin
        ge25519_base_multipl_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16))) begin
        ge25519_base_multipl_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ge25519_base_multipl_ce0 = grp_cmov_aff_fu_1430_p_y_v_ce0;
    end else begin
        ge25519_base_multipl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16))) begin
        ge25519_base_multipl_ce1 = 1'b1;
    end else begin
        ge25519_base_multipl_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_cmov_aff_fu_1430_b = tmp_868_reg_2651;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_cmov_aff_fu_1430_b = tmp_860_reg_2640;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_cmov_aff_fu_1430_b = tmp_858_reg_2629;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_cmov_aff_fu_1430_b = tmp_856_reg_2618;
    end else begin
        grp_cmov_aff_fu_1430_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_cmov_aff_fu_1430_tmp_919 = tmp_861_reg_2645;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_cmov_aff_fu_1430_tmp_919 = tmp_859_reg_2634;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_cmov_aff_fu_1430_tmp_919 = tmp_857_reg_2623;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_cmov_aff_fu_1430_tmp_919 = tmp_s_reg_2612;
    end else begin
        grp_cmov_aff_fu_1430_tmp_919 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_861_reg_2645;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_859_reg_2634;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_857_reg_2623;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_s_reg_2612;
    end else begin
        grp_cmov_aff_fu_1430_tmp_9191 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        t_v_address0 = tmp_i1_reg_2664;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_v_address0 = grp_crypto_sign_ed25519_7_fu_1424_y_v_address0;
    end else begin
        t_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        t_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_v_ce0 = grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0;
    end else begin
        t_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        t_v_we0 = 1'b1;
    end else begin
        t_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        t_x_v_address0 = t_x_v_addr_33_reg_2705;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        t_x_v_address0 = tmp_i1_fu_2168_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t_x_v_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_x_v_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_x_v_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_x_v_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_x_v_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_x_v_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_x_v_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_x_v_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_x_v_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_x_v_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_x_v_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_x_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_x_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_x_v_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_x_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_x_v_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_x_v_address0 = grp_cmov_aff_fu_1430_r_x_v_address0;
    end else begin
        t_x_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        t_x_v_address1 = tmp_i_fu_2216_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t_x_v_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_x_v_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_x_v_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_x_v_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_x_v_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_x_v_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_x_v_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_x_v_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_x_v_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_x_v_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_x_v_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_x_v_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_x_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_x_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_x_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_x_v_address1 = 64'd1;
    end else begin
        t_x_v_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        t_x_v_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_x_v_ce0 = grp_cmov_aff_fu_1430_r_x_v_ce0;
    end else begin
        t_x_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        t_x_v_ce1 = 1'b1;
    end else begin
        t_x_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        t_x_v_d0 = tmp_896_i_fu_2233_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_x_v_d0 = ge25519_base_multipl_1_q0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_x_v_d0 = grp_cmov_aff_fu_1430_r_x_v_d0;
    end else begin
        t_x_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        t_x_v_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_x_v_we0 = grp_cmov_aff_fu_1430_r_x_v_we0;
    end else begin
        t_x_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_x_v_we1 = 1'b1;
    end else begin
        t_x_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_y_v_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_y_v_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_y_v_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_y_v_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_y_v_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_y_v_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_y_v_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_y_v_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_y_v_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_y_v_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_y_v_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_y_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_y_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_y_v_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_y_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_y_v_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_y_v_address0 = grp_cmov_aff_fu_1430_r_y_v_address0;
    end else begin
        t_y_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_y_v_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_y_v_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_y_v_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_y_v_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_y_v_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_y_v_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_y_v_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_y_v_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_y_v_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_y_v_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_y_v_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_y_v_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_y_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_y_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_y_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_y_v_address1 = 64'd1;
    end else begin
        t_y_v_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_y_v_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_y_v_ce0 = grp_cmov_aff_fu_1430_r_y_v_ce0;
    end else begin
        t_y_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_y_v_ce1 = 1'b1;
    end else begin
        t_y_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_y_v_d0 = ge25519_base_multipl_q0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_y_v_d0 = grp_cmov_aff_fu_1430_r_y_v_d0;
    end else begin
        t_y_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_y_v_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        t_y_v_we0 = grp_cmov_aff_fu_1430_r_y_v_we0;
    end else begin
        t_y_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17))) begin
        t_y_v_we1 = 1'b1;
    end else begin
        t_y_v_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        v_v_address0 = tmp_i_fu_2216_p1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond_i_i_fu_2173_p2))) begin
        v_v_address0 = tmp_i_i_fu_2185_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_v_address0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_address0;
    end else begin
        v_v_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond_i_i_fu_2173_p2)))) begin
        v_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_v_ce0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0;
    end else begin
        v_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        v_v_ce1 = grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1;
    end else begin
        v_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond_i_i_fu_2173_p2))) begin
        v_v_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_v_d0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_d0;
    end else begin
        v_v_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond_i_i_fu_2173_p2))) begin
        v_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_v_we0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_we0;
    end else begin
        v_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        v_v_we1 = grp_crypto_sign_ed25519_7_fu_1424_r_v_we1;
    end else begin
        v_v_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_cmov_aff_fu_1430_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_cmov_aff_fu_1430_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_cmov_aff_fu_1430_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_cmov_aff_fu_1430_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i_fu_2156_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond_i_i_fu_2173_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (grp_crypto_sign_ed25519_7_fu_1424_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_i5_fu_2204_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_i5_fu_2204_p2 = ((i_i5_reg_1413 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond_i_fu_2156_p2 = ((i_i_reg_1391 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_2173_p2 = ((i_i_i_reg_1402 == 6'd32) ? 1'b1 : 1'b0);

assign grp_cmov_aff_fu_1430_ap_start = ap_reg_grp_cmov_aff_fu_1430_ap_start;

assign grp_crypto_sign_ed25519_7_fu_1424_ap_start = ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start;

assign i_82_fu_2179_p2 = (i_i_i_reg_1402 + 6'd1);

assign i_83_fu_2210_p2 = (i_i5_reg_1413 + 6'd1);

assign i_fu_2162_p2 = (i_i_reg_1391 + 6'd1);

assign mask_fu_2197_p3 = ((tmp_869_reg_2682[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_shl_fu_1449_p3 = {{pos_r}, {2'd0}};

assign pos_cast4_fu_1445_p1 = pos_r;

assign t_x_v_d1 = ge25519_base_multipl_1_q1;

assign t_y_v_d1 = ge25519_base_multipl_q1;

assign tmp_792_fu_1463_p3 = {{tmp_fu_1457_p2}, {5'd0}};

assign tmp_793_fu_1471_p1 = tmp_792_fu_1463_p3;

assign tmp_794_fu_1477_p2 = (tmp_792_fu_1463_p3 | 14'd1);

assign tmp_795_fu_1483_p3 = {{50'd0}, {tmp_794_fu_1477_p2}};

assign tmp_796_fu_1493_p2 = (tmp_792_reg_2248 | 14'd2);

assign tmp_797_fu_1498_p3 = {{50'd0}, {tmp_796_fu_1493_p2}};

assign tmp_798_fu_1508_p2 = (tmp_792_reg_2248 | 14'd3);

assign tmp_799_fu_1513_p3 = {{50'd0}, {tmp_798_fu_1508_p2}};

assign tmp_800_fu_1523_p2 = (tmp_792_reg_2248 | 14'd4);

assign tmp_801_fu_1528_p3 = {{50'd0}, {tmp_800_fu_1523_p2}};

assign tmp_802_fu_1538_p2 = (tmp_792_reg_2248 | 14'd5);

assign tmp_803_fu_1543_p3 = {{50'd0}, {tmp_802_fu_1538_p2}};

assign tmp_804_fu_1553_p2 = (tmp_792_reg_2248 | 14'd6);

assign tmp_805_fu_1558_p3 = {{50'd0}, {tmp_804_fu_1553_p2}};

assign tmp_806_fu_1568_p2 = (tmp_792_reg_2248 | 14'd7);

assign tmp_807_fu_1573_p3 = {{50'd0}, {tmp_806_fu_1568_p2}};

assign tmp_808_fu_1583_p2 = (tmp_792_reg_2248 | 14'd8);

assign tmp_809_fu_1588_p3 = {{50'd0}, {tmp_808_fu_1583_p2}};

assign tmp_810_fu_1598_p2 = (tmp_792_reg_2248 | 14'd9);

assign tmp_811_fu_1603_p3 = {{50'd0}, {tmp_810_fu_1598_p2}};

assign tmp_812_fu_1613_p2 = (tmp_792_reg_2248 | 14'd10);

assign tmp_813_fu_1618_p3 = {{50'd0}, {tmp_812_fu_1613_p2}};

assign tmp_814_fu_1628_p2 = (tmp_792_reg_2248 | 14'd11);

assign tmp_815_fu_1633_p3 = {{50'd0}, {tmp_814_fu_1628_p2}};

assign tmp_816_fu_1643_p2 = (tmp_792_reg_2248 | 14'd12);

assign tmp_817_fu_1648_p3 = {{50'd0}, {tmp_816_fu_1643_p2}};

assign tmp_818_fu_1658_p2 = (tmp_792_reg_2248 | 14'd13);

assign tmp_819_fu_1663_p3 = {{50'd0}, {tmp_818_fu_1658_p2}};

assign tmp_820_fu_1673_p2 = (tmp_792_reg_2248 | 14'd14);

assign tmp_821_fu_1678_p3 = {{50'd0}, {tmp_820_fu_1673_p2}};

assign tmp_822_fu_1688_p2 = (tmp_792_reg_2248 | 14'd15);

assign tmp_823_fu_1693_p3 = {{50'd0}, {tmp_822_fu_1688_p2}};

assign tmp_824_fu_1703_p2 = (tmp_792_reg_2248 | 14'd16);

assign tmp_825_fu_1708_p3 = {{50'd0}, {tmp_824_fu_1703_p2}};

assign tmp_826_fu_1718_p2 = (tmp_792_reg_2248 | 14'd17);

assign tmp_827_fu_1723_p3 = {{50'd0}, {tmp_826_fu_1718_p2}};

assign tmp_828_fu_1733_p2 = (tmp_792_reg_2248 | 14'd18);

assign tmp_829_fu_1738_p3 = {{50'd0}, {tmp_828_fu_1733_p2}};

assign tmp_830_fu_1748_p2 = (tmp_792_reg_2248 | 14'd19);

assign tmp_831_fu_1753_p3 = {{50'd0}, {tmp_830_fu_1748_p2}};

assign tmp_832_fu_1763_p2 = (tmp_792_reg_2248 | 14'd20);

assign tmp_833_fu_1768_p3 = {{50'd0}, {tmp_832_fu_1763_p2}};

assign tmp_834_fu_1778_p2 = (tmp_792_reg_2248 | 14'd21);

assign tmp_835_fu_1783_p3 = {{50'd0}, {tmp_834_fu_1778_p2}};

assign tmp_836_fu_1793_p2 = (tmp_792_reg_2248 | 14'd22);

assign tmp_837_fu_1798_p3 = {{50'd0}, {tmp_836_fu_1793_p2}};

assign tmp_838_fu_1808_p2 = (tmp_792_reg_2248 | 14'd23);

assign tmp_839_fu_1813_p3 = {{50'd0}, {tmp_838_fu_1808_p2}};

assign tmp_840_fu_1823_p2 = (tmp_792_reg_2248 | 14'd24);

assign tmp_841_fu_1828_p3 = {{50'd0}, {tmp_840_fu_1823_p2}};

assign tmp_842_fu_1838_p2 = (tmp_792_reg_2248 | 14'd25);

assign tmp_843_fu_1843_p3 = {{50'd0}, {tmp_842_fu_1838_p2}};

assign tmp_844_fu_1853_p2 = (tmp_792_reg_2248 | 14'd26);

assign tmp_845_fu_1858_p3 = {{50'd0}, {tmp_844_fu_1853_p2}};

assign tmp_846_fu_1868_p2 = (tmp_792_reg_2248 | 14'd27);

assign tmp_847_fu_1873_p3 = {{50'd0}, {tmp_846_fu_1868_p2}};

assign tmp_848_fu_1883_p2 = (tmp_792_reg_2248 | 14'd28);

assign tmp_849_fu_1888_p3 = {{50'd0}, {tmp_848_fu_1883_p2}};

assign tmp_850_fu_1898_p2 = (tmp_792_reg_2248 | 14'd29);

assign tmp_851_fu_1903_p3 = {{50'd0}, {tmp_850_fu_1898_p2}};

assign tmp_852_fu_1913_p2 = (tmp_792_reg_2248 | 14'd30);

assign tmp_853_fu_1918_p3 = {{50'd0}, {tmp_852_fu_1913_p2}};

assign tmp_854_fu_1928_p2 = (tmp_792_reg_2248 | 14'd31);

assign tmp_855_fu_1933_p3 = {{50'd0}, {tmp_854_fu_1928_p2}};

assign tmp_856_fu_1998_p2 = (tmp_863_fu_1990_p3 | tmp_862_fu_1966_p3);

assign tmp_857_fu_2005_p2 = (tmp_reg_2240 + 9'd2);

assign tmp_858_fu_2058_p2 = (tmp_865_fu_2050_p3 | tmp_864_fu_2027_p3);

assign tmp_859_fu_2065_p2 = (tmp_reg_2240 + 9'd3);

assign tmp_860_fu_2118_p2 = (tmp_867_fu_2110_p3 | tmp_866_fu_2087_p3);

assign tmp_861_fu_2125_p2 = (tmp_reg_2240 + 9'd4);

assign tmp_862_fu_1966_p3 = y_fu_1960_p2[32'd8];

assign tmp_863_fu_1990_p3 = y_1_fu_1984_p2[32'd8];

assign tmp_864_fu_2027_p3 = y_2_fu_2021_p2[32'd8];

assign tmp_865_fu_2050_p3 = y_3_fu_2044_p2[32'd8];

assign tmp_866_fu_2087_p3 = y_4_fu_2081_p2[32'd8];

assign tmp_867_fu_2110_p3 = y_5_fu_2104_p2[32'd8];

assign tmp_894_i_fu_2222_p2 = (t_x_v_q1 ^ v_v_q0);

assign tmp_895_i_fu_2228_p2 = (tmp_894_i_fu_2222_p2 & mask_reg_2687);

assign tmp_896_i_fu_2233_p2 = (t_x_v_q1 ^ tmp_895_i_fu_2228_p2);

assign tmp_fu_1457_p2 = (p_shl_fu_1449_p3 + pos_cast4_fu_1445_p1);

assign tmp_i1_fu_2168_p1 = i_i_reg_1391;

assign tmp_i_fu_2216_p1 = i_i5_reg_1413;

assign tmp_i_i_fu_2185_p1 = i_i_i_reg_1402;

assign tmp_s_fu_1943_p2 = (tmp_reg_2240 + 9'd1);

assign x_10_fu_2035_p2 = (b ^ 8'd254);

assign x_11_fu_2072_p2 = (b ^ 8'd3);

assign x_12_fu_2095_p2 = (b ^ 8'd253);

assign x_13_fu_2132_p2 = (b ^ 8'd252);

assign x_8_fu_1974_p2 = (b ^ 8'd255);

assign x_9_fu_2012_p2 = (b ^ 8'd2);

assign x_fu_1950_p2 = (b ^ 8'd1);

assign y_12_cast_fu_2077_p1 = x_11_fu_2072_p2;

assign y_15_cast_fu_2100_p1 = x_12_fu_2095_p2;

assign y_18_cast_fu_2137_p1 = x_13_fu_2132_p2;

assign y_1_fu_1984_p2 = ($signed(y_3_cast_fu_1980_p1) + $signed(9'd511));

assign y_2_fu_2021_p2 = ($signed(y_6_cast_fu_2017_p1) + $signed(9'd511));

assign y_3_cast_fu_1980_p1 = x_8_fu_1974_p2;

assign y_3_fu_2044_p2 = ($signed(y_9_cast_fu_2040_p1) + $signed(9'd511));

assign y_4_fu_2081_p2 = ($signed(y_12_cast_fu_2077_p1) + $signed(9'd511));

assign y_5_fu_2104_p2 = ($signed(y_15_cast_fu_2100_p1) + $signed(9'd511));

assign y_6_cast_fu_2017_p1 = x_9_fu_2012_p2;

assign y_6_fu_2141_p2 = ($signed(y_18_cast_fu_2137_p1) + $signed(9'd511));

assign y_9_cast_fu_2040_p1 = x_10_fu_2035_p2;

assign y_cast_fu_1956_p1 = x_fu_1950_p2;

assign y_fu_1960_p2 = ($signed(y_cast_fu_1956_p1) + $signed(9'd511));

always @ (posedge ap_clk) begin
    tmp_792_reg_2248[4:0] <= 5'b00000;
    tmp_i1_reg_2664[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //choose_t
