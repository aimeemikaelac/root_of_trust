

================================================================
== Vivado HLS Report for 'sha512_update_128'
================================================================
* Date:           Fri Jun  2 12:27:10 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      2.77|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|         3|          -|          -|     ?|    no    |
        | + Loop 1.2  |  256|  256|         2|          -|          -|   128|    no    |
        | + Loop 1.3  |  256|  256|         2|          -|          -|   128|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp & !tmp_s)
3 --> 
	4  / true
4 --> 
	5  / (!or_cond)
	16  / (or_cond)
5 --> 
	6  / true
6 --> 
	7  / (!exitcond3)
	9  / (exitcond3)
7 --> 
	8  / true
8 --> 
	6  / true
9 --> 
	15  / (!tmp_17)
	10  / (tmp_17)
10 --> 
	11  / (!exitcond2)
	12  / (exitcond2)
11 --> 
	10  / true
12 --> 
	13  / true
13 --> 
	14  / (!exitcond)
	15  / (exitcond)
14 --> 
	13  / true
15 --> 
	17  / true
16 --> 
	17  / true
17 --> 
	2  / true
* FSM state operations: 

 <State 1>: 0.67ns
ST_1: temp_buf (7)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:254
:0  %temp_buf = alloca [128 x i8], align 16

ST_1: StgValue_19 (8)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:242
:1  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str44, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_20 (9)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:243
:2  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str246, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_21 (10)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:244
:3  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str347, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_22 (11)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:245
:4  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str448, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_23 (12)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:246
:5  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str549, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_24 (13)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:247
:6  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str650, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_25 (14)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:248
:7  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str751, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: md_curlen_read (15)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:257
:8  %md_curlen_read = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_1: tmp (16)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:257
:9  %tmp = icmp ugt i64 %md_curlen_read, 128

ST_1: StgValue_28 (17)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:257
:10  br i1 %tmp, label %.loopexit, label %.backedge.preheader

ST_1: inlen (19)  [1/1] 0.00ns
.backedge.preheader:0  %inlen = alloca i64

ST_1: StgValue_30 (20)  [1/1] 0.67ns
.backedge.preheader:1  store i64 128, i64* %inlen

ST_1: StgValue_31 (21)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:260
.backedge.preheader:2  br label %.backedge


 <State 2>: 0.64ns
ST_2: p_01_idx (23)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:277
.backedge:0  %p_01_idx = phi i64 [ %p_01_idx_be, %.backedge.backedge ], [ 0, %.backedge.preheader ]

ST_2: inlen_load (24)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:267
.backedge:1  %inlen_load = load i64* %inlen

ST_2: tmp_s (25)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:260
.backedge:2  %tmp_s = icmp eq i64 %inlen_load, 0

ST_2: StgValue_35 (26)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:260
.backedge:3  br i1 %tmp_s, label %.loopexit.loopexit, label %1

ST_2: StgValue_36 (118)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit

ST_2: StgValue_37 (120)  [1/1] 0.00ns
.loopexit:0  ret void


 <State 3>: 0.64ns
ST_3: md_curlen_read_10 (28)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:261
:0  %md_curlen_read_10 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_3: tmp_12 (29)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:261
:1  %tmp_12 = icmp eq i64 %md_curlen_read_10, 0


 <State 4>: 1.41ns
ST_4: tmp_26 (30)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:261
:2  %tmp_26 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %inlen_load, i32 7, i32 63)

ST_4: icmp (31)  [1/1] 0.80ns  loc: ed25519/src/sha512.cpp:261
:3  %icmp = icmp ne i57 %tmp_26, 0

ST_4: or_cond (32)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:261
:4  %or_cond = and i1 %tmp_12, %icmp

ST_4: StgValue_43 (33)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:261
:5  br i1 %or_cond, label %2, label %._crit_edge

ST_4: StgValue_44 (106)  [2/2] 0.00ns  loc: ed25519/src/sha512.cpp:262
:0  call fastcc void @sha512_compress_128.1([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %in_r, i64 %p_01_idx)

ST_4: md_length_read (107)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:265
:1  %md_length_read = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_length)

ST_4: tmp_13 (108)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:265
:2  %tmp_13 = add i64 %md_length_read, 1024

ST_4: StgValue_47 (109)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:265
:3  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_length, i64 %tmp_13)


 <State 5>: 2.14ns
ST_5: tmp_14 (35)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:269
._crit_edge:0  %tmp_14 = sub i64 128, %md_curlen_read_10

ST_5: tmp_15 (36)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:269
._crit_edge:1  %tmp_15 = icmp ult i64 %inlen_load, %tmp_14

ST_5: n (37)  [1/1] 0.08ns  loc: ed25519/src/sha512.cpp:269
._crit_edge:2  %n = select i1 %tmp_15, i64 %inlen_load, i64 %tmp_14

ST_5: StgValue_51 (38)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:271
._crit_edge:3  br label %3


 <State 6>: 1.41ns
ST_6: i (40)  [1/1] 0.00ns
:0  %i = phi i64 [ 0, %._crit_edge ], [ %i_2, %4 ]

ST_6: tmp_27 (41)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:271
:1  %tmp_27 = trunc i64 %i to i9

ST_6: exitcond3 (42)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:271
:2  %exitcond3 = icmp eq i64 %i, %n

ST_6: i_2 (43)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:271
:3  %i_2 = add i64 1, %i

ST_6: StgValue_56 (44)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:271
:4  br i1 %exitcond3, label %5, label %4


 <State 7>: 1.68ns
ST_7: tmp_28 (46)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:260
:0  %tmp_28 = trunc i64 %p_01_idx to i9

ST_7: sum2 (47)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:260
:1  %sum2 = add i9 %tmp_28, %tmp_27

ST_7: sum2_cast (48)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:260
:2  %sum2_cast = zext i9 %sum2 to i64

ST_7: in_addr (49)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:272
:3  %in_addr = getelementptr [128 x i8]* %in_r, i64 0, i64 %sum2_cast

ST_7: in_load (50)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:272
:4  %in_load = load i8* %in_addr, align 1


 <State 8>: 1.68ns
ST_8: in_load (50)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:272
:4  %in_load = load i8* %in_addr, align 1

ST_8: md_curlen_read_12 (51)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:272
:5  %md_curlen_read_12 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_8: tmp_29 (52)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:272
:6  %tmp_29 = trunc i64 %md_curlen_read_12 to i9

ST_8: tmp_18 (53)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:272
:7  %tmp_18 = add i9 %tmp_29, %tmp_27

ST_8: tmp_19_cast (54)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:272
:8  %tmp_19_cast = zext i9 %tmp_18 to i64

ST_8: md_buf_addr (55)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:272
:9  %md_buf_addr = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_19_cast

ST_8: StgValue_68 (56)  [1/1] 0.57ns  loc: ed25519/src/sha512.cpp:272
:10  store i8 %in_load, i8* %md_buf_addr, align 1

ST_8: StgValue_69 (57)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:271
:11  br label %3


 <State 9>: 2.06ns
ST_9: md_curlen_read_11 (59)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:276
:0  %md_curlen_read_11 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_curlen)

ST_9: tmp_16 (60)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:276
:1  %tmp_16 = add i64 %md_curlen_read_11, %n

ST_9: StgValue_72 (61)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:276
:2  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_curlen, i64 %tmp_16)

ST_9: inlen_4 (62)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:278
:3  %inlen_4 = sub i64 %inlen_load, %n

ST_9: tmp_17 (63)  [1/1] 0.64ns  loc: ed25519/src/sha512.cpp:279
:4  %tmp_17 = icmp eq i64 %tmp_16, 128

ST_9: StgValue_75 (64)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:279
:5  br i1 %tmp_17, label %.preheader5.preheader, label %._crit_edge7

ST_9: StgValue_76 (66)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:280
.preheader5.preheader:0  br label %.preheader5


 <State 10>: 1.09ns
ST_10: temp_index (68)  [1/1] 0.00ns
.preheader5:0  %temp_index = phi i8 [ %temp_index_4, %6 ], [ 0, %.preheader5.preheader ]

ST_10: exitcond2 (69)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:280
.preheader5:1  %exitcond2 = icmp eq i8 %temp_index, -128

ST_10: empty (70)  [1/1] 0.00ns
.preheader5:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_10: temp_index_4 (71)  [1/1] 1.09ns  loc: ed25519/src/sha512.cpp:280
.preheader5:3  %temp_index_4 = add i8 %temp_index, 1

ST_10: StgValue_81 (72)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:280
.preheader5:4  br i1 %exitcond2, label %7, label %6

ST_10: tmp_19 (74)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:281
:0  %tmp_19 = zext i8 %temp_index to i64

ST_10: md_buf_addr_7 (75)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:281
:1  %md_buf_addr_7 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_19

ST_10: md_buf_load (76)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:281
:2  %md_buf_load = load i8* %md_buf_addr_7, align 1

ST_10: StgValue_85 (81)  [2/2] 0.00ns  loc: ed25519/src/sha512.cpp:283
:0  call fastcc void @sha512_compress_128([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %temp_buf)


 <State 11>: 1.14ns
ST_11: md_buf_load (76)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:281
:2  %md_buf_load = load i8* %md_buf_addr_7, align 1

ST_11: temp_buf_addr (77)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:281
:3  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_19

ST_11: StgValue_88 (78)  [1/1] 0.57ns  loc: ed25519/src/sha512.cpp:281
:4  store i8 %md_buf_load, i8* %temp_buf_addr, align 1

ST_11: StgValue_89 (79)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:280
:5  br label %.preheader5


 <State 12>: 0.66ns
ST_12: StgValue_90 (81)  [1/2] 0.00ns  loc: ed25519/src/sha512.cpp:283
:0  call fastcc void @sha512_compress_128([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %temp_buf)

ST_12: StgValue_91 (82)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:283
:1  br label %.preheader


 <State 13>: 1.09ns
ST_13: temp_index_1 (84)  [1/1] 0.00ns
.preheader:0  %temp_index_1 = phi i8 [ %temp_index_5, %8 ], [ 0, %7 ]

ST_13: exitcond (85)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:286
.preheader:1  %exitcond = icmp eq i8 %temp_index_1, -128

ST_13: empty_89 (86)  [1/1] 0.00ns
.preheader:2  %empty_89 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_13: temp_index_5 (87)  [1/1] 1.09ns  loc: ed25519/src/sha512.cpp:286
.preheader:3  %temp_index_5 = add i8 %temp_index_1, 1

ST_13: StgValue_96 (88)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:286
.preheader:4  br i1 %exitcond, label %9, label %8

ST_13: tmp_21 (90)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:287
:0  %tmp_21 = zext i8 %temp_index_1 to i64

ST_13: temp_buf_addr_2 (91)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:287
:1  %temp_buf_addr_2 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_21

ST_13: temp_buf_load (92)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:287
:2  %temp_buf_load = load i8* %temp_buf_addr_2, align 1


 <State 14>: 1.14ns
ST_14: temp_buf_load (92)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:287
:2  %temp_buf_load = load i8* %temp_buf_addr_2, align 1

ST_14: md_buf_addr_8 (93)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:287
:3  %md_buf_addr_8 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_21

ST_14: StgValue_102 (94)  [1/1] 0.57ns  loc: ed25519/src/sha512.cpp:287
:4  store i8 %temp_buf_load, i8* %md_buf_addr_8, align 1

ST_14: StgValue_103 (95)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:286
:5  br label %.preheader


 <State 15>: 1.41ns
ST_15: md_length_read_4 (97)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:289
:0  %md_length_read_4 = call i64 @_ssdm_op_Read.ap_auto.i64P(i64* %md_length)

ST_15: tmp_20 (98)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:289
:1  %tmp_20 = add i64 %md_length_read_4, 1024

ST_15: StgValue_106 (99)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:289
:2  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_length, i64 %tmp_20)

ST_15: StgValue_107 (100)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:290
:3  call void @_ssdm_op_Write.ap_auto.i64P(i64* %md_curlen, i64 0)

ST_15: StgValue_108 (101)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:291
:4  br label %._crit_edge7

ST_15: StgValue_109 (103)  [1/1] 0.67ns  loc: ed25519/src/sha512.cpp:278
._crit_edge7:0  store i64 %inlen_4, i64* %inlen

ST_15: StgValue_110 (104)  [1/1] 0.66ns
._crit_edge7:1  br label %.backedge.backedge


 <State 16>: 2.09ns
ST_16: StgValue_111 (106)  [1/2] 0.00ns  loc: ed25519/src/sha512.cpp:262
:0  call fastcc void @sha512_compress_128.1([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %in_r, i64 %p_01_idx)

ST_16: inlen_3 (110)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:267
:4  %inlen_3 = add i64 %inlen_load, -128

ST_16: StgValue_113 (111)  [1/1] 0.67ns  loc: ed25519/src/sha512.cpp:267
:5  store i64 %inlen_3, i64* %inlen

ST_16: StgValue_114 (112)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:268
:6  br label %.backedge.backedge


 <State 17>: 1.41ns
ST_17: p_pn (114)  [1/1] 0.00ns (grouped into LUT with out node p_01_idx_be)
.backedge.backedge:0  %p_pn = phi i64 [ 128, %2 ], [ %n, %._crit_edge7 ]

ST_17: p_01_idx_be (115)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:277 (out node of the LUT)
.backedge.backedge:1  %p_01_idx_be = add i64 %p_pn, %p_01_idx

ST_17: StgValue_117 (116)  [1/1] 0.00ns
.backedge.backedge:2  br label %.backedge



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.675ns
The critical path consists of the following:
	'alloca' operation ('inlen') [19]  (0 ns)
	'store' operation of constant 128 on local variable 'inlen' [20]  (0.675 ns)

 <State 2>: 0.642ns
The critical path consists of the following:
	'load' operation ('inlen_load', ed25519/src/sha512.cpp:267) on local variable 'inlen' [24]  (0 ns)
	'icmp' operation ('tmp_s', ed25519/src/sha512.cpp:260) [25]  (0.642 ns)

 <State 3>: 0.642ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:261) [28]  (0 ns)
	'icmp' operation ('tmp_12', ed25519/src/sha512.cpp:261) [29]  (0.642 ns)

 <State 4>: 1.41ns
The critical path consists of the following:
	wire read on port 'md_length' (ed25519/src/sha512.cpp:265) [107]  (0 ns)
	'add' operation ('tmp_13', ed25519/src/sha512.cpp:265) [108]  (1.41 ns)

 <State 5>: 2.14ns
The critical path consists of the following:
	'sub' operation ('tmp_14', ed25519/src/sha512.cpp:269) [35]  (1.41 ns)
	'icmp' operation ('tmp_15', ed25519/src/sha512.cpp:269) [36]  (0.642 ns)
	'select' operation ('n', ed25519/src/sha512.cpp:269) [37]  (0.081 ns)

 <State 6>: 1.41ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:271) [40]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:271) [43]  (1.41 ns)

 <State 7>: 1.68ns
The critical path consists of the following:
	'add' operation ('sum2', ed25519/src/sha512.cpp:260) [47]  (1.1 ns)
	'getelementptr' operation ('in_addr', ed25519/src/sha512.cpp:272) [49]  (0 ns)
	'load' operation ('in_load', ed25519/src/sha512.cpp:272) on array 'in_r' [50]  (0.571 ns)

 <State 8>: 1.68ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:272) [51]  (0 ns)
	'add' operation ('tmp_18', ed25519/src/sha512.cpp:272) [53]  (1.1 ns)
	'getelementptr' operation ('md_buf_addr', ed25519/src/sha512.cpp:272) [55]  (0 ns)
	'store' operation (ed25519/src/sha512.cpp:272) of variable 'in_load', ed25519/src/sha512.cpp:272 on array 'md_buf' [56]  (0.571 ns)

 <State 9>: 2.06ns
The critical path consists of the following:
	wire read on port 'md_curlen' (ed25519/src/sha512.cpp:276) [59]  (0 ns)
	'add' operation ('tmp_16', ed25519/src/sha512.cpp:276) [60]  (1.41 ns)
	'icmp' operation ('tmp_17', ed25519/src/sha512.cpp:279) [63]  (0.642 ns)

 <State 10>: 1.09ns
The critical path consists of the following:
	'phi' operation ('temp_index') with incoming values : ('temp_index', ed25519/src/sha512.cpp:280) [68]  (0 ns)
	'add' operation ('temp_index', ed25519/src/sha512.cpp:280) [71]  (1.09 ns)

 <State 11>: 1.14ns
The critical path consists of the following:
	'load' operation ('md_buf_load', ed25519/src/sha512.cpp:281) on array 'md_buf' [76]  (0.571 ns)
	'store' operation (ed25519/src/sha512.cpp:281) of variable 'md_buf_load', ed25519/src/sha512.cpp:281 on array 'temp_buf', ed25519/src/sha512.cpp:254 [78]  (0.571 ns)

 <State 12>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('temp_index') with incoming values : ('temp_index', ed25519/src/sha512.cpp:286) [84]  (0.656 ns)

 <State 13>: 1.09ns
The critical path consists of the following:
	'phi' operation ('temp_index') with incoming values : ('temp_index', ed25519/src/sha512.cpp:286) [84]  (0 ns)
	'add' operation ('temp_index', ed25519/src/sha512.cpp:286) [87]  (1.09 ns)

 <State 14>: 1.14ns
The critical path consists of the following:
	'load' operation ('temp_buf_load', ed25519/src/sha512.cpp:287) on array 'temp_buf', ed25519/src/sha512.cpp:254 [92]  (0.571 ns)
	'store' operation (ed25519/src/sha512.cpp:287) of variable 'temp_buf_load', ed25519/src/sha512.cpp:287 on array 'md_buf' [94]  (0.571 ns)

 <State 15>: 1.41ns
The critical path consists of the following:
	wire read on port 'md_length' (ed25519/src/sha512.cpp:289) [97]  (0 ns)
	'add' operation ('tmp_20', ed25519/src/sha512.cpp:289) [98]  (1.41 ns)

 <State 16>: 2.09ns
The critical path consists of the following:
	'add' operation ('inlen', ed25519/src/sha512.cpp:267) [110]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:267) of variable 'inlen', ed25519/src/sha512.cpp:267 on local variable 'inlen' [111]  (0.675 ns)

 <State 17>: 1.41ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', ed25519/src/sha512.cpp:269) [114]  (0 ns)
	'add' operation ('p_01_idx_be', ed25519/src/sha512.cpp:277) [115]  (1.41 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
