// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sign_ed25519_18.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sign_ed25519_18::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sign_ed25519_18::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state1 = "1";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state2 = "10";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state3 = "100";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state4 = "1000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state5 = "10000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state6 = "100000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> crypto_sign_ed25519_18::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_1 = "1";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_2 = "10";
const sc_lv<1> crypto_sign_ed25519_18::ap_const_lv1_0 = "0";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_3 = "11";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_4 = "100";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_5 = "101";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_7 = "111";
const sc_lv<1> crypto_sign_ed25519_18::ap_const_lv1_1 = "1";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_8 = "1000";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_A = "1010";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_B = "1011";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_D = "1101";
const sc_lv<6> crypto_sign_ed25519_18::ap_const_lv6_0 = "000000";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_6 = "110";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_9 = "1001";
const sc_lv<6> crypto_sign_ed25519_18::ap_const_lv6_20 = "100000";
const sc_lv<2> crypto_sign_ed25519_18::ap_const_lv2_0 = "00";
const sc_lv<5> crypto_sign_ed25519_18::ap_const_lv5_0 = "00000";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_C = "1100";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_E = "1110";
const sc_lv<64> crypto_sign_ed25519_18::ap_const_lv64_1F = "11111";
const sc_lv<64> crypto_sign_ed25519_18::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> crypto_sign_ed25519_18::ap_const_lv6_3F = "111111";
const sc_lv<6> crypto_sign_ed25519_18::ap_const_lv6_1 = "1";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_26 = "100110";
const sc_lv<2> crypto_sign_ed25519_18::ap_const_lv2_2 = "10";
const sc_lv<2> crypto_sign_ed25519_18::ap_const_lv2_1 = "1";
const sc_lv<32> crypto_sign_ed25519_18::ap_const_lv32_1F = "11111";
const sc_lv<5> crypto_sign_ed25519_18::ap_const_lv5_1F = "11111";
const sc_lv<5> crypto_sign_ed25519_18::ap_const_lv5_1 = "1";
const sc_lv<31> crypto_sign_ed25519_18::ap_const_lv31_13 = "10011";
const bool crypto_sign_ed25519_18::ap_const_boolean_1 = true;

crypto_sign_ed25519_18::crypto_sign_ed25519_18(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new crypto_sign_ed255sc4("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    crypto_sign_mac_mpcA_x_U63 = new crypto_sign_mac_mpcA<1,1,6,25,32,32>("crypto_sign_mac_mpcA_x_U63");
    crypto_sign_mac_mpcA_x_U63->din0(grp_fu_441_p0);
    crypto_sign_mac_mpcA_x_U63->din1(grp_fu_441_p1);
    crypto_sign_mac_mpcA_x_U63->din2(r_v_q1);
    crypto_sign_mac_mpcA_x_U63->dout(grp_fu_441_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond1_i_fu_354_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond1_i_fu_354_p2 );

    SC_METHOD(thread_exitcond1_fu_276_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_197 );

    SC_METHOD(thread_exitcond1_i_fu_354_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( rep_i_reg_220 );

    SC_METHOD(thread_exitcond2_fu_259_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_1_reg_185 );

    SC_METHOD(thread_exitcond3_fu_242_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_174 );

    SC_METHOD(thread_exitcond_fu_314_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_2_reg_208 );

    SC_METHOD(thread_exitcond_i_fu_389_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_i_reg_231 );

    SC_METHOD(thread_grp_fu_441_p0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_441_p1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_441_p10 );

    SC_METHOD(thread_grp_fu_441_p10);
    sensitive << ( tmp_757_fu_370_p4 );

    SC_METHOD(thread_i_37_fu_248_p2);
    sensitive << ( i_reg_174 );

    SC_METHOD(thread_i_39_fu_265_p2);
    sensitive << ( i_1_reg_185 );

    SC_METHOD(thread_i_41_fu_336_p2);
    sensitive << ( i_2_reg_208 );

    SC_METHOD(thread_i_42_fu_395_p2);
    sensitive << ( i_i_reg_231 );

    SC_METHOD(thread_j_1_fu_282_p2);
    sensitive << ( j_reg_197 );

    SC_METHOD(thread_r_v_addr_reg_537);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_v_address0);
    sensitive << ( tmp_762_reg_517 );
    sensitive << ( r_v_addr_reg_537 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( r_v_addr_11_reg_565 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_756_i_fu_406_p1 );

    SC_METHOD(thread_r_v_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( r_v_addr_12_reg_571 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_755_i_fu_401_p1 );

    SC_METHOD(thread_r_v_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_r_v_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_r_v_d0);
    sensitive << ( t_q0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_764_fu_347_p2 );
    sensitive << ( grp_fu_441_p3 );
    sensitive << ( tmp_758_i_cast_fu_436_p1 );

    SC_METHOD(thread_r_v_d1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_i_cast_fu_384_p1 );
    sensitive << ( tmp_757_i_fu_429_p2 );

    SC_METHOD(thread_r_v_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_r_v_we1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_rep_fu_360_p2);
    sensitive << ( rep_i_reg_220 );

    SC_METHOD(thread_t_6_fu_425_p1);
    sensitive << ( t_s_fu_415_p4 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( t_addr_11_reg_499 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_314_p2 );
    sensitive << ( tmp_762_fu_331_p1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_fu_254_p1 );
    sensitive << ( tmp_768_fu_304_p1 );
    sensitive << ( tmp_763_fu_320_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_314_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_769_fu_308_p2 );

    SC_METHOD(thread_t_s_fu_415_p4);
    sensitive << ( r_v_q1 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp2_i_fu_342_p2);
    sensitive << ( t_load_2_reg_527 );

    SC_METHOD(thread_tmp_755_i_fu_401_p1);
    sensitive << ( i_i_reg_231 );

    SC_METHOD(thread_tmp_756_i_fu_406_p1);
    sensitive << ( i_42_fu_395_p2 );

    SC_METHOD(thread_tmp_757_fu_370_p4);
    sensitive << ( r_v_q0 );

    SC_METHOD(thread_tmp_757_i_fu_429_p2);
    sensitive << ( r_v_q0 );
    sensitive << ( t_6_fu_425_p1 );

    SC_METHOD(thread_tmp_758_i_cast_fu_436_p1);
    sensitive << ( tmp_771_fu_411_p1 );

    SC_METHOD(thread_tmp_761_fu_325_p2);
    sensitive << ( i_2_reg_208 );

    SC_METHOD(thread_tmp_762_fu_331_p1);
    sensitive << ( tmp_761_fu_325_p2 );

    SC_METHOD(thread_tmp_763_fu_320_p1);
    sensitive << ( i_2_reg_208 );

    SC_METHOD(thread_tmp_764_fu_347_p2);
    sensitive << ( t_q0 );
    sensitive << ( tmp2_i_fu_342_p2 );

    SC_METHOD(thread_tmp_765_fu_288_p1);
    sensitive << ( j_reg_197 );

    SC_METHOD(thread_tmp_766_fu_299_p1);
    sensitive << ( y_v_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_766_fu_299_p2);
    sensitive << ( x_v_load_reg_471 );
    sensitive << ( tmp_766_fu_299_p1 );

    SC_METHOD(thread_tmp_767_fu_293_p2);
    sensitive << ( i_1_reg_185 );
    sensitive << ( j_reg_197 );

    SC_METHOD(thread_tmp_768_fu_304_p1);
    sensitive << ( tmp_767_reg_489 );

    SC_METHOD(thread_tmp_769_fu_308_p2);
    sensitive << ( tmp_766_reg_494 );
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_770_fu_366_p1);
    sensitive << ( r_v_q0 );

    SC_METHOD(thread_tmp_771_fu_411_p1);
    sensitive << ( r_v_q1 );

    SC_METHOD(thread_tmp_fu_254_p1);
    sensitive << ( i_reg_174 );

    SC_METHOD(thread_tmp_i_cast_fu_384_p1);
    sensitive << ( tmp_770_fu_366_p1 );

    SC_METHOD(thread_tmp_s_fu_271_p1);
    sensitive << ( i_1_reg_185 );

    SC_METHOD(thread_x_v_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_271_p1 );

    SC_METHOD(thread_x_v_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_y_v_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_765_fu_288_p1 );

    SC_METHOD(thread_y_v_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_259_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_314_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_i_fu_389_p2 );
    sensitive << ( exitcond3_fu_242_p2 );
    sensitive << ( exitcond1_i_fu_354_p2 );

    ap_CS_fsm = "000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sign_ed25519_18_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_v_address0, "(port)r_v_address0");
    sc_trace(mVcdFile, r_v_ce0, "(port)r_v_ce0");
    sc_trace(mVcdFile, r_v_we0, "(port)r_v_we0");
    sc_trace(mVcdFile, r_v_d0, "(port)r_v_d0");
    sc_trace(mVcdFile, r_v_q0, "(port)r_v_q0");
    sc_trace(mVcdFile, r_v_address1, "(port)r_v_address1");
    sc_trace(mVcdFile, r_v_ce1, "(port)r_v_ce1");
    sc_trace(mVcdFile, r_v_we1, "(port)r_v_we1");
    sc_trace(mVcdFile, r_v_d1, "(port)r_v_d1");
    sc_trace(mVcdFile, r_v_q1, "(port)r_v_q1");
    sc_trace(mVcdFile, x_v_address0, "(port)x_v_address0");
    sc_trace(mVcdFile, x_v_ce0, "(port)x_v_ce0");
    sc_trace(mVcdFile, x_v_q0, "(port)x_v_q0");
    sc_trace(mVcdFile, y_v_address0, "(port)y_v_address0");
    sc_trace(mVcdFile, y_v_ce0, "(port)y_v_ce0");
    sc_trace(mVcdFile, y_v_q0, "(port)y_v_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_37_fu_248_p2, "i_37_fu_248_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_39_fu_265_p2, "i_39_fu_265_p2");
    sc_trace(mVcdFile, i_39_reg_461, "i_39_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_259_p2, "exitcond2_fu_259_p2");
    sc_trace(mVcdFile, x_v_load_reg_471, "x_v_load_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_fu_282_p2, "j_1_fu_282_p2");
    sc_trace(mVcdFile, j_1_reg_479, "j_1_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond1_fu_276_p2, "exitcond1_fu_276_p2");
    sc_trace(mVcdFile, tmp_767_fu_293_p2, "tmp_767_fu_293_p2");
    sc_trace(mVcdFile, tmp_767_reg_489, "tmp_767_reg_489");
    sc_trace(mVcdFile, tmp_766_fu_299_p2, "tmp_766_fu_299_p2");
    sc_trace(mVcdFile, tmp_766_reg_494, "tmp_766_reg_494");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, t_addr_11_reg_499, "t_addr_11_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, exitcond_fu_314_p2, "exitcond_fu_314_p2");
    sc_trace(mVcdFile, tmp_762_fu_331_p1, "tmp_762_fu_331_p1");
    sc_trace(mVcdFile, tmp_762_reg_517, "tmp_762_reg_517");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_load_2_reg_527, "t_load_2_reg_527");
    sc_trace(mVcdFile, i_41_fu_336_p2, "i_41_fu_336_p2");
    sc_trace(mVcdFile, i_41_reg_532, "i_41_reg_532");
    sc_trace(mVcdFile, r_v_addr_reg_537, "r_v_addr_reg_537");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, rep_fu_360_p2, "rep_fu_360_p2");
    sc_trace(mVcdFile, rep_reg_552, "rep_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_42_fu_395_p2, "i_42_fu_395_p2");
    sc_trace(mVcdFile, i_42_reg_560, "i_42_reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, r_v_addr_11_reg_565, "r_v_addr_11_reg_565");
    sc_trace(mVcdFile, exitcond_i_fu_389_p2, "exitcond_i_fu_389_p2");
    sc_trace(mVcdFile, r_v_addr_12_reg_571, "r_v_addr_12_reg_571");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, i_reg_174, "i_reg_174");
    sc_trace(mVcdFile, exitcond3_fu_242_p2, "exitcond3_fu_242_p2");
    sc_trace(mVcdFile, i_1_reg_185, "i_1_reg_185");
    sc_trace(mVcdFile, j_reg_197, "j_reg_197");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_2_reg_208, "i_2_reg_208");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, rep_i_reg_220, "rep_i_reg_220");
    sc_trace(mVcdFile, i_i_reg_231, "i_i_reg_231");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_fu_254_p1, "tmp_fu_254_p1");
    sc_trace(mVcdFile, tmp_s_fu_271_p1, "tmp_s_fu_271_p1");
    sc_trace(mVcdFile, tmp_765_fu_288_p1, "tmp_765_fu_288_p1");
    sc_trace(mVcdFile, tmp_768_fu_304_p1, "tmp_768_fu_304_p1");
    sc_trace(mVcdFile, tmp_763_fu_320_p1, "tmp_763_fu_320_p1");
    sc_trace(mVcdFile, tmp_755_i_fu_401_p1, "tmp_755_i_fu_401_p1");
    sc_trace(mVcdFile, tmp_756_i_fu_406_p1, "tmp_756_i_fu_406_p1");
    sc_trace(mVcdFile, tmp_769_fu_308_p2, "tmp_769_fu_308_p2");
    sc_trace(mVcdFile, tmp_764_fu_347_p2, "tmp_764_fu_347_p2");
    sc_trace(mVcdFile, tmp_i_cast_fu_384_p1, "tmp_i_cast_fu_384_p1");
    sc_trace(mVcdFile, grp_fu_441_p3, "grp_fu_441_p3");
    sc_trace(mVcdFile, tmp_757_i_fu_429_p2, "tmp_757_i_fu_429_p2");
    sc_trace(mVcdFile, tmp_758_i_cast_fu_436_p1, "tmp_758_i_cast_fu_436_p1");
    sc_trace(mVcdFile, tmp_766_fu_299_p1, "tmp_766_fu_299_p1");
    sc_trace(mVcdFile, tmp_761_fu_325_p2, "tmp_761_fu_325_p2");
    sc_trace(mVcdFile, tmp2_i_fu_342_p2, "tmp2_i_fu_342_p2");
    sc_trace(mVcdFile, tmp_757_fu_370_p4, "tmp_757_fu_370_p4");
    sc_trace(mVcdFile, tmp_770_fu_366_p1, "tmp_770_fu_366_p1");
    sc_trace(mVcdFile, t_s_fu_415_p4, "t_s_fu_415_p4");
    sc_trace(mVcdFile, t_6_fu_425_p1, "t_6_fu_425_p1");
    sc_trace(mVcdFile, tmp_771_fu_411_p1, "tmp_771_fu_411_p1");
    sc_trace(mVcdFile, grp_fu_441_p0, "grp_fu_441_p0");
    sc_trace(mVcdFile, grp_fu_441_p1, "grp_fu_441_p1");
    sc_trace(mVcdFile, exitcond1_i_fu_354_p2, "exitcond1_i_fu_354_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_441_p10, "grp_fu_441_p10");
#endif

    }
}

crypto_sign_ed25519_18::~crypto_sign_ed25519_18() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete crypto_sign_mac_mpcA_x_U63;
}

void crypto_sign_ed25519_18::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_242_p2.read()))) {
        i_1_reg_185 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_276_p2.read(), ap_const_lv1_1))) {
        i_1_reg_185 = i_39_reg_461.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_1))) {
        i_2_reg_208 = ap_const_lv6_20;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_2_reg_208 = i_41_reg_532.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_i_reg_231 = i_42_reg_560.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_i_reg_231 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_242_p2.read()))) {
        i_reg_174 = i_37_fu_248_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_174 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_197 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_reg_197 = j_1_reg_479.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_389_p2.read()))) {
        rep_i_reg_220 = rep_reg_552.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        rep_i_reg_220 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_39_reg_461 = i_39_fu_265_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_41_reg_532 = i_41_fu_336_p2.read();
        t_load_2_reg_527 = t_q0.read();
        tmp_762_reg_517 = tmp_762_fu_331_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_42_reg_560 = i_42_fu_395_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_1_reg_479 = j_1_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_389_p2.read()))) {
        r_v_addr_11_reg_565 =  (sc_lv<5>) (tmp_755_i_fu_401_p1.read());
        r_v_addr_12_reg_571 =  (sc_lv<5>) (tmp_756_i_fu_406_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        rep_reg_552 = rep_fu_360_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_addr_11_reg_499 =  (sc_lv<6>) (tmp_768_fu_304_p1.read());
        tmp_766_reg_494 = tmp_766_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        tmp_767_reg_489 = tmp_767_fu_293_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        x_v_load_reg_471 = x_v_q0.read();
    }
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sign_ed25519_18::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void crypto_sign_ed25519_18::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_354_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_354_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_exitcond1_fu_276_p2() {
    exitcond1_fu_276_p2 = (!j_reg_197.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_197.read() == ap_const_lv6_20);
}

void crypto_sign_ed25519_18::thread_exitcond1_i_fu_354_p2() {
    exitcond1_i_fu_354_p2 = (!rep_i_reg_220.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(rep_i_reg_220.read() == ap_const_lv2_2);
}

void crypto_sign_ed25519_18::thread_exitcond2_fu_259_p2() {
    exitcond2_fu_259_p2 = (!i_1_reg_185.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_185.read() == ap_const_lv6_20);
}

void crypto_sign_ed25519_18::thread_exitcond3_fu_242_p2() {
    exitcond3_fu_242_p2 = (!i_reg_174.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_174.read() == ap_const_lv6_3F);
}

void crypto_sign_ed25519_18::thread_exitcond_fu_314_p2() {
    exitcond_fu_314_p2 = (!i_2_reg_208.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_208.read() == ap_const_lv6_3F);
}

void crypto_sign_ed25519_18::thread_exitcond_i_fu_389_p2() {
    exitcond_i_fu_389_p2 = (!i_i_reg_231.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_231.read() == ap_const_lv5_1F);
}

void crypto_sign_ed25519_18::thread_grp_fu_441_p0() {
    grp_fu_441_p0 =  (sc_lv<6>) (ap_const_lv31_13);
}

void crypto_sign_ed25519_18::thread_grp_fu_441_p1() {
    grp_fu_441_p1 =  (sc_lv<25>) (grp_fu_441_p10.read());
}

void crypto_sign_ed25519_18::thread_grp_fu_441_p10() {
    grp_fu_441_p10 = esl_zext<31,25>(tmp_757_fu_370_p4.read());
}

void crypto_sign_ed25519_18::thread_i_37_fu_248_p2() {
    i_37_fu_248_p2 = (!i_reg_174.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_174.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_18::thread_i_39_fu_265_p2() {
    i_39_fu_265_p2 = (!i_1_reg_185.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_185.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_18::thread_i_41_fu_336_p2() {
    i_41_fu_336_p2 = (!i_2_reg_208.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_reg_208.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_18::thread_i_42_fu_395_p2() {
    i_42_fu_395_p2 = (!i_i_reg_231.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_i_reg_231.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void crypto_sign_ed25519_18::thread_j_1_fu_282_p2() {
    j_1_fu_282_p2 = (!j_reg_197.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_197.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_18::thread_r_v_addr_reg_537() {
    r_v_addr_reg_537 =  (sc_lv<5>) (ap_const_lv64_1F);
}

void crypto_sign_ed25519_18::thread_r_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_v_address0 = r_v_addr_11_reg_565.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        r_v_address0 =  (sc_lv<5>) (tmp_756_i_fu_406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_v_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_v_address0 = r_v_addr_reg_537.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_v_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_address0 =  (sc_lv<5>) (tmp_762_reg_517.read());
    } else {
        r_v_address0 = "XXXXX";
    }
}

void crypto_sign_ed25519_18::thread_r_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_v_address1 = r_v_addr_12_reg_571.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        r_v_address1 =  (sc_lv<5>) (tmp_755_i_fu_401_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_v_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_v_address1 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        r_v_address1 = "XXXXX";
    }
}

void crypto_sign_ed25519_18::thread_r_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        r_v_ce0 = ap_const_logic_1;
    } else {
        r_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_r_v_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        r_v_ce1 = ap_const_logic_1;
    } else {
        r_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_r_v_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_v_d0 = tmp_758_i_cast_fu_436_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_v_d0 = grp_fu_441_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_v_d0 = t_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_d0 = tmp_764_fu_347_p2.read();
    } else {
        r_v_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_18::thread_r_v_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_v_d1 = tmp_757_i_fu_429_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_v_d1 = tmp_i_cast_fu_384_p1.read();
    } else {
        r_v_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_18::thread_r_v_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        r_v_we0 = ap_const_logic_1;
    } else {
        r_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_r_v_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        r_v_we1 = ap_const_logic_1;
    } else {
        r_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_rep_fu_360_p2() {
    rep_fu_360_p2 = (!rep_i_reg_220.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(rep_i_reg_220.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void crypto_sign_ed25519_18::thread_t_6_fu_425_p1() {
    t_6_fu_425_p1 = esl_zext<32,24>(t_s_fu_415_p4.read());
}

void crypto_sign_ed25519_18::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address0 =  (sc_lv<6>) (tmp_762_fu_331_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_314_p2.read(), ap_const_lv1_1))) {
        t_address0 =  (sc_lv<6>) (ap_const_lv64_1F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_314_p2.read()))) {
        t_address0 =  (sc_lv<6>) (tmp_763_fu_320_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_address0 = t_addr_11_reg_499.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_address0 =  (sc_lv<6>) (tmp_768_fu_304_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<6>) (tmp_fu_254_p1.read());
    } else {
        t_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign_ed25519_18::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_314_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_314_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_d0 = tmp_769_fu_308_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_d0 = ap_const_lv32_0;
    } else {
        t_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_18::thread_t_s_fu_415_p4() {
    t_s_fu_415_p4 = r_v_q1.read().range(31, 8);
}

void crypto_sign_ed25519_18::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_242_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_tmp2_i_fu_342_p2() {
    tmp2_i_fu_342_p2 = (!t_load_2_reg_527.read().is_01() || !ap_const_lv32_26.is_01())? sc_lv<32>(): sc_bigint<32>(t_load_2_reg_527.read()) * sc_biguint<32>(ap_const_lv32_26);
}

void crypto_sign_ed25519_18::thread_tmp_755_i_fu_401_p1() {
    tmp_755_i_fu_401_p1 = esl_zext<64,5>(i_i_reg_231.read());
}

void crypto_sign_ed25519_18::thread_tmp_756_i_fu_406_p1() {
    tmp_756_i_fu_406_p1 = esl_zext<64,5>(i_42_fu_395_p2.read());
}

void crypto_sign_ed25519_18::thread_tmp_757_fu_370_p4() {
    tmp_757_fu_370_p4 = r_v_q0.read().range(31, 7);
}

void crypto_sign_ed25519_18::thread_tmp_757_i_fu_429_p2() {
    tmp_757_i_fu_429_p2 = (!t_6_fu_425_p1.read().is_01() || !r_v_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_6_fu_425_p1.read()) + sc_biguint<32>(r_v_q0.read()));
}

void crypto_sign_ed25519_18::thread_tmp_758_i_cast_fu_436_p1() {
    tmp_758_i_cast_fu_436_p1 = esl_zext<32,8>(tmp_771_fu_411_p1.read());
}

void crypto_sign_ed25519_18::thread_tmp_761_fu_325_p2() {
    tmp_761_fu_325_p2 = (i_2_reg_208.read() ^ ap_const_lv6_20);
}

void crypto_sign_ed25519_18::thread_tmp_762_fu_331_p1() {
    tmp_762_fu_331_p1 = esl_zext<64,6>(tmp_761_fu_325_p2.read());
}

void crypto_sign_ed25519_18::thread_tmp_763_fu_320_p1() {
    tmp_763_fu_320_p1 = esl_zext<64,6>(i_2_reg_208.read());
}

void crypto_sign_ed25519_18::thread_tmp_764_fu_347_p2() {
    tmp_764_fu_347_p2 = (!t_q0.read().is_01() || !tmp2_i_fu_342_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_q0.read()) + sc_biguint<32>(tmp2_i_fu_342_p2.read()));
}

void crypto_sign_ed25519_18::thread_tmp_765_fu_288_p1() {
    tmp_765_fu_288_p1 = esl_zext<64,6>(j_reg_197.read());
}

void crypto_sign_ed25519_18::thread_tmp_766_fu_299_p1() {
    tmp_766_fu_299_p1 = y_v_q0.read();
}

void crypto_sign_ed25519_18::thread_tmp_766_fu_299_p2() {
    tmp_766_fu_299_p2 = (!x_v_load_reg_471.read().is_01() || !tmp_766_fu_299_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(x_v_load_reg_471.read()) * sc_bigint<32>(tmp_766_fu_299_p1.read());
}

void crypto_sign_ed25519_18::thread_tmp_767_fu_293_p2() {
    tmp_767_fu_293_p2 = (!i_1_reg_185.read().is_01() || !j_reg_197.read().is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_185.read()) + sc_biguint<6>(j_reg_197.read()));
}

void crypto_sign_ed25519_18::thread_tmp_768_fu_304_p1() {
    tmp_768_fu_304_p1 = esl_zext<64,6>(tmp_767_reg_489.read());
}

void crypto_sign_ed25519_18::thread_tmp_769_fu_308_p2() {
    tmp_769_fu_308_p2 = (!t_q0.read().is_01() || !tmp_766_reg_494.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_q0.read()) + sc_biguint<32>(tmp_766_reg_494.read()));
}

void crypto_sign_ed25519_18::thread_tmp_770_fu_366_p1() {
    tmp_770_fu_366_p1 = r_v_q0.read().range(7-1, 0);
}

void crypto_sign_ed25519_18::thread_tmp_771_fu_411_p1() {
    tmp_771_fu_411_p1 = r_v_q1.read().range(8-1, 0);
}

void crypto_sign_ed25519_18::thread_tmp_fu_254_p1() {
    tmp_fu_254_p1 = esl_zext<64,6>(i_reg_174.read());
}

void crypto_sign_ed25519_18::thread_tmp_i_cast_fu_384_p1() {
    tmp_i_cast_fu_384_p1 = esl_zext<32,7>(tmp_770_fu_366_p1.read());
}

void crypto_sign_ed25519_18::thread_tmp_s_fu_271_p1() {
    tmp_s_fu_271_p1 = esl_zext<64,6>(i_1_reg_185.read());
}

void crypto_sign_ed25519_18::thread_x_v_address0() {
    x_v_address0 =  (sc_lv<5>) (tmp_s_fu_271_p1.read());
}

void crypto_sign_ed25519_18::thread_x_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_v_ce0 = ap_const_logic_1;
    } else {
        x_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_y_v_address0() {
    y_v_address0 =  (sc_lv<5>) (tmp_765_fu_288_p1.read());
}

void crypto_sign_ed25519_18::thread_y_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        y_v_ce0 = ap_const_logic_1;
    } else {
        y_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_18::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_242_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_276_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond_fu_314_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_354_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_389_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

