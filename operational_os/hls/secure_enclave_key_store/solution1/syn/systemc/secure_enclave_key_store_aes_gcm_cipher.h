// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _secure_enclave_key_store_aes_gcm_cipher_HH_
#define _secure_enclave_key_store_aes_gcm_cipher_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "secure_enclave_key_store_aes.h"

namespace ap_rtl {

struct secure_enclave_key_store_aes_gcm_cipher : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<128> > key_V;
    sc_out< sc_lv<8> > data_in_V_address0;
    sc_out< sc_logic > data_in_V_ce0;
    sc_in< sc_lv<128> > data_in_V_q0;
    sc_out< sc_lv<8> > data_out_V_address0;
    sc_out< sc_logic > data_out_V_ce0;
    sc_out< sc_logic > data_out_V_we0;
    sc_out< sc_lv<128> > data_out_V_d0;
    sc_in< sc_lv<128> > counter_V;
    sc_in< sc_lv<128> > hash_key_V;
    sc_in< sc_logic > encrypt;
    sc_out< sc_lv<128> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    secure_enclave_key_store_aes_gcm_cipher(sc_module_name name);
    SC_HAS_PROCESS(secure_enclave_key_store_aes_gcm_cipher);

    ~secure_enclave_key_store_aes_gcm_cipher();

    sc_trace_file* mVcdFile;

    secure_enclave_key_store_aes* grp_secure_enclave_key_store_aes_fu_265;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_42;
    sc_signal< sc_lv<1> > encrypt_read_read_fu_90_p2;
    sc_signal< sc_lv<13> > encrypt_iterations_1_fu_317_p2;
    sc_signal< sc_lv<13> > encrypt_iterations_1_reg_505;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_83;
    sc_signal< sc_lv<1> > tmp_6_fu_323_p1;
    sc_signal< sc_lv<1> > tmp_6_reg_511;
    sc_signal< sc_lv<1> > exitcond_fu_311_p2;
    sc_signal< sc_lv<128> > agg_result_V_i_fu_336_p1;
    sc_signal< sc_lv<128> > agg_result_V_i_reg_516;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_98;
    sc_signal< sc_lv<128> > grp_secure_enclave_key_store_aes_fu_265_ap_return;
    sc_signal< sc_lv<128> > encrypted_counter_out_V_reg_523;
    sc_signal< sc_logic > ap_sig_cseq_ST_st22_fsm_21;
    sc_signal< bool > ap_sig_107;
    sc_signal< sc_lv<64> > tmp_fu_341_p1;
    sc_signal< sc_lv<64> > tmp_reg_528;
    sc_signal< sc_lv<128> > r_V_fu_352_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st23_fsm_22;
    sc_signal< bool > ap_sig_120;
    sc_signal< sc_lv<128> > r_V_16_fu_358_p2;
    sc_signal< sc_lv<8> > i_4_fu_374_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st24_fsm_23;
    sc_signal< bool > ap_sig_135;
    sc_signal< sc_lv<128> > agg_result_V_0_r_V_i_i1_fu_393_p3;
    sc_signal< sc_lv<1> > exitcond_i_i7_fu_368_p2;
    sc_signal< sc_lv<128> > lhs_V_r_V_i_i1_fu_401_p3;
    sc_signal< sc_lv<128> > r_V_13_fu_419_p1;
    sc_signal< sc_lv<8> > i_fu_433_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st25_fsm_24;
    sc_signal< bool > ap_sig_153;
    sc_signal< sc_lv<128> > agg_result_V_0_r_V_i_i_fu_452_p3;
    sc_signal< sc_lv<1> > exitcond_i_i_fu_427_p2;
    sc_signal< sc_lv<128> > lhs_V_r_V_i_i_fu_460_p3;
    sc_signal< sc_lv<128> > r_V_11_fu_478_p1;
    sc_signal< sc_logic > grp_secure_enclave_key_store_aes_fu_265_ap_start;
    sc_signal< sc_logic > grp_secure_enclave_key_store_aes_fu_265_ap_done;
    sc_signal< sc_logic > grp_secure_enclave_key_store_aes_fu_265_ap_idle;
    sc_signal< sc_logic > grp_secure_enclave_key_store_aes_fu_265_ap_ready;
    sc_signal< sc_lv<128> > grp_secure_enclave_key_store_aes_fu_265_inptext_V_read;
    sc_signal< sc_lv<128> > p_Val2_s_reg_138;
    sc_signal< sc_lv<128> > lhs_V_3_reg_149;
    sc_signal< sc_lv<13> > encrypt_iterations_reg_163;
    sc_signal< sc_lv<128> > agg_result_V_i_i3_reg_177;
    sc_signal< sc_lv<128> > lhs_V_5_reg_190;
    sc_signal< sc_lv<128> > rhs_V_4_reg_201;
    sc_signal< sc_lv<8> > i_assign_1_reg_210;
    sc_signal< sc_lv<128> > agg_result_V_i_i_reg_221;
    sc_signal< sc_lv<128> > lhs_V_4_reg_234;
    sc_signal< sc_lv<128> > rhs_V_3_reg_245;
    sc_signal< sc_lv<8> > i_assign_reg_254;
    sc_signal< sc_logic > ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    sc_signal< sc_logic > ap_sig_nseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_210;
    sc_signal< sc_lv<128> > r_V_15_fu_346_p2;
    sc_signal< sc_lv<6> > tmp_i_cast_fu_327_p1;
    sc_signal< sc_lv<6> > r_V_14_fu_330_p2;
    sc_signal< sc_lv<32> > i_assign_1_cast1_fu_364_p1;
    sc_signal< sc_lv<1> > tmp_8_fu_380_p3;
    sc_signal< sc_lv<128> > z_V_1_fu_387_p2;
    sc_signal< sc_lv<127> > r_V_8_fu_409_p4;
    sc_signal< sc_lv<32> > i_assign_cast2_fu_423_p1;
    sc_signal< sc_lv<1> > tmp_7_fu_439_p3;
    sc_signal< sc_lv<128> > z_V_fu_446_p2;
    sc_signal< sc_lv<127> > r_V_6_fu_468_p4;
    sc_signal< sc_lv<128> > ap_return_preg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_st1_fsm_0;
    static const sc_lv<25> ap_ST_st2_fsm_1;
    static const sc_lv<25> ap_ST_st3_fsm_2;
    static const sc_lv<25> ap_ST_st4_fsm_3;
    static const sc_lv<25> ap_ST_st5_fsm_4;
    static const sc_lv<25> ap_ST_st6_fsm_5;
    static const sc_lv<25> ap_ST_st7_fsm_6;
    static const sc_lv<25> ap_ST_st8_fsm_7;
    static const sc_lv<25> ap_ST_st9_fsm_8;
    static const sc_lv<25> ap_ST_st10_fsm_9;
    static const sc_lv<25> ap_ST_st11_fsm_10;
    static const sc_lv<25> ap_ST_st12_fsm_11;
    static const sc_lv<25> ap_ST_st13_fsm_12;
    static const sc_lv<25> ap_ST_st14_fsm_13;
    static const sc_lv<25> ap_ST_st15_fsm_14;
    static const sc_lv<25> ap_ST_st16_fsm_15;
    static const sc_lv<25> ap_ST_st17_fsm_16;
    static const sc_lv<25> ap_ST_st18_fsm_17;
    static const sc_lv<25> ap_ST_st19_fsm_18;
    static const sc_lv<25> ap_ST_st20_fsm_19;
    static const sc_lv<25> ap_ST_st21_fsm_20;
    static const sc_lv<25> ap_ST_st22_fsm_21;
    static const sc_lv<25> ap_ST_st23_fsm_22;
    static const sc_lv<25> ap_ST_st24_fsm_23;
    static const sc_lv<25> ap_ST_st25_fsm_24;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_21;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_7F;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V_0_r_V_i_i1_fu_393_p3();
    void thread_agg_result_V_0_r_V_i_i_fu_452_p3();
    void thread_agg_result_V_i_fu_336_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_107();
    void thread_ap_sig_120();
    void thread_ap_sig_135();
    void thread_ap_sig_153();
    void thread_ap_sig_210();
    void thread_ap_sig_42();
    void thread_ap_sig_83();
    void thread_ap_sig_98();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st22_fsm_21();
    void thread_ap_sig_cseq_ST_st23_fsm_22();
    void thread_ap_sig_cseq_ST_st24_fsm_23();
    void thread_ap_sig_cseq_ST_st25_fsm_24();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_nseq_ST_st3_fsm_2();
    void thread_data_in_V_address0();
    void thread_data_in_V_ce0();
    void thread_data_out_V_address0();
    void thread_data_out_V_ce0();
    void thread_data_out_V_d0();
    void thread_data_out_V_we0();
    void thread_encrypt_iterations_1_fu_317_p2();
    void thread_encrypt_read_read_fu_90_p2();
    void thread_exitcond_fu_311_p2();
    void thread_exitcond_i_i7_fu_368_p2();
    void thread_exitcond_i_i_fu_427_p2();
    void thread_grp_secure_enclave_key_store_aes_fu_265_ap_start();
    void thread_grp_secure_enclave_key_store_aes_fu_265_inptext_V_read();
    void thread_i_4_fu_374_p2();
    void thread_i_assign_1_cast1_fu_364_p1();
    void thread_i_assign_cast2_fu_423_p1();
    void thread_i_fu_433_p2();
    void thread_lhs_V_r_V_i_i1_fu_401_p3();
    void thread_lhs_V_r_V_i_i_fu_460_p3();
    void thread_r_V_11_fu_478_p1();
    void thread_r_V_13_fu_419_p1();
    void thread_r_V_14_fu_330_p2();
    void thread_r_V_15_fu_346_p2();
    void thread_r_V_16_fu_358_p2();
    void thread_r_V_6_fu_468_p4();
    void thread_r_V_8_fu_409_p4();
    void thread_r_V_fu_352_p2();
    void thread_tmp_6_fu_323_p1();
    void thread_tmp_7_fu_439_p3();
    void thread_tmp_8_fu_380_p3();
    void thread_tmp_fu_341_p1();
    void thread_tmp_i_cast_fu_327_p1();
    void thread_z_V_1_fu_387_p2();
    void thread_z_V_fu_446_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
