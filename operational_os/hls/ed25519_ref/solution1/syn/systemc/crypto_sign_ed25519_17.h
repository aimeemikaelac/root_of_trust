// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_sign_ed25519_17_HH_
#define _crypto_sign_ed25519_17_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "crypto_sign_mac_mpcA.h"
#include "crypto_sign_ed255sc4.h"

namespace ap_rtl {

struct crypto_sign_ed25519_17 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > r_v_address0;
    sc_out< sc_logic > r_v_ce0;
    sc_out< sc_logic > r_v_we0;
    sc_out< sc_lv<32> > r_v_d0;
    sc_in< sc_lv<32> > r_v_q0;
    sc_out< sc_lv<5> > r_v_address1;
    sc_out< sc_logic > r_v_ce1;
    sc_out< sc_logic > r_v_we1;
    sc_out< sc_lv<32> > r_v_d1;
    sc_in< sc_lv<32> > r_v_q1;
    sc_out< sc_lv<5> > y_v_address0;
    sc_out< sc_logic > y_v_ce0;
    sc_in< sc_lv<32> > y_v_q0;


    // Module declarations
    crypto_sign_ed25519_17(sc_module_name name);
    SC_HAS_PROCESS(crypto_sign_ed25519_17);

    ~crypto_sign_ed25519_17();

    sc_trace_file* mVcdFile;

    crypto_sign_ed255sc4* t_U;
    crypto_sign_mac_mpcA<1,1,6,25,32,32>* crypto_sign_mac_mpcA_x_U76;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > i_45_fu_242_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > i_46_fu_259_p2;
    sc_signal< sc_lv<6> > i_46_reg_455;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond2_fu_253_p2;
    sc_signal< sc_lv<32> > r_v_load_reg_465;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > j_2_fu_276_p2;
    sc_signal< sc_lv<6> > j_2_reg_473;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond1_fu_270_p2;
    sc_signal< sc_lv<6> > tmp_776_fu_287_p2;
    sc_signal< sc_lv<6> > tmp_776_reg_483;
    sc_signal< sc_lv<32> > tmp_775_fu_293_p2;
    sc_signal< sc_lv<32> > tmp_775_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > t_addr_15_reg_493;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond_fu_308_p2;
    sc_signal< sc_lv<64> > tmp_771_fu_325_p1;
    sc_signal< sc_lv<64> > tmp_771_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > t_q0;
    sc_signal< sc_lv<32> > t_load_4_reg_521;
    sc_signal< sc_lv<6> > i_47_fu_330_p2;
    sc_signal< sc_lv<6> > i_47_reg_526;
    sc_signal< sc_lv<5> > r_v_addr_13_reg_531;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<2> > rep_fu_354_p2;
    sc_signal< sc_lv<2> > rep_reg_546;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<5> > i_48_fu_389_p2;
    sc_signal< sc_lv<5> > i_48_reg_554;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > r_v_addr_16_reg_559;
    sc_signal< sc_lv<1> > exitcond_i_fu_383_p2;
    sc_signal< sc_lv<5> > r_v_addr_17_reg_565;
    sc_signal< sc_lv<6> > t_address0;
    sc_signal< sc_logic > t_ce0;
    sc_signal< sc_logic > t_we0;
    sc_signal< sc_lv<32> > t_d0;
    sc_signal< sc_lv<6> > i_reg_168;
    sc_signal< sc_lv<1> > exitcond3_fu_236_p2;
    sc_signal< sc_lv<6> > i_1_reg_179;
    sc_signal< sc_lv<6> > j_reg_191;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > i_2_reg_202;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<2> > rep_i_reg_214;
    sc_signal< sc_lv<5> > i_i_reg_225;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > tmp_fu_248_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_265_p1;
    sc_signal< sc_lv<64> > tmp_774_fu_282_p1;
    sc_signal< sc_lv<64> > tmp_777_fu_298_p1;
    sc_signal< sc_lv<64> > tmp_772_fu_314_p1;
    sc_signal< sc_lv<64> > tmp_755_i_fu_395_p1;
    sc_signal< sc_lv<64> > tmp_756_i_fu_400_p1;
    sc_signal< sc_lv<32> > tmp_778_fu_302_p2;
    sc_signal< sc_lv<32> > tmp_773_fu_341_p2;
    sc_signal< sc_lv<32> > tmp_i_cast_fu_378_p1;
    sc_signal< sc_lv<32> > grp_fu_435_p3;
    sc_signal< sc_lv<32> > tmp_757_i_fu_423_p2;
    sc_signal< sc_lv<32> > tmp_758_i_cast_fu_430_p1;
    sc_signal< sc_lv<32> > tmp_775_fu_293_p1;
    sc_signal< sc_lv<6> > tmp_770_fu_319_p2;
    sc_signal< sc_lv<32> > tmp2_i_fu_336_p2;
    sc_signal< sc_lv<25> > tmp_759_fu_364_p4;
    sc_signal< sc_lv<7> > tmp_779_fu_360_p1;
    sc_signal< sc_lv<24> > t_s_fu_409_p4;
    sc_signal< sc_lv<32> > t_8_fu_419_p1;
    sc_signal< sc_lv<8> > tmp_780_fu_405_p1;
    sc_signal< sc_lv<6> > grp_fu_435_p0;
    sc_signal< sc_lv<25> > grp_fu_435_p1;
    sc_signal< sc_lv<1> > exitcond1_i_fu_348_p2;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    sc_signal< sc_lv<31> > grp_fu_435_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<64> ap_const_lv64_1F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<31> ap_const_lv31_13;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_270_p2();
    void thread_exitcond1_i_fu_348_p2();
    void thread_exitcond2_fu_253_p2();
    void thread_exitcond3_fu_236_p2();
    void thread_exitcond_fu_308_p2();
    void thread_exitcond_i_fu_383_p2();
    void thread_grp_fu_435_p0();
    void thread_grp_fu_435_p1();
    void thread_grp_fu_435_p10();
    void thread_i_45_fu_242_p2();
    void thread_i_46_fu_259_p2();
    void thread_i_47_fu_330_p2();
    void thread_i_48_fu_389_p2();
    void thread_j_2_fu_276_p2();
    void thread_r_v_addr_13_reg_531();
    void thread_r_v_address0();
    void thread_r_v_address1();
    void thread_r_v_ce0();
    void thread_r_v_ce1();
    void thread_r_v_d0();
    void thread_r_v_d1();
    void thread_r_v_we0();
    void thread_r_v_we1();
    void thread_rep_fu_354_p2();
    void thread_t_8_fu_419_p1();
    void thread_t_address0();
    void thread_t_ce0();
    void thread_t_d0();
    void thread_t_s_fu_409_p4();
    void thread_t_we0();
    void thread_tmp2_i_fu_336_p2();
    void thread_tmp_755_i_fu_395_p1();
    void thread_tmp_756_i_fu_400_p1();
    void thread_tmp_757_i_fu_423_p2();
    void thread_tmp_758_i_cast_fu_430_p1();
    void thread_tmp_759_fu_364_p4();
    void thread_tmp_770_fu_319_p2();
    void thread_tmp_771_fu_325_p1();
    void thread_tmp_772_fu_314_p1();
    void thread_tmp_773_fu_341_p2();
    void thread_tmp_774_fu_282_p1();
    void thread_tmp_775_fu_293_p1();
    void thread_tmp_775_fu_293_p2();
    void thread_tmp_776_fu_287_p2();
    void thread_tmp_777_fu_298_p1();
    void thread_tmp_778_fu_302_p2();
    void thread_tmp_779_fu_360_p1();
    void thread_tmp_780_fu_405_p1();
    void thread_tmp_fu_248_p1();
    void thread_tmp_i_cast_fu_378_p1();
    void thread_tmp_s_fu_265_p1();
    void thread_y_v_address0();
    void thread_y_v_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
