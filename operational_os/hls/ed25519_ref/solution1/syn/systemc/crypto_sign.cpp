// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sign.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sign::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sign::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<74> crypto_sign::ap_ST_fsm_state1 = "1";
const sc_lv<74> crypto_sign::ap_ST_fsm_state2 = "10";
const sc_lv<74> crypto_sign::ap_ST_fsm_state3 = "100";
const sc_lv<74> crypto_sign::ap_ST_fsm_state4 = "1000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state5 = "10000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state6 = "100000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state7 = "1000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state8 = "10000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state9 = "100000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state10 = "1000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state11 = "10000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state12 = "100000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<74> crypto_sign::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> crypto_sign::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> crypto_sign::ap_const_lv32_10 = "10000";
const sc_lv<1> crypto_sign::ap_const_lv1_0 = "0";
const sc_lv<32> crypto_sign::ap_const_lv32_17 = "10111";
const sc_lv<32> crypto_sign::ap_const_lv32_30 = "110000";
const sc_lv<32> crypto_sign::ap_const_lv32_37 = "110111";
const int crypto_sign::C_S_AXI_DATA_WIDTH = "100000";
const int crypto_sign::C_M_AXI_MEM_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int crypto_sign::C_M_AXI_MEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int crypto_sign::C_M_AXI_MEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int crypto_sign::C_M_AXI_MEM_CACHE_VALUE = "11";
const int crypto_sign::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> crypto_sign::ap_const_lv32_F = "1111";
const sc_lv<32> crypto_sign::ap_const_lv32_2D = "101101";
const sc_lv<32> crypto_sign::ap_const_lv32_19 = "11001";
const sc_lv<32> crypto_sign::ap_const_lv32_39 = "111001";
const sc_lv<32> crypto_sign::ap_const_lv32_1 = "1";
const sc_lv<32> crypto_sign::ap_const_lv32_2 = "10";
const sc_lv<32> crypto_sign::ap_const_lv32_6 = "110";
const sc_lv<32> crypto_sign::ap_const_lv32_9 = "1001";
const sc_lv<32> crypto_sign::ap_const_lv32_B = "1011";
const bool crypto_sign::ap_const_boolean_0 = false;
const sc_lv<32> crypto_sign::ap_const_lv32_1B = "11011";
const sc_lv<32> crypto_sign::ap_const_lv32_25 = "100101";
const sc_lv<32> crypto_sign::ap_const_lv32_28 = "101000";
const sc_lv<32> crypto_sign::ap_const_lv32_2F = "101111";
const sc_lv<32> crypto_sign::ap_const_lv32_3B = "111011";
const sc_lv<32> crypto_sign::ap_const_lv32_3E = "111110";
const sc_lv<32> crypto_sign::ap_const_lv32_40 = "1000000";
const sc_lv<32> crypto_sign::ap_const_lv32_46 = "1000110";
const sc_lv<32> crypto_sign::ap_const_lv32_48 = "1001000";
const sc_lv<6> crypto_sign::ap_const_lv6_0 = "000000";
const sc_lv<32> crypto_sign::ap_const_lv32_3 = "11";
const sc_lv<1> crypto_sign::ap_const_lv1_1 = "1";
const sc_lv<32> crypto_sign::ap_const_lv32_A = "1010";
const sc_lv<32> crypto_sign::ap_const_lv32_C = "1100";
const sc_lv<32> crypto_sign::ap_const_lv32_18 = "11000";
const sc_lv<8> crypto_sign::ap_const_lv8_0 = "00000000";
const sc_lv<32> crypto_sign::ap_const_lv32_16 = "10110";
const sc_lv<7> crypto_sign::ap_const_lv7_0 = "0000000";
const sc_lv<32> crypto_sign::ap_const_lv32_1A = "11010";
const sc_lv<32> crypto_sign::ap_const_lv32_1C = "11100";
const sc_lv<32> crypto_sign::ap_const_lv32_38 = "111000";
const sc_lv<32> crypto_sign::ap_const_lv32_36 = "110110";
const sc_lv<32> crypto_sign::ap_const_lv32_3A = "111010";
const sc_lv<32> crypto_sign::ap_const_lv32_3C = "111100";
const sc_lv<32> crypto_sign::ap_const_lv32_3D = "111101";
const sc_lv<32> crypto_sign::ap_const_lv32_3F = "111111";
const sc_lv<7> crypto_sign::ap_const_lv7_20 = "100000";
const sc_lv<32> crypto_sign::ap_const_lv32_45 = "1000101";
const sc_lv<32> crypto_sign::ap_const_lv32_47 = "1000111";
const sc_lv<32> crypto_sign::ap_const_lv32_49 = "1001001";
const sc_lv<32> crypto_sign::ap_const_lv32_4 = "100";
const sc_lv<32> crypto_sign::ap_const_lv32_D = "1101";
const sc_lv<32> crypto_sign::ap_const_lv32_1D = "11101";
const sc_lv<32> crypto_sign::ap_const_lv32_5 = "101";
const sc_lv<32> crypto_sign::ap_const_lv32_7 = "111";
const sc_lv<32> crypto_sign::ap_const_lv32_8 = "1000";
const sc_lv<32> crypto_sign::ap_const_lv32_2A = "101010";
const sc_lv<32> crypto_sign::ap_const_lv32_2B = "101011";
const sc_lv<32> crypto_sign::ap_const_lv32_E = "1110";
const sc_lv<32> crypto_sign::ap_const_lv32_2C = "101100";
const sc_lv<32> crypto_sign::ap_const_lv32_2E = "101110";
const sc_lv<64> crypto_sign::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> crypto_sign::ap_const_lv32_1E = "11110";
const sc_lv<32> crypto_sign::ap_const_lv32_1F = "11111";
const sc_lv<32> crypto_sign::ap_const_lv32_42 = "1000010";
const sc_lv<32> crypto_sign::ap_const_lv32_43 = "1000011";
const sc_lv<32> crypto_sign::ap_const_lv32_41 = "1000001";
const sc_lv<32> crypto_sign::ap_const_lv32_20 = "100000";
const sc_lv<32> crypto_sign::ap_const_lv32_21 = "100001";
const sc_lv<32> crypto_sign::ap_const_lv32_26 = "100110";
const sc_lv<32> crypto_sign::ap_const_lv32_27 = "100111";
const sc_lv<32> crypto_sign::ap_const_lv32_24 = "100100";
const sc_lv<32> crypto_sign::ap_const_lv32_22 = "100010";
const sc_lv<32> crypto_sign::ap_const_lv32_23 = "100011";
const sc_lv<32> crypto_sign::ap_const_lv32_44 = "1000100";
const sc_lv<64> crypto_sign::ap_const_lv64_1F = "11111";
const sc_lv<32> crypto_sign::ap_const_lv32_80 = "10000000";
const sc_lv<3> crypto_sign::ap_const_lv3_0 = "000";
const sc_lv<2> crypto_sign::ap_const_lv2_0 = "00";
const sc_lv<4> crypto_sign::ap_const_lv4_0 = "0000";
const sc_lv<32> crypto_sign::ap_const_lv32_29 = "101001";
const sc_lv<6> crypto_sign::ap_const_lv6_1 = "1";
const sc_lv<6> crypto_sign::ap_const_lv6_3F = "111111";
const sc_lv<6> crypto_sign::ap_const_lv6_20 = "100000";
const sc_lv<8> crypto_sign::ap_const_lv8_80 = "10000000";
const sc_lv<8> crypto_sign::ap_const_lv8_1 = "1";
const sc_lv<7> crypto_sign::ap_const_lv7_40 = "1000000";
const sc_lv<7> crypto_sign::ap_const_lv7_1 = "1";
const bool crypto_sign::ap_const_boolean_1 = true;

crypto_sign::crypto_sign(sc_module_name name) : sc_module(name), mVcdFile(0) {
    crypto_sign_AXILiteS_s_axi_U = new crypto_sign_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("crypto_sign_AXILiteS_s_axi_U");
    crypto_sign_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    crypto_sign_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    crypto_sign_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    crypto_sign_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    crypto_sign_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    crypto_sign_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    crypto_sign_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    crypto_sign_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    crypto_sign_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    crypto_sign_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    crypto_sign_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    crypto_sign_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    crypto_sign_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    crypto_sign_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    crypto_sign_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    crypto_sign_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    crypto_sign_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    crypto_sign_AXILiteS_s_axi_U->ACLK(ap_clk);
    crypto_sign_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    crypto_sign_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    crypto_sign_AXILiteS_s_axi_U->ap_start(ap_start);
    crypto_sign_AXILiteS_s_axi_U->interrupt(interrupt);
    crypto_sign_AXILiteS_s_axi_U->ap_ready(ap_ready);
    crypto_sign_AXILiteS_s_axi_U->ap_done(ap_done);
    crypto_sign_AXILiteS_s_axi_U->ap_idle(ap_idle);
    crypto_sign_AXILiteS_s_axi_U->ap_return(ap_var_for_const1);
    crypto_sign_AXILiteS_s_axi_U->num_blocks(num_blocks);
    crypto_sign_AXILiteS_s_axi_U->sk_address0(sk_address0);
    crypto_sign_AXILiteS_s_axi_U->sk_ce0(sk_ce0);
    crypto_sign_AXILiteS_s_axi_U->sk_q0(sk_q0);
    crypto_sign_AXILiteS_s_axi_U->signature_out_address0(signature_out_address0);
    crypto_sign_AXILiteS_s_axi_U->signature_out_ce0(signature_out_ce0);
    crypto_sign_AXILiteS_s_axi_U->signature_out_we0(signature_out_we0);
    crypto_sign_AXILiteS_s_axi_U->signature_out_d0(signature_q0);
    crypto_sign_mem_m_axi_U = new crypto_sign_mem_m_axi<8,32,5,16,16,16,16,C_M_AXI_MEM_ID_WIDTH,C_M_AXI_MEM_ADDR_WIDTH,C_M_AXI_MEM_DATA_WIDTH,C_M_AXI_MEM_AWUSER_WIDTH,C_M_AXI_MEM_ARUSER_WIDTH,C_M_AXI_MEM_WUSER_WIDTH,C_M_AXI_MEM_RUSER_WIDTH,C_M_AXI_MEM_BUSER_WIDTH,C_M_AXI_MEM_TARGET_ADDR,C_M_AXI_MEM_USER_VALUE,C_M_AXI_MEM_PROT_VALUE,C_M_AXI_MEM_CACHE_VALUE>("crypto_sign_mem_m_axi_U");
    crypto_sign_mem_m_axi_U->AWVALID(m_axi_mem_AWVALID);
    crypto_sign_mem_m_axi_U->AWREADY(m_axi_mem_AWREADY);
    crypto_sign_mem_m_axi_U->AWADDR(m_axi_mem_AWADDR);
    crypto_sign_mem_m_axi_U->AWID(m_axi_mem_AWID);
    crypto_sign_mem_m_axi_U->AWLEN(m_axi_mem_AWLEN);
    crypto_sign_mem_m_axi_U->AWSIZE(m_axi_mem_AWSIZE);
    crypto_sign_mem_m_axi_U->AWBURST(m_axi_mem_AWBURST);
    crypto_sign_mem_m_axi_U->AWLOCK(m_axi_mem_AWLOCK);
    crypto_sign_mem_m_axi_U->AWCACHE(m_axi_mem_AWCACHE);
    crypto_sign_mem_m_axi_U->AWPROT(m_axi_mem_AWPROT);
    crypto_sign_mem_m_axi_U->AWQOS(m_axi_mem_AWQOS);
    crypto_sign_mem_m_axi_U->AWREGION(m_axi_mem_AWREGION);
    crypto_sign_mem_m_axi_U->AWUSER(m_axi_mem_AWUSER);
    crypto_sign_mem_m_axi_U->WVALID(m_axi_mem_WVALID);
    crypto_sign_mem_m_axi_U->WREADY(m_axi_mem_WREADY);
    crypto_sign_mem_m_axi_U->WDATA(m_axi_mem_WDATA);
    crypto_sign_mem_m_axi_U->WSTRB(m_axi_mem_WSTRB);
    crypto_sign_mem_m_axi_U->WLAST(m_axi_mem_WLAST);
    crypto_sign_mem_m_axi_U->WID(m_axi_mem_WID);
    crypto_sign_mem_m_axi_U->WUSER(m_axi_mem_WUSER);
    crypto_sign_mem_m_axi_U->ARVALID(m_axi_mem_ARVALID);
    crypto_sign_mem_m_axi_U->ARREADY(m_axi_mem_ARREADY);
    crypto_sign_mem_m_axi_U->ARADDR(m_axi_mem_ARADDR);
    crypto_sign_mem_m_axi_U->ARID(m_axi_mem_ARID);
    crypto_sign_mem_m_axi_U->ARLEN(m_axi_mem_ARLEN);
    crypto_sign_mem_m_axi_U->ARSIZE(m_axi_mem_ARSIZE);
    crypto_sign_mem_m_axi_U->ARBURST(m_axi_mem_ARBURST);
    crypto_sign_mem_m_axi_U->ARLOCK(m_axi_mem_ARLOCK);
    crypto_sign_mem_m_axi_U->ARCACHE(m_axi_mem_ARCACHE);
    crypto_sign_mem_m_axi_U->ARPROT(m_axi_mem_ARPROT);
    crypto_sign_mem_m_axi_U->ARQOS(m_axi_mem_ARQOS);
    crypto_sign_mem_m_axi_U->ARREGION(m_axi_mem_ARREGION);
    crypto_sign_mem_m_axi_U->ARUSER(m_axi_mem_ARUSER);
    crypto_sign_mem_m_axi_U->RVALID(m_axi_mem_RVALID);
    crypto_sign_mem_m_axi_U->RREADY(m_axi_mem_RREADY);
    crypto_sign_mem_m_axi_U->RDATA(m_axi_mem_RDATA);
    crypto_sign_mem_m_axi_U->RLAST(m_axi_mem_RLAST);
    crypto_sign_mem_m_axi_U->RID(m_axi_mem_RID);
    crypto_sign_mem_m_axi_U->RUSER(m_axi_mem_RUSER);
    crypto_sign_mem_m_axi_U->RRESP(m_axi_mem_RRESP);
    crypto_sign_mem_m_axi_U->BVALID(m_axi_mem_BVALID);
    crypto_sign_mem_m_axi_U->BREADY(m_axi_mem_BREADY);
    crypto_sign_mem_m_axi_U->BRESP(m_axi_mem_BRESP);
    crypto_sign_mem_m_axi_U->BID(m_axi_mem_BID);
    crypto_sign_mem_m_axi_U->BUSER(m_axi_mem_BUSER);
    crypto_sign_mem_m_axi_U->ACLK(ap_clk);
    crypto_sign_mem_m_axi_U->ARESET(ap_rst_n_inv);
    crypto_sign_mem_m_axi_U->ACLK_EN(ap_var_for_const0);
    crypto_sign_mem_m_axi_U->I_ARVALID(mem_ARVALID);
    crypto_sign_mem_m_axi_U->I_ARREADY(mem_ARREADY);
    crypto_sign_mem_m_axi_U->I_ARADDR(mem_ARADDR);
    crypto_sign_mem_m_axi_U->I_ARID(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_ARLEN(ap_var_for_const3);
    crypto_sign_mem_m_axi_U->I_ARSIZE(ap_var_for_const4);
    crypto_sign_mem_m_axi_U->I_ARLOCK(ap_var_for_const5);
    crypto_sign_mem_m_axi_U->I_ARCACHE(ap_var_for_const6);
    crypto_sign_mem_m_axi_U->I_ARQOS(ap_var_for_const6);
    crypto_sign_mem_m_axi_U->I_ARPROT(ap_var_for_const4);
    crypto_sign_mem_m_axi_U->I_ARUSER(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_ARBURST(ap_var_for_const5);
    crypto_sign_mem_m_axi_U->I_ARREGION(ap_var_for_const6);
    crypto_sign_mem_m_axi_U->I_RVALID(mem_RVALID);
    crypto_sign_mem_m_axi_U->I_RREADY(mem_RREADY);
    crypto_sign_mem_m_axi_U->I_RDATA(mem_RDATA);
    crypto_sign_mem_m_axi_U->I_RID(mem_RID);
    crypto_sign_mem_m_axi_U->I_RUSER(mem_RUSER);
    crypto_sign_mem_m_axi_U->I_RRESP(mem_RRESP);
    crypto_sign_mem_m_axi_U->I_RLAST(mem_RLAST);
    crypto_sign_mem_m_axi_U->I_AWVALID(ap_var_for_const7);
    crypto_sign_mem_m_axi_U->I_AWREADY(mem_AWREADY);
    crypto_sign_mem_m_axi_U->I_AWADDR(ap_var_for_const1);
    crypto_sign_mem_m_axi_U->I_AWID(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_AWLEN(ap_var_for_const1);
    crypto_sign_mem_m_axi_U->I_AWSIZE(ap_var_for_const4);
    crypto_sign_mem_m_axi_U->I_AWLOCK(ap_var_for_const5);
    crypto_sign_mem_m_axi_U->I_AWCACHE(ap_var_for_const6);
    crypto_sign_mem_m_axi_U->I_AWQOS(ap_var_for_const6);
    crypto_sign_mem_m_axi_U->I_AWPROT(ap_var_for_const4);
    crypto_sign_mem_m_axi_U->I_AWUSER(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_AWBURST(ap_var_for_const5);
    crypto_sign_mem_m_axi_U->I_AWREGION(ap_var_for_const6);
    crypto_sign_mem_m_axi_U->I_WVALID(ap_var_for_const7);
    crypto_sign_mem_m_axi_U->I_WREADY(mem_WREADY);
    crypto_sign_mem_m_axi_U->I_WDATA(ap_var_for_const8);
    crypto_sign_mem_m_axi_U->I_WID(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_WUSER(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_WLAST(ap_var_for_const7);
    crypto_sign_mem_m_axi_U->I_WSTRB(ap_var_for_const2);
    crypto_sign_mem_m_axi_U->I_BVALID(mem_BVALID);
    crypto_sign_mem_m_axi_U->I_BREADY(ap_var_for_const7);
    crypto_sign_mem_m_axi_U->I_BRESP(mem_BRESP);
    crypto_sign_mem_m_axi_U->I_BID(mem_BID);
    crypto_sign_mem_m_axi_U->I_BUSER(mem_BUSER);
    t_11_U = new crypto_sign_t_11("t_11_U");
    t_11_U->clk(ap_clk);
    t_11_U->reset(ap_rst_n_inv);
    t_11_U->address0(t_11_address0);
    t_11_U->ce0(t_11_ce0);
    t_11_U->we0(t_11_we0);
    t_11_U->d0(t_11_d0);
    t_11_U->q0(t_11_q0);
    t_10_U = new crypto_sign_t_11("t_10_U");
    t_10_U->clk(ap_clk);
    t_10_U->reset(ap_rst_n_inv);
    t_10_U->address0(t_10_address0);
    t_10_U->ce0(t_10_ce0);
    t_10_U->we0(t_10_we0);
    t_10_U->d0(t_10_d0);
    t_10_U->q0(t_10_q0);
    tx_v_U = new choose_t_v_v("tx_v_U");
    tx_v_U->clk(ap_clk);
    tx_v_U->reset(ap_rst_n_inv);
    tx_v_U->address0(tx_v_address0);
    tx_v_U->ce0(tx_v_ce0);
    tx_v_U->we0(tx_v_we0);
    tx_v_U->d0(grp_crypto_sign_ed25519_18_fu_849_r_v_d0);
    tx_v_U->q0(tx_v_q0);
    tx_v_U->address1(tx_v_address1);
    tx_v_U->ce1(tx_v_ce1);
    tx_v_U->we1(tx_v_we1);
    tx_v_U->d1(grp_crypto_sign_ed25519_18_fu_849_r_v_d1);
    tx_v_U->q1(tx_v_q1);
    ty_v_U = new choose_t_v_v("ty_v_U");
    ty_v_U->clk(ap_clk);
    ty_v_U->reset(ap_rst_n_inv);
    ty_v_U->address0(ty_v_address0);
    ty_v_U->ce0(ty_v_ce0);
    ty_v_U->we0(ty_v_we0);
    ty_v_U->d0(grp_crypto_sign_ed25519_18_fu_849_r_v_d0);
    ty_v_U->q0(ty_v_q0);
    ty_v_U->address1(ty_v_address1);
    ty_v_U->ce1(ty_v_ce1);
    ty_v_U->we1(ty_v_we1);
    ty_v_U->d1(grp_crypto_sign_ed25519_18_fu_849_r_v_d1);
    ty_v_U->q1(ty_v_q1);
    zi_v_U = new choose_t_v_v("zi_v_U");
    zi_v_U->clk(ap_clk);
    zi_v_U->reset(ap_rst_n_inv);
    zi_v_U->address0(zi_v_address0);
    zi_v_U->ce0(zi_v_ce0);
    zi_v_U->we0(zi_v_we0);
    zi_v_U->d0(grp_crypto_sign_ed25519_19_fu_832_r_v_d0);
    zi_v_U->q0(zi_v_q0);
    zi_v_U->address1(grp_crypto_sign_ed25519_19_fu_832_r_v_address1);
    zi_v_U->ce1(zi_v_ce1);
    zi_v_U->we1(zi_v_we1);
    zi_v_U->d1(grp_crypto_sign_ed25519_19_fu_832_r_v_d1);
    zi_v_U->q1(zi_v_q1);
    t_U = new crypto_sign_t_11("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst_n_inv);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    pk_U = new reduce_add_sub_t("pk_U");
    pk_U->clk(ap_clk);
    pk_U->reset(ap_rst_n_inv);
    pk_U->address0(pk_address0);
    pk_U->ce0(pk_ce0);
    pk_U->we0(pk_we0);
    pk_U->d0(sk_q0);
    pk_U->q0(pk_q0);
    az_U = new crypto_sign_az("az_U");
    az_U->clk(ap_clk);
    az_U->reset(ap_rst_n_inv);
    az_U->address0(az_address0);
    az_U->ce0(az_ce0);
    az_U->we0(az_we0);
    az_U->d0(az_d0);
    az_U->q0(az_q0);
    az_U->address1(az_address1);
    az_U->ce1(az_ce1);
    az_U->we1(az_we1);
    az_U->d1(az_d1);
    az_U->q1(az_q1);
    nonce_U = new crypto_sign_nonce("nonce_U");
    nonce_U->clk(ap_clk);
    nonce_U->reset(ap_rst_n_inv);
    nonce_U->address0(nonce_address0);
    nonce_U->ce0(nonce_ce0);
    nonce_U->we0(nonce_we0);
    nonce_U->d0(grp_sha512_final_fu_693_out_r_d0);
    nonce_U->q0(nonce_q0);
    nonce_U->address1(grp_sha512_final_fu_693_out_r_address1);
    nonce_U->ce1(nonce_ce1);
    nonce_U->we1(nonce_we1);
    nonce_U->d1(grp_sha512_final_fu_693_out_r_d1);
    hram_U = new crypto_sign_nonce("hram_U");
    hram_U->clk(ap_clk);
    hram_U->reset(ap_rst_n_inv);
    hram_U->address0(hram_address0);
    hram_U->ce0(hram_ce0);
    hram_U->we0(hram_we0);
    hram_U->d0(grp_sha512_final_fu_693_out_r_d0);
    hram_U->q0(hram_q0);
    hram_U->address1(grp_sha512_final_fu_693_out_r_address1);
    hram_U->ce1(hram_ce1);
    hram_U->we1(hram_we1);
    hram_U->d1(grp_sha512_final_fu_693_out_r_d1);
    signature_U = new crypto_sign_signa2iS("signature_U");
    signature_U->clk(ap_clk);
    signature_U->reset(ap_rst_n_inv);
    signature_U->address0(signature_address0);
    signature_U->ce0(signature_ce0);
    signature_U->we0(signature_we0);
    signature_U->d0(signature_d0);
    signature_U->q0(signature_q0);
    temp_buf_U = new crypto_sign_temp_3i2("temp_buf_U");
    temp_buf_U->clk(ap_clk);
    temp_buf_U->reset(ap_rst_n_inv);
    temp_buf_U->address0(temp_buf_address0);
    temp_buf_U->ce0(temp_buf_ce0);
    temp_buf_U->we0(temp_buf_we0);
    temp_buf_U->d0(reg_892);
    temp_buf_U->q0(temp_buf_q0);
    sck_v_U = new crypto_sign_sck_v("sck_v_U");
    sck_v_U->clk(ap_clk);
    sck_v_U->reset(ap_rst_n_inv);
    sck_v_U->address0(sck_v_address0);
    sck_v_U->ce0(sck_v_ce0);
    sck_v_U->we0(sck_v_we0);
    sck_v_U->d0(grp_barrett_reduce_fu_822_r_v_d0);
    sck_v_U->q0(sck_v_q0);
    sck_v_U->address1(grp_crypto_sign_ed25519_13_fu_797_s_v_address1);
    sck_v_U->ce1(sck_v_ce1);
    sck_v_U->q1(sck_v_q1);
    scs_v_U = new choose_t_v_v("scs_v_U");
    scs_v_U->clk(ap_clk);
    scs_v_U->reset(ap_rst_n_inv);
    scs_v_U->address0(scs_v_address0);
    scs_v_U->ce0(scs_v_ce0);
    scs_v_U->we0(scs_v_we0);
    scs_v_U->d0(scs_v_d0);
    scs_v_U->q0(scs_v_q0);
    scs_v_U->address1(grp_crypto_sign_ed25519_16_fu_856_r_v_address1);
    scs_v_U->ce1(scs_v_ce1);
    scs_v_U->we1(scs_v_we1);
    scs_v_U->d1(grp_crypto_sign_ed25519_16_fu_856_r_v_d1);
    scs_v_U->q1(scs_v_q1);
    scsk_v_U = new choose_t_t_v("scsk_v_U");
    scsk_v_U->clk(ap_clk);
    scsk_v_U->reset(ap_rst_n_inv);
    scsk_v_U->address0(scsk_v_address0);
    scsk_v_U->ce0(scsk_v_ce0);
    scsk_v_U->we0(scsk_v_we0);
    scsk_v_U->d0(grp_barrett_reduce_fu_822_r_v_d0);
    scsk_v_U->q0(scsk_v_q0);
    ger_x_v_U = new choose_t_v_v("ger_x_v_U");
    ger_x_v_U->clk(ap_clk);
    ger_x_v_U->reset(ap_rst_n_inv);
    ger_x_v_U->address0(ger_x_v_address0);
    ger_x_v_U->ce0(ger_x_v_ce0);
    ger_x_v_U->we0(ger_x_v_we0);
    ger_x_v_U->d0(grp_crypto_sign_ed25519_13_fu_797_r_x_v_d0);
    ger_x_v_U->q0(ger_x_v_q0);
    ger_x_v_U->address1(grp_crypto_sign_ed25519_13_fu_797_r_x_v_address1);
    ger_x_v_U->ce1(ger_x_v_ce1);
    ger_x_v_U->we1(ger_x_v_we1);
    ger_x_v_U->d1(grp_crypto_sign_ed25519_13_fu_797_r_x_v_d1);
    ger_x_v_U->q1(ger_x_v_q1);
    ger_y_v_U = new choose_t_v_v("ger_y_v_U");
    ger_y_v_U->clk(ap_clk);
    ger_y_v_U->reset(ap_rst_n_inv);
    ger_y_v_U->address0(ger_y_v_address0);
    ger_y_v_U->ce0(ger_y_v_ce0);
    ger_y_v_U->we0(ger_y_v_we0);
    ger_y_v_U->d0(grp_crypto_sign_ed25519_13_fu_797_r_y_v_d0);
    ger_y_v_U->q0(ger_y_v_q0);
    ger_y_v_U->address1(grp_crypto_sign_ed25519_13_fu_797_r_y_v_address1);
    ger_y_v_U->ce1(ger_y_v_ce1);
    ger_y_v_U->we1(ger_y_v_we1);
    ger_y_v_U->d1(grp_crypto_sign_ed25519_13_fu_797_r_y_v_d1);
    ger_y_v_U->q1(ger_y_v_q1);
    ger_z_v_U = new choose_t_v_v("ger_z_v_U");
    ger_z_v_U->clk(ap_clk);
    ger_z_v_U->reset(ap_rst_n_inv);
    ger_z_v_U->address0(ger_z_v_address0);
    ger_z_v_U->ce0(ger_z_v_ce0);
    ger_z_v_U->we0(ger_z_v_we0);
    ger_z_v_U->d0(grp_crypto_sign_ed25519_13_fu_797_r_z_v_d0);
    ger_z_v_U->q0(ger_z_v_q0);
    ger_z_v_U->address1(grp_crypto_sign_ed25519_13_fu_797_r_z_v_address1);
    ger_z_v_U->ce1(ger_z_v_ce1);
    ger_z_v_U->we1(ger_z_v_we1);
    ger_z_v_U->d1(grp_crypto_sign_ed25519_13_fu_797_r_z_v_d1);
    ger_z_v_U->q1(ger_z_v_q1);
    ger_t_v_U = new choose_t_v_v("ger_t_v_U");
    ger_t_v_U->clk(ap_clk);
    ger_t_v_U->reset(ap_rst_n_inv);
    ger_t_v_U->address0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_address0);
    ger_t_v_U->ce0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce0);
    ger_t_v_U->we0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_we0);
    ger_t_v_U->d0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_d0);
    ger_t_v_U->q0(ger_t_v_q0);
    ger_t_v_U->address1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_address1);
    ger_t_v_U->ce1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce1);
    ger_t_v_U->we1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_we1);
    ger_t_v_U->d1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_d1);
    ger_t_v_U->q1(ger_t_v_q1);
    hash_state_U = new crypto_sign_hash_4jc("hash_state_U");
    hash_state_U->clk(ap_clk);
    hash_state_U->reset(ap_rst_n_inv);
    hash_state_U->address0(hash_state_address0);
    hash_state_U->ce0(hash_state_ce0);
    hash_state_U->we0(hash_state_we0);
    hash_state_U->d0(hash_state_d0);
    hash_state_U->q0(hash_state_q0);
    hash_state_U->address1(grp_sha512_init_fu_653_md_state_address1);
    hash_state_U->ce1(hash_state_ce1);
    hash_state_U->we1(hash_state_we1);
    hash_state_U->d1(grp_sha512_init_fu_653_md_state_d1);
    hash_buf_U = new crypto_sign_hash_5jm("hash_buf_U");
    hash_buf_U->clk(ap_clk);
    hash_buf_U->reset(ap_rst_n_inv);
    hash_buf_U->address0(hash_buf_address0);
    hash_buf_U->ce0(hash_buf_ce0);
    hash_buf_U->we0(hash_buf_we0);
    hash_buf_U->d0(hash_buf_d0);
    hash_buf_U->q0(hash_buf_q0);
    hash_buf_U->address1(grp_sha512_final_fu_693_md_buf_address1);
    hash_buf_U->ce1(hash_buf_ce1);
    hash_buf_U->we1(hash_buf_we1);
    hash_buf_U->d1(grp_sha512_final_fu_693_md_buf_d1);
    hash_buf_U->q1(hash_buf_q1);
    grp_sha512_init_fu_653 = new sha512_init("grp_sha512_init_fu_653");
    grp_sha512_init_fu_653->ap_clk(ap_clk);
    grp_sha512_init_fu_653->ap_rst(ap_rst_n_inv);
    grp_sha512_init_fu_653->ap_start(grp_sha512_init_fu_653_ap_start);
    grp_sha512_init_fu_653->ap_done(grp_sha512_init_fu_653_ap_done);
    grp_sha512_init_fu_653->ap_idle(grp_sha512_init_fu_653_ap_idle);
    grp_sha512_init_fu_653->ap_ready(grp_sha512_init_fu_653_ap_ready);
    grp_sha512_init_fu_653->md_state_address0(grp_sha512_init_fu_653_md_state_address0);
    grp_sha512_init_fu_653->md_state_ce0(grp_sha512_init_fu_653_md_state_ce0);
    grp_sha512_init_fu_653->md_state_we0(grp_sha512_init_fu_653_md_state_we0);
    grp_sha512_init_fu_653->md_state_d0(grp_sha512_init_fu_653_md_state_d0);
    grp_sha512_init_fu_653->md_state_address1(grp_sha512_init_fu_653_md_state_address1);
    grp_sha512_init_fu_653->md_state_ce1(grp_sha512_init_fu_653_md_state_ce1);
    grp_sha512_init_fu_653->md_state_we1(grp_sha512_init_fu_653_md_state_we1);
    grp_sha512_init_fu_653->md_state_d1(grp_sha512_init_fu_653_md_state_d1);
    grp_sha512_update_32_fu_671 = new sha512_update_32("grp_sha512_update_32_fu_671");
    grp_sha512_update_32_fu_671->ap_clk(ap_clk);
    grp_sha512_update_32_fu_671->ap_rst(ap_rst_n_inv);
    grp_sha512_update_32_fu_671->ap_start(grp_sha512_update_32_fu_671_ap_start);
    grp_sha512_update_32_fu_671->ap_done(grp_sha512_update_32_fu_671_ap_done);
    grp_sha512_update_32_fu_671->ap_idle(grp_sha512_update_32_fu_671_ap_idle);
    grp_sha512_update_32_fu_671->ap_ready(grp_sha512_update_32_fu_671_ap_ready);
    grp_sha512_update_32_fu_671->md_state_address0(grp_sha512_update_32_fu_671_md_state_address0);
    grp_sha512_update_32_fu_671->md_state_ce0(grp_sha512_update_32_fu_671_md_state_ce0);
    grp_sha512_update_32_fu_671->md_state_we0(grp_sha512_update_32_fu_671_md_state_we0);
    grp_sha512_update_32_fu_671->md_state_d0(grp_sha512_update_32_fu_671_md_state_d0);
    grp_sha512_update_32_fu_671->md_state_q0(hash_state_q0);
    grp_sha512_update_32_fu_671->md_buf_address0(grp_sha512_update_32_fu_671_md_buf_address0);
    grp_sha512_update_32_fu_671->md_buf_ce0(grp_sha512_update_32_fu_671_md_buf_ce0);
    grp_sha512_update_32_fu_671->md_buf_we0(grp_sha512_update_32_fu_671_md_buf_we0);
    grp_sha512_update_32_fu_671->md_buf_d0(grp_sha512_update_32_fu_671_md_buf_d0);
    grp_sha512_update_32_fu_671->md_buf_q0(hash_buf_q0);
    grp_sha512_update_32_fu_671->in_r_address0(grp_sha512_update_32_fu_671_in_r_address0);
    grp_sha512_update_32_fu_671->in_r_ce0(grp_sha512_update_32_fu_671_in_r_ce0);
    grp_sha512_update_32_fu_671->in_r_q0(sk_q0);
    grp_sha512_update_32_fu_671->ap_return_0(grp_sha512_update_32_fu_671_ap_return_0);
    grp_sha512_update_32_fu_671->ap_return_1(grp_sha512_update_32_fu_671_ap_return_1);
    grp_sha512_final_fu_693 = new sha512_final("grp_sha512_final_fu_693");
    grp_sha512_final_fu_693->ap_clk(ap_clk);
    grp_sha512_final_fu_693->ap_rst(ap_rst_n_inv);
    grp_sha512_final_fu_693->ap_start(grp_sha512_final_fu_693_ap_start);
    grp_sha512_final_fu_693->ap_done(grp_sha512_final_fu_693_ap_done);
    grp_sha512_final_fu_693->ap_idle(grp_sha512_final_fu_693_ap_idle);
    grp_sha512_final_fu_693->ap_ready(grp_sha512_final_fu_693_ap_ready);
    grp_sha512_final_fu_693->md_length_read(grp_sha512_final_fu_693_md_length_read);
    grp_sha512_final_fu_693->md_state_address0(grp_sha512_final_fu_693_md_state_address0);
    grp_sha512_final_fu_693->md_state_ce0(grp_sha512_final_fu_693_md_state_ce0);
    grp_sha512_final_fu_693->md_state_we0(grp_sha512_final_fu_693_md_state_we0);
    grp_sha512_final_fu_693->md_state_d0(grp_sha512_final_fu_693_md_state_d0);
    grp_sha512_final_fu_693->md_state_q0(hash_state_q0);
    grp_sha512_final_fu_693->md_curlen_read(grp_sha512_final_fu_693_md_curlen_read);
    grp_sha512_final_fu_693->md_buf_address0(grp_sha512_final_fu_693_md_buf_address0);
    grp_sha512_final_fu_693->md_buf_ce0(grp_sha512_final_fu_693_md_buf_ce0);
    grp_sha512_final_fu_693->md_buf_we0(grp_sha512_final_fu_693_md_buf_we0);
    grp_sha512_final_fu_693->md_buf_d0(grp_sha512_final_fu_693_md_buf_d0);
    grp_sha512_final_fu_693->md_buf_q0(hash_buf_q0);
    grp_sha512_final_fu_693->md_buf_address1(grp_sha512_final_fu_693_md_buf_address1);
    grp_sha512_final_fu_693->md_buf_ce1(grp_sha512_final_fu_693_md_buf_ce1);
    grp_sha512_final_fu_693->md_buf_we1(grp_sha512_final_fu_693_md_buf_we1);
    grp_sha512_final_fu_693->md_buf_d1(grp_sha512_final_fu_693_md_buf_d1);
    grp_sha512_final_fu_693->md_buf_q1(hash_buf_q1);
    grp_sha512_final_fu_693->out_r_address0(grp_sha512_final_fu_693_out_r_address0);
    grp_sha512_final_fu_693->out_r_ce0(grp_sha512_final_fu_693_out_r_ce0);
    grp_sha512_final_fu_693->out_r_we0(grp_sha512_final_fu_693_out_r_we0);
    grp_sha512_final_fu_693->out_r_d0(grp_sha512_final_fu_693_out_r_d0);
    grp_sha512_final_fu_693->out_r_address1(grp_sha512_final_fu_693_out_r_address1);
    grp_sha512_final_fu_693->out_r_ce1(grp_sha512_final_fu_693_out_r_ce1);
    grp_sha512_final_fu_693->out_r_we1(grp_sha512_final_fu_693_out_r_we1);
    grp_sha512_final_fu_693->out_r_d1(grp_sha512_final_fu_693_out_r_d1);
    grp_sha512_update_128_fu_731 = new sha512_update_128("grp_sha512_update_128_fu_731");
    grp_sha512_update_128_fu_731->ap_clk(ap_clk);
    grp_sha512_update_128_fu_731->ap_rst(ap_rst_n_inv);
    grp_sha512_update_128_fu_731->ap_start(grp_sha512_update_128_fu_731_ap_start);
    grp_sha512_update_128_fu_731->ap_done(grp_sha512_update_128_fu_731_ap_done);
    grp_sha512_update_128_fu_731->ap_idle(grp_sha512_update_128_fu_731_ap_idle);
    grp_sha512_update_128_fu_731->ap_ready(grp_sha512_update_128_fu_731_ap_ready);
    grp_sha512_update_128_fu_731->md_length_read(grp_sha512_update_128_fu_731_md_length_read);
    grp_sha512_update_128_fu_731->md_state_address0(grp_sha512_update_128_fu_731_md_state_address0);
    grp_sha512_update_128_fu_731->md_state_ce0(grp_sha512_update_128_fu_731_md_state_ce0);
    grp_sha512_update_128_fu_731->md_state_we0(grp_sha512_update_128_fu_731_md_state_we0);
    grp_sha512_update_128_fu_731->md_state_d0(grp_sha512_update_128_fu_731_md_state_d0);
    grp_sha512_update_128_fu_731->md_state_q0(hash_state_q0);
    grp_sha512_update_128_fu_731->md_curlen_read(grp_sha512_update_128_fu_731_md_curlen_read);
    grp_sha512_update_128_fu_731->md_buf_address0(grp_sha512_update_128_fu_731_md_buf_address0);
    grp_sha512_update_128_fu_731->md_buf_ce0(grp_sha512_update_128_fu_731_md_buf_ce0);
    grp_sha512_update_128_fu_731->md_buf_we0(grp_sha512_update_128_fu_731_md_buf_we0);
    grp_sha512_update_128_fu_731->md_buf_d0(grp_sha512_update_128_fu_731_md_buf_d0);
    grp_sha512_update_128_fu_731->md_buf_q0(hash_buf_q0);
    grp_sha512_update_128_fu_731->in_r_address0(grp_sha512_update_128_fu_731_in_r_address0);
    grp_sha512_update_128_fu_731->in_r_ce0(grp_sha512_update_128_fu_731_in_r_ce0);
    grp_sha512_update_128_fu_731->in_r_q0(temp_buf_q0);
    grp_sha512_update_128_fu_731->ap_return_0(grp_sha512_update_128_fu_731_ap_return_0);
    grp_sha512_update_128_fu_731->ap_return_1(grp_sha512_update_128_fu_731_ap_return_1);
    grp_p_memmove_fu_766 = new p_memmove("grp_p_memmove_fu_766");
    grp_p_memmove_fu_766->ap_clk(ap_clk);
    grp_p_memmove_fu_766->ap_rst(ap_rst_n_inv);
    grp_p_memmove_fu_766->ap_start(grp_p_memmove_fu_766_ap_start);
    grp_p_memmove_fu_766->ap_done(grp_p_memmove_fu_766_ap_done);
    grp_p_memmove_fu_766->ap_idle(grp_p_memmove_fu_766_ap_idle);
    grp_p_memmove_fu_766->ap_ready(grp_p_memmove_fu_766_ap_ready);
    grp_p_memmove_fu_766->dst_address0(grp_p_memmove_fu_766_dst_address0);
    grp_p_memmove_fu_766->dst_ce0(grp_p_memmove_fu_766_dst_ce0);
    grp_p_memmove_fu_766->dst_we0(grp_p_memmove_fu_766_dst_we0);
    grp_p_memmove_fu_766->dst_d0(grp_p_memmove_fu_766_dst_d0);
    grp_p_memmove_fu_766->src_address0(grp_p_memmove_fu_766_src_address0);
    grp_p_memmove_fu_766->src_ce0(grp_p_memmove_fu_766_src_ce0);
    grp_p_memmove_fu_766->src_q0(pk_q0);
    grp_sha512_update_32_1_fu_781 = new sha512_update_32_1("grp_sha512_update_32_1_fu_781");
    grp_sha512_update_32_1_fu_781->ap_clk(ap_clk);
    grp_sha512_update_32_1_fu_781->ap_rst(ap_rst_n_inv);
    grp_sha512_update_32_1_fu_781->ap_start(grp_sha512_update_32_1_fu_781_ap_start);
    grp_sha512_update_32_1_fu_781->ap_done(grp_sha512_update_32_1_fu_781_ap_done);
    grp_sha512_update_32_1_fu_781->ap_idle(grp_sha512_update_32_1_fu_781_ap_idle);
    grp_sha512_update_32_1_fu_781->ap_ready(grp_sha512_update_32_1_fu_781_ap_ready);
    grp_sha512_update_32_1_fu_781->md_length_read(grp_sha512_update_32_1_fu_781_md_length_read);
    grp_sha512_update_32_1_fu_781->md_state_address0(grp_sha512_update_32_1_fu_781_md_state_address0);
    grp_sha512_update_32_1_fu_781->md_state_ce0(grp_sha512_update_32_1_fu_781_md_state_ce0);
    grp_sha512_update_32_1_fu_781->md_state_we0(grp_sha512_update_32_1_fu_781_md_state_we0);
    grp_sha512_update_32_1_fu_781->md_state_d0(grp_sha512_update_32_1_fu_781_md_state_d0);
    grp_sha512_update_32_1_fu_781->md_state_q0(hash_state_q0);
    grp_sha512_update_32_1_fu_781->md_curlen_read(grp_sha512_update_32_1_fu_781_md_curlen_read);
    grp_sha512_update_32_1_fu_781->md_buf_address0(grp_sha512_update_32_1_fu_781_md_buf_address0);
    grp_sha512_update_32_1_fu_781->md_buf_ce0(grp_sha512_update_32_1_fu_781_md_buf_ce0);
    grp_sha512_update_32_1_fu_781->md_buf_we0(grp_sha512_update_32_1_fu_781_md_buf_we0);
    grp_sha512_update_32_1_fu_781->md_buf_d0(grp_sha512_update_32_1_fu_781_md_buf_d0);
    grp_sha512_update_32_1_fu_781->md_buf_q0(hash_buf_q0);
    grp_sha512_update_32_1_fu_781->in_r_address0(grp_sha512_update_32_1_fu_781_in_r_address0);
    grp_sha512_update_32_1_fu_781->in_r_ce0(grp_sha512_update_32_1_fu_781_in_r_ce0);
    grp_sha512_update_32_1_fu_781->in_r_q0(signature_q0);
    grp_sha512_update_32_1_fu_781->in_offset(grp_sha512_update_32_1_fu_781_in_offset);
    grp_sha512_update_32_1_fu_781->ap_return_0(grp_sha512_update_32_1_fu_781_ap_return_0);
    grp_sha512_update_32_1_fu_781->ap_return_1(grp_sha512_update_32_1_fu_781_ap_return_1);
    grp_crypto_sign_ed25519_13_fu_797 = new crypto_sign_ed25519_13("grp_crypto_sign_ed25519_13_fu_797");
    grp_crypto_sign_ed25519_13_fu_797->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_13_fu_797->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_13_fu_797->ap_start(grp_crypto_sign_ed25519_13_fu_797_ap_start);
    grp_crypto_sign_ed25519_13_fu_797->ap_done(grp_crypto_sign_ed25519_13_fu_797_ap_done);
    grp_crypto_sign_ed25519_13_fu_797->ap_idle(grp_crypto_sign_ed25519_13_fu_797_ap_idle);
    grp_crypto_sign_ed25519_13_fu_797->ap_ready(grp_crypto_sign_ed25519_13_fu_797_ap_ready);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_address0(grp_crypto_sign_ed25519_13_fu_797_r_x_v_address0);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_ce0(grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce0);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_we0(grp_crypto_sign_ed25519_13_fu_797_r_x_v_we0);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_d0(grp_crypto_sign_ed25519_13_fu_797_r_x_v_d0);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_q0(ger_x_v_q0);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_address1(grp_crypto_sign_ed25519_13_fu_797_r_x_v_address1);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_ce1(grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce1);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_we1(grp_crypto_sign_ed25519_13_fu_797_r_x_v_we1);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_d1(grp_crypto_sign_ed25519_13_fu_797_r_x_v_d1);
    grp_crypto_sign_ed25519_13_fu_797->r_x_v_q1(ger_x_v_q1);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_address0(grp_crypto_sign_ed25519_13_fu_797_r_y_v_address0);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_ce0(grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce0);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_we0(grp_crypto_sign_ed25519_13_fu_797_r_y_v_we0);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_d0(grp_crypto_sign_ed25519_13_fu_797_r_y_v_d0);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_q0(ger_y_v_q0);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_address1(grp_crypto_sign_ed25519_13_fu_797_r_y_v_address1);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_ce1(grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce1);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_we1(grp_crypto_sign_ed25519_13_fu_797_r_y_v_we1);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_d1(grp_crypto_sign_ed25519_13_fu_797_r_y_v_d1);
    grp_crypto_sign_ed25519_13_fu_797->r_y_v_q1(ger_y_v_q1);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_address0(grp_crypto_sign_ed25519_13_fu_797_r_z_v_address0);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_ce0(grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce0);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_we0(grp_crypto_sign_ed25519_13_fu_797_r_z_v_we0);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_d0(grp_crypto_sign_ed25519_13_fu_797_r_z_v_d0);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_q0(ger_z_v_q0);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_address1(grp_crypto_sign_ed25519_13_fu_797_r_z_v_address1);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_ce1(grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce1);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_we1(grp_crypto_sign_ed25519_13_fu_797_r_z_v_we1);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_d1(grp_crypto_sign_ed25519_13_fu_797_r_z_v_d1);
    grp_crypto_sign_ed25519_13_fu_797->r_z_v_q1(ger_z_v_q1);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_address0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_address0);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_ce0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce0);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_we0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_we0);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_d0(grp_crypto_sign_ed25519_13_fu_797_r_t_v_d0);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_q0(ger_t_v_q0);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_address1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_address1);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_ce1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce1);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_we1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_we1);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_d1(grp_crypto_sign_ed25519_13_fu_797_r_t_v_d1);
    grp_crypto_sign_ed25519_13_fu_797->r_t_v_q1(ger_t_v_q1);
    grp_crypto_sign_ed25519_13_fu_797->s_v_address0(grp_crypto_sign_ed25519_13_fu_797_s_v_address0);
    grp_crypto_sign_ed25519_13_fu_797->s_v_ce0(grp_crypto_sign_ed25519_13_fu_797_s_v_ce0);
    grp_crypto_sign_ed25519_13_fu_797->s_v_q0(sck_v_q0);
    grp_crypto_sign_ed25519_13_fu_797->s_v_address1(grp_crypto_sign_ed25519_13_fu_797_s_v_address1);
    grp_crypto_sign_ed25519_13_fu_797->s_v_ce1(grp_crypto_sign_ed25519_13_fu_797_s_v_ce1);
    grp_crypto_sign_ed25519_13_fu_797->s_v_q1(sck_v_q1);
    grp_crypto_sign_ed25519_15_fu_812 = new crypto_sign_ed25519_15("grp_crypto_sign_ed25519_15_fu_812");
    grp_crypto_sign_ed25519_15_fu_812->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_15_fu_812->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_15_fu_812->ap_start(grp_crypto_sign_ed25519_15_fu_812_ap_start);
    grp_crypto_sign_ed25519_15_fu_812->ap_done(grp_crypto_sign_ed25519_15_fu_812_ap_done);
    grp_crypto_sign_ed25519_15_fu_812->ap_idle(grp_crypto_sign_ed25519_15_fu_812_ap_idle);
    grp_crypto_sign_ed25519_15_fu_812->ap_ready(grp_crypto_sign_ed25519_15_fu_812_ap_ready);
    grp_crypto_sign_ed25519_15_fu_812->r_v_address0(grp_crypto_sign_ed25519_15_fu_812_r_v_address0);
    grp_crypto_sign_ed25519_15_fu_812->r_v_ce0(grp_crypto_sign_ed25519_15_fu_812_r_v_ce0);
    grp_crypto_sign_ed25519_15_fu_812->r_v_we0(grp_crypto_sign_ed25519_15_fu_812_r_v_we0);
    grp_crypto_sign_ed25519_15_fu_812->r_v_d0(grp_crypto_sign_ed25519_15_fu_812_r_v_d0);
    grp_crypto_sign_ed25519_15_fu_812->r_v_q0(scs_v_q0);
    grp_crypto_sign_ed25519_15_fu_812->y_v_address0(grp_crypto_sign_ed25519_15_fu_812_y_v_address0);
    grp_crypto_sign_ed25519_15_fu_812->y_v_ce0(grp_crypto_sign_ed25519_15_fu_812_y_v_ce0);
    grp_crypto_sign_ed25519_15_fu_812->y_v_q0(scsk_v_q0);
    grp_barrett_reduce_fu_822 = new barrett_reduce("grp_barrett_reduce_fu_822");
    grp_barrett_reduce_fu_822->ap_clk(ap_clk);
    grp_barrett_reduce_fu_822->ap_rst(ap_rst_n_inv);
    grp_barrett_reduce_fu_822->ap_start(grp_barrett_reduce_fu_822_ap_start);
    grp_barrett_reduce_fu_822->ap_done(grp_barrett_reduce_fu_822_ap_done);
    grp_barrett_reduce_fu_822->ap_idle(grp_barrett_reduce_fu_822_ap_idle);
    grp_barrett_reduce_fu_822->ap_ready(grp_barrett_reduce_fu_822_ap_ready);
    grp_barrett_reduce_fu_822->r_v_address0(grp_barrett_reduce_fu_822_r_v_address0);
    grp_barrett_reduce_fu_822->r_v_ce0(grp_barrett_reduce_fu_822_r_v_ce0);
    grp_barrett_reduce_fu_822->r_v_we0(grp_barrett_reduce_fu_822_r_v_we0);
    grp_barrett_reduce_fu_822->r_v_d0(grp_barrett_reduce_fu_822_r_v_d0);
    grp_barrett_reduce_fu_822->r_v_q0(grp_barrett_reduce_fu_822_r_v_q0);
    grp_barrett_reduce_fu_822->x_address0(grp_barrett_reduce_fu_822_x_address0);
    grp_barrett_reduce_fu_822->x_ce0(grp_barrett_reduce_fu_822_x_ce0);
    grp_barrett_reduce_fu_822->x_q0(grp_barrett_reduce_fu_822_x_q0);
    grp_crypto_sign_ed25519_19_fu_832 = new crypto_sign_ed25519_19("grp_crypto_sign_ed25519_19_fu_832");
    grp_crypto_sign_ed25519_19_fu_832->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_19_fu_832->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_19_fu_832->ap_start(grp_crypto_sign_ed25519_19_fu_832_ap_start);
    grp_crypto_sign_ed25519_19_fu_832->ap_done(grp_crypto_sign_ed25519_19_fu_832_ap_done);
    grp_crypto_sign_ed25519_19_fu_832->ap_idle(grp_crypto_sign_ed25519_19_fu_832_ap_idle);
    grp_crypto_sign_ed25519_19_fu_832->ap_ready(grp_crypto_sign_ed25519_19_fu_832_ap_ready);
    grp_crypto_sign_ed25519_19_fu_832->r_v_address0(grp_crypto_sign_ed25519_19_fu_832_r_v_address0);
    grp_crypto_sign_ed25519_19_fu_832->r_v_ce0(grp_crypto_sign_ed25519_19_fu_832_r_v_ce0);
    grp_crypto_sign_ed25519_19_fu_832->r_v_we0(grp_crypto_sign_ed25519_19_fu_832_r_v_we0);
    grp_crypto_sign_ed25519_19_fu_832->r_v_d0(grp_crypto_sign_ed25519_19_fu_832_r_v_d0);
    grp_crypto_sign_ed25519_19_fu_832->r_v_q0(zi_v_q0);
    grp_crypto_sign_ed25519_19_fu_832->r_v_address1(grp_crypto_sign_ed25519_19_fu_832_r_v_address1);
    grp_crypto_sign_ed25519_19_fu_832->r_v_ce1(grp_crypto_sign_ed25519_19_fu_832_r_v_ce1);
    grp_crypto_sign_ed25519_19_fu_832->r_v_we1(grp_crypto_sign_ed25519_19_fu_832_r_v_we1);
    grp_crypto_sign_ed25519_19_fu_832->r_v_d1(grp_crypto_sign_ed25519_19_fu_832_r_v_d1);
    grp_crypto_sign_ed25519_19_fu_832->r_v_q1(zi_v_q1);
    grp_crypto_sign_ed25519_19_fu_832->x_v_address0(grp_crypto_sign_ed25519_19_fu_832_x_v_address0);
    grp_crypto_sign_ed25519_19_fu_832->x_v_ce0(grp_crypto_sign_ed25519_19_fu_832_x_v_ce0);
    grp_crypto_sign_ed25519_19_fu_832->x_v_q0(ger_z_v_q0);
    grp_crypto_sign_ed25519_9_fu_838 = new crypto_sign_ed25519_9("grp_crypto_sign_ed25519_9_fu_838");
    grp_crypto_sign_ed25519_9_fu_838->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_9_fu_838->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_9_fu_838->ap_start(grp_crypto_sign_ed25519_9_fu_838_ap_start);
    grp_crypto_sign_ed25519_9_fu_838->ap_done(grp_crypto_sign_ed25519_9_fu_838_ap_done);
    grp_crypto_sign_ed25519_9_fu_838->ap_idle(grp_crypto_sign_ed25519_9_fu_838_ap_idle);
    grp_crypto_sign_ed25519_9_fu_838->ap_ready(grp_crypto_sign_ed25519_9_fu_838_ap_ready);
    grp_crypto_sign_ed25519_9_fu_838->r_address0(grp_crypto_sign_ed25519_9_fu_838_r_address0);
    grp_crypto_sign_ed25519_9_fu_838->r_ce0(grp_crypto_sign_ed25519_9_fu_838_r_ce0);
    grp_crypto_sign_ed25519_9_fu_838->r_we0(grp_crypto_sign_ed25519_9_fu_838_r_we0);
    grp_crypto_sign_ed25519_9_fu_838->r_d0(grp_crypto_sign_ed25519_9_fu_838_r_d0);
    grp_crypto_sign_ed25519_9_fu_838->x_v_address0(grp_crypto_sign_ed25519_9_fu_838_x_v_address0);
    grp_crypto_sign_ed25519_9_fu_838->x_v_ce0(grp_crypto_sign_ed25519_9_fu_838_x_v_ce0);
    grp_crypto_sign_ed25519_9_fu_838->x_v_q0(ty_v_q0);
    grp_crypto_sign_ed25519_9_fu_838->x_v_address1(grp_crypto_sign_ed25519_9_fu_838_x_v_address1);
    grp_crypto_sign_ed25519_9_fu_838->x_v_ce1(grp_crypto_sign_ed25519_9_fu_838_x_v_ce1);
    grp_crypto_sign_ed25519_9_fu_838->x_v_q1(ty_v_q1);
    grp_crypto_sign_ed25519_20_fu_844 = new crypto_sign_ed25519_20("grp_crypto_sign_ed25519_20_fu_844");
    grp_crypto_sign_ed25519_20_fu_844->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_20_fu_844->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_20_fu_844->ap_start(grp_crypto_sign_ed25519_20_fu_844_ap_start);
    grp_crypto_sign_ed25519_20_fu_844->ap_done(grp_crypto_sign_ed25519_20_fu_844_ap_done);
    grp_crypto_sign_ed25519_20_fu_844->ap_idle(grp_crypto_sign_ed25519_20_fu_844_ap_idle);
    grp_crypto_sign_ed25519_20_fu_844->ap_ready(grp_crypto_sign_ed25519_20_fu_844_ap_ready);
    grp_crypto_sign_ed25519_20_fu_844->x_v_address0(grp_crypto_sign_ed25519_20_fu_844_x_v_address0);
    grp_crypto_sign_ed25519_20_fu_844->x_v_ce0(grp_crypto_sign_ed25519_20_fu_844_x_v_ce0);
    grp_crypto_sign_ed25519_20_fu_844->x_v_q0(tx_v_q0);
    grp_crypto_sign_ed25519_20_fu_844->x_v_address1(grp_crypto_sign_ed25519_20_fu_844_x_v_address1);
    grp_crypto_sign_ed25519_20_fu_844->x_v_ce1(grp_crypto_sign_ed25519_20_fu_844_x_v_ce1);
    grp_crypto_sign_ed25519_20_fu_844->x_v_q1(tx_v_q1);
    grp_crypto_sign_ed25519_20_fu_844->ap_return(grp_crypto_sign_ed25519_20_fu_844_ap_return);
    grp_crypto_sign_ed25519_18_fu_849 = new crypto_sign_ed25519_18("grp_crypto_sign_ed25519_18_fu_849");
    grp_crypto_sign_ed25519_18_fu_849->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_18_fu_849->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_18_fu_849->ap_start(grp_crypto_sign_ed25519_18_fu_849_ap_start);
    grp_crypto_sign_ed25519_18_fu_849->ap_done(grp_crypto_sign_ed25519_18_fu_849_ap_done);
    grp_crypto_sign_ed25519_18_fu_849->ap_idle(grp_crypto_sign_ed25519_18_fu_849_ap_idle);
    grp_crypto_sign_ed25519_18_fu_849->ap_ready(grp_crypto_sign_ed25519_18_fu_849_ap_ready);
    grp_crypto_sign_ed25519_18_fu_849->r_v_address0(grp_crypto_sign_ed25519_18_fu_849_r_v_address0);
    grp_crypto_sign_ed25519_18_fu_849->r_v_ce0(grp_crypto_sign_ed25519_18_fu_849_r_v_ce0);
    grp_crypto_sign_ed25519_18_fu_849->r_v_we0(grp_crypto_sign_ed25519_18_fu_849_r_v_we0);
    grp_crypto_sign_ed25519_18_fu_849->r_v_d0(grp_crypto_sign_ed25519_18_fu_849_r_v_d0);
    grp_crypto_sign_ed25519_18_fu_849->r_v_q0(grp_crypto_sign_ed25519_18_fu_849_r_v_q0);
    grp_crypto_sign_ed25519_18_fu_849->r_v_address1(grp_crypto_sign_ed25519_18_fu_849_r_v_address1);
    grp_crypto_sign_ed25519_18_fu_849->r_v_ce1(grp_crypto_sign_ed25519_18_fu_849_r_v_ce1);
    grp_crypto_sign_ed25519_18_fu_849->r_v_we1(grp_crypto_sign_ed25519_18_fu_849_r_v_we1);
    grp_crypto_sign_ed25519_18_fu_849->r_v_d1(grp_crypto_sign_ed25519_18_fu_849_r_v_d1);
    grp_crypto_sign_ed25519_18_fu_849->r_v_q1(grp_crypto_sign_ed25519_18_fu_849_r_v_q1);
    grp_crypto_sign_ed25519_18_fu_849->x_v_address0(grp_crypto_sign_ed25519_18_fu_849_x_v_address0);
    grp_crypto_sign_ed25519_18_fu_849->x_v_ce0(grp_crypto_sign_ed25519_18_fu_849_x_v_ce0);
    grp_crypto_sign_ed25519_18_fu_849->x_v_q0(grp_crypto_sign_ed25519_18_fu_849_x_v_q0);
    grp_crypto_sign_ed25519_18_fu_849->y_v_address0(grp_crypto_sign_ed25519_18_fu_849_y_v_address0);
    grp_crypto_sign_ed25519_18_fu_849->y_v_ce0(grp_crypto_sign_ed25519_18_fu_849_y_v_ce0);
    grp_crypto_sign_ed25519_18_fu_849->y_v_q0(zi_v_q0);
    grp_crypto_sign_ed25519_16_fu_856 = new crypto_sign_ed25519_16("grp_crypto_sign_ed25519_16_fu_856");
    grp_crypto_sign_ed25519_16_fu_856->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_16_fu_856->ap_rst(ap_rst_n_inv);
    grp_crypto_sign_ed25519_16_fu_856->ap_start(grp_crypto_sign_ed25519_16_fu_856_ap_start);
    grp_crypto_sign_ed25519_16_fu_856->ap_done(grp_crypto_sign_ed25519_16_fu_856_ap_done);
    grp_crypto_sign_ed25519_16_fu_856->ap_idle(grp_crypto_sign_ed25519_16_fu_856_ap_idle);
    grp_crypto_sign_ed25519_16_fu_856->ap_ready(grp_crypto_sign_ed25519_16_fu_856_ap_ready);
    grp_crypto_sign_ed25519_16_fu_856->r_v_address0(grp_crypto_sign_ed25519_16_fu_856_r_v_address0);
    grp_crypto_sign_ed25519_16_fu_856->r_v_ce0(grp_crypto_sign_ed25519_16_fu_856_r_v_ce0);
    grp_crypto_sign_ed25519_16_fu_856->r_v_we0(grp_crypto_sign_ed25519_16_fu_856_r_v_we0);
    grp_crypto_sign_ed25519_16_fu_856->r_v_d0(grp_crypto_sign_ed25519_16_fu_856_r_v_d0);
    grp_crypto_sign_ed25519_16_fu_856->r_v_q0(scs_v_q0);
    grp_crypto_sign_ed25519_16_fu_856->r_v_address1(grp_crypto_sign_ed25519_16_fu_856_r_v_address1);
    grp_crypto_sign_ed25519_16_fu_856->r_v_ce1(grp_crypto_sign_ed25519_16_fu_856_r_v_ce1);
    grp_crypto_sign_ed25519_16_fu_856->r_v_we1(grp_crypto_sign_ed25519_16_fu_856_r_v_we1);
    grp_crypto_sign_ed25519_16_fu_856->r_v_d1(grp_crypto_sign_ed25519_16_fu_856_r_v_d1);
    grp_crypto_sign_ed25519_16_fu_856->r_v_q1(scs_v_q1);
    grp_crypto_sign_ed25519_16_fu_856->y_v_address0(grp_crypto_sign_ed25519_16_fu_856_y_v_address0);
    grp_crypto_sign_ed25519_16_fu_856->y_v_ce0(grp_crypto_sign_ed25519_16_fu_856_y_v_ce0);
    grp_crypto_sign_ed25519_16_fu_856->y_v_q0(sck_v_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state17_io);
    sensitive << ( exitcond3_fu_1021_p2 );
    sensitive << ( ap_sig_ioackin_mem_ARREADY );

    SC_METHOD(thread_ap_block_state24);
    sensitive << ( exitcond2_fu_1049_p2 );
    sensitive << ( mem_RVALID );

    SC_METHOD(thread_ap_block_state24_ignore_call0);
    sensitive << ( exitcond2_fu_1049_p2 );
    sensitive << ( mem_RVALID );

    SC_METHOD(thread_ap_block_state30_on_subcall_done);
    sensitive << ( grp_sha512_init_fu_653_ap_done );
    sensitive << ( grp_barrett_reduce_fu_822_ap_done );

    SC_METHOD(thread_ap_block_state38_on_subcall_done);
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_ap_done );
    sensitive << ( grp_crypto_sign_ed25519_20_fu_844_ap_done );

    SC_METHOD(thread_ap_block_state49_io);
    sensitive << ( exitcond1_fu_1102_p2 );
    sensitive << ( ap_sig_ioackin_mem_ARREADY );

    SC_METHOD(thread_ap_block_state56);
    sensitive << ( exitcond_fu_1130_p2 );
    sensitive << ( mem_RVALID );

    SC_METHOD(thread_ap_block_state56_ignore_call0);
    sensitive << ( exitcond_fu_1130_p2 );
    sensitive << ( mem_RVALID );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( exitcond_i4_fu_1241_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( exitcond_i4_fu_1241_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_mem_ARREADY);
    sensitive << ( mem_ARREADY );
    sensitive << ( ap_reg_ioackin_mem_ARREADY );

    SC_METHOD(thread_az_addr_1_reg_1300);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_az_addr_reg_1295);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_az_address0);
    sensitive << ( az_addr_reg_1295 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum3_i_i_cast_fu_1016_p1 );
    sensitive << ( grp_sha512_final_fu_693_out_r_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_az_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( az_addr_1_reg_1300 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( tmp_i3_fu_1181_p1 );
    sensitive << ( grp_sha512_final_fu_693_out_r_address1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_az_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_sha512_final_fu_693_out_r_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_az_ce1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( grp_sha512_final_fu_693_out_r_ce1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_az_d0);
    sensitive << ( grp_sha512_final_fu_693_out_r_d0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_800_fu_972_p3 );

    SC_METHOD(thread_az_d1);
    sensitive << ( grp_sha512_final_fu_693_out_r_d1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_894_cast_fu_993_p1 );

    SC_METHOD(thread_az_we0);
    sensitive << ( grp_sha512_final_fu_693_out_r_we0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_az_we1);
    sensitive << ( grp_sha512_final_fu_693_out_r_we1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_exitcond1_fu_1102_p2);
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( num_blocks_read_reg_1258 );
    sensitive << ( ap_block_state49_io );
    sensitive << ( i_1_reg_574 );

    SC_METHOD(thread_exitcond1_i_fu_1169_p2);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( i_i2_reg_608 );

    SC_METHOD(thread_exitcond2_fu_1049_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond2_fu_1049_p2 );
    sensitive << ( mem_RVALID );
    sensitive << ( j_reg_531 );

    SC_METHOD(thread_exitcond3_fu_1021_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( num_blocks_read_reg_1258 );
    sensitive << ( ap_block_state17_io );
    sensitive << ( i_reg_520 );

    SC_METHOD(thread_exitcond_fu_1130_p2);
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( exitcond_fu_1130_p2 );
    sensitive << ( mem_RVALID );
    sensitive << ( j_1_reg_585 );

    SC_METHOD(thread_exitcond_i1_fu_1147_p2);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( i_i1_reg_597 );

    SC_METHOD(thread_exitcond_i2_fu_1191_p2);
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( i_1_i_reg_619 );

    SC_METHOD(thread_exitcond_i3_fu_1208_p2);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( i_i3_reg_630 );

    SC_METHOD(thread_exitcond_i4_fu_1241_p2);
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( i_i4_reg_642 );

    SC_METHOD(thread_exitcond_i_fu_1066_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_i_reg_543 );

    SC_METHOD(thread_exitcond_i_i1_fu_998_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_i_i1_reg_489 );

    SC_METHOD(thread_exitcond_i_i_fu_926_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_i_i_reg_477 );

    SC_METHOD(thread_ger_x_v_address0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_x_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_x_v_address0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ger_x_v_ce0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_x_v_ce0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ger_x_v_ce1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_x_v_we0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_x_v_we0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_x_v_we1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_x_v_we1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_y_v_address0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_y_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_x_v_address0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_y_v_ce0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_x_v_ce0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_y_v_ce1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_y_v_we0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_y_v_we0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_y_v_we1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_y_v_we1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_z_v_address0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_z_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_x_v_address0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_ger_z_v_ce0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_x_v_ce0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_ger_z_v_ce1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_z_v_we0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_z_v_we0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ger_z_v_we1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_r_z_v_we1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_barrett_reduce_fu_822_ap_start);
    sensitive << ( ap_reg_grp_barrett_reduce_fu_822_ap_start );

    SC_METHOD(thread_grp_barrett_reduce_fu_822_r_v_q0);
    sensitive << ( sck_v_q0 );
    sensitive << ( scs_v_q0 );
    sensitive << ( scsk_v_q0 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_barrett_reduce_fu_822_x_q0);
    sensitive << ( t_11_q0 );
    sensitive << ( t_10_q0 );
    sensitive << ( t_q0 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_crypto_sign_ed25519_13_fu_797_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start );

    SC_METHOD(thread_grp_crypto_sign_ed25519_15_fu_812_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start );

    SC_METHOD(thread_grp_crypto_sign_ed25519_16_fu_856_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start );

    SC_METHOD(thread_grp_crypto_sign_ed25519_18_fu_849_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start );

    SC_METHOD(thread_grp_crypto_sign_ed25519_18_fu_849_r_v_q0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( tx_v_q0 );
    sensitive << ( ty_v_q0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_crypto_sign_ed25519_18_fu_849_r_v_q1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( tx_v_q1 );
    sensitive << ( ty_v_q1 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_crypto_sign_ed25519_18_fu_849_x_v_q0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ger_x_v_q0 );
    sensitive << ( ger_y_v_q0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_crypto_sign_ed25519_19_fu_832_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start );

    SC_METHOD(thread_grp_crypto_sign_ed25519_20_fu_844_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start );

    SC_METHOD(thread_grp_crypto_sign_ed25519_9_fu_838_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start );

    SC_METHOD(thread_grp_p_memmove_fu_766_ap_start);
    sensitive << ( ap_reg_grp_p_memmove_fu_766_ap_start );

    SC_METHOD(thread_grp_sha512_final_fu_693_ap_start);
    sensitive << ( ap_reg_grp_sha512_final_fu_693_ap_start );

    SC_METHOD(thread_grp_sha512_final_fu_693_md_curlen_read);
    sensitive << ( hash_curlen_reg_1290 );
    sensitive << ( hash_curlen3_reg_500 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( hash_curlen_1_reg_554 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_sha512_final_fu_693_md_length_read);
    sensitive << ( hash_length_reg_1285 );
    sensitive << ( hash_length3_reg_510 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( hash_length_1_reg_564 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_sha512_init_fu_653_ap_start);
    sensitive << ( ap_reg_grp_sha512_init_fu_653_ap_start );

    SC_METHOD(thread_grp_sha512_update_128_fu_731_ap_start);
    sensitive << ( ap_reg_grp_sha512_update_128_fu_731_ap_start );

    SC_METHOD(thread_grp_sha512_update_128_fu_731_md_curlen_read);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( hash_curlen3_reg_500 );
    sensitive << ( hash_curlen_1_reg_554 );

    SC_METHOD(thread_grp_sha512_update_128_fu_731_md_length_read);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( hash_length3_reg_510 );
    sensitive << ( hash_length_1_reg_564 );

    SC_METHOD(thread_grp_sha512_update_32_1_fu_781_ap_start);
    sensitive << ( ap_reg_grp_sha512_update_32_1_fu_781_ap_start );

    SC_METHOD(thread_grp_sha512_update_32_1_fu_781_in_offset);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_grp_sha512_update_32_1_fu_781_md_curlen_read);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( reg_886 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_grp_sha512_update_32_1_fu_781_md_length_read);
    sensitive << ( reg_880 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_grp_sha512_update_32_fu_671_ap_start);
    sensitive << ( ap_reg_grp_sha512_update_32_fu_671_ap_start );

    SC_METHOD(thread_hash_buf_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_update_32_fu_671_md_buf_address0 );
    sensitive << ( grp_sha512_final_fu_693_md_buf_address0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_buf_address0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_buf_address0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_buf_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_update_32_fu_671_md_buf_ce0 );
    sensitive << ( grp_sha512_final_fu_693_md_buf_ce0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_buf_ce0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_buf_ce0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_buf_ce1);
    sensitive << ( grp_sha512_final_fu_693_md_buf_ce1 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_buf_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_update_32_fu_671_md_buf_d0 );
    sensitive << ( grp_sha512_final_fu_693_md_buf_d0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_buf_d0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_buf_d0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_buf_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_update_32_fu_671_md_buf_we0 );
    sensitive << ( grp_sha512_final_fu_693_md_buf_we0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_buf_we0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_buf_we0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_buf_we1);
    sensitive << ( grp_sha512_final_fu_693_md_buf_we1 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_state_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_init_fu_653_md_state_address0 );
    sensitive << ( grp_sha512_update_32_fu_671_md_state_address0 );
    sensitive << ( grp_sha512_final_fu_693_md_state_address0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_state_address0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_state_address0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_state_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_init_fu_653_md_state_ce0 );
    sensitive << ( grp_sha512_update_32_fu_671_md_state_ce0 );
    sensitive << ( grp_sha512_final_fu_693_md_state_ce0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_state_ce0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_state_ce0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_state_ce1);
    sensitive << ( grp_sha512_init_fu_653_md_state_ce1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_hash_state_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_init_fu_653_md_state_d0 );
    sensitive << ( grp_sha512_update_32_fu_671_md_state_d0 );
    sensitive << ( grp_sha512_final_fu_693_md_state_d0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_state_d0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_state_d0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_state_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_sha512_init_fu_653_md_state_we0 );
    sensitive << ( grp_sha512_update_32_fu_671_md_state_we0 );
    sensitive << ( grp_sha512_final_fu_693_md_state_we0 );
    sensitive << ( grp_sha512_update_128_fu_731_md_state_we0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_md_state_we0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_hash_state_we1);
    sensitive << ( grp_sha512_init_fu_653_md_state_we1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_hram_address0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( tmp_i2_fu_1159_p1 );
    sensitive << ( grp_sha512_final_fu_693_out_r_address0 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_hram_ce0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( grp_sha512_final_fu_693_out_r_ce0 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_hram_ce1);
    sensitive << ( grp_sha512_final_fu_693_out_r_ce1 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_hram_we0);
    sensitive << ( grp_sha512_final_fu_693_out_r_we0 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_hram_we1);
    sensitive << ( grp_sha512_final_fu_693_out_r_we1 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_i_2_fu_1072_p2);
    sensitive << ( i_i_reg_543 );

    SC_METHOD(thread_i_3_fu_1153_p2);
    sensitive << ( i_i1_reg_597 );

    SC_METHOD(thread_i_73_fu_932_p2);
    sensitive << ( i_i_i_reg_477 );

    SC_METHOD(thread_i_74_fu_1004_p2);
    sensitive << ( i_i_i1_reg_489 );

    SC_METHOD(thread_i_75_fu_1026_p2);
    sensitive << ( i_reg_520 );

    SC_METHOD(thread_i_76_fu_1107_p2);
    sensitive << ( i_1_reg_574 );

    SC_METHOD(thread_i_77_fu_1175_p2);
    sensitive << ( i_i2_reg_608 );

    SC_METHOD(thread_i_78_fu_1202_p2);
    sensitive << ( i_1_i_reg_619 );

    SC_METHOD(thread_i_79_fu_1214_p2);
    sensitive << ( i_i3_reg_630 );

    SC_METHOD(thread_i_80_fu_1247_p2);
    sensitive << ( i_i4_reg_642 );

    SC_METHOD(thread_indvarinc_fu_909_p2);
    sensitive << ( invdar_reg_466 );

    SC_METHOD(thread_j_3_fu_1055_p2);
    sensitive << ( j_reg_531 );

    SC_METHOD(thread_j_4_fu_1136_p2);
    sensitive << ( j_1_reg_585 );

    SC_METHOD(thread_mem_ARADDR);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( exitcond3_fu_1021_p2 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( exitcond1_fu_1102_p2 );
    sensitive << ( tmp_80_fu_1038_p1 );
    sensitive << ( tmp_808_fu_1119_p1 );
    sensitive << ( ap_reg_ioackin_mem_ARREADY );

    SC_METHOD(thread_mem_ARVALID);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( exitcond3_fu_1021_p2 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( exitcond1_fu_1102_p2 );
    sensitive << ( ap_reg_ioackin_mem_ARREADY );

    SC_METHOD(thread_mem_RREADY);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond2_fu_1049_p2 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( exitcond_fu_1130_p2 );
    sensitive << ( mem_RVALID );

    SC_METHOD(thread_mem_blk_n_AR);
    sensitive << ( m_axi_mem_ARREADY );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( exitcond3_fu_1021_p2 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( exitcond1_fu_1102_p2 );

    SC_METHOD(thread_mem_blk_n_R);
    sensitive << ( m_axi_mem_RVALID );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond2_fu_1049_p2 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( exitcond_fu_1130_p2 );

    SC_METHOD(thread_nonce_address0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_i_fu_1078_p1 );
    sensitive << ( grp_sha512_final_fu_693_out_r_address0 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_nonce_ce0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( grp_sha512_final_fu_693_out_r_ce0 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_nonce_ce1);
    sensitive << ( grp_sha512_final_fu_693_out_r_ce1 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_nonce_we0);
    sensitive << ( grp_sha512_final_fu_693_out_r_we0 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_nonce_we1);
    sensitive << ( grp_sha512_final_fu_693_out_r_we1 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_pk_address0);
    sensitive << ( grp_p_memmove_fu_766_src_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( tmp_i_i_fu_949_p1 );

    SC_METHOD(thread_pk_ce0);
    sensitive << ( grp_p_memmove_fu_766_src_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_pk_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sck_v_address0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_s_v_address0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_y_v_address0 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_sck_v_ce0);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_s_v_ce0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_y_v_ce0 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_sck_v_ce1);
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_s_v_ce1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_sck_v_we0);
    sensitive << ( grp_barrett_reduce_fu_822_r_v_we0 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_scs_v_address0);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_r_v_address0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_r_v_address0 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( tmp_i4_fu_1220_p1 );

    SC_METHOD(thread_scs_v_ce0);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_r_v_ce0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_r_v_ce0 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state68 );

    SC_METHOD(thread_scs_v_ce1);
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_r_v_ce1 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_scs_v_d0);
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_r_v_d0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_d0 );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_r_v_d0 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state68 );

    SC_METHOD(thread_scs_v_we0);
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_r_v_we0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_we0 );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_r_v_we0 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state68 );

    SC_METHOD(thread_scs_v_we1);
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_r_v_we1 );
    sensitive << ( ap_CS_fsm_state70 );

    SC_METHOD(thread_scsk_v_address0);
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_y_v_address0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_address0 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_scsk_v_ce0);
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_y_v_ce0 );
    sensitive << ( grp_barrett_reduce_fu_822_r_v_ce0 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_scsk_v_we0);
    sensitive << ( grp_barrett_reduce_fu_822_r_v_we0 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_signature_addr_2_reg_1368);
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_signature_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum3_i_i_cast_reg_1313 );
    sensitive << ( signature_addr_2_reg_1368 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( tmp_i5_fu_1253_p1 );
    sensitive << ( grp_p_memmove_fu_766_dst_address0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_in_r_address0 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_r_address0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( tmp_fu_915_p1 );
    sensitive << ( sum_i_cast_fu_1236_p1 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_signature_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( grp_p_memmove_fu_766_dst_ce0 );
    sensitive << ( grp_sha512_update_32_1_fu_781_in_r_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_r_ce0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_signature_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( az_q0 );
    sensitive << ( grp_p_memmove_fu_766_dst_d0 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_r_d0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( tmp_863_i_fu_1095_p2 );
    sensitive << ( tmp_809_fu_1225_p1 );

    SC_METHOD(thread_signature_out_address0);
    sensitive << ( tmp_i5_reg_1470 );
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_signature_out_ce0);
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_signature_out_we0);
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_signature_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_p_memmove_fu_766_dst_we0 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_r_we0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_sk_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_sha512_update_32_fu_671_in_r_address0 );
    sensitive << ( sum_i_i_cast_fu_944_p1 );

    SC_METHOD(thread_sk_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_sha512_update_32_fu_671_in_r_ce0 );

    SC_METHOD(thread_sum3_i_i_cast_fu_1016_p1);
    sensitive << ( sum3_i_i_fu_1010_p2 );

    SC_METHOD(thread_sum3_i_i_fu_1010_p2);
    sensitive << ( i_i_i1_reg_489 );

    SC_METHOD(thread_sum_i_cast_fu_1236_p1);
    sensitive << ( sum_i_fu_1230_p2 );

    SC_METHOD(thread_sum_i_fu_1230_p2);
    sensitive << ( i_i3_reg_630 );

    SC_METHOD(thread_sum_i_i_cast_fu_944_p1);
    sensitive << ( sum_i_i_fu_938_p2 );

    SC_METHOD(thread_sum_i_i_fu_938_p2);
    sensitive << ( i_i_i_reg_477 );

    SC_METHOD(thread_t_10_address0);
    sensitive << ( tmp_i2_reg_1413 );
    sensitive << ( grp_barrett_reduce_fu_822_x_address0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );

    SC_METHOD(thread_t_10_ce0);
    sensitive << ( grp_barrett_reduce_fu_822_x_ce0 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );

    SC_METHOD(thread_t_10_d0);
    sensitive << ( hram_q0 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_t_10_we0);
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_t_11_address0);
    sensitive << ( tmp_i3_reg_1431 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( exitcond_i2_fu_1191_p2 );
    sensitive << ( grp_barrett_reduce_fu_822_x_address0 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( tmp_858_i_fu_1197_p1 );

    SC_METHOD(thread_t_11_ce0);
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( exitcond_i2_fu_1191_p2 );
    sensitive << ( grp_barrett_reduce_fu_822_x_ce0 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_t_11_d0);
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( exitcond_i2_fu_1191_p2 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( tmp_i3_96_fu_1186_p1 );

    SC_METHOD(thread_t_11_we0);
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( exitcond_i2_fu_1191_p2 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_t_address0);
    sensitive << ( tmp_i_reg_1353 );
    sensitive << ( grp_barrett_reduce_fu_822_x_address0 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( grp_barrett_reduce_fu_822_x_ce0 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_t_d0);
    sensitive << ( nonce_q0 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_temp_buf_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( grp_sha512_update_128_fu_731_in_r_address0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( tmp_802_fu_1061_p1 );
    sensitive << ( tmp_803_fu_1142_p1 );

    SC_METHOD(thread_temp_buf_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( grp_sha512_update_128_fu_731_in_r_ce0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_temp_buf_we0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_tmp_784_fu_962_p4);
    sensitive << ( az_q0 );

    SC_METHOD(thread_tmp_800_fu_972_p3);
    sensitive << ( tmp_784_fu_962_p4 );

    SC_METHOD(thread_tmp_801_fu_985_p3);
    sensitive << ( tmp_804_fu_981_p1 );

    SC_METHOD(thread_tmp_802_fu_1061_p1);
    sensitive << ( j_reg_531 );

    SC_METHOD(thread_tmp_803_fu_1142_p1);
    sensitive << ( j_1_reg_585 );

    SC_METHOD(thread_tmp_804_fu_981_p1);
    sensitive << ( az_q1 );

    SC_METHOD(thread_tmp_806_fu_1032_p2);
    sensitive << ( i_reg_520 );

    SC_METHOD(thread_tmp_807_fu_1113_p2);
    sensitive << ( i_1_reg_574 );

    SC_METHOD(thread_tmp_808_fu_1119_p1);
    sensitive << ( tmp_807_fu_1113_p2 );

    SC_METHOD(thread_tmp_809_fu_1225_p1);
    sensitive << ( scs_v_q0 );

    SC_METHOD(thread_tmp_80_fu_1038_p1);
    sensitive << ( tmp_806_fu_1032_p2 );

    SC_METHOD(thread_tmp_858_i_fu_1197_p1);
    sensitive << ( i_1_i_reg_619 );

    SC_METHOD(thread_tmp_863_i_fu_1095_p2);
    sensitive << ( signature_q0 );
    sensitive << ( tmp_i1_91_fu_1088_p3 );

    SC_METHOD(thread_tmp_894_cast_fu_993_p1);
    sensitive << ( tmp_801_fu_985_p3 );

    SC_METHOD(thread_tmp_fu_915_p1);
    sensitive << ( invdar_reg_466 );

    SC_METHOD(thread_tmp_i1_91_fu_1088_p3);
    sensitive << ( tmp_i1_reg_1363 );

    SC_METHOD(thread_tmp_i2_fu_1159_p1);
    sensitive << ( i_i1_reg_597 );

    SC_METHOD(thread_tmp_i3_96_fu_1186_p1);
    sensitive << ( az_q1 );

    SC_METHOD(thread_tmp_i3_fu_1181_p1);
    sensitive << ( i_i2_reg_608 );

    SC_METHOD(thread_tmp_i4_fu_1220_p1);
    sensitive << ( i_i3_reg_630 );

    SC_METHOD(thread_tmp_i5_fu_1253_p1);
    sensitive << ( i_i4_reg_642 );

    SC_METHOD(thread_tmp_i_fu_1078_p1);
    sensitive << ( i_i_reg_543 );

    SC_METHOD(thread_tmp_i_i_fu_949_p1);
    sensitive << ( i_i_i_reg_477 );

    SC_METHOD(thread_tmp_s_fu_920_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_466 );

    SC_METHOD(thread_tx_v_address0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_20_fu_844_x_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_address0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tx_v_address1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_20_fu_844_x_v_address1 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_address1 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tx_v_ce0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_20_fu_844_x_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_ce0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tx_v_ce1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_20_fu_844_x_v_ce1 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_ce1 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tx_v_we0);
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_we0 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_tx_v_we1);
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_we1 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ty_v_address0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_x_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_address0 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ty_v_address1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_x_v_address1 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_address1 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ty_v_ce0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_x_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_ce0 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ty_v_ce1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_x_v_ce1 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_ce1 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ty_v_we0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_we0 );

    SC_METHOD(thread_ty_v_we1);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_r_v_we1 );

    SC_METHOD(thread_zi_v_address0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_r_v_address0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_y_v_address0 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_zi_v_ce0);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_r_v_ce0 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_y_v_ce0 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_zi_v_ce1);
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_r_v_ce1 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_zi_v_we0);
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_r_v_we0 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_zi_v_we1);
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_r_v_we1 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( exitcond3_fu_1021_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond2_fu_1049_p2 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( exitcond1_fu_1102_p2 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( exitcond_fu_1130_p2 );
    sensitive << ( mem_RVALID );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_sha512_update_32_1_fu_781_ap_done );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( grp_sha512_update_128_fu_731_ap_done );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_i_i_fu_926_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_sha512_update_32_fu_671_ap_done );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_i_i1_fu_998_p2 );
    sensitive << ( ap_block_state17_io );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_i_fu_1066_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( grp_crypto_sign_ed25519_18_fu_849_ap_done );
    sensitive << ( ap_block_state38_on_subcall_done );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_block_state49_io );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( exitcond_i1_fu_1147_p2 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( exitcond1_i_fu_1169_p2 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( exitcond_i2_fu_1191_p2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( exitcond_i3_fu_1208_p2 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( exitcond_i4_fu_1241_p2 );
    sensitive << ( grp_sha512_init_fu_653_ap_done );
    sensitive << ( grp_sha512_final_fu_693_ap_done );
    sensitive << ( grp_p_memmove_fu_766_ap_done );
    sensitive << ( grp_crypto_sign_ed25519_13_fu_797_ap_done );
    sensitive << ( grp_crypto_sign_ed25519_15_fu_812_ap_done );
    sensitive << ( grp_barrett_reduce_fu_822_ap_done );
    sensitive << ( grp_crypto_sign_ed25519_19_fu_832_ap_done );
    sensitive << ( grp_crypto_sign_ed25519_9_fu_838_ap_done );
    sensitive << ( grp_crypto_sign_ed25519_16_fu_856_ap_done );
    sensitive << ( tmp_s_fu_920_p2 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_block_state30_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_reg_grp_sha512_init_fu_653_ap_start = SC_LOGIC_0;
    ap_reg_grp_sha512_update_32_fu_671_ap_start = SC_LOGIC_0;
    ap_reg_grp_sha512_final_fu_693_ap_start = SC_LOGIC_0;
    ap_reg_grp_sha512_update_128_fu_731_ap_start = SC_LOGIC_0;
    ap_reg_grp_p_memmove_fu_766_ap_start = SC_LOGIC_0;
    ap_reg_grp_sha512_update_32_1_fu_781_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start = SC_LOGIC_0;
    ap_reg_grp_barrett_reduce_fu_822_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start = SC_LOGIC_0;
    ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start = SC_LOGIC_0;
    ap_reg_ioackin_mem_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sign_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_mem_AWVALID, "(port)m_axi_mem_AWVALID");
    sc_trace(mVcdFile, m_axi_mem_AWREADY, "(port)m_axi_mem_AWREADY");
    sc_trace(mVcdFile, m_axi_mem_AWADDR, "(port)m_axi_mem_AWADDR");
    sc_trace(mVcdFile, m_axi_mem_AWID, "(port)m_axi_mem_AWID");
    sc_trace(mVcdFile, m_axi_mem_AWLEN, "(port)m_axi_mem_AWLEN");
    sc_trace(mVcdFile, m_axi_mem_AWSIZE, "(port)m_axi_mem_AWSIZE");
    sc_trace(mVcdFile, m_axi_mem_AWBURST, "(port)m_axi_mem_AWBURST");
    sc_trace(mVcdFile, m_axi_mem_AWLOCK, "(port)m_axi_mem_AWLOCK");
    sc_trace(mVcdFile, m_axi_mem_AWCACHE, "(port)m_axi_mem_AWCACHE");
    sc_trace(mVcdFile, m_axi_mem_AWPROT, "(port)m_axi_mem_AWPROT");
    sc_trace(mVcdFile, m_axi_mem_AWQOS, "(port)m_axi_mem_AWQOS");
    sc_trace(mVcdFile, m_axi_mem_AWREGION, "(port)m_axi_mem_AWREGION");
    sc_trace(mVcdFile, m_axi_mem_AWUSER, "(port)m_axi_mem_AWUSER");
    sc_trace(mVcdFile, m_axi_mem_WVALID, "(port)m_axi_mem_WVALID");
    sc_trace(mVcdFile, m_axi_mem_WREADY, "(port)m_axi_mem_WREADY");
    sc_trace(mVcdFile, m_axi_mem_WDATA, "(port)m_axi_mem_WDATA");
    sc_trace(mVcdFile, m_axi_mem_WSTRB, "(port)m_axi_mem_WSTRB");
    sc_trace(mVcdFile, m_axi_mem_WLAST, "(port)m_axi_mem_WLAST");
    sc_trace(mVcdFile, m_axi_mem_WID, "(port)m_axi_mem_WID");
    sc_trace(mVcdFile, m_axi_mem_WUSER, "(port)m_axi_mem_WUSER");
    sc_trace(mVcdFile, m_axi_mem_ARVALID, "(port)m_axi_mem_ARVALID");
    sc_trace(mVcdFile, m_axi_mem_ARREADY, "(port)m_axi_mem_ARREADY");
    sc_trace(mVcdFile, m_axi_mem_ARADDR, "(port)m_axi_mem_ARADDR");
    sc_trace(mVcdFile, m_axi_mem_ARID, "(port)m_axi_mem_ARID");
    sc_trace(mVcdFile, m_axi_mem_ARLEN, "(port)m_axi_mem_ARLEN");
    sc_trace(mVcdFile, m_axi_mem_ARSIZE, "(port)m_axi_mem_ARSIZE");
    sc_trace(mVcdFile, m_axi_mem_ARBURST, "(port)m_axi_mem_ARBURST");
    sc_trace(mVcdFile, m_axi_mem_ARLOCK, "(port)m_axi_mem_ARLOCK");
    sc_trace(mVcdFile, m_axi_mem_ARCACHE, "(port)m_axi_mem_ARCACHE");
    sc_trace(mVcdFile, m_axi_mem_ARPROT, "(port)m_axi_mem_ARPROT");
    sc_trace(mVcdFile, m_axi_mem_ARQOS, "(port)m_axi_mem_ARQOS");
    sc_trace(mVcdFile, m_axi_mem_ARREGION, "(port)m_axi_mem_ARREGION");
    sc_trace(mVcdFile, m_axi_mem_ARUSER, "(port)m_axi_mem_ARUSER");
    sc_trace(mVcdFile, m_axi_mem_RVALID, "(port)m_axi_mem_RVALID");
    sc_trace(mVcdFile, m_axi_mem_RREADY, "(port)m_axi_mem_RREADY");
    sc_trace(mVcdFile, m_axi_mem_RDATA, "(port)m_axi_mem_RDATA");
    sc_trace(mVcdFile, m_axi_mem_RLAST, "(port)m_axi_mem_RLAST");
    sc_trace(mVcdFile, m_axi_mem_RID, "(port)m_axi_mem_RID");
    sc_trace(mVcdFile, m_axi_mem_RUSER, "(port)m_axi_mem_RUSER");
    sc_trace(mVcdFile, m_axi_mem_RRESP, "(port)m_axi_mem_RRESP");
    sc_trace(mVcdFile, m_axi_mem_BVALID, "(port)m_axi_mem_BVALID");
    sc_trace(mVcdFile, m_axi_mem_BREADY, "(port)m_axi_mem_BREADY");
    sc_trace(mVcdFile, m_axi_mem_BRESP, "(port)m_axi_mem_BRESP");
    sc_trace(mVcdFile, m_axi_mem_BID, "(port)m_axi_mem_BID");
    sc_trace(mVcdFile, m_axi_mem_BUSER, "(port)m_axi_mem_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, num_blocks, "num_blocks");
    sc_trace(mVcdFile, sk_address0, "sk_address0");
    sc_trace(mVcdFile, sk_ce0, "sk_ce0");
    sc_trace(mVcdFile, sk_q0, "sk_q0");
    sc_trace(mVcdFile, signature_out_address0, "signature_out_address0");
    sc_trace(mVcdFile, signature_out_ce0, "signature_out_ce0");
    sc_trace(mVcdFile, signature_out_we0, "signature_out_we0");
    sc_trace(mVcdFile, mem_blk_n_AR, "mem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, exitcond3_fu_1021_p2, "exitcond3_fu_1021_p2");
    sc_trace(mVcdFile, mem_blk_n_R, "mem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, exitcond2_fu_1049_p2, "exitcond2_fu_1049_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, exitcond1_fu_1102_p2, "exitcond1_fu_1102_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, exitcond_fu_1130_p2, "exitcond_fu_1130_p2");
    sc_trace(mVcdFile, mem_AWREADY, "mem_AWREADY");
    sc_trace(mVcdFile, mem_WREADY, "mem_WREADY");
    sc_trace(mVcdFile, mem_ARVALID, "mem_ARVALID");
    sc_trace(mVcdFile, mem_ARREADY, "mem_ARREADY");
    sc_trace(mVcdFile, mem_ARADDR, "mem_ARADDR");
    sc_trace(mVcdFile, mem_RVALID, "mem_RVALID");
    sc_trace(mVcdFile, mem_RREADY, "mem_RREADY");
    sc_trace(mVcdFile, mem_RDATA, "mem_RDATA");
    sc_trace(mVcdFile, mem_RLAST, "mem_RLAST");
    sc_trace(mVcdFile, mem_RID, "mem_RID");
    sc_trace(mVcdFile, mem_RUSER, "mem_RUSER");
    sc_trace(mVcdFile, mem_RRESP, "mem_RRESP");
    sc_trace(mVcdFile, mem_BVALID, "mem_BVALID");
    sc_trace(mVcdFile, mem_BRESP, "mem_BRESP");
    sc_trace(mVcdFile, mem_BID, "mem_BID");
    sc_trace(mVcdFile, mem_BUSER, "mem_BUSER");
    sc_trace(mVcdFile, reg_880, "reg_880");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_ap_done, "grp_sha512_update_32_1_fu_781_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, reg_886, "reg_886");
    sc_trace(mVcdFile, reg_892, "reg_892");
    sc_trace(mVcdFile, ap_block_state24, "ap_block_state24");
    sc_trace(mVcdFile, ap_block_state56, "ap_block_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_ap_done, "grp_sha512_update_128_fu_731_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, num_blocks_read_reg_1258, "num_blocks_read_reg_1258");
    sc_trace(mVcdFile, indvarinc_fu_909_p2, "indvarinc_fu_909_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_73_fu_932_p2, "i_73_fu_932_p2");
    sc_trace(mVcdFile, i_73_reg_1275, "i_73_reg_1275");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_i_i_fu_926_p2, "exitcond_i_i_fu_926_p2");
    sc_trace(mVcdFile, hash_length_reg_1285, "hash_length_reg_1285");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_ap_done, "grp_sha512_update_32_fu_671_ap_done");
    sc_trace(mVcdFile, hash_curlen_reg_1290, "hash_curlen_reg_1290");
    sc_trace(mVcdFile, az_addr_reg_1295, "az_addr_reg_1295");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, az_addr_1_reg_1300, "az_addr_1_reg_1300");
    sc_trace(mVcdFile, i_74_fu_1004_p2, "i_74_fu_1004_p2");
    sc_trace(mVcdFile, i_74_reg_1308, "i_74_reg_1308");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, sum3_i_i_cast_fu_1016_p1, "sum3_i_i_cast_fu_1016_p1");
    sc_trace(mVcdFile, sum3_i_i_cast_reg_1313, "sum3_i_i_cast_reg_1313");
    sc_trace(mVcdFile, exitcond_i_i1_fu_998_p2, "exitcond_i_i1_fu_998_p2");
    sc_trace(mVcdFile, i_75_fu_1026_p2, "i_75_fu_1026_p2");
    sc_trace(mVcdFile, i_75_reg_1326, "i_75_reg_1326");
    sc_trace(mVcdFile, ap_sig_ioackin_mem_ARREADY, "ap_sig_ioackin_mem_ARREADY");
    sc_trace(mVcdFile, ap_block_state17_io, "ap_block_state17_io");
    sc_trace(mVcdFile, j_3_fu_1055_p2, "j_3_fu_1055_p2");
    sc_trace(mVcdFile, j_3_reg_1340, "j_3_reg_1340");
    sc_trace(mVcdFile, i_2_fu_1072_p2, "i_2_fu_1072_p2");
    sc_trace(mVcdFile, i_2_reg_1348, "i_2_reg_1348");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_i_fu_1078_p1, "tmp_i_fu_1078_p1");
    sc_trace(mVcdFile, tmp_i_reg_1353, "tmp_i_reg_1353");
    sc_trace(mVcdFile, exitcond_i_fu_1066_p2, "exitcond_i_fu_1066_p2");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_ap_return, "grp_crypto_sign_ed25519_20_fu_844_ap_return");
    sc_trace(mVcdFile, tmp_i1_reg_1363, "tmp_i1_reg_1363");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_ap_done, "grp_crypto_sign_ed25519_18_fu_849_ap_done");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_ap_done, "grp_crypto_sign_ed25519_20_fu_844_ap_done");
    sc_trace(mVcdFile, ap_block_state38_on_subcall_done, "ap_block_state38_on_subcall_done");
    sc_trace(mVcdFile, signature_addr_2_reg_1368, "signature_addr_2_reg_1368");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, i_76_fu_1107_p2, "i_76_fu_1107_p2");
    sc_trace(mVcdFile, i_76_reg_1386, "i_76_reg_1386");
    sc_trace(mVcdFile, ap_block_state49_io, "ap_block_state49_io");
    sc_trace(mVcdFile, j_4_fu_1136_p2, "j_4_fu_1136_p2");
    sc_trace(mVcdFile, j_4_reg_1400, "j_4_reg_1400");
    sc_trace(mVcdFile, i_3_fu_1153_p2, "i_3_fu_1153_p2");
    sc_trace(mVcdFile, i_3_reg_1408, "i_3_reg_1408");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, tmp_i2_fu_1159_p1, "tmp_i2_fu_1159_p1");
    sc_trace(mVcdFile, tmp_i2_reg_1413, "tmp_i2_reg_1413");
    sc_trace(mVcdFile, exitcond_i1_fu_1147_p2, "exitcond_i1_fu_1147_p2");
    sc_trace(mVcdFile, i_77_fu_1175_p2, "i_77_fu_1175_p2");
    sc_trace(mVcdFile, i_77_reg_1426, "i_77_reg_1426");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, tmp_i3_fu_1181_p1, "tmp_i3_fu_1181_p1");
    sc_trace(mVcdFile, tmp_i3_reg_1431, "tmp_i3_reg_1431");
    sc_trace(mVcdFile, exitcond1_i_fu_1169_p2, "exitcond1_i_fu_1169_p2");
    sc_trace(mVcdFile, i_78_fu_1202_p2, "i_78_fu_1202_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, exitcond_i2_fu_1191_p2, "exitcond_i2_fu_1191_p2");
    sc_trace(mVcdFile, i_79_fu_1214_p2, "i_79_fu_1214_p2");
    sc_trace(mVcdFile, i_79_reg_1452, "i_79_reg_1452");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, exitcond_i3_fu_1208_p2, "exitcond_i3_fu_1208_p2");
    sc_trace(mVcdFile, i_80_fu_1247_p2, "i_80_fu_1247_p2");
    sc_trace(mVcdFile, i_80_reg_1465, "i_80_reg_1465");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, tmp_i5_fu_1253_p1, "tmp_i5_fu_1253_p1");
    sc_trace(mVcdFile, tmp_i5_reg_1470, "tmp_i5_reg_1470");
    sc_trace(mVcdFile, exitcond_i4_fu_1241_p2, "exitcond_i4_fu_1241_p2");
    sc_trace(mVcdFile, t_11_address0, "t_11_address0");
    sc_trace(mVcdFile, t_11_ce0, "t_11_ce0");
    sc_trace(mVcdFile, t_11_we0, "t_11_we0");
    sc_trace(mVcdFile, t_11_d0, "t_11_d0");
    sc_trace(mVcdFile, t_11_q0, "t_11_q0");
    sc_trace(mVcdFile, t_10_address0, "t_10_address0");
    sc_trace(mVcdFile, t_10_ce0, "t_10_ce0");
    sc_trace(mVcdFile, t_10_we0, "t_10_we0");
    sc_trace(mVcdFile, t_10_d0, "t_10_d0");
    sc_trace(mVcdFile, t_10_q0, "t_10_q0");
    sc_trace(mVcdFile, tx_v_address0, "tx_v_address0");
    sc_trace(mVcdFile, tx_v_ce0, "tx_v_ce0");
    sc_trace(mVcdFile, tx_v_we0, "tx_v_we0");
    sc_trace(mVcdFile, tx_v_q0, "tx_v_q0");
    sc_trace(mVcdFile, tx_v_address1, "tx_v_address1");
    sc_trace(mVcdFile, tx_v_ce1, "tx_v_ce1");
    sc_trace(mVcdFile, tx_v_we1, "tx_v_we1");
    sc_trace(mVcdFile, tx_v_q1, "tx_v_q1");
    sc_trace(mVcdFile, ty_v_address0, "ty_v_address0");
    sc_trace(mVcdFile, ty_v_ce0, "ty_v_ce0");
    sc_trace(mVcdFile, ty_v_we0, "ty_v_we0");
    sc_trace(mVcdFile, ty_v_q0, "ty_v_q0");
    sc_trace(mVcdFile, ty_v_address1, "ty_v_address1");
    sc_trace(mVcdFile, ty_v_ce1, "ty_v_ce1");
    sc_trace(mVcdFile, ty_v_we1, "ty_v_we1");
    sc_trace(mVcdFile, ty_v_q1, "ty_v_q1");
    sc_trace(mVcdFile, zi_v_address0, "zi_v_address0");
    sc_trace(mVcdFile, zi_v_ce0, "zi_v_ce0");
    sc_trace(mVcdFile, zi_v_we0, "zi_v_we0");
    sc_trace(mVcdFile, zi_v_q0, "zi_v_q0");
    sc_trace(mVcdFile, zi_v_ce1, "zi_v_ce1");
    sc_trace(mVcdFile, zi_v_we1, "zi_v_we1");
    sc_trace(mVcdFile, zi_v_q1, "zi_v_q1");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, pk_address0, "pk_address0");
    sc_trace(mVcdFile, pk_ce0, "pk_ce0");
    sc_trace(mVcdFile, pk_we0, "pk_we0");
    sc_trace(mVcdFile, pk_q0, "pk_q0");
    sc_trace(mVcdFile, az_address0, "az_address0");
    sc_trace(mVcdFile, az_ce0, "az_ce0");
    sc_trace(mVcdFile, az_we0, "az_we0");
    sc_trace(mVcdFile, az_d0, "az_d0");
    sc_trace(mVcdFile, az_q0, "az_q0");
    sc_trace(mVcdFile, az_address1, "az_address1");
    sc_trace(mVcdFile, az_ce1, "az_ce1");
    sc_trace(mVcdFile, az_we1, "az_we1");
    sc_trace(mVcdFile, az_d1, "az_d1");
    sc_trace(mVcdFile, az_q1, "az_q1");
    sc_trace(mVcdFile, nonce_address0, "nonce_address0");
    sc_trace(mVcdFile, nonce_ce0, "nonce_ce0");
    sc_trace(mVcdFile, nonce_we0, "nonce_we0");
    sc_trace(mVcdFile, nonce_q0, "nonce_q0");
    sc_trace(mVcdFile, nonce_ce1, "nonce_ce1");
    sc_trace(mVcdFile, nonce_we1, "nonce_we1");
    sc_trace(mVcdFile, hram_address0, "hram_address0");
    sc_trace(mVcdFile, hram_ce0, "hram_ce0");
    sc_trace(mVcdFile, hram_we0, "hram_we0");
    sc_trace(mVcdFile, hram_q0, "hram_q0");
    sc_trace(mVcdFile, hram_ce1, "hram_ce1");
    sc_trace(mVcdFile, hram_we1, "hram_we1");
    sc_trace(mVcdFile, signature_address0, "signature_address0");
    sc_trace(mVcdFile, signature_ce0, "signature_ce0");
    sc_trace(mVcdFile, signature_we0, "signature_we0");
    sc_trace(mVcdFile, signature_d0, "signature_d0");
    sc_trace(mVcdFile, signature_q0, "signature_q0");
    sc_trace(mVcdFile, temp_buf_address0, "temp_buf_address0");
    sc_trace(mVcdFile, temp_buf_ce0, "temp_buf_ce0");
    sc_trace(mVcdFile, temp_buf_we0, "temp_buf_we0");
    sc_trace(mVcdFile, temp_buf_q0, "temp_buf_q0");
    sc_trace(mVcdFile, sck_v_address0, "sck_v_address0");
    sc_trace(mVcdFile, sck_v_ce0, "sck_v_ce0");
    sc_trace(mVcdFile, sck_v_we0, "sck_v_we0");
    sc_trace(mVcdFile, sck_v_q0, "sck_v_q0");
    sc_trace(mVcdFile, sck_v_ce1, "sck_v_ce1");
    sc_trace(mVcdFile, sck_v_q1, "sck_v_q1");
    sc_trace(mVcdFile, scs_v_address0, "scs_v_address0");
    sc_trace(mVcdFile, scs_v_ce0, "scs_v_ce0");
    sc_trace(mVcdFile, scs_v_we0, "scs_v_we0");
    sc_trace(mVcdFile, scs_v_d0, "scs_v_d0");
    sc_trace(mVcdFile, scs_v_q0, "scs_v_q0");
    sc_trace(mVcdFile, scs_v_ce1, "scs_v_ce1");
    sc_trace(mVcdFile, scs_v_we1, "scs_v_we1");
    sc_trace(mVcdFile, scs_v_q1, "scs_v_q1");
    sc_trace(mVcdFile, scsk_v_address0, "scsk_v_address0");
    sc_trace(mVcdFile, scsk_v_ce0, "scsk_v_ce0");
    sc_trace(mVcdFile, scsk_v_we0, "scsk_v_we0");
    sc_trace(mVcdFile, scsk_v_q0, "scsk_v_q0");
    sc_trace(mVcdFile, ger_x_v_address0, "ger_x_v_address0");
    sc_trace(mVcdFile, ger_x_v_ce0, "ger_x_v_ce0");
    sc_trace(mVcdFile, ger_x_v_we0, "ger_x_v_we0");
    sc_trace(mVcdFile, ger_x_v_q0, "ger_x_v_q0");
    sc_trace(mVcdFile, ger_x_v_ce1, "ger_x_v_ce1");
    sc_trace(mVcdFile, ger_x_v_we1, "ger_x_v_we1");
    sc_trace(mVcdFile, ger_x_v_q1, "ger_x_v_q1");
    sc_trace(mVcdFile, ger_y_v_address0, "ger_y_v_address0");
    sc_trace(mVcdFile, ger_y_v_ce0, "ger_y_v_ce0");
    sc_trace(mVcdFile, ger_y_v_we0, "ger_y_v_we0");
    sc_trace(mVcdFile, ger_y_v_q0, "ger_y_v_q0");
    sc_trace(mVcdFile, ger_y_v_ce1, "ger_y_v_ce1");
    sc_trace(mVcdFile, ger_y_v_we1, "ger_y_v_we1");
    sc_trace(mVcdFile, ger_y_v_q1, "ger_y_v_q1");
    sc_trace(mVcdFile, ger_z_v_address0, "ger_z_v_address0");
    sc_trace(mVcdFile, ger_z_v_ce0, "ger_z_v_ce0");
    sc_trace(mVcdFile, ger_z_v_we0, "ger_z_v_we0");
    sc_trace(mVcdFile, ger_z_v_q0, "ger_z_v_q0");
    sc_trace(mVcdFile, ger_z_v_ce1, "ger_z_v_ce1");
    sc_trace(mVcdFile, ger_z_v_we1, "ger_z_v_we1");
    sc_trace(mVcdFile, ger_z_v_q1, "ger_z_v_q1");
    sc_trace(mVcdFile, ger_t_v_q0, "ger_t_v_q0");
    sc_trace(mVcdFile, ger_t_v_q1, "ger_t_v_q1");
    sc_trace(mVcdFile, hash_state_address0, "hash_state_address0");
    sc_trace(mVcdFile, hash_state_ce0, "hash_state_ce0");
    sc_trace(mVcdFile, hash_state_we0, "hash_state_we0");
    sc_trace(mVcdFile, hash_state_d0, "hash_state_d0");
    sc_trace(mVcdFile, hash_state_q0, "hash_state_q0");
    sc_trace(mVcdFile, hash_state_ce1, "hash_state_ce1");
    sc_trace(mVcdFile, hash_state_we1, "hash_state_we1");
    sc_trace(mVcdFile, hash_buf_address0, "hash_buf_address0");
    sc_trace(mVcdFile, hash_buf_ce0, "hash_buf_ce0");
    sc_trace(mVcdFile, hash_buf_we0, "hash_buf_we0");
    sc_trace(mVcdFile, hash_buf_d0, "hash_buf_d0");
    sc_trace(mVcdFile, hash_buf_q0, "hash_buf_q0");
    sc_trace(mVcdFile, hash_buf_ce1, "hash_buf_ce1");
    sc_trace(mVcdFile, hash_buf_we1, "hash_buf_we1");
    sc_trace(mVcdFile, hash_buf_q1, "hash_buf_q1");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_ap_start, "grp_sha512_init_fu_653_ap_start");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_ap_done, "grp_sha512_init_fu_653_ap_done");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_ap_idle, "grp_sha512_init_fu_653_ap_idle");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_ap_ready, "grp_sha512_init_fu_653_ap_ready");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_address0, "grp_sha512_init_fu_653_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_ce0, "grp_sha512_init_fu_653_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_we0, "grp_sha512_init_fu_653_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_d0, "grp_sha512_init_fu_653_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_address1, "grp_sha512_init_fu_653_md_state_address1");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_ce1, "grp_sha512_init_fu_653_md_state_ce1");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_we1, "grp_sha512_init_fu_653_md_state_we1");
    sc_trace(mVcdFile, grp_sha512_init_fu_653_md_state_d1, "grp_sha512_init_fu_653_md_state_d1");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_ap_start, "grp_sha512_update_32_fu_671_ap_start");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_ap_idle, "grp_sha512_update_32_fu_671_ap_idle");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_ap_ready, "grp_sha512_update_32_fu_671_ap_ready");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_state_address0, "grp_sha512_update_32_fu_671_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_state_ce0, "grp_sha512_update_32_fu_671_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_state_we0, "grp_sha512_update_32_fu_671_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_state_d0, "grp_sha512_update_32_fu_671_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_buf_address0, "grp_sha512_update_32_fu_671_md_buf_address0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_buf_ce0, "grp_sha512_update_32_fu_671_md_buf_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_buf_we0, "grp_sha512_update_32_fu_671_md_buf_we0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_md_buf_d0, "grp_sha512_update_32_fu_671_md_buf_d0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_in_r_address0, "grp_sha512_update_32_fu_671_in_r_address0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_in_r_ce0, "grp_sha512_update_32_fu_671_in_r_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_ap_return_0, "grp_sha512_update_32_fu_671_ap_return_0");
    sc_trace(mVcdFile, grp_sha512_update_32_fu_671_ap_return_1, "grp_sha512_update_32_fu_671_ap_return_1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_ap_start, "grp_sha512_final_fu_693_ap_start");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_ap_done, "grp_sha512_final_fu_693_ap_done");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_ap_idle, "grp_sha512_final_fu_693_ap_idle");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_ap_ready, "grp_sha512_final_fu_693_ap_ready");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_length_read, "grp_sha512_final_fu_693_md_length_read");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_state_address0, "grp_sha512_final_fu_693_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_state_ce0, "grp_sha512_final_fu_693_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_state_we0, "grp_sha512_final_fu_693_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_state_d0, "grp_sha512_final_fu_693_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_curlen_read, "grp_sha512_final_fu_693_md_curlen_read");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_address0, "grp_sha512_final_fu_693_md_buf_address0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_ce0, "grp_sha512_final_fu_693_md_buf_ce0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_we0, "grp_sha512_final_fu_693_md_buf_we0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_d0, "grp_sha512_final_fu_693_md_buf_d0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_address1, "grp_sha512_final_fu_693_md_buf_address1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_ce1, "grp_sha512_final_fu_693_md_buf_ce1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_we1, "grp_sha512_final_fu_693_md_buf_we1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_md_buf_d1, "grp_sha512_final_fu_693_md_buf_d1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_address0, "grp_sha512_final_fu_693_out_r_address0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_ce0, "grp_sha512_final_fu_693_out_r_ce0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_we0, "grp_sha512_final_fu_693_out_r_we0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_d0, "grp_sha512_final_fu_693_out_r_d0");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_address1, "grp_sha512_final_fu_693_out_r_address1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_ce1, "grp_sha512_final_fu_693_out_r_ce1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_we1, "grp_sha512_final_fu_693_out_r_we1");
    sc_trace(mVcdFile, grp_sha512_final_fu_693_out_r_d1, "grp_sha512_final_fu_693_out_r_d1");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_ap_start, "grp_sha512_update_128_fu_731_ap_start");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_ap_idle, "grp_sha512_update_128_fu_731_ap_idle");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_ap_ready, "grp_sha512_update_128_fu_731_ap_ready");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_length_read, "grp_sha512_update_128_fu_731_md_length_read");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_state_address0, "grp_sha512_update_128_fu_731_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_state_ce0, "grp_sha512_update_128_fu_731_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_state_we0, "grp_sha512_update_128_fu_731_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_state_d0, "grp_sha512_update_128_fu_731_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_curlen_read, "grp_sha512_update_128_fu_731_md_curlen_read");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_buf_address0, "grp_sha512_update_128_fu_731_md_buf_address0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_buf_ce0, "grp_sha512_update_128_fu_731_md_buf_ce0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_buf_we0, "grp_sha512_update_128_fu_731_md_buf_we0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_md_buf_d0, "grp_sha512_update_128_fu_731_md_buf_d0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_in_r_address0, "grp_sha512_update_128_fu_731_in_r_address0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_in_r_ce0, "grp_sha512_update_128_fu_731_in_r_ce0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_ap_return_0, "grp_sha512_update_128_fu_731_ap_return_0");
    sc_trace(mVcdFile, grp_sha512_update_128_fu_731_ap_return_1, "grp_sha512_update_128_fu_731_ap_return_1");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_ap_start, "grp_p_memmove_fu_766_ap_start");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_ap_done, "grp_p_memmove_fu_766_ap_done");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_ap_idle, "grp_p_memmove_fu_766_ap_idle");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_ap_ready, "grp_p_memmove_fu_766_ap_ready");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_dst_address0, "grp_p_memmove_fu_766_dst_address0");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_dst_ce0, "grp_p_memmove_fu_766_dst_ce0");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_dst_we0, "grp_p_memmove_fu_766_dst_we0");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_dst_d0, "grp_p_memmove_fu_766_dst_d0");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_src_address0, "grp_p_memmove_fu_766_src_address0");
    sc_trace(mVcdFile, grp_p_memmove_fu_766_src_ce0, "grp_p_memmove_fu_766_src_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_ap_start, "grp_sha512_update_32_1_fu_781_ap_start");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_ap_idle, "grp_sha512_update_32_1_fu_781_ap_idle");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_ap_ready, "grp_sha512_update_32_1_fu_781_ap_ready");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_length_read, "grp_sha512_update_32_1_fu_781_md_length_read");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_state_address0, "grp_sha512_update_32_1_fu_781_md_state_address0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_state_ce0, "grp_sha512_update_32_1_fu_781_md_state_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_state_we0, "grp_sha512_update_32_1_fu_781_md_state_we0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_state_d0, "grp_sha512_update_32_1_fu_781_md_state_d0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_curlen_read, "grp_sha512_update_32_1_fu_781_md_curlen_read");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_buf_address0, "grp_sha512_update_32_1_fu_781_md_buf_address0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_buf_ce0, "grp_sha512_update_32_1_fu_781_md_buf_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_buf_we0, "grp_sha512_update_32_1_fu_781_md_buf_we0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_md_buf_d0, "grp_sha512_update_32_1_fu_781_md_buf_d0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_in_r_address0, "grp_sha512_update_32_1_fu_781_in_r_address0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_in_r_ce0, "grp_sha512_update_32_1_fu_781_in_r_ce0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_in_offset, "grp_sha512_update_32_1_fu_781_in_offset");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_ap_return_0, "grp_sha512_update_32_1_fu_781_ap_return_0");
    sc_trace(mVcdFile, grp_sha512_update_32_1_fu_781_ap_return_1, "grp_sha512_update_32_1_fu_781_ap_return_1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_ap_start, "grp_crypto_sign_ed25519_13_fu_797_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_ap_done, "grp_crypto_sign_ed25519_13_fu_797_ap_done");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_ap_idle, "grp_crypto_sign_ed25519_13_fu_797_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_ap_ready, "grp_crypto_sign_ed25519_13_fu_797_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_address0, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce0, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_we0, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_d0, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_address1, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce1, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_we1, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_x_v_d1, "grp_crypto_sign_ed25519_13_fu_797_r_x_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_address0, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce0, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_we0, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_d0, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_address1, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce1, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_we1, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_y_v_d1, "grp_crypto_sign_ed25519_13_fu_797_r_y_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_address0, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce0, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_we0, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_d0, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_address1, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce1, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_we1, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_z_v_d1, "grp_crypto_sign_ed25519_13_fu_797_r_z_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_address0, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce0, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_we0, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_d0, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_address1, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce1, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_we1, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_r_t_v_d1, "grp_crypto_sign_ed25519_13_fu_797_r_t_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_s_v_address0, "grp_crypto_sign_ed25519_13_fu_797_s_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_s_v_ce0, "grp_crypto_sign_ed25519_13_fu_797_s_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_s_v_address1, "grp_crypto_sign_ed25519_13_fu_797_s_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_13_fu_797_s_v_ce1, "grp_crypto_sign_ed25519_13_fu_797_s_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_ap_start, "grp_crypto_sign_ed25519_15_fu_812_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_ap_done, "grp_crypto_sign_ed25519_15_fu_812_ap_done");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_ap_idle, "grp_crypto_sign_ed25519_15_fu_812_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_ap_ready, "grp_crypto_sign_ed25519_15_fu_812_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_r_v_address0, "grp_crypto_sign_ed25519_15_fu_812_r_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_r_v_ce0, "grp_crypto_sign_ed25519_15_fu_812_r_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_r_v_we0, "grp_crypto_sign_ed25519_15_fu_812_r_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_r_v_d0, "grp_crypto_sign_ed25519_15_fu_812_r_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_y_v_address0, "grp_crypto_sign_ed25519_15_fu_812_y_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_15_fu_812_y_v_ce0, "grp_crypto_sign_ed25519_15_fu_812_y_v_ce0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_ap_start, "grp_barrett_reduce_fu_822_ap_start");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_ap_done, "grp_barrett_reduce_fu_822_ap_done");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_ap_idle, "grp_barrett_reduce_fu_822_ap_idle");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_ap_ready, "grp_barrett_reduce_fu_822_ap_ready");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_r_v_address0, "grp_barrett_reduce_fu_822_r_v_address0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_r_v_ce0, "grp_barrett_reduce_fu_822_r_v_ce0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_r_v_we0, "grp_barrett_reduce_fu_822_r_v_we0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_r_v_d0, "grp_barrett_reduce_fu_822_r_v_d0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_r_v_q0, "grp_barrett_reduce_fu_822_r_v_q0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_x_address0, "grp_barrett_reduce_fu_822_x_address0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_x_ce0, "grp_barrett_reduce_fu_822_x_ce0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_822_x_q0, "grp_barrett_reduce_fu_822_x_q0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_ap_start, "grp_crypto_sign_ed25519_19_fu_832_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_ap_done, "grp_crypto_sign_ed25519_19_fu_832_ap_done");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_ap_idle, "grp_crypto_sign_ed25519_19_fu_832_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_ap_ready, "grp_crypto_sign_ed25519_19_fu_832_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_address0, "grp_crypto_sign_ed25519_19_fu_832_r_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_ce0, "grp_crypto_sign_ed25519_19_fu_832_r_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_we0, "grp_crypto_sign_ed25519_19_fu_832_r_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_d0, "grp_crypto_sign_ed25519_19_fu_832_r_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_address1, "grp_crypto_sign_ed25519_19_fu_832_r_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_ce1, "grp_crypto_sign_ed25519_19_fu_832_r_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_we1, "grp_crypto_sign_ed25519_19_fu_832_r_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_r_v_d1, "grp_crypto_sign_ed25519_19_fu_832_r_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_x_v_address0, "grp_crypto_sign_ed25519_19_fu_832_x_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_19_fu_832_x_v_ce0, "grp_crypto_sign_ed25519_19_fu_832_x_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_ap_start, "grp_crypto_sign_ed25519_9_fu_838_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_ap_done, "grp_crypto_sign_ed25519_9_fu_838_ap_done");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_ap_idle, "grp_crypto_sign_ed25519_9_fu_838_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_ap_ready, "grp_crypto_sign_ed25519_9_fu_838_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_r_address0, "grp_crypto_sign_ed25519_9_fu_838_r_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_r_ce0, "grp_crypto_sign_ed25519_9_fu_838_r_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_r_we0, "grp_crypto_sign_ed25519_9_fu_838_r_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_r_d0, "grp_crypto_sign_ed25519_9_fu_838_r_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_x_v_address0, "grp_crypto_sign_ed25519_9_fu_838_x_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_x_v_ce0, "grp_crypto_sign_ed25519_9_fu_838_x_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_x_v_address1, "grp_crypto_sign_ed25519_9_fu_838_x_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_9_fu_838_x_v_ce1, "grp_crypto_sign_ed25519_9_fu_838_x_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_ap_start, "grp_crypto_sign_ed25519_20_fu_844_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_ap_idle, "grp_crypto_sign_ed25519_20_fu_844_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_ap_ready, "grp_crypto_sign_ed25519_20_fu_844_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_x_v_address0, "grp_crypto_sign_ed25519_20_fu_844_x_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_x_v_ce0, "grp_crypto_sign_ed25519_20_fu_844_x_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_x_v_address1, "grp_crypto_sign_ed25519_20_fu_844_x_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_20_fu_844_x_v_ce1, "grp_crypto_sign_ed25519_20_fu_844_x_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_ap_start, "grp_crypto_sign_ed25519_18_fu_849_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_ap_idle, "grp_crypto_sign_ed25519_18_fu_849_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_ap_ready, "grp_crypto_sign_ed25519_18_fu_849_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_address0, "grp_crypto_sign_ed25519_18_fu_849_r_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_ce0, "grp_crypto_sign_ed25519_18_fu_849_r_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_we0, "grp_crypto_sign_ed25519_18_fu_849_r_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_d0, "grp_crypto_sign_ed25519_18_fu_849_r_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_q0, "grp_crypto_sign_ed25519_18_fu_849_r_v_q0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_address1, "grp_crypto_sign_ed25519_18_fu_849_r_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_ce1, "grp_crypto_sign_ed25519_18_fu_849_r_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_we1, "grp_crypto_sign_ed25519_18_fu_849_r_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_d1, "grp_crypto_sign_ed25519_18_fu_849_r_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_r_v_q1, "grp_crypto_sign_ed25519_18_fu_849_r_v_q1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_x_v_address0, "grp_crypto_sign_ed25519_18_fu_849_x_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_x_v_ce0, "grp_crypto_sign_ed25519_18_fu_849_x_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_x_v_q0, "grp_crypto_sign_ed25519_18_fu_849_x_v_q0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_y_v_address0, "grp_crypto_sign_ed25519_18_fu_849_y_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_18_fu_849_y_v_ce0, "grp_crypto_sign_ed25519_18_fu_849_y_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_ap_start, "grp_crypto_sign_ed25519_16_fu_856_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_ap_done, "grp_crypto_sign_ed25519_16_fu_856_ap_done");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_ap_idle, "grp_crypto_sign_ed25519_16_fu_856_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_ap_ready, "grp_crypto_sign_ed25519_16_fu_856_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_address0, "grp_crypto_sign_ed25519_16_fu_856_r_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_ce0, "grp_crypto_sign_ed25519_16_fu_856_r_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_we0, "grp_crypto_sign_ed25519_16_fu_856_r_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_d0, "grp_crypto_sign_ed25519_16_fu_856_r_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_address1, "grp_crypto_sign_ed25519_16_fu_856_r_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_ce1, "grp_crypto_sign_ed25519_16_fu_856_r_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_we1, "grp_crypto_sign_ed25519_16_fu_856_r_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_r_v_d1, "grp_crypto_sign_ed25519_16_fu_856_r_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_y_v_address0, "grp_crypto_sign_ed25519_16_fu_856_y_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_16_fu_856_y_v_ce0, "grp_crypto_sign_ed25519_16_fu_856_y_v_ce0");
    sc_trace(mVcdFile, invdar_reg_466, "invdar_reg_466");
    sc_trace(mVcdFile, tmp_s_fu_920_p2, "tmp_s_fu_920_p2");
    sc_trace(mVcdFile, i_i_i_reg_477, "i_i_i_reg_477");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_i_i1_reg_489, "i_i_i1_reg_489");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, hash_curlen3_reg_500, "hash_curlen3_reg_500");
    sc_trace(mVcdFile, hash_length3_reg_510, "hash_length3_reg_510");
    sc_trace(mVcdFile, i_reg_520, "i_reg_520");
    sc_trace(mVcdFile, j_reg_531, "j_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, i_i_reg_543, "i_i_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, hash_curlen_1_reg_554, "hash_curlen_1_reg_554");
    sc_trace(mVcdFile, hash_length_1_reg_564, "hash_length_1_reg_564");
    sc_trace(mVcdFile, i_1_reg_574, "i_1_reg_574");
    sc_trace(mVcdFile, j_1_reg_585, "j_1_reg_585");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, i_i1_reg_597, "i_i1_reg_597");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, i_i2_reg_608, "i_i2_reg_608");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, i_1_i_reg_619, "i_1_i_reg_619");
    sc_trace(mVcdFile, i_i3_reg_630, "i_i3_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, i_i4_reg_642, "i_i4_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_reg_grp_sha512_init_fu_653_ap_start, "ap_reg_grp_sha512_init_fu_653_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_reg_grp_sha512_update_32_fu_671_ap_start, "ap_reg_grp_sha512_update_32_fu_671_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_reg_grp_sha512_final_fu_693_ap_start, "ap_reg_grp_sha512_final_fu_693_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_reg_grp_sha512_update_128_fu_731_ap_start, "ap_reg_grp_sha512_update_128_fu_731_ap_start");
    sc_trace(mVcdFile, ap_block_state24_ignore_call0, "ap_block_state24_ignore_call0");
    sc_trace(mVcdFile, ap_block_state56_ignore_call0, "ap_block_state56_ignore_call0");
    sc_trace(mVcdFile, ap_reg_grp_p_memmove_fu_766_ap_start, "ap_reg_grp_p_memmove_fu_766_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_reg_grp_sha512_update_32_1_fu_781_ap_start, "ap_reg_grp_sha512_update_32_1_fu_781_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start, "ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start, "ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_reg_grp_barrett_reduce_fu_822_ap_start, "ap_reg_grp_barrett_reduce_fu_822_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start, "ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start, "ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start, "ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start, "ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start, "ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, tmp_fu_915_p1, "tmp_fu_915_p1");
    sc_trace(mVcdFile, sum_i_i_cast_fu_944_p1, "sum_i_i_cast_fu_944_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_949_p1, "tmp_i_i_fu_949_p1");
    sc_trace(mVcdFile, tmp_802_fu_1061_p1, "tmp_802_fu_1061_p1");
    sc_trace(mVcdFile, tmp_803_fu_1142_p1, "tmp_803_fu_1142_p1");
    sc_trace(mVcdFile, tmp_858_i_fu_1197_p1, "tmp_858_i_fu_1197_p1");
    sc_trace(mVcdFile, tmp_i4_fu_1220_p1, "tmp_i4_fu_1220_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_1236_p1, "sum_i_cast_fu_1236_p1");
    sc_trace(mVcdFile, tmp_80_fu_1038_p1, "tmp_80_fu_1038_p1");
    sc_trace(mVcdFile, tmp_808_fu_1119_p1, "tmp_808_fu_1119_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_mem_ARREADY, "ap_reg_ioackin_mem_ARREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, tmp_863_i_fu_1095_p2, "tmp_863_i_fu_1095_p2");
    sc_trace(mVcdFile, tmp_809_fu_1225_p1, "tmp_809_fu_1225_p1");
    sc_trace(mVcdFile, tmp_800_fu_972_p3, "tmp_800_fu_972_p3");
    sc_trace(mVcdFile, tmp_894_cast_fu_993_p1, "tmp_894_cast_fu_993_p1");
    sc_trace(mVcdFile, tmp_i3_96_fu_1186_p1, "tmp_i3_96_fu_1186_p1");
    sc_trace(mVcdFile, sum_i_i_fu_938_p2, "sum_i_i_fu_938_p2");
    sc_trace(mVcdFile, tmp_784_fu_962_p4, "tmp_784_fu_962_p4");
    sc_trace(mVcdFile, tmp_804_fu_981_p1, "tmp_804_fu_981_p1");
    sc_trace(mVcdFile, tmp_801_fu_985_p3, "tmp_801_fu_985_p3");
    sc_trace(mVcdFile, sum3_i_i_fu_1010_p2, "sum3_i_i_fu_1010_p2");
    sc_trace(mVcdFile, tmp_806_fu_1032_p2, "tmp_806_fu_1032_p2");
    sc_trace(mVcdFile, tmp_i1_91_fu_1088_p3, "tmp_i1_91_fu_1088_p3");
    sc_trace(mVcdFile, tmp_807_fu_1113_p2, "tmp_807_fu_1113_p2");
    sc_trace(mVcdFile, sum_i_fu_1230_p2, "sum_i_fu_1230_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state30_on_subcall_done, "ap_block_state30_on_subcall_done");
    sc_trace(mVcdFile, ap_return, "ap_return");
#endif

    }
    mHdltvinHandle.open("crypto_sign.hdltvin.dat");
    mHdltvoutHandle.open("crypto_sign.hdltvout.dat");
}

crypto_sign::~crypto_sign() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete crypto_sign_AXILiteS_s_axi_U;
    delete crypto_sign_mem_m_axi_U;
    delete t_11_U;
    delete t_10_U;
    delete tx_v_U;
    delete ty_v_U;
    delete zi_v_U;
    delete t_U;
    delete pk_U;
    delete az_U;
    delete nonce_U;
    delete hram_U;
    delete signature_U;
    delete temp_buf_U;
    delete sck_v_U;
    delete scs_v_U;
    delete scsk_v_U;
    delete ger_x_v_U;
    delete ger_y_v_U;
    delete ger_z_v_U;
    delete ger_t_v_U;
    delete hash_state_U;
    delete hash_buf_U;
    delete grp_sha512_init_fu_653;
    delete grp_sha512_update_32_fu_671;
    delete grp_sha512_final_fu_693;
    delete grp_sha512_update_128_fu_731;
    delete grp_p_memmove_fu_766;
    delete grp_sha512_update_32_1_fu_781;
    delete grp_crypto_sign_ed25519_13_fu_797;
    delete grp_crypto_sign_ed25519_15_fu_812;
    delete grp_barrett_reduce_fu_822;
    delete grp_crypto_sign_ed25519_19_fu_832;
    delete grp_crypto_sign_ed25519_9_fu_838;
    delete grp_crypto_sign_ed25519_20_fu_844;
    delete grp_crypto_sign_ed25519_18_fu_849;
    delete grp_crypto_sign_ed25519_16_fu_856;
}

void crypto_sign::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void crypto_sign::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_logic_0;
}

void crypto_sign::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void crypto_sign::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv1_0;
}

void crypto_sign::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv8_0;
}

void crypto_sign::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_80;
}

void crypto_sign::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void crypto_sign::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void crypto_sign::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void crypto_sign::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_barrett_reduce_fu_822_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
              esl_seteq<1,1,1>(exitcond_i_fu_1066_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
              esl_seteq<1,1,1>(exitcond_i1_fu_1147_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
              esl_seteq<1,1,1>(exitcond_i2_fu_1191_p2.read(), ap_const_lv1_1)))) {
            ap_reg_grp_barrett_reduce_fu_822_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_barrett_reduce_fu_822_ap_ready.read())) {
            ap_reg_grp_barrett_reduce_fu_822_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_13_fu_797_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
            ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_15_fu_812_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
            ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_16_fu_856_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
            ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_18_fu_849_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
            ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_19_fu_832_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
            ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_20_fu_844_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
            ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_9_fu_838_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_p_memmove_fu_766_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
            ap_reg_grp_p_memmove_fu_766_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_p_memmove_fu_766_ap_ready.read())) {
            ap_reg_grp_p_memmove_fu_766_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_final_fu_693_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
              esl_seteq<1,1,1>(ap_block_state17_io.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
              esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(exitcond1_fu_1102_p2.read(), ap_const_lv1_1)))) {
            ap_reg_grp_sha512_final_fu_693_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_final_fu_693_ap_ready.read())) {
            ap_reg_grp_sha512_final_fu_693_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_init_fu_653_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(exitcond_i_i_fu_926_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
              esl_seteq<1,1,1>(exitcond_i_i1_fu_998_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
              esl_seteq<1,1,1>(exitcond_i_fu_1066_p2.read(), ap_const_lv1_1)))) {
            ap_reg_grp_sha512_init_fu_653_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_init_fu_653_ap_ready.read())) {
            ap_reg_grp_sha512_init_fu_653_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_update_128_fu_731_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
              !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())) && 
              esl_seteq<1,1,1>(exitcond2_fu_1049_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
              !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())) && 
              esl_seteq<1,1,1>(exitcond_fu_1130_p2.read(), ap_const_lv1_1)))) {
            ap_reg_grp_sha512_update_128_fu_731_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_update_128_fu_731_ap_ready.read())) {
            ap_reg_grp_sha512_update_128_fu_731_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_update_32_1_fu_781_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
            ap_reg_grp_sha512_update_32_1_fu_781_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_update_32_1_fu_781_ap_ready.read())) {
            ap_reg_grp_sha512_update_32_1_fu_781_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_sha512_update_32_fu_671_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_reg_grp_sha512_update_32_fu_671_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha512_update_32_fu_671_ap_ready.read())) {
            ap_reg_grp_sha512_update_32_fu_671_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_mem_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
              esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_state17_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read()) && 
              esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_mem_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, mem_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, mem_ARREADY.read())))) {
            ap_reg_ioackin_mem_ARREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1))) {
        hash_curlen3_reg_500 = grp_sha512_update_128_fu_731_ap_return_1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1))) {
        hash_curlen3_reg_500 = grp_sha512_update_32_1_fu_781_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_curlen_1_reg_554 = grp_sha512_update_128_fu_731_ap_return_1.read();
    } else if ((esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_curlen_1_reg_554 = grp_sha512_update_32_1_fu_781_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1))) {
        hash_length3_reg_510 = grp_sha512_update_128_fu_731_ap_return_0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1))) {
        hash_length3_reg_510 = grp_sha512_update_32_1_fu_781_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_length_1_reg_564 = grp_sha512_update_128_fu_731_ap_return_0.read();
    } else if ((esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_length_1_reg_564 = grp_sha512_update_32_1_fu_781_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_1169_p2.read(), ap_const_lv1_1))) {
        i_1_i_reg_619 = ap_const_lv7_20;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_1191_p2.read()))) {
        i_1_i_reg_619 = i_78_fu_1202_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        i_1_reg_574 = i_76_reg_1386.read();
    } else if ((esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        i_1_reg_574 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        i_i1_reg_597 = i_3_reg_1408.read();
    } else if ((esl_seteq<1,1,1>(grp_sha512_final_fu_693_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        i_i1_reg_597 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        i_i2_reg_608 = i_77_reg_1426.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
                esl_seteq<1,1,1>(grp_barrett_reduce_fu_822_ap_done.read(), ap_const_logic_1))) {
        i_i2_reg_608 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        i_i3_reg_630 = i_79_reg_1452.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
                esl_seteq<1,1,1>(grp_crypto_sign_ed25519_16_fu_856_ap_done.read(), ap_const_logic_1))) {
        i_i3_reg_630 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && 
         esl_seteq<1,1,1>(exitcond_i3_fu_1208_p2.read(), ap_const_lv1_1))) {
        i_i4_reg_642 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        i_i4_reg_642 = i_80_reg_1465.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_i_i1_reg_489 = i_74_reg_1308.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_i_i1_reg_489 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_920_p2.read(), ap_const_lv1_1))) {
        i_i_i_reg_477 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_i_i_reg_477 = i_73_reg_1275.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        i_i_reg_543 = i_2_reg_1348.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                esl_seteq<1,1,1>(grp_sha512_final_fu_693_ap_done.read(), ap_const_logic_1))) {
        i_i_reg_543 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1))) {
        i_reg_520 = i_75_reg_1326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1))) {
        i_reg_520 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_920_p2.read()))) {
        invdar_reg_466 = indvarinc_fu_909_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_466 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        j_1_reg_585 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        j_1_reg_585 = j_4_reg_1400.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        j_reg_531 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        j_reg_531 = j_3_reg_1340.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_sha512_update_32_fu_671_ap_done.read(), ap_const_logic_1))) {
        hash_curlen_reg_1290 = grp_sha512_update_32_fu_671_ap_return_1.read();
        hash_length_reg_1285 = grp_sha512_update_32_fu_671_ap_return_0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        i_2_reg_1348 = i_2_fu_1072_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        i_3_reg_1408 = i_3_fu_1153_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_73_reg_1275 = i_73_fu_932_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_74_reg_1308 = i_74_fu_1004_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_block_state17_io.read(), ap_const_boolean_0))) {
        i_75_reg_1326 = i_75_fu_1026_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0))) {
        i_76_reg_1386 = i_76_fu_1107_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        i_77_reg_1426 = i_77_fu_1175_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        i_79_reg_1452 = i_79_fu_1214_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        i_80_reg_1465 = i_80_fu_1247_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())))) {
        j_3_reg_1340 = j_3_fu_1055_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())))) {
        j_4_reg_1400 = j_4_fu_1136_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        num_blocks_read_reg_1258 = num_blocks.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
  esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())))) {
        reg_880 = grp_sha512_update_32_1_fu_781_ap_return_0.read();
        reg_886 = grp_sha512_update_32_1_fu_781_ap_return_1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()))))) {
        reg_892 = mem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i1_fu_998_p2.read()))) {
        sum3_i_i_cast_reg_1313 = sum3_i_i_cast_fu_1016_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(ap_block_state38_on_subcall_done.read(), ap_const_boolean_0))) {
        tmp_i1_reg_1363 = grp_crypto_sign_ed25519_20_fu_844_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_1147_p2.read()))) {
        tmp_i2_reg_1413 = tmp_i2_fu_1159_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_1169_p2.read()))) {
        tmp_i3_reg_1431 = tmp_i3_fu_1181_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i4_fu_1241_p2.read()))) {
        tmp_i5_reg_1470 = tmp_i5_fu_1253_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_1066_p2.read()))) {
        tmp_i_reg_1353 = tmp_i_fu_1078_p1.read();
    }
}

void crypto_sign::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sign::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void crypto_sign::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void crypto_sign::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void crypto_sign::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void crypto_sign::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void crypto_sign::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void crypto_sign::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void crypto_sign::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void crypto_sign::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sign::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void crypto_sign::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void crypto_sign::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void crypto_sign::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void crypto_sign::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void crypto_sign::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void crypto_sign::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void crypto_sign::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sign::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void crypto_sign::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void crypto_sign::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void crypto_sign::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void crypto_sign::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void crypto_sign::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void crypto_sign::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void crypto_sign::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void crypto_sign::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void crypto_sign::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void crypto_sign::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sign::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void crypto_sign::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void crypto_sign::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void crypto_sign::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void crypto_sign::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void crypto_sign::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void crypto_sign::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void crypto_sign::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void crypto_sign::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void crypto_sign::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void crypto_sign::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sign::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void crypto_sign::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void crypto_sign::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void crypto_sign::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void crypto_sign::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void crypto_sign::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sign::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void crypto_sign::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void crypto_sign::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void crypto_sign::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void crypto_sign::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void crypto_sign::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void crypto_sign::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void crypto_sign::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void crypto_sign::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void crypto_sign::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void crypto_sign::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sign::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void crypto_sign::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void crypto_sign::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void crypto_sign::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[72];
}

void crypto_sign::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void crypto_sign::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sign::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void crypto_sign::thread_ap_block_state17_io() {
    ap_block_state17_io = (esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_mem_ARREADY.read()));
}

void crypto_sign::thread_ap_block_state24() {
    ap_block_state24 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()));
}

void crypto_sign::thread_ap_block_state24_ignore_call0() {
    ap_block_state24_ignore_call0 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()));
}

void crypto_sign::thread_ap_block_state30_on_subcall_done() {
    ap_block_state30_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_barrett_reduce_fu_822_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_sha512_init_fu_653_ap_done.read()));
}

void crypto_sign::thread_ap_block_state38_on_subcall_done() {
    ap_block_state38_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_crypto_sign_ed25519_18_fu_849_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_crypto_sign_ed25519_20_fu_844_ap_done.read()));
}

void crypto_sign::thread_ap_block_state49_io() {
    ap_block_state49_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_mem_ARREADY.read()));
}

void crypto_sign::thread_ap_block_state56() {
    ap_block_state56 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()));
}

void crypto_sign::thread_ap_block_state56_ignore_call0() {
    ap_block_state56_ignore_call0 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()));
}

void crypto_sign::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
         esl_seteq<1,1,1>(exitcond_i4_fu_1241_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sign::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sign::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
         esl_seteq<1,1,1>(exitcond_i4_fu_1241_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sign::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void crypto_sign::thread_ap_sig_ioackin_mem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_ARREADY.read())) {
        ap_sig_ioackin_mem_ARREADY = mem_ARREADY.read();
    } else {
        ap_sig_ioackin_mem_ARREADY = ap_const_logic_1;
    }
}

void crypto_sign::thread_az_addr_1_reg_1300() {
    az_addr_1_reg_1300 =  (sc_lv<6>) (ap_const_lv64_1F);
}

void crypto_sign::thread_az_addr_reg_1295() {
    az_addr_reg_1295 =  (sc_lv<6>) (ap_const_lv64_0);
}

void crypto_sign::thread_az_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        az_address0 =  (sc_lv<6>) (sum3_i_i_cast_fu_1016_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        az_address0 = az_addr_reg_1295.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        az_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_address0 = grp_sha512_final_fu_693_out_r_address0.read();
    } else {
        az_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_az_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        az_address1 =  (sc_lv<6>) (tmp_i3_fu_1181_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        az_address1 = az_addr_1_reg_1300.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        az_address1 =  (sc_lv<6>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_address1 = grp_sha512_final_fu_693_out_r_address1.read();
    } else {
        az_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_az_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        az_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_ce0 = grp_sha512_final_fu_693_out_r_ce0.read();
    } else {
        az_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_az_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        az_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_ce1 = grp_sha512_final_fu_693_out_r_ce1.read();
    } else {
        az_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_az_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        az_d0 = tmp_800_fu_972_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_d0 = grp_sha512_final_fu_693_out_r_d0.read();
    } else {
        az_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign::thread_az_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        az_d1 = tmp_894_cast_fu_993_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_d1 = grp_sha512_final_fu_693_out_r_d1.read();
    } else {
        az_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign::thread_az_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        az_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_we0 = grp_sha512_final_fu_693_out_r_we0.read();
    } else {
        az_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_az_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        az_we1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        az_we1 = grp_sha512_final_fu_693_out_r_we1.read();
    } else {
        az_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_exitcond1_fu_1102_p2() {
    exitcond1_fu_1102_p2 = (!i_1_reg_574.read().is_01() || !num_blocks_read_reg_1258.read().is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_574.read() == num_blocks_read_reg_1258.read());
}

void crypto_sign::thread_exitcond1_i_fu_1169_p2() {
    exitcond1_i_fu_1169_p2 = (!i_i2_reg_608.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_608.read() == ap_const_lv6_20);
}

void crypto_sign::thread_exitcond2_fu_1049_p2() {
    exitcond2_fu_1049_p2 = (!j_reg_531.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_531.read() == ap_const_lv8_80);
}

void crypto_sign::thread_exitcond3_fu_1021_p2() {
    exitcond3_fu_1021_p2 = (!i_reg_520.read().is_01() || !num_blocks_read_reg_1258.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_520.read() == num_blocks_read_reg_1258.read());
}

void crypto_sign::thread_exitcond_fu_1130_p2() {
    exitcond_fu_1130_p2 = (!j_1_reg_585.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_585.read() == ap_const_lv8_80);
}

void crypto_sign::thread_exitcond_i1_fu_1147_p2() {
    exitcond_i1_fu_1147_p2 = (!i_i1_reg_597.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_597.read() == ap_const_lv7_40);
}

void crypto_sign::thread_exitcond_i2_fu_1191_p2() {
    exitcond_i2_fu_1191_p2 = (!i_1_i_reg_619.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_1_i_reg_619.read() == ap_const_lv7_40);
}

void crypto_sign::thread_exitcond_i3_fu_1208_p2() {
    exitcond_i3_fu_1208_p2 = (!i_i3_reg_630.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i3_reg_630.read() == ap_const_lv6_20);
}

void crypto_sign::thread_exitcond_i4_fu_1241_p2() {
    exitcond_i4_fu_1241_p2 = (!i_i4_reg_642.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i4_reg_642.read() == ap_const_lv7_40);
}

void crypto_sign::thread_exitcond_i_fu_1066_p2() {
    exitcond_i_fu_1066_p2 = (!i_i_reg_543.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_543.read() == ap_const_lv7_40);
}

void crypto_sign::thread_exitcond_i_i1_fu_998_p2() {
    exitcond_i_i1_fu_998_p2 = (!i_i_i1_reg_489.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_i1_reg_489.read() == ap_const_lv6_20);
}

void crypto_sign::thread_exitcond_i_i_fu_926_p2() {
    exitcond_i_i_fu_926_p2 = (!i_i_i_reg_477.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_i_reg_477.read() == ap_const_lv6_20);
}

void crypto_sign::thread_ger_x_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ger_x_v_address0 = grp_crypto_sign_ed25519_18_fu_849_x_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_x_v_address0 = grp_crypto_sign_ed25519_13_fu_797_r_x_v_address0.read();
    } else {
        ger_x_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_ger_x_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ger_x_v_ce0 = grp_crypto_sign_ed25519_18_fu_849_x_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_x_v_ce0 = grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce0.read();
    } else {
        ger_x_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_x_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_x_v_ce1 = grp_crypto_sign_ed25519_13_fu_797_r_x_v_ce1.read();
    } else {
        ger_x_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_x_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_x_v_we0 = grp_crypto_sign_ed25519_13_fu_797_r_x_v_we0.read();
    } else {
        ger_x_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_x_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_x_v_we1 = grp_crypto_sign_ed25519_13_fu_797_r_x_v_we1.read();
    } else {
        ger_x_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_y_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ger_y_v_address0 = grp_crypto_sign_ed25519_18_fu_849_x_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_y_v_address0 = grp_crypto_sign_ed25519_13_fu_797_r_y_v_address0.read();
    } else {
        ger_y_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_ger_y_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ger_y_v_ce0 = grp_crypto_sign_ed25519_18_fu_849_x_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_y_v_ce0 = grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce0.read();
    } else {
        ger_y_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_y_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_y_v_ce1 = grp_crypto_sign_ed25519_13_fu_797_r_y_v_ce1.read();
    } else {
        ger_y_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_y_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_y_v_we0 = grp_crypto_sign_ed25519_13_fu_797_r_y_v_we0.read();
    } else {
        ger_y_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_y_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_y_v_we1 = grp_crypto_sign_ed25519_13_fu_797_r_y_v_we1.read();
    } else {
        ger_y_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_z_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ger_z_v_address0 = grp_crypto_sign_ed25519_19_fu_832_x_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_z_v_address0 = grp_crypto_sign_ed25519_13_fu_797_r_z_v_address0.read();
    } else {
        ger_z_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_ger_z_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ger_z_v_ce0 = grp_crypto_sign_ed25519_19_fu_832_x_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_z_v_ce0 = grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce0.read();
    } else {
        ger_z_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_z_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_z_v_ce1 = grp_crypto_sign_ed25519_13_fu_797_r_z_v_ce1.read();
    } else {
        ger_z_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_z_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_z_v_we0 = grp_crypto_sign_ed25519_13_fu_797_r_z_v_we0.read();
    } else {
        ger_z_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ger_z_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        ger_z_v_we1 = grp_crypto_sign_ed25519_13_fu_797_r_z_v_we1.read();
    } else {
        ger_z_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_grp_barrett_reduce_fu_822_ap_start() {
    grp_barrett_reduce_fu_822_ap_start = ap_reg_grp_barrett_reduce_fu_822_ap_start.read();
}

void crypto_sign::thread_grp_barrett_reduce_fu_822_r_v_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        grp_barrett_reduce_fu_822_r_v_q0 = scsk_v_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_barrett_reduce_fu_822_r_v_q0 = scs_v_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_barrett_reduce_fu_822_r_v_q0 = sck_v_q0.read();
    } else {
        grp_barrett_reduce_fu_822_r_v_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_barrett_reduce_fu_822_x_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        grp_barrett_reduce_fu_822_x_q0 = t_11_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_barrett_reduce_fu_822_x_q0 = t_10_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_barrett_reduce_fu_822_x_q0 = t_q0.read();
    } else {
        grp_barrett_reduce_fu_822_x_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_crypto_sign_ed25519_13_fu_797_ap_start() {
    grp_crypto_sign_ed25519_13_fu_797_ap_start = ap_reg_grp_crypto_sign_ed25519_13_fu_797_ap_start.read();
}

void crypto_sign::thread_grp_crypto_sign_ed25519_15_fu_812_ap_start() {
    grp_crypto_sign_ed25519_15_fu_812_ap_start = ap_reg_grp_crypto_sign_ed25519_15_fu_812_ap_start.read();
}

void crypto_sign::thread_grp_crypto_sign_ed25519_16_fu_856_ap_start() {
    grp_crypto_sign_ed25519_16_fu_856_ap_start = ap_reg_grp_crypto_sign_ed25519_16_fu_856_ap_start.read();
}

void crypto_sign::thread_grp_crypto_sign_ed25519_18_fu_849_ap_start() {
    grp_crypto_sign_ed25519_18_fu_849_ap_start = ap_reg_grp_crypto_sign_ed25519_18_fu_849_ap_start.read();
}

void crypto_sign::thread_grp_crypto_sign_ed25519_18_fu_849_r_v_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_crypto_sign_ed25519_18_fu_849_r_v_q0 = ty_v_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_crypto_sign_ed25519_18_fu_849_r_v_q0 = tx_v_q0.read();
    } else {
        grp_crypto_sign_ed25519_18_fu_849_r_v_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_crypto_sign_ed25519_18_fu_849_r_v_q1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_crypto_sign_ed25519_18_fu_849_r_v_q1 = ty_v_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_crypto_sign_ed25519_18_fu_849_r_v_q1 = tx_v_q1.read();
    } else {
        grp_crypto_sign_ed25519_18_fu_849_r_v_q1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_crypto_sign_ed25519_18_fu_849_x_v_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_crypto_sign_ed25519_18_fu_849_x_v_q0 = ger_y_v_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_crypto_sign_ed25519_18_fu_849_x_v_q0 = ger_x_v_q0.read();
    } else {
        grp_crypto_sign_ed25519_18_fu_849_x_v_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_crypto_sign_ed25519_19_fu_832_ap_start() {
    grp_crypto_sign_ed25519_19_fu_832_ap_start = ap_reg_grp_crypto_sign_ed25519_19_fu_832_ap_start.read();
}

void crypto_sign::thread_grp_crypto_sign_ed25519_20_fu_844_ap_start() {
    grp_crypto_sign_ed25519_20_fu_844_ap_start = ap_reg_grp_crypto_sign_ed25519_20_fu_844_ap_start.read();
}

void crypto_sign::thread_grp_crypto_sign_ed25519_9_fu_838_ap_start() {
    grp_crypto_sign_ed25519_9_fu_838_ap_start = ap_reg_grp_crypto_sign_ed25519_9_fu_838_ap_start.read();
}

void crypto_sign::thread_grp_p_memmove_fu_766_ap_start() {
    grp_p_memmove_fu_766_ap_start = ap_reg_grp_p_memmove_fu_766_ap_start.read();
}

void crypto_sign::thread_grp_sha512_final_fu_693_ap_start() {
    grp_sha512_final_fu_693_ap_start = ap_reg_grp_sha512_final_fu_693_ap_start.read();
}

void crypto_sign::thread_grp_sha512_final_fu_693_md_curlen_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        grp_sha512_final_fu_693_md_curlen_read = hash_curlen_1_reg_554.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_sha512_final_fu_693_md_curlen_read = hash_curlen3_reg_500.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_sha512_final_fu_693_md_curlen_read = hash_curlen_reg_1290.read();
    } else {
        grp_sha512_final_fu_693_md_curlen_read =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_sha512_final_fu_693_md_length_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        grp_sha512_final_fu_693_md_length_read = hash_length_1_reg_564.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_sha512_final_fu_693_md_length_read = hash_length3_reg_510.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_sha512_final_fu_693_md_length_read = hash_length_reg_1285.read();
    } else {
        grp_sha512_final_fu_693_md_length_read =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_sha512_init_fu_653_ap_start() {
    grp_sha512_init_fu_653_ap_start = ap_reg_grp_sha512_init_fu_653_ap_start.read();
}

void crypto_sign::thread_grp_sha512_update_128_fu_731_ap_start() {
    grp_sha512_update_128_fu_731_ap_start = ap_reg_grp_sha512_update_128_fu_731_ap_start.read();
}

void crypto_sign::thread_grp_sha512_update_128_fu_731_md_curlen_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_sha512_update_128_fu_731_md_curlen_read = hash_curlen_1_reg_554.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_sha512_update_128_fu_731_md_curlen_read = hash_curlen3_reg_500.read();
    } else {
        grp_sha512_update_128_fu_731_md_curlen_read =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_sha512_update_128_fu_731_md_length_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_sha512_update_128_fu_731_md_length_read = hash_length_1_reg_564.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_sha512_update_128_fu_731_md_length_read = hash_length3_reg_510.read();
    } else {
        grp_sha512_update_128_fu_731_md_length_read =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_sha512_update_32_1_fu_781_ap_start() {
    grp_sha512_update_32_1_fu_781_ap_start = ap_reg_grp_sha512_update_32_1_fu_781_ap_start.read();
}

void crypto_sign::thread_grp_sha512_update_32_1_fu_781_in_offset() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        grp_sha512_update_32_1_fu_781_in_offset = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        grp_sha512_update_32_1_fu_781_in_offset = ap_const_lv7_20;
    } else {
        grp_sha512_update_32_1_fu_781_in_offset = "XXXXXXX";
    }
}

void crypto_sign::thread_grp_sha512_update_32_1_fu_781_md_curlen_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        grp_sha512_update_32_1_fu_781_md_curlen_read = reg_886.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        grp_sha512_update_32_1_fu_781_md_curlen_read = ap_const_lv64_0;
    } else {
        grp_sha512_update_32_1_fu_781_md_curlen_read =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_sha512_update_32_1_fu_781_md_length_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        grp_sha512_update_32_1_fu_781_md_length_read = reg_880.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        grp_sha512_update_32_1_fu_781_md_length_read = ap_const_lv64_0;
    } else {
        grp_sha512_update_32_1_fu_781_md_length_read =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_grp_sha512_update_32_fu_671_ap_start() {
    grp_sha512_update_32_fu_671_ap_start = ap_reg_grp_sha512_update_32_fu_671_ap_start.read();
}

void crypto_sign::thread_hash_buf_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_buf_address0 = grp_sha512_update_32_1_fu_781_md_buf_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_buf_address0 = grp_sha512_update_128_fu_731_md_buf_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_buf_address0 = grp_sha512_final_fu_693_md_buf_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_buf_address0 = grp_sha512_update_32_fu_671_md_buf_address0.read();
    } else {
        hash_buf_address0 = "XXXXXXX";
    }
}

void crypto_sign::thread_hash_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_buf_ce0 = grp_sha512_update_32_1_fu_781_md_buf_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_buf_ce0 = grp_sha512_update_128_fu_731_md_buf_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_buf_ce0 = grp_sha512_final_fu_693_md_buf_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_buf_ce0 = grp_sha512_update_32_fu_671_md_buf_ce0.read();
    } else {
        hash_buf_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_buf_ce1 = grp_sha512_final_fu_693_md_buf_ce1.read();
    } else {
        hash_buf_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_buf_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_buf_d0 = grp_sha512_update_32_1_fu_781_md_buf_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_buf_d0 = grp_sha512_update_128_fu_731_md_buf_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_buf_d0 = grp_sha512_final_fu_693_md_buf_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_buf_d0 = grp_sha512_update_32_fu_671_md_buf_d0.read();
    } else {
        hash_buf_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign::thread_hash_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_buf_we0 = grp_sha512_update_32_1_fu_781_md_buf_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_buf_we0 = grp_sha512_update_128_fu_731_md_buf_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_buf_we0 = grp_sha512_final_fu_693_md_buf_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_buf_we0 = grp_sha512_update_32_fu_671_md_buf_we0.read();
    } else {
        hash_buf_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_buf_we1 = grp_sha512_final_fu_693_md_buf_we1.read();
    } else {
        hash_buf_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_state_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_state_address0 = grp_sha512_update_32_1_fu_781_md_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_state_address0 = grp_sha512_update_128_fu_731_md_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_state_address0 = grp_sha512_final_fu_693_md_state_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_state_address0 = grp_sha512_update_32_fu_671_md_state_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        hash_state_address0 = grp_sha512_init_fu_653_md_state_address0.read();
    } else {
        hash_state_address0 =  (sc_lv<3>) ("XXX");
    }
}

void crypto_sign::thread_hash_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_state_ce0 = grp_sha512_update_32_1_fu_781_md_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_state_ce0 = grp_sha512_update_128_fu_731_md_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_state_ce0 = grp_sha512_final_fu_693_md_state_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_state_ce0 = grp_sha512_update_32_fu_671_md_state_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        hash_state_ce0 = grp_sha512_init_fu_653_md_state_ce0.read();
    } else {
        hash_state_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_state_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        hash_state_ce1 = grp_sha512_init_fu_653_md_state_ce1.read();
    } else {
        hash_state_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_state_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_state_d0 = grp_sha512_update_32_1_fu_781_md_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_state_d0 = grp_sha512_update_128_fu_731_md_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_state_d0 = grp_sha512_final_fu_693_md_state_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_state_d0 = grp_sha512_update_32_fu_671_md_state_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        hash_state_d0 = grp_sha512_init_fu_653_md_state_d0.read();
    } else {
        hash_state_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_hash_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        hash_state_we0 = grp_sha512_update_32_1_fu_781_md_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        hash_state_we0 = grp_sha512_update_128_fu_731_md_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        hash_state_we0 = grp_sha512_final_fu_693_md_state_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        hash_state_we0 = grp_sha512_update_32_fu_671_md_state_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        hash_state_we0 = grp_sha512_init_fu_653_md_state_we0.read();
    } else {
        hash_state_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hash_state_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        hash_state_we1 = grp_sha512_init_fu_653_md_state_we1.read();
    } else {
        hash_state_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hram_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        hram_address0 =  (sc_lv<6>) (tmp_i2_fu_1159_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        hram_address0 = grp_sha512_final_fu_693_out_r_address0.read();
    } else {
        hram_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_hram_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        hram_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        hram_ce0 = grp_sha512_final_fu_693_out_r_ce0.read();
    } else {
        hram_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hram_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        hram_ce1 = grp_sha512_final_fu_693_out_r_ce1.read();
    } else {
        hram_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hram_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        hram_we0 = grp_sha512_final_fu_693_out_r_we0.read();
    } else {
        hram_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_hram_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        hram_we1 = grp_sha512_final_fu_693_out_r_we1.read();
    } else {
        hram_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_i_2_fu_1072_p2() {
    i_2_fu_1072_p2 = (!i_i_reg_543.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i_reg_543.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void crypto_sign::thread_i_3_fu_1153_p2() {
    i_3_fu_1153_p2 = (!i_i1_reg_597.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i1_reg_597.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void crypto_sign::thread_i_73_fu_932_p2() {
    i_73_fu_932_p2 = (!i_i_i_reg_477.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_i_reg_477.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign::thread_i_74_fu_1004_p2() {
    i_74_fu_1004_p2 = (!i_i_i1_reg_489.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_i1_reg_489.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign::thread_i_75_fu_1026_p2() {
    i_75_fu_1026_p2 = (!i_reg_520.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_520.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void crypto_sign::thread_i_76_fu_1107_p2() {
    i_76_fu_1107_p2 = (!i_1_reg_574.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_reg_574.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void crypto_sign::thread_i_77_fu_1175_p2() {
    i_77_fu_1175_p2 = (!i_i2_reg_608.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i2_reg_608.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign::thread_i_78_fu_1202_p2() {
    i_78_fu_1202_p2 = (!i_1_i_reg_619.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_1_i_reg_619.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void crypto_sign::thread_i_79_fu_1214_p2() {
    i_79_fu_1214_p2 = (!i_i3_reg_630.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i3_reg_630.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign::thread_i_80_fu_1247_p2() {
    i_80_fu_1247_p2 = (!i_i4_reg_642.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i4_reg_642.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void crypto_sign::thread_indvarinc_fu_909_p2() {
    indvarinc_fu_909_p2 = (!invdar_reg_466.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(invdar_reg_466.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign::thread_j_3_fu_1055_p2() {
    j_3_fu_1055_p2 = (!j_reg_531.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_reg_531.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void crypto_sign::thread_j_4_fu_1136_p2() {
    j_4_fu_1136_p2 = (!j_1_reg_585.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_1_reg_585.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void crypto_sign::thread_mem_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_ARREADY.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read()))) {
            mem_ARADDR =  (sc_lv<32>) (tmp_808_fu_1119_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                    esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0))) {
            mem_ARADDR =  (sc_lv<32>) (tmp_80_fu_1038_p1.read());
        } else {
            mem_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        mem_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_mem_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_mem_ARREADY.read())))) {
        mem_ARVALID = ap_const_logic_1;
    } else {
        mem_ARVALID = ap_const_logic_0;
    }
}

void crypto_sign::thread_mem_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read()))))) {
        mem_RREADY = ap_const_logic_1;
    } else {
        mem_RREADY = ap_const_logic_0;
    }
}

void crypto_sign::thread_mem_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read())))) {
        mem_blk_n_AR = m_axi_mem_ARREADY.read();
    } else {
        mem_blk_n_AR = ap_const_logic_1;
    }
}

void crypto_sign::thread_mem_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read())))) {
        mem_blk_n_R = m_axi_mem_RVALID.read();
    } else {
        mem_blk_n_R = ap_const_logic_1;
    }
}

void crypto_sign::thread_nonce_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        nonce_address0 =  (sc_lv<6>) (tmp_i_fu_1078_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        nonce_address0 = grp_sha512_final_fu_693_out_r_address0.read();
    } else {
        nonce_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_nonce_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        nonce_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        nonce_ce0 = grp_sha512_final_fu_693_out_r_ce0.read();
    } else {
        nonce_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_nonce_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        nonce_ce1 = grp_sha512_final_fu_693_out_r_ce1.read();
    } else {
        nonce_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_nonce_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        nonce_we0 = grp_sha512_final_fu_693_out_r_we0.read();
    } else {
        nonce_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_nonce_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        nonce_we1 = grp_sha512_final_fu_693_out_r_we1.read();
    } else {
        nonce_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_pk_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pk_address0 =  (sc_lv<5>) (tmp_i_i_fu_949_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        pk_address0 = grp_p_memmove_fu_766_src_address0.read();
    } else {
        pk_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_pk_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pk_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        pk_ce0 = grp_p_memmove_fu_766_src_ce0.read();
    } else {
        pk_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_pk_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pk_we0 = ap_const_logic_1;
    } else {
        pk_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_sck_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        sck_v_address0 = grp_crypto_sign_ed25519_16_fu_856_y_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        sck_v_address0 = grp_barrett_reduce_fu_822_r_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        sck_v_address0 = grp_crypto_sign_ed25519_13_fu_797_s_v_address0.read();
    } else {
        sck_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_sck_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        sck_v_ce0 = grp_crypto_sign_ed25519_16_fu_856_y_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        sck_v_ce0 = grp_barrett_reduce_fu_822_r_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        sck_v_ce0 = grp_crypto_sign_ed25519_13_fu_797_s_v_ce0.read();
    } else {
        sck_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_sck_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        sck_v_ce1 = grp_crypto_sign_ed25519_13_fu_797_s_v_ce1.read();
    } else {
        sck_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_sck_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        sck_v_we0 = grp_barrett_reduce_fu_822_r_v_we0.read();
    } else {
        sck_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_scs_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        scs_v_address0 =  (sc_lv<5>) (tmp_i4_fu_1220_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        scs_v_address0 = grp_crypto_sign_ed25519_16_fu_856_r_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        scs_v_address0 = grp_barrett_reduce_fu_822_r_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        scs_v_address0 = grp_crypto_sign_ed25519_15_fu_812_r_v_address0.read();
    } else {
        scs_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_scs_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        scs_v_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        scs_v_ce0 = grp_crypto_sign_ed25519_16_fu_856_r_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        scs_v_ce0 = grp_barrett_reduce_fu_822_r_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        scs_v_ce0 = grp_crypto_sign_ed25519_15_fu_812_r_v_ce0.read();
    } else {
        scs_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_scs_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        scs_v_ce1 = grp_crypto_sign_ed25519_16_fu_856_r_v_ce1.read();
    } else {
        scs_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_scs_v_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        scs_v_d0 = grp_crypto_sign_ed25519_16_fu_856_r_v_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        scs_v_d0 = grp_barrett_reduce_fu_822_r_v_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        scs_v_d0 = grp_crypto_sign_ed25519_15_fu_812_r_v_d0.read();
    } else {
        scs_v_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_scs_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        scs_v_we0 = grp_crypto_sign_ed25519_16_fu_856_r_v_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        scs_v_we0 = grp_barrett_reduce_fu_822_r_v_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        scs_v_we0 = grp_crypto_sign_ed25519_15_fu_812_r_v_we0.read();
    } else {
        scs_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_scs_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        scs_v_we1 = grp_crypto_sign_ed25519_16_fu_856_r_v_we1.read();
    } else {
        scs_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_scsk_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        scsk_v_address0 = grp_barrett_reduce_fu_822_r_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        scsk_v_address0 = grp_crypto_sign_ed25519_15_fu_812_y_v_address0.read();
    } else {
        scsk_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_scsk_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        scsk_v_ce0 = grp_barrett_reduce_fu_822_r_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        scsk_v_ce0 = grp_crypto_sign_ed25519_15_fu_812_y_v_ce0.read();
    } else {
        scsk_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_scsk_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        scsk_v_we0 = grp_barrett_reduce_fu_822_r_v_we0.read();
    } else {
        scsk_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_signature_addr_2_reg_1368() {
    signature_addr_2_reg_1368 =  (sc_lv<6>) (ap_const_lv64_1F);
}

void crypto_sign::thread_signature_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        signature_address0 =  (sc_lv<6>) (tmp_i5_fu_1253_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        signature_address0 =  (sc_lv<6>) (sum_i_cast_fu_1236_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        signature_address0 = signature_addr_2_reg_1368.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        signature_address0 =  (sc_lv<6>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        signature_address0 =  (sc_lv<6>) (sum3_i_i_cast_reg_1313.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        signature_address0 =  (sc_lv<6>) (tmp_fu_915_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        signature_address0 = grp_crypto_sign_ed25519_9_fu_838_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        signature_address0 = grp_sha512_update_32_1_fu_781_in_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        signature_address0 = grp_p_memmove_fu_766_dst_address0.read();
    } else {
        signature_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_signature_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        signature_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        signature_ce0 = grp_crypto_sign_ed25519_9_fu_838_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        signature_ce0 = grp_sha512_update_32_1_fu_781_in_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        signature_ce0 = grp_p_memmove_fu_766_dst_ce0.read();
    } else {
        signature_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_signature_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        signature_d0 = tmp_809_fu_1225_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        signature_d0 = tmp_863_i_fu_1095_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        signature_d0 = az_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        signature_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        signature_d0 = grp_crypto_sign_ed25519_9_fu_838_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        signature_d0 = grp_p_memmove_fu_766_dst_d0.read();
    } else {
        signature_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign::thread_signature_out_address0() {
    signature_out_address0 =  (sc_lv<6>) (tmp_i5_reg_1470.read());
}

void crypto_sign::thread_signature_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        signature_out_ce0 = ap_const_logic_1;
    } else {
        signature_out_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_signature_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        signature_out_we0 = ap_const_logic_1;
    } else {
        signature_out_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_signature_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        signature_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        signature_we0 = grp_crypto_sign_ed25519_9_fu_838_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        signature_we0 = grp_p_memmove_fu_766_dst_we0.read();
    } else {
        signature_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_sk_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sk_address0 =  (sc_lv<6>) (sum_i_i_cast_fu_944_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sk_address0 = grp_sha512_update_32_fu_671_in_r_address0.read();
    } else {
        sk_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_sk_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sk_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sk_ce0 = grp_sha512_update_32_fu_671_in_r_ce0.read();
    } else {
        sk_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_sum3_i_i_cast_fu_1016_p1() {
    sum3_i_i_cast_fu_1016_p1 = esl_zext<64,6>(sum3_i_i_fu_1010_p2.read());
}

void crypto_sign::thread_sum3_i_i_fu_1010_p2() {
    sum3_i_i_fu_1010_p2 = (i_i_i1_reg_489.read() ^ ap_const_lv6_20);
}

void crypto_sign::thread_sum_i_cast_fu_1236_p1() {
    sum_i_cast_fu_1236_p1 = esl_zext<64,6>(sum_i_fu_1230_p2.read());
}

void crypto_sign::thread_sum_i_fu_1230_p2() {
    sum_i_fu_1230_p2 = (i_i3_reg_630.read() ^ ap_const_lv6_20);
}

void crypto_sign::thread_sum_i_i_cast_fu_944_p1() {
    sum_i_i_cast_fu_944_p1 = esl_zext<64,6>(sum_i_i_fu_938_p2.read());
}

void crypto_sign::thread_sum_i_i_fu_938_p2() {
    sum_i_i_fu_938_p2 = (i_i_i_reg_477.read() ^ ap_const_lv6_20);
}

void crypto_sign::thread_t_10_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        t_10_address0 =  (sc_lv<6>) (tmp_i2_reg_1413.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        t_10_address0 = grp_barrett_reduce_fu_822_x_address0.read();
    } else {
        t_10_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_t_10_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        t_10_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        t_10_ce0 = grp_barrett_reduce_fu_822_x_ce0.read();
    } else {
        t_10_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_t_10_d0() {
    t_10_d0 = esl_zext<32,8>(hram_q0.read());
}

void crypto_sign::thread_t_10_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        t_10_we0 = ap_const_logic_1;
    } else {
        t_10_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_t_11_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_1191_p2.read()))) {
        t_11_address0 =  (sc_lv<6>) (tmp_858_i_fu_1197_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        t_11_address0 =  (sc_lv<6>) (tmp_i3_reg_1431.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        t_11_address0 = grp_barrett_reduce_fu_822_x_address0.read();
    } else {
        t_11_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_t_11_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_1191_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        t_11_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        t_11_ce0 = grp_barrett_reduce_fu_822_x_ce0.read();
    } else {
        t_11_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_t_11_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_1191_p2.read()))) {
        t_11_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        t_11_d0 = tmp_i3_96_fu_1186_p1.read();
    } else {
        t_11_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign::thread_t_11_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_1191_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        t_11_we0 = ap_const_logic_1;
    } else {
        t_11_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_address0 =  (sc_lv<6>) (tmp_i_reg_1353.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        t_address0 = grp_barrett_reduce_fu_822_x_address0.read();
    } else {
        t_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign::thread_t_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        t_ce0 = grp_barrett_reduce_fu_822_x_ce0.read();
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_t_d0() {
    t_d0 = esl_zext<32,8>(nonce_q0.read());
}

void crypto_sign::thread_t_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_temp_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        temp_buf_address0 =  (sc_lv<7>) (tmp_803_fu_1142_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        temp_buf_address0 =  (sc_lv<7>) (tmp_802_fu_1061_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        temp_buf_address0 = grp_sha512_update_128_fu_731_in_r_address0.read();
    } else {
        temp_buf_address0 = "XXXXXXX";
    }
}

void crypto_sign::thread_temp_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        temp_buf_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        temp_buf_ce0 = grp_sha512_update_128_fu_731_in_r_ce0.read();
    } else {
        temp_buf_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_temp_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        temp_buf_we0 = ap_const_logic_1;
    } else {
        temp_buf_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_tmp_784_fu_962_p4() {
    tmp_784_fu_962_p4 = az_q0.read().range(7, 3);
}

void crypto_sign::thread_tmp_800_fu_972_p3() {
    tmp_800_fu_972_p3 = esl_concat<5,3>(tmp_784_fu_962_p4.read(), ap_const_lv3_0);
}

void crypto_sign::thread_tmp_801_fu_985_p3() {
    tmp_801_fu_985_p3 = esl_concat<1,6>(ap_const_lv1_1, tmp_804_fu_981_p1.read());
}

void crypto_sign::thread_tmp_802_fu_1061_p1() {
    tmp_802_fu_1061_p1 = esl_zext<64,8>(j_reg_531.read());
}

void crypto_sign::thread_tmp_803_fu_1142_p1() {
    tmp_803_fu_1142_p1 = esl_zext<64,8>(j_1_reg_585.read());
}

void crypto_sign::thread_tmp_804_fu_981_p1() {
    tmp_804_fu_981_p1 = az_q1.read().range(6-1, 0);
}

void crypto_sign::thread_tmp_806_fu_1032_p2() {
    tmp_806_fu_1032_p2 = (!ap_const_lv32_7.is_01())? sc_lv<32>(): i_reg_520.read() << (unsigned short)ap_const_lv32_7.to_uint();
}

void crypto_sign::thread_tmp_807_fu_1113_p2() {
    tmp_807_fu_1113_p2 = (!ap_const_lv32_7.is_01())? sc_lv<32>(): i_1_reg_574.read() << (unsigned short)ap_const_lv32_7.to_uint();
}

void crypto_sign::thread_tmp_808_fu_1119_p1() {
    tmp_808_fu_1119_p1 = esl_sext<64,32>(tmp_807_fu_1113_p2.read());
}

void crypto_sign::thread_tmp_809_fu_1225_p1() {
    tmp_809_fu_1225_p1 = scs_v_q0.read().range(8-1, 0);
}

void crypto_sign::thread_tmp_80_fu_1038_p1() {
    tmp_80_fu_1038_p1 = esl_sext<64,32>(tmp_806_fu_1032_p2.read());
}

void crypto_sign::thread_tmp_858_i_fu_1197_p1() {
    tmp_858_i_fu_1197_p1 = esl_zext<64,7>(i_1_i_reg_619.read());
}

void crypto_sign::thread_tmp_863_i_fu_1095_p2() {
    tmp_863_i_fu_1095_p2 = (signature_q0.read() ^ tmp_i1_91_fu_1088_p3.read());
}

void crypto_sign::thread_tmp_894_cast_fu_993_p1() {
    tmp_894_cast_fu_993_p1 = esl_zext<8,7>(tmp_801_fu_985_p3.read());
}

void crypto_sign::thread_tmp_fu_915_p1() {
    tmp_fu_915_p1 = esl_zext<64,6>(invdar_reg_466.read());
}

void crypto_sign::thread_tmp_i1_91_fu_1088_p3() {
    tmp_i1_91_fu_1088_p3 = esl_concat<1,7>(tmp_i1_reg_1363.read(), ap_const_lv7_0);
}

void crypto_sign::thread_tmp_i2_fu_1159_p1() {
    tmp_i2_fu_1159_p1 = esl_zext<64,7>(i_i1_reg_597.read());
}

void crypto_sign::thread_tmp_i3_96_fu_1186_p1() {
    tmp_i3_96_fu_1186_p1 = esl_zext<32,8>(az_q1.read());
}

void crypto_sign::thread_tmp_i3_fu_1181_p1() {
    tmp_i3_fu_1181_p1 = esl_zext<64,6>(i_i2_reg_608.read());
}

void crypto_sign::thread_tmp_i4_fu_1220_p1() {
    tmp_i4_fu_1220_p1 = esl_zext<64,6>(i_i3_reg_630.read());
}

void crypto_sign::thread_tmp_i5_fu_1253_p1() {
    tmp_i5_fu_1253_p1 = esl_zext<64,7>(i_i4_reg_642.read());
}

void crypto_sign::thread_tmp_i_fu_1078_p1() {
    tmp_i_fu_1078_p1 = esl_zext<64,7>(i_i_reg_543.read());
}

void crypto_sign::thread_tmp_i_i_fu_949_p1() {
    tmp_i_i_fu_949_p1 = esl_zext<64,6>(i_i_i_reg_477.read());
}

void crypto_sign::thread_tmp_s_fu_920_p2() {
    tmp_s_fu_920_p2 = (!invdar_reg_466.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_466.read() == ap_const_lv6_3F);
}

void crypto_sign::thread_tx_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tx_v_address0 = grp_crypto_sign_ed25519_18_fu_849_r_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tx_v_address0 = grp_crypto_sign_ed25519_20_fu_844_x_v_address0.read();
    } else {
        tx_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_tx_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tx_v_address1 = grp_crypto_sign_ed25519_18_fu_849_r_v_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tx_v_address1 = grp_crypto_sign_ed25519_20_fu_844_x_v_address1.read();
    } else {
        tx_v_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_tx_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tx_v_ce0 = grp_crypto_sign_ed25519_18_fu_849_r_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tx_v_ce0 = grp_crypto_sign_ed25519_20_fu_844_x_v_ce0.read();
    } else {
        tx_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_tx_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tx_v_ce1 = grp_crypto_sign_ed25519_18_fu_849_r_v_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tx_v_ce1 = grp_crypto_sign_ed25519_20_fu_844_x_v_ce1.read();
    } else {
        tx_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_tx_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tx_v_we0 = grp_crypto_sign_ed25519_18_fu_849_r_v_we0.read();
    } else {
        tx_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_tx_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tx_v_we1 = grp_crypto_sign_ed25519_18_fu_849_r_v_we1.read();
    } else {
        tx_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ty_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ty_v_address0 = grp_crypto_sign_ed25519_18_fu_849_r_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ty_v_address0 = grp_crypto_sign_ed25519_9_fu_838_x_v_address0.read();
    } else {
        ty_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_ty_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ty_v_address1 = grp_crypto_sign_ed25519_18_fu_849_r_v_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ty_v_address1 = grp_crypto_sign_ed25519_9_fu_838_x_v_address1.read();
    } else {
        ty_v_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_ty_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ty_v_ce0 = grp_crypto_sign_ed25519_18_fu_849_r_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ty_v_ce0 = grp_crypto_sign_ed25519_9_fu_838_x_v_ce0.read();
    } else {
        ty_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ty_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ty_v_ce1 = grp_crypto_sign_ed25519_18_fu_849_r_v_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ty_v_ce1 = grp_crypto_sign_ed25519_9_fu_838_x_v_ce1.read();
    } else {
        ty_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ty_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ty_v_we0 = grp_crypto_sign_ed25519_18_fu_849_r_v_we0.read();
    } else {
        ty_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ty_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ty_v_we1 = grp_crypto_sign_ed25519_18_fu_849_r_v_we1.read();
    } else {
        ty_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_zi_v_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        zi_v_address0 = grp_crypto_sign_ed25519_18_fu_849_y_v_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        zi_v_address0 = grp_crypto_sign_ed25519_19_fu_832_r_v_address0.read();
    } else {
        zi_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign::thread_zi_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        zi_v_ce0 = grp_crypto_sign_ed25519_18_fu_849_y_v_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        zi_v_ce0 = grp_crypto_sign_ed25519_19_fu_832_r_v_ce0.read();
    } else {
        zi_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_zi_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        zi_v_ce1 = grp_crypto_sign_ed25519_19_fu_832_r_v_ce1.read();
    } else {
        zi_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_zi_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        zi_v_we0 = grp_crypto_sign_ed25519_19_fu_832_r_v_we0.read();
    } else {
        zi_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign::thread_zi_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        zi_v_we1 = grp_crypto_sign_ed25519_19_fu_832_r_v_we1.read();
    } else {
        zi_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign::thread_ap_NS_fsm() {
    if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_s_fu_920_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_i_i_fu_926_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state5;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_sha512_init_fu_653_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state6;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_sha512_update_32_fu_671_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(grp_sha512_final_fu_693_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
            ap_NS_fsm = ap_ST_fsm_state10;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond_i_i1_fu_998_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state13;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_sha512_init_fu_653_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state15;
        } else {
            ap_NS_fsm = ap_ST_fsm_state14;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state17;
        } else {
            ap_NS_fsm = ap_ST_fsm_state16;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_block_state17_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state27;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(exitcond3_fu_1021_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_state17_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else {
            ap_NS_fsm = ap_ST_fsm_state17;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())) && esl_seteq<1,1,1>(exitcond2_fu_1049_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state26;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_1049_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())))) {
            ap_NS_fsm = ap_ST_fsm_state25;
        } else {
            ap_NS_fsm = ap_ST_fsm_state24;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state17;
        } else {
            ap_NS_fsm = ap_ST_fsm_state26;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(grp_sha512_final_fu_693_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state28;
        } else {
            ap_NS_fsm = ap_ST_fsm_state27;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(exitcond_i_fu_1066_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state30;
        } else {
            ap_NS_fsm = ap_ST_fsm_state29;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_block_state30_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state31;
        } else {
            ap_NS_fsm = ap_ST_fsm_state30;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_13_fu_797_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state33;
        } else {
            ap_NS_fsm = ap_ST_fsm_state32;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_19_fu_832_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state35;
        } else {
            ap_NS_fsm = ap_ST_fsm_state34;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_18_fu_849_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state37;
        } else {
            ap_NS_fsm = ap_ST_fsm_state36;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(ap_block_state38_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state39;
        } else {
            ap_NS_fsm = ap_ST_fsm_state38;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_9_fu_838_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state41;
        } else {
            ap_NS_fsm = ap_ST_fsm_state40;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(grp_p_memmove_fu_766_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state45;
        } else {
            ap_NS_fsm = ap_ST_fsm_state44;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        if ((esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
            ap_NS_fsm = ap_ST_fsm_state47;
        } else {
            ap_NS_fsm = ap_ST_fsm_state46;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        if ((esl_seteq<1,1,1>(grp_sha512_update_32_1_fu_781_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
            ap_NS_fsm = ap_ST_fsm_state49;
        } else {
            ap_NS_fsm = ap_ST_fsm_state48;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_fu_1102_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state59;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_1102_p2.read()) && esl_seteq<1,1,1>(ap_block_state49_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state50;
        } else {
            ap_NS_fsm = ap_ST_fsm_state49;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())) && esl_seteq<1,1,1>(exitcond_fu_1130_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state58;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1130_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mem_RVALID.read())))) {
            ap_NS_fsm = ap_ST_fsm_state57;
        } else {
            ap_NS_fsm = ap_ST_fsm_state56;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        if ((esl_seteq<1,1,1>(grp_sha512_update_128_fu_731_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
            ap_NS_fsm = ap_ST_fsm_state49;
        } else {
            ap_NS_fsm = ap_ST_fsm_state58;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        if ((esl_seteq<1,1,1>(grp_sha512_final_fu_693_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
            ap_NS_fsm = ap_ST_fsm_state60;
        } else {
            ap_NS_fsm = ap_ST_fsm_state59;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(exitcond_i1_fu_1147_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state62;
        } else {
            ap_NS_fsm = ap_ST_fsm_state61;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(grp_barrett_reduce_fu_822_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state63;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_1169_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state65;
        } else {
            ap_NS_fsm = ap_ST_fsm_state64;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_1191_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state65;
        } else {
            ap_NS_fsm = ap_ST_fsm_state66;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        if ((esl_seteq<1,1,1>(grp_barrett_reduce_fu_822_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
            ap_NS_fsm = ap_ST_fsm_state67;
        } else {
            ap_NS_fsm = ap_ST_fsm_state66;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_15_fu_812_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state69;
        } else {
            ap_NS_fsm = ap_ST_fsm_state68;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_16_fu_856_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state70;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && esl_seteq<1,1,1>(exitcond_i3_fu_1208_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state73;
        } else {
            ap_NS_fsm = ap_ST_fsm_state72;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && esl_seteq<1,1,1>(exitcond_i4_fu_1241_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state74;
        }
    }
    else if (esl_seteq<1,74,74>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<74>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void crypto_sign::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_mem_AWVALID\" :  \"" << m_axi_mem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_AWREADY\" :  \"" << m_axi_mem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWADDR\" :  \"" << m_axi_mem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWID\" :  \"" << m_axi_mem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWLEN\" :  \"" << m_axi_mem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWSIZE\" :  \"" << m_axi_mem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWBURST\" :  \"" << m_axi_mem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWLOCK\" :  \"" << m_axi_mem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWCACHE\" :  \"" << m_axi_mem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWPROT\" :  \"" << m_axi_mem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWQOS\" :  \"" << m_axi_mem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWREGION\" :  \"" << m_axi_mem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_AWUSER\" :  \"" << m_axi_mem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WVALID\" :  \"" << m_axi_mem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_WREADY\" :  \"" << m_axi_mem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WDATA\" :  \"" << m_axi_mem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WSTRB\" :  \"" << m_axi_mem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WLAST\" :  \"" << m_axi_mem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WID\" :  \"" << m_axi_mem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_WUSER\" :  \"" << m_axi_mem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARVALID\" :  \"" << m_axi_mem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_ARREADY\" :  \"" << m_axi_mem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARADDR\" :  \"" << m_axi_mem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARID\" :  \"" << m_axi_mem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARLEN\" :  \"" << m_axi_mem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARSIZE\" :  \"" << m_axi_mem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARBURST\" :  \"" << m_axi_mem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARLOCK\" :  \"" << m_axi_mem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARCACHE\" :  \"" << m_axi_mem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARPROT\" :  \"" << m_axi_mem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARQOS\" :  \"" << m_axi_mem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARREGION\" :  \"" << m_axi_mem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_ARUSER\" :  \"" << m_axi_mem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RVALID\" :  \"" << m_axi_mem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_RREADY\" :  \"" << m_axi_mem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RDATA\" :  \"" << m_axi_mem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RLAST\" :  \"" << m_axi_mem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RID\" :  \"" << m_axi_mem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RUSER\" :  \"" << m_axi_mem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_RRESP\" :  \"" << m_axi_mem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BVALID\" :  \"" << m_axi_mem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_mem_BREADY\" :  \"" << m_axi_mem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BRESP\" :  \"" << m_axi_mem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BID\" :  \"" << m_axi_mem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_mem_BUSER\" :  \"" << m_axi_mem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

