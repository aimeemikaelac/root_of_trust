// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fe_cmov_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const bool fe_cmov_1::ap_const_boolean_1 = true;
const sc_lv<32> fe_cmov_1::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> fe_cmov_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic fe_cmov_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fe_cmov_1::ap_const_logic_0 = sc_dt::Log_0;

fe_cmov_1::fe_cmov_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_return_0);
    sensitive << ( f_0_write_assign_fu_326_p2 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( f_1_write_assign_fu_332_p2 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( f_2_write_assign_fu_338_p2 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( f_3_write_assign_fu_344_p2 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( f_4_write_assign_fu_350_p2 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( f_5_write_assign_fu_356_p2 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( f_6_write_assign_fu_362_p2 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( f_7_write_assign_fu_368_p2 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( f_8_write_assign_fu_374_p2 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( f_9_write_assign_fu_380_p2 );

    SC_METHOD(thread_b_assign_cast_fu_258_p3);
    sensitive << ( b );

    SC_METHOD(thread_f_0_write_assign_fu_326_p2);
    sensitive << ( f_0_read );
    sensitive << ( x0_1_fu_266_p2 );

    SC_METHOD(thread_f_1_write_assign_fu_332_p2);
    sensitive << ( f_1_read );
    sensitive << ( x1_1_fu_272_p2 );

    SC_METHOD(thread_f_2_write_assign_fu_338_p2);
    sensitive << ( f_2_read );
    sensitive << ( x2_1_fu_278_p2 );

    SC_METHOD(thread_f_3_write_assign_fu_344_p2);
    sensitive << ( f_3_read );
    sensitive << ( x3_1_fu_284_p2 );

    SC_METHOD(thread_f_4_write_assign_fu_350_p2);
    sensitive << ( f_4_read );
    sensitive << ( x4_1_fu_290_p2 );

    SC_METHOD(thread_f_5_write_assign_fu_356_p2);
    sensitive << ( f_5_read );
    sensitive << ( x5_1_fu_296_p2 );

    SC_METHOD(thread_f_6_write_assign_fu_362_p2);
    sensitive << ( f_6_read );
    sensitive << ( x6_1_fu_302_p2 );

    SC_METHOD(thread_f_7_write_assign_fu_368_p2);
    sensitive << ( f_7_read );
    sensitive << ( x7_1_fu_308_p2 );

    SC_METHOD(thread_f_8_write_assign_fu_374_p2);
    sensitive << ( f_8_read );
    sensitive << ( x8_1_fu_314_p2 );

    SC_METHOD(thread_f_9_write_assign_fu_380_p2);
    sensitive << ( f_9_read );
    sensitive << ( x9_1_fu_320_p2 );

    SC_METHOD(thread_x0_1_fu_266_p2);
    sensitive << ( x0_fu_198_p2 );
    sensitive << ( b_assign_cast_fu_258_p3 );

    SC_METHOD(thread_x0_fu_198_p2);
    sensitive << ( f_0_read );
    sensitive << ( p_read );

    SC_METHOD(thread_x1_1_fu_272_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x1_fu_204_p2 );

    SC_METHOD(thread_x1_fu_204_p2);
    sensitive << ( f_1_read );
    sensitive << ( p_read11 );

    SC_METHOD(thread_x2_1_fu_278_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x2_fu_210_p2 );

    SC_METHOD(thread_x2_fu_210_p2);
    sensitive << ( f_2_read );
    sensitive << ( p_read12 );

    SC_METHOD(thread_x3_1_fu_284_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x3_fu_216_p2 );

    SC_METHOD(thread_x3_fu_216_p2);
    sensitive << ( f_3_read );
    sensitive << ( p_read13 );

    SC_METHOD(thread_x4_1_fu_290_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x4_fu_222_p2 );

    SC_METHOD(thread_x4_fu_222_p2);
    sensitive << ( f_4_read );
    sensitive << ( p_read14 );

    SC_METHOD(thread_x5_1_fu_296_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x5_fu_228_p2 );

    SC_METHOD(thread_x5_fu_228_p2);
    sensitive << ( f_5_read );
    sensitive << ( p_read15 );

    SC_METHOD(thread_x6_1_fu_302_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x6_fu_234_p2 );

    SC_METHOD(thread_x6_fu_234_p2);
    sensitive << ( f_6_read );
    sensitive << ( p_read16 );

    SC_METHOD(thread_x7_1_fu_308_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x7_fu_240_p2 );

    SC_METHOD(thread_x7_fu_240_p2);
    sensitive << ( f_7_read );
    sensitive << ( p_read17 );

    SC_METHOD(thread_x8_1_fu_314_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x8_fu_246_p2 );

    SC_METHOD(thread_x8_fu_246_p2);
    sensitive << ( f_8_read );
    sensitive << ( p_read18 );

    SC_METHOD(thread_x9_1_fu_320_p2);
    sensitive << ( b_assign_cast_fu_258_p3 );
    sensitive << ( x9_fu_252_p2 );

    SC_METHOD(thread_x9_fu_252_p2);
    sensitive << ( f_9_read );
    sensitive << ( p_read19 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fe_cmov_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, f_0_read, "(port)f_0_read");
    sc_trace(mVcdFile, f_1_read, "(port)f_1_read");
    sc_trace(mVcdFile, f_2_read, "(port)f_2_read");
    sc_trace(mVcdFile, f_3_read, "(port)f_3_read");
    sc_trace(mVcdFile, f_4_read, "(port)f_4_read");
    sc_trace(mVcdFile, f_5_read, "(port)f_5_read");
    sc_trace(mVcdFile, f_6_read, "(port)f_6_read");
    sc_trace(mVcdFile, f_7_read, "(port)f_7_read");
    sc_trace(mVcdFile, f_8_read, "(port)f_8_read");
    sc_trace(mVcdFile, f_9_read, "(port)f_9_read");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read11, "(port)p_read11");
    sc_trace(mVcdFile, p_read12, "(port)p_read12");
    sc_trace(mVcdFile, p_read13, "(port)p_read13");
    sc_trace(mVcdFile, p_read14, "(port)p_read14");
    sc_trace(mVcdFile, p_read15, "(port)p_read15");
    sc_trace(mVcdFile, p_read16, "(port)p_read16");
    sc_trace(mVcdFile, p_read17, "(port)p_read17");
    sc_trace(mVcdFile, p_read18, "(port)p_read18");
    sc_trace(mVcdFile, p_read19, "(port)p_read19");
    sc_trace(mVcdFile, b, "(port)b");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, x0_fu_198_p2, "x0_fu_198_p2");
    sc_trace(mVcdFile, b_assign_cast_fu_258_p3, "b_assign_cast_fu_258_p3");
    sc_trace(mVcdFile, x1_fu_204_p2, "x1_fu_204_p2");
    sc_trace(mVcdFile, x2_fu_210_p2, "x2_fu_210_p2");
    sc_trace(mVcdFile, x3_fu_216_p2, "x3_fu_216_p2");
    sc_trace(mVcdFile, x4_fu_222_p2, "x4_fu_222_p2");
    sc_trace(mVcdFile, x5_fu_228_p2, "x5_fu_228_p2");
    sc_trace(mVcdFile, x6_fu_234_p2, "x6_fu_234_p2");
    sc_trace(mVcdFile, x7_fu_240_p2, "x7_fu_240_p2");
    sc_trace(mVcdFile, x8_fu_246_p2, "x8_fu_246_p2");
    sc_trace(mVcdFile, x9_fu_252_p2, "x9_fu_252_p2");
    sc_trace(mVcdFile, x0_1_fu_266_p2, "x0_1_fu_266_p2");
    sc_trace(mVcdFile, x1_1_fu_272_p2, "x1_1_fu_272_p2");
    sc_trace(mVcdFile, x2_1_fu_278_p2, "x2_1_fu_278_p2");
    sc_trace(mVcdFile, x3_1_fu_284_p2, "x3_1_fu_284_p2");
    sc_trace(mVcdFile, x4_1_fu_290_p2, "x4_1_fu_290_p2");
    sc_trace(mVcdFile, x5_1_fu_296_p2, "x5_1_fu_296_p2");
    sc_trace(mVcdFile, x6_1_fu_302_p2, "x6_1_fu_302_p2");
    sc_trace(mVcdFile, x7_1_fu_308_p2, "x7_1_fu_308_p2");
    sc_trace(mVcdFile, x8_1_fu_314_p2, "x8_1_fu_314_p2");
    sc_trace(mVcdFile, x9_1_fu_320_p2, "x9_1_fu_320_p2");
    sc_trace(mVcdFile, f_0_write_assign_fu_326_p2, "f_0_write_assign_fu_326_p2");
    sc_trace(mVcdFile, f_1_write_assign_fu_332_p2, "f_1_write_assign_fu_332_p2");
    sc_trace(mVcdFile, f_2_write_assign_fu_338_p2, "f_2_write_assign_fu_338_p2");
    sc_trace(mVcdFile, f_3_write_assign_fu_344_p2, "f_3_write_assign_fu_344_p2");
    sc_trace(mVcdFile, f_4_write_assign_fu_350_p2, "f_4_write_assign_fu_350_p2");
    sc_trace(mVcdFile, f_5_write_assign_fu_356_p2, "f_5_write_assign_fu_356_p2");
    sc_trace(mVcdFile, f_6_write_assign_fu_362_p2, "f_6_write_assign_fu_362_p2");
    sc_trace(mVcdFile, f_7_write_assign_fu_368_p2, "f_7_write_assign_fu_368_p2");
    sc_trace(mVcdFile, f_8_write_assign_fu_374_p2, "f_8_write_assign_fu_374_p2");
    sc_trace(mVcdFile, f_9_write_assign_fu_380_p2, "f_9_write_assign_fu_380_p2");
#endif

    }
}

fe_cmov_1::~fe_cmov_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void fe_cmov_1::thread_ap_return_0() {
    ap_return_0 = f_0_write_assign_fu_326_p2.read();
}

void fe_cmov_1::thread_ap_return_1() {
    ap_return_1 = f_1_write_assign_fu_332_p2.read();
}

void fe_cmov_1::thread_ap_return_2() {
    ap_return_2 = f_2_write_assign_fu_338_p2.read();
}

void fe_cmov_1::thread_ap_return_3() {
    ap_return_3 = f_3_write_assign_fu_344_p2.read();
}

void fe_cmov_1::thread_ap_return_4() {
    ap_return_4 = f_4_write_assign_fu_350_p2.read();
}

void fe_cmov_1::thread_ap_return_5() {
    ap_return_5 = f_5_write_assign_fu_356_p2.read();
}

void fe_cmov_1::thread_ap_return_6() {
    ap_return_6 = f_6_write_assign_fu_362_p2.read();
}

void fe_cmov_1::thread_ap_return_7() {
    ap_return_7 = f_7_write_assign_fu_368_p2.read();
}

void fe_cmov_1::thread_ap_return_8() {
    ap_return_8 = f_8_write_assign_fu_374_p2.read();
}

void fe_cmov_1::thread_ap_return_9() {
    ap_return_9 = f_9_write_assign_fu_380_p2.read();
}

void fe_cmov_1::thread_b_assign_cast_fu_258_p3() {
    b_assign_cast_fu_258_p3 = (!b.read()[0].is_01())? sc_lv<32>(): ((b.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void fe_cmov_1::thread_f_0_write_assign_fu_326_p2() {
    f_0_write_assign_fu_326_p2 = (x0_1_fu_266_p2.read() ^ f_0_read.read());
}

void fe_cmov_1::thread_f_1_write_assign_fu_332_p2() {
    f_1_write_assign_fu_332_p2 = (x1_1_fu_272_p2.read() ^ f_1_read.read());
}

void fe_cmov_1::thread_f_2_write_assign_fu_338_p2() {
    f_2_write_assign_fu_338_p2 = (x2_1_fu_278_p2.read() ^ f_2_read.read());
}

void fe_cmov_1::thread_f_3_write_assign_fu_344_p2() {
    f_3_write_assign_fu_344_p2 = (x3_1_fu_284_p2.read() ^ f_3_read.read());
}

void fe_cmov_1::thread_f_4_write_assign_fu_350_p2() {
    f_4_write_assign_fu_350_p2 = (x4_1_fu_290_p2.read() ^ f_4_read.read());
}

void fe_cmov_1::thread_f_5_write_assign_fu_356_p2() {
    f_5_write_assign_fu_356_p2 = (x5_1_fu_296_p2.read() ^ f_5_read.read());
}

void fe_cmov_1::thread_f_6_write_assign_fu_362_p2() {
    f_6_write_assign_fu_362_p2 = (x6_1_fu_302_p2.read() ^ f_6_read.read());
}

void fe_cmov_1::thread_f_7_write_assign_fu_368_p2() {
    f_7_write_assign_fu_368_p2 = (x7_1_fu_308_p2.read() ^ f_7_read.read());
}

void fe_cmov_1::thread_f_8_write_assign_fu_374_p2() {
    f_8_write_assign_fu_374_p2 = (x8_1_fu_314_p2.read() ^ f_8_read.read());
}

void fe_cmov_1::thread_f_9_write_assign_fu_380_p2() {
    f_9_write_assign_fu_380_p2 = (x9_1_fu_320_p2.read() ^ f_9_read.read());
}

void fe_cmov_1::thread_x0_1_fu_266_p2() {
    x0_1_fu_266_p2 = (x0_fu_198_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x0_fu_198_p2() {
    x0_fu_198_p2 = (p_read.read() ^ f_0_read.read());
}

void fe_cmov_1::thread_x1_1_fu_272_p2() {
    x1_1_fu_272_p2 = (x1_fu_204_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x1_fu_204_p2() {
    x1_fu_204_p2 = (p_read11.read() ^ f_1_read.read());
}

void fe_cmov_1::thread_x2_1_fu_278_p2() {
    x2_1_fu_278_p2 = (x2_fu_210_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x2_fu_210_p2() {
    x2_fu_210_p2 = (p_read12.read() ^ f_2_read.read());
}

void fe_cmov_1::thread_x3_1_fu_284_p2() {
    x3_1_fu_284_p2 = (x3_fu_216_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x3_fu_216_p2() {
    x3_fu_216_p2 = (p_read13.read() ^ f_3_read.read());
}

void fe_cmov_1::thread_x4_1_fu_290_p2() {
    x4_1_fu_290_p2 = (x4_fu_222_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x4_fu_222_p2() {
    x4_fu_222_p2 = (p_read14.read() ^ f_4_read.read());
}

void fe_cmov_1::thread_x5_1_fu_296_p2() {
    x5_1_fu_296_p2 = (x5_fu_228_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x5_fu_228_p2() {
    x5_fu_228_p2 = (p_read15.read() ^ f_5_read.read());
}

void fe_cmov_1::thread_x6_1_fu_302_p2() {
    x6_1_fu_302_p2 = (x6_fu_234_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x6_fu_234_p2() {
    x6_fu_234_p2 = (p_read16.read() ^ f_6_read.read());
}

void fe_cmov_1::thread_x7_1_fu_308_p2() {
    x7_1_fu_308_p2 = (x7_fu_240_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x7_fu_240_p2() {
    x7_fu_240_p2 = (p_read17.read() ^ f_7_read.read());
}

void fe_cmov_1::thread_x8_1_fu_314_p2() {
    x8_1_fu_314_p2 = (x8_fu_246_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x8_fu_246_p2() {
    x8_fu_246_p2 = (p_read18.read() ^ f_8_read.read());
}

void fe_cmov_1::thread_x9_1_fu_320_p2() {
    x9_1_fu_320_p2 = (x9_fu_252_p2.read() & b_assign_cast_fu_258_p3.read());
}

void fe_cmov_1::thread_x9_fu_252_p2() {
    x9_fu_252_p2 = (p_read19.read() ^ f_9_read.read());
}

}

