// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sign_ed25519_15.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sign_ed25519_15::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sign_ed25519_15::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state1 = "1";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state2 = "10";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state3 = "100";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state4 = "1000";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state5 = "10000";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state6 = "100000";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> crypto_sign_ed25519_15::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_1 = "1";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_2 = "10";
const sc_lv<1> crypto_sign_ed25519_15::ap_const_lv1_0 = "0";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_3 = "11";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_4 = "100";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_5 = "101";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_7 = "111";
const sc_lv<7> crypto_sign_ed25519_15::ap_const_lv7_0 = "0000000";
const sc_lv<1> crypto_sign_ed25519_15::ap_const_lv1_1 = "1";
const sc_lv<6> crypto_sign_ed25519_15::ap_const_lv6_0 = "000000";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_6 = "110";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_8 = "1000";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_9 = "1001";
const sc_lv<7> crypto_sign_ed25519_15::ap_const_lv7_40 = "1000000";
const sc_lv<7> crypto_sign_ed25519_15::ap_const_lv7_1 = "1";
const sc_lv<6> crypto_sign_ed25519_15::ap_const_lv6_20 = "100000";
const sc_lv<6> crypto_sign_ed25519_15::ap_const_lv6_1 = "1";
const sc_lv<6> crypto_sign_ed25519_15::ap_const_lv6_3F = "111111";
const sc_lv<32> crypto_sign_ed25519_15::ap_const_lv32_1F = "11111";
const bool crypto_sign_ed25519_15::ap_const_boolean_1 = true;

crypto_sign_ed25519_15::crypto_sign_ed25519_15(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new crypto_sign_ed255Zio("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(t_d1);
    t_U->q1(t_q1);
    grp_barrett_reduce_fu_153 = new barrett_reduce("grp_barrett_reduce_fu_153");
    grp_barrett_reduce_fu_153->ap_clk(ap_clk);
    grp_barrett_reduce_fu_153->ap_rst(ap_rst);
    grp_barrett_reduce_fu_153->ap_start(grp_barrett_reduce_fu_153_ap_start);
    grp_barrett_reduce_fu_153->ap_done(grp_barrett_reduce_fu_153_ap_done);
    grp_barrett_reduce_fu_153->ap_idle(grp_barrett_reduce_fu_153_ap_idle);
    grp_barrett_reduce_fu_153->ap_ready(grp_barrett_reduce_fu_153_ap_ready);
    grp_barrett_reduce_fu_153->r_v_address0(grp_barrett_reduce_fu_153_r_v_address0);
    grp_barrett_reduce_fu_153->r_v_ce0(grp_barrett_reduce_fu_153_r_v_ce0);
    grp_barrett_reduce_fu_153->r_v_we0(grp_barrett_reduce_fu_153_r_v_we0);
    grp_barrett_reduce_fu_153->r_v_d0(grp_barrett_reduce_fu_153_r_v_d0);
    grp_barrett_reduce_fu_153->r_v_q0(r_v_q0);
    grp_barrett_reduce_fu_153->x_address0(grp_barrett_reduce_fu_153_x_address0);
    grp_barrett_reduce_fu_153->x_ce0(grp_barrett_reduce_fu_153_x_ce0);
    grp_barrett_reduce_fu_153->x_q0(t_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_barrett_reduce_fu_153_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_barrett_reduce_fu_153_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_carry_2_fu_272_p1);
    sensitive << ( carry_fu_262_p4 );

    SC_METHOD(thread_carry_fu_262_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_exitcond1_fu_198_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_131 );

    SC_METHOD(thread_exitcond2_fu_181_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_1_reg_119 );

    SC_METHOD(thread_exitcond3_fu_164_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_108 );

    SC_METHOD(thread_exitcond_fu_236_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_2_reg_142 );

    SC_METHOD(thread_grp_barrett_reduce_fu_153_ap_start);
    sensitive << ( ap_reg_grp_barrett_reduce_fu_153_ap_start );

    SC_METHOD(thread_i_53_fu_170_p2);
    sensitive << ( i_reg_108 );

    SC_METHOD(thread_i_54_fu_187_p2);
    sensitive << ( i_1_reg_119 );

    SC_METHOD(thread_i_55_fu_242_p2);
    sensitive << ( i_2_reg_142 );

    SC_METHOD(thread_j_1_fu_204_p2);
    sensitive << ( j_reg_131 );

    SC_METHOD(thread_r_v_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_barrett_reduce_fu_153_r_v_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_s_fu_193_p1 );

    SC_METHOD(thread_r_v_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_barrett_reduce_fu_153_r_v_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_r_v_d0);
    sensitive << ( grp_barrett_reduce_fu_153_r_v_d0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_r_v_we0);
    sensitive << ( grp_barrett_reduce_fu_153_r_v_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( t_addr_4_reg_337 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( t_addr_2_reg_350 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( grp_barrett_reduce_fu_153_x_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_fu_176_p1 );
    sensitive << ( tmp_788_fu_226_p1 );
    sensitive << ( tmp_782_fu_248_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( t_addr_3_reg_355 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_783_fu_253_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( grp_barrett_reduce_fu_153_x_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_789_fu_230_p2 );
    sensitive << ( tmp_843_cast_fu_283_p1 );

    SC_METHOD(thread_t_d1);
    sensitive << ( t_q1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( carry_2_fu_272_p1 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_164_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp_782_fu_248_p1);
    sensitive << ( i_2_reg_142 );

    SC_METHOD(thread_tmp_783_fu_253_p1);
    sensitive << ( i_55_fu_242_p2 );

    SC_METHOD(thread_tmp_785_fu_210_p1);
    sensitive << ( j_reg_131 );

    SC_METHOD(thread_tmp_786_fu_221_p1);
    sensitive << ( y_v_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_786_fu_221_p2);
    sensitive << ( r_v_load_reg_309 );
    sensitive << ( tmp_786_fu_221_p1 );

    SC_METHOD(thread_tmp_787_fu_215_p2);
    sensitive << ( i_1_reg_119 );
    sensitive << ( j_reg_131 );

    SC_METHOD(thread_tmp_788_fu_226_p1);
    sensitive << ( tmp_787_reg_327 );

    SC_METHOD(thread_tmp_789_fu_230_p2);
    sensitive << ( tmp_786_reg_332 );
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_790_fu_258_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_843_cast_fu_283_p1);
    sensitive << ( tmp_790_fu_258_p1 );

    SC_METHOD(thread_tmp_fu_176_p1);
    sensitive << ( i_reg_108 );

    SC_METHOD(thread_tmp_s_fu_193_p1);
    sensitive << ( i_1_reg_119 );

    SC_METHOD(thread_y_v_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_785_fu_210_p1 );

    SC_METHOD(thread_y_v_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_198_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( grp_barrett_reduce_fu_153_ap_done );
    sensitive << ( exitcond3_fu_164_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    ap_CS_fsm = "0000000001";
    ap_reg_grp_barrett_reduce_fu_153_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sign_ed25519_15_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_v_address0, "(port)r_v_address0");
    sc_trace(mVcdFile, r_v_ce0, "(port)r_v_ce0");
    sc_trace(mVcdFile, r_v_we0, "(port)r_v_we0");
    sc_trace(mVcdFile, r_v_d0, "(port)r_v_d0");
    sc_trace(mVcdFile, r_v_q0, "(port)r_v_q0");
    sc_trace(mVcdFile, y_v_address0, "(port)y_v_address0");
    sc_trace(mVcdFile, y_v_ce0, "(port)y_v_ce0");
    sc_trace(mVcdFile, y_v_q0, "(port)y_v_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_53_fu_170_p2, "i_53_fu_170_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_54_fu_187_p2, "i_54_fu_187_p2");
    sc_trace(mVcdFile, i_54_reg_299, "i_54_reg_299");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_181_p2, "exitcond2_fu_181_p2");
    sc_trace(mVcdFile, r_v_load_reg_309, "r_v_load_reg_309");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_fu_204_p2, "j_1_fu_204_p2");
    sc_trace(mVcdFile, j_1_reg_317, "j_1_reg_317");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond1_fu_198_p2, "exitcond1_fu_198_p2");
    sc_trace(mVcdFile, tmp_787_fu_215_p2, "tmp_787_fu_215_p2");
    sc_trace(mVcdFile, tmp_787_reg_327, "tmp_787_reg_327");
    sc_trace(mVcdFile, tmp_786_fu_221_p2, "tmp_786_fu_221_p2");
    sc_trace(mVcdFile, tmp_786_reg_332, "tmp_786_reg_332");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, t_addr_4_reg_337, "t_addr_4_reg_337");
    sc_trace(mVcdFile, i_55_fu_242_p2, "i_55_fu_242_p2");
    sc_trace(mVcdFile, i_55_reg_345, "i_55_reg_345");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, t_addr_2_reg_350, "t_addr_2_reg_350");
    sc_trace(mVcdFile, exitcond_fu_236_p2, "exitcond_fu_236_p2");
    sc_trace(mVcdFile, t_addr_3_reg_355, "t_addr_3_reg_355");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_d1, "t_d1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_ap_start, "grp_barrett_reduce_fu_153_ap_start");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_ap_done, "grp_barrett_reduce_fu_153_ap_done");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_ap_idle, "grp_barrett_reduce_fu_153_ap_idle");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_ap_ready, "grp_barrett_reduce_fu_153_ap_ready");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_r_v_address0, "grp_barrett_reduce_fu_153_r_v_address0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_r_v_ce0, "grp_barrett_reduce_fu_153_r_v_ce0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_r_v_we0, "grp_barrett_reduce_fu_153_r_v_we0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_r_v_d0, "grp_barrett_reduce_fu_153_r_v_d0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_x_address0, "grp_barrett_reduce_fu_153_x_address0");
    sc_trace(mVcdFile, grp_barrett_reduce_fu_153_x_ce0, "grp_barrett_reduce_fu_153_x_ce0");
    sc_trace(mVcdFile, i_reg_108, "i_reg_108");
    sc_trace(mVcdFile, exitcond3_fu_164_p2, "exitcond3_fu_164_p2");
    sc_trace(mVcdFile, i_1_reg_119, "i_1_reg_119");
    sc_trace(mVcdFile, j_reg_131, "j_reg_131");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_2_reg_142, "i_2_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_reg_grp_barrett_reduce_fu_153_ap_start, "ap_reg_grp_barrett_reduce_fu_153_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_fu_176_p1, "tmp_fu_176_p1");
    sc_trace(mVcdFile, tmp_s_fu_193_p1, "tmp_s_fu_193_p1");
    sc_trace(mVcdFile, tmp_785_fu_210_p1, "tmp_785_fu_210_p1");
    sc_trace(mVcdFile, tmp_788_fu_226_p1, "tmp_788_fu_226_p1");
    sc_trace(mVcdFile, tmp_782_fu_248_p1, "tmp_782_fu_248_p1");
    sc_trace(mVcdFile, tmp_783_fu_253_p1, "tmp_783_fu_253_p1");
    sc_trace(mVcdFile, tmp_789_fu_230_p2, "tmp_789_fu_230_p2");
    sc_trace(mVcdFile, tmp_843_cast_fu_283_p1, "tmp_843_cast_fu_283_p1");
    sc_trace(mVcdFile, tmp_786_fu_221_p1, "tmp_786_fu_221_p1");
    sc_trace(mVcdFile, carry_fu_262_p4, "carry_fu_262_p4");
    sc_trace(mVcdFile, carry_2_fu_272_p1, "carry_2_fu_272_p1");
    sc_trace(mVcdFile, tmp_790_fu_258_p1, "tmp_790_fu_258_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

crypto_sign_ed25519_15::~crypto_sign_ed25519_15() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_barrett_reduce_fu_153;
}

void crypto_sign_ed25519_15::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_barrett_reduce_fu_153_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(exitcond_fu_236_p2.read(), ap_const_lv1_1))) {
            ap_reg_grp_barrett_reduce_fu_153_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_barrett_reduce_fu_153_ap_ready.read())) {
            ap_reg_grp_barrett_reduce_fu_153_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_164_p2.read(), ap_const_lv1_1))) {
        i_1_reg_119 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_1))) {
        i_1_reg_119 = i_54_reg_299.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_1))) {
        i_2_reg_142 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_2_reg_142 = i_55_reg_345.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_164_p2.read()))) {
        i_reg_108 = i_53_fu_170_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_108 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_131 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_reg_131 = j_1_reg_317.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_54_reg_299 = i_54_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_55_reg_345 = i_55_fu_242_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_1_reg_317 = j_1_fu_204_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_v_load_reg_309 = r_v_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
        t_addr_2_reg_350 =  (sc_lv<6>) (tmp_782_fu_248_p1.read());
        t_addr_3_reg_355 =  (sc_lv<6>) (tmp_783_fu_253_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_addr_4_reg_337 =  (sc_lv<6>) (tmp_788_fu_226_p1.read());
        tmp_786_reg_332 = tmp_786_fu_221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_198_p2.read()))) {
        tmp_787_reg_327 = tmp_787_fu_215_p2.read();
    }
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sign_ed25519_15::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void crypto_sign_ed25519_15::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(grp_barrett_reduce_fu_153_ap_done.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_barrett_reduce_fu_153_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_carry_2_fu_272_p1() {
    carry_2_fu_272_p1 = esl_zext<32,24>(carry_fu_262_p4.read());
}

void crypto_sign_ed25519_15::thread_carry_fu_262_p4() {
    carry_fu_262_p4 = t_q0.read().range(31, 8);
}

void crypto_sign_ed25519_15::thread_exitcond1_fu_198_p2() {
    exitcond1_fu_198_p2 = (!j_reg_131.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_131.read() == ap_const_lv6_20);
}

void crypto_sign_ed25519_15::thread_exitcond2_fu_181_p2() {
    exitcond2_fu_181_p2 = (!i_1_reg_119.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_119.read() == ap_const_lv6_20);
}

void crypto_sign_ed25519_15::thread_exitcond3_fu_164_p2() {
    exitcond3_fu_164_p2 = (!i_reg_108.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_108.read() == ap_const_lv7_40);
}

void crypto_sign_ed25519_15::thread_exitcond_fu_236_p2() {
    exitcond_fu_236_p2 = (!i_2_reg_142.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_142.read() == ap_const_lv6_3F);
}

void crypto_sign_ed25519_15::thread_grp_barrett_reduce_fu_153_ap_start() {
    grp_barrett_reduce_fu_153_ap_start = ap_reg_grp_barrett_reduce_fu_153_ap_start.read();
}

void crypto_sign_ed25519_15::thread_i_53_fu_170_p2() {
    i_53_fu_170_p2 = (!i_reg_108.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_108.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void crypto_sign_ed25519_15::thread_i_54_fu_187_p2() {
    i_54_fu_187_p2 = (!i_1_reg_119.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_119.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_15::thread_i_55_fu_242_p2() {
    i_55_fu_242_p2 = (!i_2_reg_142.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_reg_142.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_15::thread_j_1_fu_204_p2() {
    j_1_fu_204_p2 = (!j_reg_131.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_131.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_15::thread_r_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_v_address0 =  (sc_lv<5>) (tmp_s_fu_193_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_address0 = grp_barrett_reduce_fu_153_r_v_address0.read();
    } else {
        r_v_address0 = "XXXXX";
    }
}

void crypto_sign_ed25519_15::thread_r_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_v_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_ce0 = grp_barrett_reduce_fu_153_r_v_ce0.read();
    } else {
        r_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_r_v_d0() {
    r_v_d0 = grp_barrett_reduce_fu_153_r_v_d0.read();
}

void crypto_sign_ed25519_15::thread_r_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_we0 = grp_barrett_reduce_fu_153_r_v_we0.read();
    } else {
        r_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address0 = t_addr_2_reg_350.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
        t_address0 =  (sc_lv<6>) (tmp_782_fu_248_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_address0 = t_addr_4_reg_337.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_address0 =  (sc_lv<6>) (tmp_788_fu_226_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<6>) (tmp_fu_176_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address0 = grp_barrett_reduce_fu_153_x_address0.read();
    } else {
        t_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign_ed25519_15::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address1 = t_addr_3_reg_355.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
        t_address1 =  (sc_lv<6>) (tmp_783_fu_253_p1.read());
    } else {
        t_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void crypto_sign_ed25519_15::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        t_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_ce0 = grp_barrett_reduce_fu_153_x_ce0.read();
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_t_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_d0 = tmp_843_cast_fu_283_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_d0 = tmp_789_fu_230_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_d0 = ap_const_lv32_0;
    } else {
        t_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_15::thread_t_d1() {
    t_d1 = (!carry_2_fu_272_p1.read().is_01() || !t_q1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(carry_2_fu_272_p1.read()) + sc_biguint<32>(t_q1.read()));
}

void crypto_sign_ed25519_15::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_164_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_tmp_782_fu_248_p1() {
    tmp_782_fu_248_p1 = esl_zext<64,6>(i_2_reg_142.read());
}

void crypto_sign_ed25519_15::thread_tmp_783_fu_253_p1() {
    tmp_783_fu_253_p1 = esl_zext<64,6>(i_55_fu_242_p2.read());
}

void crypto_sign_ed25519_15::thread_tmp_785_fu_210_p1() {
    tmp_785_fu_210_p1 = esl_zext<64,6>(j_reg_131.read());
}

void crypto_sign_ed25519_15::thread_tmp_786_fu_221_p1() {
    tmp_786_fu_221_p1 = y_v_q0.read();
}

void crypto_sign_ed25519_15::thread_tmp_786_fu_221_p2() {
    tmp_786_fu_221_p2 = (!r_v_load_reg_309.read().is_01() || !tmp_786_fu_221_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(r_v_load_reg_309.read()) * sc_bigint<32>(tmp_786_fu_221_p1.read());
}

void crypto_sign_ed25519_15::thread_tmp_787_fu_215_p2() {
    tmp_787_fu_215_p2 = (!i_1_reg_119.read().is_01() || !j_reg_131.read().is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_119.read()) + sc_biguint<6>(j_reg_131.read()));
}

void crypto_sign_ed25519_15::thread_tmp_788_fu_226_p1() {
    tmp_788_fu_226_p1 = esl_zext<64,6>(tmp_787_reg_327.read());
}

void crypto_sign_ed25519_15::thread_tmp_789_fu_230_p2() {
    tmp_789_fu_230_p2 = (!t_q0.read().is_01() || !tmp_786_reg_332.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_q0.read()) + sc_biguint<32>(tmp_786_reg_332.read()));
}

void crypto_sign_ed25519_15::thread_tmp_790_fu_258_p1() {
    tmp_790_fu_258_p1 = t_q0.read().range(8-1, 0);
}

void crypto_sign_ed25519_15::thread_tmp_843_cast_fu_283_p1() {
    tmp_843_cast_fu_283_p1 = esl_zext<32,8>(tmp_790_fu_258_p1.read());
}

void crypto_sign_ed25519_15::thread_tmp_fu_176_p1() {
    tmp_fu_176_p1 = esl_zext<64,7>(i_reg_108.read());
}

void crypto_sign_ed25519_15::thread_tmp_s_fu_193_p1() {
    tmp_s_fu_193_p1 = esl_zext<64,6>(i_1_reg_119.read());
}

void crypto_sign_ed25519_15::thread_y_v_address0() {
    y_v_address0 =  (sc_lv<5>) (tmp_785_fu_210_p1.read());
}

void crypto_sign_ed25519_15::thread_y_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        y_v_ce0 = ap_const_logic_1;
    } else {
        y_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_15::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_164_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond_fu_236_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_barrett_reduce_fu_153_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

