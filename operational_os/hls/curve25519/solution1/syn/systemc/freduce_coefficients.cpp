// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "freduce_coefficients.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic freduce_coefficients::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic freduce_coefficients::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> freduce_coefficients::ap_ST_fsm_state1 = "1";
const sc_lv<6> freduce_coefficients::ap_ST_fsm_state2 = "10";
const sc_lv<6> freduce_coefficients::ap_ST_fsm_state3 = "100";
const sc_lv<6> freduce_coefficients::ap_ST_fsm_state4 = "1000";
const sc_lv<6> freduce_coefficients::ap_ST_fsm_state5 = "10000";
const sc_lv<6> freduce_coefficients::ap_ST_fsm_state6 = "100000";
const sc_lv<32> freduce_coefficients::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> freduce_coefficients::ap_const_lv32_1 = "1";
const sc_lv<1> freduce_coefficients::ap_const_lv1_1 = "1";
const sc_lv<32> freduce_coefficients::ap_const_lv32_2 = "10";
const sc_lv<32> freduce_coefficients::ap_const_lv32_4 = "100";
const sc_lv<4> freduce_coefficients::ap_const_lv4_0 = "0000";
const sc_lv<32> freduce_coefficients::ap_const_lv32_3 = "11";
const sc_lv<64> freduce_coefficients::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> freduce_coefficients::ap_const_lv64_A = "1010";
const sc_lv<64> freduce_coefficients::ap_const_lv64_1 = "1";
const sc_lv<1> freduce_coefficients::ap_const_lv1_0 = "0";
const sc_lv<32> freduce_coefficients::ap_const_lv32_5 = "101";
const sc_lv<4> freduce_coefficients::ap_const_lv4_A = "1010";
const sc_lv<4> freduce_coefficients::ap_const_lv4_1 = "1";
const sc_lv<32> freduce_coefficients::ap_const_lv32_3F = "111111";
const sc_lv<64> freduce_coefficients::ap_const_lv64_3FFFFFF = "11111111111111111111111111";
const sc_lv<32> freduce_coefficients::ap_const_lv32_1A = "11010";
const sc_lv<26> freduce_coefficients::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<4> freduce_coefficients::ap_const_lv4_2 = "10";
const sc_lv<64> freduce_coefficients::ap_const_lv64_1FFFFFF = "1111111111111111111111111";
const sc_lv<32> freduce_coefficients::ap_const_lv32_19 = "11001";
const sc_lv<25> freduce_coefficients::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<64> freduce_coefficients::ap_const_lv64_4 = "100";
const bool freduce_coefficients::ap_const_boolean_1 = true;

freduce_coefficients::freduce_coefficients(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_i_4_fu_186_p2);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_output_addr_71_reg_353);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_output_addr_75_reg_404);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( output_addr_71_reg_353 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_117_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_addr_74_reg_388 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_addr_75_reg_404 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_123_p1 );
    sensitive << ( tmp_305_fu_192_p1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_address1);
    sensitive << ( output_addr_72_reg_362 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_117_p2 );
    sensitive << ( output_addr_73_reg_368 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_302_fu_134_p1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_117_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_117_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_306_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_309_fu_341_p2 );

    SC_METHOD(thread_output_r_d1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_300_fu_179_p2 );
    sensitive << ( tmp_304_fu_249_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_308_fu_335_p2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_we1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_over_7_fu_237_p1);
    sensitive << ( tmp_399_i_fu_227_p4 );

    SC_METHOD(thread_over_8_fu_325_p1);
    sensitive << ( tmp_397_i1_reg_398 );

    SC_METHOD(thread_over_fu_197_p1);
    sensitive << ( tmp_397_i_reg_373 );

    SC_METHOD(thread_tmp2_fu_275_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( output_r_q1 );

    SC_METHOD(thread_tmp3_fu_281_p2);
    sensitive << ( tmp_399_fu_269_p2 );
    sensitive << ( tmp_398_fu_263_p2 );

    SC_METHOD(thread_tmp_1064_i1_fu_309_p2);
    sensitive << ( v_assign_8_fu_287_p2 );
    sensitive << ( tmp_i2_cast_cast_fu_301_p3 );

    SC_METHOD(thread_tmp_1064_i_fu_155_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( tmp_i_cast_cast_fu_147_p3 );

    SC_METHOD(thread_tmp_1066_i_fu_221_p2);
    sensitive << ( v_assign_7_fu_200_p2 );
    sensitive << ( tmp_i1_cast_cast_fu_213_p3 );

    SC_METHOD(thread_tmp_299_fu_171_p3);
    sensitive << ( tmp_397_i_fu_161_p4 );

    SC_METHOD(thread_tmp_300_fu_179_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( tmp_299_fu_171_p3 );

    SC_METHOD(thread_tmp_301_fu_128_p2);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_tmp_302_fu_134_p1);
    sensitive << ( tmp_301_fu_128_p2 );

    SC_METHOD(thread_tmp_303_fu_241_p3);
    sensitive << ( tmp_399_i_fu_227_p4 );

    SC_METHOD(thread_tmp_304_fu_249_p2);
    sensitive << ( v_assign_7_fu_200_p2 );
    sensitive << ( tmp_303_fu_241_p3 );

    SC_METHOD(thread_tmp_305_fu_192_p1);
    sensitive << ( i_4_fu_186_p2 );

    SC_METHOD(thread_tmp_306_fu_256_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( over_7_fu_237_p1 );

    SC_METHOD(thread_tmp_307_fu_328_p3);
    sensitive << ( tmp_397_i1_reg_398 );

    SC_METHOD(thread_tmp_308_fu_335_p2);
    sensitive << ( v_assign_8_reg_393 );
    sensitive << ( tmp_307_fu_328_p3 );

    SC_METHOD(thread_tmp_309_fu_341_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( over_8_fu_325_p1 );

    SC_METHOD(thread_tmp_396_fu_139_p3);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_397_fu_205_p3);
    sensitive << ( v_assign_7_fu_200_p2 );

    SC_METHOD(thread_tmp_397_i_fu_161_p4);
    sensitive << ( tmp_1064_i_fu_155_p2 );

    SC_METHOD(thread_tmp_398_fu_263_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_399_fu_269_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_399_i_fu_227_p4);
    sensitive << ( tmp_1066_i_fu_221_p2 );

    SC_METHOD(thread_tmp_400_fu_293_p3);
    sensitive << ( v_assign_8_fu_287_p2 );

    SC_METHOD(thread_tmp_fu_117_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_tmp_i1_cast_cast_fu_213_p3);
    sensitive << ( tmp_397_fu_205_p3 );

    SC_METHOD(thread_tmp_i2_cast_cast_fu_301_p3);
    sensitive << ( tmp_400_fu_293_p3 );

    SC_METHOD(thread_tmp_i_cast_cast_fu_147_p3);
    sensitive << ( tmp_396_fu_139_p3 );

    SC_METHOD(thread_tmp_s_fu_123_p1);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_v_assign_7_fu_200_p2);
    sensitive << ( output_load_reg_378 );
    sensitive << ( over_fu_197_p1 );

    SC_METHOD(thread_v_assign_8_fu_287_p2);
    sensitive << ( tmp2_fu_275_p2 );
    sensitive << ( tmp3_fu_281_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_117_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "freduce_coefficients_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
    sc_trace(mVcdFile, output_r_address1, "(port)output_r_address1");
    sc_trace(mVcdFile, output_r_ce1, "(port)output_r_ce1");
    sc_trace(mVcdFile, output_r_we1, "(port)output_r_we1");
    sc_trace(mVcdFile, output_r_d1, "(port)output_r_d1");
    sc_trace(mVcdFile, output_r_q1, "(port)output_r_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, output_addr_71_reg_353, "output_addr_71_reg_353");
    sc_trace(mVcdFile, output_addr_72_reg_362, "output_addr_72_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_117_p2, "tmp_fu_117_p2");
    sc_trace(mVcdFile, output_addr_73_reg_368, "output_addr_73_reg_368");
    sc_trace(mVcdFile, tmp_397_i_fu_161_p4, "tmp_397_i_fu_161_p4");
    sc_trace(mVcdFile, tmp_397_i_reg_373, "tmp_397_i_reg_373");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, output_load_reg_378, "output_load_reg_378");
    sc_trace(mVcdFile, i_4_fu_186_p2, "i_4_fu_186_p2");
    sc_trace(mVcdFile, i_4_reg_383, "i_4_reg_383");
    sc_trace(mVcdFile, output_addr_74_reg_388, "output_addr_74_reg_388");
    sc_trace(mVcdFile, v_assign_8_fu_287_p2, "v_assign_8_fu_287_p2");
    sc_trace(mVcdFile, v_assign_8_reg_393, "v_assign_8_reg_393");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_397_i1_reg_398, "tmp_397_i1_reg_398");
    sc_trace(mVcdFile, output_addr_75_reg_404, "output_addr_75_reg_404");
    sc_trace(mVcdFile, i_reg_105, "i_reg_105");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_s_fu_123_p1, "tmp_s_fu_123_p1");
    sc_trace(mVcdFile, tmp_302_fu_134_p1, "tmp_302_fu_134_p1");
    sc_trace(mVcdFile, tmp_305_fu_192_p1, "tmp_305_fu_192_p1");
    sc_trace(mVcdFile, tmp_300_fu_179_p2, "tmp_300_fu_179_p2");
    sc_trace(mVcdFile, tmp_304_fu_249_p2, "tmp_304_fu_249_p2");
    sc_trace(mVcdFile, tmp_306_fu_256_p2, "tmp_306_fu_256_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_308_fu_335_p2, "tmp_308_fu_335_p2");
    sc_trace(mVcdFile, tmp_309_fu_341_p2, "tmp_309_fu_341_p2");
    sc_trace(mVcdFile, tmp_301_fu_128_p2, "tmp_301_fu_128_p2");
    sc_trace(mVcdFile, tmp_396_fu_139_p3, "tmp_396_fu_139_p3");
    sc_trace(mVcdFile, tmp_i_cast_cast_fu_147_p3, "tmp_i_cast_cast_fu_147_p3");
    sc_trace(mVcdFile, tmp_1064_i_fu_155_p2, "tmp_1064_i_fu_155_p2");
    sc_trace(mVcdFile, tmp_299_fu_171_p3, "tmp_299_fu_171_p3");
    sc_trace(mVcdFile, over_fu_197_p1, "over_fu_197_p1");
    sc_trace(mVcdFile, v_assign_7_fu_200_p2, "v_assign_7_fu_200_p2");
    sc_trace(mVcdFile, tmp_397_fu_205_p3, "tmp_397_fu_205_p3");
    sc_trace(mVcdFile, tmp_i1_cast_cast_fu_213_p3, "tmp_i1_cast_cast_fu_213_p3");
    sc_trace(mVcdFile, tmp_1066_i_fu_221_p2, "tmp_1066_i_fu_221_p2");
    sc_trace(mVcdFile, tmp_399_i_fu_227_p4, "tmp_399_i_fu_227_p4");
    sc_trace(mVcdFile, tmp_303_fu_241_p3, "tmp_303_fu_241_p3");
    sc_trace(mVcdFile, over_7_fu_237_p1, "over_7_fu_237_p1");
    sc_trace(mVcdFile, tmp_399_fu_269_p2, "tmp_399_fu_269_p2");
    sc_trace(mVcdFile, tmp_398_fu_263_p2, "tmp_398_fu_263_p2");
    sc_trace(mVcdFile, tmp2_fu_275_p2, "tmp2_fu_275_p2");
    sc_trace(mVcdFile, tmp3_fu_281_p2, "tmp3_fu_281_p2");
    sc_trace(mVcdFile, tmp_400_fu_293_p3, "tmp_400_fu_293_p3");
    sc_trace(mVcdFile, tmp_i2_cast_cast_fu_301_p3, "tmp_i2_cast_cast_fu_301_p3");
    sc_trace(mVcdFile, tmp_1064_i1_fu_309_p2, "tmp_1064_i1_fu_309_p2");
    sc_trace(mVcdFile, tmp_307_fu_328_p3, "tmp_307_fu_328_p3");
    sc_trace(mVcdFile, over_8_fu_325_p1, "over_8_fu_325_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

freduce_coefficients::~freduce_coefficients() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void freduce_coefficients::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_105 = i_4_reg_383.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_105 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_4_reg_383 = i_4_fu_186_p2.read();
        output_addr_74_reg_388 =  (sc_lv<5>) (tmp_305_fu_192_p1.read());
        output_load_reg_378 = output_r_q1.read();
        tmp_397_i_reg_373 = tmp_1064_i_fu_155_p2.read().range(63, 26);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_1))) {
        output_addr_72_reg_362 =  (sc_lv<5>) (tmp_s_fu_123_p1.read());
        output_addr_73_reg_368 =  (sc_lv<5>) (tmp_302_fu_134_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_397_i1_reg_398 = tmp_1064_i1_fu_309_p2.read().range(63, 26);
        v_assign_8_reg_393 = v_assign_8_fu_287_p2.read();
    }
}

void freduce_coefficients::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void freduce_coefficients::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void freduce_coefficients::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void freduce_coefficients::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void freduce_coefficients::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void freduce_coefficients::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void freduce_coefficients::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_i_4_fu_186_p2() {
    i_4_fu_186_p2 = (!i_reg_105.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_105.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void freduce_coefficients::thread_output_addr_71_reg_353() {
    output_addr_71_reg_353 =  (sc_lv<5>) (ap_const_lv64_A);
}

void freduce_coefficients::thread_output_addr_75_reg_404() {
    output_addr_75_reg_404 =  (sc_lv<5>) (ap_const_lv64_1);
}

void freduce_coefficients::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_address0 = output_addr_75_reg_404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address0 = output_addr_74_reg_388.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_address0 =  (sc_lv<5>) (tmp_305_fu_192_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_0))) {
        output_r_address0 = output_addr_71_reg_353.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_1))) {
        output_r_address0 =  (sc_lv<5>) (tmp_s_fu_123_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else {
        output_r_address0 = "XXXXX";
    }
}

void freduce_coefficients::thread_output_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address1 = output_addr_73_reg_368.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_address1 = output_addr_72_reg_362.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_0)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_1))) {
        output_r_address1 =  (sc_lv<5>) (tmp_302_fu_134_p1.read());
    } else {
        output_r_address1 = "XXXXX";
    }
}

void freduce_coefficients::thread_output_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_output_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_r_ce1 = ap_const_logic_1;
    } else {
        output_r_ce1 = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_d0 = tmp_309_fu_341_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_d0 = tmp_306_fu_256_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_r_d0 = ap_const_lv64_0;
    } else {
        output_r_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void freduce_coefficients::thread_output_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_d1 = tmp_308_fu_335_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_d1 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_d1 = tmp_304_fu_249_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_d1 = tmp_300_fu_179_p2.read();
    } else {
        output_r_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void freduce_coefficients::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_output_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_r_we1 = ap_const_logic_1;
    } else {
        output_r_we1 = ap_const_logic_0;
    }
}

void freduce_coefficients::thread_over_7_fu_237_p1() {
    over_7_fu_237_p1 = esl_sext<64,39>(tmp_399_i_fu_227_p4.read());
}

void freduce_coefficients::thread_over_8_fu_325_p1() {
    over_8_fu_325_p1 = esl_sext<64,38>(tmp_397_i1_reg_398.read());
}

void freduce_coefficients::thread_over_fu_197_p1() {
    over_fu_197_p1 = esl_sext<64,38>(tmp_397_i_reg_373.read());
}

void freduce_coefficients::thread_tmp2_fu_275_p2() {
    tmp2_fu_275_p2 = (!output_r_q0.read().is_01() || !output_r_q1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(output_r_q0.read()) + sc_biguint<64>(output_r_q1.read()));
}

void freduce_coefficients::thread_tmp3_fu_281_p2() {
    tmp3_fu_281_p2 = (!tmp_399_fu_269_p2.read().is_01() || !tmp_398_fu_263_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_399_fu_269_p2.read()) + sc_biguint<64>(tmp_398_fu_263_p2.read()));
}

void freduce_coefficients::thread_tmp_1064_i1_fu_309_p2() {
    tmp_1064_i1_fu_309_p2 = (!v_assign_8_fu_287_p2.read().is_01() || !tmp_i2_cast_cast_fu_301_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v_assign_8_fu_287_p2.read()) + sc_biguint<64>(tmp_i2_cast_cast_fu_301_p3.read()));
}

void freduce_coefficients::thread_tmp_1064_i_fu_155_p2() {
    tmp_1064_i_fu_155_p2 = (!output_r_q0.read().is_01() || !tmp_i_cast_cast_fu_147_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(output_r_q0.read()) + sc_biguint<64>(tmp_i_cast_cast_fu_147_p3.read()));
}

void freduce_coefficients::thread_tmp_1066_i_fu_221_p2() {
    tmp_1066_i_fu_221_p2 = (!tmp_i1_cast_cast_fu_213_p3.read().is_01() || !v_assign_7_fu_200_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_i1_cast_cast_fu_213_p3.read()) + sc_biguint<64>(v_assign_7_fu_200_p2.read()));
}

void freduce_coefficients::thread_tmp_299_fu_171_p3() {
    tmp_299_fu_171_p3 = esl_concat<38,26>(tmp_397_i_fu_161_p4.read(), ap_const_lv26_0);
}

void freduce_coefficients::thread_tmp_300_fu_179_p2() {
    tmp_300_fu_179_p2 = (!output_r_q0.read().is_01() || !tmp_299_fu_171_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(output_r_q0.read()) - sc_biguint<64>(tmp_299_fu_171_p3.read()));
}

void freduce_coefficients::thread_tmp_301_fu_128_p2() {
    tmp_301_fu_128_p2 = (i_reg_105.read() | ap_const_lv4_1);
}

void freduce_coefficients::thread_tmp_302_fu_134_p1() {
    tmp_302_fu_134_p1 = esl_zext<64,4>(tmp_301_fu_128_p2.read());
}

void freduce_coefficients::thread_tmp_303_fu_241_p3() {
    tmp_303_fu_241_p3 = esl_concat<39,25>(tmp_399_i_fu_227_p4.read(), ap_const_lv25_0);
}

void freduce_coefficients::thread_tmp_304_fu_249_p2() {
    tmp_304_fu_249_p2 = (!v_assign_7_fu_200_p2.read().is_01() || !tmp_303_fu_241_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v_assign_7_fu_200_p2.read()) - sc_biguint<64>(tmp_303_fu_241_p3.read()));
}

void freduce_coefficients::thread_tmp_305_fu_192_p1() {
    tmp_305_fu_192_p1 = esl_zext<64,4>(i_4_fu_186_p2.read());
}

void freduce_coefficients::thread_tmp_306_fu_256_p2() {
    tmp_306_fu_256_p2 = (!output_r_q0.read().is_01() || !over_7_fu_237_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(output_r_q0.read()) + sc_bigint<64>(over_7_fu_237_p1.read()));
}

void freduce_coefficients::thread_tmp_307_fu_328_p3() {
    tmp_307_fu_328_p3 = esl_concat<38,26>(tmp_397_i1_reg_398.read(), ap_const_lv26_0);
}

void freduce_coefficients::thread_tmp_308_fu_335_p2() {
    tmp_308_fu_335_p2 = (!v_assign_8_reg_393.read().is_01() || !tmp_307_fu_328_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v_assign_8_reg_393.read()) - sc_biguint<64>(tmp_307_fu_328_p3.read()));
}

void freduce_coefficients::thread_tmp_309_fu_341_p2() {
    tmp_309_fu_341_p2 = (!over_8_fu_325_p1.read().is_01() || !output_r_q0.read().is_01())? sc_lv<64>(): (sc_bigint<64>(over_8_fu_325_p1.read()) + sc_biguint<64>(output_r_q0.read()));
}

void freduce_coefficients::thread_tmp_396_fu_139_p3() {
    tmp_396_fu_139_p3 = output_r_q0.read().range(63, 63);
}

void freduce_coefficients::thread_tmp_397_fu_205_p3() {
    tmp_397_fu_205_p3 = v_assign_7_fu_200_p2.read().range(63, 63);
}

void freduce_coefficients::thread_tmp_397_i_fu_161_p4() {
    tmp_397_i_fu_161_p4 = tmp_1064_i_fu_155_p2.read().range(63, 26);
}

void freduce_coefficients::thread_tmp_398_fu_263_p2() {
    tmp_398_fu_263_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_coefficients::thread_tmp_399_fu_269_p2() {
    tmp_399_fu_269_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_coefficients::thread_tmp_399_i_fu_227_p4() {
    tmp_399_i_fu_227_p4 = tmp_1066_i_fu_221_p2.read().range(63, 25);
}

void freduce_coefficients::thread_tmp_400_fu_293_p3() {
    tmp_400_fu_293_p3 = v_assign_8_fu_287_p2.read().range(63, 63);
}

void freduce_coefficients::thread_tmp_fu_117_p2() {
    tmp_fu_117_p2 = (!i_reg_105.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): (sc_biguint<4>(i_reg_105.read()) < sc_biguint<4>(ap_const_lv4_A));
}

void freduce_coefficients::thread_tmp_i1_cast_cast_fu_213_p3() {
    tmp_i1_cast_cast_fu_213_p3 = (!tmp_397_fu_205_p3.read()[0].is_01())? sc_lv<64>(): ((tmp_397_fu_205_p3.read()[0].to_bool())? ap_const_lv64_1FFFFFF: ap_const_lv64_0);
}

void freduce_coefficients::thread_tmp_i2_cast_cast_fu_301_p3() {
    tmp_i2_cast_cast_fu_301_p3 = (!tmp_400_fu_293_p3.read()[0].is_01())? sc_lv<64>(): ((tmp_400_fu_293_p3.read()[0].to_bool())? ap_const_lv64_3FFFFFF: ap_const_lv64_0);
}

void freduce_coefficients::thread_tmp_i_cast_cast_fu_147_p3() {
    tmp_i_cast_cast_fu_147_p3 = (!tmp_396_fu_139_p3.read()[0].is_01())? sc_lv<64>(): ((tmp_396_fu_139_p3.read()[0].to_bool())? ap_const_lv64_3FFFFFF: ap_const_lv64_0);
}

void freduce_coefficients::thread_tmp_s_fu_123_p1() {
    tmp_s_fu_123_p1 = esl_zext<64,4>(i_reg_105.read());
}

void freduce_coefficients::thread_v_assign_7_fu_200_p2() {
    v_assign_7_fu_200_p2 = (!output_load_reg_378.read().is_01() || !over_fu_197_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(output_load_reg_378.read()) + sc_bigint<64>(over_fu_197_p1.read()));
}

void freduce_coefficients::thread_v_assign_8_fu_287_p2() {
    v_assign_8_fu_287_p2 = (!tmp2_fu_275_p2.read().is_01() || !tmp3_fu_281_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp2_fu_275_p2.read()) + sc_biguint<64>(tmp3_fu_281_p2.read()));
}

void freduce_coefficients::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_117_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

