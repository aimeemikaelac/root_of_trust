

================================================================
== Vivado HLS Report for 'sha512_compress_128'
================================================================
* Date:           Fri Jun  2 12:27:06 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      2.77|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1199|  1199|  1199|  1199|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   16|   16|         2|          -|          -|     8|    no    |
        |- Loop 2  |   80|   80|         5|          -|          -|    16|    no    |
        |- Loop 3  |  512|  512|         8|          -|          -|    64|    no    |
        |- Loop 4  |  570|  570|        57|          -|          -|    10|    no    |
        |- Loop 5  |   16|   16|         2|          -|          -|     8|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 75
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
	4  / (exitcond4)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond9)
	9  / (exitcond9)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	4  / true
9 --> 
	10  / (!exitcond8)
	17  / (exitcond8)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	9  / true
17 --> 
	18  / (tmp_465)
	74  / (!tmp_465)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	17  / true
74 --> 
	75  / (!exitcond)
75 --> 
	74  / true
* FSM state operations: 

 <State 1>: 0.66ns
ST_1: S (4)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:105
:0  %S = alloca [8 x i64], align 16

ST_1: W (5)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:105
:1  %W = alloca [80 x i64], align 16

ST_1: StgValue_78 (6)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:98
:2  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str44, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_79 (7)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:99
:3  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str246, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_80 (8)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:100
:4  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str347, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_81 (9)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:101
:5  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str448, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_82 (10)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:102
:6  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str549, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_83 (11)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:103
:7  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str650, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_84 (12)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:104
:8  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str751, [1 x i8]* @p_str145, [1 x i8]* @p_str145, [1 x i8]* @p_str145) nounwind

ST_1: StgValue_85 (13)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:109
:9  br label %1


 <State 2>: 1.12ns
ST_2: i (15)  [1/1] 0.00ns
:0  %i = phi i4 [ 0, %0 ], [ %i_15, %2 ]

ST_2: exitcond4 (16)  [1/1] 0.44ns  loc: ed25519/src/sha512.cpp:109
:1  %exitcond4 = icmp eq i4 %i, -8

ST_2: empty (17)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: i_15 (18)  [1/1] 1.12ns  loc: ed25519/src/sha512.cpp:109
:3  %i_15 = add i4 %i, 1

ST_2: StgValue_90 (19)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:109
:4  br i1 %exitcond4, label %.preheader13.preheader, label %2

ST_2: tmp (21)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:110
:0  %tmp = zext i4 %i to i64

ST_2: md_state_addr (22)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:110
:1  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp

ST_2: md_state_load (23)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:110
:2  %md_state_load = load i64* %md_state_addr, align 8

ST_2: StgValue_94 (28)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:114
.preheader13.preheader:0  br label %.preheader13


 <State 3>: 1.35ns
ST_3: md_state_load (23)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:110
:2  %md_state_load = load i64* %md_state_addr, align 8

ST_3: S_addr (24)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:110
:3  %S_addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp

ST_3: StgValue_97 (25)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:110
:4  store i64 %md_state_load, i64* %S_addr, align 8

ST_3: StgValue_98 (26)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:109
:5  br label %1


 <State 4>: 1.12ns
ST_4: i_1 (30)  [1/1] 0.00ns
.preheader13:0  %i_1 = phi i5 [ %i_16, %3 ], [ 0, %.preheader13.preheader ]

ST_4: exitcond9 (31)  [1/1] 0.39ns  loc: ed25519/src/sha512.cpp:114
.preheader13:1  %exitcond9 = icmp eq i5 %i_1, -16

ST_4: empty_109 (32)  [1/1] 0.00ns
.preheader13:2  %empty_109 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_4: i_16 (33)  [1/1] 1.12ns  loc: ed25519/src/sha512.cpp:114
.preheader13:3  %i_16 = add i5 %i_1, 1

ST_4: StgValue_103 (34)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:114
.preheader13:4  br i1 %exitcond9, label %.preheader12.preheader, label %3

ST_4: tmp_697 (36)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:114
:0  %tmp_697 = trunc i5 %i_1 to i4

ST_4: tmp_s (37)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:1  %tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_697, i3 0)

ST_4: tmp_411 (38)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:2  %tmp_411 = zext i7 %tmp_s to i64

ST_4: buf_addr (39)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:3  %buf_addr = getelementptr [128 x i8]* %buf_r, i64 0, i64 %tmp_411

ST_4: buf_load (40)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:4  %buf_load = load i8* %buf_addr, align 1

ST_4: p_sum1 (41)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:5  %p_sum1 = or i7 %tmp_s, 1

ST_4: p_sum1_cast (42)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:6  %p_sum1_cast = zext i7 %p_sum1 to i64

ST_4: buf_addr_22 (43)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:7  %buf_addr_22 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum1_cast

ST_4: buf_load_8 (44)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:8  %buf_load_8 = load i8* %buf_addr_22, align 1

ST_4: StgValue_113 (75)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:119
.preheader12.preheader:0  br label %.preheader12


 <State 5>: 0.57ns
ST_5: buf_load (40)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:4  %buf_load = load i8* %buf_addr, align 1

ST_5: buf_load_8 (44)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:8  %buf_load_8 = load i8* %buf_addr_22, align 1

ST_5: p_sum2 (45)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:9  %p_sum2 = or i7 %tmp_s, 2

ST_5: p_sum2_cast (46)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:10  %p_sum2_cast = zext i7 %p_sum2 to i64

ST_5: buf_addr_23 (47)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:11  %buf_addr_23 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum2_cast

ST_5: buf_load_9 (48)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:12  %buf_load_9 = load i8* %buf_addr_23, align 1

ST_5: p_sum3 (49)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:13  %p_sum3 = or i7 %tmp_s, 3

ST_5: p_sum3_cast (50)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:14  %p_sum3_cast = zext i7 %p_sum3 to i64

ST_5: buf_addr_24 (51)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:15  %buf_addr_24 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum3_cast

ST_5: buf_load_10 (52)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:16  %buf_load_10 = load i8* %buf_addr_24, align 1


 <State 6>: 0.57ns
ST_6: buf_load_9 (48)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:12  %buf_load_9 = load i8* %buf_addr_23, align 1

ST_6: buf_load_10 (52)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:16  %buf_load_10 = load i8* %buf_addr_24, align 1

ST_6: p_sum4 (53)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:17  %p_sum4 = or i7 %tmp_s, 4

ST_6: p_sum4_cast (54)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:18  %p_sum4_cast = zext i7 %p_sum4 to i64

ST_6: buf_addr_25 (55)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:19  %buf_addr_25 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum4_cast

ST_6: buf_load_11 (56)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:20  %buf_load_11 = load i8* %buf_addr_25, align 1

ST_6: p_sum5 (57)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:21  %p_sum5 = or i7 %tmp_s, 5

ST_6: p_sum5_cast (58)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:22  %p_sum5_cast = zext i7 %p_sum5 to i64

ST_6: buf_addr_26 (59)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:23  %buf_addr_26 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum5_cast

ST_6: buf_load_12 (60)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:24  %buf_load_12 = load i8* %buf_addr_26, align 1


 <State 7>: 0.57ns
ST_7: buf_load_11 (56)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:20  %buf_load_11 = load i8* %buf_addr_25, align 1

ST_7: buf_load_12 (60)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:24  %buf_load_12 = load i8* %buf_addr_26, align 1

ST_7: p_sum6 (61)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:25  %p_sum6 = or i7 %tmp_s, 6

ST_7: p_sum6_cast (62)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:26  %p_sum6_cast = zext i7 %p_sum6 to i64

ST_7: buf_addr_27 (63)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:27  %buf_addr_27 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum6_cast

ST_7: buf_load_13 (64)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:28  %buf_load_13 = load i8* %buf_addr_27, align 1

ST_7: p_sum7 (65)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:29  %p_sum7 = or i7 %tmp_s, 7

ST_7: p_sum7_cast (66)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:30  %p_sum7_cast = zext i7 %p_sum7 to i64

ST_7: buf_addr_28 (67)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:31  %buf_addr_28 = getelementptr [128 x i8]* %buf_r, i64 0, i64 %p_sum7_cast

ST_7: buf_load_14 (68)  [2/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:32  %buf_load_14 = load i8* %buf_addr_28, align 1


 <State 8>: 1.81ns
ST_8: buf_load_13 (64)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:28  %buf_load_13 = load i8* %buf_addr_27, align 1

ST_8: buf_load_14 (68)  [1/2] 0.57ns  loc: ed25519/src/sha512.cpp:115
:32  %buf_load_14 = load i8* %buf_addr_28, align 1

ST_8: tmp_433 (69)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:33  %tmp_433 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i8.i8.i8.i8.i8.i8.i8(i8 %buf_load, i8 %buf_load_8, i8 %buf_load_9, i8 %buf_load_10, i8 %buf_load_11, i8 %buf_load_12, i8 %buf_load_13, i8 %buf_load_14)

ST_8: tmp_434 (70)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:34  %tmp_434 = zext i5 %i_1 to i64

ST_8: W_addr (71)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:115
:35  %W_addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_434

ST_8: StgValue_149 (72)  [1/1] 1.24ns  loc: ed25519/src/sha512.cpp:115
:36  store i64 %tmp_433, i64* %W_addr, align 8

ST_8: StgValue_150 (73)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:114
:37  br label %.preheader13


 <State 9>: 1.10ns
ST_9: i_2 (77)  [1/1] 0.00ns
.preheader12:0  %i_2 = phi i7 [ %i_17, %4 ], [ 16, %.preheader12.preheader ]

ST_9: exitcond8 (78)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:119
.preheader12:1  %exitcond8 = icmp eq i7 %i_2, -48

ST_9: empty_110 (79)  [1/1] 0.00ns
.preheader12:2  %empty_110 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_9: StgValue_154 (80)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:119
.preheader12:3  br i1 %exitcond8, label %.preheader11.preheader, label %4

ST_9: tmp_435 (82)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:120
:0  %tmp_435 = add i7 -2, %i_2

ST_9: S_addr_10 (127)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:0  %S_addr_10 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7

ST_9: S_addr_11 (128)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:1  %S_addr_11 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4

ST_9: S_addr_12 (129)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:2  %S_addr_12 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6

ST_9: S_addr_13 (130)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:3  %S_addr_13 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5

ST_9: S_addr_14 (131)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:4  %S_addr_14 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0

ST_9: S_addr_15 (132)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:5  %S_addr_15 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1

ST_9: S_addr_16 (133)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:6  %S_addr_16 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2

ST_9: S_addr_17 (134)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
.preheader11.preheader:7  %S_addr_17 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3

ST_9: StgValue_164 (135)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:130
.preheader11.preheader:8  br label %.preheader11


 <State 10>: 1.10ns
ST_10: tmp_446 (96)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:120
:14  %tmp_446 = add i7 -7, %i_2


 <State 11>: 1.10ns
ST_11: tmp_448 (100)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:120
:18  %tmp_448 = add i7 -15, %i_2


 <State 12>: 1.24ns
ST_12: tmp_447 (97)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:15  %tmp_447 = zext i7 %tmp_446 to i64

ST_12: W_addr_15 (98)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:16  %W_addr_15 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_447

ST_12: W_load_12 (99)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:17  %W_load_12 = load i64* %W_addr_15, align 8

ST_12: tmp_459 (114)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:120
:32  %tmp_459 = add i7 -16, %i_2


 <State 13>: 1.24ns
ST_13: tmp_436 (83)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:1  %tmp_436 = zext i7 %tmp_435 to i64

ST_13: W_addr_14 (84)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:2  %W_addr_14 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_436

ST_13: W_load (85)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:3  %W_load = load i64* %W_addr_14, align 8

ST_13: W_load_12 (99)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:17  %W_load_12 = load i64* %W_addr_15, align 8

ST_13: tmp_460 (115)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:33  %tmp_460 = zext i7 %tmp_459 to i64

ST_13: W_addr_17 (116)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:34  %W_addr_17 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_460

ST_13: W_load_14 (117)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:35  %W_load_14 = load i64* %W_addr_17, align 8

ST_13: i_17 (124)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:119
:42  %i_17 = add i7 1, %i_2


 <State 14>: 2.65ns
ST_14: W_load (85)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:3  %W_load = load i64* %W_addr_14, align 8

ST_14: tmp_449 (101)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:19  %tmp_449 = zext i7 %tmp_448 to i64

ST_14: W_addr_16 (102)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:20  %W_addr_16 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_449

ST_14: W_load_13 (103)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:21  %W_load_13 = load i64* %W_addr_16, align 8

ST_14: W_load_14 (117)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:35  %W_load_14 = load i64* %W_addr_17, align 8

ST_14: tmp8 (118)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:120
:36  %tmp8 = add i64 %W_load_12, %W_load_14


 <State 15>: 2.65ns
ST_15: tmp_437 (86)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:4  %tmp_437 = call i45 @_ssdm_op_PartSelect.i45.i64.i32.i32(i64 %W_load, i32 19, i32 63)

ST_15: tmp_700 (87)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:5  %tmp_700 = trunc i64 %W_load to i19

ST_15: tmp_439 (88)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:6  %tmp_439 = call i64 @_ssdm_op_BitConcatenate.i64.i19.i45(i19 %tmp_700, i45 %tmp_437)

ST_15: tmp_440 (89)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:7  %tmp_440 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %W_load, i32 61, i32 63)

ST_15: tmp_703 (90)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:8  %tmp_703 = trunc i64 %W_load to i61

ST_15: tmp_442 (91)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:9  %tmp_442 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 %tmp_703, i3 %tmp_440)

ST_15: tmp_443 (92)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:10  %tmp_443 = call i58 @_ssdm_op_PartSelect.i58.i64.i32.i32(i64 %W_load, i32 6, i32 63)

ST_15: tmp_652 (93)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:11  %tmp_652 = zext i58 %tmp_443 to i64

ST_15: tmp6 (94)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:12  %tmp6 = xor i64 %tmp_652, %tmp_442

ST_15: tmp_445 (95)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:13  %tmp_445 = xor i64 %tmp6, %tmp_439

ST_15: W_load_13 (103)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:120
:21  %W_load_13 = load i64* %W_addr_16, align 8

ST_15: tmp_450 (104)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:22  %tmp_450 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %W_load_13, i32 1, i32 63)

ST_15: tmp_713 (105)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:23  %tmp_713 = trunc i64 %W_load_13 to i1

ST_15: tmp_452 (106)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:24  %tmp_452 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 %tmp_713, i63 %tmp_450)

ST_15: tmp_453 (107)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:25  %tmp_453 = call i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64 %W_load_13, i32 8, i32 63)

ST_15: tmp_716 (108)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:26  %tmp_716 = trunc i64 %W_load_13 to i8

ST_15: tmp_455 (109)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:27  %tmp_455 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8 %tmp_716, i56 %tmp_453)

ST_15: tmp_456 (110)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:28  %tmp_456 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %W_load_13, i32 7, i32 63)

ST_15: tmp_654 (111)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:29  %tmp_654 = zext i57 %tmp_456 to i64

ST_15: tmp7 (112)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:30  %tmp7 = xor i64 %tmp_654, %tmp_455

ST_15: tmp_458 (113)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120 (grouped into LUT with out node tmp9)
:31  %tmp_458 = xor i64 %tmp7, %tmp_452

ST_15: tmp9 (119)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:120 (out node of the LUT)
:37  %tmp9 = add i64 %tmp_445, %tmp_458


 <State 16>: 2.65ns
ST_16: tmp_463 (120)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:120
:38  %tmp_463 = add i64 %tmp9, %tmp8

ST_16: tmp_464 (121)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:39  %tmp_464 = zext i7 %i_2 to i64

ST_16: W_addr_18 (122)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:120
:40  %W_addr_18 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_464

ST_16: StgValue_210 (123)  [1/1] 1.24ns  loc: ed25519/src/sha512.cpp:120
:41  store i64 %tmp_463, i64* %W_addr_18, align 8

ST_16: StgValue_211 (125)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:119
:43  br label %.preheader12


 <State 17>: 1.24ns
ST_17: i_3 (137)  [1/1] 0.00ns
.preheader11:0  %i_3 = phi i7 [ %i_18, %5 ], [ 0, %.preheader11.preheader ]

ST_17: tmp_465 (138)  [1/1] 0.56ns  loc: ed25519/src/sha512.cpp:130
.preheader11:1  %tmp_465 = icmp ult i7 %i_3, -48

ST_17: empty_111 (139)  [1/1] 0.00ns
.preheader11:2  %empty_111 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_17: StgValue_215 (140)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:130
.preheader11:3  br i1 %tmp_465, label %5, label %.preheader.preheader

ST_17: S_load (142)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:0  %S_load = load i64* %S_addr_10, align 8

ST_17: S_load_9 (143)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:1  %S_load_9 = load i64* %S_addr_11, align 16

ST_17: tmp_480 (160)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
:18  %tmp_480 = zext i7 %i_3 to i64

ST_17: K_addr (161)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
:19  %K_addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_480

ST_17: K_load (162)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:131
:20  %K_load = load i64* %K_addr, align 16

ST_17: i_18 (493)  [1/1] 1.10ns  loc: ed25519/src/sha512.cpp:130
:351  %i_18 = add i7 8, %i_3

ST_17: StgValue_222 (496)  [1/1] 0.66ns  loc: ed25519/src/sha512.cpp:146
.preheader.preheader:0  br label %.preheader


 <State 18>: 2.65ns
ST_18: S_load (142)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:0  %S_load = load i64* %S_addr_10, align 8

ST_18: S_load_9 (143)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:1  %S_load_9 = load i64* %S_addr_11, align 16

ST_18: S_load_10 (155)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:13  %S_load_10 = load i64* %S_addr_12, align 16

ST_18: S_load_11 (156)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:14  %S_load_11 = load i64* %S_addr_13, align 8

ST_18: K_load (162)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:131
:20  %K_load = load i64* %K_addr, align 16

ST_18: tmp13 (165)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131
:23  %tmp13 = add i64 %K_load, %S_load


 <State 19>: 2.14ns
ST_19: tmp_466 (144)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:2  %tmp_466 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %S_load_9, i32 14, i32 63)

ST_19: tmp_719 (145)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:3  %tmp_719 = trunc i64 %S_load_9 to i14

ST_19: tmp_468 (146)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:4  %tmp_468 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_719, i50 %tmp_466)

ST_19: tmp_469 (147)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:5  %tmp_469 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %S_load_9, i32 18, i32 63)

ST_19: tmp_728 (148)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:6  %tmp_728 = trunc i64 %S_load_9 to i18

ST_19: tmp_471 (149)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:7  %tmp_471 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_728, i46 %tmp_469)

ST_19: tmp_472 (150)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:8  %tmp_472 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %S_load_9, i32 41, i32 63)

ST_19: tmp_731 (151)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:9  %tmp_731 = trunc i64 %S_load_9 to i41

ST_19: tmp_474 (152)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:10  %tmp_474 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_731, i23 %tmp_472)

ST_19: tmp10 (153)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:11  %tmp10 = xor i64 %tmp_474, %tmp_471

ST_19: tmp_476 (154)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp15)
:12  %tmp_476 = xor i64 %tmp10, %tmp_468

ST_19: S_load_10 (155)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:13  %S_load_10 = load i64* %S_addr_12, align 16

ST_19: S_load_11 (156)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:14  %S_load_11 = load i64* %S_addr_13, align 8

ST_19: tmp_477 (157)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp_479)
:15  %tmp_477 = xor i64 %S_load_11, %S_load_10

ST_19: tmp_478 (158)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp_479)
:16  %tmp_478 = and i64 %S_load_9, %tmp_477

ST_19: tmp_479 (159)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:131 (out node of the LUT)
:17  %tmp_479 = xor i64 %S_load_10, %tmp_478

ST_19: W_addr_19 (163)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131
:21  %W_addr_19 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_480

ST_19: W_load_15 (164)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:131
:22  %W_load_15 = load i64* %W_addr_19, align 16

ST_19: tmp15 (166)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131 (out node of the LUT)
:24  %tmp15 = add i64 %tmp_476, %tmp_479


 <State 20>: 2.65ns
ST_20: W_load_15 (164)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:131
:22  %W_load_15 = load i64* %W_addr_19, align 16

ST_20: tmp14 (167)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131
:25  %tmp14 = add i64 %tmp15, %W_load_15

ST_20: S_load_13 (181)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:39  %S_load_13 = load i64* %S_addr_15, align 8


 <State 21>: 1.41ns
ST_21: t0 (168)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131
:26  %t0 = add i64 %tmp14, %tmp13

ST_21: S_load_12 (169)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:27  %S_load_12 = load i64* %S_addr_14, align 16

ST_21: S_load_13 (181)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:39  %S_load_13 = load i64* %S_addr_15, align 8

ST_21: S_load_15 (187)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:45  %S_load_15 = load i64* %S_addr_17, align 8


 <State 22>: 2.09ns
ST_22: S_load_12 (169)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:27  %S_load_12 = load i64* %S_addr_14, align 16

ST_22: S_load_14 (183)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:41  %S_load_14 = load i64* %S_addr_16, align 16

ST_22: S_load_15 (187)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:45  %S_load_15 = load i64* %S_addr_17, align 8

ST_22: tmp_499 (188)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131
:46  %tmp_499 = add i64 %S_load_15, %t0


 <State 23>: 2.14ns
ST_23: tmp_484 (170)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:28  %tmp_484 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %S_load_12, i32 28, i32 63)

ST_23: tmp_734 (171)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:29  %tmp_734 = trunc i64 %S_load_12 to i28

ST_23: tmp_486 (172)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:30  %tmp_486 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_734, i36 %tmp_484)

ST_23: tmp_487 (173)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:31  %tmp_487 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %S_load_12, i32 34, i32 63)

ST_23: tmp_742 (174)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:32  %tmp_742 = trunc i64 %S_load_12 to i34

ST_23: tmp_489 (175)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:33  %tmp_489 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_742, i30 %tmp_487)

ST_23: tmp_490 (176)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:34  %tmp_490 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %S_load_12, i32 39, i32 63)

ST_23: tmp_743 (177)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:35  %tmp_743 = trunc i64 %S_load_12 to i39

ST_23: tmp_492 (178)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:36  %tmp_492 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_743, i25 %tmp_490)

ST_23: tmp16 (179)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:37  %tmp16 = xor i64 %tmp_492, %tmp_489

ST_23: tmp_494 (180)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp17)
:38  %tmp_494 = xor i64 %tmp16, %tmp_486

ST_23: tmp_495 (182)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp_498)
:40  %tmp_495 = or i64 %S_load_13, %S_load_12

ST_23: S_load_14 (183)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:131
:41  %S_load_14 = load i64* %S_addr_16, align 16

ST_23: tmp_496 (184)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp_498)
:42  %tmp_496 = and i64 %S_load_14, %tmp_495

ST_23: tmp_497 (185)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp_498)
:43  %tmp_497 = and i64 %S_load_13, %S_load_12

ST_23: tmp_498 (186)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:131 (out node of the LUT)
:44  %tmp_498 = or i64 %tmp_496, %tmp_497

ST_23: tmp17 (189)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131 (out node of the LUT)
:47  %tmp17 = add i64 %tmp_494, %tmp_498


 <State 24>: 1.41ns
ST_24: tmp_500 (190)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:131
:48  %tmp_500 = add i64 %tmp17, %t0

ST_24: tmp_515 (205)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132
:63  %tmp_515 = or i7 %i_3, 1

ST_24: tmp_516 (206)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132
:64  %tmp_516 = zext i7 %tmp_515 to i64

ST_24: K_addr_8 (207)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132
:65  %K_addr_8 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_516

ST_24: K_load_8 (208)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:132
:66  %K_load_8 = load i64* %K_addr_8, align 8


 <State 25>: 2.65ns
ST_25: K_load_8 (208)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:132
:66  %K_load_8 = load i64* %K_addr_8, align 8

ST_25: tmp21 (211)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132
:69  %tmp21 = add i64 %K_load_8, %S_load_10


 <State 26>: 1.46ns
ST_26: tmp_501 (191)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:49  %tmp_501 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_499, i32 14, i32 63)

ST_26: tmp_744 (192)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp23)
:50  %tmp_744 = trunc i64 %tmp_499 to i14

ST_26: tmp_503 (193)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:51  %tmp_503 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_744, i50 %tmp_501)

ST_26: tmp_504 (194)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:52  %tmp_504 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_499, i32 18, i32 63)

ST_26: tmp_745 (195)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp23)
:53  %tmp_745 = trunc i64 %tmp_499 to i18

ST_26: tmp_506 (196)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:54  %tmp_506 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_745, i46 %tmp_504)

ST_26: tmp_507 (197)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:55  %tmp_507 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_499, i32 41, i32 63)

ST_26: tmp_746 (198)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp23)
:56  %tmp_746 = trunc i64 %tmp_499 to i41

ST_26: tmp_509 (199)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:57  %tmp_509 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_746, i23 %tmp_507)

ST_26: tmp18 (200)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:58  %tmp18 = xor i64 %tmp_509, %tmp_506

ST_26: tmp_511 (201)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp23)
:59  %tmp_511 = xor i64 %tmp18, %tmp_503

ST_26: tmp_512 (202)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp_514)
:60  %tmp_512 = xor i64 %S_load_11, %S_load_9

ST_26: tmp_513 (203)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp_514)
:61  %tmp_513 = and i64 %tmp_499, %tmp_512

ST_26: tmp_514 (204)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:132 (out node of the LUT)
:62  %tmp_514 = xor i64 %S_load_11, %tmp_513

ST_26: W_addr_20 (209)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132
:67  %W_addr_20 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_516

ST_26: W_load_16 (210)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:132
:68  %W_load_16 = load i64* %W_addr_20, align 8

ST_26: tmp23 (212)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132 (out node of the LUT)
:70  %tmp23 = add i64 %tmp_514, %tmp_511


 <State 27>: 2.65ns
ST_27: W_load_16 (210)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:132
:68  %W_load_16 = load i64* %W_addr_20, align 8

ST_27: tmp22 (213)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132
:71  %tmp22 = add i64 %tmp23, %W_load_16


 <State 28>: 1.41ns
ST_28: t0_8 (214)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132
:72  %t0_8 = add i64 %tmp22, %tmp21


 <State 29>: 1.41ns
ST_29: tmp_535 (230)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132
:88  %tmp_535 = add i64 %S_load_14, %t0_8


 <State 30>: 1.41ns
ST_30: tmp_520 (215)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:73  %tmp_520 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_500, i32 28, i32 63)

ST_30: tmp_747 (216)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp25)
:74  %tmp_747 = trunc i64 %tmp_500 to i28

ST_30: tmp_522 (217)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:75  %tmp_522 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_747, i36 %tmp_520)

ST_30: tmp_523 (218)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:76  %tmp_523 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_500, i32 34, i32 63)

ST_30: tmp_748 (219)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp25)
:77  %tmp_748 = trunc i64 %tmp_500 to i34

ST_30: tmp_525 (220)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:78  %tmp_525 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_748, i30 %tmp_523)

ST_30: tmp_526 (221)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:79  %tmp_526 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_500, i32 39, i32 63)

ST_30: tmp_749 (222)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:131 (grouped into LUT with out node tmp25)
:80  %tmp_749 = trunc i64 %tmp_500 to i39

ST_30: tmp_528 (223)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:81  %tmp_528 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_749, i25 %tmp_526)

ST_30: tmp24 (224)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:82  %tmp24 = xor i64 %tmp_528, %tmp_525

ST_30: tmp_530 (225)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp25)
:83  %tmp_530 = xor i64 %tmp24, %tmp_522

ST_30: tmp25 (231)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132 (out node of the LUT)
:89  %tmp25 = add i64 %tmp_530, %t0_8


 <State 31>: 1.41ns
ST_31: tmp_531 (226)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp_536)
:84  %tmp_531 = or i64 %S_load_12, %tmp_500

ST_31: tmp_532 (227)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp_536)
:85  %tmp_532 = and i64 %S_load_13, %tmp_531

ST_31: tmp_533 (228)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp_536)
:86  %tmp_533 = and i64 %S_load_12, %tmp_500

ST_31: tmp_534 (229)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp_536)
:87  %tmp_534 = or i64 %tmp_532, %tmp_533

ST_31: tmp_536 (232)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:132 (out node of the LUT)
:90  %tmp_536 = add i64 %tmp25, %tmp_534

ST_31: tmp_551 (247)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133
:105  %tmp_551 = or i7 %i_3, 2

ST_31: tmp_552 (248)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133
:106  %tmp_552 = zext i7 %tmp_551 to i64

ST_31: K_addr_9 (249)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133
:107  %K_addr_9 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_552

ST_31: K_load_9 (250)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:133
:108  %K_load_9 = load i64* %K_addr_9, align 16


 <State 32>: 2.65ns
ST_32: K_load_9 (250)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:133
:108  %K_load_9 = load i64* %K_addr_9, align 16

ST_32: tmp29 (253)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133
:111  %tmp29 = add i64 %K_load_9, %S_load_11


 <State 33>: 1.46ns
ST_33: tmp_537 (233)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:91  %tmp_537 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_535, i32 14, i32 63)

ST_33: tmp_750 (234)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp31)
:92  %tmp_750 = trunc i64 %tmp_535 to i14

ST_33: tmp_539 (235)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:93  %tmp_539 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_750, i50 %tmp_537)

ST_33: tmp_540 (236)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:94  %tmp_540 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_535, i32 18, i32 63)

ST_33: tmp_751 (237)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp31)
:95  %tmp_751 = trunc i64 %tmp_535 to i18

ST_33: tmp_542 (238)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:96  %tmp_542 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_751, i46 %tmp_540)

ST_33: tmp_543 (239)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:97  %tmp_543 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_535, i32 41, i32 63)

ST_33: tmp_752 (240)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp31)
:98  %tmp_752 = trunc i64 %tmp_535 to i41

ST_33: tmp_545 (241)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:99  %tmp_545 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_752, i23 %tmp_543)

ST_33: tmp26 (242)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:100  %tmp26 = xor i64 %tmp_545, %tmp_542

ST_33: tmp_547 (243)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp31)
:101  %tmp_547 = xor i64 %tmp26, %tmp_539

ST_33: tmp_548 (244)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp_550)
:102  %tmp_548 = xor i64 %S_load_9, %tmp_499

ST_33: tmp_549 (245)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp_550)
:103  %tmp_549 = and i64 %tmp_535, %tmp_548

ST_33: tmp_550 (246)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:133 (out node of the LUT)
:104  %tmp_550 = xor i64 %S_load_9, %tmp_549

ST_33: W_addr_21 (251)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133
:109  %W_addr_21 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_552

ST_33: W_load_17 (252)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:133
:110  %W_load_17 = load i64* %W_addr_21, align 16

ST_33: tmp31 (254)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133 (out node of the LUT)
:112  %tmp31 = add i64 %tmp_550, %tmp_547


 <State 34>: 2.65ns
ST_34: W_load_17 (252)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:133
:110  %W_load_17 = load i64* %W_addr_21, align 16

ST_34: tmp30 (255)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133
:113  %tmp30 = add i64 %tmp31, %W_load_17


 <State 35>: 1.41ns
ST_35: t0_9 (256)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133
:114  %t0_9 = add i64 %tmp30, %tmp29


 <State 36>: 1.41ns
ST_36: tmp_571 (272)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133
:130  %tmp_571 = add i64 %S_load_13, %t0_9


 <State 37>: 1.41ns
ST_37: tmp_556 (257)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:115  %tmp_556 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_536, i32 28, i32 63)

ST_37: tmp_753 (258)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp33)
:116  %tmp_753 = trunc i64 %tmp_536 to i28

ST_37: tmp_558 (259)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:117  %tmp_558 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_753, i36 %tmp_556)

ST_37: tmp_559 (260)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:118  %tmp_559 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_536, i32 34, i32 63)

ST_37: tmp_754 (261)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp33)
:119  %tmp_754 = trunc i64 %tmp_536 to i34

ST_37: tmp_561 (262)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:120  %tmp_561 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_754, i30 %tmp_559)

ST_37: tmp_562 (263)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:121  %tmp_562 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_536, i32 39, i32 63)

ST_37: tmp_755 (264)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:132 (grouped into LUT with out node tmp33)
:122  %tmp_755 = trunc i64 %tmp_536 to i39

ST_37: tmp_564 (265)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:123  %tmp_564 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_755, i25 %tmp_562)

ST_37: tmp32 (266)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:124  %tmp32 = xor i64 %tmp_564, %tmp_561

ST_37: tmp_566 (267)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp33)
:125  %tmp_566 = xor i64 %tmp32, %tmp_558

ST_37: tmp33 (273)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133 (out node of the LUT)
:131  %tmp33 = add i64 %tmp_566, %t0_9


 <State 38>: 1.41ns
ST_38: tmp_567 (268)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp_572)
:126  %tmp_567 = or i64 %tmp_536, %tmp_500

ST_38: tmp_568 (269)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp_572)
:127  %tmp_568 = and i64 %S_load_12, %tmp_567

ST_38: tmp_569 (270)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp_572)
:128  %tmp_569 = and i64 %tmp_536, %tmp_500

ST_38: tmp_570 (271)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp_572)
:129  %tmp_570 = or i64 %tmp_568, %tmp_569

ST_38: tmp_572 (274)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:133 (out node of the LUT)
:132  %tmp_572 = add i64 %tmp33, %tmp_570

ST_38: tmp_587 (289)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134
:147  %tmp_587 = or i7 %i_3, 3

ST_38: tmp_588 (290)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134
:148  %tmp_588 = zext i7 %tmp_587 to i64

ST_38: K_addr_10 (291)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134
:149  %K_addr_10 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_588

ST_38: K_load_10 (292)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:134
:150  %K_load_10 = load i64* %K_addr_10, align 8


 <State 39>: 2.65ns
ST_39: K_load_10 (292)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:134
:150  %K_load_10 = load i64* %K_addr_10, align 8

ST_39: tmp37 (295)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134
:153  %tmp37 = add i64 %K_load_10, %S_load_9


 <State 40>: 1.46ns
ST_40: tmp_573 (275)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:133  %tmp_573 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_571, i32 14, i32 63)

ST_40: tmp_756 (276)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp39)
:134  %tmp_756 = trunc i64 %tmp_571 to i14

ST_40: tmp_575 (277)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:135  %tmp_575 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_756, i50 %tmp_573)

ST_40: tmp_576 (278)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:136  %tmp_576 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_571, i32 18, i32 63)

ST_40: tmp_757 (279)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp39)
:137  %tmp_757 = trunc i64 %tmp_571 to i18

ST_40: tmp_578 (280)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:138  %tmp_578 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_757, i46 %tmp_576)

ST_40: tmp_579 (281)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:139  %tmp_579 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_571, i32 41, i32 63)

ST_40: tmp_758 (282)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp39)
:140  %tmp_758 = trunc i64 %tmp_571 to i41

ST_40: tmp_581 (283)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:141  %tmp_581 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_758, i23 %tmp_579)

ST_40: tmp34 (284)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:142  %tmp34 = xor i64 %tmp_581, %tmp_578

ST_40: tmp_583 (285)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp39)
:143  %tmp_583 = xor i64 %tmp34, %tmp_575

ST_40: tmp_584 (286)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp_586)
:144  %tmp_584 = xor i64 %tmp_535, %tmp_499

ST_40: tmp_585 (287)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp_586)
:145  %tmp_585 = and i64 %tmp_571, %tmp_584

ST_40: tmp_586 (288)  [1/1] 0.05ns  loc: ed25519/src/sha512.cpp:134 (out node of the LUT)
:146  %tmp_586 = xor i64 %tmp_585, %tmp_499

ST_40: W_addr_22 (293)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134
:151  %W_addr_22 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_588

ST_40: W_load_18 (294)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:134
:152  %W_load_18 = load i64* %W_addr_22, align 8

ST_40: tmp39 (296)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134 (out node of the LUT)
:154  %tmp39 = add i64 %tmp_586, %tmp_583


 <State 41>: 2.65ns
ST_41: W_load_18 (294)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:134
:152  %W_load_18 = load i64* %W_addr_22, align 8

ST_41: tmp38 (297)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134
:155  %tmp38 = add i64 %tmp39, %W_load_18


 <State 42>: 1.41ns
ST_42: t0_15 (298)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134
:156  %t0_15 = add i64 %tmp38, %tmp37


 <State 43>: 1.41ns
ST_43: tmp_607 (314)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134
:172  %tmp_607 = add i64 %S_load_12, %t0_15


 <State 44>: 1.41ns
ST_44: tmp_592 (299)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:157  %tmp_592 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_572, i32 28, i32 63)

ST_44: tmp_759 (300)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp41)
:158  %tmp_759 = trunc i64 %tmp_572 to i28

ST_44: tmp_594 (301)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:159  %tmp_594 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_759, i36 %tmp_592)

ST_44: tmp_595 (302)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:160  %tmp_595 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_572, i32 34, i32 63)

ST_44: tmp_760 (303)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp41)
:161  %tmp_760 = trunc i64 %tmp_572 to i34

ST_44: tmp_597 (304)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:162  %tmp_597 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_760, i30 %tmp_595)

ST_44: tmp_598 (305)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:163  %tmp_598 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_572, i32 39, i32 63)

ST_44: tmp_761 (306)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:133 (grouped into LUT with out node tmp41)
:164  %tmp_761 = trunc i64 %tmp_572 to i39

ST_44: tmp_600 (307)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:165  %tmp_600 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_761, i25 %tmp_598)

ST_44: tmp40 (308)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:166  %tmp40 = xor i64 %tmp_600, %tmp_597

ST_44: tmp_602 (309)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp41)
:167  %tmp_602 = xor i64 %tmp40, %tmp_594

ST_44: tmp41 (315)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134 (out node of the LUT)
:173  %tmp41 = add i64 %tmp_602, %t0_15


 <State 45>: 1.41ns
ST_45: tmp_603 (310)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp_608)
:168  %tmp_603 = or i64 %tmp_572, %tmp_536

ST_45: tmp_604 (311)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp_608)
:169  %tmp_604 = and i64 %tmp_603, %tmp_500

ST_45: tmp_605 (312)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp_608)
:170  %tmp_605 = and i64 %tmp_572, %tmp_536

ST_45: tmp_606 (313)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp_608)
:171  %tmp_606 = or i64 %tmp_604, %tmp_605

ST_45: tmp_608 (316)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:134 (out node of the LUT)
:174  %tmp_608 = add i64 %tmp41, %tmp_606

ST_45: tmp_623 (331)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135
:189  %tmp_623 = or i7 %i_3, 4

ST_45: tmp_624 (332)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135
:190  %tmp_624 = zext i7 %tmp_623 to i64

ST_45: K_addr_11 (333)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135
:191  %K_addr_11 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_624

ST_45: K_load_11 (334)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:135
:192  %K_load_11 = load i64* %K_addr_11, align 16

ST_45: W_addr_23 (335)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135
:193  %W_addr_23 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_624

ST_45: W_load_19 (336)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:135
:194  %W_load_19 = load i64* %W_addr_23, align 16


 <State 46>: 2.65ns
ST_46: K_load_11 (334)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:135
:192  %K_load_11 = load i64* %K_addr_11, align 16

ST_46: W_load_19 (336)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:135
:194  %W_load_19 = load i64* %W_addr_23, align 16

ST_46: tmp45 (337)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135
:195  %tmp45 = add i64 %K_load_11, %W_load_19


 <State 47>: 1.41ns
ST_47: tmp_609 (317)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:175  %tmp_609 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_607, i32 14, i32 63)

ST_47: tmp_762 (318)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp47)
:176  %tmp_762 = trunc i64 %tmp_607 to i14

ST_47: tmp_611 (319)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:177  %tmp_611 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_762, i50 %tmp_609)

ST_47: tmp_612 (320)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:178  %tmp_612 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_607, i32 18, i32 63)

ST_47: tmp_763 (321)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp47)
:179  %tmp_763 = trunc i64 %tmp_607 to i18

ST_47: tmp_614 (322)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:180  %tmp_614 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_763, i46 %tmp_612)

ST_47: tmp_615 (323)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:181  %tmp_615 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_607, i32 41, i32 63)

ST_47: tmp_764 (324)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp47)
:182  %tmp_764 = trunc i64 %tmp_607 to i41

ST_47: tmp_617 (325)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:183  %tmp_617 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_764, i23 %tmp_615)

ST_47: tmp42 (326)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:184  %tmp42 = xor i64 %tmp_617, %tmp_614

ST_47: tmp_619 (327)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp47)
:185  %tmp_619 = xor i64 %tmp42, %tmp_611

ST_47: tmp47 (338)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135 (out node of the LUT)
:196  %tmp47 = add i64 %tmp_619, %tmp_499


 <State 48>: 1.41ns
ST_48: tmp_620 (328)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp46)
:186  %tmp_620 = xor i64 %tmp_571, %tmp_535

ST_48: tmp_621 (329)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp46)
:187  %tmp_621 = and i64 %tmp_607, %tmp_620

ST_48: tmp_622 (330)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp46)
:188  %tmp_622 = xor i64 %tmp_621, %tmp_535

ST_48: tmp46 (339)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135 (out node of the LUT)
:197  %tmp46 = add i64 %tmp47, %tmp_622


 <State 49>: 1.41ns
ST_49: t0_16 (340)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135
:198  %t0_16 = add i64 %tmp46, %tmp45


 <State 50>: 2.09ns
ST_50: tmp_643 (356)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135
:214  %tmp_643 = add i64 %tmp_500, %t0_16

ST_50: StgValue_436 (357)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:135
:215  store i64 %tmp_643, i64* %S_addr_10, align 8


 <State 51>: 1.41ns
ST_51: tmp_628 (341)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:199  %tmp_628 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_608, i32 28, i32 63)

ST_51: tmp_765 (342)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp49)
:200  %tmp_765 = trunc i64 %tmp_608 to i28

ST_51: tmp_630 (343)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:201  %tmp_630 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_765, i36 %tmp_628)

ST_51: tmp_631 (344)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:202  %tmp_631 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_608, i32 34, i32 63)

ST_51: tmp_766 (345)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp49)
:203  %tmp_766 = trunc i64 %tmp_608 to i34

ST_51: tmp_633 (346)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:204  %tmp_633 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_766, i30 %tmp_631)

ST_51: tmp_634 (347)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:205  %tmp_634 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_608, i32 39, i32 63)

ST_51: tmp_767 (348)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:134 (grouped into LUT with out node tmp49)
:206  %tmp_767 = trunc i64 %tmp_608 to i39

ST_51: tmp_636 (349)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:207  %tmp_636 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_767, i25 %tmp_634)

ST_51: tmp48 (350)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:208  %tmp48 = xor i64 %tmp_636, %tmp_633

ST_51: tmp_638 (351)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp49)
:209  %tmp_638 = xor i64 %tmp48, %tmp_630

ST_51: tmp49 (358)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135 (out node of the LUT)
:216  %tmp49 = add i64 %tmp_638, %t0_16


 <State 52>: 2.09ns
ST_52: tmp_639 (352)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp_644)
:210  %tmp_639 = or i64 %tmp_608, %tmp_572

ST_52: tmp_640 (353)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp_644)
:211  %tmp_640 = and i64 %tmp_639, %tmp_536

ST_52: tmp_641 (354)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp_644)
:212  %tmp_641 = and i64 %tmp_608, %tmp_572

ST_52: tmp_642 (355)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp_644)
:213  %tmp_642 = or i64 %tmp_640, %tmp_641

ST_52: tmp_644 (359)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:135 (out node of the LUT)
:217  %tmp_644 = add i64 %tmp49, %tmp_642

ST_52: StgValue_454 (360)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:135
:218  store i64 %tmp_644, i64* %S_addr_17, align 8

ST_52: tmp_659 (375)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136
:233  %tmp_659 = or i7 %i_3, 5

ST_52: tmp_660 (376)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136
:234  %tmp_660 = zext i7 %tmp_659 to i64

ST_52: K_addr_12 (377)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136
:235  %K_addr_12 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_660

ST_52: K_load_12 (378)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:136
:236  %K_load_12 = load i64* %K_addr_12, align 8

ST_52: W_addr_24 (379)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136
:237  %W_addr_24 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_660

ST_52: W_load_20 (380)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:136
:238  %W_load_20 = load i64* %W_addr_24, align 8


 <State 53>: 2.65ns
ST_53: K_load_12 (378)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:136
:236  %K_load_12 = load i64* %K_addr_12, align 8

ST_53: W_load_20 (380)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:136
:238  %W_load_20 = load i64* %W_addr_24, align 8

ST_53: tmp53 (381)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136
:239  %tmp53 = add i64 %K_load_12, %W_load_20


 <State 54>: 1.41ns
ST_54: tmp_645 (361)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:219  %tmp_645 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_643, i32 14, i32 63)

ST_54: tmp_768 (362)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp55)
:220  %tmp_768 = trunc i64 %tmp_643 to i14

ST_54: tmp_647 (363)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:221  %tmp_647 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_768, i50 %tmp_645)

ST_54: tmp_648 (364)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:222  %tmp_648 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_643, i32 18, i32 63)

ST_54: tmp_769 (365)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp55)
:223  %tmp_769 = trunc i64 %tmp_643 to i18

ST_54: tmp_650 (366)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:224  %tmp_650 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_769, i46 %tmp_648)

ST_54: tmp_651 (367)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:225  %tmp_651 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_643, i32 41, i32 63)

ST_54: tmp_770 (368)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp55)
:226  %tmp_770 = trunc i64 %tmp_643 to i41

ST_54: tmp_653 (369)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:227  %tmp_653 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_770, i23 %tmp_651)

ST_54: tmp50 (370)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:228  %tmp50 = xor i64 %tmp_653, %tmp_650

ST_54: tmp_655 (371)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp55)
:229  %tmp_655 = xor i64 %tmp50, %tmp_647

ST_54: tmp55 (382)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136 (out node of the LUT)
:240  %tmp55 = add i64 %tmp_655, %tmp_535


 <State 55>: 1.41ns
ST_55: tmp_656 (372)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp54)
:230  %tmp_656 = xor i64 %tmp_607, %tmp_571

ST_55: tmp_657 (373)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp54)
:231  %tmp_657 = and i64 %tmp_643, %tmp_656

ST_55: tmp_658 (374)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp54)
:232  %tmp_658 = xor i64 %tmp_657, %tmp_571

ST_55: tmp54 (383)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136 (out node of the LUT)
:241  %tmp54 = add i64 %tmp55, %tmp_658


 <State 56>: 1.41ns
ST_56: t0_17 (384)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136
:242  %t0_17 = add i64 %tmp54, %tmp53


 <State 57>: 2.09ns
ST_57: tmp_672 (400)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136
:258  %tmp_672 = add i64 %tmp_536, %t0_17

ST_57: StgValue_482 (401)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:136
:259  store i64 %tmp_672, i64* %S_addr_12, align 16


 <State 58>: 1.41ns
ST_58: tmp_661 (385)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:243  %tmp_661 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_644, i32 28, i32 63)

ST_58: tmp_771 (386)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp57)
:244  %tmp_771 = trunc i64 %tmp_644 to i28

ST_58: tmp_662 (387)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:245  %tmp_662 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_771, i36 %tmp_661)

ST_58: tmp_663 (388)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:246  %tmp_663 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_644, i32 34, i32 63)

ST_58: tmp_772 (389)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp57)
:247  %tmp_772 = trunc i64 %tmp_644 to i34

ST_58: tmp_664 (390)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:248  %tmp_664 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_772, i30 %tmp_663)

ST_58: tmp_665 (391)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:249  %tmp_665 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_644, i32 39, i32 63)

ST_58: tmp_773 (392)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:135 (grouped into LUT with out node tmp57)
:250  %tmp_773 = trunc i64 %tmp_644 to i39

ST_58: tmp_666 (393)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:251  %tmp_666 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_773, i25 %tmp_665)

ST_58: tmp56 (394)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:252  %tmp56 = xor i64 %tmp_666, %tmp_664

ST_58: tmp_667 (395)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp57)
:253  %tmp_667 = xor i64 %tmp56, %tmp_662

ST_58: tmp57 (402)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136 (out node of the LUT)
:260  %tmp57 = add i64 %tmp_667, %t0_17


 <State 59>: 2.09ns
ST_59: tmp_668 (396)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp_673)
:254  %tmp_668 = or i64 %tmp_644, %tmp_608

ST_59: tmp_669 (397)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp_673)
:255  %tmp_669 = and i64 %tmp_668, %tmp_572

ST_59: tmp_670 (398)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp_673)
:256  %tmp_670 = and i64 %tmp_644, %tmp_608

ST_59: tmp_671 (399)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp_673)
:257  %tmp_671 = or i64 %tmp_669, %tmp_670

ST_59: tmp_673 (403)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:136 (out node of the LUT)
:261  %tmp_673 = add i64 %tmp57, %tmp_671

ST_59: StgValue_500 (404)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:136
:262  store i64 %tmp_673, i64* %S_addr_16, align 16

ST_59: tmp_684 (419)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137
:277  %tmp_684 = or i7 %i_3, 6

ST_59: tmp_685 (420)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137
:278  %tmp_685 = zext i7 %tmp_684 to i64

ST_59: K_addr_13 (421)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137
:279  %K_addr_13 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_685

ST_59: K_load_13 (422)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:137
:280  %K_load_13 = load i64* %K_addr_13, align 16

ST_59: W_addr_25 (423)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137
:281  %W_addr_25 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_685

ST_59: W_load_21 (424)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:137
:282  %W_load_21 = load i64* %W_addr_25, align 16


 <State 60>: 2.65ns
ST_60: K_load_13 (422)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:137
:280  %K_load_13 = load i64* %K_addr_13, align 16

ST_60: W_load_21 (424)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:137
:282  %W_load_21 = load i64* %W_addr_25, align 16

ST_60: tmp61 (425)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137
:283  %tmp61 = add i64 %K_load_13, %W_load_21


 <State 61>: 1.41ns
ST_61: tmp_674 (405)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:263  %tmp_674 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_672, i32 14, i32 63)

ST_61: tmp_774 (406)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp63)
:264  %tmp_774 = trunc i64 %tmp_672 to i14

ST_61: tmp_675 (407)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:265  %tmp_675 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_774, i50 %tmp_674)

ST_61: tmp_676 (408)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:266  %tmp_676 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_672, i32 18, i32 63)

ST_61: tmp_775 (409)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp63)
:267  %tmp_775 = trunc i64 %tmp_672 to i18

ST_61: tmp_677 (410)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:268  %tmp_677 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_775, i46 %tmp_676)

ST_61: tmp_678 (411)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:269  %tmp_678 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_672, i32 41, i32 63)

ST_61: tmp_776 (412)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp63)
:270  %tmp_776 = trunc i64 %tmp_672 to i41

ST_61: tmp_679 (413)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:271  %tmp_679 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_776, i23 %tmp_678)

ST_61: tmp58 (414)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:272  %tmp58 = xor i64 %tmp_679, %tmp_677

ST_61: tmp_680 (415)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp63)
:273  %tmp_680 = xor i64 %tmp58, %tmp_675

ST_61: tmp63 (426)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137 (out node of the LUT)
:284  %tmp63 = add i64 %tmp_680, %tmp_571


 <State 62>: 1.41ns
ST_62: tmp_681 (416)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp62)
:274  %tmp_681 = xor i64 %tmp_643, %tmp_607

ST_62: tmp_682 (417)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp62)
:275  %tmp_682 = and i64 %tmp_672, %tmp_681

ST_62: tmp_683 (418)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp62)
:276  %tmp_683 = xor i64 %tmp_682, %tmp_607

ST_62: tmp62 (427)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137 (out node of the LUT)
:285  %tmp62 = add i64 %tmp63, %tmp_683


 <State 63>: 1.41ns
ST_63: t0_18 (428)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137
:286  %t0_18 = add i64 %tmp62, %tmp61


 <State 64>: 2.09ns
ST_64: tmp_698 (444)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137
:302  %tmp_698 = add i64 %tmp_572, %t0_18

ST_64: StgValue_528 (445)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:137
:303  store i64 %tmp_698, i64* %S_addr_13, align 8


 <State 65>: 1.41ns
ST_65: tmp_686 (429)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:287  %tmp_686 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_673, i32 28, i32 63)

ST_65: tmp_777 (430)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp65)
:288  %tmp_777 = trunc i64 %tmp_673 to i28

ST_65: tmp_687 (431)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:289  %tmp_687 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_777, i36 %tmp_686)

ST_65: tmp_688 (432)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:290  %tmp_688 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_673, i32 34, i32 63)

ST_65: tmp_778 (433)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp65)
:291  %tmp_778 = trunc i64 %tmp_673 to i34

ST_65: tmp_689 (434)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:292  %tmp_689 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_778, i30 %tmp_688)

ST_65: tmp_690 (435)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:293  %tmp_690 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_673, i32 39, i32 63)

ST_65: tmp_779 (436)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:136 (grouped into LUT with out node tmp65)
:294  %tmp_779 = trunc i64 %tmp_673 to i39

ST_65: tmp_691 (437)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:295  %tmp_691 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_779, i25 %tmp_690)

ST_65: tmp64 (438)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:296  %tmp64 = xor i64 %tmp_691, %tmp_689

ST_65: tmp_692 (439)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp65)
:297  %tmp_692 = xor i64 %tmp64, %tmp_687

ST_65: tmp65 (446)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137 (out node of the LUT)
:304  %tmp65 = add i64 %tmp_692, %t0_18


 <State 66>: 2.09ns
ST_66: tmp_693 (440)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp_699)
:298  %tmp_693 = or i64 %tmp_673, %tmp_644

ST_66: tmp_694 (441)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp_699)
:299  %tmp_694 = and i64 %tmp_693, %tmp_608

ST_66: tmp_695 (442)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp_699)
:300  %tmp_695 = and i64 %tmp_673, %tmp_644

ST_66: tmp_696 (443)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp_699)
:301  %tmp_696 = or i64 %tmp_694, %tmp_695

ST_66: tmp_699 (447)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:137 (out node of the LUT)
:305  %tmp_699 = add i64 %tmp65, %tmp_696

ST_66: StgValue_546 (448)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:137
:306  store i64 %tmp_699, i64* %S_addr_15, align 8

ST_66: tmp_712 (463)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138
:321  %tmp_712 = or i7 %i_3, 7

ST_66: tmp_714 (464)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138
:322  %tmp_714 = zext i7 %tmp_712 to i64

ST_66: K_addr_14 (465)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138
:323  %K_addr_14 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_714

ST_66: K_load_14 (466)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:138
:324  %K_load_14 = load i64* %K_addr_14, align 8

ST_66: W_addr_26 (467)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138
:325  %W_addr_26 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_714

ST_66: W_load_22 (468)  [2/2] 1.24ns  loc: ed25519/src/sha512.cpp:138
:326  %W_load_22 = load i64* %W_addr_26, align 8


 <State 67>: 2.65ns
ST_67: K_load_14 (466)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:138
:324  %K_load_14 = load i64* %K_addr_14, align 8

ST_67: W_load_22 (468)  [1/2] 1.24ns  loc: ed25519/src/sha512.cpp:138
:326  %W_load_22 = load i64* %W_addr_26, align 8

ST_67: tmp69 (469)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138
:327  %tmp69 = add i64 %K_load_14, %W_load_22


 <State 68>: 1.41ns
ST_68: tmp_701 (449)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:307  %tmp_701 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_698, i32 14, i32 63)

ST_68: tmp_780 (450)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp71)
:308  %tmp_780 = trunc i64 %tmp_698 to i14

ST_68: tmp_702 (451)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:309  %tmp_702 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_780, i50 %tmp_701)

ST_68: tmp_704 (452)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:310  %tmp_704 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_698, i32 18, i32 63)

ST_68: tmp_781 (453)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp71)
:311  %tmp_781 = trunc i64 %tmp_698 to i18

ST_68: tmp_705 (454)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:312  %tmp_705 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_781, i46 %tmp_704)

ST_68: tmp_706 (455)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:313  %tmp_706 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_698, i32 41, i32 63)

ST_68: tmp_782 (456)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp71)
:314  %tmp_782 = trunc i64 %tmp_698 to i41

ST_68: tmp_707 (457)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:315  %tmp_707 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_782, i23 %tmp_706)

ST_68: tmp66 (458)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:316  %tmp66 = xor i64 %tmp_707, %tmp_705

ST_68: tmp_708 (459)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp71)
:317  %tmp_708 = xor i64 %tmp66, %tmp_702

ST_68: tmp71 (470)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138 (out node of the LUT)
:328  %tmp71 = add i64 %tmp_708, %tmp_607


 <State 69>: 1.41ns
ST_69: tmp_709 (460)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp70)
:318  %tmp_709 = xor i64 %tmp_672, %tmp_643

ST_69: tmp_710 (461)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp70)
:319  %tmp_710 = and i64 %tmp_698, %tmp_709

ST_69: tmp_711 (462)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp70)
:320  %tmp_711 = xor i64 %tmp_710, %tmp_643

ST_69: tmp70 (471)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138 (out node of the LUT)
:329  %tmp70 = add i64 %tmp71, %tmp_711


 <State 70>: 1.41ns
ST_70: t0_19 (472)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138
:330  %t0_19 = add i64 %tmp70, %tmp69


 <State 71>: 2.09ns
ST_71: tmp_729 (488)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138
:346  %tmp_729 = add i64 %tmp_608, %t0_19

ST_71: StgValue_574 (489)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:138
:347  store i64 %tmp_729, i64* %S_addr_11, align 16


 <State 72>: 1.41ns
ST_72: tmp_715 (473)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:331  %tmp_715 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_699, i32 28, i32 63)

ST_72: tmp_783 (474)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp73)
:332  %tmp_783 = trunc i64 %tmp_699 to i28

ST_72: tmp_717 (475)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:333  %tmp_717 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_783, i36 %tmp_715)

ST_72: tmp_718 (476)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:334  %tmp_718 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_699, i32 34, i32 63)

ST_72: tmp_784 (477)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp73)
:335  %tmp_784 = trunc i64 %tmp_699 to i34

ST_72: tmp_720 (478)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:336  %tmp_720 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_784, i30 %tmp_718)

ST_72: tmp_721 (479)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:337  %tmp_721 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_699, i32 39, i32 63)

ST_72: tmp_785 (480)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:137 (grouped into LUT with out node tmp73)
:338  %tmp_785 = trunc i64 %tmp_699 to i39

ST_72: tmp_722 (481)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:339  %tmp_722 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_785, i25 %tmp_721)

ST_72: tmp72 (482)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:340  %tmp72 = xor i64 %tmp_722, %tmp_720

ST_72: tmp_723 (483)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp73)
:341  %tmp_723 = xor i64 %tmp72, %tmp_717

ST_72: tmp73 (490)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138 (out node of the LUT)
:348  %tmp73 = add i64 %tmp_723, %t0_19


 <State 73>: 2.09ns
ST_73: tmp_724 (484)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp_730)
:342  %tmp_724 = or i64 %tmp_699, %tmp_673

ST_73: tmp_725 (485)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp_730)
:343  %tmp_725 = and i64 %tmp_724, %tmp_644

ST_73: tmp_726 (486)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp_730)
:344  %tmp_726 = and i64 %tmp_699, %tmp_673

ST_73: tmp_727 (487)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:138 (grouped into LUT with out node tmp_730)
:345  %tmp_727 = or i64 %tmp_725, %tmp_726

ST_73: tmp_730 (491)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:138 (out node of the LUT)
:349  %tmp_730 = add i64 %tmp73, %tmp_727

ST_73: StgValue_592 (492)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:138
:350  store i64 %tmp_730, i64* %S_addr_14, align 16

ST_73: StgValue_593 (494)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:130
:352  br label %.preheader11


 <State 74>: 1.12ns
ST_74: i_4 (498)  [1/1] 0.00ns
.preheader:0  %i_4 = phi i4 [ %i_19, %6 ], [ 0, %.preheader.preheader ]

ST_74: exitcond (499)  [1/1] 0.44ns  loc: ed25519/src/sha512.cpp:146
.preheader:1  %exitcond = icmp eq i4 %i_4, -8

ST_74: empty_112 (500)  [1/1] 0.00ns
.preheader:2  %empty_112 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_74: i_19 (501)  [1/1] 1.12ns  loc: ed25519/src/sha512.cpp:146
.preheader:3  %i_19 = add i4 %i_4, 1

ST_74: StgValue_598 (502)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:146
.preheader:4  br i1 %exitcond, label %7, label %6

ST_74: tmp_732 (504)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:147
:0  %tmp_732 = zext i4 %i_4 to i64

ST_74: md_state_addr_4 (505)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:147
:1  %md_state_addr_4 = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp_732

ST_74: md_state_load_4 (506)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:147
:2  %md_state_load_4 = load i64* %md_state_addr_4, align 8

ST_74: S_addr_18 (507)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:147
:3  %S_addr_18 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp_732

ST_74: S_load_16 (508)  [2/2] 0.68ns  loc: ed25519/src/sha512.cpp:147
:4  %S_load_16 = load i64* %S_addr_18, align 8

ST_74: StgValue_604 (513)  [1/1] 0.00ns
:0  ret void


 <State 75>: 2.77ns
ST_75: md_state_load_4 (506)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:147
:2  %md_state_load_4 = load i64* %md_state_addr_4, align 8

ST_75: S_load_16 (508)  [1/2] 0.68ns  loc: ed25519/src/sha512.cpp:147
:4  %S_load_16 = load i64* %S_addr_18, align 8

ST_75: tmp_733 (509)  [1/1] 1.41ns  loc: ed25519/src/sha512.cpp:147
:5  %tmp_733 = add i64 %md_state_load_4, %S_load_16

ST_75: StgValue_608 (510)  [1/1] 0.68ns  loc: ed25519/src/sha512.cpp:147
:6  store i64 %tmp_733, i64* %md_state_addr_4, align 8

ST_75: StgValue_609 (511)  [1/1] 0.00ns  loc: ed25519/src/sha512.cpp:146
:7  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:109) [15]  (0.656 ns)

 <State 2>: 1.12ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:109) [15]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:109) [18]  (1.12 ns)

 <State 3>: 1.35ns
The critical path consists of the following:
	'load' operation ('md_state_load', ed25519/src/sha512.cpp:110) on array 'md_state' [23]  (0.677 ns)
	'store' operation (ed25519/src/sha512.cpp:110) of variable 'md_state_load', ed25519/src/sha512.cpp:110 on array 'S', ed25519/src/sha512.cpp:105 [25]  (0.677 ns)

 <State 4>: 1.12ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:114) [30]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:114) [33]  (1.12 ns)

 <State 5>: 0.571ns
The critical path consists of the following:
	'load' operation ('buf_load', ed25519/src/sha512.cpp:115) on array 'buf_r' [40]  (0.571 ns)

 <State 6>: 0.571ns
The critical path consists of the following:
	'load' operation ('buf_load_9', ed25519/src/sha512.cpp:115) on array 'buf_r' [48]  (0.571 ns)

 <State 7>: 0.571ns
The critical path consists of the following:
	'load' operation ('buf_load_11', ed25519/src/sha512.cpp:115) on array 'buf_r' [56]  (0.571 ns)

 <State 8>: 1.81ns
The critical path consists of the following:
	'load' operation ('buf_load_13', ed25519/src/sha512.cpp:115) on array 'buf_r' [64]  (0.571 ns)
	'store' operation (ed25519/src/sha512.cpp:115) of variable 'tmp_433', ed25519/src/sha512.cpp:115 on array 'W', ed25519/src/sha512.cpp:105 [72]  (1.24 ns)

 <State 9>: 1.1ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:119) [77]  (0 ns)
	'add' operation ('tmp_435', ed25519/src/sha512.cpp:120) [82]  (1.1 ns)

 <State 10>: 1.1ns
The critical path consists of the following:
	'add' operation ('tmp_446', ed25519/src/sha512.cpp:120) [96]  (1.1 ns)

 <State 11>: 1.1ns
The critical path consists of the following:
	'add' operation ('tmp_448', ed25519/src/sha512.cpp:120) [100]  (1.1 ns)

 <State 12>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_15', ed25519/src/sha512.cpp:120) [98]  (0 ns)
	'load' operation ('W_load_12', ed25519/src/sha512.cpp:120) on array 'W', ed25519/src/sha512.cpp:105 [99]  (1.24 ns)

 <State 13>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('W_addr_14', ed25519/src/sha512.cpp:120) [84]  (0 ns)
	'load' operation ('W_load', ed25519/src/sha512.cpp:120) on array 'W', ed25519/src/sha512.cpp:105 [85]  (1.24 ns)

 <State 14>: 2.65ns
The critical path consists of the following:
	'load' operation ('W_load_14', ed25519/src/sha512.cpp:120) on array 'W', ed25519/src/sha512.cpp:105 [117]  (1.24 ns)
	'add' operation ('tmp8', ed25519/src/sha512.cpp:120) [118]  (1.41 ns)

 <State 15>: 2.65ns
The critical path consists of the following:
	'load' operation ('W_load_13', ed25519/src/sha512.cpp:120) on array 'W', ed25519/src/sha512.cpp:105 [103]  (1.24 ns)
	'xor' operation ('tmp7', ed25519/src/sha512.cpp:120) [112]  (0 ns)
	'xor' operation ('tmp_458', ed25519/src/sha512.cpp:120) [113]  (0 ns)
	'add' operation ('tmp9', ed25519/src/sha512.cpp:120) [119]  (1.41 ns)

 <State 16>: 2.65ns
The critical path consists of the following:
	'add' operation ('tmp_463', ed25519/src/sha512.cpp:120) [120]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:120) of variable 'tmp_463', ed25519/src/sha512.cpp:120 on array 'W', ed25519/src/sha512.cpp:105 [123]  (1.24 ns)

 <State 17>: 1.24ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:130) [137]  (0 ns)
	'getelementptr' operation ('K_addr', ed25519/src/sha512.cpp:131) [161]  (0 ns)
	'load' operation ('K_load', ed25519/src/sha512.cpp:131) on array 'K' [162]  (1.24 ns)

 <State 18>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load', ed25519/src/sha512.cpp:131) on array 'K' [162]  (1.24 ns)
	'add' operation ('tmp13', ed25519/src/sha512.cpp:131) [165]  (1.41 ns)

 <State 19>: 2.14ns
The critical path consists of the following:
	'load' operation ('S_load_10', ed25519/src/sha512.cpp:131) on array 'S', ed25519/src/sha512.cpp:105 [155]  (0.677 ns)
	'xor' operation ('tmp_479', ed25519/src/sha512.cpp:131) [159]  (0.051 ns)
	'add' operation ('tmp15', ed25519/src/sha512.cpp:131) [166]  (1.41 ns)

 <State 20>: 2.65ns
The critical path consists of the following:
	'load' operation ('W_load_15', ed25519/src/sha512.cpp:131) on array 'W', ed25519/src/sha512.cpp:105 [164]  (1.24 ns)
	'add' operation ('tmp14', ed25519/src/sha512.cpp:131) [167]  (1.41 ns)

 <State 21>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:131) [168]  (1.41 ns)

 <State 22>: 2.09ns
The critical path consists of the following:
	'load' operation ('S_load_15', ed25519/src/sha512.cpp:131) on array 'S', ed25519/src/sha512.cpp:105 [187]  (0.677 ns)
	'add' operation ('tmp_499', ed25519/src/sha512.cpp:131) [188]  (1.41 ns)

 <State 23>: 2.14ns
The critical path consists of the following:
	'load' operation ('S_load_14', ed25519/src/sha512.cpp:131) on array 'S', ed25519/src/sha512.cpp:105 [183]  (0.677 ns)
	'and' operation ('tmp_496', ed25519/src/sha512.cpp:131) [184]  (0 ns)
	'or' operation ('tmp_498', ed25519/src/sha512.cpp:131) [186]  (0.051 ns)
	'add' operation ('tmp17', ed25519/src/sha512.cpp:131) [189]  (1.41 ns)

 <State 24>: 1.41ns
The critical path consists of the following:
	'add' operation ('tmp_500', ed25519/src/sha512.cpp:131) [190]  (1.41 ns)

 <State 25>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_8', ed25519/src/sha512.cpp:132) on array 'K' [208]  (1.24 ns)
	'add' operation ('tmp21', ed25519/src/sha512.cpp:132) [211]  (1.41 ns)

 <State 26>: 1.46ns
The critical path consists of the following:
	'xor' operation ('tmp_512', ed25519/src/sha512.cpp:132) [202]  (0 ns)
	'and' operation ('tmp_513', ed25519/src/sha512.cpp:132) [203]  (0 ns)
	'xor' operation ('tmp_514', ed25519/src/sha512.cpp:132) [204]  (0.051 ns)
	'add' operation ('tmp23', ed25519/src/sha512.cpp:132) [212]  (1.41 ns)

 <State 27>: 2.65ns
The critical path consists of the following:
	'load' operation ('W_load_16', ed25519/src/sha512.cpp:132) on array 'W', ed25519/src/sha512.cpp:105 [210]  (1.24 ns)
	'add' operation ('tmp22', ed25519/src/sha512.cpp:132) [213]  (1.41 ns)

 <State 28>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:132) [214]  (1.41 ns)

 <State 29>: 1.41ns
The critical path consists of the following:
	'add' operation ('tmp_535', ed25519/src/sha512.cpp:132) [230]  (1.41 ns)

 <State 30>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_530', ed25519/src/sha512.cpp:132) [225]  (0 ns)
	'add' operation ('tmp25', ed25519/src/sha512.cpp:132) [231]  (1.41 ns)

 <State 31>: 1.41ns
The critical path consists of the following:
	'or' operation ('tmp_531', ed25519/src/sha512.cpp:132) [226]  (0 ns)
	'and' operation ('tmp_532', ed25519/src/sha512.cpp:132) [227]  (0 ns)
	'or' operation ('tmp_534', ed25519/src/sha512.cpp:132) [229]  (0 ns)
	'add' operation ('tmp_536', ed25519/src/sha512.cpp:132) [232]  (1.41 ns)

 <State 32>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_9', ed25519/src/sha512.cpp:133) on array 'K' [250]  (1.24 ns)
	'add' operation ('tmp29', ed25519/src/sha512.cpp:133) [253]  (1.41 ns)

 <State 33>: 1.46ns
The critical path consists of the following:
	'xor' operation ('tmp_548', ed25519/src/sha512.cpp:133) [244]  (0 ns)
	'and' operation ('tmp_549', ed25519/src/sha512.cpp:133) [245]  (0 ns)
	'xor' operation ('tmp_550', ed25519/src/sha512.cpp:133) [246]  (0.051 ns)
	'add' operation ('tmp31', ed25519/src/sha512.cpp:133) [254]  (1.41 ns)

 <State 34>: 2.65ns
The critical path consists of the following:
	'load' operation ('W_load_17', ed25519/src/sha512.cpp:133) on array 'W', ed25519/src/sha512.cpp:105 [252]  (1.24 ns)
	'add' operation ('tmp30', ed25519/src/sha512.cpp:133) [255]  (1.41 ns)

 <State 35>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:133) [256]  (1.41 ns)

 <State 36>: 1.41ns
The critical path consists of the following:
	'add' operation ('tmp_571', ed25519/src/sha512.cpp:133) [272]  (1.41 ns)

 <State 37>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_566', ed25519/src/sha512.cpp:133) [267]  (0 ns)
	'add' operation ('tmp33', ed25519/src/sha512.cpp:133) [273]  (1.41 ns)

 <State 38>: 1.41ns
The critical path consists of the following:
	'or' operation ('tmp_567', ed25519/src/sha512.cpp:133) [268]  (0 ns)
	'and' operation ('tmp_568', ed25519/src/sha512.cpp:133) [269]  (0 ns)
	'or' operation ('tmp_570', ed25519/src/sha512.cpp:133) [271]  (0 ns)
	'add' operation ('tmp_572', ed25519/src/sha512.cpp:133) [274]  (1.41 ns)

 <State 39>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_10', ed25519/src/sha512.cpp:134) on array 'K' [292]  (1.24 ns)
	'add' operation ('tmp37', ed25519/src/sha512.cpp:134) [295]  (1.41 ns)

 <State 40>: 1.46ns
The critical path consists of the following:
	'xor' operation ('tmp_584', ed25519/src/sha512.cpp:134) [286]  (0 ns)
	'and' operation ('tmp_585', ed25519/src/sha512.cpp:134) [287]  (0 ns)
	'xor' operation ('tmp_586', ed25519/src/sha512.cpp:134) [288]  (0.051 ns)
	'add' operation ('tmp39', ed25519/src/sha512.cpp:134) [296]  (1.41 ns)

 <State 41>: 2.65ns
The critical path consists of the following:
	'load' operation ('W_load_18', ed25519/src/sha512.cpp:134) on array 'W', ed25519/src/sha512.cpp:105 [294]  (1.24 ns)
	'add' operation ('tmp38', ed25519/src/sha512.cpp:134) [297]  (1.41 ns)

 <State 42>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:134) [298]  (1.41 ns)

 <State 43>: 1.41ns
The critical path consists of the following:
	'add' operation ('tmp_607', ed25519/src/sha512.cpp:134) [314]  (1.41 ns)

 <State 44>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_602', ed25519/src/sha512.cpp:134) [309]  (0 ns)
	'add' operation ('tmp41', ed25519/src/sha512.cpp:134) [315]  (1.41 ns)

 <State 45>: 1.41ns
The critical path consists of the following:
	'or' operation ('tmp_603', ed25519/src/sha512.cpp:134) [310]  (0 ns)
	'and' operation ('tmp_604', ed25519/src/sha512.cpp:134) [311]  (0 ns)
	'or' operation ('tmp_606', ed25519/src/sha512.cpp:134) [313]  (0 ns)
	'add' operation ('tmp_608', ed25519/src/sha512.cpp:134) [316]  (1.41 ns)

 <State 46>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_11', ed25519/src/sha512.cpp:135) on array 'K' [334]  (1.24 ns)
	'add' operation ('tmp45', ed25519/src/sha512.cpp:135) [337]  (1.41 ns)

 <State 47>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_619', ed25519/src/sha512.cpp:135) [327]  (0 ns)
	'add' operation ('tmp47', ed25519/src/sha512.cpp:135) [338]  (1.41 ns)

 <State 48>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_620', ed25519/src/sha512.cpp:135) [328]  (0 ns)
	'and' operation ('tmp_621', ed25519/src/sha512.cpp:135) [329]  (0 ns)
	'xor' operation ('tmp_622', ed25519/src/sha512.cpp:135) [330]  (0 ns)
	'add' operation ('tmp46', ed25519/src/sha512.cpp:135) [339]  (1.41 ns)

 <State 49>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:135) [340]  (1.41 ns)

 <State 50>: 2.09ns
The critical path consists of the following:
	'add' operation ('tmp_643', ed25519/src/sha512.cpp:135) [356]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:135) of variable 'tmp_643', ed25519/src/sha512.cpp:135 on array 'S', ed25519/src/sha512.cpp:105 [357]  (0.677 ns)

 <State 51>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_638', ed25519/src/sha512.cpp:135) [351]  (0 ns)
	'add' operation ('tmp49', ed25519/src/sha512.cpp:135) [358]  (1.41 ns)

 <State 52>: 2.09ns
The critical path consists of the following:
	'or' operation ('tmp_639', ed25519/src/sha512.cpp:135) [352]  (0 ns)
	'and' operation ('tmp_640', ed25519/src/sha512.cpp:135) [353]  (0 ns)
	'or' operation ('tmp_642', ed25519/src/sha512.cpp:135) [355]  (0 ns)
	'add' operation ('tmp_644', ed25519/src/sha512.cpp:135) [359]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:135) of variable 'tmp_644', ed25519/src/sha512.cpp:135 on array 'S', ed25519/src/sha512.cpp:105 [360]  (0.677 ns)

 <State 53>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_12', ed25519/src/sha512.cpp:136) on array 'K' [378]  (1.24 ns)
	'add' operation ('tmp53', ed25519/src/sha512.cpp:136) [381]  (1.41 ns)

 <State 54>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_655', ed25519/src/sha512.cpp:136) [371]  (0 ns)
	'add' operation ('tmp55', ed25519/src/sha512.cpp:136) [382]  (1.41 ns)

 <State 55>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_656', ed25519/src/sha512.cpp:136) [372]  (0 ns)
	'and' operation ('tmp_657', ed25519/src/sha512.cpp:136) [373]  (0 ns)
	'xor' operation ('tmp_658', ed25519/src/sha512.cpp:136) [374]  (0 ns)
	'add' operation ('tmp54', ed25519/src/sha512.cpp:136) [383]  (1.41 ns)

 <State 56>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:136) [384]  (1.41 ns)

 <State 57>: 2.09ns
The critical path consists of the following:
	'add' operation ('tmp_672', ed25519/src/sha512.cpp:136) [400]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:136) of variable 'tmp_672', ed25519/src/sha512.cpp:136 on array 'S', ed25519/src/sha512.cpp:105 [401]  (0.677 ns)

 <State 58>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_667', ed25519/src/sha512.cpp:136) [395]  (0 ns)
	'add' operation ('tmp57', ed25519/src/sha512.cpp:136) [402]  (1.41 ns)

 <State 59>: 2.09ns
The critical path consists of the following:
	'or' operation ('tmp_668', ed25519/src/sha512.cpp:136) [396]  (0 ns)
	'and' operation ('tmp_669', ed25519/src/sha512.cpp:136) [397]  (0 ns)
	'or' operation ('tmp_671', ed25519/src/sha512.cpp:136) [399]  (0 ns)
	'add' operation ('tmp_673', ed25519/src/sha512.cpp:136) [403]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:136) of variable 'tmp_673', ed25519/src/sha512.cpp:136 on array 'S', ed25519/src/sha512.cpp:105 [404]  (0.677 ns)

 <State 60>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_13', ed25519/src/sha512.cpp:137) on array 'K' [422]  (1.24 ns)
	'add' operation ('tmp61', ed25519/src/sha512.cpp:137) [425]  (1.41 ns)

 <State 61>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_680', ed25519/src/sha512.cpp:137) [415]  (0 ns)
	'add' operation ('tmp63', ed25519/src/sha512.cpp:137) [426]  (1.41 ns)

 <State 62>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_681', ed25519/src/sha512.cpp:137) [416]  (0 ns)
	'and' operation ('tmp_682', ed25519/src/sha512.cpp:137) [417]  (0 ns)
	'xor' operation ('tmp_683', ed25519/src/sha512.cpp:137) [418]  (0 ns)
	'add' operation ('tmp62', ed25519/src/sha512.cpp:137) [427]  (1.41 ns)

 <State 63>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:137) [428]  (1.41 ns)

 <State 64>: 2.09ns
The critical path consists of the following:
	'add' operation ('tmp_698', ed25519/src/sha512.cpp:137) [444]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:137) of variable 'tmp_698', ed25519/src/sha512.cpp:137 on array 'S', ed25519/src/sha512.cpp:105 [445]  (0.677 ns)

 <State 65>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_692', ed25519/src/sha512.cpp:137) [439]  (0 ns)
	'add' operation ('tmp65', ed25519/src/sha512.cpp:137) [446]  (1.41 ns)

 <State 66>: 2.09ns
The critical path consists of the following:
	'or' operation ('tmp_693', ed25519/src/sha512.cpp:137) [440]  (0 ns)
	'and' operation ('tmp_694', ed25519/src/sha512.cpp:137) [441]  (0 ns)
	'or' operation ('tmp_696', ed25519/src/sha512.cpp:137) [443]  (0 ns)
	'add' operation ('tmp_699', ed25519/src/sha512.cpp:137) [447]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:137) of variable 'tmp_699', ed25519/src/sha512.cpp:137 on array 'S', ed25519/src/sha512.cpp:105 [448]  (0.677 ns)

 <State 67>: 2.65ns
The critical path consists of the following:
	'load' operation ('K_load_14', ed25519/src/sha512.cpp:138) on array 'K' [466]  (1.24 ns)
	'add' operation ('tmp69', ed25519/src/sha512.cpp:138) [469]  (1.41 ns)

 <State 68>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_708', ed25519/src/sha512.cpp:138) [459]  (0 ns)
	'add' operation ('tmp71', ed25519/src/sha512.cpp:138) [470]  (1.41 ns)

 <State 69>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_709', ed25519/src/sha512.cpp:138) [460]  (0 ns)
	'and' operation ('tmp_710', ed25519/src/sha512.cpp:138) [461]  (0 ns)
	'xor' operation ('tmp_711', ed25519/src/sha512.cpp:138) [462]  (0 ns)
	'add' operation ('tmp70', ed25519/src/sha512.cpp:138) [471]  (1.41 ns)

 <State 70>: 1.41ns
The critical path consists of the following:
	'add' operation ('t0', ed25519/src/sha512.cpp:138) [472]  (1.41 ns)

 <State 71>: 2.09ns
The critical path consists of the following:
	'add' operation ('tmp_729', ed25519/src/sha512.cpp:138) [488]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:138) of variable 'tmp_729', ed25519/src/sha512.cpp:138 on array 'S', ed25519/src/sha512.cpp:105 [489]  (0.677 ns)

 <State 72>: 1.41ns
The critical path consists of the following:
	'xor' operation ('tmp_723', ed25519/src/sha512.cpp:138) [483]  (0 ns)
	'add' operation ('tmp73', ed25519/src/sha512.cpp:138) [490]  (1.41 ns)

 <State 73>: 2.09ns
The critical path consists of the following:
	'or' operation ('tmp_724', ed25519/src/sha512.cpp:138) [484]  (0 ns)
	'and' operation ('tmp_725', ed25519/src/sha512.cpp:138) [485]  (0 ns)
	'or' operation ('tmp_727', ed25519/src/sha512.cpp:138) [487]  (0 ns)
	'add' operation ('tmp_730', ed25519/src/sha512.cpp:138) [491]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:138) of variable 'tmp_730', ed25519/src/sha512.cpp:138 on array 'S', ed25519/src/sha512.cpp:105 [492]  (0.677 ns)

 <State 74>: 1.12ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519/src/sha512.cpp:146) [498]  (0 ns)
	'add' operation ('i', ed25519/src/sha512.cpp:146) [501]  (1.12 ns)

 <State 75>: 2.77ns
The critical path consists of the following:
	'load' operation ('md_state_load_4', ed25519/src/sha512.cpp:147) on array 'md_state' [506]  (0.677 ns)
	'add' operation ('tmp_733', ed25519/src/sha512.cpp:147) [509]  (1.41 ns)
	'store' operation (ed25519/src/sha512.cpp:147) of variable 'tmp_733', ed25519/src/sha512.cpp:147 on array 'md_state' [510]  (0.677 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
