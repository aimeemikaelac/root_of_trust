; ModuleID = '/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/a.o.3.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@mu = internal unnamed_addr constant [33 x i8] c"\1B\13,\0A\A3\E5\9C\ED\A7)c\08]!\06!\EB\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\0F" ; [#uses=1 type=[33 x i8]*]
@memset_signature_str = internal unnamed_addr constant [17 x i8] c"memset_signature\00" ; [#uses=1 type=[17 x i8]*]
@m = internal unnamed_addr constant [32 x i8] c"\ED\D3\F5\5C\1Ac\12X\D6\9C\F7\A2\DE\F9\DE\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10" ; [#uses=3 type=[32 x i8]*]
@ge25519_ec2d_v = internal constant [32 x i32] [i32 89, i32 241, i32 178, i32 38, i32 148, i32 155, i32 214, i32 235, i32 86, i32 177, i32 131, i32 130, i32 154, i32 20, i32 224, i32 0, i32 48, i32 209, i32 243, i32 238, i32 242, i32 128, i32 142, i32 25, i32 231, i32 252, i32 223, i32 86, i32 220, i32 217, i32 6, i32 36] ; [#uses=1 type=[32 x i32]*]
@ge25519_base_multipl_1 = internal constant [13600 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 26, i32 213, i32 37, i32 143, i32 96, i32 45, i32 86, i32 201, i32 178, i32 167, i32 37, i32 149, i32 96, i32 199, i32 44, i32 105, i32 92, i32 220, i32 214, i32 253, i32 49, i32 226, i32 164, i32 192, i32 254, i32 83, i32 110, i32 205, i32 211, i32 54, i32 105, i32 33, i32 14, i32 206, i32 67, i32 40, i32 78, i32 161, i32 197, i32 131, i32 95, i32 164, i32 215, i32 21, i32 69, i32 142, i32 13, i32 8, i32 172, i32 231, i32 51, i32 24, i32 125, i32 59, i32 4, i32 61, i32 108, i32 4, i32 90, i32 159, i32 76, i32 56, i32 171, i32 54, i32 92, i32 226, i32 248, i32 211, i32 95, i32 72, i32 98, i32 172, i32 134, i32 72, i32 98, i32 129, i32 25, i32 152, i32 67, i32 99, i32 58, i32 200, i32 218, i32 62, i32 116, i32 174, i32 244, i32 31, i32 73, i32 143, i32 146, i32 34, i32 74, i32 156, i32 174, i32 103, i32 112, i32 248, i32 201, i32 196, i32 87, i32 166, i32 58, i32 73, i32 71, i32 21, i32 206, i32 147, i32 193, i32 158, i32 115, i32 26, i32 249, i32 32, i32 53, i32 122, i32 184, i32 212, i32 37, i32 131, i32 70, i32 241, i32 207, i32 86, i32 219, i32 168, i32 61, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 200, i32 132, i32 165, i32 8, i32 188, i32 253, i32 135, i32 59, i32 153, i32 139, i32 105, i32 128, i32 123, i32 198, i32 58, i32 235, i32 147, i32 207, i32 78, i32 248, i32 92, i32 45, i32 134, i32 66, i32 182, i32 113, i32 215, i32 151, i32 95, i32 225, i32 66, i32 103, i32 248, i32 249, i32 40, i32 108, i32 109, i32 89, i32 178, i32 89, i32 116, i32 35, i32 191, i32 231, i32 51, i32 141, i32 87, i32 9, i32 145, i32 156, i32 36, i32 8, i32 21, i32 43, i32 226, i32 184, i32 238, i32 58, i32 229, i32 39, i32 6, i32 134, i32 164, i32 35, i32 129, i32 107, i32 136, i32 232, i32 30, i32 199, i32 119, i32 150, i32 14, i32 161, i32 169, i32 82, i32 224, i32 216, i32 14, i32 97, i32 158, i32 121, i32 45, i32 149, i32 156, i32 141, i32 150, i32 224, i32 6, i32 64, i32 93, i32 135, i32 40, i32 95, i32 152, i32 112, i32 38, i32 79, i32 126, i32 151, i32 246, i32 64, i32 221, i32 79, i32 252, i32 82, i32 120, i32 249, i32 144, i32 49, i32 3, i32 230, i32 125, i32 86, i32 57, i32 11, i32 29, i32 86, i32 130, i32 133, i32 249, i32 26, i32 66, i32 23, i32 105, i32 108, i32 207, i32 57, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 11, i32 164, i32 60, i32 176, i32 15, i32 122, i32 81, i32 241, i32 120, i32 214, i32 217, i32 106, i32 253, i32 70, i32 232, i32 184, i32 168, i32 121, i32 29, i32 135, i32 249, i32 144, i32 242, i32 156, i32 19, i32 41, i32 248, i32 11, i32 32, i32 100, i32 250, i32 5, i32 135, i32 221, i32 207, i32 240, i32 91, i32 73, i32 162, i32 93, i32 64, i32 122, i32 35, i32 38, i32 164, i32 122, i32 131, i32 138, i32 183, i32 139, i32 210, i32 26, i32 191, i32 234, i32 2, i32 36, i32 8, i32 95, i32 123, i32 169, i32 177, i32 190, i32 157, i32 55, i32 71, i32 252, i32 171, i32 90, i32 23, i32 240, i32 133, i32 86, i32 58, i32 48, i32 134, i32 32, i32 40, i32 75, i32 142, i32 68, i32 116, i32 58, i32 110, i32 2, i32 241, i32 50, i32 143, i32 159, i32 63, i32 8, i32 53, i32 233, i32 202, i32 22, i32 95, i32 110, i32 86, i32 165, i32 194, i32 12, i32 221, i32 188, i32 184, i32 32, i32 109, i32 87, i32 97, i32 181, i32 251, i32 120, i32 181, i32 212, i32 73, i32 84, i32 144, i32 38, i32 193, i32 203, i32 233, i32 230, i32 191, i32 236, i32 29, i32 78, i32 237, i32 7, i32 126, i32 94, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 52, i32 205, i32 130, i32 60, i32 51, i32 9, i32 84, i32 210, i32 97, i32 57, i32 48, i32 155, i32 253, i32 239, i32 33, i32 38, i32 212, i32 112, i32 250, i32 238, i32 249, i32 49, i32 51, i32 115, i32 132, i32 208, i32 179, i32 129, i32 191, i32 236, i32 46, i32 104, i32 43, i32 74, i32 91, i32 213, i32 199, i32 81, i32 145, i32 29, i32 225, i32 42, i32 75, i32 196, i32 71, i32 241, i32 188, i32 122, i32 179, i32 203, i32 200, i32 182, i32 124, i32 172, i32 144, i32 5, i32 253, i32 243, i32 249, i32 82, i32 58, i32 17, i32 107, i32 21, i32 6, i32 73, i32 182, i32 138, i32 60, i32 234, i32 47, i32 52, i32 32, i32 20, i32 195, i32 170, i32 214, i32 175, i32 44, i32 62, i32 189, i32 101, i32 32, i32 226, i32 77, i32 75, i32 59, i32 235, i32 159, i32 74, i32 195, i32 173, i32 164, i32 59, i32 96, i32 247, i32 23, i32 19, i32 189, i32 251, i32 188, i32 210, i32 236, i32 69, i32 179, i32 21, i32 49, i32 233, i32 175, i32 130, i32 132, i32 61, i32 40, i32 198, i32 252, i32 17, i32 245, i32 65, i32 181, i32 139, i32 211, i32 18, i32 118, i32 82, i32 231, i32 26, i32 60, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 234, i32 214, i32 222, i32 41, i32 58, i32 0, i32 185, i32 2, i32 89, i32 203, i32 38, i32 196, i32 186, i32 153, i32 177, i32 151, i32 47, i32 142, i32 0, i32 146, i32 38, i32 79, i32 82, i32 235, i32 71, i32 27, i32 137, i32 139, i32 36, i32 192, i32 19, i32 125, i32 222, i32 201, i32 177, i32 49, i32 16, i32 22, i32 170, i32 53, i32 20, i32 106, i32 212, i32 181, i32 52, i32 130, i32 113, i32 210, i32 74, i32 93, i32 154, i32 31, i32 83, i32 38, i32 60, i32 229, i32 142, i32 141, i32 51, i32 127, i32 255, i32 169, i32 213, i32 23, i32 100, i32 29, i32 73, i32 19, i32 47, i32 113, i32 236, i32 105, i32 135, i32 208, i32 66, i32 238, i32 19, i32 236, i32 227, i32 237, i32 86, i32 123, i32 191, i32 189, i32 140, i32 47, i32 125, i32 123, i32 157, i32 40, i32 236, i32 142, i32 118, i32 47, i32 111, i32 8, i32 138, i32 75, i32 231, i32 56, i32 188, i32 218, i32 194, i32 176, i32 133, i32 225, i32 74, i32 254, i32 45, i32 68, i32 132, i32 203, i32 32, i32 107, i32 45, i32 191, i32 17, i32 156, i32 215, i32 190, i32 211, i32 62, i32 95, i32 191, i32 104, i32 188, i32 168, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 255, i32 50, i32 43, i32 92, i32 147, i32 84, i32 50, i32 232, i32 87, i32 84, i32 26, i32 139, i32 51, i32 96, i32 101, i32 211, i32 103, i32 164, i32 193, i32 38, i32 196, i32 164, i32 52, i32 31, i32 155, i32 167, i32 169, i32 244, i32 217, i32 79, i32 91, i32 101, i32 165, i32 17, i32 132, i32 138, i32 103, i32 157, i32 158, i32 209, i32 68, i32 104, i32 122, i32 52, i32 225, i32 159, i32 163, i32 84, i32 205, i32 7, i32 202, i32 121, i32 31, i32 84, i32 47, i32 19, i32 112, i32 78, i32 238, i32 162, i32 250, i32 231, i32 93, i32 167, i32 214, i32 46, i32 213, i32 204, i32 212, i32 203, i32 90, i32 59, i32 167, i32 249, i32 70, i32 3, i32 29, i32 173, i32 43, i32 52, i32 49, i32 144, i32 0, i32 70, i32 8, i32 130, i32 20, i32 196, i32 224, i32 156, i32 240, i32 227, i32 85, i32 67, i32 49, i32 39, i32 79, i32 208, i32 114, i32 177, i32 17, i32 20, i32 39, i32 21, i32 148, i32 72, i32 129, i32 126, i32 116, i32 216, i32 50, i32 213, i32 209, i32 17, i32 40, i32 96, i32 99, i32 54, i32 50, i32 55, i32 181, i32 19, i32 28, i32 160, i32 55, i32 227, i32 116, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 52, i32 148, i32 242, i32 100, i32 84, i32 71, i32 55, i32 7, i32 64, i32 138, i32 32, i32 186, i32 74, i32 85, i32 215, i32 63, i32 71, i32 186, i32 37, i32 35, i32 20, i32 176, i32 44, i32 232, i32 85, i32 168, i32 166, i32 239, i32 81, i32 189, i32 111, i32 106, i32 52, i32 150, i32 154, i32 246, i32 197, i32 224, i32 20, i32 3, i32 36, i32 14, i32 76, i32 173, i32 158, i32 154, i32 112, i32 35, i32 150, i32 178, i32 241, i32 46, i32 157, i32 195, i32 50, i32 155, i32 84, i32 165, i32 115, i32 222, i32 136, i32 177, i32 62, i32 36, i32 116, i32 222, i32 18, i32 243, i32 104, i32 183, i32 102, i32 195, i32 238, i32 104, i32 220, i32 129, i32 181, i32 85, i32 153, i32 171, i32 217, i32 40, i32 99, i32 109, i32 139, i32 64, i32 105, i32 117, i32 108, i32 205, i32 92, i32 42, i32 126, i32 50, i32 123, i32 41, i32 237, i32 181, i32 154, i32 140, i32 154, i32 221, i32 39, i32 244, i32 127, i32 71, i32 217, i32 82, i32 167, i32 205, i32 101, i32 165, i32 49, i32 34, i32 237, i32 166, i32 99, i32 91, i32 128, i32 74, i32 173, i32 77, i32 237, i32 191, i32 238, i32 73, i32 179, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 125, i32 79, i32 156, i32 25, i32 192, i32 74, i32 49, i32 236, i32 249, i32 170, i32 235, i32 178, i32 22, i32 156, i32 163, i32 102, i32 95, i32 209, i32 212, i32 237, i32 184, i32 146, i32 28, i32 171, i32 218, i32 234, i32 217, i32 87, i32 223, i32 76, i32 42, i32 72, i32 60, i32 143, i32 159, i32 51, i32 42, i32 31, i32 67, i32 51, i32 143, i32 104, i32 255, i32 31, i32 61, i32 115, i32 107, i32 191, i32 104, i32 204, i32 125, i32 19, i32 108, i32 36, i32 75, i32 204, i32 77, i32 36, i32 13, i32 254, i32 222, i32 134, i32 173, i32 59, i32 6, i32 249, i32 41, i32 90, i32 219, i32 61, i32 132, i32 82, i32 171, i32 204, i32 107, i32 96, i32 157, i32 183, i32 74, i32 14, i32 54, i32 99, i32 145, i32 173, i32 160, i32 149, i32 176, i32 151, i32 137, i32 78, i32 207, i32 125, i32 60, i32 229, i32 124, i32 40, i32 84, i32 190, i32 117, i32 203, i32 5, i32 176, i32 84, i32 183, i32 231, i32 38, i32 134, i32 74, i32 252, i32 25, i32 207, i32 39, i32 70, i32 212, i32 34, i32 150, i32 90, i32 17, i32 232, i32 213, i32 27, i32 237, i32 113, i32 197, i32 93, i32 200, i32 175, i32 69, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 119, i32 58, i32 212, i32 216, i32 39, i32 207, i32 232, i32 161, i32 114, i32 157, i32 202, i32 221, i32 13, i32 150, i32 218, i32 121, i32 237, i32 86, i32 66, i32 21, i32 96, i32 199, i32 28, i32 107, i32 38, i32 48, i32 246, i32 106, i32 149, i32 103, i32 243, i32 10, i32 51, i32 13, i32 231, i32 186, i32 79, i32 7, i32 223, i32 141, i32 234, i32 125, i32 160, i32 197, i32 214, i32 177, i32 176, i32 229, i32 87, i32 27, i32 91, i32 245, i32 69, i32 19, i32 20, i32 100, i32 90, i32 235, i32 92, i32 252, i32 84, i32 1, i32 118, i32 43, i32 216, i32 185, i32 17, i32 232, i32 54, i32 63, i32 66, i32 193, i32 202, i32 220, i32 211, i32 241, i32 200, i32 35, i32 61, i32 79, i32 81, i32 123, i32 157, i32 141, i32 216, i32 228, i32 160, i32 170, i32 243, i32 4, i32 214, i32 17, i32 147, i32 200, i32 53, i32 69, i32 107, i32 219, i32 91, i32 156, i32 198, i32 146, i32 188, i32 35, i32 175, i32 197, i32 184, i32 117, i32 248, i32 66, i32 250, i32 214, i32 182, i32 132, i32 148, i32 99, i32 152, i32 147, i32 72, i32 120, i32 56, i32 205, i32 187, i32 24, i32 52, i32 195, i32 219, i32 103, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 121, i32 132, i32 68, i32 25, i32 189, i32 233, i32 84, i32 196, i32 192, i32 110, i32 42, i32 168, i32 168, i32 155, i32 67, i32 213, i32 113, i32 34, i32 95, i32 220, i32 1, i32 250, i32 223, i32 179, i32 184, i32 71, i32 75, i32 10, i32 165, i32 68, i32 234, i32 41, i32 43, i32 190, i32 175, i32 161, i32 109, i32 47, i32 11, i32 177, i32 143, i32 227, i32 224, i32 56, i32 205, i32 11, i32 65, i32 27, i32 74, i32 21, i32 7, i32 243, i32 111, i32 220, i32 184, i32 233, i32 222, i32 178, i32 163, i32 64, i32 1, i32 166, i32 69, i32 30, i32 253, i32 103, i32 107, i32 113, i32 155, i32 129, i32 83, i32 57, i32 57, i32 244, i32 184, i32 213, i32 195, i32 48, i32 155, i32 59, i32 124, i32 163, i32 240, i32 208, i32 132, i32 33, i32 214, i32 191, i32 183, i32 76, i32 135, i32 19, i32 69, i32 45, i32 167, i32 85, i32 93, i32 147, i32 201, i32 190, i32 170, i32 144, i32 205, i32 155, i32 251, i32 115, i32 126, i32 176, i32 100, i32 152, i32 87, i32 68, i32 66, i32 65, i32 177, i32 175, i32 234, i32 193, i32 195, i32 34, i32 255, i32 96, i32 70, i32 203, i32 97, i32 129, i32 112, i32 97, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 145, i32 247, i32 81, i32 217, i32 239, i32 125, i32 66, i32 1, i32 19, i32 233, i32 184, i32 127, i32 166, i32 73, i32 23, i32 100, i32 33, i32 128, i32 131, i32 44, i32 99, i32 76, i32 96, i32 9, i32 89, i32 145, i32 146, i32 119, i32 57, i32 81, i32 244, i32 72, i32 216, i32 206, i32 220, i32 249, i32 60, i32 75, i32 162, i32 29, i32 44, i32 47, i32 54, i32 190, i32 122, i32 252, i32 205, i32 188, i32 220, i32 249, i32 48, i32 189, i32 255, i32 5, i32 199, i32 228, i32 142, i32 23, i32 98, i32 248, i32 77, i32 160, i32 86, i32 121, i32 131, i32 225, i32 110, i32 169, i32 7, i32 51, i32 62, i32 131, i32 255, i32 203, i32 28, i32 159, i32 177, i32 163, i32 180, i32 201, i32 225, i32 7, i32 151, i32 255, i32 248, i32 35, i32 143, i32 206, i32 64, i32 253, i32 46, i32 94, i32 219, i32 22, i32 67, i32 45, i32 187, i32 12, i32 188, i32 106, i32 164, i32 151, i32 23, i32 147, i32 45, i32 111, i32 222, i32 114, i32 16, i32 28, i32 8, i32 44, i32 15, i32 128, i32 50, i32 104, i32 39, i32 212, i32 171, i32 221, i32 197, i32 88, i32 97, i32 19, i32 109, i32 17, i32 30, i32 77, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 21, i32 125, i32 18, i32 72, i32 130, i32 20, i32 66, i32 205, i32 50, i32 212, i32 75, i32 193, i32 114, i32 97, i32 42, i32 140, i32 236, i32 226, i32 248, i32 36, i32 69, i32 148, i32 227, i32 190, i32 221, i32 103, i32 168, i32 119, i32 90, i32 174, i32 91, i32 75, i32 223, i32 252, i32 105, i32 40, i32 35, i32 63, i32 91, i32 248, i32 59, i32 36, i32 55, i32 243, i32 29, i32 213, i32 34, i32 107, i32 208, i32 152, i32 168, i32 108, i32 207, i32 255, i32 6, i32 225, i32 19, i32 223, i32 185, i32 193, i32 12, i32 169, i32 191, i32 51, i32 103, i32 2, i32 232, i32 173, i32 169, i32 52, i32 212, i32 240, i32 21, i32 129, i32 170, i32 199, i32 77, i32 135, i32 148, i32 234, i32 117, i32 231, i32 76, i32 148, i32 4, i32 14, i32 105, i32 135, i32 231, i32 81, i32 145, i32 16, i32 3, i32 199, i32 190, i32 86, i32 198, i32 239, i32 185, i32 192, i32 43, i32 34, i32 8, i32 30, i32 113, i32 112, i32 179, i32 53, i32 156, i32 122, i32 1, i32 146, i32 68, i32 154, i32 246, i32 176, i32 88, i32 149, i32 193, i32 155, i32 2, i32 237, i32 45, i32 124, i32 52, i32 41, i32 73, i32 68, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 208, i32 211, i32 66, i32 237, i32 29, i32 0, i32 60, i32 21, i32 44, i32 156, i32 119, i32 129, i32 210, i32 115, i32 209, i32 6, i32 213, i32 196, i32 127, i32 148, i32 187, i32 146, i32 45, i32 44, i32 75, i32 69, i32 75, i32 233, i32 42, i32 137, i32 107, i32 43, i32 180, i32 4, i32 46, i32 66, i32 203, i32 31, i32 43, i32 17, i32 81, i32 123, i32 8, i32 172, i32 170, i32 62, i32 158, i32 82, i32 96, i32 183, i32 194, i32 97, i32 87, i32 140, i32 132, i32 213, i32 24, i32 166, i32 25, i32 252, i32 183, i32 117, i32 145, i32 27, i32 227, i32 174, i32 200, i32 193, i32 113, i32 117, i32 49, i32 0, i32 55, i32 65, i32 92, i32 14, i32 57, i32 218, i32 115, i32 160, i32 199, i32 151, i32 54, i32 108, i32 91, i32 242, i32 238, i32 100, i32 10, i32 61, i32 137, i32 30, i32 29, i32 73, i32 140, i32 55, i32 135, i32 238, i32 166, i32 86, i32 158, i32 194, i32 154, i32 86, i32 36, i32 66, i32 133, i32 77, i32 152, i32 49, i32 30, i32 96, i32 77, i32 135, i32 133, i32 4, i32 174, i32 70, i32 18, i32 249, i32 142, i32 127, i32 228, i32 127, i32 246, i32 28, i32 55, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 114, i32 211, i32 174, i32 166, i32 202, i32 143, i32 205, i32 204, i32 120, i32 142, i32 25, i32 77, i32 167, i32 210, i32 39, i32 233, i32 164, i32 60, i32 22, i32 91, i32 132, i32 128, i32 249, i32 208, i32 204, i32 106, i32 30, i32 202, i32 30, i32 103, i32 189, i32 99, i32 229, i32 16, i32 71, i32 59, i32 250, i32 144, i32 252, i32 48, i32 181, i32 234, i32 111, i32 86, i32 143, i32 251, i32 14, i32 167, i32 59, i32 200, i32 178, i32 255, i32 2, i32 122, i32 51, i32 148, i32 147, i32 42, i32 3, i32 224, i32 150, i32 58, i32 108, i32 15, i32 63, i32 117, i32 142, i32 180, i32 255, i32 216, i32 221, i32 214, i32 55, i32 87, i32 157, i32 109, i32 59, i32 189, i32 213, i32 96, i32 136, i32 101, i32 154, i32 185, i32 74, i32 104, i32 132, i32 162, i32 103, i32 221, i32 23, i32 37, i32 151, i32 4, i32 139, i32 94, i32 64, i32 180, i32 171, i32 230, i32 173, i32 159, i32 70, i32 105, i32 74, i32 179, i32 142, i32 170, i32 234, i32 156, i32 138, i32 32, i32 22, i32 93, i32 140, i32 19, i32 189, i32 246, i32 29, i32 197, i32 36, i32 189, i32 144, i32 42, i32 28, i32 199, i32 19, i32 59, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 32, i32 168, i32 136, i32 227, i32 145, i32 192, i32 110, i32 187, i32 138, i32 39, i32 130, i32 81, i32 131, i32 178, i32 40, i32 169, i32 131, i32 235, i32 166, i32 169, i32 77, i32 23, i32 89, i32 34, i32 84, i32 0, i32 80, i32 69, i32 203, i32 72, i32 75, i32 24, i32 52, i32 92, i32 19, i32 251, i32 192, i32 227, i32 120, i32 43, i32 84, i32 88, i32 34, i32 155, i32 118, i32 129, i32 127, i32 147, i32 156, i32 37, i32 60, i32 210, i32 233, i32 150, i32 33, i32 38, i32 8, i32 245, i32 237, i32 149, i32 17, i32 174, i32 4, i32 90, i32 179, i32 64, i32 41, i32 209, i32 203, i32 27, i32 8, i32 158, i32 156, i32 183, i32 83, i32 185, i32 59, i32 113, i32 8, i32 149, i32 18, i32 26, i32 88, i32 175, i32 126, i32 130, i32 82, i32 67, i32 79, i32 17, i32 57, i32 244, i32 147, i32 26, i32 38, i32 5, i32 62, i32 168, i32 56, i32 194, i32 87, i32 86, i32 66, i32 154, i32 177, i32 226, i32 248, i32 69, i32 170, i32 17, i32 72, i32 95, i32 23, i32 196, i32 84, i32 39, i32 220, i32 93, i32 170, i32 221, i32 65, i32 188, i32 223, i32 129, i32 185, i32 83, i32 238, i32 82, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 37, i32 36, i32 29, i32 138, i32 103, i32 32, i32 238, i32 66, i32 235, i32 56, i32 237, i32 11, i32 139, i32 205, i32 70, i32 157, i32 94, i32 107, i32 30, i32 36, i32 157, i32 18, i32 5, i32 26, i32 204, i32 5, i32 78, i32 146, i32 56, i32 225, i32 31, i32 80, i32 104, i32 59, i32 10, i32 57, i32 29, i32 106, i32 21, i32 87, i32 252, i32 240, i32 99, i32 84, i32 219, i32 57, i32 219, i32 232, i32 92, i32 100, i32 255, i32 160, i32 9, i32 79, i32 59, i32 183, i32 50, i32 96, i32 153, i32 148, i32 253, i32 148, i32 130, i32 45, i32 120, i32 82, i32 135, i32 201, i32 151, i32 99, i32 177, i32 221, i32 84, i32 95, i32 193, i32 248, i32 241, i32 6, i32 166, i32 168, i32 163, i32 136, i32 130, i32 212, i32 203, i32 166, i32 25, i32 221, i32 209, i32 17, i32 135, i32 8, i32 23, i32 76, i32 55, i32 42, i32 29, i32 218, i32 228, i32 97, i32 3, i32 80, i32 169, i32 139, i32 104, i32 24, i32 239, i32 178, i32 28, i32 132, i32 59, i32 162, i32 68, i32 149, i32 163, i32 4, i32 59, i32 214, i32 153, i32 0, i32 175, i32 118, i32 66, i32 103, i32 2, i32 125, i32 133, i32 86, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 82, i32 253, i32 4, i32 197, i32 251, i32 153, i32 231, i32 232, i32 251, i32 140, i32 225, i32 66, i32 3, i32 239, i32 157, i32 217, i32 158, i32 77, i32 247, i32 128, i32 207, i32 46, i32 204, i32 155, i32 69, i32 201, i32 123, i32 122, i32 188, i32 55, i32 168, i32 82, i32 83, i32 205, i32 243, i32 134, i32 64, i32 230, i32 57, i32 66, i32 149, i32 214, i32 203, i32 69, i32 26, i32 32, i32 200, i32 69, i32 75, i32 50, i32 105, i32 4, i32 177, i32 175, i32 32, i32 70, i32 199, i32 107, i32 35, i32 91, i32 105, i32 238, i32 48, i32 63, i32 202, i32 252, i32 136, i32 107, i32 150, i32 120, i32 10, i32 139, i32 131, i32 220, i32 188, i32 175, i32 64, i32 182, i32 141, i32 127, i32 239, i32 180, i32 209, i32 63, i32 204, i32 162, i32 116, i32 201, i32 194, i32 146, i32 85, i32 0, i32 171, i32 219, i32 191, i32 79, i32 228, i32 230, i32 109, i32 48, i32 125, i32 48, i32 53, i32 194, i32 120, i32 135, i32 249, i32 252, i32 107, i32 90, i32 195, i32 183, i32 101, i32 216, i32 46, i32 199, i32 165, i32 12, i32 198, i32 220, i32 18, i32 170, i32 214, i32 79, i32 197, i32 56, i32 188, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 219, i32 73, i32 14, i32 230, i32 88, i32 16, i32 122, i32 82, i32 218, i32 181, i32 125, i32 55, i32 106, i32 62, i32 161, i32 120, i32 206, i32 199, i32 28, i32 36, i32 35, i32 219, i32 125, i32 251, i32 140, i32 141, i32 220, i32 48, i32 103, i32 105, i32 117, i32 59, i32 164, i32 235, i32 4, i32 164, i32 140, i32 143, i32 113, i32 39, i32 149, i32 133, i32 93, i32 85, i32 75, i32 177, i32 38, i32 38, i32 200, i32 174, i32 106, i32 125, i32 162, i32 33, i32 202, i32 206, i32 56, i32 171, i32 15, i32 208, i32 213, i32 43, i32 107, i32 0, i32 132, i32 86, i32 130, i32 182, i32 18, i32 112, i32 127, i32 247, i32 240, i32 189, i32 91, i32 169, i32 213, i32 197, i32 95, i32 89, i32 191, i32 127, i32 179, i32 85, i32 34, i32 2, i32 201, i32 68, i32 85, i32 135, i32 143, i32 150, i32 152, i32 100, i32 109, i32 21, i32 216, i32 43, i32 91, i32 22, i32 234, i32 32, i32 241, i32 211, i32 104, i32 143, i32 174, i32 91, i32 208, i32 169, i32 26, i32 25, i32 168, i32 54, i32 251, i32 43, i32 87, i32 136, i32 125, i32 144, i32 213, i32 166, i32 243, i32 220, i32 56, i32 137, i32 78, i32 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 37, i32 185, i32 194, i32 240, i32 114, i32 184, i32 21, i32 22, i32 204, i32 141, i32 60, i32 111, i32 37, i32 237, i32 244, i32 70, i32 46, i32 12, i32 96, i32 15, i32 226, i32 132, i32 52, i32 85, i32 137, i32 89, i32 52, i32 27, i32 245, i32 141, i32 254, i32 8, i32 116, i32 28, i32 20, i32 155, i32 212, i32 100, i32 97, i32 113, i32 90, i32 182, i32 33, i32 51, i32 79, i32 247, i32 142, i32 186, i32 165, i32 72, i32 154, i32 199, i32 250, i32 154, i32 240, i32 180, i32 98, i32 173, i32 242, i32 94, i32 204, i32 3, i32 36, i32 26, i32 21, i32 190, i32 154, i32 13, i32 186, i32 56, i32 114, i32 32, i32 138, i32 245, i32 190, i32 89, i32 147, i32 121, i32 183, i32 246, i32 106, i32 12, i32 56, i32 39, i32 26, i32 96, i32 244, i32 134, i32 59, i32 171, i32 90, i32 0, i32 160, i32 206, i32 33, i32 125, i32 228, i32 13, i32 244, i32 189, i32 238, i32 49, i32 16, i32 237, i32 203, i32 18, i32 134, i32 173, i32 212, i32 47, i32 144, i32 55, i32 50, i32 195, i32 11, i32 115, i32 236, i32 151, i32 133, i32 164, i32 1, i32 28, i32 118, i32 53, i32 254, i32 117, i32 221, i32 113, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 144, i32 112, i32 88, i32 32, i32 3, i32 30, i32 103, i32 178, i32 200, i32 155, i32 88, i32 197, i32 177, i32 235, i32 45, i32 74, i32 222, i32 130, i32 140, i32 242, i32 210, i32 20, i32 184, i32 112, i32 97, i32 78, i32 115, i32 214, i32 11, i32 107, i32 13, i32 48, i32 249, i32 200, i32 190, i32 140, i32 22, i32 129, i32 57, i32 150, i32 246, i32 23, i32 88, i32 200, i32 48, i32 88, i32 251, i32 194, i32 3, i32 69, i32 210, i32 82, i32 118, i32 224, i32 106, i32 38, i32 40, i32 92, i32 136, i32 89, i32 106, i32 90, i32 84, i32 66, i32 65, i32 250, i32 140, i32 225, i32 137, i32 143, i32 39, i32 200, i32 37, i32 143, i32 111, i32 95, i32 85, i32 248, i32 222, i32 149, i32 109, i32 47, i32 117, i32 22, i32 43, i32 78, i32 68, i32 253, i32 134, i32 110, i32 233, i32 112, i32 57, i32 118, i32 151, i32 126, i32 2, i32 58, i32 112, i32 65, i32 228, i32 17, i32 87, i32 35, i32 172, i32 230, i32 252, i32 84, i32 126, i32 205, i32 215, i32 34, i32 203, i32 118, i32 159, i32 32, i32 206, i32 160, i32 115, i32 118, i32 81, i32 59, i32 164, i32 248, i32 227, i32 98, i32 18, i32 108, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 245, i32 108, i32 212, i32 47, i32 15, i32 105, i32 15, i32 135, i32 63, i32 97, i32 101, i32 30, i32 53, i32 52, i32 133, i32 186, i32 2, i32 48, i32 172, i32 37, i32 61, i32 226, i32 98, i32 241, i32 204, i32 233, i32 27, i32 194, i32 239, i32 106, i32 66, i32 87, i32 245, i32 72, i32 11, i32 3, i32 197, i32 34, i32 125, i32 128, i32 8, i32 83, i32 254, i32 50, i32 177, i32 161, i32 138, i32 116, i32 111, i32 189, i32 63, i32 133, i32 244, i32 207, i32 245, i32 96, i32 175, i32 65, i32 126, i32 62, i32 70, i32 163, i32 90, i32 32, i32 179, i32 16, i32 69, i32 2, i32 105, i32 89, i32 46, i32 151, i32 217, i32 100, i32 248, i32 219, i32 37, i32 128, i32 220, i32 196, i32 213, i32 98, i32 60, i32 237, i32 101, i32 145, i32 173, i32 209, i32 87, i32 129, i32 148, i32 170, i32 161, i32 41, i32 252, i32 104, i32 55, i32 234, i32 254, i32 101, i32 59, i32 37, i32 232, i32 225, i32 194, i32 197, i32 2, i32 164, i32 190, i32 152, i32 10, i32 43, i32 97, i32 193, i32 155, i32 226, i32 213, i32 146, i32 230, i32 158, i32 125, i32 31, i32 202, i32 67, i32 136, i32 139, i32 44, i32 89, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 34, i32 175, i32 19, i32 55, i32 189, i32 55, i32 113, i32 172, i32 4, i32 70, i32 99, i32 172, i32 164, i32 119, i32 237, i32 37, i32 56, i32 224, i32 21, i32 168, i32 100, i32 0, i32 13, i32 206, i32 81, i32 1, i32 169, i32 188, i32 15, i32 3, i32 28, i32 4, i32 2, i32 162, i32 237, i32 244, i32 143, i32 107, i32 11, i32 62, i32 235, i32 53, i32 26, i32 213, i32 126, i32 219, i32 120, i32 0, i32 150, i32 138, i32 160, i32 180, i32 207, i32 96, i32 75, i32 212, i32 213, i32 249, i32 45, i32 191, i32 136, i32 189, i32 34, i32 98, i32 81, i32 22, i32 80, i32 124, i32 213, i32 93, i32 246, i32 153, i32 232, i32 119, i32 114, i32 78, i32 250, i32 98, i32 203, i32 118, i32 117, i32 12, i32 226, i32 113, i32 152, i32 146, i32 213, i32 250, i32 69, i32 223, i32 92, i32 111, i32 30, i32 158, i32 40, i32 105, i32 151, i32 165, i32 219, i32 139, i32 45, i32 170, i32 66, i32 17, i32 9, i32 242, i32 147, i32 187, i32 217, i32 6, i32 132, i32 78, i32 17, i32 168, i32 160, i32 37, i32 43, i32 166, i32 95, i32 174, i32 196, i32 180, i32 76, i32 200, i32 171, i32 199, i32 59, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 105, i32 209, i32 57, i32 189, i32 251, i32 51, i32 190, i32 196, i32 240, i32 92, i32 239, i32 240, i32 86, i32 104, i32 252, i32 151, i32 71, i32 200, i32 114, i32 182, i32 83, i32 164, i32 10, i32 152, i32 165, i32 180, i32 55, i32 113, i32 207, i32 102, i32 80, i32 109, i32 169, i32 98, i32 147, i32 133, i32 190, i32 232, i32 115, i32 74, i32 14, i32 176, i32 181, i32 45, i32 148, i32 80, i32 170, i32 211, i32 178, i32 234, i32 157, i32 98, i32 118, i32 59, i32 7, i32 52, i32 78, i32 45, i32 112, i32 200, i32 154, i32 21, i32 102, i32 107, i32 77, i32 194, i32 23, i32 117, i32 161, i32 104, i32 205, i32 195, i32 198, i32 3, i32 68, i32 227, i32 120, i32 9, i32 145, i32 71, i32 63, i32 15, i32 228, i32 146, i32 88, i32 250, i32 125, i32 31, i32 32, i32 148, i32 88, i32 94, i32 188, i32 25, i32 2, i32 111, i32 38, i32 162, i32 80, i32 2, i32 36, i32 114, i32 241, i32 240, i32 78, i32 45, i32 147, i32 213, i32 8, i32 231, i32 174, i32 56, i32 247, i32 24, i32 165, i32 50, i32 52, i32 194, i32 240, i32 166, i32 236, i32 185, i32 97, i32 123, i32 100, i32 153, i32 172, i32 113, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 43, i32 119, i32 69, i32 236, i32 103, i32 118, i32 50, i32 76, i32 185, i32 223, i32 37, i32 50, i32 107, i32 203, i32 231, i32 20, i32 97, i32 67, i32 238, i32 186, i32 155, i32 113, i32 239, i32 210, i32 72, i32 101, i32 187, i32 27, i32 138, i32 19, i32 27, i32 34, i32 40, i32 92, i32 63, i32 219, i32 107, i32 24, i32 59, i32 92, i32 209, i32 4, i32 40, i32 222, i32 133, i32 82, i32 49, i32 181, i32 187, i32 246, i32 169, i32 237, i32 190, i32 40, i32 79, i32 179, i32 126, i32 5, i32 106, i32 219, i32 149, i32 13, i32 27, i32 28, i32 204, i32 33, i32 39, i32 206, i32 253, i32 169, i32 148, i32 142, i32 225, i32 171, i32 73, i32 224, i32 70, i32 38, i32 161, i32 168, i32 140, i32 161, i32 153, i32 29, i32 180, i32 39, i32 109, i32 45, i32 200, i32 57, i32 48, i32 94, i32 55, i32 82, i32 196, i32 110, i32 71, i32 159, i32 124, i32 86, i32 124, i32 67, i32 145, i32 28, i32 187, i32 78, i32 114, i32 62, i32 100, i32 171, i32 160, i32 160, i32 223, i32 180, i32 216, i32 135, i32 58, i32 189, i32 168, i32 72, i32 201, i32 184, i32 239, i32 46, i32 173, i32 111, i32 132, i32 79, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 159, i32 62, i32 242, i32 178, i32 144, i32 206, i32 219, i32 100, i32 62, i32 3, i32 221, i32 55, i32 54, i32 84, i32 112, i32 118, i32 36, i32 181, i32 105, i32 3, i32 252, i32 160, i32 43, i32 116, i32 178, i32 5, i32 14, i32 204, i32 216, i32 31, i32 106, i32 31, i32 108, i32 50, i32 79, i32 253, i32 187, i32 92, i32 187, i32 141, i32 100, i32 102, i32 74, i32 113, i32 31, i32 121, i32 163, i32 173, i32 141, i32 249, i32 212, i32 236, i32 207, i32 103, i32 112, i32 250, i32 5, i32 74, i32 15, i32 110, i32 175, i32 135, i32 10, i32 111, i32 244, i32 21, i32 205, i32 15, i32 10, i32 175, i32 78, i32 107, i32 81, i32 253, i32 20, i32 196, i32 46, i32 19, i32 134, i32 116, i32 68, i32 203, i32 102, i32 107, i32 182, i32 157, i32 116, i32 86, i32 50, i32 172, i32 141, i32 142, i32 140, i32 140, i32 140, i32 57, i32 100, i32 5, i32 122, i32 132, i32 74, i32 19, i32 195, i32 246, i32 176, i32 110, i32 154, i32 107, i32 83, i32 107, i32 50, i32 218, i32 217, i32 116, i32 117, i32 196, i32 186, i32 100, i32 61, i32 59, i32 8, i32 221, i32 16, i32 70, i32 239, i32 199, i32 144, i32 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 78, i32 211, i32 45, i32 9, i32 51, i32 14, i32 210, i32 13, i32 190, i32 62, i32 231, i32 228, i32 170, i32 183, i32 0, i32 139, i32 232, i32 173, i32 170, i32 122, i32 141, i32 52, i32 40, i32 169, i32 129, i32 148, i32 197, i32 231, i32 66, i32 172, i32 71, i32 204, i32 213, i32 57, i32 252, i32 165, i32 164, i32 173, i32 50, i32 21, i32 206, i32 25, i32 232, i32 52, i32 43, i32 28, i32 96, i32 145, i32 252, i32 5, i32 169, i32 179, i32 220, i32 128, i32 41, i32 196, i32 32, i32 121, i32 6, i32 57, i32 192, i32 226, i32 34, i32 43, i32 140, i32 45, i32 154, i32 139, i32 132, i32 242, i32 86, i32 251, i32 173, i32 46, i32 127, i32 183, i32 252, i32 48, i32 225, i32 53, i32 137, i32 186, i32 77, i32 168, i32 109, i32 206, i32 140, i32 139, i32 48, i32 224, i32 218, i32 41, i32 24, i32 17, i32 23, i32 61, i32 213, i32 154, i32 100, i32 115, i32 54, i32 177, i32 214, i32 134, i32 152, i32 66, i32 63, i32 138, i32 241, i32 199, i32 245, i32 66, i32 168, i32 156, i32 82, i32 168, i32 220, i32 249, i32 36, i32 63, i32 74, i32 161, i32 164, i32 91, i32 232, i32 98, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 234, i32 249, i32 228, i32 233, i32 225, i32 82, i32 63, i32 81, i32 25, i32 13, i32 221, i32 217, i32 157, i32 147, i32 49, i32 135, i32 35, i32 9, i32 213, i32 131, i32 235, i32 146, i32 9, i32 118, i32 110, i32 227, i32 248, i32 192, i32 162, i32 102, i32 181, i32 54, i32 178, i32 231, i32 143, i32 227, i32 163, i32 197, i32 203, i32 114, i32 238, i32 121, i32 65, i32 248, i32 223, i32 238, i32 101, i32 197, i32 69, i32 119, i32 39, i32 60, i32 189, i32 88, i32 211, i32 117, i32 226, i32 4, i32 75, i32 187, i32 101, i32 243, i32 200, i32 15, i32 22, i32 223, i32 209, i32 90, i32 213, i32 233, i32 78, i32 88, i32 149, i32 147, i32 95, i32 81, i32 9, i32 195, i32 42, i32 201, i32 212, i32 85, i32 72, i32 121, i32 164, i32 163, i32 178, i32 195, i32 98, i32 170, i32 140, i32 232, i32 173, i32 71, i32 57, i32 27, i32 244, i32 16, i32 70, i32 190, i32 183, i32 210, i32 209, i32 206, i32 94, i32 118, i32 162, i32 215, i32 3, i32 220, i32 228, i32 129, i32 90, i32 246, i32 60, i32 222, i32 174, i32 122, i32 157, i32 33, i32 52, i32 165, i32 246, i32 169, i32 115, i32 226, i32 141, i32 96, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 129, i32 213, i32 52, i32 22, i32 1, i32 163, i32 147, i32 234, i32 82, i32 148, i32 236, i32 147, i32 183, i32 129, i32 17, i32 45, i32 88, i32 249, i32 181, i32 10, i32 170, i32 79, i32 246, i32 46, i32 63, i32 54, i32 191, i32 51, i32 90, i32 231, i32 209, i32 8, i32 111, i32 201, i32 81, i32 109, i32 28, i32 170, i32 245, i32 165, i32 144, i32 63, i32 20, i32 226, i32 110, i32 142, i32 100, i32 253, i32 172, i32 224, i32 78, i32 34, i32 229, i32 193, i32 188, i32 41, i32 10, i32 106, i32 158, i32 161, i32 96, i32 203, i32 47, i32 11, i32 31, i32 154, i32 82, i32 100, i32 151, i32 217, i32 28, i32 8, i32 81, i32 111, i32 38, i32 157, i32 170, i32 147, i32 51, i32 67, i32 250, i32 119, i32 233, i32 98, i32 155, i32 93, i32 24, i32 117, i32 235, i32 120, i32 247, i32 135, i32 143, i32 65, i32 180, i32 77, i32 39, i32 174, i32 211, i32 13, i32 76, i32 143, i32 52, i32 234, i32 125, i32 60, i32 229, i32 138, i32 207, i32 91, i32 146, i32 216, i32 48, i32 22, i32 180, i32 163, i32 117, i32 255, i32 235, i32 39, i32 200, i32 92, i32 108, i32 194, i32 238, i32 108, i32 33, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 254, i32 84, i32 18, i32 24, i32 202, i32 125, i32 165, i32 104, i32 67, i32 163, i32 109, i32 20, i32 42, i32 106, i32 165, i32 142, i32 50, i32 231, i32 99, i32 79, i32 227, i32 198, i32 68, i32 62, i32 171, i32 99, i32 202, i32 23, i32 134, i32 116, i32 63, i32 243, i32 60, i32 140, i32 128, i32 131, i32 16, i32 138, i32 55, i32 80, i32 156, i32 180, i32 223, i32 63, i32 140, i32 247, i32 35, i32 7, i32 214, i32 255, i32 160, i32 130, i32 108, i32 117, i32 59, i32 228, i32 181, i32 187, i32 228, i32 230, i32 80, i32 240, i32 8, i32 81, i32 21, i32 157, i32 195, i32 149, i32 209, i32 57, i32 187, i32 100, i32 157, i32 21, i32 129, i32 193, i32 104, i32 208, i32 182, i32 164, i32 44, i32 125, i32 94, i32 2, i32 57, i32 0, i32 224, i32 59, i32 164, i32 204, i32 202, i32 29, i32 129, i32 36, i32 16, i32 189, i32 0, i32 185, i32 4, i32 125, i32 53, i32 252, i32 235, i32 208, i32 11, i32 5, i32 50, i32 82, i32 122, i32 137, i32 36, i32 117, i32 80, i32 225, i32 99, i32 2, i32 130, i32 142, i32 231, i32 133, i32 12, i32 242, i32 86, i32 68, i32 55, i32 131, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 29, i32 136, i32 152, i32 91, i32 78, i32 252, i32 65, i32 36, i32 5, i32 230, i32 80, i32 43, i32 174, i32 150, i32 81, i32 217, i32 107, i32 114, i32 178, i32 51, i32 66, i32 152, i32 104, i32 187, i32 16, i32 90, i32 122, i32 140, i32 157, i32 7, i32 180, i32 5, i32 229, i32 28, i32 248, i32 10, i32 253, i32 45, i32 126, i32 245, i32 245, i32 112, i32 125, i32 65, i32 107, i32 17, i32 254, i32 190, i32 153, i32 209, i32 85, i32 41, i32 49, i32 191, i32 192, i32 151, i32 108, i32 213, i32 53, i32 204, i32 94, i32 139, i32 217, i32 105, i32 15, i32 147, i32 156, i32 17, i32 231, i32 219, i32 241, i32 240, i32 133, i32 67, i32 40, i32 21, i32 55, i32 221, i32 222, i32 39, i32 223, i32 173, i32 62, i32 73, i32 79, i32 224, i32 91, i32 246, i32 128, i32 89, i32 21, i32 60, i32 133, i32 183, i32 62, i32 18, i32 217, i32 182, i32 212, i32 157, i32 212, i32 106, i32 175, i32 112, i32 7, i32 44, i32 16, i32 158, i32 189, i32 17, i32 173, i32 228, i32 38, i32 51, i32 112, i32 146, i32 120, i32 28, i32 116, i32 159, i32 117, i32 96, i32 86, i32 244, i32 57, i32 168, i32 168, i32 98, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 126, i32 14, i32 80, i32 178, i32 204, i32 13, i32 107, i32 166, i32 113, i32 91, i32 66, i32 237, i32 189, i32 175, i32 172, i32 240, i32 252, i32 18, i32 162, i32 63, i32 78, i32 218, i32 232, i32 17, i32 243, i32 35, i32 225, i32 4, i32 98, i32 3, i32 28, i32 78, i32 111, i32 45, i32 85, i32 248, i32 47, i32 142, i32 240, i32 24, i32 59, i32 234, i32 221, i32 38, i32 114, i32 209, i32 245, i32 254, i32 229, i32 184, i32 230, i32 211, i32 16, i32 72, i32 70, i32 73, i32 58, i32 159, i32 94, i32 69, i32 107, i32 144, i32 232, i32 127, i32 122, i32 219, i32 18, i32 210, i32 138, i32 130, i32 3, i32 27, i32 30, i32 175, i32 249, i32 75, i32 156, i32 190, i32 174, i32 124, i32 228, i32 148, i32 42, i32 35, i32 179, i32 98, i32 134, i32 231, i32 253, i32 35, i32 170, i32 153, i32 189, i32 43, i32 17, i32 108, i32 34, i32 214, i32 181, i32 23, i32 132, i32 191, i32 18, i32 204, i32 35, i32 20, i32 74, i32 223, i32 20, i32 49, i32 188, i32 161, i32 172, i32 110, i32 171, i32 250, i32 87, i32 17, i32 83, i32 179, i32 39, i32 230, i32 249, i32 71, i32 51, i32 68, i32 52, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 86, i32 225, i32 245, i32 241, i32 213, i32 171, i32 168, i32 43, i32 174, i32 137, i32 243, i32 207, i32 86, i32 159, i32 242, i32 75, i32 49, i32 188, i32 24, i32 169, i32 6, i32 91, i32 190, i32 180, i32 97, i32 248, i32 178, i32 6, i32 156, i32 129, i32 171, i32 76, i32 131, i32 240, i32 13, i32 99, i32 239, i32 83, i32 107, i32 181, i32 107, i32 249, i32 131, i32 207, i32 222, i32 4, i32 34, i32 155, i32 44, i32 10, i32 224, i32 165, i32 216, i32 199, i32 156, i32 165, i32 163, i32 246, i32 111, i32 207, i32 144, i32 107, i32 104, i32 124, i32 204, i32 72, i32 131, i32 144, i32 229, i32 253, i32 63, i32 132, i32 170, i32 249, i32 139, i32 130, i32 89, i32 36, i32 52, i32 104, i32 79, i32 28, i32 35, i32 217, i32 204, i32 113, i32 225, i32 127, i32 140, i32 175, i32 241, i32 238, i32 0, i32 182, i32 160, i32 119, i32 44, i32 58, i32 229, i32 173, i32 244, i32 221, i32 45, i32 247, i32 92, i32 68, i32 181, i32 91, i32 33, i32 163, i32 137, i32 95, i32 150, i32 69, i32 202, i32 77, i32 164, i32 33, i32 153, i32 112, i32 218, i32 196, i32 196, i32 160, i32 229, i32 244, i32 236, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 208, i32 117, i32 87, i32 59, i32 235, i32 92, i32 20, i32 86, i32 80, i32 201, i32 79, i32 184, i32 184, i32 30, i32 163, i32 244, i32 171, i32 245, i32 169, i32 32, i32 21, i32 148, i32 130, i32 218, i32 150, i32 28, i32 155, i32 89, i32 140, i32 255, i32 244, i32 81, i32 65, i32 151, i32 191, i32 113, i32 106, i32 155, i32 114, i32 236, i32 243, i32 248, i32 107, i32 230, i32 14, i32 108, i32 105, i32 165, i32 47, i32 104, i32 82, i32 216, i32 97, i32 129, i32 192, i32 99, i32 63, i32 166, i32 60, i32 19, i32 144, i32 230, i32 141, i32 86, i32 133, i32 87, i32 159, i32 181, i32 200, i32 6, i32 178, i32 159, i32 71, i32 63, i32 240, i32 250, i32 230, i32 169, i32 177, i32 155, i32 111, i32 150, i32 125, i32 249, i32 164, i32 101, i32 9, i32 117, i32 50, i32 166, i32 108, i32 127, i32 71, i32 75, i32 47, i32 79, i32 218, i32 3, i32 52, i32 102, i32 196, i32 12, i32 115, i32 110, i32 188, i32 36, i32 181, i32 249, i32 112, i32 129, i32 82, i32 233, i32 244, i32 124, i32 35, i32 221, i32 159, i32 184, i32 70, i32 239, i32 29, i32 34, i32 85, i32 125, i32 113, i32 196, i32 66, i32 51, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 154, i32 77, i32 66, i32 41, i32 93, i32 164, i32 107, i32 111, i32 168, i32 138, i32 77, i32 145, i32 123, i32 210, i32 223, i32 54, i32 239, i32 1, i32 34, i32 197, i32 204, i32 141, i32 235, i32 88, i32 61, i32 179, i32 80, i32 252, i32 139, i32 151, i32 150, i32 51, i32 69, i32 184, i32 65, i32 215, i32 171, i32 7, i32 21, i32 0, i32 142, i32 206, i32 223, i32 178, i32 67, i32 92, i32 1, i32 220, i32 244, i32 1, i32 81, i32 149, i32 16, i32 90, i32 246, i32 36, i32 36, i32 160, i32 25, i32 58, i32 9, i32 42, i32 170, i32 63, i32 137, i32 239, i32 191, i32 3, i32 117, i32 208, i32 41, i32 80, i32 203, i32 125, i32 214, i32 190, i32 173, i32 95, i32 123, i32 0, i32 50, i32 170, i32 152, i32 237, i32 63, i32 143, i32 146, i32 203, i32 129, i32 86, i32 1, i32 99, i32 100, i32 163, i32 56, i32 57, i32 197, i32 227, i32 232, i32 174, i32 23, i32 39, i32 227, i32 100, i32 96, i32 113, i32 71, i32 41, i32 2, i32 15, i32 146, i32 93, i32 16, i32 147, i32 200, i32 14, i32 161, i32 237, i32 186, i32 169, i32 150, i32 28, i32 197, i32 118, i32 48, i32 205, i32 249, i32 48, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 144, i32 110, i32 126, i32 75, i32 113, i32 147, i32 192, i32 114, i32 237, i32 235, i32 113, i32 36, i32 151, i32 38, i32 156, i32 254, i32 203, i32 62, i32 89, i32 25, i32 168, i32 15, i32 117, i32 125, i32 190, i32 24, i32 230, i32 150, i32 30, i32 149, i32 112, i32 96, i32 61, i32 112, i32 39, i32 157, i32 217, i32 175, i32 177, i32 39, i32 175, i32 227, i32 93, i32 30, i32 58, i32 48, i32 84, i32 97, i32 96, i32 232, i32 195, i32 38, i32 58, i32 188, i32 126, i32 245, i32 129, i32 221, i32 100, i32 1, i32 4, i32 235, i32 192, i32 30, i32 100, i32 170, i32 181, i32 136, i32 121, i32 101, i32 56, i32 140, i32 148, i32 214, i32 98, i32 55, i32 125, i32 100, i32 205, i32 58, i32 235, i32 255, i32 232, i32 129, i32 9, i32 199, i32 106, i32 80, i32 9, i32 13, i32 40, i32 3, i32 13, i32 154, i32 147, i32 10, i32 15, i32 169, i32 213, i32 1, i32 170, i32 72, i32 79, i32 40, i32 102, i32 50, i32 26, i32 186, i32 124, i32 234, i32 17, i32 128, i32 23, i32 24, i32 155, i32 86, i32 136, i32 37, i32 6, i32 105, i32 18, i32 44, i32 234, i32 86, i32 105, i32 65, i32 36, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 147, i32 68, i32 151, i32 206, i32 40, i32 255, i32 58, i32 64, i32 196, i32 245, i32 246, i32 155, i32 244, i32 107, i32 7, i32 132, i32 251, i32 152, i32 216, i32 236, i32 140, i32 3, i32 87, i32 236, i32 73, i32 237, i32 99, i32 182, i32 170, i32 255, i32 152, i32 40, i32 90, i32 247, i32 107, i32 1, i32 18, i32 79, i32 81, i32 193, i32 112, i32 132, i32 148, i32 71, i32 178, i32 1, i32 108, i32 113, i32 215, i32 204, i32 23, i32 102, i32 15, i32 89, i32 93, i32 93, i32 16, i32 1, i32 87, i32 17, i32 245, i32 221, i32 226, i32 52, i32 182, i32 234, i32 14, i32 64, i32 147, i32 32, i32 121, i32 53, i32 106, i32 97, i32 132, i32 90, i32 7, i32 109, i32 249, i32 119, i32 111, i32 237, i32 105, i32 28, i32 13, i32 37, i32 118, i32 204, i32 240, i32 219, i32 187, i32 197, i32 173, i32 226, i32 38, i32 87, i32 200, i32 92, i32 22, i32 254, i32 237, i32 159, i32 38, i32 86, i32 246, i32 75, i32 159, i32 167, i32 10, i32 133, i32 254, i32 165, i32 140, i32 135, i32 221, i32 152, i32 206, i32 78, i32 195, i32 88, i32 85, i32 178, i32 123, i32 61, i32 216, i32 107, i32 181, i32 76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 172, i32 143, i32 188, i32 30, i32 125, i32 139, i32 90, i32 11, i32 141, i32 175, i32 118, i32 46, i32 113, i32 227, i32 59, i32 111, i32 83, i32 47, i32 62, i32 144, i32 149, i32 212, i32 53, i32 20, i32 79, i32 140, i32 60, i32 206, i32 87, i32 28, i32 118, i32 73, i32 169, i32 96, i32 220, i32 15, i32 100, i32 229, i32 29, i32 226, i32 141, i32 79, i32 121, i32 47, i32 14, i32 36, i32 2, i32 0, i32 5, i32 119, i32 67, i32 37, i32 61, i32 106, i32 199, i32 183, i32 191, i32 4, i32 8, i32 101, i32 244, i32 57, i32 75, i32 101, i32 65, i32 33, i32 48, i32 83, i32 27, i32 71, i32 1, i32 183, i32 24, i32 216, i32 130, i32 87, i32 189, i32 163, i32 96, i32 240, i32 50, i32 246, i32 91, i32 240, i32 48, i32 136, i32 145, i32 89, i32 253, i32 144, i32 162, i32 185, i32 85, i32 147, i32 33, i32 52, i32 15, i32 125, i32 99, i32 140, i32 110, i32 92, i32 222, i32 48, i32 223, i32 101, i32 250, i32 46, i32 176, i32 163, i32 37, i32 5, i32 84, i32 189, i32 37, i32 186, i32 6, i32 174, i32 223, i32 139, i32 217, i32 27, i32 234, i32 56, i32 179, i32 5, i32 22, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 170, i32 31, i32 187, i32 235, i32 254, i32 228, i32 135, i32 252, i32 177, i32 44, i32 183, i32 136, i32 244, i32 198, i32 185, i32 245, i32 36, i32 70, i32 242, i32 165, i32 159, i32 143, i32 138, i32 147, i32 112, i32 105, i32 212, i32 86, i32 236, i32 253, i32 6, i32 70, i32 123, i32 117, i32 58, i32 252, i32 100, i32 211, i32 41, i32 126, i32 221, i32 73, i32 154, i32 89, i32 83, i32 191, i32 180, i32 167, i32 82, i32 179, i32 5, i32 171, i32 195, i32 175, i32 22, i32 26, i32 133, i32 66, i32 50, i32 162, i32 134, i32 250, i32 57, i32 67, i32 195, i32 241, i32 198, i32 147, i32 101, i32 238, i32 11, i32 188, i32 234, i32 20, i32 240, i32 193, i32 248, i32 132, i32 137, i32 194, i32 201, i32 215, i32 234, i32 52, i32 202, i32 167, i32 196, i32 153, i32 213, i32 80, i32 105, i32 203, i32 214, i32 33, i32 99, i32 124, i32 235, i32 1, i32 199, i32 54, i32 151, i32 78, i32 182, i32 171, i32 95, i32 13, i32 44, i32 186, i32 103, i32 100, i32 85, i32 222, i32 188, i32 255, i32 166, i32 236, i32 4, i32 211, i32 141, i32 57, i32 86, i32 94, i32 238, i32 248, i32 228, i32 46, i32 51, i32 98, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 47, i32 139, i32 200, i32 64, i32 81, i32 209, i32 172, i32 26, i32 11, i32 228, i32 169, i32 162, i32 66, i32 33, i32 25, i32 47, i32 123, i32 151, i32 191, i32 247, i32 87, i32 109, i32 63, i32 61, i32 79, i32 15, i32 226, i32 178, i32 129, i32 0, i32 158, i32 123, i32 64, i32 41, i32 116, i32 168, i32 47, i32 94, i32 249, i32 121, i32 164, i32 243, i32 62, i32 185, i32 253, i32 51, i32 49, i32 172, i32 154, i32 105, i32 136, i32 30, i32 119, i32 33, i32 45, i32 243, i32 145, i32 82, i32 38, i32 21, i32 178, i32 166, i32 207, i32 126, i32 98, i32 228, i32 13, i32 3, i32 180, i32 215, i32 205, i32 250, i32 189, i32 70, i32 223, i32 147, i32 113, i32 16, i32 44, i32 168, i32 59, i32 182, i32 9, i32 5, i32 112, i32 132, i32 67, i32 41, i32 168, i32 89, i32 245, i32 142, i32 16, i32 228, i32 215, i32 32, i32 251, i32 149, i32 146, i32 99, i32 80, i32 252, i32 98, i32 240, i32 164, i32 94, i32 140, i32 24, i32 194, i32 23, i32 36, i32 183, i32 120, i32 194, i32 169, i32 231, i32 106, i32 50, i32 214, i32 41, i32 133, i32 175, i32 203, i32 141, i32 145, i32 19, i32 218, i32 107, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 74, i32 177, i32 112, i32 138, i32 169, i32 232, i32 99, i32 121, i32 0, i32 226, i32 37, i32 22, i32 202, i32 75, i32 15, i32 164, i32 102, i32 173, i32 25, i32 159, i32 136, i32 103, i32 12, i32 139, i32 194, i32 74, i32 91, i32 43, i32 109, i32 149, i32 175, i32 25, i32 241, i32 185, i32 135, i32 53, i32 197, i32 187, i32 185, i32 207, i32 245, i32 214, i32 205, i32 213, i32 12, i32 124, i32 14, i32 230, i32 144, i32 52, i32 251, i32 81, i32 66, i32 30, i32 109, i32 172, i32 154, i32 70, i32 196, i32 151, i32 41, i32 50, i32 191, i32 69, i32 198, i32 150, i32 72, i32 52, i32 42, i32 6, i32 175, i32 148, i32 61, i32 244, i32 26, i32 207, i32 242, i32 192, i32 33, i32 194, i32 66, i32 94, i32 200, i32 47, i32 53, i32 162, i32 62, i32 41, i32 250, i32 12, i32 132, i32 229, i32 137, i32 114, i32 124, i32 6, i32 7, i32 198, i32 34, i32 21, i32 226, i32 156, i32 96, i32 162, i32 25, i32 217, i32 39, i32 174, i32 55, i32 78, i32 166, i32 201, i32 128, i32 166, i32 145, i32 143, i32 18, i32 73, i32 229, i32 0, i32 24, i32 71, i32 209, i32 215, i32 40, i32 34, i32 99, i32 57, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 36, i32 100, i32 110, i32 155, i32 53, i32 113, i32 120, i32 206, i32 51, i32 3, i32 33, i32 51, i32 54, i32 241, i32 115, i32 155, i32 185, i32 21, i32 139, i32 44, i32 105, i32 207, i32 77, i32 237, i32 79, i32 77, i32 87, i32 20, i32 19, i32 130, i32 164, i32 77, i32 76, i32 115, i32 109, i32 21, i32 189, i32 161, i32 77, i32 92, i32 19, i32 11, i32 36, i32 6, i32 152, i32 120, i32 28, i32 91, i32 235, i32 31, i32 24, i32 84, i32 67, i32 217, i32 85, i32 102, i32 218, i32 41, i32 33, i32 232, i32 184, i32 60, i32 66, i32 34, i32 146, i32 91, i32 252, i32 114, i32 253, i32 186, i32 241, i32 253, i32 166, i32 124, i32 149, i32 227, i32 97, i32 63, i32 233, i32 3, i32 212, i32 43, i32 212, i32 32, i32 217, i32 219, i32 77, i32 50, i32 62, i32 245, i32 17, i32 100, i32 227, i32 180, i32 190, i32 50, i32 180, i32 11, i32 50, i32 171, i32 220, i32 4, i32 81, i32 85, i32 33, i32 30, i32 11, i32 117, i32 153, i32 137, i32 115, i32 53, i32 58, i32 145, i32 43, i32 254, i32 231, i32 73, i32 234, i32 118, i32 193, i32 249, i32 70, i32 185, i32 83, i32 2, i32 35, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 192, i32 215, i32 86, i32 151, i32 88, i32 145, i32 222, i32 9, i32 79, i32 159, i32 190, i32 99, i32 176, i32 131, i32 134, i32 67, i32 93, i32 188, i32 224, i32 243, i32 192, i32 117, i32 191, i32 139, i32 142, i32 170, i32 247, i32 139, i32 100, i32 110, i32 176, i32 99, i32 134, i32 85, i32 55, i32 142, i32 195, i32 56, i32 72, i32 20, i32 181, i32 151, i32 210, i32 167, i32 84, i32 69, i32 241, i32 53, i32 68, i32 56, i32 158, i32 241, i32 27, i32 182, i32 52, i32 0, i32 60, i32 150, i32 238, i32 41, i32 0, i32 234, i32 44, i32 11, i32 208, i32 128, i32 186, i32 25, i32 174, i32 29, i32 169, i32 121, i32 246, i32 63, i32 172, i32 93, i32 111, i32 150, i32 31, i32 42, i32 206, i32 41, i32 178, i32 255, i32 55, i32 241, i32 148, i32 143, i32 12, i32 181, i32 40, i32 186, i32 154, i32 33, i32 246, i32 102, i32 189, i32 170, i32 19, i32 230, i32 205, i32 69, i32 74, i32 164, i32 89, i32 10, i32 100, i32 177, i32 152, i32 214, i32 52, i32 19, i32 4, i32 230, i32 151, i32 148, i32 6, i32 203, i32 212, i32 78, i32 187, i32 150, i32 205, i32 209, i32 87, i32 209, i32 227, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 36, i32 234, i32 35, i32 125, i32 86, i32 44, i32 226, i32 89, i32 14, i32 133, i32 96, i32 4, i32 136, i32 90, i32 116, i32 30, i32 75, i32 239, i32 19, i32 218, i32 76, i32 255, i32 131, i32 69, i32 133, i32 63, i32 8, i32 149, i32 44, i32 32, i32 19, i32 31, i32 147, i32 3, i32 54, i32 129, i32 172, i32 228, i32 32, i32 9, i32 53, i32 76, i32 69, i32 178, i32 30, i32 76, i32 20, i32 33, i32 230, i32 233, i32 138, i32 123, i32 141, i32 254, i32 30, i32 198, i32 62, i32 193, i32 53, i32 250, i32 231, i32 112, i32 78, i32 29, i32 187, i32 113, i32 20, i32 94, i32 38, i32 140, i32 61, i32 200, i32 233, i32 124, i32 211, i32 214, i32 209, i32 47, i32 7, i32 109, i32 230, i32 223, i32 251, i32 121, i32 214, i32 153, i32 89, i32 150, i32 72, i32 64, i32 15, i32 58, i32 123, i32 178, i32 160, i32 114, i32 36, i32 232, i32 183, i32 96, i32 174, i32 71, i32 128, i32 252, i32 229, i32 35, i32 231, i32 194, i32 201, i32 133, i32 230, i32 152, i32 160, i32 41, i32 78, i32 225, i32 132, i32 57, i32 45, i32 149, i32 44, i32 243, i32 69, i32 60, i32 255, i32 175, i32 39, i32 76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 133, i32 224, i32 36, i32 50, i32 180, i32 209, i32 239, i32 252, i32 105, i32 162, i32 191, i32 143, i32 114, i32 44, i32 149, i32 246, i32 228, i32 110, i32 125, i32 144, i32 247, i32 87, i32 129, i32 160, i32 247, i32 218, i32 239, i32 51, i32 7, i32 227, i32 107, i32 120, i32 19, i32 170, i32 46, i32 76, i32 240, i32 34, i32 184, i32 108, i32 179, i32 25, i32 77, i32 235, i32 107, i32 208, i32 164, i32 198, i32 156, i32 221, i32 200, i32 91, i32 129, i32 87, i32 137, i32 223, i32 51, i32 169, i32 104, i32 73, i32 128, i32 228, i32 254, i32 33, i32 100, i32 52, i32 236, i32 192, i32 158, i32 68, i32 65, i32 175, i32 160, i32 54, i32 5, i32 109, i32 234, i32 48, i32 37, i32 70, i32 53, i32 36, i32 157, i32 134, i32 189, i32 149, i32 241, i32 106, i32 70, i32 215, i32 148, i32 84, i32 249, i32 59, i32 189, i32 93, i32 223, i32 179, i32 70, i32 17, i32 110, i32 19, i32 183, i32 40, i32 78, i32 86, i32 221, i32 241, i32 172, i32 173, i32 88, i32 195, i32 248, i32 136, i32 148, i32 94, i32 6, i32 152, i32 161, i32 228, i32 106, i32 251, i32 10, i32 73, i32 93, i32 138, i32 254, i32 119, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 52, i32 117, i32 55, i32 31, i32 52, i32 78, i32 169, i32 29, i32 104, i32 103, i32 248, i32 73, i32 152, i32 150, i32 252, i32 76, i32 101, i32 151, i32 247, i32 2, i32 74, i32 82, i32 108, i32 1, i32 189, i32 72, i32 187, i32 27, i32 237, i32 164, i32 226, i32 83, i32 181, i32 176, i32 12, i32 77, i32 179, i32 123, i32 35, i32 200, i32 31, i32 138, i32 57, i32 102, i32 230, i32 186, i32 76, i32 16, i32 55, i32 202, i32 156, i32 124, i32 5, i32 158, i32 255, i32 192, i32 248, i32 142, i32 177, i32 143, i32 111, i32 103, i32 24, i32 38, i32 164, i32 41, i32 71, i32 134, i32 46, i32 146, i32 79, i32 17, i32 79, i32 243, i32 178, i32 92, i32 213, i32 62, i32 166, i32 185, i32 200, i32 226, i32 51, i32 17, i32 31, i32 1, i32 143, i32 176, i32 155, i32 199, i32 165, i32 255, i32 131, i32 15, i32 30, i32 40, i32 10, i32 108, i32 79, i32 188, i32 62, i32 50, i32 231, i32 74, i32 26, i32 19, i32 193, i32 73, i32 56, i32 191, i32 247, i32 194, i32 211, i32 143, i32 107, i32 173, i32 82, i32 247, i32 207, i32 188, i32 39, i32 203, i32 64, i32 103, i32 118, i32 205, i32 109, i32 86, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 136, i32 170, i32 20, i32 36, i32 134, i32 148, i32 17, i32 18, i32 62, i32 26, i32 181, i32 204, i32 187, i32 224, i32 156, i32 213, i32 156, i32 109, i32 186, i32 88, i32 114, i32 141, i32 251, i32 34, i32 123, i32 159, i32 124, i32 148, i32 48, i32 179, i32 81, i32 33, i32 214, i32 227, i32 150, i32 97, i32 58, i32 253, i32 239, i32 155, i32 31, i32 144, i32 164, i32 36, i32 20, i32 91, i32 200, i32 222, i32 80, i32 177, i32 29, i32 175, i32 232, i32 85, i32 138, i32 135, i32 13, i32 254, i32 170, i32 59, i32 130, i32 44, i32 141, i32 123, i32 143, i32 18, i32 234, i32 175, i32 209, i32 31, i32 121, i32 16, i32 11, i32 246, i32 163, i32 123, i32 234, i32 172, i32 139, i32 87, i32 50, i32 98, i32 231, i32 6, i32 18, i32 81, i32 160, i32 59, i32 67, i32 94, i32 164, i32 32, i32 120, i32 49, i32 206, i32 13, i32 136, i32 193, i32 153, i32 208, i32 60, i32 28, i32 93, i32 180, i32 239, i32 19, i32 15, i32 144, i32 185, i32 54, i32 47, i32 149, i32 149, i32 198, i32 220, i32 222, i32 10, i32 81, i32 226, i32 141, i32 243, i32 188, i32 81, i32 236, i32 223, i32 177, i32 162, i32 95, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 251, i32 253, i32 71, i32 123, i32 138, i32 102, i32 158, i32 121, i32 46, i32 100, i32 130, i32 239, i32 247, i32 33, i32 236, i32 246, i32 216, i32 134, i32 9, i32 49, i32 124, i32 221, i32 3, i32 106, i32 88, i32 160, i32 119, i32 183, i32 155, i32 140, i32 135, i32 31, i32 199, i32 202, i32 99, i32 193, i32 73, i32 169, i32 53, i32 69, i32 85, i32 126, i32 218, i32 100, i32 50, i32 7, i32 80, i32 247, i32 50, i32 172, i32 222, i32 117, i32 88, i32 155, i32 17, i32 178, i32 58, i32 31, i32 245, i32 247, i32 121, i32 4, i32 230, i32 8, i32 227, i32 57, i32 98, i32 180, i32 79, i32 49, i32 4, i32 201, i32 218, i32 213, i32 115, i32 81, i32 87, i32 197, i32 184, i32 243, i32 163, i32 67, i32 112, i32 228, i32 97, i32 129, i32 132, i32 226, i32 187, i32 191, i32 79, i32 158, i32 164, i32 94, i32 116, i32 6, i32 254, i32 127, i32 251, i32 53, i32 125, i32 198, i32 1, i32 35, i32 40, i32 196, i32 2, i32 172, i32 31, i32 66, i32 180, i32 157, i32 252, i32 0, i32 148, i32 165, i32 238, i32 202, i32 218, i32 151, i32 9, i32 65, i32 119, i32 135, i32 93, i32 123, i32 135, i32 120, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 255, i32 16, i32 194, i32 9, i32 79, i32 110, i32 244, i32 210, i32 223, i32 126, i32 202, i32 123, i32 28, i32 29, i32 186, i32 163, i32 182, i32 218, i32 103, i32 51, i32 212, i32 135, i32 54, i32 75, i32 17, i32 32, i32 5, i32 166, i32 41, i32 193, i32 135, i32 23, i32 92, i32 229, i32 198, i32 4, i32 142, i32 43, i32 87, i32 190, i32 56, i32 133, i32 35, i32 203, i32 183, i32 190, i32 79, i32 169, i32 211, i32 110, i32 18, i32 170, i32 213, i32 178, i32 46, i32 147, i32 41, i32 154, i32 74, i32 136, i32 24, i32 67, i32 245, i32 1, i32 65, i32 105, i32 1, i32 103, i32 92, i32 211, i32 138, i32 197, i32 207, i32 63, i32 209, i32 87, i32 209, i32 103, i32 62, i32 1, i32 57, i32 181, i32 203, i32 129, i32 86, i32 150, i32 38, i32 182, i32 194, i32 231, i32 92, i32 251, i32 99, i32 151, i32 88, i32 6, i32 63, i32 38, i32 233, i32 64, i32 233, i32 3, i32 173, i32 6, i32 105, i32 145, i32 224, i32 209, i32 137, i32 96, i32 132, i32 121, i32 222, i32 39, i32 109, i32 230, i32 118, i32 189, i32 234, i32 230, i32 174, i32 72, i32 195, i32 103, i32 192, i32 87, i32 205, i32 47, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 145, i32 63, i32 237, i32 94, i32 24, i32 120, i32 63, i32 35, i32 44, i32 13, i32 140, i32 68, i32 0, i32 232, i32 251, i32 233, i32 142, i32 214, i32 209, i32 54, i32 88, i32 87, i32 158, i32 174, i32 75, i32 92, i32 11, i32 7, i32 188, i32 107, i32 85, i32 43, i32 26, i32 111, i32 64, i32 175, i32 68, i32 68, i32 176, i32 67, i32 143, i32 13, i32 208, i32 30, i32 196, i32 11, i32 25, i32 93, i32 142, i32 254, i32 193, i32 243, i32 197, i32 92, i32 145, i32 248, i32 4, i32 78, i32 190, i32 144, i32 180, i32 71, i32 92, i32 63, i32 176, i32 174, i32 193, i32 141, i32 201, i32 143, i32 185, i32 122, i32 119, i32 239, i32 186, i32 121, i32 160, i32 60, i32 168, i32 245, i32 106, i32 226, i32 63, i32 93, i32 0, i32 227, i32 75, i32 69, i32 36, i32 123, i32 67, i32 120, i32 85, i32 29, i32 43, i32 30, i32 93, i32 248, i32 180, i32 168, i32 48, i32 221, i32 204, i32 56, i32 165, i32 211, i32 202, i32 216, i32 209, i32 248, i32 178, i32 49, i32 145, i32 212, i32 114, i32 5, i32 87, i32 74, i32 59, i32 130, i32 74, i32 198, i32 104, i32 32, i32 226, i32 24, i32 65, i32 97, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 177, i32 63, i32 63, i32 239, i32 216, i32 244, i32 252, i32 179, i32 160, i32 96, i32 80, i32 6, i32 43, i32 41, i32 82, i32 112, i32 21, i32 11, i32 36, i32 36, i32 248, i32 95, i32 121, i32 24, i32 204, i32 255, i32 137, i32 153, i32 132, i32 161, i32 174, i32 19, i32 231, i32 196, i32 67, i32 77, i32 201, i32 43, i32 105, i32 93, i32 29, i32 60, i32 175, i32 187, i32 67, i32 56, i32 78, i32 152, i32 61, i32 237, i32 13, i32 33, i32 3, i32 253, i32 240, i32 153, i32 71, i32 4, i32 176, i32 152, i32 105, i32 85, i32 114, i32 15, i32 205, i32 36, i32 198, i32 62, i32 12, i32 130, i32 155, i32 145, i32 43, i32 97, i32 74, i32 178, i32 15, i32 136, i32 85, i32 95, i32 90, i32 87, i32 255, i32 229, i32 116, i32 11, i32 19, i32 67, i32 0, i32 216, i32 107, i32 207, i32 210, i32 21, i32 3, i32 44, i32 27, i32 55, i32 71, i32 227, i32 245, i32 158, i32 234, i32 44, i32 42, i32 231, i32 130, i32 54, i32 244, i32 31, i32 129, i32 71, i32 146, i32 75, i32 105, i32 14, i32 17, i32 140, i32 93, i32 83, i32 91, i32 129, i32 39, i32 8, i32 188, i32 160, i32 174, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 217, i32 227, i32 56, i32 6, i32 70, i32 112, i32 130, i32 94, i32 40, i32 73, i32 121, i32 255, i32 37, i32 210, i32 78, i32 41, i32 141, i32 6, i32 176, i32 35, i32 174, i32 155, i32 102, i32 228, i32 125, i32 192, i32 112, i32 145, i32 163, i32 252, i32 236, i32 78, i32 252, i32 249, i32 33, i32 79, i32 46, i32 118, i32 155, i32 31, i32 40, i32 96, i32 119, i32 67, i32 50, i32 157, i32 190, i32 23, i32 48, i32 42, i32 198, i32 24, i32 146, i32 102, i32 98, i32 48, i32 152, i32 64, i32 17, i32 166, i32 127, i32 24, i32 132, i32 40, i32 81, i32 96, i32 27, i32 6, i32 79, i32 138, i32 33, i32 186, i32 56, i32 168, i32 186, i32 214, i32 64, i32 246, i32 233, i32 155, i32 118, i32 77, i32 86, i32 33, i32 91, i32 10, i32 155, i32 46, i32 79, i32 61, i32 129, i32 50, i32 8, i32 159, i32 151, i32 91, i32 26, i32 218, i32 243, i32 165, i32 65, i32 67, i32 40, i32 252, i32 126, i32 231, i32 113, i32 234, i32 198, i32 59, i32 89, i32 204, i32 46, i32 211, i32 64, i32 236, i32 179, i32 19, i32 111, i32 68, i32 205, i32 19, i32 178, i32 55, i32 242, i32 110, i32 217, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 24, i32 74, i32 162, i32 151, i32 8, i32 129, i32 45, i32 131, i32 196, i32 204, i32 240, i32 131, i32 126, i32 236, i32 13, i32 149, i32 76, i32 91, i32 251, i32 250, i32 152, i32 128, i32 74, i32 102, i32 86, i32 12, i32 81, i32 179, i32 242, i32 4, i32 93, i32 39, i32 132, i32 79, i32 55, i32 49, i32 125, i32 46, i32 188, i32 173, i32 135, i32 7, i32 42, i32 107, i32 55, i32 252, i32 95, i32 235, i32 78, i32 117, i32 53, i32 166, i32 222, i32 171, i32 10, i32 25, i32 58, i32 183, i32 177, i32 239, i32 146, i32 106, i32 59, i32 60, i32 253, i32 24, i32 120, i32 132, i32 168, i32 76, i32 125, i32 110, i32 89, i32 166, i32 229, i32 116, i32 241, i32 25, i32 166, i32 132, i32 46, i32 81, i32 193, i32 41, i32 19, i32 242, i32 20, i32 107, i32 93, i32 83, i32 81, i32 247, i32 239, i32 191, i32 1, i32 34, i32 85, i32 96, i32 85, i32 91, i32 228, i32 29, i32 113, i32 76, i32 157, i32 91, i32 159, i32 112, i32 166, i32 133, i32 154, i32 44, i32 160, i32 226, i32 50, i32 72, i32 206, i32 158, i32 42, i32 165, i32 7, i32 59, i32 199, i32 108, i32 134, i32 119, i32 222, i32 60, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 70, i32 202, i32 167, i32 85, i32 123, i32 121, i32 243, i32 202, i32 90, i32 101, i32 246, i32 237, i32 80, i32 20, i32 123, i32 228, i32 196, i32 42, i32 101, i32 158, i32 226, i32 249, i32 202, i32 167, i32 34, i32 38, i32 83, i32 203, i32 33, i32 91, i32 167, i32 49, i32 129, i32 33, i32 97, i32 9, i32 246, i32 78, i32 241, i32 146, i32 238, i32 99, i32 97, i32 115, i32 135, i32 199, i32 84, i32 14, i32 66, i32 75, i32 201, i32 71, i32 209, i32 184, i32 126, i32 145, i32 117, i32 55, i32 153, i32 40, i32 184, i32 221, i32 127, i32 80, i32 158, i32 53, i32 133, i32 148, i32 71, i32 31, i32 144, i32 21, i32 38, i32 208, i32 132, i32 237, i32 138, i32 128, i32 247, i32 99, i32 66, i32 134, i32 39, i32 215, i32 244, i32 117, i32 88, i32 220, i32 156, i32 192, i32 34, i32 126, i32 32, i32 53, i32 253, i32 31, i32 163, i32 42, i32 97, i32 55, i32 226, i32 89, i32 18, i32 14, i32 39, i32 186, i32 100, i32 67, i32 174, i32 192, i32 66, i32 105, i32 121, i32 164, i32 30, i32 41, i32 139, i32 21, i32 235, i32 248, i32 175, i32 212, i32 162, i32 104, i32 51, i32 181, i32 122, i32 36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 160, i32 104, i32 232, i32 65, i32 143, i32 145, i32 248, i32 17, i32 19, i32 144, i32 46, i32 167, i32 171, i32 48, i32 239, i32 173, i32 160, i32 97, i32 0, i32 136, i32 239, i32 219, i32 206, i32 91, i32 92, i32 187, i32 98, i32 200, i32 86, i32 249, i32 0, i32 115, i32 49, i32 64, i32 1, i32 82, i32 86, i32 148, i32 91, i32 40, i32 138, i32 170, i32 82, i32 238, i32 216, i32 10, i32 5, i32 141, i32 205, i32 181, i32 170, i32 46, i32 56, i32 170, i32 183, i32 135, i32 247, i32 43, i32 251, i32 4, i32 203, i32 132, i32 61, i32 84, i32 51, i32 137, i32 201, i32 99, i32 98, i32 28, i32 23, i32 180, i32 96, i32 196, i32 38, i32 104, i32 9, i32 195, i32 46, i32 55, i32 15, i32 123, i32 180, i32 156, i32 182, i32 249, i32 251, i32 212, i32 81, i32 120, i32 200, i32 99, i32 234, i32 119, i32 71, i32 7, i32 161, i32 94, i32 96, i32 79, i32 251, i32 225, i32 112, i32 106, i32 31, i32 85, i32 79, i32 9, i32 180, i32 149, i32 51, i32 54, i32 198, i32 129, i32 1, i32 24, i32 6, i32 37, i32 39, i32 164, i32 180, i32 36, i32 164, i32 134, i32 3, i32 76, i32 172, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 19, i32 197, i32 44, i32 172, i32 211, i32 131, i32 130, i32 124, i32 41, i32 247, i32 5, i32 165, i32 0, i32 182, i32 31, i32 134, i32 85, i32 244, i32 214, i32 47, i32 12, i32 153, i32 208, i32 101, i32 155, i32 107, i32 70, i32 13, i32 67, i32 248, i32 22, i32 40, i32 233, i32 159, i32 220, i32 63, i32 193, i32 137, i32 68, i32 116, i32 39, i32 228, i32 193, i32 144, i32 255, i32 74, i32 167, i32 60, i32 238, i32 205, i32 244, i32 29, i32 37, i32 148, i32 127, i32 99, i32 22, i32 72, i32 188, i32 100, i32 254, i32 149, i32 196, i32 12, i32 212, i32 202, i32 112, i32 61, i32 171, i32 251, i32 95, i32 94, i32 0, i32 12, i32 204, i32 119, i32 34, i32 248, i32 120, i32 85, i32 174, i32 98, i32 53, i32 251, i32 154, i32 198, i32 3, i32 228, i32 12, i32 238, i32 171, i32 199, i32 192, i32 137, i32 135, i32 84, i32 90, i32 32, i32 91, i32 161, i32 165, i32 68, i32 145, i32 36, i32 2, i32 99, i32 18, i32 100, i32 184, i32 85, i32 246, i32 222, i32 44, i32 219, i32 71, i32 184, i32 198, i32 10, i32 195, i32 0, i32 120, i32 147, i32 216, i32 245, i32 245, i32 24, i32 40, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 250, i32 148, i32 247, i32 64, i32 208, i32 215, i32 235, i32 169, i32 130, i32 54, i32 213, i32 21, i32 185, i32 51, i32 122, i32 191, i32 138, i32 242, i32 99, i32 170, i32 55, i32 245, i32 89, i32 172, i32 189, i32 187, i32 50, i32 54, i32 190, i32 115, i32 153, i32 56, i32 151, i32 157, i32 168, i32 205, i32 151, i32 123, i32 157, i32 185, i32 231, i32 165, i32 239, i32 253, i32 168, i32 66, i32 107, i32 195, i32 98, i32 100, i32 125, i32 165, i32 27, i32 201, i32 158, i32 210, i32 69, i32 185, i32 238, i32 3, i32 176, i32 191, i32 192, i32 104, i32 57, i32 97, i32 5, i32 237, i32 37, i32 137, i32 139, i32 93, i32 27, i32 203, i32 12, i32 85, i32 244, i32 106, i32 0, i32 138, i32 70, i32 232, i32 30, i32 198, i32 131, i32 200, i32 90, i32 118, i32 219, i32 204, i32 25, i32 122, i32 204, i32 103, i32 70, i32 11, i32 34, i32 140, i32 107, i32 190, i32 252, i32 77, i32 112, i32 98, i32 110, i32 82, i32 119, i32 153, i32 136, i32 126, i32 123, i32 87, i32 122, i32 13, i32 254, i32 220, i32 114, i32 146, i32 241, i32 104, i32 29, i32 151, i32 215, i32 124, i32 141, i32 83, i32 16, i32 55, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 138, i32 100, i32 30, i32 20, i32 10, i32 87, i32 212, i32 218, i32 92, i32 150, i32 155, i32 1, i32 76, i32 103, i32 191, i32 139, i32 48, i32 254, i32 8, i32 219, i32 13, i32 213, i32 168, i32 215, i32 9, i32 17, i32 133, i32 162, i32 211, i32 69, i32 251, i32 126, i32 24, i32 50, i32 152, i32 44, i32 143, i32 145, i32 174, i32 18, i32 240, i32 140, i32 234, i32 243, i32 60, i32 185, i32 93, i32 228, i32 105, i32 237, i32 178, i32 71, i32 24, i32 189, i32 206, i32 22, i32 82, i32 92, i32 35, i32 226, i32 165, i32 37, i32 82, i32 93, i32 33, i32 172, i32 139, i32 34, i32 205, i32 195, i32 154, i32 233, i32 94, i32 120, i32 189, i32 222, i32 186, i32 173, i32 171, i32 191, i32 117, i32 65, i32 9, i32 197, i32 88, i32 164, i32 125, i32 146, i32 176, i32 127, i32 242, i32 161, i32 209, i32 192, i32 179, i32 109, i32 96, i32 87, i32 46, i32 154, i32 114, i32 29, i32 107, i32 110, i32 88, i32 51, i32 36, i32 140, i32 72, i32 57, i32 70, i32 142, i32 137, i32 106, i32 136, i32 81, i32 35, i32 98, i32 181, i32 50, i32 9, i32 54, i32 227, i32 87, i32 245, i32 152, i32 222, i32 111, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 162, i32 220, i32 171, i32 169, i32 37, i32 45, i32 172, i32 95, i32 3, i32 51, i32 8, i32 231, i32 126, i32 254, i32 149, i32 54, i32 60, i32 91, i32 58, i32 211, i32 5, i32 130, i32 28, i32 149, i32 45, i32 216, i32 119, i32 126, i32 2, i32 217, i32 91, i32 112, i32 123, i32 170, i32 112, i32 10, i32 75, i32 251, i32 245, i32 191, i32 128, i32 197, i32 207, i32 8, i32 122, i32 221, i32 161, i32 244, i32 157, i32 84, i32 80, i32 83, i32 35, i32 119, i32 35, i32 245, i32 52, i32 165, i32 34, i32 209, i32 13, i32 150, i32 46, i32 71, i32 206, i32 130, i32 240, i32 143, i32 121, i32 2, i32 168, i32 209, i32 218, i32 20, i32 9, i32 72, i32 238, i32 138, i32 64, i32 152, i32 118, i32 96, i32 84, i32 90, i32 222, i32 3, i32 36, i32 245, i32 230, i32 47, i32 225, i32 3, i32 191, i32 104, i32 130, i32 127, i32 139, i32 197, i32 204, i32 61, i32 105, i32 166, i32 161, i32 24, i32 68, i32 188, i32 77, i32 119, i32 55, i32 199, i32 134, i32 236, i32 12, i32 201, i32 214, i32 68, i32 169, i32 35, i32 39, i32 185, i32 3, i32 52, i32 167, i32 10, i32 213, i32 199, i32 52, i32 55, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 239, i32 30, i32 236, i32 247, i32 141, i32 119, i32 242, i32 234, i32 219, i32 96, i32 3, i32 33, i32 192, i32 255, i32 94, i32 103, i32 195, i32 113, i32 11, i32 33, i32 180, i32 65, i32 160, i32 104, i32 56, i32 198, i32 1, i32 163, i32 211, i32 81, i32 60, i32 60, i32 39, i32 82, i32 228, i32 99, i32 170, i32 148, i32 230, i32 195, i32 40, i32 156, i32 198, i32 86, i32 172, i32 250, i32 182, i32 189, i32 226, i32 204, i32 118, i32 198, i32 39, i32 39, i32 162, i32 142, i32 120, i32 43, i32 132, i32 114, i32 16, i32 189, i32 78, i32 42, i32 171, i32 85, i32 54, i32 195, i32 236, i32 99, i32 85, i32 17, i32 85, i32 246, i32 165, i32 199, i32 1, i32 95, i32 254, i32 121, i32 216, i32 10, i32 247, i32 3, i32 216, i32 152, i32 153, i32 245, i32 208, i32 0, i32 84, i32 107, i32 102, i32 40, i32 245, i32 37, i32 106, i32 235, i32 252, i32 154, i32 154, i32 16, i32 206, i32 219, i32 58, i32 28, i32 60, i32 106, i32 157, i32 234, i32 70, i32 188, i32 69, i32 73, i32 172, i32 227, i32 65, i32 18, i32 124, i32 240, i32 247, i32 79, i32 249, i32 247, i32 255, i32 44, i32 137, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 180, i32 72, i32 16, i32 159, i32 138, i32 9, i32 118, i32 250, i32 240, i32 122, i32 176, i32 112, i32 247, i32 131, i32 128, i32 82, i32 132, i32 43, i32 38, i32 162, i32 196, i32 93, i32 79, i32 186, i32 177, i32 200, i32 64, i32 13, i32 120, i32 151, i32 196, i32 96, i32 15, i32 0, i32 63, i32 166, i32 4, i32 25, i32 86, i32 101, i32 49, i32 127, i32 139, i32 235, i32 13, i32 225, i32 71, i32 137, i32 151, i32 22, i32 83, i32 250, i32 129, i32 167, i32 170, i32 178, i32 191, i32 103, i32 235, i32 114, i32 96, i32 129, i32 13, i32 72, i32 233, i32 88, i32 31, i32 255, i32 132, i32 63, i32 147, i32 28, i32 203, i32 225, i32 48, i32 105, i32 165, i32 117, i32 25, i32 126, i32 20, i32 95, i32 248, i32 252, i32 9, i32 221, i32 168, i32 120, i32 157, i32 202, i32 89, i32 139, i32 209, i32 48, i32 1, i32 19, i32 56, i32 6, i32 248, i32 11, i32 172, i32 130, i32 196, i32 151, i32 43, i32 144, i32 224, i32 247, i32 168, i32 171, i32 108, i32 8, i32 128, i32 102, i32 144, i32 70, i32 247, i32 38, i32 45, i32 248, i32 241, i32 196, i32 107, i32 74, i32 130, i32 152, i32 142, i32 55, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 94, i32 168, i32 216, i32 4, i32 155, i32 115, i32 201, i32 201, i32 220, i32 13, i32 115, i32 191, i32 10, i32 10, i32 115, i32 255, i32 24, i32 31, i32 156, i32 81, i32 170, i32 198, i32 241, i32 131, i32 37, i32 253, i32 171, i32 163, i32 17, i32 211, i32 1, i32 36, i32 232, i32 221, i32 173, i32 58, i32 140, i32 234, i32 244, i32 179, i32 178, i32 229, i32 115, i32 242, i32 237, i32 139, i32 191, i32 237, i32 177, i32 12, i32 12, i32 251, i32 43, i32 241, i32 1, i32 72, i32 232, i32 38, i32 3, i32 142, i32 39, i32 77, i32 150, i32 114, i32 111, i32 133, i32 231, i32 239, i32 222, i32 103, i32 48, i32 252, i32 191, i32 90, i32 224, i32 123, i32 122, i32 42, i32 84, i32 107, i32 93, i32 98, i32 133, i32 161, i32 248, i32 22, i32 136, i32 236, i32 97, i32 185, i32 150, i32 181, i32 239, i32 45, i32 67, i32 77, i32 210, i32 142, i32 155, i32 250, i32 66, i32 142, i32 223, i32 143, i32 199, i32 134, i32 249, i32 164, i32 202, i32 112, i32 0, i32 157, i32 33, i32 191, i32 236, i32 87, i32 98, i32 48, i32 88, i32 140, i32 13, i32 53, i32 219, i32 93, i32 139, i32 106, i32 160, i32 90, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 208, i32 233, i32 192, i32 250, i32 149, i32 69, i32 35, i32 150, i32 241, i32 44, i32 121, i32 37, i32 20, i32 206, i32 64, i32 20, i32 68, i32 44, i32 54, i32 80, i32 217, i32 99, i32 86, i32 183, i32 86, i32 59, i32 158, i32 167, i32 239, i32 137, i32 187, i32 14, i32 37, i32 131, i32 230, i32 148, i32 123, i32 129, i32 178, i32 145, i32 174, i32 14, i32 5, i32 201, i32 163, i32 104, i32 45, i32 217, i32 136, i32 37, i32 25, i32 42, i32 97, i32 97, i32 33, i32 151, i32 21, i32 161, i32 53, i32 165, i32 70, i32 200, i32 162, i32 14, i32 186, i32 54, i32 123, i32 109, i32 169, i32 234, i32 20, i32 18, i32 197, i32 250, i32 145, i32 0, i32 186, i32 155, i32 153, i32 204, i32 86, i32 2, i32 233, i32 160, i32 38, i32 64, i32 102, i32 140, i32 196, i32 248, i32 133, i32 51, i32 104, i32 231, i32 3, i32 32, i32 61, i32 95, i32 92, i32 210, i32 188, i32 125, i32 119, i32 14, i32 42, i32 109, i32 34, i32 69, i32 132, i32 6, i32 196, i32 221, i32 198, i32 166, i32 198, i32 215, i32 73, i32 173, i32 109, i32 135, i32 145, i32 14, i32 58, i32 103, i32 29, i32 44, i32 29, i32 86, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 35, i32 21, i32 23, i32 235, i32 211, i32 219, i32 18, i32 94, i32 1, i32 240, i32 145, i32 171, i32 44, i32 65, i32 206, i32 172, i32 237, i32 27, i32 75, i32 45, i32 188, i32 219, i32 23, i32 102, i32 137, i32 70, i32 173, i32 75, i32 30, i32 111, i32 11, i32 20, i32 7, i32 118, i32 97, i32 15, i32 102, i32 178, i32 33, i32 57, i32 126, i32 192, i32 236, i32 69, i32 40, i32 130, i32 161, i32 41, i32 50, i32 68, i32 53, i32 19, i32 94, i32 97, i32 94, i32 84, i32 203, i32 124, i32 239, i32 246, i32 65, i32 207, i32 159, i32 10, i32 139, i32 177, i32 149, i32 229, i32 146, i32 80, i32 53, i32 17, i32 118, i32 172, i32 244, i32 77, i32 36, i32 195, i32 50, i32 230, i32 235, i32 254, i32 44, i32 135, i32 196, i32 241, i32 86, i32 196, i32 117, i32 36, i32 122, i32 86, i32 133, i32 90, i32 58, i32 19, i32 40, i32 193, i32 225, i32 84, i32 115, i32 242, i32 191, i32 118, i32 116, i32 25, i32 25, i32 27, i32 228, i32 185, i32 168, i32 70, i32 101, i32 115, i32 243, i32 119, i32 155, i32 41, i32 116, i32 91, i32 198, i32 137, i32 108, i32 44, i32 124, i32 248, i32 179, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 97, i32 177, i32 70, i32 186, i32 14, i32 49, i32 165, i32 103, i32 108, i32 127, i32 214, i32 217, i32 39, i32 133, i32 15, i32 121, i32 20, i32 200, i32 108, i32 47, i32 95, i32 91, i32 156, i32 53, i32 61, i32 56, i32 134, i32 119, i32 101, i32 85, i32 106, i32 123, i32 94, i32 244, i32 229, i32 23, i32 14, i32 16, i32 159, i32 231, i32 67, i32 95, i32 103, i32 92, i32 172, i32 75, i32 229, i32 20, i32 65, i32 210, i32 191, i32 72, i32 245, i32 20, i32 176, i32 113, i32 198, i32 97, i32 193, i32 178, i32 112, i32 88, i32 210, i32 90, i32 128, i32 186, i32 13, i32 9, i32 64, i32 167, i32 57, i32 166, i32 103, i32 52, i32 126, i32 102, i32 190, i32 86, i32 251, i32 83, i32 120, i32 196, i32 70, i32 232, i32 237, i32 104, i32 108, i32 127, i32 206, i32 232, i32 159, i32 206, i32 162, i32 100, i32 88, i32 83, i32 208, i32 182, i32 86, i32 48, i32 92, i32 174, i32 179, i32 117, i32 68, i32 164, i32 131, i32 81, i32 110, i32 1, i32 101, i32 239, i32 69, i32 118, i32 230, i32 245, i32 162, i32 13, i32 212, i32 22, i32 59, i32 88, i32 47, i32 242, i32 47, i32 54, i32 24, i32 63, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 141, i32 210, i32 218, i32 199, i32 68, i32 214, i32 122, i32 219, i32 38, i32 125, i32 29, i32 184, i32 225, i32 222, i32 157, i32 122, i32 125, i32 23, i32 126, i32 28, i32 55, i32 4, i32 141, i32 45, i32 124, i32 94, i32 24, i32 56, i32 30, i32 175, i32 199, i32 27, i32 84, i32 131, i32 2, i32 24, i32 130, i32 147, i32 153, i32 7, i32 208, i32 167, i32 218, i32 216, i32 117, i32 137, i32 250, i32 242, i32 217, i32 163, i32 184, i32 107, i32 90, i32 53, i32 40, i32 210, i32 107, i32 89, i32 194, i32 248, i32 69, i32 226, i32 188, i32 6, i32 47, i32 102, i32 41, i32 27, i32 4, i32 137, i32 189, i32 126, i32 238, i32 110, i32 221, i32 183, i32 14, i32 239, i32 176, i32 12, i32 180, i32 252, i32 127, i32 194, i32 201, i32 58, i32 60, i32 100, i32 239, i32 69, i32 68, i32 175, i32 138, i32 144, i32 101, i32 118, i32 247, i32 212, i32 22, i32 108, i32 78, i32 149, i32 157, i32 93, i32 15, i32 145, i32 43, i32 82, i32 254, i32 92, i32 52, i32 229, i32 48, i32 230, i32 164, i32 59, i32 243, i32 243, i32 52, i32 8, i32 169, i32 74, i32 160, i32 181, i32 110, i32 179, i32 9, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 219, i32 159, i32 44, i32 252, i32 214, i32 178, i32 30, i32 46, i32 82, i32 122, i32 6, i32 135, i32 45, i32 134, i32 114, i32 43, i32 109, i32 144, i32 119, i32 70, i32 67, i32 181, i32 122, i32 248, i32 96, i32 125, i32 145, i32 96, i32 91, i32 157, i32 158, i32 7, i32 77, i32 74, i32 215, i32 152, i32 113, i32 87, i32 172, i32 125, i32 139, i32 55, i32 189, i32 99, i32 255, i32 135, i32 177, i32 73, i32 149, i32 32, i32 124, i32 207, i32 124, i32 89, i32 196, i32 145, i32 156, i32 239, i32 208, i32 219, i32 96, i32 9, i32 157, i32 70, i32 42, i32 54, i32 104, i32 252, i32 95, i32 182, i32 79, i32 165, i32 227, i32 157, i32 36, i32 47, i32 192, i32 147, i32 97, i32 207, i32 248, i32 10, i32 237, i32 225, i32 219, i32 39, i32 236, i32 14, i32 20, i32 50, i32 95, i32 142, i32 161, i32 98, i32 65, i32 22, i32 146, i32 103, i32 119, i32 86, i32 161, i32 255, i32 196, i32 197, i32 149, i32 240, i32 227, i32 58, i32 10, i32 202, i32 148, i32 77, i32 158, i32 126, i32 61, i32 185, i32 110, i32 182, i32 176, i32 206, i32 164, i32 48, i32 137, i32 153, i32 233, i32 173, i32 17, i32 89, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 50, i32 153, i32 147, i32 209, i32 154, i32 114, i32 243, i32 169, i32 22, i32 189, i32 180, i32 76, i32 221, i32 249, i32 212, i32 178, i32 100, i32 154, i32 211, i32 5, i32 228, i32 163, i32 115, i32 28, i32 203, i32 126, i32 87, i32 103, i32 255, i32 4, i32 179, i32 16, i32 4, i32 253, i32 136, i32 60, i32 12, i32 208, i32 9, i32 82, i32 81, i32 79, i32 6, i32 25, i32 204, i32 195, i32 187, i32 222, i32 128, i32 197, i32 51, i32 188, i32 249, i32 243, i32 23, i32 54, i32 221, i32 198, i32 222, i32 232, i32 155, i32 93, i32 121, i32 27, i32 79, i32 0, i32 178, i32 102, i32 85, i32 237, i32 74, i32 237, i32 141, i32 225, i32 102, i32 24, i32 178, i32 20, i32 116, i32 141, i32 253, i32 26, i32 54, i32 15, i32 38, i32 92, i32 139, i32 137, i32 243, i32 171, i32 242, i32 243, i32 36, i32 103, i32 253, i32 112, i32 235, i32 203, i32 197, i32 112, i32 145, i32 49, i32 16, i32 147, i32 13, i32 200, i32 208, i32 239, i32 98, i32 232, i32 111, i32 130, i32 227, i32 105, i32 61, i32 145, i32 127, i32 49, i32 225, i32 38, i32 53, i32 60, i32 74, i32 47, i32 171, i32 196, i32 154, i32 94, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 246, i32 219, i32 13, i32 34, i32 61, i32 181, i32 20, i32 117, i32 49, i32 240, i32 129, i32 226, i32 185, i32 55, i32 162, i32 169, i32 132, i32 17, i32 154, i32 7, i32 181, i32 83, i32 137, i32 120, i32 169, i32 48, i32 39, i32 161, i32 241, i32 78, i32 92, i32 46, i32 206, i32 36, i32 239, i32 123, i32 134, i32 242, i32 15, i32 119, i32 232, i32 92, i32 125, i32 135, i32 56, i32 45, i32 239, i32 175, i32 242, i32 140, i32 114, i32 46, i32 235, i32 182, i32 85, i32 75, i32 110, i32 241, i32 78, i32 138, i32 14, i32 154, i32 108, i32 76, i32 78, i32 109, i32 195, i32 167, i32 79, i32 34, i32 69, i32 38, i32 162, i32 126, i32 22, i32 247, i32 247, i32 99, i32 220, i32 134, i32 1, i32 42, i32 113, i32 56, i32 92, i32 51, i32 195, i32 206, i32 48, i32 255, i32 249, i32 44, i32 145, i32 113, i32 138, i32 114, i32 146, i32 126, i32 80, i32 39, i32 114, i32 215, i32 12, i32 214, i32 105, i32 150, i32 129, i32 53, i32 132, i32 148, i32 53, i32 139, i32 108, i32 170, i32 98, i32 134, i32 110, i32 28, i32 21, i32 243, i32 108, i32 179, i32 255, i32 101, i32 27, i32 162, i32 155, i32 89, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 241, i32 89, i32 39, i32 216, i32 219, i32 90, i32 17, i32 94, i32 130, i32 243, i32 56, i32 255, i32 28, i32 237, i32 254, i32 63, i32 100, i32 84, i32 63, i32 127, i32 209, i32 129, i32 237, i32 239, i32 101, i32 197, i32 203, i32 253, i32 225, i32 128, i32 205, i32 17, i32 238, i32 243, i32 0, i32 161, i32 80, i32 222, i32 192, i32 182, i32 1, i32 227, i32 140, i32 60, i32 77, i32 49, i32 210, i32 176, i32 88, i32 205, i32 237, i32 16, i32 74, i32 122, i32 239, i32 128, i32 169, i32 25, i32 50, i32 243, i32 216, i32 51, i32 140, i32 6, i32 233, i32 195, i32 188, i32 123, i32 92, i32 252, i32 178, i32 249, i32 201, i32 47, i32 229, i32 186, i32 58, i32 11, i32 171, i32 100, i32 56, i32 111, i32 91, i32 75, i32 147, i32 218, i32 100, i32 236, i32 77, i32 61, i32 160, i32 245, i32 187, i32 186, i32 71, i32 72, i32 135, i32 192, i32 177, i32 240, i32 163, i32 111, i32 12, i32 147, i32 169, i32 10, i32 114, i32 239, i32 92, i32 190, i32 101, i32 53, i32 167, i32 106, i32 78, i32 44, i32 191, i32 33, i32 35, i32 232, i32 47, i32 151, i32 199, i32 62, i32 200, i32 23, i32 172, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 150, i32 136, i32 166, i32 171, i32 143, i32 227, i32 58, i32 73, i32 248, i32 254, i32 52, i32 231, i32 106, i32 178, i32 254, i32 64, i32 38, i32 116, i32 87, i32 76, i32 246, i32 212, i32 153, i32 206, i32 93, i32 123, i32 47, i32 103, i32 214, i32 90, i32 228, i32 78, i32 219, i32 250, i32 155, i32 44, i32 212, i32 35, i32 103, i32 44, i32 138, i32 99, i32 108, i32 7, i32 38, i32 72, i32 79, i32 194, i32 3, i32 210, i32 83, i32 32, i32 40, i32 237, i32 101, i32 113, i32 71, i32 169, i32 22, i32 22, i32 18, i32 188, i32 40, i32 51, i32 134, i32 230, i32 140, i32 29, i32 223, i32 202, i32 252, i32 213, i32 248, i32 58, i32 195, i32 68, i32 114, i32 230, i32 120, i32 157, i32 43, i32 151, i32 248, i32 40, i32 69, i32 180, i32 32, i32 201, i32 42, i32 140, i32 103, i32 170, i32 17, i32 197, i32 91, i32 47, i32 51, i32 167, i32 144, i32 124, i32 195, i32 111, i32 23, i32 165, i32 160, i32 103, i32 114, i32 23, i32 234, i32 126, i32 99, i32 20, i32 131, i32 222, i32 193, i32 113, i32 45, i32 65, i32 50, i32 122, i32 243, i32 209, i32 43, i32 216, i32 42, i32 166, i32 70, i32 54, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 156, i32 178, i32 97, i32 10, i32 152, i32 42, i32 165, i32 215, i32 238, i32 169, i32 172, i32 101, i32 203, i32 10, i32 30, i32 226, i32 190, i32 220, i32 133, i32 89, i32 15, i32 156, i32 166, i32 87, i32 52, i32 165, i32 135, i32 235, i32 123, i32 30, i32 12, i32 60, i32 10, i32 103, i32 144, i32 109, i32 12, i32 76, i32 204, i32 192, i32 230, i32 189, i32 167, i32 94, i32 85, i32 140, i32 205, i32 88, i32 155, i32 17, i32 162, i32 187, i32 75, i32 177, i32 67, i32 4, i32 60, i32 85, i32 237, i32 35, i32 254, i32 205, i32 177, i32 83, i32 13, i32 136, i32 26, i32 144, i32 126, i32 220, i32 216, i32 254, i32 193, i32 47, i32 93, i32 103, i32 238, i32 103, i32 47, i32 237, i32 111, i32 85, i32 67, i32 95, i32 135, i32 20, i32 53, i32 66, i32 211, i32 117, i32 174, i32 213, i32 211, i32 133, i32 26, i32 118, i32 152, i32 131, i32 194, i32 55, i32 160, i32 65, i32 168, i32 72, i32 92, i32 95, i32 191, i32 200, i32 250, i32 36, i32 224, i32 89, i32 44, i32 189, i32 246, i32 129, i32 126, i32 136, i32 230, i32 202, i32 4, i32 216, i32 93, i32 96, i32 187, i32 116, i32 167, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 72, i32 213, i32 57, i32 74, i32 11, i32 32, i32 106, i32 67, i32 160, i32 7, i32 130, i32 94, i32 73, i32 124, i32 201, i32 71, i32 241, i32 124, i32 55, i32 185, i32 35, i32 239, i32 107, i32 70, i32 69, i32 140, i32 69, i32 118, i32 223, i32 20, i32 107, i32 110, i32 76, i32 111, i32 254, i32 107, i32 12, i32 98, i32 215, i32 72, i32 113, i32 239, i32 177, i32 133, i32 121, i32 192, i32 237, i32 36, i32 177, i32 8, i32 147, i32 118, i32 142, i32 247, i32 56, i32 142, i32 235, i32 254, i32 128, i32 64, i32 175, i32 144, i32 100, i32 73, i32 61, i32 129, i32 240, i32 235, i32 22, i32 253, i32 88, i32 51, i32 141, i32 124, i32 26, i32 251, i32 32, i32 44, i32 138, i32 238, i32 144, i32 187, i32 51, i32 109, i32 69, i32 233, i32 142, i32 153, i32 133, i32 225, i32 8, i32 31, i32 197, i32 241, i32 181, i32 70, i32 224, i32 103, i32 233, i32 123, i32 219, i32 150, i32 92, i32 176, i32 50, i32 208, i32 89, i32 49, i32 144, i32 220, i32 146, i32 151, i32 172, i32 9, i32 56, i32 49, i32 15, i32 126, i32 214, i32 93, i32 208, i32 6, i32 182, i32 31, i32 234, i32 240, i32 91, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 76, i32 182, i32 105, i32 200, i32 129, i32 149, i32 148, i32 51, i32 146, i32 52, i32 233, i32 60, i32 132, i32 13, i32 61, i32 90, i32 55, i32 156, i32 34, i32 160, i32 170, i32 101, i32 206, i32 180, i32 194, i32 45, i32 102, i32 103, i32 2, i32 255, i32 116, i32 16, i32 51, i32 254, i32 66, i32 42, i32 54, i32 43, i32 46, i32 54, i32 100, i32 92, i32 139, i32 204, i32 129, i32 106, i32 21, i32 8, i32 161, i32 39, i32 232, i32 87, i32 229, i32 120, i32 142, i32 242, i32 88, i32 25, i32 18, i32 66, i32 174, i32 196, i32 99, i32 62, i32 159, i32 4, i32 8, i32 40, i32 190, i32 135, i32 218, i32 128, i32 40, i32 56, i32 222, i32 159, i32 205, i32 228, i32 227, i32 98, i32 251, i32 46, i32 70, i32 141, i32 1, i32 179, i32 6, i32 81, i32 212, i32 25, i32 59, i32 17, i32 250, i32 226, i32 173, i32 30, i32 145, i32 74, i32 7, i32 173, i32 8, i32 117, i32 193, i32 79, i32 164, i32 178, i32 195, i32 111, i32 70, i32 62, i32 177, i32 206, i32 82, i32 171, i32 103, i32 9, i32 84, i32 72, i32 107, i32 108, i32 215, i32 29, i32 113, i32 118, i32 203, i32 255, i32 221, i32 49, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 190, i32 87, i32 189, i32 14, i32 15, i32 172, i32 94, i32 118, i32 163, i32 113, i32 173, i32 43, i32 16, i32 69, i32 2, i32 236, i32 89, i32 213, i32 93, i32 169, i32 68, i32 204, i32 37, i32 76, i32 179, i32 60, i32 91, i32 105, i32 7, i32 85, i32 38, i32 107, i32 53, i32 13, i32 52, i32 10, i32 184, i32 103, i32 86, i32 41, i32 32, i32 243, i32 25, i32 95, i32 226, i32 131, i32 66, i32 115, i32 83, i32 168, i32 197, i32 2, i32 25, i32 51, i32 180, i32 100, i32 189, i32 195, i32 135, i32 140, i32 215, i32 118, i32 237, i32 37, i32 157, i32 35, i32 189, i32 21, i32 254, i32 82, i32 82, i32 21, i32 38, i32 121, i32 134, i32 186, i32 6, i32 86, i32 102, i32 187, i32 140, i32 46, i32 16, i32 17, i32 213, i32 74, i32 24, i32 82, i32 218, i32 132, i32 68, i32 240, i32 62, i32 233, i32 140, i32 53, i32 44, i32 185, i32 66, i32 164, i32 175, i32 59, i32 66, i32 14, i32 194, i32 15, i32 242, i32 234, i32 131, i32 175, i32 154, i32 19, i32 23, i32 176, i32 189, i32 137, i32 23, i32 227, i32 114, i32 203, i32 14, i32 118, i32 126, i32 65, i32 99, i32 4, i32 136, i32 113, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 231, i32 59, i32 101, i32 17, i32 223, i32 178, i32 242, i32 99, i32 148, i32 18, i32 111, i32 92, i32 158, i32 119, i32 193, i32 182, i32 216, i32 171, i32 88, i32 122, i32 29, i32 149, i32 115, i32 221, i32 231, i32 227, i32 111, i32 242, i32 3, i32 29, i32 219, i32 118, i32 197, i32 102, i32 128, i32 19, i32 14, i32 72, i32 140, i32 135, i32 49, i32 132, i32 180, i32 96, i32 237, i32 197, i32 236, i32 182, i32 197, i32 5, i32 51, i32 95, i32 47, i32 125, i32 64, i32 182, i32 50, i32 29, i32 56, i32 116, i32 27, i32 241, i32 9, i32 61, i32 23, i32 190, i32 235, i32 133, i32 237, i32 158, i32 205, i32 86, i32 245, i32 23, i32 69, i32 66, i32 180, i32 31, i32 68, i32 76, i32 5, i32 116, i32 21, i32 71, i32 0, i32 198, i32 106, i32 61, i32 36, i32 9, i32 13, i32 88, i32 177, i32 66, i32 215, i32 4, i32 63, i32 220, i32 5, i32 203, i32 65, i32 60, i32 200, i32 35, i32 4, i32 44, i32 56, i32 153, i32 227, i32 104, i32 85, i32 249, i32 211, i32 50, i32 199, i32 191, i32 250, i32 212, i32 27, i32 93, i32 222, i32 220, i32 16, i32 66, i32 192, i32 66, i32 217, i32 117, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 20, i32 174, i32 95, i32 136, i32 123, i32 165, i32 144, i32 223, i32 16, i32 178, i32 139, i32 94, i32 36, i32 23, i32 195, i32 163, i32 212, i32 15, i32 146, i32 97, i32 26, i32 25, i32 90, i32 173, i32 118, i32 189, i32 216, i32 28, i32 221, i32 224, i32 18, i32 109, i32 148, i32 213, i32 95, i32 31, i32 162, i32 251, i32 235, i32 225, i32 7, i32 52, i32 248, i32 32, i32 173, i32 129, i32 48, i32 6, i32 45, i32 161, i32 129, i32 149, i32 54, i32 207, i32 17, i32 11, i32 175, i32 193, i32 43, i32 154, i32 108, i32 85, i32 193, i32 22, i32 51, i32 121, i32 231, i32 24, i32 230, i32 15, i32 87, i32 147, i32 21, i32 160, i32 167, i32 170, i32 196, i32 191, i32 79, i32 48, i32 116, i32 149, i32 94, i32 105, i32 74, i32 91, i32 69, i32 228, i32 0, i32 235, i32 35, i32 116, i32 76, i32 223, i32 107, i32 69, i32 34, i32 190, i32 131, i32 182, i32 75, i32 128, i32 107, i32 67, i32 36, i32 94, i32 239, i32 153, i32 155, i32 168, i32 252, i32 37, i32 141, i32 59, i32 3, i32 148, i32 43, i32 62, i32 231, i32 149, i32 118, i32 155, i32 204, i32 21, i32 219, i32 50, i32 230, i32 102, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 42, i32 80, i32 227, i32 7, i32 21, i32 89, i32 242, i32 139, i32 129, i32 242, i32 243, i32 211, i32 108, i32 153, i32 140, i32 112, i32 103, i32 236, i32 204, i32 238, i32 158, i32 89, i32 69, i32 89, i32 125, i32 71, i32 117, i32 105, i32 245, i32 36, i32 147, i32 93, i32 163, i32 219, i32 247, i32 48, i32 216, i32 194, i32 154, i32 225, i32 211, i32 206, i32 34, i32 229, i32 128, i32 30, i32 217, i32 228, i32 31, i32 171, i32 192, i32 113, i32 26, i32 134, i32 14, i32 39, i32 153, i32 91, i32 250, i32 118, i32 153, i32 176, i32 8, i32 60, i32 211, i32 181, i32 109, i32 5, i32 63, i32 159, i32 243, i32 21, i32 141, i32 124, i32 202, i32 201, i32 252, i32 138, i32 124, i32 148, i32 176, i32 99, i32 54, i32 155, i32 120, i32 209, i32 145, i32 31, i32 147, i32 216, i32 87, i32 67, i32 222, i32 118, i32 163, i32 67, i32 178, i32 235, i32 71, i32 70, i32 24, i32 62, i32 31, i32 153, i32 12, i32 204, i32 241, i32 44, i32 224, i32 231, i32 143, i32 224, i32 1, i32 126, i32 101, i32 184, i32 12, i32 208, i32 251, i32 200, i32 185, i32 144, i32 152, i32 51, i32 97, i32 59, i32 216, i32 39, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 152, i32 11, i32 228, i32 222, i32 219, i32 168, i32 250, i32 130, i32 116, i32 6, i32 82, i32 109, i32 8, i32 82, i32 138, i32 255, i32 98, i32 197, i32 106, i32 68, i32 15, i32 81, i32 140, i32 31, i32 110, i32 182, i32 198, i32 44, i32 129, i32 211, i32 118, i32 70, i32 7, i32 238, i32 167, i32 173, i32 183, i32 9, i32 11, i32 73, i32 78, i32 191, i32 202, i32 229, i32 33, i32 230, i32 230, i32 175, i32 213, i32 103, i32 243, i32 206, i32 126, i32 124, i32 147, i32 123, i32 90, i32 16, i32 18, i32 14, i32 108, i32 6, i32 17, i32 117, i32 150, i32 157, i32 49, i32 244, i32 162, i32 190, i32 129, i32 185, i32 165, i32 89, i32 158, i32 186, i32 7, i32 190, i32 116, i32 88, i32 216, i32 235, i32 197, i32 159, i32 61, i32 209, i32 244, i32 174, i32 206, i32 83, i32 223, i32 79, i32 199, i32 42, i32 137, i32 77, i32 7, i32 152, i32 97, i32 232, i32 106, i32 210, i32 129, i32 73, i32 37, i32 213, i32 91, i32 24, i32 199, i32 53, i32 82, i32 81, i32 164, i32 70, i32 173, i32 24, i32 13, i32 201, i32 95, i32 24, i32 145, i32 59, i32 180, i32 192, i32 96, i32 89, i32 141, i32 102, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 15, i32 227, i32 137, i32 3, i32 215, i32 34, i32 149, i32 159, i32 202, i32 180, i32 141, i32 158, i32 109, i32 151, i32 255, i32 141, i32 33, i32 89, i32 7, i32 239, i32 3, i32 45, i32 94, i32 248, i32 68, i32 70, i32 231, i32 133, i32 128, i32 197, i32 137, i32 80, i32 194, i32 91, i32 155, i32 120, i32 35, i32 27, i32 58, i32 136, i32 148, i32 95, i32 10, i32 155, i32 152, i32 43, i32 110, i32 83, i32 17, i32 246, i32 255, i32 198, i32 125, i32 66, i32 204, i32 2, i32 128, i32 64, i32 13, i32 30, i32 251, i32 175, i32 97, i32 7, i32 155, i32 24, i32 128, i32 94, i32 219, i32 5, i32 189, i32 198, i32 183, i32 60, i32 194, i32 64, i32 77, i32 93, i32 206, i32 151, i32 138, i32 52, i32 21, i32 171, i32 40, i32 93, i32 16, i32 240, i32 55, i32 12, i32 204, i32 22, i32 250, i32 31, i32 51, i32 13, i32 38, i32 220, i32 118, i32 59, i32 252, i32 249, i32 156, i32 63, i32 137, i32 11, i32 98, i32 83, i32 175, i32 131, i32 1, i32 46, i32 188, i32 106, i32 198, i32 3, i32 13, i32 117, i32 42, i32 13, i32 230, i32 148, i32 84, i32 207, i32 179, i32 229, i32 150, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 37, i32 13, i32 214, i32 199, i32 35, i32 71, i32 16, i32 173, i32 199, i32 8, i32 92, i32 135, i32 135, i32 147, i32 152, i32 24, i32 184, i32 211, i32 156, i32 172, i32 90, i32 61, i32 197, i32 117, i32 248, i32 73, i32 50, i32 20, i32 204, i32 81, i32 150, i32 36, i32 189, i32 89, i32 61, i32 191, i32 92, i32 49, i32 68, i32 44, i32 50, i32 148, i32 4, i32 96, i32 132, i32 15, i32 173, i32 0, i32 182, i32 143, i32 201, i32 29, i32 204, i32 92, i32 162, i32 73, i32 14, i32 80, i32 145, i32 8, i32 154, i32 67, i32 85, i32 5, i32 18, i32 85, i32 249, i32 218, i32 203, i32 68, i32 167, i32 220, i32 87, i32 226, i32 249, i32 154, i32 230, i32 7, i32 35, i32 96, i32 84, i32 167, i32 57, i32 165, i32 155, i32 132, i32 86, i32 110, i32 170, i32 139, i32 143, i32 176, i32 44, i32 135, i32 175, i32 103, i32 23, i32 180, i32 174, i32 114, i32 89, i32 208, i32 170, i32 168, i32 22, i32 139, i32 99, i32 17, i32 179, i32 67, i32 4, i32 218, i32 12, i32 168, i32 183, i32 104, i32 221, i32 78, i32 84, i32 231, i32 175, i32 93, i32 93, i32 5, i32 118, i32 54, i32 236, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 135, i32 71, i32 157, i32 233, i32 37, i32 213, i32 227, i32 71, i32 120, i32 223, i32 133, i32 167, i32 133, i32 94, i32 122, i32 76, i32 95, i32 121, i32 26, i32 243, i32 162, i32 178, i32 40, i32 160, i32 156, i32 221, i32 48, i32 64, i32 212, i32 56, i32 189, i32 40, i32 38, i32 225, i32 123, i32 95, i32 229, i32 220, i32 63, i32 125, i32 161, i32 167, i32 38, i32 68, i32 34, i32 35, i32 192, i32 143, i32 125, i32 241, i32 181, i32 17, i32 71, i32 123, i32 25, i32 212, i32 117, i32 111, i32 30, i32 165, i32 39, i32 254, i32 200, i32 14, i32 253, i32 91, i32 78, i32 141, i32 182, i32 126, i32 130, i32 155, i32 239, i32 206, i32 4, i32 105, i32 81, i32 82, i32 255, i32 239, i32 160, i32 82, i32 181, i32 121, i32 23, i32 94, i32 47, i32 222, i32 214, i32 60, i32 45, i32 160, i32 67, i32 180, i32 11, i32 25, i32 229, i32 137, i32 138, i32 118, i32 108, i32 219, i32 77, i32 10, i32 91, i32 114, i32 157, i32 89, i32 110, i32 99, i32 99, i32 24, i32 124, i32 227, i32 250, i32 226, i32 219, i32 161, i32 141, i32 244, i32 165, i32 215, i32 22, i32 178, i32 208, i32 179, i32 63, i32 57, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 233, i32 115, i32 111, i32 33, i32 185, i32 222, i32 34, i32 125, i32 235, i32 151, i32 49, i32 16, i32 163, i32 234, i32 225, i32 198, i32 55, i32 235, i32 143, i32 67, i32 88, i32 222, i32 65, i32 100, i32 14, i32 62, i32 7, i32 153, i32 61, i32 241, i32 223, i32 30, i32 123, i32 52, i32 36, i32 76, i32 207, i32 56, i32 229, i32 108, i32 10, i32 1, i32 44, i32 34, i32 11, i32 36, i32 56, i32 173, i32 36, i32 126, i32 25, i32 240, i32 108, i32 249, i32 49, i32 244, i32 53, i32 17, i32 246, i32 70, i32 51, i32 58, i32 35, i32 89, i32 196, i32 11, i32 75, i32 98, i32 153, i32 55, i32 132, i32 63, i32 116, i32 162, i32 249, i32 206, i32 226, i32 11, i32 15, i32 42, i32 61, i32 163, i32 227, i32 219, i32 90, i32 157, i32 147, i32 204, i32 165, i32 239, i32 130, i32 145, i32 29, i32 230, i32 108, i32 104, i32 26, i32 234, i32 191, i32 253, i32 74, i32 60, i32 142, i32 236, i32 41, i32 126, i32 119, i32 119, i32 18, i32 153, i32 215, i32 132, i32 249, i32 85, i32 127, i32 241, i32 139, i32 180, i32 210, i32 149, i32 163, i32 141, i32 240, i32 138, i32 167, i32 235, i32 130, i32 75, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 193, i32 205, i32 144, i32 102, i32 185, i32 118, i32 160, i32 91, i32 165, i32 133, i32 117, i32 35, i32 249, i32 137, i32 165, i32 130, i32 178, i32 111, i32 177, i32 235, i32 196, i32 105, i32 111, i32 24, i32 90, i32 237, i32 148, i32 61, i32 157, i32 217, i32 44, i32 26, i32 193, i32 86, i32 150, i32 145, i32 95, i32 31, i32 187, i32 84, i32 111, i32 136, i32 137, i32 10, i32 178, i32 214, i32 65, i32 66, i32 106, i32 130, i32 238, i32 20, i32 170, i32 118, i32 48, i32 101, i32 15, i32 103, i32 57, i32 166, i32 81, i32 124, i32 73, i32 36, i32 219, i32 167, i32 157, i32 157, i32 191, i32 160, i32 204, i32 237, i32 83, i32 162, i32 162, i32 25, i32 57, i32 72, i32 131, i32 25, i32 55, i32 88, i32 209, i32 4, i32 40, i32 64, i32 247, i32 138, i32 194, i32 8, i32 183, i32 165, i32 66, i32 207, i32 83, i32 76, i32 31, i32 150, i32 255, i32 52, i32 44, i32 19, i32 33, i32 203, i32 10, i32 137, i32 133, i32 190, i32 179, i32 112, i32 158, i32 30, i32 222, i32 151, i32 175, i32 150, i32 48, i32 247, i32 72, i32 137, i32 64, i32 141, i32 7, i32 241, i32 37, i32 240, i32 48, i32 88, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 43, i32 6, i32 217, i32 161, i32 93, i32 225, i32 244, i32 209, i32 30, i32 60, i32 154, i32 198, i32 41, i32 43, i32 19, i32 19, i32 120, i32 192, i32 216, i32 22, i32 23, i32 45, i32 158, i32 169, i32 201, i32 121, i32 87, i32 171, i32 36, i32 145, i32 146, i32 25, i32 20, i32 137, i32 115, i32 161, i32 55, i32 135, i32 106, i32 122, i32 207, i32 29, i32 217, i32 46, i32 26, i32 103, i32 237, i32 116, i32 192, i32 240, i32 156, i32 51, i32 221, i32 223, i32 8, i32 191, i32 123, i32 209, i32 102, i32 218, i32 230, i32 201, i32 73, i32 8, i32 243, i32 225, i32 43, i32 124, i32 5, i32 134, i32 128, i32 147, i32 74, i32 173, i32 180, i32 143, i32 126, i32 153, i32 12, i32 253, i32 205, i32 239, i32 209, i32 255, i32 44, i32 105, i32 52, i32 19, i32 65, i32 100, i32 207, i32 59, i32 208, i32 144, i32 9, i32 30, i32 231, i32 32, i32 114, i32 124, i32 109, i32 148, i32 95, i32 82, i32 68, i32 84, i32 227, i32 241, i32 178, i32 176, i32 54, i32 70, i32 15, i32 174, i32 146, i32 232, i32 112, i32 157, i32 110, i32 121, i32 177, i32 173, i32 55, i32 169, i32 95, i32 192, i32 222, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 236, i32 211, i32 255, i32 87, i32 11, i32 176, i32 178, i32 220, i32 248, i32 79, i32 226, i32 18, i32 213, i32 54, i32 190, i32 107, i32 9, i32 67, i32 109, i32 163, i32 77, i32 144, i32 45, i32 184, i32 116, i32 232, i32 113, i32 69, i32 25, i32 139, i32 12, i32 106, i32 120, i32 132, i32 225, i32 86, i32 69, i32 105, i32 104, i32 90, i32 79, i32 184, i32 177, i32 41, i32 255, i32 51, i32 3, i32 49, i32 183, i32 203, i32 150, i32 37, i32 230, i32 230, i32 65, i32 152, i32 26, i32 187, i32 3, i32 86, i32 242, i32 178, i32 145, i32 52, i32 139, i32 241, i32 160, i32 245, i32 220, i32 41, i32 180, i32 226, i32 7, i32 198, i32 122, i32 0, i32 208, i32 137, i32 23, i32 81, i32 212, i32 187, i32 212, i32 34, i32 234, i32 126, i32 125, i32 124, i32 36, i32 234, i32 242, i32 232, i32 34, i32 18, i32 149, i32 6, i32 29, i32 134, i32 78, i32 207, i32 247, i32 55, i32 16, i32 37, i32 143, i32 18, i32 251, i32 25, i32 251, i32 224, i32 237, i32 16, i32 200, i32 226, i32 245, i32 117, i32 177, i32 51, i32 192, i32 150, i32 13, i32 251, i32 21, i32 108, i32 13, i32 7, i32 95, i32 5] ; [#uses=36 type=[13600 x i32]*]
@ge25519_base_multipl = internal constant [13600 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 88, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 201, i32 163, i32 248, i32 106, i32 174, i32 70, i32 95, i32 14, i32 86, i32 81, i32 56, i32 100, i32 81, i32 15, i32 57, i32 151, i32 86, i32 31, i32 162, i32 201, i32 232, i32 94, i32 162, i32 29, i32 194, i32 41, i32 35, i32 9, i32 243, i32 205, i32 96, i32 34, i32 212, i32 180, i32 245, i32 120, i32 72, i32 104, i32 195, i32 2, i32 4, i32 3, i32 36, i32 103, i32 23, i32 236, i32 22, i32 159, i32 247, i32 158, i32 38, i32 96, i32 142, i32 161, i32 38, i32 161, i32 171, i32 105, i32 238, i32 119, i32 209, i32 177, i32 103, i32 18, i32 47, i32 17, i32 50, i32 202, i32 97, i32 171, i32 56, i32 223, i32 240, i32 15, i32 47, i32 234, i32 50, i32 40, i32 242, i32 76, i32 108, i32 113, i32 213, i32 128, i32 133, i32 184, i32 14, i32 71, i32 225, i32 149, i32 21, i32 203, i32 39, i32 232, i32 208, i32 71, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 180, i32 185, i32 55, i32 252, i32 169, i32 91, i32 47, i32 30, i32 147, i32 228, i32 30, i32 98, i32 252, i32 60, i32 120, i32 129, i32 143, i32 243, i32 138, i32 102, i32 9, i32 111, i32 173, i32 110, i32 121, i32 115, i32 229, i32 201, i32 0, i32 6, i32 211, i32 33, i32 235, i32 39, i32 103, i32 193, i32 55, i32 171, i32 122, i32 216, i32 39, i32 156, i32 7, i32 142, i32 255, i32 17, i32 106, i32 176, i32 120, i32 110, i32 173, i32 58, i32 46, i32 15, i32 152, i32 159, i32 114, i32 195, i32 127, i32 130, i32 242, i32 150, i32 150, i32 112, i32 241, i32 121, i32 123, i32 237, i32 79, i32 68, i32 178, i32 231, i32 8, i32 13, i32 194, i32 8, i32 18, i32 210, i32 159, i32 223, i32 205, i32 147, i32 32, i32 138, i32 207, i32 51, i32 202, i32 109, i32 137, i32 185, i32 119, i32 200, i32 147, i32 27, i32 78, i32 96, i32 105, i32 210, i32 6, i32 58, i32 79, i32 57, i32 45, i32 249, i32 56, i32 64, i32 140, i32 76, i32 231, i32 5, i32 18, i32 180, i32 120, i32 139, i32 248, i32 192, i32 236, i32 147, i32 222, i32 122, i32 107, i32 206, i32 44, i32 225, i32 14, i32 169, i32 52, i32 68, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 38, i32 9, i32 218, i32 23, i32 175, i32 149, i32 214, i32 251, i32 106, i32 25, i32 13, i32 110, i32 94, i32 18, i32 241, i32 153, i32 76, i32 170, i32 168, i32 111, i32 121, i32 134, i32 244, i32 114, i32 40, i32 0, i32 38, i32 249, i32 234, i32 158, i32 25, i32 61, i32 252, i32 134, i32 75, i32 8, i32 238, i32 231, i32 160, i32 253, i32 33, i32 69, i32 9, i32 52, i32 193, i32 97, i32 50, i32 35, i32 252, i32 155, i32 85, i32 72, i32 83, i32 153, i32 247, i32 99, i32 208, i32 153, i32 206, i32 1, i32 224, i32 159, i32 235, i32 40, i32 28, i32 89, i32 28, i32 101, i32 93, i32 52, i32 164, i32 9, i32 205, i32 19, i32 156, i32 112, i32 125, i32 177, i32 42, i32 197, i32 136, i32 175, i32 11, i32 96, i32 199, i32 159, i32 52, i32 141, i32 214, i32 183, i32 127, i32 234, i32 120, i32 101, i32 141, i32 119, i32 199, i32 246, i32 108, i32 86, i32 49, i32 32, i32 20, i32 14, i32 168, i32 217, i32 39, i32 193, i32 154, i32 61, i32 27, i32 125, i32 14, i32 38, i32 211, i32 129, i32 170, i32 235, i32 245, i32 107, i32 121, i32 2, i32 241, i32 81, i32 92, i32 117, i32 85, i32 15, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 232, i32 147, i32 139, i32 0, i32 100, i32 247, i32 156, i32 184, i32 116, i32 224, i32 230, i32 73, i32 72, i32 77, i32 77, i32 72, i32 182, i32 25, i32 161, i32 64, i32 183, i32 217, i32 50, i32 65, i32 124, i32 130, i32 55, i32 161, i32 45, i32 220, i32 210, i32 84, i32 61, i32 193, i32 39, i32 243, i32 89, i32 67, i32 149, i32 144, i32 197, i32 150, i32 121, i32 245, i32 244, i32 149, i32 101, i32 41, i32 6, i32 156, i32 81, i32 5, i32 24, i32 218, i32 184, i32 46, i32 121, i32 126, i32 105, i32 89, i32 113, i32 1, i32 235, i32 26, i32 188, i32 88, i32 230, i32 192, i32 149, i32 42, i32 42, i32 129, i32 154, i32 122, i32 243, i32 210, i32 6, i32 190, i32 72, i32 188, i32 12, i32 197, i32 70, i32 224, i32 106, i32 212, i32 172, i32 15, i32 217, i32 204, i32 130, i32 52, i32 44, i32 175, i32 219, i32 31, i32 78, i32 54, i32 17, i32 7, i32 162, i32 21, i32 32, i32 81, i32 196, i32 42, i32 195, i32 98, i32 139, i32 94, i32 127, i32 166, i32 15, i32 249, i32 69, i32 133, i32 108, i32 17, i32 134, i32 183, i32 126, i32 229, i32 215, i32 249, i32 195, i32 145, i32 28, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 213, i32 32, i32 91, i32 128, i32 166, i32 128, i32 32, i32 149, i32 195, i32 233, i32 159, i32 142, i32 135, i32 158, i32 30, i32 158, i32 122, i32 199, i32 204, i32 117, i32 108, i32 165, i32 241, i32 145, i32 26, i32 168, i32 1, i32 44, i32 171, i32 118, i32 169, i32 89, i32 137, i32 175, i32 246, i32 164, i32 100, i32 213, i32 16, i32 224, i32 29, i32 173, i32 239, i32 68, i32 189, i32 218, i32 131, i32 172, i32 122, i32 168, i32 240, i32 28, i32 7, i32 249, i32 195, i32 67, i32 108, i32 63, i32 183, i32 211, i32 135, i32 34, i32 2, i32 115, i32 34, i32 245, i32 95, i32 77, i32 21, i32 239, i32 252, i32 78, i32 87, i32 3, i32 54, i32 137, i32 240, i32 235, i32 91, i32 145, i32 214, i32 226, i32 202, i32 1, i32 165, i32 238, i32 82, i32 236, i32 160, i32 60, i32 143, i32 51, i32 144, i32 90, i32 148, i32 114, i32 1, i32 137, i32 40, i32 34, i32 106, i32 120, i32 170, i32 41, i32 3, i32 200, i32 116, i32 149, i32 3, i32 62, i32 220, i32 189, i32 7, i32 19, i32 168, i32 162, i32 32, i32 45, i32 179, i32 24, i32 112, i32 66, i32 253, i32 122, i32 196, i32 215, i32 73, i32 114, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 70, i32 141, i32 176, i32 51, i32 84, i32 38, i32 91, i32 104, i32 223, i32 187, i32 197, i32 236, i32 194, i32 249, i32 60, i32 90, i32 55, i32 193, i32 142, i32 39, i32 71, i32 170, i32 73, i32 90, i32 248, i32 251, i32 104, i32 4, i32 35, i32 209, i32 235, i32 64, i32 54, i32 236, i32 84, i32 248, i32 206, i32 228, i32 133, i32 223, i32 246, i32 111, i32 29, i32 144, i32 8, i32 188, i32 232, i32 192, i32 146, i32 45, i32 67, i32 107, i32 146, i32 169, i32 142, i32 171, i32 10, i32 46, i32 28, i32 30, i32 100, i32 35, i32 159, i32 44, i32 96, i32 214, i32 221, i32 120, i32 230, i32 212, i32 34, i32 66, i32 31, i32 0, i32 249, i32 177, i32 106, i32 99, i32 226, i32 146, i32 89, i32 209, i32 26, i32 183, i32 0, i32 84, i32 41, i32 201, i32 193, i32 246, i32 111, i32 122, i32 197, i32 60, i32 95, i32 101, i32 241, i32 37, i32 78, i32 17, i32 150, i32 103, i32 230, i32 28, i32 194, i32 178, i32 83, i32 226, i32 218, i32 133, i32 238, i32 178, i32 159, i32 89, i32 243, i32 186, i32 189, i32 250, i32 207, i32 110, i32 249, i32 218, i32 164, i32 179, i32 2, i32 143, i32 100, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 113, i32 214, i32 22, i32 118, i32 178, i32 6, i32 234, i32 121, i32 245, i32 196, i32 195, i32 82, i32 126, i32 97, i32 209, i32 225, i32 173, i32 112, i32 120, i32 29, i32 22, i32 17, i32 248, i32 124, i32 43, i32 252, i32 85, i32 159, i32 82, i32 248, i32 245, i32 22, i32 246, i32 226, i32 76, i32 31, i32 91, i32 178, i32 175, i32 130, i32 165, i32 207, i32 129, i32 16, i32 4, i32 239, i32 219, i32 162, i32 204, i32 36, i32 178, i32 126, i32 11, i32 122, i32 235, i32 1, i32 216, i32 82, i32 244, i32 81, i32 137, i32 41, i32 121, i32 55, i32 2, i32 204, i32 34, i32 116, i32 77, i32 25, i32 7, i32 192, i32 218, i32 181, i32 118, i32 81, i32 42, i32 170, i32 166, i32 10, i32 95, i32 38, i32 212, i32 188, i32 175, i32 72, i32 136, i32 127, i32 2, i32 188, i32 242, i32 225, i32 207, i32 233, i32 221, i32 21, i32 248, i32 100, i32 139, i32 96, i32 144, i32 233, i32 222, i32 68, i32 119, i32 185, i32 7, i32 54, i32 50, i32 194, i32 80, i32 245, i32 101, i32 223, i32 72, i32 76, i32 55, i32 170, i32 104, i32 171, i32 154, i32 31, i32 62, i32 255, i32 137, i32 146, i32 160, i32 7, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 75, i32 176, i32 78, i32 110, i32 17, i32 59, i32 81, i32 189, i32 106, i32 253, i32 228, i32 37, i32 165, i32 95, i32 17, i32 63, i32 152, i32 146, i32 81, i32 20, i32 198, i32 95, i32 60, i32 11, i32 168, i32 247, i32 194, i32 129, i32 67, i32 222, i32 145, i32 115, i32 121, i32 81, i32 129, i32 1, i32 220, i32 115, i32 83, i32 224, i32 110, i32 155, i32 234, i32 104, i32 63, i32 92, i32 20, i32 132, i32 83, i32 141, i32 75, i32 192, i32 159, i32 159, i32 137, i32 43, i32 140, i32 186, i32 134, i32 250, i32 242, i32 205, i32 227, i32 45, i32 46, i32 105, i32 152, i32 253, i32 198, i32 189, i32 204, i32 202, i32 223, i32 154, i32 68, i32 126, i32 157, i32 202, i32 137, i32 109, i32 191, i32 39, i32 194, i32 248, i32 205, i32 70, i32 0, i32 43, i32 181, i32 88, i32 78, i32 183, i32 137, i32 9, i32 233, i32 45, i32 64, i32 123, i32 119, i32 87, i32 73, i32 158, i32 128, i32 57, i32 35, i32 238, i32 129, i32 11, i32 34, i32 207, i32 219, i32 122, i32 47, i32 20, i32 184, i32 87, i32 143, i32 161, i32 57, i32 30, i32 119, i32 252, i32 11, i32 166, i32 191, i32 138, i32 12, i32 108, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 197, i32 8, i32 164, i32 43, i32 47, i32 189, i32 49, i32 129, i32 42, i32 166, i32 182, i32 228, i32 0, i32 145, i32 218, i32 61, i32 178, i32 176, i32 150, i32 206, i32 138, i32 210, i32 141, i32 112, i32 179, i32 211, i32 52, i32 1, i32 144, i32 141, i32 16, i32 33, i32 2, i32 12, i32 194, i32 175, i32 150, i32 54, i32 254, i32 74, i32 226, i32 84, i32 32, i32 106, i32 235, i32 178, i32 159, i32 98, i32 215, i32 206, i32 162, i32 63, i32 32, i32 17, i32 52, i32 55, i32 224, i32 66, i32 237, i32 111, i32 249, i32 26, i32 200, i32 125, i32 97, i32 54, i32 214, i32 8, i32 144, i32 191, i32 167, i32 122, i32 151, i32 108, i32 15, i32 132, i32 213, i32 51, i32 45, i32 55, i32 201, i32 106, i32 128, i32 144, i32 61, i32 10, i32 162, i32 170, i32 225, i32 184, i32 132, i32 186, i32 97, i32 54, i32 221, i32 105, i32 150, i32 243, i32 58, i32 9, i32 86, i32 176, i32 111, i32 124, i32 81, i32 30, i32 27, i32 57, i32 72, i32 234, i32 201, i32 12, i32 37, i32 162, i32 122, i32 202, i32 231, i32 146, i32 252, i32 89, i32 48, i32 163, i32 137, i32 133, i32 223, i32 111, i32 67, i32 56, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 144, i32 80, i32 175, i32 99, i32 95, i32 157, i32 158, i32 225, i32 157, i32 56, i32 151, i32 31, i32 108, i32 172, i32 48, i32 70, i32 178, i32 106, i32 25, i32 209, i32 75, i32 219, i32 187, i32 140, i32 218, i32 46, i32 171, i32 200, i32 90, i32 119, i32 108, i32 118, i32 10, i32 218, i32 141, i32 44, i32 7, i32 63, i32 137, i32 125, i32 4, i32 173, i32 67, i32 80, i32 110, i32 210, i32 71, i32 203, i32 138, i32 230, i32 133, i32 26, i32 36, i32 243, i32 210, i32 96, i32 253, i32 223, i32 115, i32 164, i32 13, i32 115, i32 14, i32 93, i32 4, i32 179, i32 64, i32 40, i32 149, i32 45, i32 48, i32 131, i32 236, i32 94, i32 228, i32 255, i32 117, i32 254, i32 121, i32 38, i32 157, i32 29, i32 54, i32 205, i32 10, i32 21, i32 210, i32 36, i32 20, i32 119, i32 113, i32 215, i32 138, i32 27, i32 4, i32 13, i32 130, i32 185, i32 254, i32 33, i32 205, i32 196, i32 245, i32 152, i32 12, i32 78, i32 114, i32 238, i32 135, i32 73, i32 248, i32 161, i32 149, i32 223, i32 143, i32 45, i32 189, i32 33, i32 6, i32 124, i32 21, i32 232, i32 18, i32 109, i32 147, i32 214, i32 56, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 96, i32 213, i32 34, i32 131, i32 8, i32 47, i32 255, i32 153, i32 62, i32 105, i32 109, i32 136, i32 218, i32 231, i32 91, i32 82, i32 38, i32 49, i32 42, i32 229, i32 137, i32 222, i32 104, i32 144, i32 182, i32 34, i32 90, i32 189, i32 211, i32 133, i32 83, i32 49, i32 130, i32 231, i32 246, i32 186, i32 83, i32 132, i32 10, i32 163, i32 52, i32 255, i32 60, i32 163, i32 106, i32 161, i32 55, i32 234, i32 221, i32 182, i32 149, i32 179, i32 120, i32 25, i32 118, i32 30, i32 85, i32 47, i32 119, i32 46, i32 127, i32 193, i32 234, i32 94, i32 186, i32 56, i32 2, i32 247, i32 129, i32 67, i32 131, i32 163, i32 32, i32 79, i32 1, i32 59, i32 138, i32 4, i32 56, i32 49, i32 198, i32 15, i32 200, i32 223, i32 215, i32 250, i32 47, i32 136, i32 63, i32 252, i32 12, i32 118, i32 196, i32 166, i32 69, i32 114, i32 26, i32 185, i32 201, i32 16, i32 251, i32 30, i32 78, i32 244, i32 132, i32 75, i32 138, i32 94, i32 123, i32 75, i32 232, i32 67, i32 140, i32 143, i32 0, i32 181, i32 84, i32 19, i32 197, i32 92, i32 182, i32 53, i32 78, i32 157, i32 228, i32 91, i32 65, i32 109, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 203, i32 119, i32 154, i32 32, i32 222, i32 184, i32 35, i32 217, i32 160, i32 15, i32 140, i32 123, i32 165, i32 203, i32 174, i32 182, i32 236, i32 66, i32 103, i32 14, i32 88, i32 164, i32 117, i32 152, i32 33, i32 113, i32 132, i32 179, i32 224, i32 118, i32 148, i32 115, i32 217, i32 129, i32 218, i32 178, i32 79, i32 130, i32 157, i32 67, i32 129, i32 9, i32 241, i32 210, i32 1, i32 239, i32 172, i32 244, i32 45, i32 125, i32 1, i32 9, i32 241, i32 255, i32 165, i32 159, i32 229, i32 202, i32 39, i32 99, i32 219, i32 32, i32 177, i32 83, i32 50, i32 251, i32 134, i32 236, i32 51, i32 107, i32 46, i32 81, i32 43, i32 200, i32 250, i32 108, i32 112, i32 71, i32 126, i32 206, i32 5, i32 12, i32 113, i32 243, i32 180, i32 86, i32 166, i32 220, i32 204, i32 120, i32 7, i32 117, i32 208, i32 221, i32 178, i32 106, i32 69, i32 98, i32 29, i32 46, i32 255, i32 42, i32 28, i32 33, i32 164, i32 37, i32 123, i32 13, i32 140, i32 21, i32 57, i32 252, i32 143, i32 124, i32 165, i32 125, i32 30, i32 37, i32 163, i32 69, i32 214, i32 171, i32 189, i32 203, i32 197, i32 94, i32 120, i32 119, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 210, i32 12, i32 136, i32 197, i32 72, i32 77, i32 234, i32 13, i32 74, i32 201, i32 82, i32 106, i32 97, i32 121, i32 233, i32 118, i32 243, i32 133, i32 82, i32 92, i32 27, i32 44, i32 225, i32 214, i32 196, i32 15, i32 24, i32 14, i32 78, i32 246, i32 28, i32 127, i32 232, i32 104, i32 202, i32 68, i32 200, i32 56, i32 56, i32 204, i32 83, i32 10, i32 50, i32 53, i32 204, i32 82, i32 203, i32 14, i32 247, i32 197, i32 231, i32 236, i32 61, i32 133, i32 204, i32 88, i32 226, i32 23, i32 71, i32 255, i32 159, i32 165, i32 48, i32 23, i32 76, i32 230, i32 176, i32 193, i32 165, i32 42, i32 130, i32 9, i32 8, i32 173, i32 121, i32 156, i32 86, i32 246, i32 249, i32 193, i32 215, i32 124, i32 57, i32 127, i32 147, i32 202, i32 17, i32 85, i32 191, i32 7, i32 27, i32 130, i32 41, i32 105, i32 149, i32 92, i32 115, i32 76, i32 182, i32 197, i32 196, i32 233, i32 108, i32 133, i32 72, i32 74, i32 90, i32 172, i32 217, i32 31, i32 67, i32 248, i32 98, i32 91, i32 238, i32 152, i32 42, i32 51, i32 142, i32 121, i32 206, i32 97, i32 6, i32 53, i32 216, i32 215, i32 202, i32 113, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 123, i32 110, i32 42, i32 210, i32 135, i32 72, i32 255, i32 161, i32 202, i32 233, i32 21, i32 133, i32 220, i32 219, i32 44, i32 57, i32 18, i32 145, i32 169, i32 32, i32 170, i32 79, i32 41, i32 244, i32 21, i32 122, i32 210, i32 245, i32 50, i32 204, i32 96, i32 4, i32 90, i32 99, i32 103, i32 225, i32 155, i32 71, i32 120, i32 159, i32 56, i32 121, i32 172, i32 151, i32 102, i32 29, i32 94, i32 81, i32 238, i32 36, i32 66, i32 232, i32 88, i32 75, i32 138, i32 3, i32 117, i32 134, i32 55, i32 134, i32 226, i32 151, i32 78, i32 61, i32 187, i32 64, i32 94, i32 188, i32 22, i32 146, i32 5, i32 196, i32 192, i32 78, i32 114, i32 144, i32 14, i32 171, i32 207, i32 138, i32 237, i32 239, i32 185, i32 45, i32 59, i32 248, i32 67, i32 91, i32 186, i32 45, i32 235, i32 47, i32 82, i32 210, i32 209, i32 90, i32 84, i32 220, i32 22, i32 13, i32 24, i32 190, i32 53, i32 100, i32 97, i32 82, i32 2, i32 128, i32 175, i32 5, i32 247, i32 166, i32 66, i32 211, i32 143, i32 46, i32 121, i32 38, i32 168, i32 187, i32 178, i32 23, i32 72, i32 178, i32 122, i32 10, i32 137, i32 20, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 51, i32 124, i32 231, i32 38, i32 186, i32 77, i32 50, i32 254, i32 83, i32 244, i32 250, i32 131, i32 227, i32 165, i32 121, i32 102, i32 115, i32 239, i32 128, i32 35, i32 104, i32 194, i32 96, i32 221, i32 169, i32 51, i32 220, i32 3, i32 122, i32 224, i32 224, i32 62, i32 185, i32 232, i32 197, i32 18, i32 151, i32 31, i32 131, i32 254, i32 62, i32 148, i32 153, i32 212, i32 45, i32 249, i32 82, i32 89, i32 92, i32 130, i32 166, i32 240, i32 117, i32 126, i32 232, i32 236, i32 204, i32 172, i32 24, i32 33, i32 9, i32 103, i32 102, i32 103, i32 110, i32 68, i32 163, i32 249, i32 100, i32 175, i32 231, i32 109, i32 125, i32 223, i32 30, i32 172, i32 4, i32 234, i32 59, i32 95, i32 155, i32 232, i32 36, i32 157, i32 14, i32 229, i32 46, i32 62, i32 223, i32 169, i32 247, i32 212, i32 80, i32 113, i32 240, i32 120, i32 195, i32 241, i32 167, i32 109, i32 179, i32 95, i32 146, i32 111, i32 204, i32 145, i32 184, i32 149, i32 5, i32 223, i32 60, i32 100, i32 87, i32 57, i32 97, i32 81, i32 173, i32 140, i32 56, i32 123, i32 200, i32 222, i32 0, i32 52, i32 190, i32 161, i32 176, i32 126, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 78, i32 238, i32 28, i32 145, i32 230, i32 17, i32 189, i32 142, i32 85, i32 26, i32 24, i32 117, i32 102, i32 175, i32 77, i32 123, i32 15, i32 174, i32 109, i32 133, i32 202, i32 130, i32 88, i32 33, i32 156, i32 24, i32 224, i32 237, i32 236, i32 34, i32 128, i32 47, i32 36, i32 246, i32 90, i32 68, i32 241, i32 85, i32 44, i32 219, i32 234, i32 124, i32 132, i32 124, i32 1, i32 172, i32 227, i32 253, i32 201, i32 39, i32 193, i32 90, i32 185, i32 222, i32 79, i32 90, i32 144, i32 221, i32 198, i32 103, i32 170, i32 111, i32 138, i32 58, i32 161, i32 12, i32 243, i32 8, i32 67, i32 217, i32 36, i32 30, i32 131, i32 167, i32 223, i32 145, i32 202, i32 189, i32 105, i32 71, i32 141, i32 27, i32 226, i32 185, i32 78, i32 181, i32 225, i32 118, i32 179, i32 28, i32 147, i32 3, i32 206, i32 95, i32 179, i32 90, i32 206, i32 114, i32 14, i32 41, i32 132, i32 178, i32 125, i32 210, i32 69, i32 190, i32 87, i32 6, i32 237, i32 127, i32 207, i32 237, i32 205, i32 239, i32 25, i32 214, i32 188, i32 21, i32 121, i32 100, i32 210, i32 24, i32 227, i32 32, i32 103, i32 58, i32 84, i32 11, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 150, i32 17, i32 65, i32 138, i32 71, i32 145, i32 254, i32 182, i32 218, i32 122, i32 84, i32 99, i32 209, i32 20, i32 53, i32 5, i32 134, i32 140, i32 169, i32 54, i32 63, i32 242, i32 133, i32 84, i32 78, i32 146, i32 216, i32 133, i32 1, i32 70, i32 214, i32 80, i32 112, i32 131, i32 71, i32 192, i32 219, i32 85, i32 8, i32 168, i32 123, i32 24, i32 109, i32 245, i32 4, i32 90, i32 32, i32 12, i32 74, i32 140, i32 96, i32 174, i32 174, i32 15, i32 100, i32 85, i32 85, i32 46, i32 213, i32 29, i32 83, i32 49, i32 66, i32 65, i32 147, i32 28, i32 6, i32 45, i32 102, i32 101, i32 2, i32 164, i32 151, i32 24, i32 253, i32 0, i32 231, i32 171, i32 3, i32 236, i32 206, i32 193, i32 191, i32 55, i32 248, i32 19, i32 83, i32 165, i32 229, i32 12, i32 58, i32 168, i32 85, i32 185, i32 255, i32 104, i32 226, i32 60, i32 118, i32 134, i32 56, i32 242, i32 123, i32 44, i32 22, i32 120, i32 141, i32 245, i32 164, i32 21, i32 218, i32 219, i32 38, i32 133, i32 160, i32 86, i32 221, i32 29, i32 227, i32 179, i32 253, i32 64, i32 239, i32 242, i32 217, i32 161, i32 179, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 169, i32 234, i32 109, i32 22, i32 22, i32 96, i32 244, i32 96, i32 135, i32 25, i32 68, i32 140, i32 74, i32 139, i32 62, i32 251, i32 22, i32 0, i32 0, i32 84, i32 166, i32 158, i32 159, i32 239, i32 207, i32 217, i32 210, i32 76, i32 116, i32 49, i32 208, i32 52, i32 229, i32 103, i32 12, i32 241, i32 58, i32 154, i32 234, i32 9, i32 57, i32 239, i32 209, i32 48, i32 188, i32 51, i32 186, i32 177, i32 106, i32 197, i32 39, i32 8, i32 127, i32 84, i32 128, i32 61, i32 171, i32 246, i32 21, i32 122, i32 194, i32 64, i32 115, i32 114, i32 176, i32 139, i32 170, i32 30, i32 236, i32 199, i32 165, i32 143, i32 31, i32 146, i32 4, i32 198, i32 5, i32 246, i32 223, i32 161, i32 204, i32 31, i32 129, i32 245, i32 14, i32 156, i32 87, i32 220, i32 227, i32 187, i32 6, i32 135, i32 30, i32 254, i32 35, i32 108, i32 204, i32 25, i32 218, i32 155, i32 59, i32 67, i32 72, i32 33, i32 46, i32 35, i32 77, i32 61, i32 174, i32 248, i32 140, i32 252, i32 221, i32 166, i32 116, i32 55, i32 101, i32 202, i32 238, i32 26, i32 25, i32 142, i32 159, i32 100, i32 111, i32 12, i32 139, i32 90, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 248, i32 171, i32 147, i32 188, i32 68, i32 186, i32 27, i32 117, i32 75, i32 73, i32 111, i32 208, i32 84, i32 46, i32 99, i32 186, i32 181, i32 234, i32 237, i32 50, i32 20, i32 201, i32 148, i32 216, i32 197, i32 206, i32 244, i32 16, i32 104, i32 224, i32 56, i32 39, i32 245, i32 118, i32 253, i32 228, i32 175, i32 185, i32 3, i32 89, i32 206, i32 99, i32 210, i32 59, i32 31, i32 205, i32 33, i32 12, i32 173, i32 68, i32 165, i32 151, i32 172, i32 128, i32 17, i32 2, i32 155, i32 12, i32 229, i32 139, i32 205, i32 251, i32 121, i32 119, i32 108, i32 186, i32 20, i32 197, i32 234, i32 18, i32 158, i32 46, i32 130, i32 99, i32 206, i32 155, i32 74, i32 231, i32 29, i32 236, i32 241, i32 46, i32 81, i32 28, i32 244, i32 208, i32 105, i32 21, i32 66, i32 157, i32 163, i32 63, i32 14, i32 191, i32 233, i32 92, i32 17, i32 164, i32 136, i32 159, i32 62, i32 83, i32 105, i32 59, i32 27, i32 224, i32 247, i32 186, i32 155, i32 173, i32 78, i32 129, i32 95, i32 181, i32 92, i32 174, i32 190, i32 103, i32 134, i32 55, i32 52, i32 142, i32 7, i32 50, i32 69, i32 74, i32 103, i32 57, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 129, i32 252, i32 85, i32 92, i32 191, i32 167, i32 196, i32 189, i32 226, i32 240, i32 75, i32 143, i32 233, i32 125, i32 153, i32 250, i32 211, i32 171, i32 188, i32 199, i32 131, i32 43, i32 4, i32 127, i32 12, i32 25, i32 67, i32 3, i32 61, i32 7, i32 202, i32 64, i32 7, i32 181, i32 46, i32 44, i32 103, i32 21, i32 155, i32 251, i32 131, i32 105, i32 30, i32 15, i32 218, i32 214, i32 41, i32 177, i32 96, i32 224, i32 178, i32 186, i32 105, i32 162, i32 158, i32 189, i32 189, i32 224, i32 28, i32 189, i32 205, i32 6, i32 100, i32 112, i32 23, i32 98, i32 107, i32 20, i32 161, i32 124, i32 208, i32 121, i32 110, i32 216, i32 138, i32 165, i32 109, i32 140, i32 147, i32 210, i32 63, i32 236, i32 68, i32 141, i32 110, i32 145, i32 1, i32 140, i32 143, i32 238, i32 1, i32 143, i32 192, i32 180, i32 133, i32 14, i32 127, i32 0, i32 156, i32 38, i32 13, i32 111, i32 72, i32 127, i32 58, i32 1, i32 237, i32 197, i32 150, i32 176, i32 31, i32 79, i32 168, i32 2, i32 98, i32 39, i32 138, i32 80, i32 141, i32 154, i32 139, i32 82, i32 15, i32 30, i32 207, i32 65, i32 56, i32 25, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 52, i32 31, i32 46, i32 172, i32 209, i32 199, i32 4, i32 82, i32 50, i32 102, i32 178, i32 51, i32 115, i32 33, i32 52, i32 84, i32 247, i32 113, i32 237, i32 6, i32 176, i32 255, i32 166, i32 89, i32 111, i32 138, i32 78, i32 251, i32 2, i32 176, i32 69, i32 107, i32 170, i32 53, i32 135, i32 68, i32 99, i32 102, i32 151, i32 248, i32 110, i32 85, i32 12, i32 4, i32 62, i32 53, i32 80, i32 191, i32 147, i32 105, i32 210, i32 139, i32 5, i32 85, i32 153, i32 190, i32 226, i32 83, i32 97, i32 236, i32 232, i32 8, i32 11, i32 50, i32 221, i32 181, i32 125, i32 171, i32 90, i32 33, i32 65, i32 83, i32 187, i32 23, i32 121, i32 13, i32 209, i32 168, i32 12, i32 12, i32 32, i32 136, i32 9, i32 233, i32 132, i32 232, i32 37, i32 17, i32 103, i32 122, i32 139, i32 26, i32 228, i32 93, i32 225, i32 93, i32 224, i32 181, i32 0, i32 29, i32 42, i32 111, i32 175, i32 121, i32 134, i32 47, i32 166, i32 90, i32 147, i32 209, i32 254, i32 174, i32 58, i32 238, i32 219, i32 124, i32 97, i32 190, i32 124, i32 1, i32 249, i32 254, i32 82, i32 220, i32 216, i32 82, i32 163, i32 66, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 137, i32 249, i32 128, i32 7, i32 207, i32 63, i32 179, i32 233, i32 231, i32 69, i32 68, i32 61, i32 42, i32 124, i32 233, i32 228, i32 22, i32 92, i32 94, i32 101, i32 28, i32 199, i32 125, i32 198, i32 122, i32 251, i32 67, i32 238, i32 37, i32 118, i32 70, i32 114, i32 19, i32 83, i32 228, i32 130, i32 87, i32 250, i32 30, i32 143, i32 6, i32 43, i32 144, i32 186, i32 8, i32 182, i32 16, i32 84, i32 79, i32 124, i32 27, i32 38, i32 237, i32 218, i32 107, i32 221, i32 37, i32 208, i32 78, i32 234, i32 66, i32 187, i32 37, i32 3, i32 13, i32 172, i32 102, i32 109, i32 195, i32 139, i32 186, i32 22, i32 181, i32 226, i32 160, i32 13, i32 12, i32 189, i32 164, i32 142, i32 24, i32 108, i32 242, i32 220, i32 249, i32 220, i32 74, i32 134, i32 37, i32 149, i32 20, i32 203, i32 216, i32 26, i32 4, i32 15, i32 238, i32 201, i32 41, i32 15, i32 223, i32 17, i32 133, i32 237, i32 206, i32 13, i32 98, i32 44, i32 143, i32 75, i32 249, i32 4, i32 233, i32 6, i32 114, i32 29, i32 55, i32 32, i32 80, i32 201, i32 20, i32 235, i32 236, i32 57, i32 167, i32 151, i32 43, i32 77, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 23, i32 164, i32 25, i32 82, i32 17, i32 71, i32 179, i32 92, i32 91, i32 169, i32 46, i32 34, i32 180, i32 0, i32 82, i32 249, i32 87, i32 24, i32 184, i32 190, i32 90, i32 227, i32 171, i32 131, i32 200, i32 135, i32 10, i32 42, i32 216, i32 140, i32 187, i32 84, i32 197, i32 150, i32 202, i32 200, i32 34, i32 26, i32 238, i32 95, i32 231, i32 49, i32 96, i32 34, i32 131, i32 8, i32 99, i32 206, i32 185, i32 50, i32 68, i32 88, i32 93, i32 58, i32 155, i32 228, i32 4, i32 213, i32 239, i32 56, i32 239, i32 75, i32 221, i32 25, i32 32, i32 214, i32 216, i32 145, i32 84, i32 167, i32 243, i32 32, i32 75, i32 52, i32 6, i32 250, i32 48, i32 200, i32 111, i32 20, i32 16, i32 101, i32 116, i32 19, i32 78, i32 240, i32 105, i32 38, i32 206, i32 207, i32 144, i32 244, i32 208, i32 197, i32 200, i32 100, i32 37, i32 207, i32 116, i32 85, i32 27, i32 170, i32 169, i32 56, i32 65, i32 64, i32 213, i32 149, i32 149, i32 171, i32 28, i32 94, i32 188, i32 65, i32 126, i32 20, i32 48, i32 190, i32 19, i32 137, i32 244, i32 229, i32 235, i32 40, i32 192, i32 194, i32 150, i32 58, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 132, i32 173, i32 12, i32 24, i32 56, i32 90, i32 186, i32 208, i32 152, i32 89, i32 191, i32 55, i32 176, i32 79, i32 151, i32 96, i32 32, i32 179, i32 155, i32 151, i32 246, i32 8, i32 108, i32 164, i32 255, i32 251, i32 183, i32 250, i32 149, i32 178, i32 81, i32 121, i32 213, i32 197, i32 195, i32 154, i32 10, i32 208, i32 49, i32 62, i32 7, i32 54, i32 142, i32 192, i32 138, i32 98, i32 177, i32 202, i32 214, i32 14, i32 30, i32 157, i32 239, i32 171, i32 152, i32 77, i32 187, i32 108, i32 5, i32 224, i32 228, i32 93, i32 189, i32 87, i32 169, i32 133, i32 244, i32 231, i32 176, i32 21, i32 51, i32 132, i32 27, i32 20, i32 26, i32 2, i32 217, i32 59, i32 173, i32 15, i32 67, i32 108, i32 234, i32 62, i32 15, i32 126, i32 218, i32 221, i32 107, i32 76, i32 127, i32 110, i32 212, i32 107, i32 191, i32 15, i32 45, i32 45, i32 240, i32 27, i32 126, i32 42, i32 108, i32 248, i32 169, i32 106, i32 225, i32 240, i32 153, i32 161, i32 103, i32 154, i32 212, i32 19, i32 202, i32 202, i32 186, i32 39, i32 146, i32 170, i32 161, i32 93, i32 80, i32 222, i32 204, i32 64, i32 38, i32 10, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 25, i32 94, i32 96, i32 105, i32 88, i32 134, i32 160, i32 49, i32 189, i32 50, i32 233, i32 44, i32 92, i32 210, i32 133, i32 186, i32 64, i32 100, i32 168, i32 116, i32 248, i32 14, i32 28, i32 179, i32 169, i32 105, i32 232, i32 30, i32 64, i32 100, i32 153, i32 119, i32 198, i32 54, i32 110, i32 108, i32 140, i32 36, i32 9, i32 96, i32 190, i32 38, i32 210, i32 76, i32 94, i32 23, i32 202, i32 95, i32 29, i32 204, i32 135, i32 232, i32 66, i32 106, i32 203, i32 203, i32 125, i32 146, i32 5, i32 53, i32 129, i32 19, i32 96, i32 107, i32 202, i32 89, i32 116, i32 26, i32 17, i32 239, i32 109, i32 247, i32 57, i32 92, i32 59, i32 31, i32 250, i32 227, i32 64, i32 65, i32 35, i32 158, i32 246, i32 209, i32 33, i32 162, i32 191, i32 173, i32 101, i32 66, i32 107, i32 89, i32 138, i32 232, i32 197, i32 127, i32 123, i32 47, i32 58, i32 206, i32 200, i32 161, i32 121, i32 60, i32 48, i32 18, i32 68, i32 40, i32 246, i32 188, i32 255, i32 253, i32 244, i32 192, i32 151, i32 176, i32 204, i32 195, i32 19, i32 122, i32 185, i32 154, i32 22, i32 228, i32 203, i32 76, i32 52, i32 99, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 36, i32 137, i32 122, i32 143, i32 181, i32 155, i32 240, i32 194, i32 3, i32 100, i32 208, i32 30, i32 245, i32 164, i32 178, i32 243, i32 116, i32 233, i32 26, i32 22, i32 253, i32 203, i32 21, i32 234, i32 235, i32 16, i32 108, i32 53, i32 209, i32 193, i32 166, i32 40, i32 187, i32 168, i32 225, i32 137, i32 112, i32 87, i32 24, i32 84, i32 60, i32 246, i32 13, i32 130, i32 18, i32 5, i32 135, i32 150, i32 6, i32 57, i32 227, i32 248, i32 179, i32 149, i32 229, i32 215, i32 38, i32 191, i32 9, i32 90, i32 148, i32 249, i32 28, i32 99, i32 25, i32 166, i32 90, i32 101, i32 147, i32 195, i32 181, i32 49, i32 34, i32 79, i32 243, i32 246, i32 15, i32 235, i32 40, i32 195, i32 124, i32 235, i32 206, i32 134, i32 236, i32 103, i32 118, i32 110, i32 53, i32 69, i32 123, i32 216, i32 107, i32 146, i32 1, i32 101, i32 197, i32 189, i32 200, i32 20, i32 213, i32 13, i32 235, i32 225, i32 165, i32 230, i32 131, i32 17, i32 9, i32 0, i32 29, i32 85, i32 131, i32 81, i32 126, i32 117, i32 0, i32 129, i32 185, i32 203, i32 216, i32 197, i32 229, i32 161, i32 217, i32 23, i32 109, i32 31, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 58, i32 187, i32 57, i32 237, i32 50, i32 2, i32 231, i32 67, i32 122, i32 56, i32 20, i32 132, i32 227, i32 68, i32 210, i32 94, i32 148, i32 221, i32 120, i32 137, i32 85, i32 76, i32 115, i32 158, i32 225, i32 228, i32 62, i32 67, i32 208, i32 74, i32 222, i32 27, i32 36, i32 123, i32 147, i32 52, i32 181, i32 226, i32 116, i32 72, i32 205, i32 160, i32 11, i32 146, i32 151, i32 102, i32 57, i32 244, i32 176, i32 226, i32 93, i32 57, i32 106, i32 91, i32 69, i32 23, i32 120, i32 30, i32 219, i32 145, i32 129, i32 28, i32 249, i32 22, i32 70, i32 218, i32 158, i32 81, i32 58, i32 230, i32 209, i32 166, i32 187, i32 77, i32 123, i32 8, i32 190, i32 140, i32 213, i32 243, i32 63, i32 253, i32 247, i32 68, i32 128, i32 45, i32 83, i32 75, i32 208, i32 135, i32 104, i32 193, i32 181, i32 216, i32 247, i32 7, i32 250, i32 68, i32 113, i32 246, i32 65, i32 216, i32 198, i32 88, i32 19, i32 55, i32 235, i32 132, i32 15, i32 150, i32 199, i32 220, i32 200, i32 169, i32 122, i32 131, i32 178, i32 47, i32 49, i32 177, i32 26, i32 216, i32 152, i32 63, i32 17, i32 208, i32 49, i32 59, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 26, i32 207, i32 66, i32 174, i32 204, i32 181, i32 119, i32 57, i32 196, i32 91, i32 91, i32 208, i32 38, i32 89, i32 39, i32 208, i32 85, i32 113, i32 18, i32 157, i32 136, i32 61, i32 156, i32 234, i32 65, i32 106, i32 240, i32 80, i32 147, i32 147, i32 221, i32 71, i32 220, i32 57, i32 50, i32 243, i32 161, i32 68, i32 233, i32 197, i32 195, i32 120, i32 251, i32 149, i32 71, i32 52, i32 53, i32 52, i32 232, i32 37, i32 222, i32 147, i32 198, i32 180, i32 118, i32 109, i32 134, i32 19, i32 198, i32 233, i32 104, i32 181, i32 1, i32 99, i32 19, i32 168, i32 130, i32 62, i32 233, i32 19, i32 173, i32 235, i32 1, i32 202, i32 207, i32 218, i32 205, i32 247, i32 108, i32 199, i32 122, i32 220, i32 30, i32 110, i32 200, i32 78, i32 85, i32 98, i32 128, i32 234, i32 120, i32 12, i32 134, i32 185, i32 64, i32 81, i32 195, i32 186, i32 18, i32 83, i32 42, i32 170, i32 119, i32 173, i32 25, i32 120, i32 85, i32 138, i32 46, i32 96, i32 135, i32 194, i32 110, i32 145, i32 56, i32 145, i32 63, i32 122, i32 197, i32 36, i32 143, i32 81, i32 197, i32 222, i32 176, i32 83, i32 48, i32 86, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 30, i32 100, i32 193, i32 125, i32 82, i32 220, i32 19, i32 90, i32 161, i32 156, i32 78, i32 238, i32 153, i32 40, i32 187, i32 76, i32 238, i32 172, i32 169, i32 27, i32 137, i32 162, i32 56, i32 57, i32 123, i32 196, i32 15, i32 66, i32 230, i32 137, i32 237, i32 15, i32 98, i32 238, i32 117, i32 72, i32 146, i32 51, i32 242, i32 244, i32 173, i32 21, i32 122, i32 161, i32 1, i32 70, i32 169, i32 50, i32 6, i32 136, i32 182, i32 54, i32 71, i32 53, i32 185, i32 180, i32 66, i32 133, i32 118, i32 240, i32 72, i32 0, i32 144, i32 56, i32 231, i32 41, i32 249, i32 55, i32 217, i32 70, i32 90, i32 205, i32 112, i32 254, i32 77, i32 91, i32 191, i32 165, i32 207, i32 145, i32 244, i32 239, i32 238, i32 138, i32 41, i32 208, i32 231, i32 196, i32 37, i32 146, i32 138, i32 255, i32 54, i32 252, i32 228, i32 73, i32 143, i32 161, i32 206, i32 203, i32 96, i32 218, i32 18, i32 2, i32 30, i32 41, i32 57, i32 42, i32 3, i32 183, i32 235, i32 119, i32 64, i32 234, i32 201, i32 43, i32 44, i32 213, i32 125, i32 126, i32 44, i32 199, i32 90, i32 253, i32 255, i32 196, i32 209, i32 98, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 47, i32 97, i32 159, i32 215, i32 168, i32 63, i32 131, i32 140, i32 16, i32 105, i32 144, i32 230, i32 207, i32 210, i32 99, i32 163, i32 228, i32 84, i32 126, i32 229, i32 105, i32 19, i32 28, i32 144, i32 87, i32 170, i32 233, i32 83, i32 34, i32 67, i32 41, i32 35, i32 142, i32 78, i32 159, i32 37, i32 248, i32 129, i32 84, i32 45, i32 14, i32 213, i32 84, i32 129, i32 155, i32 166, i32 146, i32 206, i32 75, i32 233, i32 143, i32 36, i32 59, i32 202, i32 224, i32 68, i32 171, i32 54, i32 254, i32 251, i32 135, i32 212, i32 38, i32 62, i32 245, i32 255, i32 204, i32 240, i32 180, i32 18, i32 3, i32 95, i32 201, i32 132, i32 203, i32 29, i32 23, i32 224, i32 188, i32 204, i32 3, i32 98, i32 169, i32 139, i32 148, i32 166, i32 170, i32 24, i32 203, i32 39, i32 141, i32 73, i32 166, i32 23, i32 21, i32 7, i32 59, i32 191, i32 85, i32 53, i32 97, i32 139, i32 68, i32 151, i32 232, i32 58, i32 85, i32 193, i32 200, i32 59, i32 253, i32 149, i32 41, i32 17, i32 96, i32 150, i32 30, i32 203, i32 17, i32 157, i32 194, i32 3, i32 138, i32 27, i32 198, i32 214, i32 69, i32 61, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 200, i32 177, i32 27, i32 111, i32 115, i32 97, i32 61, i32 39, i32 13, i32 125, i32 122, i32 37, i32 95, i32 115, i32 14, i32 47, i32 147, i32 246, i32 36, i32 216, i32 79, i32 144, i32 172, i32 162, i32 98, i32 10, i32 240, i32 97, i32 217, i32 8, i32 89, i32 106, i32 211, i32 118, i32 105, i32 51, i32 123, i32 185, i32 64, i32 112, i32 238, i32 166, i32 41, i32 107, i32 221, i32 208, i32 93, i32 141, i32 193, i32 62, i32 74, i32 234, i32 55, i32 177, i32 3, i32 2, i32 3, i32 53, i32 241, i32 40, i32 157, i32 255, i32 0, i32 19, i32 141, i32 166, i32 213, i32 172, i32 157, i32 204, i32 104, i32 117, i32 127, i32 195, i32 77, i32 75, i32 221, i32 108, i32 187, i32 17, i32 90, i32 96, i32 229, i32 189, i32 125, i32 39, i32 139, i32 218, i32 180, i32 149, i32 246, i32 3, i32 39, i32 164, i32 146, i32 63, i32 121, i32 252, i32 166, i32 180, i32 11, i32 53, i32 32, i32 201, i32 77, i32 34, i32 132, i32 196, i32 169, i32 32, i32 236, i32 137, i32 148, i32 186, i32 102, i32 86, i32 72, i32 185, i32 135, i32 127, i32 202, i32 30, i32 6, i32 237, i32 165, i32 85, i32 89, i32 41, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 31, i32 104, i32 118, i32 1, i32 22, i32 56, i32 43, i32 15, i32 119, i32 151, i32 146, i32 103, i32 78, i32 134, i32 106, i32 139, i32 229, i32 232, i32 12, i32 247, i32 54, i32 57, i32 181, i32 51, i32 230, i32 207, i32 94, i32 189, i32 24, i32 251, i32 16, i32 31, i32 51, i32 21, i32 215, i32 127, i32 26, i32 213, i32 33, i32 88, i32 196, i32 24, i32 165, i32 240, i32 204, i32 115, i32 168, i32 253, i32 250, i32 24, i32 209, i32 3, i32 145, i32 141, i32 82, i32 210, i32 163, i32 164, i32 211, i32 177, i32 234, i32 29, i32 15, i32 0, i32 245, i32 26, i32 97, i32 247, i32 55, i32 157, i32 0, i32 244, i32 242, i32 105, i32 111, i32 75, i32 1, i32 133, i32 25, i32 69, i32 77, i32 127, i32 2, i32 124, i32 106, i32 5, i32 71, i32 108, i32 31, i32 129, i32 32, i32 212, i32 232, i32 80, i32 39, i32 114, i32 7, i32 104, i32 33, i32 101, i32 233, i32 8, i32 160, i32 11, i32 106, i32 74, i32 186, i32 181, i32 128, i32 175, i32 208, i32 27, i32 197, i32 245, i32 75, i32 115, i32 80, i32 96, i32 45, i32 113, i32 105, i32 97, i32 14, i32 192, i32 32, i32 64, i32 48, i32 25, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 193, i32 58, i32 134, i32 215, i32 176, i32 6, i32 132, i32 127, i32 27, i32 189, i32 212, i32 7, i32 120, i32 128, i32 46, i32 177, i32 180, i32 238, i32 82, i32 56, i32 238, i32 154, i32 249, i32 246, i32 243, i32 65, i32 110, i32 212, i32 136, i32 149, i32 172, i32 53, i32 232, i32 57, i32 48, i32 119, i32 35, i32 177, i32 253, i32 27, i32 61, i32 62, i32 116, i32 77, i32 127, i32 174, i32 91, i32 58, i32 180, i32 101, i32 14, i32 58, i32 67, i32 220, i32 220, i32 65, i32 71, i32 230, i32 232, i32 146, i32 9, i32 34, i32 72, i32 76, i32 52, i32 233, i32 89, i32 147, i32 157, i32 38, i32 128, i32 84, i32 242, i32 204, i32 60, i32 194, i32 37, i32 133, i32 227, i32 106, i32 193, i32 98, i32 4, i32 167, i32 8, i32 50, i32 109, i32 161, i32 57, i32 132, i32 138, i32 59, i32 135, i32 95, i32 17, i32 19, i32 197, i32 55, i32 105, i32 91, i32 168, i32 198, i32 157, i32 164, i32 252, i32 97, i32 110, i32 104, i32 70, i32 234, i32 215, i32 28, i32 103, i32 210, i32 125, i32 250, i32 241, i32 204, i32 84, i32 141, i32 54, i32 53, i32 201, i32 0, i32 223, i32 108, i32 103, i32 80, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 147, i32 51, i32 7, i32 200, i32 74, i32 202, i32 208, i32 177, i32 171, i32 189, i32 221, i32 167, i32 124, i32 172, i32 62, i32 69, i32 203, i32 204, i32 7, i32 145, i32 191, i32 53, i32 157, i32 203, i32 125, i32 18, i32 60, i32 17, i32 89, i32 19, i32 207, i32 92, i32 220, i32 142, i32 235, i32 198, i32 191, i32 221, i32 17, i32 123, i32 231, i32 71, i32 230, i32 206, i32 231, i32 182, i32 197, i32 232, i32 138, i32 220, i32 75, i32 87, i32 21, i32 59, i32 102, i32 202, i32 137, i32 163, i32 253, i32 172, i32 13, i32 225, i32 29, i32 122, i32 139, i32 164, i32 214, i32 80, i32 180, i32 170, i32 93, i32 100, i32 100, i32 118, i32 46, i32 161, i32 166, i32 179, i32 184, i32 124, i32 122, i32 86, i32 245, i32 92, i32 78, i32 132, i32 92, i32 251, i32 221, i32 202, i32 72, i32 139, i32 72, i32 185, i32 186, i32 52, i32 149, i32 176, i32 189, i32 140, i32 188, i32 167, i32 79, i32 126, i32 253, i32 78, i32 58, i32 191, i32 95, i32 4, i32 121, i32 128, i32 43, i32 90, i32 159, i32 79, i32 104, i32 33, i32 25, i32 113, i32 198, i32 32, i32 1, i32 66, i32 170, i32 223, i32 174, i32 44, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 137, i32 102, i32 62, i32 29, i32 76, i32 95, i32 254, i32 192, i32 4, i32 67, i32 214, i32 68, i32 25, i32 181, i32 173, i32 199, i32 34, i32 220, i32 113, i32 40, i32 100, i32 222, i32 65, i32 56, i32 39, i32 143, i32 44, i32 107, i32 8, i32 184, i32 184, i32 123, i32 218, i32 44, i32 164, i32 209, i32 161, i32 195, i32 92, i32 110, i32 50, i32 7, i32 31, i32 184, i32 14, i32 25, i32 158, i32 153, i32 41, i32 51, i32 154, i32 174, i32 122, i32 237, i32 104, i32 66, i32 105, i32 124, i32 7, i32 179, i32 56, i32 44, i32 246, i32 61, i32 66, i32 163, i32 241, i32 197, i32 180, i32 15, i32 216, i32 200, i32 141, i32 21, i32 49, i32 189, i32 248, i32 7, i32 139, i32 205, i32 8, i32 138, i32 251, i32 24, i32 7, i32 254, i32 142, i32 82, i32 134, i32 239, i32 190, i32 236, i32 73, i32 82, i32 153, i32 8, i32 222, i32 33, i32 240, i32 218, i32 138, i32 251, i32 177, i32 184, i32 205, i32 200, i32 106, i32 130, i32 25, i32 115, i32 219, i32 199, i32 207, i32 136, i32 235, i32 150, i32 238, i32 111, i32 251, i32 6, i32 210, i32 205, i32 125, i32 123, i32 18, i32 40, i32 142, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 61, i32 22, i32 53, i32 243, i32 70, i32 188, i32 179, i32 244, i32 198, i32 182, i32 79, i32 250, i32 244, i32 160, i32 19, i32 230, i32 87, i32 69, i32 147, i32 185, i32 188, i32 214, i32 89, i32 231, i32 119, i32 148, i32 108, i32 171, i32 150, i32 59, i32 79, i32 9, i32 38, i32 217, i32 31, i32 92, i32 88, i32 172, i32 139, i32 3, i32 210, i32 195, i32 133, i32 15, i32 58, i32 195, i32 127, i32 109, i32 142, i32 134, i32 205, i32 82, i32 116, i32 143, i32 85, i32 119, i32 23, i32 183, i32 142, i32 183, i32 136, i32 234, i32 218, i32 27, i32 207, i32 232, i32 14, i32 107, i32 150, i32 125, i32 237, i32 39, i32 209, i32 60, i32 169, i32 217, i32 80, i32 169, i32 152, i32 132, i32 94, i32 134, i32 239, i32 214, i32 240, i32 248, i32 14, i32 137, i32 5, i32 47, i32 217, i32 95, i32 21, i32 95, i32 115, i32 121, i32 101, i32 56, i32 160, i32 21, i32 250, i32 167, i32 180, i32 143, i32 235, i32 196, i32 134, i32 155, i32 48, i32 165, i32 94, i32 77, i32 234, i32 138, i32 154, i32 159, i32 26, i32 216, i32 91, i32 83, i32 20, i32 25, i32 37, i32 99, i32 180, i32 111, i32 31, i32 93, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 168, i32 80, i32 225, i32 97, i32 107, i32 87, i32 53, i32 235, i32 68, i32 11, i32 12, i32 110, i32 249, i32 37, i32 128, i32 116, i32 242, i32 143, i32 111, i32 122, i32 62, i32 127, i32 45, i32 243, i32 78, i32 9, i32 101, i32 16, i32 94, i32 3, i32 37, i32 50, i32 150, i32 25, i32 18, i32 107, i32 106, i32 183, i32 227, i32 220, i32 69, i32 155, i32 219, i32 180, i32 168, i32 174, i32 220, i32 168, i32 20, i32 68, i32 101, i32 98, i32 206, i32 52, i32 154, i32 132, i32 24, i32 18, i32 1, i32 241, i32 226, i32 123, i32 206, i32 80, i32 151, i32 103, i32 158, i32 235, i32 106, i32 249, i32 110, i32 214, i32 115, i32 232, i32 107, i32 41, i32 236, i32 99, i32 130, i32 0, i32 168, i32 153, i32 28, i32 29, i32 48, i32 200, i32 144, i32 82, i32 144, i32 182, i32 106, i32 128, i32 78, i32 255, i32 75, i32 81, i32 199, i32 140, i32 191, i32 100, i32 40, i32 173, i32 248, i32 165, i32 90, i32 111, i32 201, i32 186, i32 213, i32 127, i32 213, i32 214, i32 189, i32 102, i32 47, i32 61, i32 170, i32 84, i32 246, i32 186, i32 50, i32 34, i32 154, i32 30, i32 82, i32 5, i32 244, i32 29, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 78, i32 102, i32 207, i32 78, i32 52, i32 206, i32 12, i32 217, i32 166, i32 80, i32 214, i32 94, i32 149, i32 175, i32 233, i32 88, i32 250, i32 238, i32 155, i32 184, i32 165, i32 15, i32 53, i32 224, i32 67, i32 130, i32 109, i32 101, i32 230, i32 217, i32 0, i32 15, i32 14, i32 75, i32 163, i32 99, i32 138, i32 254, i32 165, i32 88, i32 241, i32 19, i32 189, i32 157, i32 170, i32 127, i32 118, i32 64, i32 112, i32 129, i32 16, i32 117, i32 153, i32 187, i32 190, i32 11, i32 22, i32 233, i32 186, i32 98, i32 52, i32 204, i32 7, i32 109, i32 153, i32 235, i32 124, i32 49, i32 115, i32 100, i32 103, i32 127, i32 12, i32 102, i32 170, i32 140, i32 105, i32 145, i32 226, i32 38, i32 211, i32 35, i32 226, i32 118, i32 93, i32 50, i32 82, i32 223, i32 93, i32 197, i32 143, i32 183, i32 124, i32 132, i32 179, i32 112, i32 101, i32 239, i32 184, i32 159, i32 200, i32 75, i32 167, i32 253, i32 33, i32 73, i32 155, i32 146, i32 53, i32 130, i32 214, i32 10, i32 155, i32 242, i32 121, i32 241, i32 71, i32 47, i32 106, i32 126, i32 159, i32 207, i32 24, i32 2, i32 60, i32 251, i32 27, i32 62, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 140, i32 133, i32 43, i32 196, i32 252, i32 241, i32 171, i32 232, i32 121, i32 34, i32 196, i32 132, i32 23, i32 58, i32 250, i32 134, i32 166, i32 125, i32 249, i32 243, i32 111, i32 3, i32 87, i32 32, i32 77, i32 121, i32 249, i32 110, i32 113, i32 84, i32 56, i32 9, i32 198, i32 32, i32 71, i32 108, i32 164, i32 125, i32 203, i32 99, i32 234, i32 91, i32 3, i32 223, i32 62, i32 136, i32 129, i32 109, i32 206, i32 7, i32 66, i32 24, i32 96, i32 126, i32 123, i32 85, i32 254, i32 106, i32 243, i32 218, i32 92, i32 139, i32 149, i32 16, i32 87, i32 130, i32 28, i32 171, i32 191, i32 98, i32 112, i32 232, i32 196, i32 207, i32 240, i32 40, i32 110, i32 22, i32 60, i32 8, i32 120, i32 137, i32 133, i32 70, i32 15, i32 246, i32 127, i32 207, i32 203, i32 126, i32 184, i32 37, i32 233, i32 90, i32 250, i32 3, i32 54, i32 10, i32 194, i32 182, i32 75, i32 165, i32 93, i32 7, i32 23, i32 65, i32 49, i32 95, i32 98, i32 70, i32 248, i32 146, i32 249, i32 102, i32 72, i32 115, i32 166, i32 151, i32 13, i32 125, i32 136, i32 238, i32 98, i32 177, i32 3, i32 168, i32 63, i32 44, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 139, i32 157, i32 182, i32 204, i32 96, i32 180, i32 114, i32 79, i32 23, i32 105, i32 90, i32 74, i32 104, i32 52, i32 171, i32 161, i32 69, i32 50, i32 60, i32 131, i32 135, i32 114, i32 48, i32 84, i32 119, i32 104, i32 174, i32 251, i32 181, i32 139, i32 34, i32 94, i32 102, i32 158, i32 198, i32 36, i32 192, i32 237, i32 165, i32 93, i32 136, i32 212, i32 240, i32 115, i32 151, i32 123, i32 234, i32 127, i32 66, i32 255, i32 33, i32 160, i32 155, i32 47, i32 154, i32 253, i32 83, i32 87, i32 7, i32 132, i32 72, i32 136, i32 157, i32 82, i32 50, i32 101, i32 3, i32 229, i32 137, i32 166, i32 110, i32 179, i32 91, i32 142, i32 202, i32 235, i32 254, i32 34, i32 86, i32 139, i32 93, i32 20, i32 75, i32 77, i32 249, i32 190, i32 181, i32 245, i32 230, i32 92, i32 123, i32 139, i32 244, i32 19, i32 17, i32 52, i32 232, i32 226, i32 0, i32 126, i32 242, i32 158, i32 30, i32 153, i32 57, i32 149, i32 4, i32 189, i32 30, i32 103, i32 123, i32 178, i32 38, i32 172, i32 230, i32 170, i32 226, i32 70, i32 213, i32 228, i32 232, i32 134, i32 189, i32 171, i32 124, i32 85, i32 89, i32 111, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 101, i32 110, i32 10, i32 164, i32 89, i32 7, i32 23, i32 242, i32 107, i32 74, i32 31, i32 110, i32 246, i32 181, i32 188, i32 98, i32 228, i32 182, i32 218, i32 162, i32 147, i32 188, i32 41, i32 5, i32 210, i32 210, i32 115, i32 70, i32 3, i32 22, i32 64, i32 49, i32 180, i32 205, i32 8, i32 111, i32 21, i32 35, i32 26, i32 11, i32 34, i32 237, i32 209, i32 241, i32 167, i32 199, i32 115, i32 69, i32 243, i32 158, i32 206, i32 118, i32 183, i32 246, i32 57, i32 182, i32 142, i32 121, i32 190, i32 233, i32 155, i32 207, i32 125, i32 98, i32 134, i32 23, i32 144, i32 231, i32 201, i32 31, i32 16, i32 165, i32 106, i32 45, i32 57, i32 208, i32 59, i32 196, i32 166, i32 233, i32 89, i32 19, i32 218, i32 26, i32 230, i32 160, i32 185, i32 60, i32 80, i32 184, i32 64, i32 124, i32 21, i32 54, i32 90, i32 66, i32 252, i32 90, i32 30, i32 29, i32 116, i32 88, i32 149, i32 166, i32 143, i32 123, i32 151, i32 62, i32 23, i32 59, i32 121, i32 45, i32 166, i32 87, i32 239, i32 69, i32 2, i32 11, i32 77, i32 110, i32 158, i32 147, i32 141, i32 47, i32 217, i32 157, i32 219, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 22, i32 174, i32 139, i32 224, i32 155, i32 36, i32 104, i32 92, i32 68, i32 194, i32 208, i32 8, i32 183, i32 123, i32 98, i32 253, i32 127, i32 216, i32 212, i32 183, i32 80, i32 253, i32 44, i32 27, i32 191, i32 65, i32 149, i32 217, i32 142, i32 216, i32 23, i32 27, i32 234, i32 218, i32 153, i32 158, i32 25, i32 131, i32 102, i32 109, i32 233, i32 118, i32 135, i32 80, i32 209, i32 253, i32 60, i32 96, i32 135, i32 198, i32 65, i32 217, i32 142, i32 219, i32 94, i32 222, i32 170, i32 154, i32 211, i32 40, i32 218, i32 149, i32 234, i32 71, i32 2, i32 251, i32 84, i32 184, i32 5, i32 243, i32 129, i32 82, i32 105, i32 52, i32 70, i32 157, i32 134, i32 118, i32 143, i32 215, i32 248, i32 106, i32 102, i32 255, i32 230, i32 167, i32 144, i32 247, i32 94, i32 205, i32 106, i32 155, i32 85, i32 252, i32 157, i32 72, i32 122, i32 108, i32 69, i32 39, i32 196, i32 147, i32 127, i32 125, i32 124, i32 98, i32 80, i32 56, i32 58, i32 107, i32 181, i32 136, i32 198, i32 217, i32 241, i32 120, i32 25, i32 185, i32 57, i32 147, i32 61, i32 201, i32 224, i32 156, i32 60, i32 206, i32 245, i32 114, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 72, i32 95, i32 39, i32 144, i32 92, i32 2, i32 66, i32 173, i32 120, i32 71, i32 92, i32 181, i32 126, i32 8, i32 133, i32 0, i32 250, i32 127, i32 253, i32 253, i32 231, i32 9, i32 17, i32 242, i32 126, i32 27, i32 56, i32 108, i32 53, i32 109, i32 51, i32 102, i32 97, i32 46, i32 194, i32 221, i32 149, i32 87, i32 209, i32 171, i32 128, i32 232, i32 99, i32 23, i32 181, i32 72, i32 228, i32 138, i32 17, i32 158, i32 114, i32 190, i32 133, i32 141, i32 81, i32 10, i32 242, i32 159, i32 224, i32 28, i32 169, i32 7, i32 40, i32 123, i32 78, i32 59, i32 105, i32 200, i32 67, i32 117, i32 81, i32 108, i32 121, i32 86, i32 228, i32 203, i32 247, i32 166, i32 81, i32 194, i32 44, i32 66, i32 11, i32 212, i32 130, i32 32, i32 28, i32 1, i32 8, i32 102, i32 215, i32 191, i32 4, i32 86, i32 252, i32 2, i32 107, i32 166, i32 245, i32 75, i32 17, i32 189, i32 186, i32 91, i32 158, i32 196, i32 164, i32 81, i32 30, i32 190, i32 208, i32 144, i32 58, i32 156, i32 194, i32 38, i32 182, i32 30, i32 241, i32 149, i32 125, i32 200, i32 109, i32 82, i32 230, i32 153, i32 44, i32 95, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 54, i32 39, i32 62, i32 198, i32 18, i32 7, i32 171, i32 78, i32 190, i32 105, i32 157, i32 179, i32 190, i32 8, i32 124, i32 42, i32 71, i32 8, i32 253, i32 212, i32 205, i32 14, i32 39, i32 52, i32 91, i32 152, i32 52, i32 47, i32 119, i32 95, i32 58, i32 101, i32 0, i32 23, i32 144, i32 48, i32 233, i32 211, i32 96, i32 48, i32 49, i32 194, i32 114, i32 137, i32 122, i32 54, i32 165, i32 189, i32 57, i32 131, i32 133, i32 80, i32 161, i32 93, i32 108, i32 65, i32 29, i32 181, i32 44, i32 7, i32 64, i32 119, i32 11, i32 80, i32 119, i32 91, i32 226, i32 55, i32 199, i32 225, i32 124, i32 19, i32 140, i32 159, i32 123, i32 123, i32 42, i32 206, i32 66, i32 163, i32 185, i32 42, i32 153, i32 168, i32 192, i32 216, i32 60, i32 134, i32 176, i32 251, i32 233, i32 118, i32 119, i32 247, i32 245, i32 86, i32 70, i32 2, i32 245, i32 165, i32 175, i32 197, i32 117, i32 109, i32 186, i32 69, i32 53, i32 10, i32 254, i32 201, i32 172, i32 34, i32 145, i32 141, i32 33, i32 149, i32 51, i32 3, i32 192, i32 138, i32 22, i32 243, i32 57, i32 224, i32 1, i32 15, i32 83, i32 60, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 89, i32 213, i32 155, i32 90, i32 162, i32 144, i32 211, i32 184, i32 55, i32 76, i32 85, i32 130, i32 40, i32 8, i32 15, i32 127, i32 170, i32 129, i32 101, i32 224, i32 12, i32 82, i32 201, i32 163, i32 50, i32 39, i32 100, i32 218, i32 253, i32 52, i32 35, i32 90, i32 75, i32 65, i32 19, i32 84, i32 35, i32 26, i32 164, i32 78, i32 169, i32 139, i32 30, i32 75, i32 252, i32 21, i32 36, i32 187, i32 126, i32 203, i32 182, i32 30, i32 27, i32 245, i32 242, i32 200, i32 86, i32 236, i32 50, i32 162, i32 96, i32 91, i32 160, i32 42, i32 29, i32 41, i32 122, i32 161, i32 236, i32 142, i32 181, i32 173, i32 234, i32 2, i32 104, i32 96, i32 116, i32 41, i32 28, i32 165, i32 207, i32 200, i32 59, i32 125, i32 139, i32 43, i32 124, i32 173, i32 164, i32 64, i32 23, i32 81, i32 89, i32 124, i32 46, i32 93, i32 229, i32 176, i32 39, i32 173, i32 190, i32 155, i32 242, i32 181, i32 99, i32 222, i32 58, i32 35, i32 149, i32 183, i32 10, i32 126, i32 243, i32 158, i32 69, i32 111, i32 25, i32 57, i32 117, i32 143, i32 57, i32 61, i32 15, i32 192, i32 159, i32 241, i32 233, i32 81, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 246, i32 116, i32 61, i32 242, i32 175, i32 208, i32 30, i32 3, i32 124, i32 35, i32 107, i32 201, i32 252, i32 37, i32 112, i32 144, i32 220, i32 154, i32 164, i32 251, i32 73, i32 252, i32 61, i32 10, i32 53, i32 56, i32 111, i32 228, i32 126, i32 80, i32 1, i32 42, i32 133, i32 12, i32 175, i32 248, i32 131, i32 68, i32 73, i32 217, i32 69, i32 207, i32 247, i32 72, i32 217, i32 83, i32 180, i32 241, i32 101, i32 160, i32 225, i32 195, i32 179, i32 21, i32 237, i32 137, i32 155, i32 79, i32 98, i32 179, i32 87, i32 165, i32 69, i32 28, i32 132, i32 124, i32 194, i32 166, i32 145, i32 35, i32 206, i32 189, i32 220, i32 249, i32 206, i32 213, i32 117, i32 48, i32 34, i32 230, i32 249, i32 67, i32 98, i32 13, i32 247, i32 117, i32 157, i32 127, i32 140, i32 255, i32 125, i32 228, i32 114, i32 172, i32 159, i32 28, i32 46, i32 104, i32 161, i32 35, i32 125, i32 155, i32 64, i32 105, i32 133, i32 123, i32 66, i32 191, i32 144, i32 75, i32 214, i32 64, i32 47, i32 215, i32 82, i32 82, i32 178, i32 33, i32 222, i32 100, i32 189, i32 136, i32 195, i32 109, i32 165, i32 250, i32 129, i32 63, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 85, i32 71, i32 228, i32 168, i32 61, i32 85, i32 33, i32 52, i32 171, i32 29, i32 174, i32 224, i32 244, i32 234, i32 219, i32 197, i32 185, i32 88, i32 191, i32 196, i32 42, i32 137, i32 49, i32 26, i32 244, i32 45, i32 225, i32 202, i32 55, i32 153, i32 71, i32 89, i32 70, i32 250, i32 34, i32 75, i32 250, i32 225, i32 254, i32 150, i32 252, i32 103, i32 186, i32 103, i32 151, i32 196, i32 231, i32 27, i32 134, i32 144, i32 95, i32 238, i32 244, i32 91, i32 17, i32 178, i32 205, i32 173, i32 238, i32 194, i32 72, i32 108, i32 43, i32 27, i32 41, i32 172, i32 255, i32 39, i32 224, i32 89, i32 190, i32 57, i32 156, i32 13, i32 131, i32 215, i32 16, i32 11, i32 21, i32 183, i32 225, i32 194, i32 44, i32 48, i32 115, i32 128, i32 58, i32 125, i32 93, i32 171, i32 88, i32 107, i32 193, i32 240, i32 244, i32 34, i32 245, i32 251, i32 144, i32 45, i32 129, i32 25, i32 158, i32 47, i32 109, i32 133, i32 136, i32 140, i32 64, i32 92, i32 119, i32 65, i32 77, i32 1, i32 25, i32 118, i32 96, i32 232, i32 76, i32 72, i32 228, i32 51, i32 131, i32 50, i32 108, i32 180, i32 65, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 246, i32 150, i32 202, i32 47, i32 218, i32 56, i32 167, i32 27, i32 252, i32 202, i32 125, i32 254, i32 8, i32 137, i32 226, i32 71, i32 43, i32 106, i32 93, i32 75, i32 250, i32 161, i32 180, i32 222, i32 182, i32 194, i32 49, i32 81, i32 245, i32 224, i32 164, i32 11, i32 80, i32 252, i32 219, i32 162, i32 89, i32 33, i32 141, i32 189, i32 126, i32 51, i32 174, i32 47, i32 135, i32 26, i32 208, i32 151, i32 199, i32 13, i32 77, i32 99, i32 1, i32 239, i32 5, i32 132, i32 236, i32 64, i32 221, i32 168, i32 10, i32 79, i32 112, i32 11, i32 12, i32 14, i32 243, i32 186, i32 240, i32 229, i32 186, i32 178, i32 87, i32 119, i32 198, i32 32, i32 155, i32 137, i32 36, i32 190, i32 242, i32 156, i32 138, i32 186, i32 105, i32 193, i32 241, i32 176, i32 79, i32 42, i32 5, i32 154, i32 238, i32 16, i32 126, i32 54, i32 127, i32 193, i32 220, i32 185, i32 199, i32 188, i32 134, i32 61, i32 85, i32 75, i32 40, i32 122, i32 251, i32 77, i32 199, i32 248, i32 188, i32 103, i32 42, i32 96, i32 77, i32 143, i32 7, i32 11, i32 26, i32 23, i32 191, i32 250, i32 172, i32 167, i32 61, i32 26, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 111, i32 77, i32 23, i32 215, i32 225, i32 132, i32 217, i32 120, i32 177, i32 144, i32 253, i32 46, i32 179, i32 181, i32 25, i32 63, i32 27, i32 250, i32 192, i32 104, i32 179, i32 221, i32 0, i32 46, i32 137, i32 189, i32 126, i32 128, i32 50, i32 19, i32 160, i32 123, i32 176, i32 59, i32 44, i32 243, i32 254, i32 50, i32 113, i32 7, i32 63, i32 170, i32 186, i32 69, i32 96, i32 168, i32 141, i32 234, i32 84, i32 203, i32 57, i32 16, i32 180, i32 242, i32 139, i32 210, i32 20, i32 130, i32 66, i32 7, i32 142, i32 233, i32 124, i32 83, i32 1, i32 184, i32 214, i32 22, i32 103, i32 160, i32 21, i32 185, i32 225, i32 88, i32 164, i32 167, i32 49, i32 55, i32 119, i32 47, i32 139, i32 18, i32 159, i32 244, i32 63, i32 199, i32 54, i32 102, i32 210, i32 168, i32 86, i32 247, i32 127, i32 116, i32 198, i32 65, i32 25, i32 212, i32 141, i32 71, i32 41, i32 18, i32 101, i32 176, i32 17, i32 120, i32 71, i32 181, i32 203, i32 163, i32 165, i32 250, i32 5, i32 133, i32 84, i32 169, i32 51, i32 151, i32 141, i32 43, i32 194, i32 254, i32 153, i32 53, i32 40, i32 229, i32 235, i32 99, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 68, i32 31, i32 184, i32 194, i32 1, i32 193, i32 48, i32 25, i32 85, i32 5, i32 96, i32 16, i32 164, i32 108, i32 45, i32 103, i32 112, i32 229, i32 37, i32 27, i32 242, i32 191, i32 221, i32 251, i32 112, i32 43, i32 161, i32 140, i32 156, i32 148, i32 132, i32 8, i32 94, i32 223, i32 21, i32 83, i32 59, i32 134, i32 128, i32 176, i32 241, i32 112, i32 104, i32 143, i32 102, i32 124, i32 14, i32 73, i32 26, i32 216, i32 107, i32 254, i32 78, i32 239, i32 202, i32 71, i32 212, i32 3, i32 193, i32 55, i32 80, i32 156, i32 193, i32 22, i32 220, i32 255, i32 21, i32 97, i32 47, i32 74, i32 47, i32 98, i32 242, i32 4, i32 47, i32 181, i32 12, i32 183, i32 30, i32 63, i32 116, i32 26, i32 15, i32 215, i32 234, i32 205, i32 217, i32 125, i32 246, i32 18, i32 14, i32 47, i32 219, i32 90, i32 59, i32 22, i32 105, i32 50, i32 161, i32 5, i32 17, i32 66, i32 0, i32 210, i32 89, i32 172, i32 77, i32 98, i32 139, i32 19, i32 226, i32 80, i32 93, i32 160, i32 157, i32 155, i32 253, i32 187, i32 18, i32 65, i32 117, i32 65, i32 158, i32 204, i32 220, i32 199, i32 220, i32 93, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 98, i32 18, i32 55, i32 106, i32 48, i32 246, i32 30, i32 251, i32 20, i32 92, i32 13, i32 14, i32 183, i32 129, i32 106, i32 231, i32 8, i32 5, i32 172, i32 170, i32 56, i32 70, i32 226, i32 115, i32 234, i32 75, i32 7, i32 129, i32 67, i32 124, i32 158, i32 94, i32 63, i32 171, i32 211, i32 244, i32 138, i32 118, i32 161, i32 60, i32 202, i32 45, i32 73, i32 195, i32 234, i32 8, i32 11, i32 133, i32 23, i32 42, i32 195, i32 108, i32 8, i32 253, i32 87, i32 159, i32 61, i32 95, i32 223, i32 103, i32 104, i32 66, i32 0, i32 50, i32 229, i32 68, i32 236, i32 6, i32 157, i32 144, i32 121, i32 159, i32 211, i32 224, i32 121, i32 175, i32 143, i32 16, i32 253, i32 221, i32 4, i32 174, i32 39, i32 151, i32 70, i32 51, i32 121, i32 234, i32 184, i32 78, i32 202, i32 90, i32 89, i32 87, i32 225, i32 14, i32 227, i32 219, i32 96, i32 205, i32 92, i32 74, i32 24, i32 15, i32 239, i32 115, i32 54, i32 113, i32 140, i32 246, i32 17, i32 180, i32 216, i32 206, i32 23, i32 94, i32 79, i32 38, i32 119, i32 151, i32 95, i32 203, i32 239, i32 145, i32 235, i32 106, i32 98, i32 122, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 59, i32 185, i32 184, i32 6, i32 90, i32 46, i32 254, i32 195, i32 130, i32 55, i32 156, i32 163, i32 17, i32 31, i32 156, i32 166, i32 218, i32 99, i32 72, i32 155, i32 173, i32 222, i32 45, i32 166, i32 188, i32 110, i32 50, i32 218, i32 39, i32 101, i32 221, i32 87, i32 59, i32 178, i32 148, i32 109, i32 57, i32 96, i32 172, i32 238, i32 231, i32 129, i32 26, i32 59, i32 118, i32 135, i32 92, i32 5, i32 148, i32 42, i32 69, i32 185, i32 128, i32 233, i32 34, i32 177, i32 7, i32 203, i32 64, i32 158, i32 112, i32 73, i32 109, i32 18, i32 164, i32 75, i32 98, i32 76, i32 230, i32 253, i32 114, i32 7, i32 242, i32 129, i32 252, i32 242, i32 189, i32 18, i32 124, i32 104, i32 118, i32 42, i32 186, i32 245, i32 101, i32 177, i32 31, i32 23, i32 10, i32 56, i32 176, i32 191, i32 192, i32 248, i32 244, i32 42, i32 247, i32 24, i32 122, i32 150, i32 126, i32 67, i32 87, i32 169, i32 85, i32 252, i32 78, i32 182, i32 114, i32 0, i32 242, i32 228, i32 215, i32 82, i32 211, i32 211, i32 182, i32 133, i32 246, i32 113, i32 199, i32 68, i32 63, i32 127, i32 215, i32 179, i32 242, i32 121, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 144, i32 215, i32 197, i32 38, i32 8, i32 189, i32 176, i32 83, i32 99, i32 88, i32 195, i32 49, i32 94, i32 117, i32 70, i32 21, i32 145, i32 166, i32 248, i32 47, i32 26, i32 8, i32 101, i32 136, i32 47, i32 152, i32 4, i32 241, i32 124, i32 110, i32 0, i32 119, i32 137, i32 143, i32 192, i32 190, i32 93, i32 214, i32 159, i32 160, i32 240, i32 157, i32 129, i32 206, i32 58, i32 123, i32 152, i32 88, i32 187, i32 215, i32 120, i32 200, i32 63, i32 19, i32 241, i32 116, i32 25, i32 223, i32 248, i32 152, i32 137, i32 93, i32 250, i32 95, i32 104, i32 14, i32 111, i32 151, i32 186, i32 112, i32 187, i32 163, i32 14, i32 229, i32 11, i32 18, i32 244, i32 162, i32 220, i32 71, i32 248, i32 230, i32 208, i32 35, i32 108, i32 51, i32 168, i32 153, i32 70, i32 110, i32 15, i32 68, i32 186, i32 118, i32 72, i32 15, i32 44, i32 25, i32 51, i32 221, i32 27, i32 171, i32 236, i32 1, i32 176, i32 35, i32 248, i32 66, i32 43, i32 6, i32 136, i32 234, i32 61, i32 45, i32 0, i32 42, i32 120, i32 69, i32 77, i32 56, i32 237, i32 46, i32 46, i32 68, i32 73, i32 237, i32 203, i32 51, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 63, i32 96, i32 193, i32 130, i32 45, i32 163, i32 40, i32 88, i32 36, i32 158, i32 159, i32 227, i32 112, i32 204, i32 9, i32 78, i32 26, i32 63, i32 17, i32 17, i32 21, i32 7, i32 60, i32 164, i32 65, i32 224, i32 101, i32 163, i32 10, i32 65, i32 109, i32 17, i32 32, i32 239, i32 89, i32 222, i32 164, i32 43, i32 147, i32 110, i32 46, i32 236, i32 66, i32 154, i32 212, i32 45, i32 244, i32 70, i32 88, i32 39, i32 43, i32 24, i32 143, i32 131, i32 61, i32 105, i32 158, i32 212, i32 62, i32 182, i32 197, i32 253, i32 88, i32 3, i32 50, i32 180, i32 24, i32 71, i32 121, i32 203, i32 212, i32 90, i32 7, i32 20, i32 15, i32 160, i32 213, i32 172, i32 208, i32 65, i32 64, i32 171, i32 97, i32 35, i32 229, i32 42, i32 42, i32 111, i32 247, i32 168, i32 212, i32 118, i32 239, i32 231, i32 69, i32 108, i32 119, i32 56, i32 222, i32 215, i32 96, i32 72, i32 7, i32 240, i32 116, i32 168, i32 255, i32 84, i32 229, i32 48, i32 67, i32 255, i32 119, i32 251, i32 33, i32 7, i32 255, i32 178, i32 7, i32 107, i32 228, i32 229, i32 48, i32 252, i32 25, i32 108, i32 163, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 30, i32 127, i32 180, i32 116, i32 126, i32 177, i32 137, i32 79, i32 24, i32 90, i32 171, i32 100, i32 6, i32 223, i32 69, i32 135, i32 224, i32 106, i32 198, i32 240, i32 14, i32 201, i32 36, i32 53, i32 56, i32 234, i32 48, i32 84, i32 180, i32 196, i32 82, i32 84, i32 139, i32 25, i32 117, i32 110, i32 3, i32 6, i32 94, i32 106, i32 111, i32 26, i32 140, i32 227, i32 211, i32 40, i32 242, i32 224, i32 185, i32 122, i32 67, i32 105, i32 230, i32 211, i32 192, i32 254, i32 126, i32 151, i32 171, i32 108, i32 123, i32 142, i32 19, i32 66, i32 50, i32 173, i32 174, i32 133, i32 88, i32 67, i32 184, i32 177, i32 230, i32 62, i32 0, i32 156, i32 120, i32 136, i32 86, i32 219, i32 156, i32 252, i32 121, i32 246, i32 249, i32 65, i32 95, i32 183, i32 188, i32 17, i32 249, i32 32, i32 54, i32 28, i32 83, i32 43, i32 214, i32 27, i32 154, i32 108, i32 229, i32 70, i32 234, i32 112, i32 150, i32 141, i32 78, i32 42, i32 82, i32 33, i32 38, i32 75, i32 177, i32 187, i32 15, i32 124, i32 169, i32 155, i32 4, i32 187, i32 81, i32 8, i32 241, i32 154, i32 164, i32 118, i32 124, i32 24, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 44, i32 179, i32 218, i32 122, i32 216, i32 61, i32 153, i32 202, i32 210, i32 244, i32 218, i32 153, i32 142, i32 79, i32 152, i32 183, i32 244, i32 174, i32 62, i32 159, i32 142, i32 53, i32 96, i32 164, i32 51, i32 117, i32 164, i32 4, i32 147, i32 177, i32 107, i32 77, i32 237, i32 183, i32 132, i32 44, i32 246, i32 211, i32 161, i32 107, i32 36, i32 109, i32 135, i32 86, i32 151, i32 89, i32 121, i32 98, i32 159, i32 172, i32 237, i32 243, i32 201, i32 137, i32 33, i32 46, i32 4, i32 179, i32 204, i32 47, i32 190, i32 214, i32 10, i32 75, i32 83, i32 207, i32 194, i32 161, i32 173, i32 106, i32 243, i32 205, i32 143, i32 201, i32 222, i32 28, i32 248, i32 108, i32 143, i32 248, i32 118, i32 66, i32 231, i32 254, i32 178, i32 114, i32 33, i32 10, i32 102, i32 116, i32 143, i32 183, i32 235, i32 228, i32 111, i32 1, i32 83, i32 136, i32 119, i32 2, i32 202, i32 39, i32 168, i32 229, i32 69, i32 226, i32 168, i32 72, i32 42, i32 171, i32 24, i32 202, i32 234, i32 45, i32 42, i32 84, i32 23, i32 55, i32 50, i32 9, i32 220, i32 224, i32 74, i32 183, i32 125, i32 130, i32 16, i32 125, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 218, i32 140, i32 194, i32 208, i32 172, i32 24, i32 232, i32 82, i32 54, i32 212, i32 33, i32 163, i32 221, i32 87, i32 34, i32 121, i32 183, i32 248, i32 113, i32 157, i32 198, i32 145, i32 112, i32 134, i32 86, i32 191, i32 161, i32 17, i32 139, i32 25, i32 225, i32 15, i32 185, i32 177, i32 231, i32 93, i32 78, i32 188, i32 238, i32 187, i32 64, i32 129, i32 119, i32 130, i32 25, i32 171, i32 181, i32 198, i32 238, i32 171, i32 91, i32 107, i32 99, i32 146, i32 138, i32 52, i32 141, i32 205, i32 238, i32 79, i32 73, i32 229, i32 201, i32 126, i32 98, i32 79, i32 208, i32 117, i32 119, i32 186, i32 118, i32 119, i32 215, i32 184, i32 216, i32 146, i32 111, i32 152, i32 52, i32 61, i32 214, i32 78, i32 28, i32 15, i32 240, i32 143, i32 46, i32 241, i32 179, i32 189, i32 177, i32 185, i32 236, i32 153, i32 180, i32 7, i32 139, i32 44, i32 0, i32 72, i32 74, i32 249, i32 91, i32 135, i32 105, i32 82, i32 229, i32 91, i32 209, i32 177, i32 229, i32 37, i32 37, i32 224, i32 156, i32 194, i32 19, i32 68, i32 232, i32 185, i32 10, i32 112, i32 173, i32 189, i32 15, i32 81, i32 148, i32 105, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 194, i32 254, i32 27, i32 12, i32 103, i32 205, i32 214, i32 224, i32 81, i32 142, i32 44, i32 224, i32 121, i32 136, i32 240, i32 207, i32 65, i32 74, i32 173, i32 35, i32 212, i32 70, i32 202, i32 148, i32 161, i32 195, i32 235, i32 40, i32 6, i32 250, i32 23, i32 20, i32 204, i32 183, i32 50, i32 137, i32 87, i32 208, i32 152, i32 117, i32 228, i32 55, i32 153, i32 169, i32 232, i32 186, i32 237, i32 186, i32 235, i32 199, i32 79, i32 21, i32 118, i32 7, i32 12, i32 76, i32 239, i32 159, i32 82, i32 252, i32 4, i32 93, i32 88, i32 16, i32 100, i32 233, i32 40, i32 199, i32 164, i32 207, i32 42, i32 249, i32 144, i32 100, i32 114, i32 44, i32 139, i32 235, i32 236, i32 160, i32 242, i32 125, i32 53, i32 181, i32 144, i32 77, i32 127, i32 91, i32 74, i32 73, i32 228, i32 184, i32 59, i32 200, i32 161, i32 47, i32 249, i32 126, i32 62, i32 102, i32 238, i32 249, i32 153, i32 40, i32 255, i32 173, i32 17, i32 216, i32 226, i32 102, i32 197, i32 205, i32 15, i32 13, i32 11, i32 106, i32 252, i32 124, i32 36, i32 168, i32 79, i32 168, i32 94, i32 128, i32 69, i32 139, i32 108, i32 65, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 146, i32 248, i32 214, i32 75, i32 239, i32 66, i32 19, i32 178, i32 74, i32 196, i32 46, i32 114, i32 63, i32 201, i32 17, i32 189, i32 116, i32 2, i32 14, i32 245, i32 19, i32 157, i32 131, i32 26, i32 27, i32 213, i32 84, i32 222, i32 196, i32 30, i32 22, i32 108, i32 234, i32 167, i32 35, i32 239, i32 4, i32 97, i32 128, i32 80, i32 201, i32 110, i32 165, i32 150, i32 209, i32 209, i32 200, i32 195, i32 24, i32 215, i32 45, i32 253, i32 38, i32 189, i32 203, i32 123, i32 146, i32 81, i32 14, i32 74, i32 101, i32 87, i32 184, i32 73, i32 122, i32 141, i32 161, i32 93, i32 112, i32 93, i32 81, i32 39, i32 238, i32 48, i32 101, i32 86, i32 149, i32 70, i32 222, i32 189, i32 3, i32 117, i32 180, i32 87, i32 89, i32 137, i32 235, i32 2, i32 158, i32 204, i32 137, i32 25, i32 167, i32 203, i32 23, i32 103, i32 48, i32 49, i32 84, i32 26, i32 70, i32 202, i32 230, i32 198, i32 203, i32 226, i32 195, i32 193, i32 139, i32 117, i32 129, i32 190, i32 238, i32 248, i32 163, i32 17, i32 28, i32 37, i32 163, i32 167, i32 53, i32 81, i32 85, i32 226, i32 37, i32 170, i32 226, i32 58, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 212, i32 177, i32 108, i32 8, i32 199, i32 64, i32 56, i32 115, i32 95, i32 11, i32 243, i32 118, i32 93, i32 178, i32 165, i32 47, i32 87, i32 87, i32 7, i32 237, i32 8, i32 162, i32 108, i32 79, i32 8, i32 2, i32 181, i32 14, i32 238, i32 68, i32 250, i32 34, i32 126, i32 19, i32 51, i32 205, i32 168, i32 132, i32 86, i32 30, i32 103, i32 175, i32 107, i32 67, i32 172, i32 23, i32 175, i32 22, i32 192, i32 82, i32 153, i32 73, i32 91, i32 135, i32 115, i32 126, i32 181, i32 67, i32 218, i32 107, i32 29, i32 15, i32 45, i32 85, i32 255, i32 118, i32 3, i32 197, i32 75, i32 137, i32 153, i32 112, i32 0, i32 89, i32 112, i32 156, i32 213, i32 217, i32 17, i32 137, i32 90, i32 70, i32 254, i32 239, i32 220, i32 217, i32 85, i32 43, i32 69, i32 167, i32 176, i32 45, i32 251, i32 36, i32 194, i32 41, i32 142, i32 180, i32 238, i32 184, i32 212, i32 63, i32 178, i32 27, i32 224, i32 10, i32 61, i32 117, i32 52, i32 40, i32 162, i32 142, i32 196, i32 146, i32 123, i32 254, i32 96, i32 110, i32 109, i32 184, i32 49, i32 29, i32 98, i32 13, i32 120, i32 20, i32 66, i32 17, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 77, i32 227, i32 126, i32 56, i32 98, i32 94, i32 100, i32 187, i32 43, i32 83, i32 181, i32 3, i32 104, i32 196, i32 242, i32 43, i32 90, i32 3, i32 50, i32 153, i32 74, i32 65, i32 154, i32 225, i32 26, i32 174, i32 140, i32 72, i32 243, i32 36, i32 50, i32 101, i32 200, i32 9, i32 59, i32 96, i32 201, i32 38, i32 77, i32 124, i32 242, i32 156, i32 212, i32 161, i32 59, i32 38, i32 194, i32 4, i32 51, i32 68, i32 118, i32 60, i32 2, i32 187, i32 17, i32 66, i32 12, i32 34, i32 183, i32 198, i32 225, i32 172, i32 180, i32 14, i32 124, i32 49, i32 51, i32 204, i32 228, i32 207, i32 108, i32 255, i32 128, i32 71, i32 119, i32 209, i32 216, i32 233, i32 105, i32 151, i32 152, i32 127, i32 32, i32 87, i32 29, i32 29, i32 79, i32 8, i32 39, i32 200, i32 53, i32 87, i32 64, i32 198, i32 33, i32 12, i32 193, i32 88, i32 124, i32 13, i32 32, i32 221, i32 17, i32 38, i32 95, i32 137, i32 59, i32 151, i32 88, i32 248, i32 139, i32 227, i32 223, i32 50, i32 226, i32 252, i32 216, i32 103, i32 242, i32 165, i32 55, i32 30, i32 109, i32 236, i32 124, i32 39, i32 32, i32 121, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 206, i32 127, i32 220, i32 10, i32 204, i32 130, i32 28, i32 10, i32 120, i32 113, i32 232, i32 116, i32 141, i32 1, i32 48, i32 15, i32 167, i32 17, i32 76, i32 223, i32 56, i32 215, i32 167, i32 13, i32 248, i32 72, i32 82, i32 0, i32 128, i32 123, i32 95, i32 14, i32 27, i32 3, i32 13, i32 139, i32 90, i32 27, i32 151, i32 75, i32 242, i32 22, i32 49, i32 61, i32 31, i32 51, i32 160, i32 80, i32 58, i32 24, i32 190, i32 19, i32 161, i32 118, i32 193, i32 186, i32 27, i32 241, i32 5, i32 123, i32 51, i32 168, i32 130, i32 59, i32 80, i32 91, i32 255, i32 169, i32 178, i32 241, i32 241, i32 120, i32 207, i32 20, i32 164, i32 169, i32 252, i32 9, i32 70, i32 148, i32 84, i32 101, i32 13, i32 156, i32 95, i32 114, i32 33, i32 226, i32 151, i32 165, i32 45, i32 129, i32 206, i32 74, i32 95, i32 121, i32 254, i32 122, i32 116, i32 207, i32 212, i32 210, i32 229, i32 25, i32 222, i32 208, i32 219, i32 112, i32 35, i32 105, i32 230, i32 109, i32 236, i32 236, i32 204, i32 9, i32 51, i32 106, i32 119, i32 220, i32 107, i32 34, i32 118, i32 93, i32 146, i32 9, i32 172, i32 45, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 17, i32 206, i32 191, i32 182, i32 119, i32 45, i32 72, i32 34, i32 24, i32 79, i32 163, i32 93, i32 74, i32 176, i32 112, i32 18, i32 62, i32 84, i32 215, i32 216, i32 14, i32 43, i32 39, i32 220, i32 83, i32 255, i32 202, i32 140, i32 89, i32 179, i32 78, i32 68, i32 221, i32 249, i32 218, i32 132, i32 195, i32 230, i32 138, i32 159, i32 36, i32 210, i32 150, i32 93, i32 57, i32 111, i32 88, i32 140, i32 193, i32 86, i32 147, i32 171, i32 181, i32 121, i32 59, i32 210, i32 168, i32 115, i32 22, i32 237, i32 250, i32 180, i32 47, i32 115, i32 13, i32 22, i32 172, i32 60, i32 74, i32 88, i32 134, i32 58, i32 70, i32 127, i32 108, i32 163, i32 82, i32 110, i32 55, i32 228, i32 150, i32 156, i32 233, i32 92, i32 102, i32 65, i32 103, i32 228, i32 251, i32 121, i32 12, i32 5, i32 246, i32 100, i32 213, i32 124, i32 247, i32 213, i32 233, i32 116, i32 93, i32 184, i32 37, i32 22, i32 181, i32 48, i32 188, i32 132, i32 197, i32 240, i32 173, i32 202, i32 18, i32 40, i32 188, i32 157, i32 212, i32 250, i32 130, i32 230, i32 227, i32 191, i32 162, i32 21, i32 44, i32 212, i32 52, i32 16, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 211, i32 176, i32 58, i32 102, i32 96, i32 27, i32 67, i32 241, i32 38, i32 88, i32 153, i32 9, i32 143, i32 45, i32 163, i32 20, i32 113, i32 133, i32 219, i32 237, i32 246, i32 38, i32 213, i32 97, i32 154, i32 115, i32 172, i32 14, i32 234, i32 172, i32 183, i32 12, i32 45, i32 186, i32 22, i32 7, i32 146, i32 148, i32 220, i32 189, i32 80, i32 43, i32 201, i32 127, i32 66, i32 0, i32 186, i32 97, i32 237, i32 248, i32 67, i32 237, i32 245, i32 249, i32 64, i32 96, i32 178, i32 176, i32 130, i32 203, i32 237, i32 117, i32 199, i32 101, i32 232, i32 193, i32 169, i32 194, i32 123, i32 89, i32 33, i32 51, i32 226, i32 67, i32 115, i32 43, i32 172, i32 45, i32 193, i32 137, i32 59, i32 21, i32 226, i32 213, i32 192, i32 151, i32 138, i32 253, i32 111, i32 54, i32 51, i32 183, i32 185, i32 195, i32 136, i32 9, i32 253, i32 47, i32 224, i32 155, i32 30, i32 140, i32 197, i32 24, i32 169, i32 202, i32 212, i32 43, i32 53, i32 182, i32 149, i32 10, i32 159, i32 126, i32 251, i32 196, i32 239, i32 136, i32 123, i32 35, i32 67, i32 236, i32 47, i32 13, i32 15, i32 122, i32 252, i32 92, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 51, i32 72, i32 49, i32 0, i32 89, i32 246, i32 242, i32 202, i32 15, i32 39, i32 27, i32 99, i32 18, i32 126, i32 2, i32 29, i32 73, i32 192, i32 93, i32 121, i32 135, i32 239, i32 94, i32 122, i32 47, i32 31, i32 102, i32 85, i32 216, i32 9, i32 217, i32 97, i32 101, i32 192, i32 163, i32 136, i32 81, i32 149, i32 252, i32 150, i32 148, i32 120, i32 232, i32 13, i32 139, i32 65, i32 201, i32 194, i32 88, i32 72, i32 117, i32 16, i32 47, i32 205, i32 42, i32 201, i32 160, i32 109, i32 15, i32 221, i32 156, i32 152, i32 38, i32 61, i32 161, i32 76, i32 112, i32 75, i32 14, i32 160, i32 131, i32 112, i32 19, i32 164, i32 175, i32 184, i32 56, i32 25, i32 34, i32 101, i32 9, i32 180, i32 2, i32 79, i32 6, i32 248, i32 23, i32 206, i32 70, i32 69, i32 218, i32 80, i32 124, i32 138, i32 209, i32 78, i32 38, i32 217, i32 94, i32 163, i32 15, i32 235, i32 162, i32 243, i32 32, i32 59, i32 55, i32 212, i32 228, i32 158, i32 206, i32 6, i32 61, i32 83, i32 237, i32 174, i32 43, i32 235, i32 182, i32 36, i32 10, i32 17, i32 163, i32 15, i32 214, i32 127, i32 164, i32 58, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 151, i32 135, i32 199, i32 4, i32 28, i32 56, i32 1, i32 57, i32 88, i32 199, i32 133, i32 163, i32 252, i32 100, i32 0, i32 100, i32 37, i32 162, i32 191, i32 80, i32 148, i32 202, i32 38, i32 49, i32 69, i32 10, i32 36, i32 210, i32 81, i32 41, i32 81, i32 22, i32 203, i32 120, i32 148, i32 144, i32 228, i32 69, i32 179, i32 246, i32 217, i32 246, i32 87, i32 116, i32 213, i32 248, i32 131, i32 79, i32 57, i32 201, i32 189, i32 136, i32 194, i32 87, i32 33, i32 31, i32 36, i32 50, i32 104, i32 248, i32 199, i32 33, i32 95, i32 11, i32 149, i32 33, i32 1, i32 206, i32 149, i32 91, i32 14, i32 87, i32 199, i32 185, i32 98, i32 181, i32 40, i32 202, i32 17, i32 236, i32 180, i32 70, i32 6, i32 115, i32 38, i32 255, i32 251, i32 102, i32 125, i32 238, i32 95, i32 178, i32 86, i32 253, i32 42, i32 8, i32 246, i32 72, i32 149, i32 161, i32 111, i32 95, i32 183, i32 165, i32 187, i32 48, i32 0, i32 28, i32 210, i32 138, i32 214, i32 37, i32 38, i32 27, i32 178, i32 13, i32 55, i32 106, i32 5, i32 244, i32 157, i32 62, i32 23, i32 42, i32 67, i32 210, i32 58, i32 6, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 185, i32 75, i32 164, i32 173, i32 208, i32 109, i32 97, i32 35, i32 180, i32 175, i32 52, i32 169, i32 170, i32 101, i32 236, i32 217, i32 105, i32 227, i32 133, i32 205, i32 204, i32 231, i32 176, i32 155, i32 65, i32 193, i32 28, i32 249, i32 160, i32 250, i32 183, i32 19, i32 101, i32 10, i32 190, i32 81, i32 87, i32 173, i32 80, i32 121, i32 8, i32 113, i32 155, i32 7, i32 149, i32 143, i32 251, i32 174, i32 75, i32 56, i32 186, i32 207, i32 83, i32 42, i32 134, i32 30, i32 192, i32 80, i32 92, i32 103, i32 27, i32 246, i32 135, i32 108, i32 253, i32 78, i32 42, i32 193, i32 58, i32 202, i32 143, i32 0, i32 216, i32 236, i32 116, i32 103, i32 239, i32 97, i32 224, i32 40, i32 208, i32 150, i32 244, i32 72, i32 222, i32 129, i32 227, i32 239, i32 220, i32 170, i32 125, i32 243, i32 182, i32 85, i32 166, i32 101, i32 171, i32 27, i32 181, i32 229, i32 43, i32 195, i32 14, i32 41, i32 176, i32 208, i32 115, i32 230, i32 79, i32 100, i32 242, i32 188, i32 228, i32 228, i32 225, i32 154, i32 82, i32 51, i32 47, i32 189, i32 204, i32 3, i32 238, i32 138, i32 250, i32 0, i32 95, i32 80, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 139, i32 0, i32 84, i32 251, i32 77, i32 220, i32 203, i32 23, i32 53, i32 64, i32 255, i32 183, i32 140, i32 254, i32 74, i32 228, i32 78, i32 153, i32 78, i32 168, i32 116, i32 84, i32 93, i32 92, i32 150, i32 163, i32 18, i32 85, i32 54, i32 49, i32 23, i32 92, i32 37, i32 234, i32 134, i32 194, i32 209, i32 79, i32 183, i32 62, i32 168, i32 92, i32 141, i32 102, i32 129, i32 37, i32 237, i32 197, i32 76, i32 5, i32 185, i32 216, i32 214, i32 112, i32 190, i32 115, i32 130, i32 232, i32 161, i32 229, i32 30, i32 113, i32 213, i32 38, i32 140, i32 68, i32 9, i32 40, i32 213, i32 35, i32 201, i32 143, i32 243, i32 132, i32 69, i32 198, i32 154, i32 94, i32 255, i32 210, i32 199, i32 87, i32 147, i32 163, i32 193, i32 105, i32 221, i32 98, i32 15, i32 218, i32 92, i32 48, i32 89, i32 93, i32 233, i32 76, i32 226, i32 169, i32 101, i32 136, i32 196, i32 80, i32 250, i32 187, i32 59, i32 110, i32 95, i32 68, i32 1, i32 202, i32 151, i32 212, i32 221, i32 246, i32 205, i32 63, i32 63, i32 229, i32 151, i32 103, i32 43, i32 140, i32 102, i32 15, i32 53, i32 155, i32 245, i32 7, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 224, i32 219, i32 34, i32 40, i32 230, i32 255, i32 97, i32 157, i32 65, i32 20, i32 45, i32 59, i32 38, i32 34, i32 223, i32 241, i32 52, i32 129, i32 233, i32 69, i32 238, i32 15, i32 152, i32 139, i32 166, i32 63, i32 239, i32 247, i32 67, i32 25, i32 241, i32 67, i32 203, i32 125, i32 79, i32 255, i32 48, i32 216, i32 18, i32 59, i32 57, i32 28, i32 6, i32 249, i32 76, i32 52, i32 53, i32 113, i32 181, i32 22, i32 148, i32 103, i32 223, i32 238, i32 17, i32 222, i32 164, i32 29, i32 136, i32 147, i32 53, i32 169, i32 50, i32 16, i32 96, i32 188, i32 69, i32 31, i32 35, i32 162, i32 59, i32 112, i32 118, i32 230, i32 151, i32 153, i32 79, i32 119, i32 84, i32 103, i32 48, i32 154, i32 231, i32 102, i32 214, i32 205, i32 46, i32 81, i32 36, i32 44, i32 66, i32 74, i32 17, i32 254, i32 111, i32 126, i32 123, i32 239, i32 33, i32 229, i32 64, i32 204, i32 30, i32 220, i32 214, i32 189, i32 151, i32 122, i32 124, i32 117, i32 134, i32 122, i32 37, i32 90, i32 110, i32 124, i32 229, i32 81, i32 60, i32 27, i32 91, i32 130, i32 154, i32 7, i32 96, i32 161, i32 25, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 92, i32 130, i32 179, i32 189, i32 85, i32 37, i32 246, i32 106, i32 147, i32 164, i32 2, i32 198, i32 125, i32 92, i32 177, i32 43, i32 91, i32 255, i32 251, i32 86, i32 248, i32 1, i32 65, i32 144, i32 198, i32 182, i32 172, i32 79, i32 254, i32 167, i32 65, i32 112, i32 57, i32 192, i32 250, i32 250, i32 205, i32 51, i32 67, i32 199, i32 151, i32 118, i32 155, i32 147, i32 145, i32 114, i32 235, i32 197, i32 24, i32 103, i32 76, i32 17, i32 240, i32 244, i32 229, i32 115, i32 178, i32 92, i32 27, i32 194, i32 38, i32 63, i32 191, i32 43, i32 23, i32 15, i32 134, i32 82, i32 215, i32 157, i32 195, i32 68, i32 81, i32 118, i32 50, i32 101, i32 180, i32 55, i32 129, i32 153, i32 70, i32 55, i32 98, i32 237, i32 207, i32 100, i32 157, i32 114, i32 64, i32 122, i32 76, i32 11, i32 118, i32 42, i32 251, i32 86, i32 172, i32 204, i32 107, i32 124, i32 249, i32 184, i32 139, i32 8, i32 92, i32 208, i32 125, i32 143, i32 115, i32 234, i32 32, i32 218, i32 134, i32 202, i32 0, i32 199, i32 173, i32 115, i32 77, i32 233, i32 232, i32 169, i32 218, i32 31, i32 3, i32 6, i32 221, i32 36, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 47, i32 189, i32 132, i32 99, i32 13, i32 181, i32 160, i32 240, i32 75, i32 158, i32 147, i32 198, i32 52, i32 154, i32 52, i32 255, i32 115, i32 25, i32 47, i32 110, i32 84, i32 69, i32 44, i32 146, i32 49, i32 118, i32 52, i32 241, i32 178, i32 38, i32 232, i32 116, i32 5, i32 251, i32 117, i32 245, i32 1, i32 175, i32 56, i32 114, i32 88, i32 252, i32 4, i32 41, i32 52, i32 122, i32 103, i32 162, i32 8, i32 80, i32 110, i32 208, i32 43, i32 115, i32 213, i32 184, i32 228, i32 48, i32 150, i32 173, i32 69, i32 223, i32 166, i32 92, i32 135, i32 200, i32 160, i32 110, i32 225, i32 176, i32 173, i32 106, i32 74, i32 52, i32 113, i32 237, i32 124, i32 214, i32 68, i32 3, i32 101, i32 74, i32 92, i32 92, i32 4, i32 245, i32 36, i32 63, i32 176, i32 22, i32 94, i32 140, i32 178, i32 210, i32 197, i32 32, i32 33, i32 19, i32 145, i32 191, i32 119, i32 122, i32 51, i32 188, i32 233, i32 7, i32 57, i32 10, i32 221, i32 125, i32 6, i32 16, i32 154, i32 238, i32 71, i32 115, i32 27, i32 21, i32 90, i32 251, i32 205, i32 77, i32 208, i32 210, i32 58, i32 1, i32 186, i32 84, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 66, i32 201, i32 202, i32 41, i32 76, i32 118, i32 55, i32 218, i32 138, i32 45, i32 124, i32 58, i32 88, i32 242, i32 3, i32 180, i32 181, i32 185, i32 26, i32 19, i32 45, i32 222, i32 95, i32 107, i32 157, i32 186, i32 82, i32 201, i32 93, i32 179, i32 243, i32 48, i32 74, i32 136, i32 218, i32 193, i32 152, i32 68, i32 60, i32 83, i32 78, i32 219, i32 75, i32 185, i32 18, i32 95, i32 205, i32 8, i32 4, i32 239, i32 117, i32 231, i32 177, i32 58, i32 229, i32 7, i32 250, i32 202, i32 101, i32 123, i32 114, i32 16, i32 100, i32 127, i32 228, i32 231, i32 67, i32 75, i32 160, i32 63, i32 43, i32 6, i32 186, i32 23, i32 174, i32 61, i32 230, i32 206, i32 189, i32 184, i32 237, i32 116, i32 17, i32 53, i32 236, i32 150, i32 254, i32 49, i32 227, i32 14, i32 122, i32 78, i32 201, i32 29, i32 203, i32 32, i32 129, i32 159, i32 199, i32 222, i32 107, i32 65, i32 34, i32 53, i32 20, i32 103, i32 119, i32 62, i32 144, i32 129, i32 176, i32 217, i32 133, i32 76, i32 202, i32 155, i32 63, i32 4, i32 89, i32 214, i32 170, i32 23, i32 195, i32 136, i32 52, i32 55, i32 186, i32 67, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 34, i32 176, i32 213, i32 230, i32 199, i32 239, i32 177, i32 167, i32 19, i32 218, i32 96, i32 180, i32 128, i32 193, i32 66, i32 125, i32 16, i32 112, i32 151, i32 4, i32 77, i32 218, i32 35, i32 137, i32 194, i32 14, i32 104, i32 203, i32 222, i32 224, i32 155, i32 41, i32 120, i32 150, i32 156, i32 167, i32 202, i32 128, i32 174, i32 2, i32 133, i32 177, i32 124, i32 4, i32 92, i32 193, i32 91, i32 38, i32 193, i32 186, i32 237, i32 165, i32 89, i32 112, i32 133, i32 140, i32 140, i32 232, i32 135, i32 172, i32 106, i32 40, i32 153, i32 53, i32 160, i32 32, i32 153, i32 105, i32 10, i32 174, i32 163, i32 112, i32 78, i32 100, i32 128, i32 183, i32 133, i32 156, i32 135, i32 84, i32 67, i32 67, i32 85, i32 128, i32 109, i32 141, i32 124, i32 169, i32 100, i32 202, i32 108, i32 46, i32 33, i32 216, i32 200, i32 108, i32 54, i32 136, i32 250, i32 253, i32 240, i32 54, i32 111, i32 7, i32 116, i32 136, i32 80, i32 208, i32 149, i32 56, i32 74, i32 72, i32 46, i32 7, i32 100, i32 151, i32 17, i32 118, i32 1, i32 26, i32 39, i32 77, i32 142, i32 37, i32 154, i32 155, i32 28, i32 34, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 48, i32 107, i32 212, i32 167, i32 81, i32 41, i32 227, i32 249, i32 122, i32 117, i32 42, i32 130, i32 47, i32 214, i32 29, i32 153, i32 43, i32 128, i32 213, i32 103, i32 30, i32 21, i32 157, i32 202, i32 253, i32 235, i32 172, i32 151, i32 53, i32 9, i32 127, i32 63, i32 71, i32 57, i32 55, i32 118, i32 13, i32 29, i32 12, i32 245, i32 90, i32 109, i32 67, i32 136, i32 153, i32 21, i32 180, i32 82, i32 15, i32 42, i32 179, i32 176, i32 63, i32 166, i32 179, i32 38, i32 179, i32 199, i32 69, i32 245, i32 146, i32 95, i32 155, i32 23, i32 173, i32 160, i32 65, i32 236, i32 200, i32 77, i32 185, i32 210, i32 110, i32 150, i32 78, i32 91, i32 197, i32 194, i32 160, i32 27, i32 207, i32 12, i32 191, i32 23, i32 102, i32 87, i32 193, i32 23, i32 144, i32 69, i32 113, i32 194, i32 225, i32 36, i32 235, i32 39, i32 117, i32 120, i32 56, i32 134, i32 87, i32 221, i32 159, i32 238, i32 84, i32 112, i32 101, i32 191, i32 241, i32 44, i32 224, i32 57, i32 13, i32 227, i32 137, i32 253, i32 142, i32 147, i32 79, i32 67, i32 220, i32 213, i32 91, i32 222, i32 249, i32 152, i32 229, i32 123, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 174, i32 6, i32 78, i32 44, i32 82, i32 27, i32 188, i32 90, i32 90, i32 165, i32 190, i32 39, i32 189, i32 235, i32 225, i32 20, i32 23, i32 104, i32 38, i32 7, i32 3, i32 209, i32 24, i32 11, i32 223, i32 241, i32 6, i32 92, i32 166, i32 27, i32 185, i32 36, i32 212, i32 105, i32 130, i32 188, i32 141, i32 248, i32 52, i32 54, i32 117, i32 85, i32 24, i32 85, i32 88, i32 60, i32 121, i32 175, i32 38, i32 128, i32 171, i32 155, i32 149, i32 0, i32 241, i32 203, i32 218, i32 193, i32 159, i32 246, i32 47, i32 162, i32 244, i32 69, i32 141, i32 189, i32 163, i32 196, i32 6, i32 155, i32 31, i32 144, i32 88, i32 96, i32 116, i32 178, i32 0, i32 59, i32 60, i32 210, i32 218, i32 130, i32 187, i32 16, i32 144, i32 105, i32 146, i32 169, i32 180, i32 48, i32 129, i32 227, i32 124, i32 168, i32 137, i32 69, i32 45, i32 171, i32 53, i32 78, i32 135, i32 196, i32 101, i32 151, i32 103, i32 36, i32 164, i32 71, i32 173, i32 63, i32 142, i32 243, i32 203, i32 49, i32 23, i32 119, i32 197, i32 226, i32 215, i32 143, i32 60, i32 193, i32 205, i32 86, i32 72, i32 193, i32 108, i32 105, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 142, i32 189, i32 112, i32 143, i32 2, i32 163, i32 36, i32 77, i32 90, i32 103, i32 196, i32 218, i32 247, i32 32, i32 15, i32 129, i32 91, i32 122, i32 5, i32 36, i32 103, i32 131, i32 11, i32 42, i32 128, i32 231, i32 253, i32 116, i32 75, i32 158, i32 92, i32 13, i32 54, i32 79, i32 241, i32 94, i32 116, i32 53, i32 19, i32 40, i32 215, i32 17, i32 207, i32 184, i32 222, i32 147, i32 179, i32 5, i32 184, i32 181, i32 115, i32 233, i32 235, i32 173, i32 25, i32 30, i32 137, i32 15, i32 139, i32 21, i32 213, i32 140, i32 227, i32 35, i32 151, i32 41, i32 108, i32 196, i32 66, i32 11, i32 221, i32 192, i32 41, i32 92, i32 155, i32 52, i32 151, i32 208, i32 199, i32 121, i32 128, i32 99, i32 116, i32 228, i32 142, i32 55, i32 176, i32 43, i32 124, i32 232, i32 104, i32 108, i32 195, i32 130, i32 151, i32 87, i32 132, i32 240, i32 74, i32 19, i32 166, i32 214, i32 250, i32 147, i32 70, i32 7, i32 246, i32 126, i32 92, i32 109, i32 94, i32 246, i32 166, i32 231, i32 72, i32 240, i32 6, i32 234, i32 255, i32 144, i32 193, i32 204, i32 76, i32 25, i32 156, i32 60, i32 78, i32 83, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 106, i32 79, i32 27, i32 190, i32 107, i32 48, i32 207, i32 117, i32 70, i32 227, i32 123, i32 157, i32 252, i32 205, i32 216, i32 92, i32 31, i32 180, i32 200, i32 226, i32 36, i32 236, i32 26, i32 40, i32 5, i32 50, i32 87, i32 253, i32 60, i32 90, i32 152, i32 16, i32 42, i32 147, i32 210, i32 133, i32 27, i32 106, i32 93, i32 166, i32 238, i32 209, i32 209, i32 51, i32 189, i32 106, i32 54, i32 115, i32 55, i32 58, i32 68, i32 180, i32 236, i32 169, i32 122, i32 222, i32 131, i32 64, i32 215, i32 223, i32 40, i32 186, i32 162, i32 48, i32 155, i32 53, i32 226, i32 169, i32 61, i32 50, i32 30, i32 187, i32 22, i32 40, i32 112, i32 233, i32 69, i32 47, i32 143, i32 112, i32 127, i32 8, i32 126, i32 83, i32 196, i32 122, i32 191, i32 247, i32 225, i32 164, i32 106, i32 216, i32 172, i32 100, i32 27, i32 17, i32 160, i32 190, i32 114, i32 58, i32 80, i32 75, i32 116, i32 171, i32 1, i32 200, i32 147, i32 197, i32 228, i32 199, i32 8, i32 108, i32 180, i32 202, i32 238, i32 235, i32 142, i32 215, i32 78, i32 38, i32 198, i32 29, i32 226, i32 113, i32 175, i32 137, i32 160, i32 42, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 244, i32 41, i32 116, i32 46, i32 128, i32 167, i32 26, i32 143, i32 246, i32 189, i32 214, i32 142, i32 191, i32 193, i32 149, i32 42, i32 235, i32 160, i32 127, i32 69, i32 160, i32 80, i32 20, i32 5, i32 177, i32 87, i32 76, i32 116, i32 183, i32 226, i32 137, i32 125, i32 213, i32 252, i32 134, i32 163, i32 59, i32 163, i32 62, i32 10, i32 251, i32 11, i32 247, i32 54, i32 177, i32 91, i32 218, i32 112, i32 183, i32 0, i32 167, i32 218, i32 136, i32 143, i32 132, i32 168, i32 188, i32 28, i32 57, i32 184, i32 101, i32 243, i32 77, i32 96, i32 41, i32 216, i32 242, i32 170, i32 233, i32 14, i32 247, i32 46, i32 95, i32 157, i32 138, i32 91, i32 9, i32 237, i32 201, i32 36, i32 34, i32 244, i32 15, i32 37, i32 143, i32 28, i32 132, i32 110, i32 52, i32 20, i32 108, i32 234, i32 179, i32 134, i32 93, i32 4, i32 3, i32 27, i32 121, i32 83, i32 110, i32 36, i32 174, i32 87, i32 217, i32 88, i32 9, i32 133, i32 72, i32 162, i32 211, i32 181, i32 226, i32 77, i32 17, i32 130, i32 230, i32 134, i32 60, i32 233, i32 177, i32 0, i32 25, i32 194, i32 87, i32 247, i32 102, i32 122, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 139, i32 216, i32 83, i32 134, i32 36, i32 134, i32 41, i32 82, i32 1, i32 250, i32 32, i32 195, i32 78, i32 149, i32 203, i32 173, i32 123, i32 52, i32 148, i32 48, i32 183, i32 122, i32 250, i32 150, i32 65, i32 96, i32 43, i32 203, i32 89, i32 185, i32 202, i32 80, i32 176, i32 230, i32 47, i32 129, i32 112, i32 161, i32 46, i32 57, i32 4, i32 124, i32 196, i32 44, i32 135, i32 69, i32 74, i32 91, i32 105, i32 151, i32 172, i32 109, i32 44, i32 16, i32 66, i32 124, i32 59, i32 21, i32 112, i32 96, i32 14, i32 17, i32 109, i32 58, i32 25, i32 249, i32 53, i32 170, i32 89, i32 26, i32 12, i32 92, i32 6, i32 252, i32 106, i32 11, i32 151, i32 83, i32 54, i32 252, i32 42, i32 165, i32 90, i32 155, i32 48, i32 239, i32 35, i32 175, i32 57, i32 93, i32 154, i32 107, i32 117, i32 87, i32 72, i32 11, i32 254, i32 130, i32 177, i32 116, i32 49, i32 138, i32 167, i32 111, i32 86, i32 189, i32 141, i32 244, i32 224, i32 148, i32 81, i32 89, i32 222, i32 44, i32 90, i32 244, i32 132, i32 107, i32 74, i32 136, i32 147, i32 192, i32 12, i32 154, i32 172, i32 167, i32 160, i32 104, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 101, i32 156, i32 93, i32 240, i32 55, i32 4, i32 240, i32 52, i32 105, i32 42, i32 240, i32 165, i32 100, i32 202, i32 222, i32 43, i32 91, i32 21, i32 16, i32 210, i32 171, i32 6, i32 221, i32 196, i32 176, i32 182, i32 91, i32 193, i32 23, i32 223, i32 143, i32 2, i32 93, i32 147, i32 85, i32 223, i32 155, i32 18, i32 25, i32 236, i32 147, i32 133, i32 66, i32 158, i32 102, i32 15, i32 157, i32 175, i32 153, i32 175, i32 38, i32 137, i32 188, i32 97, i32 253, i32 255, i32 206, i32 75, i32 244, i32 51, i32 149, i32 201, i32 53, i32 88, i32 0, i32 169, i32 76, i32 178, i32 18, i32 248, i32 50, i32 168, i32 122, i32 0, i32 75, i32 73, i32 50, i32 186, i32 31, i32 93, i32 68, i32 142, i32 68, i32 122, i32 220, i32 17, i32 251, i32 57, i32 8, i32 87, i32 135, i32 165, i32 18, i32 66, i32 147, i32 14, i32 109, i32 124, i32 130, i32 50, i32 56, i32 85, i32 87, i32 116, i32 91, i32 125, i32 195, i32 196, i32 251, i32 6, i32 41, i32 240, i32 19, i32 85, i32 84, i32 198, i32 167, i32 220, i32 76, i32 159, i32 152, i32 73, i32 32, i32 168, i32 195, i32 141, i32 250, i32 72, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 252, i32 187, i32 213, i32 120, i32 109, i32 29, i32 212, i32 153, i32 180, i32 170, i32 68, i32 68, i32 122, i32 27, i32 216, i32 254, i32 180, i32 153, i32 185, i32 204, i32 231, i32 196, i32 211, i32 58, i32 115, i32 131, i32 65, i32 92, i32 64, i32 215, i32 45, i32 85, i32 211, i32 17, i32 61, i32 171, i32 239, i32 44, i32 237, i32 177, i32 61, i32 124, i32 50, i32 129, i32 107, i32 254, i32 248, i32 28, i32 60, i32 123, i32 192, i32 97, i32 223, i32 184, i32 117, i32 118, i32 127, i32 170, i32 216, i32 147, i32 175, i32 61, i32 232, i32 61, i32 192, i32 97, i32 72, i32 72, i32 23, i32 244, i32 158, i32 24, i32 81, i32 45, i32 234, i32 47, i32 242, i32 242, i32 224, i32 163, i32 20, i32 183, i32 139, i32 58, i32 48, i32 245, i32 129, i32 193, i32 93, i32 113, i32 57, i32 98, i32 85, i32 31, i32 96, i32 90, i32 206, i32 96, i32 9, i32 108, i32 245, i32 118, i32 23, i32 36, i32 128, i32 58, i32 150, i32 199, i32 148, i32 46, i32 247, i32 107, i32 239, i32 181, i32 5, i32 150, i32 239, i32 211, i32 123, i32 81, i32 218, i32 5, i32 68, i32 103, i32 188, i32 7, i32 33, i32 78, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 248, i32 173, i32 67, i32 194, i32 23, i32 6, i32 226, i32 228, i32 169, i32 134, i32 205, i32 24, i32 215, i32 120, i32 200, i32 116, i32 102, i32 210, i32 9, i32 24, i32 165, i32 241, i32 202, i32 166, i32 98, i32 146, i32 193, i32 203, i32 0, i32 235, i32 66, i32 46, i32 32, i32 11, i32 161, i32 8, i32 25, i32 173, i32 57, i32 84, i32 234, i32 62, i32 35, i32 9, i32 182, i32 226, i32 210, i32 188, i32 77, i32 252, i32 156, i32 240, i32 19, i32 22, i32 34, i32 63, i32 185, i32 210, i32 17, i32 134, i32 144, i32 85, i32 206, i32 60, i32 163, i32 100, i32 23, i32 155, i32 139, i32 200, i32 58, i32 97, i32 230, i32 157, i32 198, i32 237, i32 123, i32 3, i32 82, i32 38, i32 157, i32 58, i32 179, i32 19, i32 204, i32 138, i32 253, i32 44, i32 26, i32 29, i32 237, i32 19, i32 208, i32 85, i32 87, i32 14, i32 44, i32 40, i32 244, i32 58, i32 246, i32 222, i32 10, i32 224, i32 65, i32 68, i32 35, i32 248, i32 63, i32 3, i32 100, i32 159, i32 195, i32 85, i32 76, i32 198, i32 193, i32 148, i32 28, i32 36, i32 93, i32 95, i32 146, i32 69, i32 150, i32 87, i32 55, i32 20, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 53, i32 176, i32 230, i32 115, i32 6, i32 183, i32 55, i32 224, i32 248, i32 176, i32 34, i32 232, i32 210, i32 237, i32 11, i32 239, i32 230, i32 198, i32 90, i32 153, i32 158, i32 26, i32 159, i32 4, i32 151, i32 228, i32 77, i32 11, i32 190, i32 186, i32 68, i32 64, i32 53, i32 163, i32 120, i32 209, i32 17, i32 15, i32 117, i32 211, i32 112, i32 70, i32 219, i32 32, i32 81, i32 203, i32 146, i32 128, i32 84, i32 16, i32 116, i32 54, i32 134, i32 169, i32 215, i32 163, i32 8, i32 120, i32 241, i32 1, i32 41, i32 248, i32 128, i32 59, i32 167, i32 187, i32 246, i32 142, i32 173, i32 221, i32 247, i32 144, i32 221, i32 95, i32 147, i32 137, i32 174, i32 4, i32 55, i32 230, i32 154, i32 183, i32 232, i32 192, i32 223, i32 22, i32 42, i32 191, i32 196, i32 58, i32 60, i32 65, i32 213, i32 137, i32 114, i32 90, i32 30, i32 212, i32 147, i32 87, i32 226, i32 23, i32 231, i32 157, i32 171, i32 60, i32 85, i32 3, i32 130, i32 47, i32 43, i32 219, i32 86, i32 30, i32 48, i32 46, i32 36, i32 71, i32 110, i32 230, i32 255, i32 51, i32 36, i32 44, i32 117, i32 81, i32 212, i32 103, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 105, i32 251, i32 161, i32 156, i32 166, i32 117, i32 73, i32 125, i32 96, i32 115, i32 64, i32 66, i32 196, i32 19, i32 10, i32 149, i32 121, i32 30, i32 4, i32 131, i32 148, i32 153, i32 155, i32 30, i32 12, i32 232, i32 31, i32 84, i32 239, i32 203, i32 192, i32 82, i32 233, i32 221, i32 94, i32 85, i32 176, i32 10, i32 222, i32 33, i32 76, i32 90, i32 46, i32 212, i32 128, i32 58, i32 87, i32 146, i32 122, i32 241, i32 196, i32 44, i32 64, i32 175, i32 47, i32 201, i32 146, i32 3, i32 229, i32 90, i32 188, i32 220, i32 244, i32 9, i32 157, i32 69, i32 214, i32 128, i32 230, i32 69, i32 170, i32 244, i32 21, i32 170, i32 92, i32 52, i32 135, i32 153, i32 162, i32 140, i32 38, i32 132, i32 98, i32 125, i32 182, i32 41, i32 192, i32 82, i32 234, i32 245, i32 129, i32 24, i32 15, i32 53, i32 169, i32 14, i32 21, i32 85, i32 55, i32 198, i32 28, i32 39, i32 28, i32 109, i32 20, i32 79, i32 202, i32 164, i32 196, i32 136, i32 37, i32 70, i32 57, i32 252, i32 90, i32 229, i32 254, i32 41, i32 17, i32 105, i32 245, i32 114, i32 132, i32 77, i32 120, i32 159, i32 148, i32 21, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 184, i32 66, i32 28, i32 3, i32 173, i32 44, i32 3, i32 142, i32 172, i32 215, i32 152, i32 41, i32 19, i32 198, i32 2, i32 41, i32 181, i32 212, i32 231, i32 207, i32 204, i32 139, i32 131, i32 236, i32 53, i32 199, i32 156, i32 116, i32 183, i32 173, i32 133, i32 95, i32 44, i32 108, i32 247, i32 102, i32 164, i32 98, i32 107, i32 57, i32 179, i32 186, i32 101, i32 211, i32 28, i32 248, i32 17, i32 170, i32 190, i32 220, i32 128, i32 89, i32 135, i32 245, i32 123, i32 229, i32 227, i32 179, i32 62, i32 57, i32 218, i32 190, i32 136, i32 9, i32 218, i32 124, i32 164, i32 12, i32 244, i32 186, i32 110, i32 225, i32 137, i32 181, i32 89, i32 202, i32 241, i32 192, i32 41, i32 54, i32 9, i32 68, i32 226, i32 127, i32 209, i32 99, i32 21, i32 153, i32 234, i32 37, i32 207, i32 12, i32 157, i32 192, i32 68, i32 111, i32 105, i32 62, i32 71, i32 151, i32 44, i32 175, i32 82, i32 124, i32 120, i32 131, i32 173, i32 27, i32 57, i32 130, i32 47, i32 2, i32 111, i32 71, i32 219, i32 42, i32 176, i32 225, i32 145, i32 153, i32 85, i32 184, i32 153, i32 58, i32 160, i32 68, i32 17, i32 81] ; [#uses=36 type=[13600 x i32]*]
@crypto_sign_ed25519_4 = constant [32 x i32] [i32 88, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_ed25519_3 = constant [32 x i32] [i32 26, i32 213, i32 37, i32 143, i32 96, i32 45, i32 86, i32 201, i32 178, i32 167, i32 37, i32 149, i32 96, i32 199, i32 44, i32 105, i32 92, i32 220, i32 214, i32 253, i32 49, i32 226, i32 164, i32 192, i32 254, i32 83, i32 110, i32 205, i32 211, i32 54, i32 105, i32 33] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_ed25519_1 = constant [32 x i32] [i32 163, i32 221, i32 183, i32 165, i32 179, i32 138, i32 222, i32 109, i32 245, i32 82, i32 81, i32 119, i32 128, i32 159, i32 240, i32 32, i32 125, i32 227, i32 171, i32 100, i32 142, i32 78, i32 234, i32 102, i32 101, i32 118, i32 139, i32 215, i32 15, i32 95, i32 135, i32 103] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_ed25519_s = constant [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_str = internal unnamed_addr constant [12 x i8] c"crypto_sign\00" ; [#uses=1 type=[12 x i8]*]
@RAM_1P_str = internal unnamed_addr constant [7 x i8] c"RAM_1P\00" ; [#uses=8 type=[7 x i8]*]
@K = internal unnamed_addr constant [80 x i64] [i64 4794697086780616226, i64 8158064640168781261, i64 -5349999486874862801, i64 -1606136188198331460, i64 4131703408338449720, i64 6480981068601479193, i64 -7908458776815382629, i64 -6116909921290321640, i64 -2880145864133508542, i64 1334009975649890238, i64 2608012711638119052, i64 6128411473006802146, i64 8268148722764581231, i64 -9160688886553864527, i64 -7215885187991268811, i64 -4495734319001033068, i64 -1973867731355612462, i64 -1171420211273849373, i64 1135362057144423861, i64 2597628984639134821, i64 3308224258029322869, i64 5365058923640841347, i64 6679025012923562964, i64 8573033837759648693, i64 -7476448914759557205, i64 -6327057829258317296, i64 -5763719355590565569, i64 -4658551843659510044, i64 -4116276920077217854, i64 -3051310485924567259, i64 489312712824947311, i64 1452737877330783856, i64 2861767655752347644, i64 3322285676063803686, i64 5560940570517711597, i64 5996557281743188959, i64 7280758554555802590, i64 8532644243296465576, i64 -9096487096722542874, i64 -7894198246740708037, i64 -6719396339535248540, i64 -6333637450476146687, i64 -4446306890439682159, i64 -4076793802049405392, i64 -3345356375505022440, i64 -2983346525034927856, i64 -860691631967231958, i64 1182934255886127544, i64 1847814050463011016, i64 2177327727835720531, i64 2830643537854262169, i64 3796741975233480872, i64 4115178125766777443, i64 5681478168544905931, i64 6601373596472566643, i64 7507060721942968483, i64 8399075790359081724, i64 8693463985226723168, i64 -8878714635349349518, i64 -8302665154208450068, i64 -8016688836872298968, i64 -6606660893046293015, i64 -4685533653050689259, i64 -4147400797238176981, i64 -3880063495543823972, i64 -3348786107499101689, i64 -1523767162380948706, i64 -757361751448694408, i64 500013540394364858, i64 748580250866718886, i64 1242879168328830382, i64 1977374033974150939, i64 2944078676154940804, i64 3659926193048069267, i64 4368137639120453308, i64 4836135668995329356, i64 5532061633213252278, i64 6448918945643986474, i64 6902733635092675308, i64 7801388544844847127], align 16 ; [#uses=24 type=[80 x i64]*]
@p_str816 = private unnamed_addr constant [20 x i8] c"sha512_compress_128\00", align 1 ; [#uses=2 type=[20 x i8]*]
@p_str8 = private unnamed_addr constant [4 x i8] c"mul\00", align 1 ; [#uses=7 type=[4 x i8]*]
@p_str715 = private unnamed_addr constant [4 x i8] c"sub\00", align 1 ; [#uses=7 type=[4 x i8]*]
@p_str7 = private unnamed_addr constant [9 x i8] c"_memmove\00", align 1 ; [#uses=1 type=[9 x i8]*]
@p_str614 = private unnamed_addr constant [5 x i8] c"icmp\00", align 1 ; [#uses=7 type=[5 x i8]*]
@p_str6 = private unnamed_addr constant [12 x i8] c"sha512_init\00", align 1 ; [#uses=1 type=[12 x i8]*]
@p_str513 = private unnamed_addr constant [5 x i8] c"lshr\00", align 1 ; [#uses=7 type=[5 x i8]*]
@p_str5 = private unnamed_addr constant [13 x i8] c"sha512_final\00", align 1 ; [#uses=1 type=[13 x i8]*]
@p_str412 = private unnamed_addr constant [5 x i8] c"ashr\00", align 1 ; [#uses=7 type=[5 x i8]*]
@p_str4 = private unnamed_addr constant [18 x i8] c"sha512_update_128\00", align 1 ; [#uses=1 type=[18 x i8]*]
@p_str311 = private unnamed_addr constant [4 x i8] c"shl\00", align 1 ; [#uses=7 type=[4 x i8]*]
@p_str3 = private unnamed_addr constant [17 x i8] c"sha512_update_32\00", align 1 ; [#uses=1 type=[17 x i8]*]
@p_str210 = private unnamed_addr constant [4 x i8] c"add\00", align 1 ; [#uses=7 type=[4 x i8]*]
@p_str2 = private unnamed_addr constant [6 x i8] c"m_axi\00", align 1 ; [#uses=1 type=[6 x i8]*]
@p_str19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=153 type=[1 x i8]*]
@p_str13 = internal unnamed_addr constant [1 x i8] zeroinitializer ; [#uses=7 type=[1 x i8]*]
@p_str12 = internal unnamed_addr constant [1 x i8] zeroinitializer ; [#uses=49 type=[1 x i8]*]
@p_str1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=45 type=[1 x i8]*]
@p_str = private unnamed_addr constant [10 x i8] c"s_axilite\00", align 1 ; [#uses=4 type=[10 x i8]*]

; [#uses=3]
define internal fastcc { i64, i64 } @sha512_update_32.1(i64 %md_length_read, [8 x i64]* nocapture %md_state, i64 %md_curlen_read, [128 x i8]* nocapture %md_buf, [64 x i8]* nocapture %in, i7 %in_offset) {
  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %in, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  %in_offset_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %in_offset) ; [#uses=2 type=i7]
  %md_curlen_read_1 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %md_curlen_read) ; [#uses=3 type=i64]
  call void @llvm.dbg.value(metadata !{i64 %md_curlen_read_1}, i64 0, metadata !133), !dbg !167 ; [debug line = 298:39] [debug variable = md.curlen]
  %md_length_read_1 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %md_length_read) ; [#uses=2 type=i64]
  call void @llvm.dbg.value(metadata !{i64 %md_length_read_1}, i64 0, metadata !168), !dbg !167 ; [debug line = 298:39] [debug variable = md.length]
  %in_offset_cast1 = zext i7 %in_offset_read to i64 ; [#uses=1 type=i64]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{i64 %md_length_read}, i64 0, metadata !168), !dbg !167 ; [debug line = 298:39] [debug variable = md.length]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !172), !dbg !167 ; [debug line = 298:39] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{i64 %md_curlen_read}, i64 0, metadata !133), !dbg !167 ; [debug line = 298:39] [debug variable = md.curlen]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md_buf}, i64 0, metadata !176), !dbg !167 ; [debug line = 298:39] [debug variable = md.buf]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !180 ; [debug line = 300:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !182 ; [debug line = 301:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !183 ; [debug line = 302:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !184 ; [debug line = 303:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !185 ; [debug line = 304:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !186 ; [debug line = 305:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !187 ; [debug line = 306:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !188), !dbg !189 ; [debug line = 311:19] [debug variable = temp_buf]
  %tmp = icmp ugt i64 %md_curlen_read_1, 128, !dbg !190 ; [#uses=1 type=i1] [debug line = 315:5]
  br i1 %tmp, label %.loopexit, label %.backedge.preheader, !dbg !190 ; [debug line = 315:5]

.backedge.preheader:                              ; preds = %0
  %p_01_idx = alloca i64                          ; [#uses=7 type=i64*]
  %inlen = alloca i64                             ; [#uses=5 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %inlen}, metadata !191) ; [debug variable = inlen]
  %md_length = alloca i64                         ; [#uses=4 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %md_length}, metadata !168) ; [debug variable = md.length]
  %md_curlen = alloca i64                         ; [#uses=5 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %md_curlen}, metadata !133) ; [debug variable = md.curlen]
  %in_offset_cast = zext i7 %in_offset_read to i8 ; [#uses=1 type=i8]
  store i64 %md_curlen_read_1, i64* %md_curlen, !dbg !167 ; [debug line = 298:39]
  store i64 %md_length_read_1, i64* %md_length, !dbg !167 ; [debug line = 298:39]
  store i64 32, i64* %inlen
  store i64 0, i64* %p_01_idx
  br label %.backedge

.backedge:                                        ; preds = %.backedge.backedge, %.backedge.preheader
  %inlen_load = load i64* %inlen, !dbg !192       ; [#uses=6 type=i64] [debug line = 325:12]
  %md_length_load = load i64* %md_length, !dbg !195 ; [#uses=3 type=i64] [debug line = 323:12]
  %md_curlen_load = load i64* %md_curlen          ; [#uses=5 type=i64]
  %tmp_1 = icmp eq i64 %inlen_load, 0, !dbg !196  ; [#uses=1 type=i1] [debug line = 318:5]
  br i1 %tmp_1, label %.loopexit.loopexit, label %1, !dbg !196 ; [debug line = 318:5]

; <label>:1                                       ; preds = %.backedge
  %tmp_2 = icmp eq i64 %md_curlen_load, 0, !dbg !197 ; [#uses=1 type=i1] [debug line = 319:9]
  %tmp_3 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %inlen_load, i32 7, i32 63), !dbg !197 ; [#uses=1 type=i57] [debug line = 319:9]
  %icmp = icmp ne i57 %tmp_3, 0, !dbg !197        ; [#uses=1 type=i1] [debug line = 319:9]
  %or_cond = and i1 %tmp_2, %icmp, !dbg !197      ; [#uses=1 type=i1] [debug line = 319:9]
  br i1 %or_cond, label %2, label %._crit_edge, !dbg !197 ; [debug line = 319:9]

; <label>:2                                       ; preds = %1
  %p_01_idx_load = load i64* %p_01_idx, !dbg !198 ; [#uses=2 type=i64] [debug line = 324:12]
  %sum3 = add i64 %in_offset_cast1, %p_01_idx_load ; [#uses=1 type=i64]
  call fastcc void @sha512_compress_32([8 x i64]* %md_state, [64 x i8]* %in, i64 %sum3), !dbg !199 ; [debug line = 320:23]
  %tmp_4 = add i64 %md_length_load, 1024, !dbg !195 ; [#uses=1 type=i64] [debug line = 323:12]
  %p_01_idx8 = add i64 %p_01_idx_load, 128, !dbg !198 ; [#uses=1 type=i64] [debug line = 324:12]
  %inlen_1 = add i64 %inlen_load, -128, !dbg !192 ; [#uses=1 type=i64] [debug line = 325:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen_1}, i64 0, metadata !191), !dbg !192 ; [debug line = 325:12] [debug variable = inlen]
  store i64 0, i64* %md_curlen
  store i64 %tmp_4, i64* %md_length
  store i64 %inlen_1, i64* %inlen, !dbg !192      ; [debug line = 325:12]
  store i64 %p_01_idx8, i64* %p_01_idx
  br label %.backedge.backedge, !dbg !200         ; [debug line = 326:9]

._crit_edge:                                      ; preds = %1
  %tmp_6 = sub i64 128, %md_curlen_load, !dbg !201 ; [#uses=2 type=i64] [debug line = 327:12]
  %tmp_7 = icmp ult i64 %inlen_load, %tmp_6, !dbg !201 ; [#uses=1 type=i1] [debug line = 327:12]
  %n = select i1 %tmp_7, i64 %inlen_load, i64 %tmp_6, !dbg !201 ; [#uses=4 type=i64] [debug line = 327:12]
  call void @llvm.dbg.value(metadata !{i64 %n}, i64 0, metadata !203), !dbg !201 ; [debug line = 327:12] [debug variable = n]
  br label %3, !dbg !204                          ; [debug line = 329:17]

; <label>:3                                       ; preds = %4, %._crit_edge
  %i = phi i64 [ 0, %._crit_edge ], [ %i_1, %4 ]  ; [#uses=4 type=i64]
  %tmp_12 = trunc i64 %i to i9, !dbg !204         ; [#uses=1 type=i9] [debug line = 329:17]
  %tmp_13 = trunc i64 %i to i8, !dbg !204         ; [#uses=1 type=i8] [debug line = 329:17]
  %exitcond3 = icmp eq i64 %i, %n, !dbg !204      ; [#uses=1 type=i1] [debug line = 329:17]
  %i_1 = add i64 1, %i, !dbg !206                 ; [#uses=1 type=i64] [debug line = 329:31]
  br i1 %exitcond3, label %5, label %4, !dbg !204 ; [debug line = 329:17]

; <label>:4                                       ; preds = %3
  %p_01_idx_load_2 = load i64* %p_01_idx          ; [#uses=1 type=i64]
  %tmp1 = add i8 %tmp_13, %in_offset_cast         ; [#uses=1 type=i8]
  %tmp_14 = trunc i64 %p_01_idx_load_2 to i8      ; [#uses=1 type=i8]
  %sum2 = add i8 %tmp1, %tmp_14                   ; [#uses=1 type=i8]
  %sum2_cast = zext i8 %sum2 to i64               ; [#uses=1 type=i64]
  %in_addr = getelementptr [64 x i8]* %in, i64 0, i64 %sum2_cast, !dbg !207 ; [#uses=1 type=i8*] [debug line = 330:13]
  %in_load = load i8* %in_addr, align 1, !dbg !207 ; [#uses=1 type=i8] [debug line = 330:13]
  %tmp_15 = trunc i64 %md_curlen_load to i9       ; [#uses=1 type=i9]
  %tmp_5 = add i9 %tmp_15, %tmp_12, !dbg !207     ; [#uses=1 type=i9] [debug line = 330:13]
  %tmp_5_cast = zext i9 %tmp_5 to i64, !dbg !207  ; [#uses=1 type=i64] [debug line = 330:13]
  %md_buf_addr = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_5_cast, !dbg !207 ; [#uses=1 type=i8*] [debug line = 330:13]
  store i8 %in_load, i8* %md_buf_addr, align 1, !dbg !207 ; [debug line = 330:13]
  call void @llvm.dbg.value(metadata !{i64 %i_1}, i64 0, metadata !209), !dbg !206 ; [debug line = 329:31] [debug variable = i]
  br label %3, !dbg !206                          ; [debug line = 329:31]

; <label>:5                                       ; preds = %3
  %p_01_idx_load_1 = load i64* %p_01_idx, !dbg !210 ; [#uses=1 type=i64] [debug line = 335:12]
  %tmp_8 = add i64 %n, %md_curlen_load, !dbg !211 ; [#uses=2 type=i64] [debug line = 334:12]
  %p_01_idx9 = add i64 %n, %p_01_idx_load_1, !dbg !210 ; [#uses=2 type=i64] [debug line = 335:12]
  %inlen_2 = sub i64 %inlen_load, %n, !dbg !212   ; [#uses=2 type=i64] [debug line = 336:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen_2}, i64 0, metadata !191), !dbg !212 ; [debug line = 336:12] [debug variable = inlen]
  %tmp_s = icmp eq i64 %tmp_8, 128, !dbg !213     ; [#uses=1 type=i1] [debug line = 337:4]
  br i1 %tmp_s, label %.preheader5.preheader, label %.backedge.backedge.pre, !dbg !213 ; [debug line = 337:4]

.preheader5.preheader:                            ; preds = %5
  br label %.preheader5, !dbg !214                ; [debug line = 338:9]

.preheader5:                                      ; preds = %6, %.preheader5.preheader
  %temp_index = phi i8 [ %temp_index_2, %6 ], [ 0, %.preheader5.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index, -128, !dbg !214 ; [#uses=1 type=i1] [debug line = 338:9]
  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_2 = add i8 %temp_index, 1, !dbg !217 ; [#uses=1 type=i8] [debug line = 338:39]
  br i1 %exitcond2, label %7, label %6, !dbg !214 ; [debug line = 338:9]

; <label>:6                                       ; preds = %.preheader5
  %tmp_9 = zext i8 %temp_index to i64, !dbg !218  ; [#uses=2 type=i64] [debug line = 339:6]
  %md_buf_addr_1 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_9, !dbg !218 ; [#uses=1 type=i8*] [debug line = 339:6]
  %md_buf_load = load i8* %md_buf_addr_1, align 1, !dbg !218 ; [#uses=1 type=i8] [debug line = 339:6]
  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_9, !dbg !218 ; [#uses=1 type=i8*] [debug line = 339:6]
  store i8 %md_buf_load, i8* %temp_buf_addr, align 1, !dbg !218 ; [debug line = 339:6]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_2}, i64 0, metadata !220), !dbg !217 ; [debug line = 338:39] [debug variable = temp_index]
  br label %.preheader5, !dbg !217                ; [debug line = 338:39]

; <label>:7                                       ; preds = %.preheader5
  call fastcc void @sha512_compress_128([8 x i64]* %md_state, [128 x i8]* %temp_buf), !dbg !221 ; [debug line = 341:16]
  br label %.preheader, !dbg !221                 ; [debug line = 341:16]

.preheader:                                       ; preds = %8, %7
  %temp_index_1 = phi i8 [ %temp_index_3, %8 ], [ 0, %7 ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %temp_index_1, -128, !dbg !222 ; [#uses=1 type=i1] [debug line = 344:9]
  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_3 = add i8 %temp_index_1, 1, !dbg !224 ; [#uses=1 type=i8] [debug line = 344:39]
  br i1 %exitcond, label %9, label %8, !dbg !222  ; [debug line = 344:9]

; <label>:8                                       ; preds = %.preheader
  %tmp_11 = zext i8 %temp_index_1 to i64, !dbg !225 ; [#uses=2 type=i64] [debug line = 345:6]
  %temp_buf_addr_1 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_11, !dbg !225 ; [#uses=1 type=i8*] [debug line = 345:6]
  %temp_buf_load = load i8* %temp_buf_addr_1, align 1, !dbg !225 ; [#uses=1 type=i8] [debug line = 345:6]
  %md_buf_addr_2 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_11, !dbg !225 ; [#uses=1 type=i8*] [debug line = 345:6]
  store i8 %temp_buf_load, i8* %md_buf_addr_2, align 1, !dbg !225 ; [debug line = 345:6]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_3}, i64 0, metadata !220), !dbg !224 ; [debug line = 344:39] [debug variable = temp_index]
  br label %.preheader, !dbg !224                 ; [debug line = 344:39]

; <label>:9                                       ; preds = %.preheader
  %tmp_10 = add i64 %md_length_load, 1024, !dbg !227 ; [#uses=1 type=i64] [debug line = 347:5]
  store i64 0, i64* %md_curlen
  store i64 %tmp_10, i64* %md_length
  store i64 %inlen_2, i64* %inlen, !dbg !212      ; [debug line = 336:12]
  store i64 %p_01_idx9, i64* %p_01_idx
  br label %.backedge.backedge, !dbg !228         ; [debug line = 349:4]

.backedge.backedge.pre:                           ; preds = %5
  store i64 %tmp_8, i64* %md_curlen
  store i64 %inlen_2, i64* %inlen, !dbg !212      ; [debug line = 336:12]
  store i64 %p_01_idx9, i64* %p_01_idx
  br label %.backedge.backedge

.backedge.backedge:                               ; preds = %.backedge.backedge.pre, %9, %2
  br label %.backedge

.loopexit.loopexit:                               ; preds = %.backedge
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  %md_length_2 = phi i64 [ %md_length_read_1, %0 ], [ %md_length_load, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %md_curlen_2 = phi i64 [ %md_curlen_read_1, %0 ], [ %md_curlen_load, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %mrv = insertvalue { i64, i64 } undef, i64 %md_length_2, 0 ; [#uses=1 type={ i64, i64 }]
  %mrv_1 = insertvalue { i64, i64 } %mrv, i64 %md_curlen_2, 1 ; [#uses=1 type={ i64, i64 }]
  ret { i64, i64 } %mrv_1
}

; [#uses=1]
define internal fastcc { i64, i64 } @sha512_update_32([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %md_buf, [64 x i8]* nocapture %in) {
  %p_01_idx = alloca i64                          ; [#uses=7 type=i64*]
  %inlen = alloca i64                             ; [#uses=5 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %inlen}, metadata !191) ; [debug variable = inlen]
  %md_curlen = alloca i64                         ; [#uses=8 type=i64*]
  %md_length = alloca i64                         ; [#uses=6 type=i64*]
  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %in, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !172), !dbg !167 ; [debug line = 298:39] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md_buf}, i64 0, metadata !176), !dbg !167 ; [debug line = 298:39] [debug variable = md.buf]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %in}, i64 0, metadata !229), !dbg !233 ; [debug line = 298:63] [debug variable = in]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !180 ; [debug line = 300:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !182 ; [debug line = 301:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !183 ; [debug line = 302:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !184 ; [debug line = 303:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !185 ; [debug line = 304:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !186 ; [debug line = 305:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !187 ; [debug line = 306:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !188), !dbg !189 ; [debug line = 311:19] [debug variable = temp_buf]
  store i64 0, i64* %md_length
  store i64 0, i64* %md_curlen
  store i64 32, i64* %inlen
  store i64 0, i64* %p_01_idx
  br label %.backedge, !dbg !190                  ; [debug line = 315:5]

.backedge:                                        ; preds = %.backedge.backedge, %0
  %inlen_load = load i64* %inlen, !dbg !192       ; [#uses=6 type=i64] [debug line = 325:12]
  %tmp_1 = icmp eq i64 %inlen_load, 0, !dbg !196  ; [#uses=1 type=i1] [debug line = 318:5]
  br i1 %tmp_1, label %.loopexit, label %1, !dbg !196 ; [debug line = 318:5]

; <label>:1                                       ; preds = %.backedge
  %md_curlen_load_2 = load i64* %md_curlen, !dbg !197 ; [#uses=2 type=i64] [debug line = 319:9]
  %tmp_2 = icmp eq i64 %md_curlen_load_2, 0, !dbg !197 ; [#uses=1 type=i1] [debug line = 319:9]
  %tmp = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %inlen_load, i32 7, i32 63), !dbg !197 ; [#uses=1 type=i57] [debug line = 319:9]
  %icmp = icmp ne i57 %tmp, 0, !dbg !197          ; [#uses=1 type=i1] [debug line = 319:9]
  %or_cond = and i1 %tmp_2, %icmp, !dbg !197      ; [#uses=1 type=i1] [debug line = 319:9]
  br i1 %or_cond, label %2, label %._crit_edge, !dbg !197 ; [debug line = 319:9]

; <label>:2                                       ; preds = %1
  %p_01_idx_load = load i64* %p_01_idx, !dbg !198 ; [#uses=2 type=i64] [debug line = 324:12]
  %md_length_load = load i64* %md_length, !dbg !195 ; [#uses=1 type=i64] [debug line = 323:12]
  call fastcc void @sha512_compress_32([8 x i64]* %md_state, [64 x i8]* %in, i64 %p_01_idx_load), !dbg !199 ; [debug line = 320:23]
  %tmp_4 = add i64 %md_length_load, 1024, !dbg !195 ; [#uses=1 type=i64] [debug line = 323:12]
  %p_01_idx8 = add i64 %p_01_idx_load, 128, !dbg !198 ; [#uses=1 type=i64] [debug line = 324:12]
  %inlen_1 = add i64 %inlen_load, -128, !dbg !192 ; [#uses=1 type=i64] [debug line = 325:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen_1}, i64 0, metadata !191), !dbg !192 ; [debug line = 325:12] [debug variable = inlen]
  store i64 %tmp_4, i64* %md_length
  store i64 0, i64* %md_curlen
  store i64 %inlen_1, i64* %inlen, !dbg !192      ; [debug line = 325:12]
  store i64 %p_01_idx8, i64* %p_01_idx
  br label %.backedge.backedge, !dbg !200         ; [debug line = 326:9]

._crit_edge:                                      ; preds = %1
  %tmp_6 = sub i64 128, %md_curlen_load_2, !dbg !201 ; [#uses=2 type=i64] [debug line = 327:12]
  %tmp_7 = icmp ult i64 %inlen_load, %tmp_6, !dbg !201 ; [#uses=1 type=i1] [debug line = 327:12]
  %n = select i1 %tmp_7, i64 %inlen_load, i64 %tmp_6, !dbg !201 ; [#uses=4 type=i64] [debug line = 327:12]
  call void @llvm.dbg.value(metadata !{i64 %n}, i64 0, metadata !203), !dbg !201 ; [debug line = 327:12] [debug variable = n]
  br label %3, !dbg !204                          ; [debug line = 329:17]

; <label>:3                                       ; preds = %4, %._crit_edge
  %i = phi i64 [ 0, %._crit_edge ], [ %i_1, %4 ]  ; [#uses=4 type=i64]
  %tmp_16 = trunc i64 %i to i9, !dbg !204         ; [#uses=1 type=i9] [debug line = 329:17]
  %tmp_17 = trunc i64 %i to i8, !dbg !204         ; [#uses=1 type=i8] [debug line = 329:17]
  %exitcond3 = icmp eq i64 %i, %n, !dbg !204      ; [#uses=1 type=i1] [debug line = 329:17]
  %i_1 = add i64 1, %i, !dbg !206                 ; [#uses=1 type=i64] [debug line = 329:31]
  br i1 %exitcond3, label %5, label %4, !dbg !204 ; [debug line = 329:17]

; <label>:4                                       ; preds = %3
  %p_01_idx_load_4 = load i64* %p_01_idx, !dbg !196 ; [#uses=1 type=i64] [debug line = 318:5]
  %md_curlen_load = load i64* %md_curlen, !dbg !196 ; [#uses=1 type=i64] [debug line = 318:5]
  %tmp_18 = trunc i64 %p_01_idx_load_4 to i8, !dbg !196 ; [#uses=1 type=i8] [debug line = 318:5]
  %sum2 = add i8 %tmp_17, %tmp_18                 ; [#uses=1 type=i8]
  %sum2_cast = zext i8 %sum2 to i64               ; [#uses=1 type=i64]
  %in_addr = getelementptr [64 x i8]* %in, i64 0, i64 %sum2_cast, !dbg !207 ; [#uses=1 type=i8*] [debug line = 330:13]
  %in_load = load i8* %in_addr, align 1, !dbg !207 ; [#uses=1 type=i8] [debug line = 330:13]
  %tmp_19 = trunc i64 %md_curlen_load to i9, !dbg !196 ; [#uses=1 type=i9] [debug line = 318:5]
  %tmp_5 = add i9 %tmp_16, %tmp_19, !dbg !207     ; [#uses=1 type=i9] [debug line = 330:13]
  %tmp_5_cast = zext i9 %tmp_5 to i64, !dbg !207  ; [#uses=1 type=i64] [debug line = 330:13]
  %md_buf_addr = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_5_cast, !dbg !207 ; [#uses=1 type=i8*] [debug line = 330:13]
  store i8 %in_load, i8* %md_buf_addr, align 1, !dbg !207 ; [debug line = 330:13]
  call void @llvm.dbg.value(metadata !{i64 %i_1}, i64 0, metadata !209), !dbg !206 ; [debug line = 329:31] [debug variable = i]
  br label %3, !dbg !206                          ; [debug line = 329:31]

; <label>:5                                       ; preds = %3
  %p_01_idx_load_3 = load i64* %p_01_idx, !dbg !210 ; [#uses=1 type=i64] [debug line = 335:12]
  %md_curlen_load_3 = load i64* %md_curlen, !dbg !211 ; [#uses=1 type=i64] [debug line = 334:12]
  %tmp_8 = add i64 %n, %md_curlen_load_3, !dbg !211 ; [#uses=2 type=i64] [debug line = 334:12]
  %p_01_idx9 = add i64 %n, %p_01_idx_load_3, !dbg !210 ; [#uses=2 type=i64] [debug line = 335:12]
  %inlen_2 = sub i64 %inlen_load, %n, !dbg !212   ; [#uses=2 type=i64] [debug line = 336:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen_2}, i64 0, metadata !191), !dbg !212 ; [debug line = 336:12] [debug variable = inlen]
  %tmp_s = icmp eq i64 %tmp_8, 128, !dbg !213     ; [#uses=1 type=i1] [debug line = 337:4]
  br i1 %tmp_s, label %.preheader5.preheader, label %.backedge.backedge.pre, !dbg !213 ; [debug line = 337:4]

.preheader5.preheader:                            ; preds = %5
  br label %.preheader5, !dbg !214                ; [debug line = 338:9]

.preheader5:                                      ; preds = %6, %.preheader5.preheader
  %temp_index = phi i8 [ %temp_index_2, %6 ], [ 0, %.preheader5.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index, -128, !dbg !214 ; [#uses=1 type=i1] [debug line = 338:9]
  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_2 = add i8 %temp_index, 1, !dbg !217 ; [#uses=1 type=i8] [debug line = 338:39]
  br i1 %exitcond2, label %7, label %6, !dbg !214 ; [debug line = 338:9]

; <label>:6                                       ; preds = %.preheader5
  %tmp_9 = zext i8 %temp_index to i64, !dbg !218  ; [#uses=2 type=i64] [debug line = 339:6]
  %md_buf_addr_1 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_9, !dbg !218 ; [#uses=1 type=i8*] [debug line = 339:6]
  %md_buf_load = load i8* %md_buf_addr_1, align 1, !dbg !218 ; [#uses=1 type=i8] [debug line = 339:6]
  %temp_buf_addr_1 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_9, !dbg !218 ; [#uses=1 type=i8*] [debug line = 339:6]
  store i8 %md_buf_load, i8* %temp_buf_addr_1, align 1, !dbg !218 ; [debug line = 339:6]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_2}, i64 0, metadata !220), !dbg !217 ; [debug line = 338:39] [debug variable = temp_index]
  br label %.preheader5, !dbg !217                ; [debug line = 338:39]

; <label>:7                                       ; preds = %.preheader5
  call fastcc void @sha512_compress_128([8 x i64]* %md_state, [128 x i8]* %temp_buf), !dbg !221 ; [debug line = 341:16]
  br label %.preheader, !dbg !221                 ; [debug line = 341:16]

.preheader:                                       ; preds = %8, %7
  %temp_index_1 = phi i8 [ %temp_index_3, %8 ], [ 0, %7 ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %temp_index_1, -128, !dbg !222 ; [#uses=1 type=i1] [debug line = 344:9]
  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_3 = add i8 %temp_index_1, 1, !dbg !224 ; [#uses=1 type=i8] [debug line = 344:39]
  br i1 %exitcond, label %9, label %8, !dbg !222  ; [debug line = 344:9]

; <label>:8                                       ; preds = %.preheader
  %tmp_11 = zext i8 %temp_index_1 to i64, !dbg !225 ; [#uses=2 type=i64] [debug line = 345:6]
  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_11, !dbg !225 ; [#uses=1 type=i8*] [debug line = 345:6]
  %temp_buf_load = load i8* %temp_buf_addr, align 1, !dbg !225 ; [#uses=1 type=i8] [debug line = 345:6]
  %md_buf_addr_2 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_11, !dbg !225 ; [#uses=1 type=i8*] [debug line = 345:6]
  store i8 %temp_buf_load, i8* %md_buf_addr_2, align 1, !dbg !225 ; [debug line = 345:6]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_3}, i64 0, metadata !220), !dbg !224 ; [debug line = 344:39] [debug variable = temp_index]
  br label %.preheader, !dbg !224                 ; [debug line = 344:39]

; <label>:9                                       ; preds = %.preheader
  %md_length_load_2 = load i64* %md_length, !dbg !227 ; [#uses=1 type=i64] [debug line = 347:5]
  %tmp_10 = add i64 %md_length_load_2, 1024, !dbg !227 ; [#uses=1 type=i64] [debug line = 347:5]
  store i64 %tmp_10, i64* %md_length
  store i64 0, i64* %md_curlen
  store i64 %inlen_2, i64* %inlen, !dbg !212      ; [debug line = 336:12]
  store i64 %p_01_idx9, i64* %p_01_idx
  br label %.backedge.backedge, !dbg !228         ; [debug line = 349:4]

.backedge.backedge.pre:                           ; preds = %5
  store i64 %tmp_8, i64* %md_curlen
  store i64 %inlen_2, i64* %inlen, !dbg !212      ; [debug line = 336:12]
  store i64 %p_01_idx9, i64* %p_01_idx
  br label %.backedge.backedge

.backedge.backedge:                               ; preds = %.backedge.backedge.pre, %9, %2
  br label %.backedge

.loopexit:                                        ; preds = %.backedge
  %md_curlen_load_1 = load i64* %md_curlen        ; [#uses=1 type=i64]
  %md_length_load_1 = load i64* %md_length        ; [#uses=1 type=i64]
  %mrv = insertvalue { i64, i64 } undef, i64 %md_length_load_1, 0 ; [#uses=1 type={ i64, i64 }]
  %mrv_1 = insertvalue { i64, i64 } %mrv, i64 %md_curlen_load_1, 1 ; [#uses=1 type={ i64, i64 }]
  ret { i64, i64 } %mrv_1
}

; [#uses=2]
define internal fastcc { i64, i64 } @sha512_update_128(i64 %md_length_read, [8 x i64]* nocapture %md_state, i64 %md_curlen_read, [128 x i8]* nocapture %md_buf, [128 x i8]* nocapture %in) {
  %md_curlen_read_2 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %md_curlen_read) ; [#uses=3 type=i64]
  call void @llvm.dbg.value(metadata !{i64 %md_curlen_read_2}, i64 0, metadata !234), !dbg !237 ; [debug line = 240:40] [debug variable = md.curlen]
  %md_length_read_2 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %md_length_read) ; [#uses=2 type=i64]
  call void @llvm.dbg.value(metadata !{i64 %md_length_read_2}, i64 0, metadata !238), !dbg !237 ; [debug line = 240:40] [debug variable = md.length]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{i64 %md_length_read}, i64 0, metadata !238), !dbg !237 ; [debug line = 240:40] [debug variable = md.length]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !239), !dbg !237 ; [debug line = 240:40] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{i64 %md_curlen_read}, i64 0, metadata !234), !dbg !237 ; [debug line = 240:40] [debug variable = md.curlen]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md_buf}, i64 0, metadata !240), !dbg !237 ; [debug line = 240:40] [debug variable = md.buf]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %in}, i64 0, metadata !241), !dbg !243 ; [debug line = 240:64] [debug variable = in]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !244 ; [debug line = 242:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !246 ; [debug line = 243:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !247 ; [debug line = 244:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !248 ; [debug line = 245:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !249 ; [debug line = 246:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !250 ; [debug line = 247:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !251 ; [debug line = 248:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [20 x i8]* @p_str816, [1 x i8]* @p_str19) nounwind, !dbg !252 ; [debug line = 249:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !253), !dbg !254 ; [debug line = 255:19] [debug variable = temp_buf]
  %tmp = icmp ugt i64 %md_curlen_read_2, 128, !dbg !255 ; [#uses=1 type=i1] [debug line = 258:5]
  br i1 %tmp, label %.loopexit, label %.backedge.preheader, !dbg !255 ; [debug line = 258:5]

.backedge.preheader:                              ; preds = %0
  %p_01_idx = alloca i64                          ; [#uses=7 type=i64*]
  %inlen = alloca i64                             ; [#uses=5 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %inlen}, metadata !256) ; [debug variable = inlen]
  %md_length = alloca i64                         ; [#uses=4 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %md_length}, metadata !238) ; [debug variable = md.length]
  %md_curlen = alloca i64                         ; [#uses=5 type=i64*]
  call void @llvm.dbg.declare(metadata !{i64* %md_curlen}, metadata !234) ; [debug variable = md.curlen]
  store i64 %md_curlen_read_2, i64* %md_curlen, !dbg !237 ; [debug line = 240:40]
  store i64 %md_length_read_2, i64* %md_length, !dbg !237 ; [debug line = 240:40]
  store i64 128, i64* %inlen
  store i64 0, i64* %p_01_idx
  br label %.backedge, !dbg !257                  ; [debug line = 261:5]

.backedge:                                        ; preds = %.backedge.backedge, %.backedge.preheader
  %inlen_load = load i64* %inlen, !dbg !258       ; [#uses=6 type=i64] [debug line = 268:12]
  %md_length_load = load i64* %md_length, !dbg !261 ; [#uses=3 type=i64] [debug line = 266:12]
  %md_curlen_load = load i64* %md_curlen, !dbg !257 ; [#uses=5 type=i64] [debug line = 261:5]
  %tmp_s = icmp eq i64 %inlen_load, 0, !dbg !257  ; [#uses=1 type=i1] [debug line = 261:5]
  br i1 %tmp_s, label %.loopexit.loopexit, label %1, !dbg !257 ; [debug line = 261:5]

; <label>:1                                       ; preds = %.backedge
  %tmp_12 = icmp eq i64 %md_curlen_load, 0, !dbg !262 ; [#uses=1 type=i1] [debug line = 262:9]
  %tmp_23 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %inlen_load, i32 7, i32 63), !dbg !262 ; [#uses=1 type=i57] [debug line = 262:9]
  %icmp = icmp ne i57 %tmp_23, 0, !dbg !262       ; [#uses=1 type=i1] [debug line = 262:9]
  %or_cond = and i1 %tmp_12, %icmp, !dbg !262     ; [#uses=1 type=i1] [debug line = 262:9]
  br i1 %or_cond, label %2, label %._crit_edge, !dbg !262 ; [debug line = 262:9]

; <label>:2                                       ; preds = %1
  %p_01_idx_load = load i64* %p_01_idx, !dbg !263 ; [#uses=2 type=i64] [debug line = 267:12]
  call fastcc void @sha512_compress_128.1([8 x i64]* %md_state, [128 x i8]* %in, i64 %p_01_idx_load), !dbg !264 ; [debug line = 263:23]
  %tmp_13 = add i64 %md_length_load, 1024, !dbg !261 ; [#uses=1 type=i64] [debug line = 266:12]
  %p_01_idx8 = add i64 %p_01_idx_load, 128, !dbg !263 ; [#uses=1 type=i64] [debug line = 267:12]
  %inlen_3 = add i64 %inlen_load, -128, !dbg !258 ; [#uses=1 type=i64] [debug line = 268:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen_3}, i64 0, metadata !256), !dbg !258 ; [debug line = 268:12] [debug variable = inlen]
  store i64 0, i64* %md_curlen
  store i64 %tmp_13, i64* %md_length
  store i64 %inlen_3, i64* %inlen, !dbg !258      ; [debug line = 268:12]
  store i64 %p_01_idx8, i64* %p_01_idx
  br label %.backedge.backedge, !dbg !265         ; [debug line = 269:9]

._crit_edge:                                      ; preds = %1
  %tmp_14 = sub i64 128, %md_curlen_load, !dbg !266 ; [#uses=2 type=i64] [debug line = 270:12]
  %tmp_15 = icmp ult i64 %inlen_load, %tmp_14, !dbg !266 ; [#uses=1 type=i1] [debug line = 270:12]
  %n = select i1 %tmp_15, i64 %inlen_load, i64 %tmp_14, !dbg !266 ; [#uses=4 type=i64] [debug line = 270:12]
  call void @llvm.dbg.value(metadata !{i64 %n}, i64 0, metadata !268), !dbg !266 ; [debug line = 270:12] [debug variable = n]
  br label %3, !dbg !269                          ; [debug line = 272:17]

; <label>:3                                       ; preds = %4, %._crit_edge
  %i = phi i64 [ 0, %._crit_edge ], [ %i_2, %4 ]  ; [#uses=3 type=i64]
  %tmp_24 = trunc i64 %i to i9, !dbg !269         ; [#uses=2 type=i9] [debug line = 272:17]
  %exitcond3 = icmp eq i64 %i, %n, !dbg !269      ; [#uses=1 type=i1] [debug line = 272:17]
  %i_2 = add i64 1, %i, !dbg !271                 ; [#uses=1 type=i64] [debug line = 272:31]
  br i1 %exitcond3, label %5, label %4, !dbg !269 ; [debug line = 272:17]

; <label>:4                                       ; preds = %3
  %p_01_idx_load_6 = load i64* %p_01_idx, !dbg !257 ; [#uses=1 type=i64] [debug line = 261:5]
  %tmp_25 = trunc i64 %p_01_idx_load_6 to i9, !dbg !257 ; [#uses=1 type=i9] [debug line = 261:5]
  %sum2 = add i9 %tmp_24, %tmp_25                 ; [#uses=1 type=i9]
  %sum2_cast = zext i9 %sum2 to i64               ; [#uses=1 type=i64]
  %in_addr = getelementptr [128 x i8]* %in, i64 0, i64 %sum2_cast, !dbg !272 ; [#uses=1 type=i8*] [debug line = 273:13]
  %in_load = load i8* %in_addr, align 1, !dbg !272 ; [#uses=1 type=i8] [debug line = 273:13]
  %tmp_26 = trunc i64 %md_curlen_load to i9, !dbg !257 ; [#uses=1 type=i9] [debug line = 261:5]
  %tmp_18 = add i9 %tmp_24, %tmp_26, !dbg !272    ; [#uses=1 type=i9] [debug line = 273:13]
  %tmp_19_cast = zext i9 %tmp_18 to i64, !dbg !272 ; [#uses=1 type=i64] [debug line = 273:13]
  %md_buf_addr = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_19_cast, !dbg !272 ; [#uses=1 type=i8*] [debug line = 273:13]
  store i8 %in_load, i8* %md_buf_addr, align 1, !dbg !272 ; [debug line = 273:13]
  call void @llvm.dbg.value(metadata !{i64 %i_2}, i64 0, metadata !274), !dbg !271 ; [debug line = 272:31] [debug variable = i]
  br label %3, !dbg !271                          ; [debug line = 272:31]

; <label>:5                                       ; preds = %3
  %p_01_idx_load_5 = load i64* %p_01_idx, !dbg !275 ; [#uses=1 type=i64] [debug line = 278:12]
  %tmp_16 = add i64 %n, %md_curlen_load, !dbg !276 ; [#uses=2 type=i64] [debug line = 277:12]
  %p_01_idx9 = add i64 %n, %p_01_idx_load_5, !dbg !275 ; [#uses=2 type=i64] [debug line = 278:12]
  %inlen_4 = sub i64 %inlen_load, %n, !dbg !277   ; [#uses=2 type=i64] [debug line = 279:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen_4}, i64 0, metadata !256), !dbg !277 ; [debug line = 279:12] [debug variable = inlen]
  %tmp_17 = icmp eq i64 %tmp_16, 128, !dbg !278   ; [#uses=1 type=i1] [debug line = 280:12]
  br i1 %tmp_17, label %.preheader5.preheader, label %.backedge.backedge.pre, !dbg !278 ; [debug line = 280:12]

.preheader5.preheader:                            ; preds = %5
  br label %.preheader5, !dbg !279                ; [debug line = 281:17]

.preheader5:                                      ; preds = %6, %.preheader5.preheader
  %temp_index = phi i8 [ %temp_index_4, %6 ], [ 0, %.preheader5.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index, -128, !dbg !279 ; [#uses=1 type=i1] [debug line = 281:17]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_4 = add i8 %temp_index, 1, !dbg !282 ; [#uses=1 type=i8] [debug line = 281:47]
  br i1 %exitcond2, label %7, label %6, !dbg !279 ; [debug line = 281:17]

; <label>:6                                       ; preds = %.preheader5
  %tmp_19 = zext i8 %temp_index to i64, !dbg !283 ; [#uses=2 type=i64] [debug line = 282:6]
  %md_buf_addr_3 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_19, !dbg !283 ; [#uses=1 type=i8*] [debug line = 282:6]
  %md_buf_load = load i8* %md_buf_addr_3, align 1, !dbg !283 ; [#uses=1 type=i8] [debug line = 282:6]
  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_19, !dbg !283 ; [#uses=1 type=i8*] [debug line = 282:6]
  store i8 %md_buf_load, i8* %temp_buf_addr, align 1, !dbg !283 ; [debug line = 282:6]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_4}, i64 0, metadata !285), !dbg !282 ; [debug line = 281:47] [debug variable = temp_index]
  br label %.preheader5, !dbg !282                ; [debug line = 281:47]

; <label>:7                                       ; preds = %.preheader5
  call fastcc void @sha512_compress_128([8 x i64]* %md_state, [128 x i8]* %temp_buf), !dbg !286 ; [debug line = 284:26]
  br label %.preheader, !dbg !286                 ; [debug line = 284:26]

.preheader:                                       ; preds = %8, %7
  %temp_index_1 = phi i8 [ %temp_index_5, %8 ], [ 0, %7 ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %temp_index_1, -128, !dbg !287 ; [#uses=1 type=i1] [debug line = 287:20]
  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_5 = add i8 %temp_index_1, 1, !dbg !289 ; [#uses=1 type=i8] [debug line = 287:50]
  br i1 %exitcond, label %9, label %8, !dbg !287  ; [debug line = 287:20]

; <label>:8                                       ; preds = %.preheader
  %tmp_21 = zext i8 %temp_index_1 to i64, !dbg !290 ; [#uses=2 type=i64] [debug line = 288:6]
  %temp_buf_addr_2 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_21, !dbg !290 ; [#uses=1 type=i8*] [debug line = 288:6]
  %temp_buf_load = load i8* %temp_buf_addr_2, align 1, !dbg !290 ; [#uses=1 type=i8] [debug line = 288:6]
  %md_buf_addr_4 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_21, !dbg !290 ; [#uses=1 type=i8*] [debug line = 288:6]
  store i8 %temp_buf_load, i8* %md_buf_addr_4, align 1, !dbg !290 ; [debug line = 288:6]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_5}, i64 0, metadata !285), !dbg !289 ; [debug line = 287:50] [debug variable = temp_index]
  br label %.preheader, !dbg !289                 ; [debug line = 287:50]

; <label>:9                                       ; preds = %.preheader
  %tmp_20 = add i64 %md_length_load, 1024, !dbg !292 ; [#uses=1 type=i64] [debug line = 290:15]
  store i64 0, i64* %md_curlen
  store i64 %tmp_20, i64* %md_length
  store i64 %inlen_4, i64* %inlen, !dbg !277      ; [debug line = 279:12]
  store i64 %p_01_idx9, i64* %p_01_idx
  br label %.backedge.backedge, !dbg !293         ; [debug line = 292:12]

.backedge.backedge.pre:                           ; preds = %5
  store i64 %tmp_16, i64* %md_curlen
  store i64 %inlen_4, i64* %inlen, !dbg !277      ; [debug line = 279:12]
  store i64 %p_01_idx9, i64* %p_01_idx
  br label %.backedge.backedge

.backedge.backedge:                               ; preds = %.backedge.backedge.pre, %9, %2
  br label %.backedge

.loopexit.loopexit:                               ; preds = %.backedge
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  %md_length_2 = phi i64 [ %md_length_read_2, %0 ], [ %md_length_load, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %md_curlen_2 = phi i64 [ %md_curlen_read_2, %0 ], [ %md_curlen_load, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %mrv = insertvalue { i64, i64 } undef, i64 %md_length_2, 0 ; [#uses=1 type={ i64, i64 }]
  %mrv_1 = insertvalue { i64, i64 } %mrv, i64 %md_curlen_2, 1 ; [#uses=1 type={ i64, i64 }]
  ret { i64, i64 } %mrv_1
}

; [#uses=3]
define internal fastcc void @sha512_init([8 x i64]* nocapture %md_state) {
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !294), !dbg !299 ; [debug line = 216:34] [debug variable = md.state]
  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 0, !dbg !300 ; [#uses=1 type=i64*] [debug line = 221:5]
  store i64 7640891576956012808, i64* %md_state_addr, align 8, !dbg !300 ; [debug line = 221:5]
  %md_state_addr_1 = getelementptr [8 x i64]* %md_state, i64 0, i64 1, !dbg !302 ; [#uses=1 type=i64*] [debug line = 222:5]
  store i64 -4942790177534073029, i64* %md_state_addr_1, align 8, !dbg !302 ; [debug line = 222:5]
  %md_state_addr_2 = getelementptr [8 x i64]* %md_state, i64 0, i64 2, !dbg !303 ; [#uses=1 type=i64*] [debug line = 223:5]
  store i64 4354685564936845355, i64* %md_state_addr_2, align 8, !dbg !303 ; [debug line = 223:5]
  %md_state_addr_3 = getelementptr [8 x i64]* %md_state, i64 0, i64 3, !dbg !304 ; [#uses=1 type=i64*] [debug line = 224:5]
  store i64 -6534734903238641935, i64* %md_state_addr_3, align 8, !dbg !304 ; [debug line = 224:5]
  %md_state_addr_4 = getelementptr [8 x i64]* %md_state, i64 0, i64 4, !dbg !305 ; [#uses=1 type=i64*] [debug line = 225:5]
  store i64 5840696475078001361, i64* %md_state_addr_4, align 8, !dbg !305 ; [debug line = 225:5]
  %md_state_addr_5 = getelementptr [8 x i64]* %md_state, i64 0, i64 5, !dbg !306 ; [#uses=1 type=i64*] [debug line = 226:5]
  store i64 -7276294671716946913, i64* %md_state_addr_5, align 8, !dbg !306 ; [debug line = 226:5]
  %md_state_addr_6 = getelementptr [8 x i64]* %md_state, i64 0, i64 6, !dbg !307 ; [#uses=1 type=i64*] [debug line = 227:5]
  store i64 2270897969802886507, i64* %md_state_addr_6, align 8, !dbg !307 ; [debug line = 227:5]
  %md_state_addr_7 = getelementptr [8 x i64]* %md_state, i64 0, i64 7, !dbg !308 ; [#uses=1 type=i64*] [debug line = 228:5]
  store i64 6620516959819538809, i64* %md_state_addr_7, align 8, !dbg !308 ; [debug line = 228:5]
  ret void
}

; [#uses=3]
define internal fastcc void @sha512_final(i64 %md_length_read, [8 x i64]* nocapture %md_state, i64 %md_curlen_read, [128 x i8]* nocapture %md_buf, [64 x i8]* nocapture %out) {
  %md_curlen_read_3 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %md_curlen_read) ; [#uses=6 type=i64]
  call void @llvm.dbg.value(metadata !{i64 %md_curlen_read_3}, i64 0, metadata !309), !dbg !315 ; [debug line = 361:35] [debug variable = md.curlen]
  %md_length_read_3 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %md_length_read) ; [#uses=8 type=i64]
  call void @llvm.dbg.value(metadata !{i64 %md_length_read_3}, i64 0, metadata !316), !dbg !315 ; [debug line = 361:35] [debug variable = md.length]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=6 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{i64 %md_length_read}, i64 0, metadata !316), !dbg !315 ; [debug line = 361:35] [debug variable = md.length]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !317), !dbg !315 ; [debug line = 361:35] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{i64 %md_curlen_read}, i64 0, metadata !309), !dbg !315 ; [debug line = 361:35] [debug variable = md.curlen]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md_buf}, i64 0, metadata !318), !dbg !315 ; [debug line = 361:35] [debug variable = md.buf]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %out}, i64 0, metadata !319), !dbg !321 ; [debug line = 361:54] [debug variable = out]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !322 ; [debug line = 363:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !324 ; [debug line = 364:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !325 ; [debug line = 365:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !326 ; [debug line = 366:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !327 ; [debug line = 367:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !328 ; [debug line = 368:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !329 ; [debug line = 369:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [20 x i8]* @p_str816, [1 x i8]* @p_str19) nounwind, !dbg !330 ; [debug line = 370:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !331), !dbg !332 ; [debug line = 373:16] [debug variable = temp_buf]
  %tmp = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %md_curlen_read_3, i32 7, i32 63), !dbg !333 ; [#uses=1 type=i57] [debug line = 378:5]
  %icmp = icmp eq i57 %tmp, 0, !dbg !333          ; [#uses=1 type=i1] [debug line = 378:5]
  br i1 %icmp, label %1, label %.loopexit, !dbg !333 ; [debug line = 378:5]

; <label>:1                                       ; preds = %0
  %tmp_49 = trunc i64 %md_curlen_read_3 to i7     ; [#uses=1 type=i7]
  %tmp_s = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %tmp_49, i3 0), !dbg !334 ; [#uses=7 type=i10] [debug line = 383:5]
  %tmp_cast = zext i10 %tmp_s to i64, !dbg !334   ; [#uses=1 type=i64] [debug line = 383:5]
  %tmp_50 = trunc i64 %md_length_read_3 to i8     ; [#uses=1 type=i8]
  %tmp_51 = trunc i64 %md_curlen_read_3 to i5     ; [#uses=1 type=i5]
  %tmp_2 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_51, i3 0) ; [#uses=1 type=i8]
  %tmp_3 = zext i10 %tmp_s to i56                 ; [#uses=1 type=i56]
  %tmp_52 = trunc i64 %md_length_read_3 to i56    ; [#uses=1 type=i56]
  %tmp_5 = zext i10 %tmp_s to i48                 ; [#uses=1 type=i48]
  %tmp_53 = trunc i64 %md_length_read_3 to i48    ; [#uses=1 type=i48]
  %tmp_7 = zext i10 %tmp_s to i40                 ; [#uses=1 type=i40]
  %tmp_54 = trunc i64 %md_length_read_3 to i40    ; [#uses=1 type=i40]
  %tmp_9 = zext i10 %tmp_s to i32                 ; [#uses=1 type=i32]
  %tmp_55 = trunc i64 %md_length_read_3 to i32    ; [#uses=1 type=i32]
  %tmp_11 = zext i10 %tmp_s to i24                ; [#uses=1 type=i24]
  %tmp_56 = trunc i64 %md_length_read_3 to i24    ; [#uses=1 type=i24]
  %tmp_13 = zext i10 %tmp_s to i16                ; [#uses=1 type=i16]
  %tmp_57 = trunc i64 %md_length_read_3 to i16    ; [#uses=1 type=i16]
  %tmp_22 = add i64 %md_length_read_3, %tmp_cast, !dbg !334 ; [#uses=1 type=i64] [debug line = 383:5]
  %tmp_23_cast1 = add i16 %tmp_13, %tmp_57, !dbg !335 ; [#uses=1 type=i16] [debug line = 386:5]
  %tmp_23_cast2 = add i24 %tmp_11, %tmp_56, !dbg !335 ; [#uses=1 type=i24] [debug line = 386:5]
  %tmp_23_cast3 = add i32 %tmp_9, %tmp_55, !dbg !335 ; [#uses=1 type=i32] [debug line = 386:5]
  %tmp_23_cast4 = add i40 %tmp_7, %tmp_54, !dbg !335 ; [#uses=1 type=i40] [debug line = 386:5]
  %tmp_23_cast5 = add i48 %tmp_5, %tmp_53, !dbg !335 ; [#uses=1 type=i48] [debug line = 386:5]
  %tmp_23_cast = add i56 %tmp_3, %tmp_52, !dbg !335 ; [#uses=1 type=i56] [debug line = 386:5]
  %tmp_58 = trunc i64 %md_curlen_read_3 to i8     ; [#uses=1 type=i8]
  %tmp_24_cast = add i8 1, %tmp_58, !dbg !335     ; [#uses=2 type=i8] [debug line = 386:5]
  %md_buf_addr = getelementptr [128 x i8]* %md_buf, i64 0, i64 %md_curlen_read_3, !dbg !335 ; [#uses=1 type=i8*] [debug line = 386:5]
  store i8 -128, i8* %md_buf_addr, align 1, !dbg !335 ; [debug line = 386:5]
  %tmp_23 = icmp ugt i8 %tmp_24_cast, 112, !dbg !336 ; [#uses=1 type=i1] [debug line = 392:2]
  br i1 %tmp_23, label %.preheader13.preheader, label %._crit_edge.preheader, !dbg !336 ; [debug line = 392:2]

.preheader13.preheader:                           ; preds = %1
  br label %.preheader13, !dbg !335               ; [debug line = 386:5]

._crit_edge.preheader.loopexit:                   ; preds = %5
  br label %._crit_edge.preheader

._crit_edge.preheader:                            ; preds = %._crit_edge.preheader.loopexit, %1
  %md_curlen_2_ph = phi i8 [ %tmp_24_cast, %1 ], [ 0, %._crit_edge.preheader.loopexit ] ; [#uses=1 type=i8]
  br label %._crit_edge, !dbg !337                ; [debug line = 410:2]

.preheader13:                                     ; preds = %2, %.preheader13.preheader
  %md_curlen_in = phi i64 [ %md_curlen, %2 ], [ %md_curlen_read_3, %.preheader13.preheader ] ; [#uses=1 type=i64]
  %md_curlen = add i64 %md_curlen_in, 1, !dbg !335 ; [#uses=3 type=i64] [debug line = 386:5]
  %exitcond3 = icmp eq i64 %md_curlen, 128, !dbg !338 ; [#uses=1 type=i1] [debug line = 393:3]
  br i1 %exitcond3, label %.preheader12.preheader, label %2, !dbg !338 ; [debug line = 393:3]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !340               ; [debug line = 396:7]

; <label>:2                                       ; preds = %.preheader13
  %md_buf_addr_5 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %md_curlen, !dbg !342 ; [#uses=1 type=i8*] [debug line = 394:4]
  store i8 0, i8* %md_buf_addr_5, align 1, !dbg !342 ; [debug line = 394:4]
  br label %.preheader13, !dbg !344               ; [debug line = 395:3]

.preheader12:                                     ; preds = %3, %.preheader12.preheader
  %temp_index = phi i8 [ %temp_index_6, %3 ], [ 0, %.preheader12.preheader ] ; [#uses=3 type=i8]
  %exitcond1 = icmp eq i8 %temp_index, -128, !dbg !340 ; [#uses=1 type=i1] [debug line = 396:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_6 = add i8 %temp_index, 1, !dbg !345 ; [#uses=1 type=i8] [debug line = 396:37]
  br i1 %exitcond1, label %4, label %3, !dbg !340 ; [debug line = 396:7]

; <label>:3                                       ; preds = %.preheader12
  %tmp_24 = zext i8 %temp_index to i64, !dbg !346 ; [#uses=2 type=i64] [debug line = 397:4]
  %md_buf_addr_6 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_24, !dbg !346 ; [#uses=1 type=i8*] [debug line = 397:4]
  %md_buf_load = load i8* %md_buf_addr_6, align 1, !dbg !346 ; [#uses=1 type=i8] [debug line = 397:4]
  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_24, !dbg !346 ; [#uses=1 type=i8*] [debug line = 397:4]
  store i8 %md_buf_load, i8* %temp_buf_addr, align 1, !dbg !346 ; [debug line = 397:4]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_6}, i64 0, metadata !348), !dbg !345 ; [debug line = 396:37] [debug variable = temp_index]
  br label %.preheader12, !dbg !345               ; [debug line = 396:37]

; <label>:4                                       ; preds = %.preheader12
  call fastcc void @sha512_compress_128([8 x i64]* %md_state, [128 x i8]* %temp_buf), !dbg !349 ; [debug line = 399:3]
  br label %5, !dbg !350                          ; [debug line = 400:7]

; <label>:5                                       ; preds = %6, %4
  %temp_index_1 = phi i8 [ 0, %4 ], [ %temp_index_7, %6 ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index_1, -128, !dbg !350 ; [#uses=1 type=i1] [debug line = 400:7]
  %empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_7 = add i8 %temp_index_1, 1, !dbg !352 ; [#uses=1 type=i8] [debug line = 400:37]
  br i1 %exitcond2, label %._crit_edge.preheader.loopexit, label %6, !dbg !350 ; [debug line = 400:7]

; <label>:6                                       ; preds = %5
  %tmp_25 = zext i8 %temp_index_1 to i64, !dbg !353 ; [#uses=2 type=i64] [debug line = 401:4]
  %temp_buf_addr_4 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_25, !dbg !353 ; [#uses=1 type=i8*] [debug line = 401:4]
  %temp_buf_load = load i8* %temp_buf_addr_4, align 1, !dbg !353 ; [#uses=1 type=i8] [debug line = 401:4]
  %md_buf_addr_7 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_25, !dbg !353 ; [#uses=1 type=i8*] [debug line = 401:4]
  store i8 %temp_buf_load, i8* %md_buf_addr_7, align 1, !dbg !353 ; [debug line = 401:4]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_7}, i64 0, metadata !348), !dbg !352 ; [debug line = 400:37] [debug variable = temp_index]
  br label %5, !dbg !352                          ; [debug line = 400:37]

._crit_edge:                                      ; preds = %7, %._crit_edge.preheader
  %md_curlen_2 = phi i8 [ %tmp_27, %7 ], [ %md_curlen_2_ph, %._crit_edge.preheader ] ; [#uses=3 type=i8]
  %md_curlen_2_cast = zext i8 %md_curlen_2 to i64, !dbg !337 ; [#uses=1 type=i64] [debug line = 410:2]
  %tmp_26 = icmp ult i8 %md_curlen_2, 120, !dbg !337 ; [#uses=1 type=i1] [debug line = 410:2]
  br i1 %tmp_26, label %7, label %8, !dbg !337    ; [debug line = 410:2]

; <label>:7                                       ; preds = %._crit_edge
  %tmp_27 = add i8 %md_curlen_2, 1, !dbg !355     ; [#uses=1 type=i8] [debug line = 411:3]
  %md_buf_addr_8 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %md_curlen_2_cast, !dbg !355 ; [#uses=1 type=i8*] [debug line = 411:3]
  store i8 0, i8* %md_buf_addr_8, align 1, !dbg !355 ; [debug line = 411:3]
  br label %._crit_edge, !dbg !357                ; [debug line = 412:2]

; <label>:8                                       ; preds = %._crit_edge
  %tmp_28 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %tmp_22, i32 56, i32 63), !dbg !358 ; [#uses=1 type=i8] [debug line = 415:4]
  %md_buf_addr_9 = getelementptr [128 x i8]* %md_buf, i64 0, i64 120, !dbg !358 ; [#uses=1 type=i8*] [debug line = 415:4]
  store i8 %tmp_28, i8* %md_buf_addr_9, align 1, !dbg !358 ; [debug line = 415:4]
  %tmp_29 = call i8 @_ssdm_op_PartSelect.i8.i56.i32.i32(i56 %tmp_23_cast, i32 48, i32 55), !dbg !360 ; [#uses=1 type=i8] [debug line = 415:64]
  %md_buf_addr_10 = getelementptr [128 x i8]* %md_buf, i64 0, i64 121, !dbg !360 ; [#uses=1 type=i8*] [debug line = 415:64]
  store i8 %tmp_29, i8* %md_buf_addr_10, align 1, !dbg !360 ; [debug line = 415:64]
  %tmp_30 = call i8 @_ssdm_op_PartSelect.i8.i48.i32.i32(i48 %tmp_23_cast5, i32 40, i32 47), !dbg !361 ; [#uses=1 type=i8] [debug line = 415:124]
  %md_buf_addr_11 = getelementptr [128 x i8]* %md_buf, i64 0, i64 122, !dbg !361 ; [#uses=1 type=i8*] [debug line = 415:124]
  store i8 %tmp_30, i8* %md_buf_addr_11, align 1, !dbg !361 ; [debug line = 415:124]
  %tmp_31 = call i8 @_ssdm_op_PartSelect.i8.i40.i32.i32(i40 %tmp_23_cast4, i32 32, i32 39), !dbg !362 ; [#uses=1 type=i8] [debug line = 415:184]
  %md_buf_addr_12 = getelementptr [128 x i8]* %md_buf, i64 0, i64 123, !dbg !362 ; [#uses=1 type=i8*] [debug line = 415:184]
  store i8 %tmp_31, i8* %md_buf_addr_12, align 1, !dbg !362 ; [debug line = 415:184]
  %tmp_32 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_23_cast3, i32 24, i32 31), !dbg !363 ; [#uses=1 type=i8] [debug line = 415:244]
  %md_buf_addr_13 = getelementptr [128 x i8]* %md_buf, i64 0, i64 124, !dbg !363 ; [#uses=1 type=i8*] [debug line = 415:244]
  store i8 %tmp_32, i8* %md_buf_addr_13, align 1, !dbg !363 ; [debug line = 415:244]
  %tmp_33 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %tmp_23_cast2, i32 16, i32 23), !dbg !364 ; [#uses=1 type=i8] [debug line = 415:0]
  %md_buf_addr_14 = getelementptr [128 x i8]* %md_buf, i64 0, i64 125, !dbg !364 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %tmp_33, i8* %md_buf_addr_14, align 1, !dbg !364 ; [debug line = 415:0]
  %tmp_34 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_23_cast1, i32 8, i32 15), !dbg !364 ; [#uses=1 type=i8] [debug line = 415:0]
  %md_buf_addr_15 = getelementptr [128 x i8]* %md_buf, i64 0, i64 126, !dbg !364 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %tmp_34, i8* %md_buf_addr_15, align 1, !dbg !364 ; [debug line = 415:0]
  %tmp_35 = add i8 %tmp_50, %tmp_2, !dbg !364     ; [#uses=1 type=i8] [debug line = 415:0]
  %md_buf_addr_16 = getelementptr [128 x i8]* %md_buf, i64 0, i64 127, !dbg !364 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %tmp_35, i8* %md_buf_addr_16, align 1, !dbg !364 ; [debug line = 415:0]
  br label %9, !dbg !365                          ; [debug line = 416:6]

; <label>:9                                       ; preds = %10, %8
  %temp_index_2 = phi i8 [ 0, %8 ], [ %temp_index_8, %10 ] ; [#uses=3 type=i8]
  %exitcond9 = icmp eq i8 %temp_index_2, -128, !dbg !365 ; [#uses=1 type=i1] [debug line = 416:6]
  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_8 = add i8 %temp_index_2, 1, !dbg !367 ; [#uses=1 type=i8] [debug line = 416:36]
  br i1 %exitcond9, label %11, label %10, !dbg !365 ; [debug line = 416:6]

; <label>:10                                      ; preds = %9
  %tmp_36 = zext i8 %temp_index_2 to i64, !dbg !368 ; [#uses=2 type=i64] [debug line = 417:3]
  %md_buf_addr_17 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_36, !dbg !368 ; [#uses=1 type=i8*] [debug line = 417:3]
  %md_buf_load_1 = load i8* %md_buf_addr_17, align 1, !dbg !368 ; [#uses=1 type=i8] [debug line = 417:3]
  %temp_buf_addr_3 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_36, !dbg !368 ; [#uses=1 type=i8*] [debug line = 417:3]
  store i8 %md_buf_load_1, i8* %temp_buf_addr_3, align 1, !dbg !368 ; [debug line = 417:3]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_8}, i64 0, metadata !348), !dbg !367 ; [debug line = 416:36] [debug variable = temp_index]
  br label %9, !dbg !367                          ; [debug line = 416:36]

; <label>:11                                      ; preds = %9
  call fastcc void @sha512_compress_128([8 x i64]* %md_state, [128 x i8]* %temp_buf), !dbg !370 ; [debug line = 419:2]
  br label %12, !dbg !371                         ; [debug line = 420:6]

; <label>:12                                      ; preds = %13, %11
  %temp_index_3 = phi i8 [ 0, %11 ], [ %temp_index_9, %13 ] ; [#uses=3 type=i8]
  %exitcond8 = icmp eq i8 %temp_index_3, -128, !dbg !371 ; [#uses=1 type=i1] [debug line = 420:6]
  %empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  %temp_index_9 = add i8 %temp_index_3, 1, !dbg !373 ; [#uses=1 type=i8] [debug line = 420:36]
  br i1 %exitcond8, label %.preheader.preheader, label %13, !dbg !371 ; [debug line = 420:6]

.preheader.preheader:                             ; preds = %12
  br label %.preheader, !dbg !374                 ; [debug line = 425:7]

; <label>:13                                      ; preds = %12
  %tmp_37 = zext i8 %temp_index_3 to i64, !dbg !376 ; [#uses=2 type=i64] [debug line = 421:3]
  %temp_buf_addr_5 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_37, !dbg !376 ; [#uses=1 type=i8*] [debug line = 421:3]
  %temp_buf_load_1 = load i8* %temp_buf_addr_5, align 1, !dbg !376 ; [#uses=1 type=i8] [debug line = 421:3]
  %md_buf_addr_18 = getelementptr [128 x i8]* %md_buf, i64 0, i64 %tmp_37, !dbg !376 ; [#uses=1 type=i8*] [debug line = 421:3]
  store i8 %temp_buf_load_1, i8* %md_buf_addr_18, align 1, !dbg !376 ; [debug line = 421:3]
  call void @llvm.dbg.value(metadata !{i8 %temp_index_9}, i64 0, metadata !348), !dbg !373 ; [debug line = 420:36] [debug variable = temp_index]
  br label %12, !dbg !373                         ; [debug line = 420:36]

.preheader:                                       ; preds = %14, %.preheader.preheader
  %i = phi i4 [ %i_3, %14 ], [ 0, %.preheader.preheader ] ; [#uses=4 type=i4]
  %exitcond = icmp eq i4 %i, -8, !dbg !374        ; [#uses=1 type=i1] [debug line = 425:7]
  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_3 = add i4 %i, 1, !dbg !378                  ; [#uses=1 type=i4] [debug line = 425:21]
  br i1 %exitcond, label %.loopexit.loopexit, label %14, !dbg !374 ; [debug line = 425:7]

; <label>:14                                      ; preds = %.preheader
  %tmp_38 = zext i4 %i to i64, !dbg !379          ; [#uses=1 type=i64] [debug line = 426:5]
  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp_38, !dbg !379 ; [#uses=1 type=i64*] [debug line = 426:5]
  %md_state_load = load i64* %md_state_addr, align 8, !dbg !379 ; [#uses=8 type=i64] [debug line = 426:5]
  %tmp_39 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 56, i32 63), !dbg !379 ; [#uses=1 type=i8] [debug line = 426:5]
  %tmp_59 = trunc i4 %i to i3                     ; [#uses=1 type=i3]
  %tmp_40 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_59, i3 0), !dbg !379 ; [#uses=8 type=i6] [debug line = 426:5]
  %tmp_41 = zext i6 %tmp_40 to i64, !dbg !379     ; [#uses=1 type=i64] [debug line = 426:5]
  %out_addr = getelementptr [64 x i8]* %out, i64 0, i64 %tmp_41, !dbg !379 ; [#uses=1 type=i8*] [debug line = 426:5]
  store i8 %tmp_39, i8* %out_addr, align 1, !dbg !379 ; [debug line = 426:5]
  %tmp_42 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 48, i32 55), !dbg !382 ; [#uses=1 type=i8] [debug line = 426:65]
  %p_sum1 = or i6 %tmp_40, 1, !dbg !382           ; [#uses=1 type=i6] [debug line = 426:65]
  %p_sum1_cast = zext i6 %p_sum1 to i64, !dbg !382 ; [#uses=1 type=i64] [debug line = 426:65]
  %out_addr_1 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum1_cast, !dbg !382 ; [#uses=1 type=i8*] [debug line = 426:65]
  store i8 %tmp_42, i8* %out_addr_1, align 1, !dbg !382 ; [debug line = 426:65]
  %tmp_43 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 40, i32 47), !dbg !383 ; [#uses=1 type=i8] [debug line = 426:125]
  %p_sum2 = or i6 %tmp_40, 2, !dbg !383           ; [#uses=1 type=i6] [debug line = 426:125]
  %p_sum2_cast = zext i6 %p_sum2 to i64, !dbg !383 ; [#uses=1 type=i64] [debug line = 426:125]
  %out_addr_2 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum2_cast, !dbg !383 ; [#uses=1 type=i8*] [debug line = 426:125]
  store i8 %tmp_43, i8* %out_addr_2, align 1, !dbg !383 ; [debug line = 426:125]
  %tmp_44 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 32, i32 39), !dbg !384 ; [#uses=1 type=i8] [debug line = 426:185]
  %p_sum3 = or i6 %tmp_40, 3, !dbg !384           ; [#uses=1 type=i6] [debug line = 426:185]
  %p_sum3_cast = zext i6 %p_sum3 to i64, !dbg !384 ; [#uses=1 type=i64] [debug line = 426:185]
  %out_addr_3 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum3_cast, !dbg !384 ; [#uses=1 type=i8*] [debug line = 426:185]
  store i8 %tmp_44, i8* %out_addr_3, align 1, !dbg !384 ; [debug line = 426:185]
  %tmp_45 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 24, i32 31), !dbg !385 ; [#uses=1 type=i8] [debug line = 426:245]
  %p_sum4 = or i6 %tmp_40, 4, !dbg !385           ; [#uses=1 type=i6] [debug line = 426:245]
  %p_sum4_cast = zext i6 %p_sum4 to i64, !dbg !385 ; [#uses=1 type=i64] [debug line = 426:245]
  %out_addr_4 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum4_cast, !dbg !385 ; [#uses=1 type=i8*] [debug line = 426:245]
  store i8 %tmp_45, i8* %out_addr_4, align 1, !dbg !385 ; [debug line = 426:245]
  %tmp_46 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 16, i32 23), !dbg !386 ; [#uses=1 type=i8] [debug line = 426:0]
  %p_sum5 = or i6 %tmp_40, 5, !dbg !386           ; [#uses=1 type=i6] [debug line = 426:0]
  %p_sum5_cast = zext i6 %p_sum5 to i64, !dbg !386 ; [#uses=1 type=i64] [debug line = 426:0]
  %out_addr_5 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum5_cast, !dbg !386 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %tmp_46, i8* %out_addr_5, align 1, !dbg !386 ; [debug line = 426:0]
  %tmp_47 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %md_state_load, i32 8, i32 15), !dbg !386 ; [#uses=1 type=i8] [debug line = 426:0]
  %p_sum6 = or i6 %tmp_40, 6, !dbg !386           ; [#uses=1 type=i6] [debug line = 426:0]
  %p_sum6_cast = zext i6 %p_sum6 to i64, !dbg !386 ; [#uses=1 type=i64] [debug line = 426:0]
  %out_addr_6 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum6_cast, !dbg !386 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %tmp_47, i8* %out_addr_6, align 1, !dbg !386 ; [debug line = 426:0]
  %tmp_60 = trunc i64 %md_state_load to i8, !dbg !386 ; [#uses=1 type=i8] [debug line = 426:0]
  %p_sum7 = or i6 %tmp_40, 7, !dbg !386           ; [#uses=1 type=i6] [debug line = 426:0]
  %p_sum7_cast = zext i6 %p_sum7 to i64, !dbg !386 ; [#uses=1 type=i64] [debug line = 426:0]
  %out_addr_7 = getelementptr [64 x i8]* %out, i64 0, i64 %p_sum7_cast, !dbg !386 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %tmp_60, i8* %out_addr_7, align 1, !dbg !386 ; [debug line = 426:0]
  call void @llvm.dbg.value(metadata !{i4 %i_3}, i64 0, metadata !387), !dbg !378 ; [debug line = 425:21] [debug variable = i]
  br label %.preheader, !dbg !378                 ; [debug line = 425:21]

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  ret void
}

; [#uses=2]
define internal fastcc void @sha512_compress_32([8 x i64]* nocapture %md_state, [64 x i8]* nocapture %buf, i64 %sum) {
  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %buf, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  %sum_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %sum) ; [#uses=1 type=i64]
  %S = alloca [8 x i64], align 16                 ; [#uses=10 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=14 type=[80 x i64]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !388), !dbg !391 ; [debug line = 153:47] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %buf}, i64 0, metadata !392), !dbg !393 ; [debug line = 153:65] [debug variable = buf]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !394 ; [debug line = 155:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !396 ; [debug line = 156:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !397 ; [debug line = 157:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !398 ; [debug line = 158:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !399 ; [debug line = 159:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !400 ; [debug line = 160:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !401 ; [debug line = 161:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !402), !dbg !403 ; [debug line = 162:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !404), !dbg !408 ; [debug line = 162:17] [debug variable = W]
  br label %1, !dbg !409                          ; [debug line = 166:10]

; <label>:1                                       ; preds = %2, %0
  %i = phi i4 [ 0, %0 ], [ %i_5, %2 ]             ; [#uses=3 type=i4]
  %exitcond3 = icmp eq i4 %i, -8, !dbg !409       ; [#uses=1 type=i1] [debug line = 166:10]
  %empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_5 = add i4 %i, 1, !dbg !411                  ; [#uses=1 type=i4] [debug line = 166:24]
  br i1 %exitcond3, label %.preheader13.preheader, label %2, !dbg !409 ; [debug line = 166:10]

.preheader13.preheader:                           ; preds = %1
  %tmp_175 = trunc i64 %sum_read to i8            ; [#uses=8 type=i8]
  br label %.preheader13, !dbg !412               ; [debug line = 171:10]

; <label>:2                                       ; preds = %1
  %tmp = zext i4 %i to i64, !dbg !414             ; [#uses=2 type=i64] [debug line = 167:9]
  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp, !dbg !414 ; [#uses=1 type=i64*] [debug line = 167:9]
  %md_state_load = load i64* %md_state_addr, align 8, !dbg !414 ; [#uses=1 type=i64] [debug line = 167:9]
  %S_addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp, !dbg !414 ; [#uses=1 type=i64*] [debug line = 167:9]
  store i64 %md_state_load, i64* %S_addr, align 8, !dbg !414 ; [debug line = 167:9]
  call void @llvm.dbg.value(metadata !{i4 %i_5}, i64 0, metadata !416), !dbg !411 ; [debug line = 166:24] [debug variable = i]
  br label %1, !dbg !411                          ; [debug line = 166:24]

.preheader13:                                     ; preds = %3, %.preheader13.preheader
  %i_1 = phi i5 [ %i_6, %3 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i5]
  %exitcond9 = icmp eq i5 %i_1, -16, !dbg !412    ; [#uses=1 type=i1] [debug line = 171:10]
  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) ; [#uses=0 type=i32]
  %i_6 = add i5 %i_1, 1, !dbg !417                ; [#uses=1 type=i5] [debug line = 171:25]
  br i1 %exitcond9, label %.preheader12.preheader, label %3, !dbg !412 ; [debug line = 171:10]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !418               ; [debug line = 176:10]

; <label>:3                                       ; preds = %.preheader13
  %tmp_178 = trunc i5 %i_1 to i4                  ; [#uses=1 type=i4]
  %tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_178, i3 0), !dbg !420 ; [#uses=8 type=i7] [debug line = 172:11]
  %tmp_66_cast = zext i7 %tmp_s to i8             ; [#uses=1 type=i8]
  %sum1 = add i8 %tmp_175, %tmp_66_cast           ; [#uses=1 type=i8]
  %sum1_cast = zext i8 %sum1 to i64               ; [#uses=1 type=i64]
  %buf_addr = getelementptr [64 x i8]* %buf, i64 0, i64 %sum1_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load = load i8* %buf_addr, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum1 = or i7 %tmp_s, 1, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum1_cast = zext i7 %p_sum1 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum3 = add i8 %tmp_175, %p_sum1_cast           ; [#uses=1 type=i8]
  %sum3_cast = zext i8 %sum3 to i64               ; [#uses=1 type=i64]
  %buf_addr_1 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum3_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_1 = load i8* %buf_addr_1, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum2 = or i7 %tmp_s, 2, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum2_cast = zext i7 %p_sum2 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum5 = add i8 %tmp_175, %p_sum2_cast           ; [#uses=1 type=i8]
  %sum5_cast = zext i8 %sum5 to i64               ; [#uses=1 type=i64]
  %buf_addr_2 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum5_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_2 = load i8* %buf_addr_2, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum3 = or i7 %tmp_s, 3, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum3_cast = zext i7 %p_sum3 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum7 = add i8 %tmp_175, %p_sum3_cast           ; [#uses=1 type=i8]
  %sum7_cast = zext i8 %sum7 to i64               ; [#uses=1 type=i64]
  %buf_addr_3 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum7_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_3 = load i8* %buf_addr_3, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum4 = or i7 %tmp_s, 4, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum4_cast = zext i7 %p_sum4 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum9 = add i8 %tmp_175, %p_sum4_cast           ; [#uses=1 type=i8]
  %sum9_cast = zext i8 %sum9 to i64               ; [#uses=1 type=i64]
  %buf_addr_4 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum9_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_4 = load i8* %buf_addr_4, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum5 = or i7 %tmp_s, 5, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum5_cast = zext i7 %p_sum5 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum2 = add i8 %tmp_175, %p_sum5_cast           ; [#uses=1 type=i8]
  %sum2_cast = zext i8 %sum2 to i64               ; [#uses=1 type=i64]
  %buf_addr_5 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum2_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_5 = load i8* %buf_addr_5, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum6 = or i7 %tmp_s, 6, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum6_cast = zext i7 %p_sum6 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum4 = add i8 %tmp_175, %p_sum6_cast           ; [#uses=1 type=i8]
  %sum4_cast = zext i8 %sum4 to i64               ; [#uses=1 type=i64]
  %buf_addr_6 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum4_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_6 = load i8* %buf_addr_6, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %p_sum7 = or i7 %tmp_s, 7, !dbg !420            ; [#uses=1 type=i7] [debug line = 172:11]
  %p_sum7_cast = zext i7 %p_sum7 to i8, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %sum6 = add i8 %tmp_175, %p_sum7_cast           ; [#uses=1 type=i8]
  %sum6_cast = zext i8 %sum6 to i64               ; [#uses=1 type=i64]
  %buf_addr_7 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum6_cast, !dbg !420 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf_load_7 = load i8* %buf_addr_7, align 1, !dbg !420 ; [#uses=1 type=i8] [debug line = 172:11]
  %tmp_48 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i8.i8.i8.i8.i8.i8.i8(i8 %buf_load, i8 %buf_load_1, i8 %buf_load_2, i8 %buf_load_3, i8 %buf_load_4, i8 %buf_load_5, i8 %buf_load_6, i8 %buf_load_7), !dbg !420 ; [#uses=1 type=i64] [debug line = 172:11]
  %tmp_49 = zext i5 %i_1 to i64, !dbg !420        ; [#uses=1 type=i64] [debug line = 172:11]
  %W_addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_49, !dbg !420 ; [#uses=1 type=i64*] [debug line = 172:11]
  store i64 %tmp_48, i64* %W_addr, align 8, !dbg !420 ; [debug line = 172:11]
  call void @llvm.dbg.value(metadata !{i5 %i_6}, i64 0, metadata !416), !dbg !417 ; [debug line = 171:25] [debug variable = i]
  br label %.preheader13, !dbg !417               ; [debug line = 171:25]

.preheader12:                                     ; preds = %4, %.preheader12.preheader
  %i_2 = phi i7 [ %i_7, %4 ], [ 16, %.preheader12.preheader ] ; [#uses=7 type=i7]
  %exitcond8 = icmp eq i7 %i_2, -48, !dbg !418    ; [#uses=1 type=i1] [debug line = 176:10]
  %empty_30 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader11.preheader, label %4, !dbg !418 ; [debug line = 176:10]

.preheader11.preheader:                           ; preds = %.preheader12
  %S_addr_1 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7, !dbg !423 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S_addr_2 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4, !dbg !423 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S_addr_3 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6, !dbg !423 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S_addr_4 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5, !dbg !423 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S_addr_5 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0, !dbg !426 ; [#uses=2 type=i64*] [debug line = 188:0]
  %S_addr_6 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1, !dbg !426 ; [#uses=2 type=i64*] [debug line = 188:0]
  %S_addr_7 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2, !dbg !426 ; [#uses=2 type=i64*] [debug line = 188:0]
  %S_addr_8 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3, !dbg !426 ; [#uses=2 type=i64*] [debug line = 188:0]
  br label %.preheader11, !dbg !427               ; [debug line = 187:10]

; <label>:4                                       ; preds = %.preheader12
  %tmp_50 = add i7 -2, %i_2, !dbg !428            ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp_51 = zext i7 %tmp_50 to i64, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %W_addr_1 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_51, !dbg !428 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W_load = load i64* %W_addr_1, align 8, !dbg !428 ; [#uses=5 type=i64] [debug line = 177:9]
  %tmp_52 = call i45 @_ssdm_op_PartSelect.i45.i64.i32.i32(i64 %W_load, i32 19, i32 63), !dbg !428 ; [#uses=1 type=i45] [debug line = 177:9]
  %tmp_181 = trunc i64 %W_load to i19             ; [#uses=1 type=i19]
  %tmp_53 = call i64 @_ssdm_op_BitConcatenate.i64.i19.i45(i19 %tmp_181, i45 %tmp_52), !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_54 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %W_load, i32 61, i32 63), !dbg !428 ; [#uses=1 type=i3] [debug line = 177:9]
  %tmp_190 = trunc i64 %W_load to i61             ; [#uses=1 type=i61]
  %tmp_55 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 %tmp_190, i3 %tmp_54), !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_56 = call i58 @_ssdm_op_PartSelect.i58.i64.i32.i32(i64 %W_load, i32 6, i32 63), !dbg !428 ; [#uses=1 type=i58] [debug line = 177:9]
  %tmp_22 = zext i58 %tmp_56 to i64, !dbg !428    ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp6 = xor i64 %tmp_22, %tmp_55, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_57 = xor i64 %tmp6, %tmp_53, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_58 = add i7 -7, %i_2, !dbg !428            ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp_59 = zext i7 %tmp_58 to i64, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %W_addr_2 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_59, !dbg !428 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W_load_1 = load i64* %W_addr_2, align 8, !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_60 = add i7 -15, %i_2, !dbg !428           ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp_61 = zext i7 %tmp_60 to i64, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %W_addr_3 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_61, !dbg !428 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W_load_2 = load i64* %W_addr_3, align 8, !dbg !428 ; [#uses=5 type=i64] [debug line = 177:9]
  %tmp_62 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %W_load_2, i32 1, i32 63), !dbg !428 ; [#uses=1 type=i63] [debug line = 177:9]
  %tmp_193 = trunc i64 %W_load_2 to i1            ; [#uses=1 type=i1]
  %tmp_63 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 %tmp_193, i63 %tmp_62), !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_64 = call i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64 %W_load_2, i32 8, i32 63), !dbg !428 ; [#uses=1 type=i56] [debug line = 177:9]
  %tmp_196 = trunc i64 %W_load_2 to i8            ; [#uses=1 type=i8]
  %tmp_65 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8 %tmp_196, i56 %tmp_64), !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_66 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %W_load_2, i32 7, i32 63), !dbg !428 ; [#uses=1 type=i57] [debug line = 177:9]
  %tmp_25 = zext i57 %tmp_66 to i64, !dbg !428    ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp7 = xor i64 %tmp_25, %tmp_65, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_67 = xor i64 %tmp7, %tmp_63, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_68 = add i7 -16, %i_2, !dbg !428           ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp_69 = zext i7 %tmp_68 to i64, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %W_addr_4 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_69, !dbg !428 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W_load_3 = load i64* %W_addr_4, align 8, !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp8 = add i64 %W_load_1, %W_load_3, !dbg !428 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp9 = add i64 %tmp_57, %tmp_67, !dbg !428     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_70 = add i64 %tmp9, %tmp8, !dbg !428       ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp_71 = zext i7 %i_2 to i64, !dbg !428        ; [#uses=1 type=i64] [debug line = 177:9]
  %W_addr_5 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_71, !dbg !428 ; [#uses=1 type=i64*] [debug line = 177:9]
  store i64 %tmp_70, i64* %W_addr_5, align 8, !dbg !428 ; [debug line = 177:9]
  %i_7 = add i7 1, %i_2, !dbg !430                ; [#uses=1 type=i7] [debug line = 176:26]
  call void @llvm.dbg.value(metadata !{i7 %i_7}, i64 0, metadata !416), !dbg !430 ; [debug line = 176:26] [debug variable = i]
  br label %.preheader12, !dbg !430               ; [debug line = 176:26]

.preheader11:                                     ; preds = %5, %.preheader11.preheader
  %i_3 = phi i7 [ %i_8, %5 ], [ 0, %.preheader11.preheader ] ; [#uses=10 type=i7]
  %tmp_72 = icmp ult i7 %i_3, -48, !dbg !427      ; [#uses=1 type=i1] [debug line = 187:10]
  %empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %tmp_72, label %5, label %.preheader.preheader, !dbg !427 ; [debug line = 187:10]

.preheader.preheader:                             ; preds = %.preheader11
  br label %.preheader, !dbg !431                 ; [debug line = 203:9]

; <label>:5                                       ; preds = %.preheader11
  %S_load = load i64* %S_addr_1, align 8, !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %S_load_1 = load i64* %S_addr_2, align 16, !dbg !423 ; [#uses=11 type=i64] [debug line = 188:8]
  %tmp_73 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %S_load_1, i32 14, i32 63), !dbg !423 ; [#uses=1 type=i50] [debug line = 188:8]
  %tmp_206 = trunc i64 %S_load_1 to i14           ; [#uses=1 type=i14]
  %tmp_74 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_206, i50 %tmp_73), !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp_75 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %S_load_1, i32 18, i32 63), !dbg !423 ; [#uses=1 type=i46] [debug line = 188:8]
  %tmp_209 = trunc i64 %S_load_1 to i18           ; [#uses=1 type=i18]
  %tmp_76 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_209, i46 %tmp_75), !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp_77 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %S_load_1, i32 41, i32 63), !dbg !423 ; [#uses=1 type=i23] [debug line = 188:8]
  %tmp_212 = trunc i64 %S_load_1 to i41           ; [#uses=1 type=i41]
  %tmp_78 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_212, i23 %tmp_77), !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp10 = xor i64 %tmp_78, %tmp_76, !dbg !423    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp_79 = xor i64 %tmp10, %tmp_74, !dbg !423    ; [#uses=1 type=i64] [debug line = 188:8]
  %S_load_2 = load i64* %S_addr_3, align 16, !dbg !423 ; [#uses=3 type=i64] [debug line = 188:8]
  %S_load_3 = load i64* %S_addr_4, align 8, !dbg !423 ; [#uses=4 type=i64] [debug line = 188:8]
  %tmp_80 = xor i64 %S_load_3, %S_load_2, !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp_81 = and i64 %S_load_1, %tmp_80, !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp_82 = xor i64 %S_load_2, %tmp_81, !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp_83 = zext i7 %i_3 to i64, !dbg !423        ; [#uses=2 type=i64] [debug line = 188:8]
  %K_addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_83, !dbg !423 ; [#uses=1 type=i64*] [debug line = 188:8]
  %K_load = load i64* %K_addr, align 16, !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %W_addr_6 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_83, !dbg !423 ; [#uses=1 type=i64*] [debug line = 188:8]
  %W_load_4 = load i64* %W_addr_6, align 16, !dbg !423 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp13 = add i64 %K_load, %S_load, !dbg !423    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp15 = add i64 %tmp_79, %tmp_82, !dbg !423    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp14 = add i64 %tmp15, %W_load_4, !dbg !423   ; [#uses=1 type=i64] [debug line = 188:8]
  %t0 = add i64 %tmp14, %tmp13, !dbg !423         ; [#uses=2 type=i64] [debug line = 188:8]
  call void @llvm.dbg.value(metadata !{i64 %t0}, i64 0, metadata !433), !dbg !423 ; [debug line = 188:8] [debug variable = t0]
  %S_load_4 = load i64* %S_addr_5, align 16, !dbg !426 ; [#uses=12 type=i64] [debug line = 188:0]
  %tmp_84 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %S_load_4, i32 28, i32 63), !dbg !426 ; [#uses=1 type=i36] [debug line = 188:0]
  %tmp_221 = trunc i64 %S_load_4 to i28           ; [#uses=1 type=i28]
  %tmp_85 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_221, i36 %tmp_84), !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_86 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %S_load_4, i32 34, i32 63), !dbg !426 ; [#uses=1 type=i30] [debug line = 188:0]
  %tmp_224 = trunc i64 %S_load_4 to i34           ; [#uses=1 type=i34]
  %tmp_87 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_224, i30 %tmp_86), !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_88 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %S_load_4, i32 39, i32 63), !dbg !426 ; [#uses=1 type=i25] [debug line = 188:0]
  %tmp_227 = trunc i64 %S_load_4 to i39           ; [#uses=1 type=i39]
  %tmp_89 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_227, i25 %tmp_88), !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp16 = xor i64 %tmp_89, %tmp_87, !dbg !426    ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_90 = xor i64 %tmp16, %tmp_85, !dbg !426    ; [#uses=1 type=i64] [debug line = 188:0]
  %S_load_5 = load i64* %S_addr_6, align 8, !dbg !426 ; [#uses=4 type=i64] [debug line = 188:0]
  %tmp_91 = or i64 %S_load_5, %S_load_4, !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %S_load_6 = load i64* %S_addr_7, align 16, !dbg !426 ; [#uses=2 type=i64] [debug line = 188:0]
  %tmp_92 = and i64 %S_load_6, %tmp_91, !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_93 = and i64 %S_load_5, %S_load_4, !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_94 = or i64 %tmp_92, %tmp_93, !dbg !426    ; [#uses=1 type=i64] [debug line = 188:0]
  %S_load_7 = load i64* %S_addr_8, align 8, !dbg !426 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_95 = add i64 %S_load_7, %t0, !dbg !426     ; [#uses=11 type=i64] [debug line = 188:0]
  %tmp17 = add i64 %tmp_90, %tmp_94, !dbg !426    ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp_96 = add i64 %tmp17, %t0, !dbg !426        ; [#uses=12 type=i64] [debug line = 188:0]
  %tmp_97 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_95, i32 14, i32 63), !dbg !434 ; [#uses=1 type=i50] [debug line = 189:8]
  %tmp_237 = trunc i64 %tmp_95 to i14             ; [#uses=1 type=i14]
  %tmp_98 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_237, i50 %tmp_97), !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_99 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_95, i32 18, i32 63), !dbg !434 ; [#uses=1 type=i46] [debug line = 189:8]
  %tmp_240 = trunc i64 %tmp_95 to i18             ; [#uses=1 type=i18]
  %tmp_100 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_240, i46 %tmp_99), !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_101 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_95, i32 41, i32 63), !dbg !434 ; [#uses=1 type=i23] [debug line = 189:8]
  %tmp_243 = trunc i64 %tmp_95 to i41             ; [#uses=1 type=i41]
  %tmp_102 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_243, i23 %tmp_101), !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp18 = xor i64 %tmp_102, %tmp_100, !dbg !434  ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_103 = xor i64 %tmp18, %tmp_98, !dbg !434   ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_104 = xor i64 %S_load_3, %S_load_1, !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_105 = and i64 %tmp_95, %tmp_104, !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_106 = xor i64 %S_load_3, %tmp_105, !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp_107 = or i7 %i_3, 1, !dbg !434             ; [#uses=1 type=i7] [debug line = 189:8]
  %tmp_108 = zext i7 %tmp_107 to i64, !dbg !434   ; [#uses=2 type=i64] [debug line = 189:8]
  %K_addr_1 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_108, !dbg !434 ; [#uses=1 type=i64*] [debug line = 189:8]
  %K_load_1 = load i64* %K_addr_1, align 8, !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %W_addr_7 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_108, !dbg !434 ; [#uses=1 type=i64*] [debug line = 189:8]
  %W_load_5 = load i64* %W_addr_7, align 8, !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp21 = add i64 %K_load_1, %S_load_2, !dbg !434 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp23 = add i64 %tmp_106, %tmp_103, !dbg !434  ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp22 = add i64 %tmp23, %W_load_5, !dbg !434   ; [#uses=1 type=i64] [debug line = 189:8]
  %t0_1 = add i64 %tmp22, %tmp21, !dbg !434       ; [#uses=2 type=i64] [debug line = 189:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_1}, i64 0, metadata !433), !dbg !434 ; [debug line = 189:8] [debug variable = t0]
  %tmp_109 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_96, i32 28, i32 63), !dbg !435 ; [#uses=1 type=i36] [debug line = 189:0]
  %tmp_252 = trunc i64 %tmp_96 to i28             ; [#uses=1 type=i28]
  %tmp_110 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_252, i36 %tmp_109), !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_111 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_96, i32 34, i32 63), !dbg !435 ; [#uses=1 type=i30] [debug line = 189:0]
  %tmp_255 = trunc i64 %tmp_96 to i34             ; [#uses=1 type=i34]
  %tmp_112 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_255, i30 %tmp_111), !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_113 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_96, i32 39, i32 63), !dbg !435 ; [#uses=1 type=i25] [debug line = 189:0]
  %tmp_258 = trunc i64 %tmp_96 to i39             ; [#uses=1 type=i39]
  %tmp_114 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_258, i25 %tmp_113), !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp24 = xor i64 %tmp_114, %tmp_112, !dbg !435  ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_115 = xor i64 %tmp24, %tmp_110, !dbg !435  ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_116 = or i64 %S_load_4, %tmp_96, !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_117 = and i64 %S_load_5, %tmp_116, !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_118 = and i64 %S_load_4, %tmp_96, !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_119 = or i64 %tmp_117, %tmp_118, !dbg !435 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_120 = add i64 %S_load_6, %t0_1, !dbg !435  ; [#uses=11 type=i64] [debug line = 189:0]
  %tmp25 = add i64 %tmp_115, %t0_1, !dbg !435     ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp_121 = add i64 %tmp25, %tmp_119, !dbg !435  ; [#uses=12 type=i64] [debug line = 189:0]
  %tmp_122 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_120, i32 14, i32 63), !dbg !436 ; [#uses=1 type=i50] [debug line = 190:8]
  %tmp_268 = trunc i64 %tmp_120 to i14            ; [#uses=1 type=i14]
  %tmp_123 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_268, i50 %tmp_122), !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_124 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_120, i32 18, i32 63), !dbg !436 ; [#uses=1 type=i46] [debug line = 190:8]
  %tmp_271 = trunc i64 %tmp_120 to i18            ; [#uses=1 type=i18]
  %tmp_125 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_271, i46 %tmp_124), !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_126 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_120, i32 41, i32 63), !dbg !436 ; [#uses=1 type=i23] [debug line = 190:8]
  %tmp_274 = trunc i64 %tmp_120 to i41            ; [#uses=1 type=i41]
  %tmp_127 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_274, i23 %tmp_126), !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp26 = xor i64 %tmp_127, %tmp_125, !dbg !436  ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_128 = xor i64 %tmp26, %tmp_123, !dbg !436  ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_129 = xor i64 %S_load_1, %tmp_95, !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_130 = and i64 %tmp_120, %tmp_129, !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_131 = xor i64 %S_load_1, %tmp_130, !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp_132 = or i7 %i_3, 2, !dbg !436             ; [#uses=1 type=i7] [debug line = 190:8]
  %tmp_133 = zext i7 %tmp_132 to i64, !dbg !436   ; [#uses=2 type=i64] [debug line = 190:8]
  %K_addr_2 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_133, !dbg !436 ; [#uses=1 type=i64*] [debug line = 190:8]
  %K_load_2 = load i64* %K_addr_2, align 16, !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %W_addr_8 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_133, !dbg !436 ; [#uses=1 type=i64*] [debug line = 190:8]
  %W_load_6 = load i64* %W_addr_8, align 16, !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp27 = add i64 %K_load_2, %S_load_3, !dbg !436 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp28 = add i64 %tmp_131, %tmp_128, !dbg !436  ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp29 = add i64 %tmp28, %W_load_6, !dbg !436   ; [#uses=1 type=i64] [debug line = 190:8]
  %t0_2 = add i64 %tmp29, %tmp27, !dbg !436       ; [#uses=2 type=i64] [debug line = 190:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_2}, i64 0, metadata !433), !dbg !436 ; [debug line = 190:8] [debug variable = t0]
  %tmp_134 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_121, i32 28, i32 63), !dbg !437 ; [#uses=1 type=i36] [debug line = 190:0]
  %tmp_283 = trunc i64 %tmp_121 to i28            ; [#uses=1 type=i28]
  %tmp_135 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_283, i36 %tmp_134), !dbg !437 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_136 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_121, i32 34, i32 63), !dbg !437 ; [#uses=1 type=i30] [debug line = 190:0]
  %tmp_286 = trunc i64 %tmp_121 to i34            ; [#uses=1 type=i34]
  %tmp_137 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_286, i30 %tmp_136), !dbg !437 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_138 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_121, i32 39, i32 63), !dbg !437 ; [#uses=1 type=i25] [debug line = 190:0]
  %tmp_289 = trunc i64 %tmp_121 to i39            ; [#uses=1 type=i39]
  %tmp_139 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_289, i25 %tmp_138), !dbg !437 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp30 = xor i64 %tmp_139, %tmp_137, !dbg !437  ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_140 = xor i64 %tmp30, %tmp_135, !dbg !437  ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_141 = or i64 %tmp_121, %tmp_96, !dbg !437  ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_142 = and i64 %S_load_4, %tmp_141, !dbg !437 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_143 = and i64 %tmp_121, %tmp_96, !dbg !437 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_144 = or i64 %tmp_142, %tmp_143, !dbg !437 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_145 = add i64 %S_load_5, %t0_2, !dbg !437  ; [#uses=11 type=i64] [debug line = 190:0]
  %tmp31 = add i64 %tmp_140, %t0_2, !dbg !437     ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp_146 = add i64 %tmp31, %tmp_144, !dbg !437  ; [#uses=12 type=i64] [debug line = 190:0]
  %tmp_147 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_145, i32 14, i32 63), !dbg !438 ; [#uses=1 type=i50] [debug line = 191:8]
  %tmp_300 = trunc i64 %tmp_145 to i14            ; [#uses=1 type=i14]
  %tmp_148 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_300, i50 %tmp_147), !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_149 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_145, i32 18, i32 63), !dbg !438 ; [#uses=1 type=i46] [debug line = 191:8]
  %tmp_301 = trunc i64 %tmp_145 to i18            ; [#uses=1 type=i18]
  %tmp_150 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_301, i46 %tmp_149), !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_151 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_145, i32 41, i32 63), !dbg !438 ; [#uses=1 type=i23] [debug line = 191:8]
  %tmp_302 = trunc i64 %tmp_145 to i41            ; [#uses=1 type=i41]
  %tmp_152 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_302, i23 %tmp_151), !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp32 = xor i64 %tmp_152, %tmp_150, !dbg !438  ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_153 = xor i64 %tmp32, %tmp_148, !dbg !438  ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_154 = xor i64 %tmp_120, %tmp_95, !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_155 = and i64 %tmp_145, %tmp_154, !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_156 = xor i64 %tmp_155, %tmp_95, !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp_157 = or i7 %i_3, 3, !dbg !438             ; [#uses=1 type=i7] [debug line = 191:8]
  %tmp_158 = zext i7 %tmp_157 to i64, !dbg !438   ; [#uses=2 type=i64] [debug line = 191:8]
  %K_addr_3 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_158, !dbg !438 ; [#uses=1 type=i64*] [debug line = 191:8]
  %K_load_3 = load i64* %K_addr_3, align 8, !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %W_addr_9 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_158, !dbg !438 ; [#uses=1 type=i64*] [debug line = 191:8]
  %W_load_7 = load i64* %W_addr_9, align 8, !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp33 = add i64 %K_load_3, %S_load_1, !dbg !438 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp34 = add i64 %tmp_156, %tmp_153, !dbg !438  ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp35 = add i64 %tmp34, %W_load_7, !dbg !438   ; [#uses=1 type=i64] [debug line = 191:8]
  %t0_3 = add i64 %tmp35, %tmp33, !dbg !438       ; [#uses=2 type=i64] [debug line = 191:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_3}, i64 0, metadata !433), !dbg !438 ; [debug line = 191:8] [debug variable = t0]
  %tmp_159 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_146, i32 28, i32 63), !dbg !439 ; [#uses=1 type=i36] [debug line = 191:0]
  %tmp_303 = trunc i64 %tmp_146 to i28            ; [#uses=1 type=i28]
  %tmp_160 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_303, i36 %tmp_159), !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_161 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_146, i32 34, i32 63), !dbg !439 ; [#uses=1 type=i30] [debug line = 191:0]
  %tmp_304 = trunc i64 %tmp_146 to i34            ; [#uses=1 type=i34]
  %tmp_162 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_304, i30 %tmp_161), !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_163 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_146, i32 39, i32 63), !dbg !439 ; [#uses=1 type=i25] [debug line = 191:0]
  %tmp_305 = trunc i64 %tmp_146 to i39            ; [#uses=1 type=i39]
  %tmp_164 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_305, i25 %tmp_163), !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp36 = xor i64 %tmp_164, %tmp_162, !dbg !439  ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_165 = xor i64 %tmp36, %tmp_160, !dbg !439  ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_166 = or i64 %tmp_146, %tmp_121, !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_167 = and i64 %tmp_166, %tmp_96, !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_168 = and i64 %tmp_146, %tmp_121, !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_169 = or i64 %tmp_167, %tmp_168, !dbg !439 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_170 = add i64 %S_load_4, %t0_3, !dbg !439  ; [#uses=11 type=i64] [debug line = 191:0]
  %tmp37 = add i64 %tmp_165, %t0_3, !dbg !439     ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp_171 = add i64 %tmp37, %tmp_169, !dbg !439  ; [#uses=12 type=i64] [debug line = 191:0]
  %tmp_172 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_170, i32 14, i32 63), !dbg !440 ; [#uses=1 type=i50] [debug line = 192:8]
  %tmp_306 = trunc i64 %tmp_170 to i14            ; [#uses=1 type=i14]
  %tmp_173 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_306, i50 %tmp_172), !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_174 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_170, i32 18, i32 63), !dbg !440 ; [#uses=1 type=i46] [debug line = 192:8]
  %tmp_307 = trunc i64 %tmp_170 to i18            ; [#uses=1 type=i18]
  %tmp_176 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_307, i46 %tmp_174), !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_177 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_170, i32 41, i32 63), !dbg !440 ; [#uses=1 type=i23] [debug line = 192:8]
  %tmp_308 = trunc i64 %tmp_170 to i41            ; [#uses=1 type=i41]
  %tmp_179 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_308, i23 %tmp_177), !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp38 = xor i64 %tmp_179, %tmp_176, !dbg !440  ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_180 = xor i64 %tmp38, %tmp_173, !dbg !440  ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_182 = xor i64 %tmp_145, %tmp_120, !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_183 = and i64 %tmp_170, %tmp_182, !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_184 = xor i64 %tmp_183, %tmp_120, !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp_185 = or i7 %i_3, 4, !dbg !440             ; [#uses=1 type=i7] [debug line = 192:8]
  %tmp_186 = zext i7 %tmp_185 to i64, !dbg !440   ; [#uses=2 type=i64] [debug line = 192:8]
  %K_addr_4 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_186, !dbg !440 ; [#uses=1 type=i64*] [debug line = 192:8]
  %K_load_4 = load i64* %K_addr_4, align 16, !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %W_addr_10 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_186, !dbg !440 ; [#uses=1 type=i64*] [debug line = 192:8]
  %W_load_8 = load i64* %W_addr_10, align 16, !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp39 = add i64 %K_load_4, %W_load_8, !dbg !440 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp40 = add i64 %tmp_180, %tmp_95, !dbg !440   ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp41 = add i64 %tmp40, %tmp_184, !dbg !440    ; [#uses=1 type=i64] [debug line = 192:8]
  %t0_4 = add i64 %tmp41, %tmp39, !dbg !440       ; [#uses=2 type=i64] [debug line = 192:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_4}, i64 0, metadata !433), !dbg !440 ; [debug line = 192:8] [debug variable = t0]
  %tmp_187 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_171, i32 28, i32 63), !dbg !441 ; [#uses=1 type=i36] [debug line = 192:0]
  %tmp_309 = trunc i64 %tmp_171 to i28            ; [#uses=1 type=i28]
  %tmp_188 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_309, i36 %tmp_187), !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_189 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_171, i32 34, i32 63), !dbg !441 ; [#uses=1 type=i30] [debug line = 192:0]
  %tmp_310 = trunc i64 %tmp_171 to i34            ; [#uses=1 type=i34]
  %tmp_191 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_310, i30 %tmp_189), !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_192 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_171, i32 39, i32 63), !dbg !441 ; [#uses=1 type=i25] [debug line = 192:0]
  %tmp_311 = trunc i64 %tmp_171 to i39            ; [#uses=1 type=i39]
  %tmp_194 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_311, i25 %tmp_192), !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp42 = xor i64 %tmp_194, %tmp_191, !dbg !441  ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_195 = xor i64 %tmp42, %tmp_188, !dbg !441  ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_197 = or i64 %tmp_171, %tmp_146, !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_198 = and i64 %tmp_197, %tmp_121, !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_199 = and i64 %tmp_171, %tmp_146, !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_200 = or i64 %tmp_198, %tmp_199, !dbg !441 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_201 = add i64 %tmp_96, %t0_4, !dbg !441    ; [#uses=11 type=i64] [debug line = 192:0]
  store i64 %tmp_201, i64* %S_addr_1, align 8, !dbg !441 ; [debug line = 192:0]
  %tmp43 = add i64 %tmp_195, %t0_4, !dbg !441     ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp_202 = add i64 %tmp43, %tmp_200, !dbg !441  ; [#uses=12 type=i64] [debug line = 192:0]
  store i64 %tmp_202, i64* %S_addr_8, align 8, !dbg !441 ; [debug line = 192:0]
  %tmp_203 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_201, i32 14, i32 63), !dbg !442 ; [#uses=1 type=i50] [debug line = 193:8]
  %tmp_312 = trunc i64 %tmp_201 to i14            ; [#uses=1 type=i14]
  %tmp_204 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_312, i50 %tmp_203), !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_205 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_201, i32 18, i32 63), !dbg !442 ; [#uses=1 type=i46] [debug line = 193:8]
  %tmp_313 = trunc i64 %tmp_201 to i18            ; [#uses=1 type=i18]
  %tmp_207 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_313, i46 %tmp_205), !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_208 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_201, i32 41, i32 63), !dbg !442 ; [#uses=1 type=i23] [debug line = 193:8]
  %tmp_314 = trunc i64 %tmp_201 to i41            ; [#uses=1 type=i41]
  %tmp_210 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_314, i23 %tmp_208), !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp44 = xor i64 %tmp_210, %tmp_207, !dbg !442  ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_211 = xor i64 %tmp44, %tmp_204, !dbg !442  ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_213 = xor i64 %tmp_170, %tmp_145, !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_214 = and i64 %tmp_201, %tmp_213, !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_215 = xor i64 %tmp_214, %tmp_145, !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp_216 = or i7 %i_3, 5, !dbg !442             ; [#uses=1 type=i7] [debug line = 193:8]
  %tmp_217 = zext i7 %tmp_216 to i64, !dbg !442   ; [#uses=2 type=i64] [debug line = 193:8]
  %K_addr_5 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_217, !dbg !442 ; [#uses=1 type=i64*] [debug line = 193:8]
  %K_load_5 = load i64* %K_addr_5, align 8, !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %W_addr_11 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_217, !dbg !442 ; [#uses=1 type=i64*] [debug line = 193:8]
  %W_load_9 = load i64* %W_addr_11, align 8, !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp45 = add i64 %K_load_5, %W_load_9, !dbg !442 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp46 = add i64 %tmp_211, %tmp_120, !dbg !442  ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp47 = add i64 %tmp46, %tmp_215, !dbg !442    ; [#uses=1 type=i64] [debug line = 193:8]
  %t0_5 = add i64 %tmp47, %tmp45, !dbg !442       ; [#uses=2 type=i64] [debug line = 193:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_5}, i64 0, metadata !433), !dbg !442 ; [debug line = 193:8] [debug variable = t0]
  %tmp_218 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_202, i32 28, i32 63), !dbg !443 ; [#uses=1 type=i36] [debug line = 193:0]
  %tmp_315 = trunc i64 %tmp_202 to i28            ; [#uses=1 type=i28]
  %tmp_219 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_315, i36 %tmp_218), !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_220 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_202, i32 34, i32 63), !dbg !443 ; [#uses=1 type=i30] [debug line = 193:0]
  %tmp_316 = trunc i64 %tmp_202 to i34            ; [#uses=1 type=i34]
  %tmp_222 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_316, i30 %tmp_220), !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_223 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_202, i32 39, i32 63), !dbg !443 ; [#uses=1 type=i25] [debug line = 193:0]
  %tmp_317 = trunc i64 %tmp_202 to i39            ; [#uses=1 type=i39]
  %tmp_225 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_317, i25 %tmp_223), !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp48 = xor i64 %tmp_225, %tmp_222, !dbg !443  ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_226 = xor i64 %tmp48, %tmp_219, !dbg !443  ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_228 = or i64 %tmp_202, %tmp_171, !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_229 = and i64 %tmp_228, %tmp_146, !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_230 = and i64 %tmp_202, %tmp_171, !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_231 = or i64 %tmp_229, %tmp_230, !dbg !443 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_232 = add i64 %tmp_121, %t0_5, !dbg !443   ; [#uses=9 type=i64] [debug line = 193:0]
  store i64 %tmp_232, i64* %S_addr_3, align 16, !dbg !443 ; [debug line = 193:0]
  %tmp49 = add i64 %tmp_226, %t0_5, !dbg !443     ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp_233 = add i64 %tmp49, %tmp_231, !dbg !443  ; [#uses=11 type=i64] [debug line = 193:0]
  store i64 %tmp_233, i64* %S_addr_7, align 16, !dbg !443 ; [debug line = 193:0]
  %tmp_234 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_232, i32 14, i32 63), !dbg !444 ; [#uses=1 type=i50] [debug line = 194:8]
  %tmp_318 = trunc i64 %tmp_232 to i14            ; [#uses=1 type=i14]
  %tmp_235 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_318, i50 %tmp_234), !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_236 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_232, i32 18, i32 63), !dbg !444 ; [#uses=1 type=i46] [debug line = 194:8]
  %tmp_319 = trunc i64 %tmp_232 to i18            ; [#uses=1 type=i18]
  %tmp_238 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_319, i46 %tmp_236), !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_239 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_232, i32 41, i32 63), !dbg !444 ; [#uses=1 type=i23] [debug line = 194:8]
  %tmp_320 = trunc i64 %tmp_232 to i41            ; [#uses=1 type=i41]
  %tmp_241 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_320, i23 %tmp_239), !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp50 = xor i64 %tmp_241, %tmp_238, !dbg !444  ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_242 = xor i64 %tmp50, %tmp_235, !dbg !444  ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_244 = xor i64 %tmp_201, %tmp_170, !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_245 = and i64 %tmp_232, %tmp_244, !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_246 = xor i64 %tmp_245, %tmp_170, !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp_247 = or i7 %i_3, 6, !dbg !444             ; [#uses=1 type=i7] [debug line = 194:8]
  %tmp_248 = zext i7 %tmp_247 to i64, !dbg !444   ; [#uses=2 type=i64] [debug line = 194:8]
  %K_addr_6 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_248, !dbg !444 ; [#uses=1 type=i64*] [debug line = 194:8]
  %K_load_6 = load i64* %K_addr_6, align 16, !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %W_addr_12 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_248, !dbg !444 ; [#uses=1 type=i64*] [debug line = 194:8]
  %W_load_10 = load i64* %W_addr_12, align 16, !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp51 = add i64 %K_load_6, %W_load_10, !dbg !444 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp52 = add i64 %tmp_242, %tmp_145, !dbg !444  ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp53 = add i64 %tmp52, %tmp_246, !dbg !444    ; [#uses=1 type=i64] [debug line = 194:8]
  %t0_6 = add i64 %tmp53, %tmp51, !dbg !444       ; [#uses=2 type=i64] [debug line = 194:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_6}, i64 0, metadata !433), !dbg !444 ; [debug line = 194:8] [debug variable = t0]
  %tmp_249 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_233, i32 28, i32 63), !dbg !445 ; [#uses=1 type=i36] [debug line = 194:0]
  %tmp_321 = trunc i64 %tmp_233 to i28            ; [#uses=1 type=i28]
  %tmp_250 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_321, i36 %tmp_249), !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_251 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_233, i32 34, i32 63), !dbg !445 ; [#uses=1 type=i30] [debug line = 194:0]
  %tmp_322 = trunc i64 %tmp_233 to i34            ; [#uses=1 type=i34]
  %tmp_253 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_322, i30 %tmp_251), !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_254 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_233, i32 39, i32 63), !dbg !445 ; [#uses=1 type=i25] [debug line = 194:0]
  %tmp_323 = trunc i64 %tmp_233 to i39            ; [#uses=1 type=i39]
  %tmp_256 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_323, i25 %tmp_254), !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp54 = xor i64 %tmp_256, %tmp_253, !dbg !445  ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_257 = xor i64 %tmp54, %tmp_250, !dbg !445  ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_259 = or i64 %tmp_233, %tmp_202, !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_260 = and i64 %tmp_259, %tmp_171, !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_261 = and i64 %tmp_233, %tmp_202, !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_262 = or i64 %tmp_260, %tmp_261, !dbg !445 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_263 = add i64 %tmp_146, %t0_6, !dbg !445   ; [#uses=8 type=i64] [debug line = 194:0]
  store i64 %tmp_263, i64* %S_addr_4, align 8, !dbg !445 ; [debug line = 194:0]
  %tmp55 = add i64 %tmp_257, %t0_6, !dbg !445     ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp_264 = add i64 %tmp55, %tmp_262, !dbg !445  ; [#uses=9 type=i64] [debug line = 194:0]
  store i64 %tmp_264, i64* %S_addr_6, align 8, !dbg !445 ; [debug line = 194:0]
  %tmp_265 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_263, i32 14, i32 63), !dbg !446 ; [#uses=1 type=i50] [debug line = 195:8]
  %tmp_324 = trunc i64 %tmp_263 to i14            ; [#uses=1 type=i14]
  %tmp_266 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_324, i50 %tmp_265), !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_267 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_263, i32 18, i32 63), !dbg !446 ; [#uses=1 type=i46] [debug line = 195:8]
  %tmp_325 = trunc i64 %tmp_263 to i18            ; [#uses=1 type=i18]
  %tmp_269 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_325, i46 %tmp_267), !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_270 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_263, i32 41, i32 63), !dbg !446 ; [#uses=1 type=i23] [debug line = 195:8]
  %tmp_326 = trunc i64 %tmp_263 to i41            ; [#uses=1 type=i41]
  %tmp_272 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_326, i23 %tmp_270), !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp56 = xor i64 %tmp_272, %tmp_269, !dbg !446  ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_273 = xor i64 %tmp56, %tmp_266, !dbg !446  ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_275 = xor i64 %tmp_232, %tmp_201, !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_276 = and i64 %tmp_263, %tmp_275, !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_277 = xor i64 %tmp_276, %tmp_201, !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp_278 = or i7 %i_3, 7, !dbg !446             ; [#uses=1 type=i7] [debug line = 195:8]
  %tmp_279 = zext i7 %tmp_278 to i64, !dbg !446   ; [#uses=2 type=i64] [debug line = 195:8]
  %K_addr_7 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_279, !dbg !446 ; [#uses=1 type=i64*] [debug line = 195:8]
  %K_load_7 = load i64* %K_addr_7, align 8, !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %W_addr_13 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_279, !dbg !446 ; [#uses=1 type=i64*] [debug line = 195:8]
  %W_load_11 = load i64* %W_addr_13, align 8, !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp57 = add i64 %K_load_7, %W_load_11, !dbg !446 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp58 = add i64 %tmp_273, %tmp_170, !dbg !446  ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp59 = add i64 %tmp58, %tmp_277, !dbg !446    ; [#uses=1 type=i64] [debug line = 195:8]
  %t0_7 = add i64 %tmp59, %tmp57, !dbg !446       ; [#uses=2 type=i64] [debug line = 195:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_7}, i64 0, metadata !433), !dbg !446 ; [debug line = 195:8] [debug variable = t0]
  %tmp_280 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_264, i32 28, i32 63), !dbg !447 ; [#uses=1 type=i36] [debug line = 195:0]
  %tmp_327 = trunc i64 %tmp_264 to i28            ; [#uses=1 type=i28]
  %tmp_281 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_327, i36 %tmp_280), !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_282 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_264, i32 34, i32 63), !dbg !447 ; [#uses=1 type=i30] [debug line = 195:0]
  %tmp_328 = trunc i64 %tmp_264 to i34            ; [#uses=1 type=i34]
  %tmp_284 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_328, i30 %tmp_282), !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_285 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_264, i32 39, i32 63), !dbg !447 ; [#uses=1 type=i25] [debug line = 195:0]
  %tmp_329 = trunc i64 %tmp_264 to i39            ; [#uses=1 type=i39]
  %tmp_287 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_329, i25 %tmp_285), !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp60 = xor i64 %tmp_287, %tmp_284, !dbg !447  ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_288 = xor i64 %tmp60, %tmp_281, !dbg !447  ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_290 = or i64 %tmp_264, %tmp_233, !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_291 = and i64 %tmp_290, %tmp_202, !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_292 = and i64 %tmp_264, %tmp_233, !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_293 = or i64 %tmp_291, %tmp_292, !dbg !447 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_294 = add i64 %tmp_171, %t0_7, !dbg !447   ; [#uses=1 type=i64] [debug line = 195:0]
  store i64 %tmp_294, i64* %S_addr_2, align 16, !dbg !447 ; [debug line = 195:0]
  %tmp61 = add i64 %tmp_288, %t0_7, !dbg !447     ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp_295 = add i64 %tmp61, %tmp_293, !dbg !447  ; [#uses=1 type=i64] [debug line = 195:0]
  store i64 %tmp_295, i64* %S_addr_5, align 16, !dbg !447 ; [debug line = 195:0]
  %i_8 = add i7 8, %i_3, !dbg !448                ; [#uses=1 type=i7] [debug line = 187:25]
  call void @llvm.dbg.value(metadata !{i7 %i_8}, i64 0, metadata !416), !dbg !448 ; [debug line = 187:25] [debug variable = i]
  br label %.preheader11, !dbg !448               ; [debug line = 187:25]

.preheader:                                       ; preds = %6, %.preheader.preheader
  %i_4 = phi i4 [ %i_9, %6 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i4]
  %exitcond = icmp eq i4 %i_4, -8, !dbg !431      ; [#uses=1 type=i1] [debug line = 203:9]
  %empty_32 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_9 = add i4 %i_4, 1, !dbg !449                ; [#uses=1 type=i4] [debug line = 203:23]
  br i1 %exitcond, label %7, label %6, !dbg !431  ; [debug line = 203:9]

; <label>:6                                       ; preds = %.preheader
  %tmp_296 = zext i4 %i_4 to i64, !dbg !450       ; [#uses=2 type=i64] [debug line = 204:9]
  %md_state_addr_8 = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp_296, !dbg !450 ; [#uses=2 type=i64*] [debug line = 204:9]
  %md_state_load_1 = load i64* %md_state_addr_8, align 8, !dbg !450 ; [#uses=1 type=i64] [debug line = 204:9]
  %S_addr_9 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp_296, !dbg !450 ; [#uses=1 type=i64*] [debug line = 204:9]
  %S_load_8 = load i64* %S_addr_9, align 8, !dbg !450 ; [#uses=1 type=i64] [debug line = 204:9]
  %tmp_297 = add i64 %md_state_load_1, %S_load_8, !dbg !450 ; [#uses=1 type=i64] [debug line = 204:9]
  store i64 %tmp_297, i64* %md_state_addr_8, align 8, !dbg !450 ; [debug line = 204:9]
  call void @llvm.dbg.value(metadata !{i4 %i_9}, i64 0, metadata !416), !dbg !449 ; [debug line = 203:23] [debug variable = i]
  br label %.preheader, !dbg !449                 ; [debug line = 203:23]

; <label>:7                                       ; preds = %.preheader
  ret void
}

; [#uses=1]
define internal fastcc void @sha512_compress_128.1([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %buf, i64 %p_01_idx) {
  %p_01_idx_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %p_01_idx) ; [#uses=1 type=i64]
  %S = alloca [8 x i64], align 16                 ; [#uses=10 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=14 type=[80 x i64]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !452), !dbg !455 ; [debug line = 96:48] [debug variable = md.state]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !456 ; [debug line = 98:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !458 ; [debug line = 99:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !459 ; [debug line = 100:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !460 ; [debug line = 101:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !461 ; [debug line = 102:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !462 ; [debug line = 103:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !463 ; [debug line = 104:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !464), !dbg !465 ; [debug line = 105:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !466), !dbg !467 ; [debug line = 105:17] [debug variable = W]
  br label %1, !dbg !468                          ; [debug line = 109:10]

; <label>:1                                       ; preds = %2, %0
  %i = phi i4 [ 0, %0 ], [ %i_10, %2 ]            ; [#uses=3 type=i4]
  %exitcond4 = icmp eq i4 %i, -8, !dbg !468       ; [#uses=1 type=i1] [debug line = 109:10]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_10 = add i4 %i, 1, !dbg !470                 ; [#uses=1 type=i4] [debug line = 109:24]
  br i1 %exitcond4, label %.preheader13.preheader, label %2, !dbg !468 ; [debug line = 109:10]

.preheader13.preheader:                           ; preds = %1
  %tmp_337 = trunc i64 %p_01_idx_read to i9       ; [#uses=8 type=i9]
  br label %.preheader13, !dbg !471               ; [debug line = 114:10]

; <label>:2                                       ; preds = %1
  %tmp = zext i4 %i to i64, !dbg !473             ; [#uses=2 type=i64] [debug line = 110:9]
  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp, !dbg !473 ; [#uses=1 type=i64*] [debug line = 110:9]
  %md_state_load = load i64* %md_state_addr, align 8, !dbg !473 ; [#uses=1 type=i64] [debug line = 110:9]
  %S_addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp, !dbg !473 ; [#uses=1 type=i64*] [debug line = 110:9]
  store i64 %md_state_load, i64* %S_addr, align 8, !dbg !473 ; [debug line = 110:9]
  call void @llvm.dbg.value(metadata !{i4 %i_10}, i64 0, metadata !475), !dbg !470 ; [debug line = 109:24] [debug variable = i]
  br label %1, !dbg !470                          ; [debug line = 109:24]

.preheader13:                                     ; preds = %3, %.preheader13.preheader
  %i_1 = phi i5 [ %i_11, %3 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i5]
  %exitcond9 = icmp eq i5 %i_1, -16, !dbg !471    ; [#uses=1 type=i1] [debug line = 114:10]
  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) ; [#uses=0 type=i32]
  %i_11 = add i5 %i_1, 1, !dbg !476               ; [#uses=1 type=i5] [debug line = 114:25]
  br i1 %exitcond9, label %.preheader12.preheader, label %3, !dbg !471 ; [debug line = 114:10]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !477               ; [debug line = 119:10]

; <label>:3                                       ; preds = %.preheader13
  %tmp_340 = trunc i5 %i_1 to i4                  ; [#uses=1 type=i4]
  %tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_340, i3 0), !dbg !479 ; [#uses=8 type=i7] [debug line = 115:11]
  %tmp_409_cast = zext i7 %tmp_s to i9            ; [#uses=1 type=i9]
  %sum = add i9 %tmp_337, %tmp_409_cast           ; [#uses=1 type=i9]
  %sum_cast = zext i9 %sum to i64                 ; [#uses=1 type=i64]
  %buf_addr = getelementptr [128 x i8]* %buf, i64 0, i64 %sum_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load = load i8* %buf_addr, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum1 = or i7 %tmp_s, 1, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum1_cast = zext i7 %p_sum1 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum2 = add i9 %tmp_337, %p_sum1_cast           ; [#uses=1 type=i9]
  %sum2_cast = zext i9 %sum2 to i64               ; [#uses=1 type=i64]
  %buf_addr_8 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum2_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_8 = load i8* %buf_addr_8, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum2 = or i7 %tmp_s, 2, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum2_cast = zext i7 %p_sum2 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum4 = add i9 %tmp_337, %p_sum2_cast           ; [#uses=1 type=i9]
  %sum4_cast = zext i9 %sum4 to i64               ; [#uses=1 type=i64]
  %buf_addr_9 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum4_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_9 = load i8* %buf_addr_9, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum3 = or i7 %tmp_s, 3, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum3_cast = zext i7 %p_sum3 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum6 = add i9 %tmp_337, %p_sum3_cast           ; [#uses=1 type=i9]
  %sum6_cast = zext i9 %sum6 to i64               ; [#uses=1 type=i64]
  %buf_addr_10 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum6_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_10 = load i8* %buf_addr_10, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum4 = or i7 %tmp_s, 4, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum4_cast = zext i7 %p_sum4 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum8 = add i9 %tmp_337, %p_sum4_cast           ; [#uses=1 type=i9]
  %sum8_cast = zext i9 %sum8 to i64               ; [#uses=1 type=i64]
  %buf_addr_11 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum8_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_11 = load i8* %buf_addr_11, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum5 = or i7 %tmp_s, 5, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum5_cast = zext i7 %p_sum5 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum7 = add i9 %tmp_337, %p_sum5_cast           ; [#uses=1 type=i9]
  %sum7_cast = zext i9 %sum7 to i64               ; [#uses=1 type=i64]
  %buf_addr_12 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum7_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_12 = load i8* %buf_addr_12, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum6 = or i7 %tmp_s, 6, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum6_cast = zext i7 %p_sum6 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum9 = add i9 %tmp_337, %p_sum6_cast           ; [#uses=1 type=i9]
  %sum9_cast = zext i9 %sum9 to i64               ; [#uses=1 type=i64]
  %buf_addr_13 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum9_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_13 = load i8* %buf_addr_13, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum7 = or i7 %tmp_s, 7, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum7_cast = zext i7 %p_sum7 to i9, !dbg !479 ; [#uses=1 type=i9] [debug line = 115:11]
  %sum1 = add i9 %tmp_337, %p_sum7_cast           ; [#uses=1 type=i9]
  %sum1_cast = zext i9 %sum1 to i64               ; [#uses=1 type=i64]
  %buf_addr_14 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum1_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_14 = load i8* %buf_addr_14, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp_298 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i8.i8.i8.i8.i8.i8.i8(i8 %buf_load, i8 %buf_load_8, i8 %buf_load_9, i8 %buf_load_10, i8 %buf_load_11, i8 %buf_load_12, i8 %buf_load_13, i8 %buf_load_14), !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %tmp_299 = zext i5 %i_1 to i64, !dbg !479       ; [#uses=1 type=i64] [debug line = 115:11]
  %W_addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_299, !dbg !479 ; [#uses=1 type=i64*] [debug line = 115:11]
  store i64 %tmp_298, i64* %W_addr, align 8, !dbg !479 ; [debug line = 115:11]
  call void @llvm.dbg.value(metadata !{i5 %i_11}, i64 0, metadata !475), !dbg !476 ; [debug line = 114:25] [debug variable = i]
  br label %.preheader13, !dbg !476               ; [debug line = 114:25]

.preheader12:                                     ; preds = %4, %.preheader12.preheader
  %i_2 = phi i7 [ %i_12, %4 ], [ 16, %.preheader12.preheader ] ; [#uses=7 type=i7]
  %exitcond8 = icmp eq i7 %i_2, -48, !dbg !477    ; [#uses=1 type=i1] [debug line = 119:10]
  %empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader11.preheader, label %4, !dbg !477 ; [debug line = 119:10]

.preheader11.preheader:                           ; preds = %.preheader12
  %S_addr_10 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_11 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_12 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_13 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_14 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S_addr_15 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S_addr_16 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S_addr_17 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  br label %.preheader11, !dbg !486               ; [debug line = 130:10]

; <label>:4                                       ; preds = %.preheader12
  %tmp_300 = add i7 -2, %i_2, !dbg !487           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_301 = zext i7 %tmp_300 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_14 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_301, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load = load i64* %W_addr_14, align 8, !dbg !487 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp_302 = call i45 @_ssdm_op_PartSelect.i45.i64.i32.i32(i64 %W_load, i32 19, i32 63), !dbg !487 ; [#uses=1 type=i45] [debug line = 120:9]
  %tmp_343 = trunc i64 %W_load to i19             ; [#uses=1 type=i19]
  %tmp_303 = call i64 @_ssdm_op_BitConcatenate.i64.i19.i45(i19 %tmp_343, i45 %tmp_302), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_304 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %W_load, i32 61, i32 63), !dbg !487 ; [#uses=1 type=i3] [debug line = 120:9]
  %tmp_353 = trunc i64 %W_load to i61             ; [#uses=1 type=i61]
  %tmp_305 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 %tmp_353, i3 %tmp_304), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_306 = call i58 @_ssdm_op_PartSelect.i58.i64.i32.i32(i64 %W_load, i32 6, i32 63), !dbg !487 ; [#uses=1 type=i58] [debug line = 120:9]
  %tmp_293 = zext i58 %tmp_306 to i64, !dbg !487  ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp6 = xor i64 %tmp_293, %tmp_305, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_307 = xor i64 %tmp6, %tmp_303, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_308 = add i7 -7, %i_2, !dbg !487           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_309 = zext i7 %tmp_308 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_15 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_309, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load_12 = load i64* %W_addr_15, align 8, !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_310 = add i7 -15, %i_2, !dbg !487          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_311 = zext i7 %tmp_310 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_16 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_311, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load_13 = load i64* %W_addr_16, align 8, !dbg !487 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp_312 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %W_load_13, i32 1, i32 63), !dbg !487 ; [#uses=1 type=i63] [debug line = 120:9]
  %tmp_356 = trunc i64 %W_load_13 to i1           ; [#uses=1 type=i1]
  %tmp_313 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 %tmp_356, i63 %tmp_312), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_314 = call i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64 %W_load_13, i32 8, i32 63), !dbg !487 ; [#uses=1 type=i56] [debug line = 120:9]
  %tmp_359 = trunc i64 %W_load_13 to i8           ; [#uses=1 type=i8]
  %tmp_315 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8 %tmp_359, i56 %tmp_314), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_316 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %W_load_13, i32 7, i32 63), !dbg !487 ; [#uses=1 type=i57] [debug line = 120:9]
  %tmp_296 = zext i57 %tmp_316 to i64, !dbg !487  ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp7 = xor i64 %tmp_296, %tmp_315, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_317 = xor i64 %tmp7, %tmp_313, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_318 = add i7 -16, %i_2, !dbg !487          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_319 = zext i7 %tmp_318 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_17 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_319, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load_14 = load i64* %W_addr_17, align 8, !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp8 = add i64 %W_load_12, %W_load_14, !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp9 = add i64 %tmp_307, %tmp_317, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_320 = add i64 %tmp9, %tmp8, !dbg !487      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_321 = zext i7 %i_2 to i64, !dbg !487       ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_18 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_321, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  store i64 %tmp_320, i64* %W_addr_18, align 8, !dbg !487 ; [debug line = 120:9]
  %i_12 = add i7 1, %i_2, !dbg !489               ; [#uses=1 type=i7] [debug line = 119:26]
  call void @llvm.dbg.value(metadata !{i7 %i_12}, i64 0, metadata !475), !dbg !489 ; [debug line = 119:26] [debug variable = i]
  br label %.preheader12, !dbg !489               ; [debug line = 119:26]

.preheader11:                                     ; preds = %5, %.preheader11.preheader
  %i_3 = phi i7 [ %i_13, %5 ], [ 0, %.preheader11.preheader ] ; [#uses=10 type=i7]
  %tmp_322 = icmp ult i7 %i_3, -48, !dbg !486     ; [#uses=1 type=i1] [debug line = 130:10]
  %empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %tmp_322, label %5, label %.preheader.preheader, !dbg !486 ; [debug line = 130:10]

.preheader.preheader:                             ; preds = %.preheader11
  br label %.preheader, !dbg !490                 ; [debug line = 146:9]

; <label>:5                                       ; preds = %.preheader11
  %S_load = load i64* %S_addr_10, align 8, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %S_load_9 = load i64* %S_addr_11, align 16, !dbg !482 ; [#uses=11 type=i64] [debug line = 131:8]
  %tmp_323 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %S_load_9, i32 14, i32 63), !dbg !482 ; [#uses=1 type=i50] [debug line = 131:8]
  %tmp_368 = trunc i64 %S_load_9 to i14           ; [#uses=1 type=i14]
  %tmp_324 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_368, i50 %tmp_323), !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_325 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %S_load_9, i32 18, i32 63), !dbg !482 ; [#uses=1 type=i46] [debug line = 131:8]
  %tmp_371 = trunc i64 %S_load_9 to i18           ; [#uses=1 type=i18]
  %tmp_326 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_371, i46 %tmp_325), !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_327 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %S_load_9, i32 41, i32 63), !dbg !482 ; [#uses=1 type=i23] [debug line = 131:8]
  %tmp_374 = trunc i64 %S_load_9 to i41           ; [#uses=1 type=i41]
  %tmp_328 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_374, i23 %tmp_327), !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp10 = xor i64 %tmp_328, %tmp_326, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_329 = xor i64 %tmp10, %tmp_324, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %S_load_10 = load i64* %S_addr_12, align 16, !dbg !482 ; [#uses=3 type=i64] [debug line = 131:8]
  %S_load_11 = load i64* %S_addr_13, align 8, !dbg !482 ; [#uses=4 type=i64] [debug line = 131:8]
  %tmp_330 = xor i64 %S_load_11, %S_load_10, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_331 = and i64 %S_load_9, %tmp_330, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_332 = xor i64 %S_load_10, %tmp_331, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_333 = zext i7 %i_3 to i64, !dbg !482       ; [#uses=2 type=i64] [debug line = 131:8]
  %K_addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_333, !dbg !482 ; [#uses=1 type=i64*] [debug line = 131:8]
  %K_load = load i64* %K_addr, align 16, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %W_addr_19 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_333, !dbg !482 ; [#uses=1 type=i64*] [debug line = 131:8]
  %W_load_15 = load i64* %W_addr_19, align 16, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp13 = add i64 %K_load, %S_load, !dbg !482    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp15 = add i64 %tmp_329, %tmp_332, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp14 = add i64 %tmp15, %W_load_15, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %t0 = add i64 %tmp14, %tmp13, !dbg !482         ; [#uses=2 type=i64] [debug line = 131:8]
  call void @llvm.dbg.value(metadata !{i64 %t0}, i64 0, metadata !492), !dbg !482 ; [debug line = 131:8] [debug variable = t0]
  %S_load_12 = load i64* %S_addr_14, align 16, !dbg !485 ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp_334 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %S_load_12, i32 28, i32 63), !dbg !485 ; [#uses=1 type=i36] [debug line = 131:0]
  %tmp_384 = trunc i64 %S_load_12 to i28          ; [#uses=1 type=i28]
  %tmp_335 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_384, i36 %tmp_334), !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_336 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %S_load_12, i32 34, i32 63), !dbg !485 ; [#uses=1 type=i30] [debug line = 131:0]
  %tmp_387 = trunc i64 %S_load_12 to i34          ; [#uses=1 type=i34]
  %tmp_338 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_387, i30 %tmp_336), !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_339 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %S_load_12, i32 39, i32 63), !dbg !485 ; [#uses=1 type=i25] [debug line = 131:0]
  %tmp_390 = trunc i64 %S_load_12 to i39          ; [#uses=1 type=i39]
  %tmp_341 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_390, i25 %tmp_339), !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp16 = xor i64 %tmp_341, %tmp_338, !dbg !485  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_342 = xor i64 %tmp16, %tmp_335, !dbg !485  ; [#uses=1 type=i64] [debug line = 131:0]
  %S_load_13 = load i64* %S_addr_15, align 8, !dbg !485 ; [#uses=4 type=i64] [debug line = 131:0]
  %tmp_344 = or i64 %S_load_13, %S_load_12, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %S_load_14 = load i64* %S_addr_16, align 16, !dbg !485 ; [#uses=2 type=i64] [debug line = 131:0]
  %tmp_345 = and i64 %S_load_14, %tmp_344, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_346 = and i64 %S_load_13, %S_load_12, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_347 = or i64 %tmp_345, %tmp_346, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %S_load_15 = load i64* %S_addr_17, align 8, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_348 = add i64 %S_load_15, %t0, !dbg !485   ; [#uses=11 type=i64] [debug line = 131:0]
  %tmp17 = add i64 %tmp_342, %tmp_347, !dbg !485  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_349 = add i64 %tmp17, %t0, !dbg !485       ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp_350 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_348, i32 14, i32 63), !dbg !493 ; [#uses=1 type=i50] [debug line = 132:8]
  %tmp_399 = trunc i64 %tmp_348 to i14            ; [#uses=1 type=i14]
  %tmp_351 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_399, i50 %tmp_350), !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_352 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_348, i32 18, i32 63), !dbg !493 ; [#uses=1 type=i46] [debug line = 132:8]
  %tmp_402 = trunc i64 %tmp_348 to i18            ; [#uses=1 type=i18]
  %tmp_354 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_402, i46 %tmp_352), !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_355 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_348, i32 41, i32 63), !dbg !493 ; [#uses=1 type=i23] [debug line = 132:8]
  %tmp_405 = trunc i64 %tmp_348 to i41            ; [#uses=1 type=i41]
  %tmp_357 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_405, i23 %tmp_355), !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp18 = xor i64 %tmp_357, %tmp_354, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_358 = xor i64 %tmp18, %tmp_351, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_360 = xor i64 %S_load_11, %S_load_9, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_361 = and i64 %tmp_348, %tmp_360, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_362 = xor i64 %S_load_11, %tmp_361, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_363 = or i7 %i_3, 1, !dbg !493             ; [#uses=1 type=i7] [debug line = 132:8]
  %tmp_364 = zext i7 %tmp_363 to i64, !dbg !493   ; [#uses=2 type=i64] [debug line = 132:8]
  %K_addr_8 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_364, !dbg !493 ; [#uses=1 type=i64*] [debug line = 132:8]
  %K_load_8 = load i64* %K_addr_8, align 8, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %W_addr_20 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_364, !dbg !493 ; [#uses=1 type=i64*] [debug line = 132:8]
  %W_load_16 = load i64* %W_addr_20, align 8, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp21 = add i64 %K_load_8, %S_load_10, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp23 = add i64 %tmp_362, %tmp_358, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp22 = add i64 %tmp23, %W_load_16, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %t0_8 = add i64 %tmp22, %tmp21, !dbg !493       ; [#uses=2 type=i64] [debug line = 132:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_8}, i64 0, metadata !492), !dbg !493 ; [debug line = 132:8] [debug variable = t0]
  %tmp_365 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_349, i32 28, i32 63), !dbg !494 ; [#uses=1 type=i36] [debug line = 132:0]
  %tmp_415 = trunc i64 %tmp_349 to i28            ; [#uses=1 type=i28]
  %tmp_366 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_415, i36 %tmp_365), !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_367 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_349, i32 34, i32 63), !dbg !494 ; [#uses=1 type=i30] [debug line = 132:0]
  %tmp_418 = trunc i64 %tmp_349 to i34            ; [#uses=1 type=i34]
  %tmp_369 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_418, i30 %tmp_367), !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_370 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_349, i32 39, i32 63), !dbg !494 ; [#uses=1 type=i25] [debug line = 132:0]
  %tmp_421 = trunc i64 %tmp_349 to i39            ; [#uses=1 type=i39]
  %tmp_372 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_421, i25 %tmp_370), !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp24 = xor i64 %tmp_372, %tmp_369, !dbg !494  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_373 = xor i64 %tmp24, %tmp_366, !dbg !494  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_375 = or i64 %S_load_12, %tmp_349, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_376 = and i64 %S_load_13, %tmp_375, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_377 = and i64 %S_load_12, %tmp_349, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_378 = or i64 %tmp_376, %tmp_377, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_379 = add i64 %S_load_14, %t0_8, !dbg !494 ; [#uses=11 type=i64] [debug line = 132:0]
  %tmp25 = add i64 %tmp_373, %t0_8, !dbg !494     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_380 = add i64 %tmp25, %tmp_378, !dbg !494  ; [#uses=12 type=i64] [debug line = 132:0]
  %tmp_381 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_379, i32 14, i32 63), !dbg !495 ; [#uses=1 type=i50] [debug line = 133:8]
  %tmp_430 = trunc i64 %tmp_379 to i14            ; [#uses=1 type=i14]
  %tmp_382 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_430, i50 %tmp_381), !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_383 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_379, i32 18, i32 63), !dbg !495 ; [#uses=1 type=i46] [debug line = 133:8]
  %tmp_433 = trunc i64 %tmp_379 to i18            ; [#uses=1 type=i18]
  %tmp_385 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_433, i46 %tmp_383), !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_386 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_379, i32 41, i32 63), !dbg !495 ; [#uses=1 type=i23] [debug line = 133:8]
  %tmp_436 = trunc i64 %tmp_379 to i41            ; [#uses=1 type=i41]
  %tmp_388 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_436, i23 %tmp_386), !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp26 = xor i64 %tmp_388, %tmp_385, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_389 = xor i64 %tmp26, %tmp_382, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_391 = xor i64 %S_load_9, %tmp_348, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_392 = and i64 %tmp_379, %tmp_391, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_393 = xor i64 %S_load_9, %tmp_392, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_394 = or i7 %i_3, 2, !dbg !495             ; [#uses=1 type=i7] [debug line = 133:8]
  %tmp_395 = zext i7 %tmp_394 to i64, !dbg !495   ; [#uses=2 type=i64] [debug line = 133:8]
  %K_addr_9 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_395, !dbg !495 ; [#uses=1 type=i64*] [debug line = 133:8]
  %K_load_9 = load i64* %K_addr_9, align 16, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %W_addr_21 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_395, !dbg !495 ; [#uses=1 type=i64*] [debug line = 133:8]
  %W_load_17 = load i64* %W_addr_21, align 16, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp29 = add i64 %K_load_9, %S_load_11, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp31 = add i64 %tmp_393, %tmp_389, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp30 = add i64 %tmp31, %W_load_17, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %t0_9 = add i64 %tmp30, %tmp29, !dbg !495       ; [#uses=2 type=i64] [debug line = 133:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_9}, i64 0, metadata !492), !dbg !495 ; [debug line = 133:8] [debug variable = t0]
  %tmp_396 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_380, i32 28, i32 63), !dbg !496 ; [#uses=1 type=i36] [debug line = 133:0]
  %tmp_446 = trunc i64 %tmp_380 to i28            ; [#uses=1 type=i28]
  %tmp_397 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_446, i36 %tmp_396), !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_398 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_380, i32 34, i32 63), !dbg !496 ; [#uses=1 type=i30] [debug line = 133:0]
  %tmp_449 = trunc i64 %tmp_380 to i34            ; [#uses=1 type=i34]
  %tmp_400 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_449, i30 %tmp_398), !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_401 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_380, i32 39, i32 63), !dbg !496 ; [#uses=1 type=i25] [debug line = 133:0]
  %tmp_452 = trunc i64 %tmp_380 to i39            ; [#uses=1 type=i39]
  %tmp_403 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_452, i25 %tmp_401), !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp32 = xor i64 %tmp_403, %tmp_400, !dbg !496  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_404 = xor i64 %tmp32, %tmp_397, !dbg !496  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_406 = or i64 %tmp_380, %tmp_349, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_407 = and i64 %S_load_12, %tmp_406, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_408 = and i64 %tmp_380, %tmp_349, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_409 = or i64 %tmp_407, %tmp_408, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_410 = add i64 %S_load_13, %t0_9, !dbg !496 ; [#uses=11 type=i64] [debug line = 133:0]
  %tmp33 = add i64 %tmp_404, %t0_9, !dbg !496     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_411 = add i64 %tmp33, %tmp_409, !dbg !496  ; [#uses=12 type=i64] [debug line = 133:0]
  %tmp_412 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_410, i32 14, i32 63), !dbg !497 ; [#uses=1 type=i50] [debug line = 134:8]
  %tmp_461 = trunc i64 %tmp_410 to i14            ; [#uses=1 type=i14]
  %tmp_413 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_461, i50 %tmp_412), !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_414 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_410, i32 18, i32 63), !dbg !497 ; [#uses=1 type=i46] [debug line = 134:8]
  %tmp_464 = trunc i64 %tmp_410 to i18            ; [#uses=1 type=i18]
  %tmp_416 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_464, i46 %tmp_414), !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_417 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_410, i32 41, i32 63), !dbg !497 ; [#uses=1 type=i23] [debug line = 134:8]
  %tmp_467 = trunc i64 %tmp_410 to i41            ; [#uses=1 type=i41]
  %tmp_419 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_467, i23 %tmp_417), !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp34 = xor i64 %tmp_419, %tmp_416, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_420 = xor i64 %tmp34, %tmp_413, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_422 = xor i64 %tmp_379, %tmp_348, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_423 = and i64 %tmp_410, %tmp_422, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_424 = xor i64 %tmp_423, %tmp_348, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_425 = or i7 %i_3, 3, !dbg !497             ; [#uses=1 type=i7] [debug line = 134:8]
  %tmp_426 = zext i7 %tmp_425 to i64, !dbg !497   ; [#uses=2 type=i64] [debug line = 134:8]
  %K_addr_10 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_426, !dbg !497 ; [#uses=1 type=i64*] [debug line = 134:8]
  %K_load_10 = load i64* %K_addr_10, align 8, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %W_addr_22 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_426, !dbg !497 ; [#uses=1 type=i64*] [debug line = 134:8]
  %W_load_18 = load i64* %W_addr_22, align 8, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp37 = add i64 %K_load_10, %S_load_9, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp39 = add i64 %tmp_424, %tmp_420, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp38 = add i64 %tmp39, %W_load_18, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %t0_10 = add i64 %tmp38, %tmp37, !dbg !497      ; [#uses=2 type=i64] [debug line = 134:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_10}, i64 0, metadata !492), !dbg !497 ; [debug line = 134:8] [debug variable = t0]
  %tmp_427 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_411, i32 28, i32 63), !dbg !498 ; [#uses=1 type=i36] [debug line = 134:0]
  %tmp_477 = trunc i64 %tmp_411 to i28            ; [#uses=1 type=i28]
  %tmp_428 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_477, i36 %tmp_427), !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_429 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_411, i32 34, i32 63), !dbg !498 ; [#uses=1 type=i30] [debug line = 134:0]
  %tmp_480 = trunc i64 %tmp_411 to i34            ; [#uses=1 type=i34]
  %tmp_431 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_480, i30 %tmp_429), !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_432 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_411, i32 39, i32 63), !dbg !498 ; [#uses=1 type=i25] [debug line = 134:0]
  %tmp_483 = trunc i64 %tmp_411 to i39            ; [#uses=1 type=i39]
  %tmp_434 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_483, i25 %tmp_432), !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp40 = xor i64 %tmp_434, %tmp_431, !dbg !498  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_435 = xor i64 %tmp40, %tmp_428, !dbg !498  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_437 = or i64 %tmp_411, %tmp_380, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_438 = and i64 %tmp_437, %tmp_349, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_439 = and i64 %tmp_411, %tmp_380, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_440 = or i64 %tmp_438, %tmp_439, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_441 = add i64 %S_load_12, %t0_10, !dbg !498 ; [#uses=11 type=i64] [debug line = 134:0]
  %tmp41 = add i64 %tmp_435, %t0_10, !dbg !498    ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_442 = add i64 %tmp41, %tmp_440, !dbg !498  ; [#uses=12 type=i64] [debug line = 134:0]
  %tmp_443 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_441, i32 14, i32 63), !dbg !499 ; [#uses=1 type=i50] [debug line = 135:8]
  %tmp_492 = trunc i64 %tmp_441 to i14            ; [#uses=1 type=i14]
  %tmp_444 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_492, i50 %tmp_443), !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_445 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_441, i32 18, i32 63), !dbg !499 ; [#uses=1 type=i46] [debug line = 135:8]
  %tmp_495 = trunc i64 %tmp_441 to i18            ; [#uses=1 type=i18]
  %tmp_447 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_495, i46 %tmp_445), !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_448 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_441, i32 41, i32 63), !dbg !499 ; [#uses=1 type=i23] [debug line = 135:8]
  %tmp_498 = trunc i64 %tmp_441 to i41            ; [#uses=1 type=i41]
  %tmp_450 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_498, i23 %tmp_448), !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp42 = xor i64 %tmp_450, %tmp_447, !dbg !499  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_451 = xor i64 %tmp42, %tmp_444, !dbg !499  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_453 = xor i64 %tmp_410, %tmp_379, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_454 = and i64 %tmp_441, %tmp_453, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_455 = xor i64 %tmp_454, %tmp_379, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_456 = or i7 %i_3, 4, !dbg !499             ; [#uses=1 type=i7] [debug line = 135:8]
  %tmp_457 = zext i7 %tmp_456 to i64, !dbg !499   ; [#uses=2 type=i64] [debug line = 135:8]
  %K_addr_11 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_457, !dbg !499 ; [#uses=1 type=i64*] [debug line = 135:8]
  %K_load_11 = load i64* %K_addr_11, align 16, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %W_addr_23 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_457, !dbg !499 ; [#uses=1 type=i64*] [debug line = 135:8]
  %W_load_19 = load i64* %W_addr_23, align 16, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp45 = add i64 %K_load_11, %W_load_19, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp47 = add i64 %tmp_451, %tmp_348, !dbg !499  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp46 = add i64 %tmp47, %tmp_455, !dbg !499    ; [#uses=1 type=i64] [debug line = 135:8]
  %t0_11 = add i64 %tmp46, %tmp45, !dbg !499      ; [#uses=2 type=i64] [debug line = 135:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_11}, i64 0, metadata !492), !dbg !499 ; [debug line = 135:8] [debug variable = t0]
  %tmp_458 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_442, i32 28, i32 63), !dbg !500 ; [#uses=1 type=i36] [debug line = 135:0]
  %tmp_508 = trunc i64 %tmp_442 to i28            ; [#uses=1 type=i28]
  %tmp_459 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_508, i36 %tmp_458), !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_460 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_442, i32 34, i32 63), !dbg !500 ; [#uses=1 type=i30] [debug line = 135:0]
  %tmp_511 = trunc i64 %tmp_442 to i34            ; [#uses=1 type=i34]
  %tmp_462 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_511, i30 %tmp_460), !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_463 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_442, i32 39, i32 63), !dbg !500 ; [#uses=1 type=i25] [debug line = 135:0]
  %tmp_514 = trunc i64 %tmp_442 to i39            ; [#uses=1 type=i39]
  %tmp_465 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_514, i25 %tmp_463), !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp48 = xor i64 %tmp_465, %tmp_462, !dbg !500  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_466 = xor i64 %tmp48, %tmp_459, !dbg !500  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_468 = or i64 %tmp_442, %tmp_411, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_469 = and i64 %tmp_468, %tmp_380, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_470 = and i64 %tmp_442, %tmp_411, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_471 = or i64 %tmp_469, %tmp_470, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_472 = add i64 %tmp_349, %t0_11, !dbg !500  ; [#uses=11 type=i64] [debug line = 135:0]
  store i64 %tmp_472, i64* %S_addr_10, align 8, !dbg !500 ; [debug line = 135:0]
  %tmp49 = add i64 %tmp_466, %t0_11, !dbg !500    ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_473 = add i64 %tmp49, %tmp_471, !dbg !500  ; [#uses=12 type=i64] [debug line = 135:0]
  store i64 %tmp_473, i64* %S_addr_17, align 8, !dbg !500 ; [debug line = 135:0]
  %tmp_474 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_472, i32 14, i32 63), !dbg !501 ; [#uses=1 type=i50] [debug line = 136:8]
  %tmp_523 = trunc i64 %tmp_472 to i14            ; [#uses=1 type=i14]
  %tmp_475 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_523, i50 %tmp_474), !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_476 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_472, i32 18, i32 63), !dbg !501 ; [#uses=1 type=i46] [debug line = 136:8]
  %tmp_526 = trunc i64 %tmp_472 to i18            ; [#uses=1 type=i18]
  %tmp_478 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_526, i46 %tmp_476), !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_479 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_472, i32 41, i32 63), !dbg !501 ; [#uses=1 type=i23] [debug line = 136:8]
  %tmp_529 = trunc i64 %tmp_472 to i41            ; [#uses=1 type=i41]
  %tmp_481 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_529, i23 %tmp_479), !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp50 = xor i64 %tmp_481, %tmp_478, !dbg !501  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_482 = xor i64 %tmp50, %tmp_475, !dbg !501  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_484 = xor i64 %tmp_441, %tmp_410, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_485 = and i64 %tmp_472, %tmp_484, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_486 = xor i64 %tmp_485, %tmp_410, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_487 = or i7 %i_3, 5, !dbg !501             ; [#uses=1 type=i7] [debug line = 136:8]
  %tmp_488 = zext i7 %tmp_487 to i64, !dbg !501   ; [#uses=2 type=i64] [debug line = 136:8]
  %K_addr_12 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_488, !dbg !501 ; [#uses=1 type=i64*] [debug line = 136:8]
  %K_load_12 = load i64* %K_addr_12, align 8, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %W_addr_24 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_488, !dbg !501 ; [#uses=1 type=i64*] [debug line = 136:8]
  %W_load_20 = load i64* %W_addr_24, align 8, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp53 = add i64 %K_load_12, %W_load_20, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp55 = add i64 %tmp_482, %tmp_379, !dbg !501  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp54 = add i64 %tmp55, %tmp_486, !dbg !501    ; [#uses=1 type=i64] [debug line = 136:8]
  %t0_12 = add i64 %tmp54, %tmp53, !dbg !501      ; [#uses=2 type=i64] [debug line = 136:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_12}, i64 0, metadata !492), !dbg !501 ; [debug line = 136:8] [debug variable = t0]
  %tmp_489 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_473, i32 28, i32 63), !dbg !502 ; [#uses=1 type=i36] [debug line = 136:0]
  %tmp_539 = trunc i64 %tmp_473 to i28            ; [#uses=1 type=i28]
  %tmp_490 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_539, i36 %tmp_489), !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_491 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_473, i32 34, i32 63), !dbg !502 ; [#uses=1 type=i30] [debug line = 136:0]
  %tmp_542 = trunc i64 %tmp_473 to i34            ; [#uses=1 type=i34]
  %tmp_493 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_542, i30 %tmp_491), !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_494 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_473, i32 39, i32 63), !dbg !502 ; [#uses=1 type=i25] [debug line = 136:0]
  %tmp_545 = trunc i64 %tmp_473 to i39            ; [#uses=1 type=i39]
  %tmp_496 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_545, i25 %tmp_494), !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp56 = xor i64 %tmp_496, %tmp_493, !dbg !502  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_497 = xor i64 %tmp56, %tmp_490, !dbg !502  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_499 = or i64 %tmp_473, %tmp_442, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_500 = and i64 %tmp_499, %tmp_411, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_501 = and i64 %tmp_473, %tmp_442, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_502 = or i64 %tmp_500, %tmp_501, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_503 = add i64 %tmp_380, %t0_12, !dbg !502  ; [#uses=9 type=i64] [debug line = 136:0]
  store i64 %tmp_503, i64* %S_addr_12, align 16, !dbg !502 ; [debug line = 136:0]
  %tmp57 = add i64 %tmp_497, %t0_12, !dbg !502    ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_504 = add i64 %tmp57, %tmp_502, !dbg !502  ; [#uses=11 type=i64] [debug line = 136:0]
  store i64 %tmp_504, i64* %S_addr_16, align 16, !dbg !502 ; [debug line = 136:0]
  %tmp_505 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_503, i32 14, i32 63), !dbg !503 ; [#uses=1 type=i50] [debug line = 137:8]
  %tmp_554 = trunc i64 %tmp_503 to i14            ; [#uses=1 type=i14]
  %tmp_506 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_554, i50 %tmp_505), !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_507 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_503, i32 18, i32 63), !dbg !503 ; [#uses=1 type=i46] [debug line = 137:8]
  %tmp_557 = trunc i64 %tmp_503 to i18            ; [#uses=1 type=i18]
  %tmp_509 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_557, i46 %tmp_507), !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_510 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_503, i32 41, i32 63), !dbg !503 ; [#uses=1 type=i23] [debug line = 137:8]
  %tmp_560 = trunc i64 %tmp_503 to i41            ; [#uses=1 type=i41]
  %tmp_512 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_560, i23 %tmp_510), !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp58 = xor i64 %tmp_512, %tmp_509, !dbg !503  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_513 = xor i64 %tmp58, %tmp_506, !dbg !503  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_515 = xor i64 %tmp_472, %tmp_441, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_516 = and i64 %tmp_503, %tmp_515, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_517 = xor i64 %tmp_516, %tmp_441, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_518 = or i7 %i_3, 6, !dbg !503             ; [#uses=1 type=i7] [debug line = 137:8]
  %tmp_519 = zext i7 %tmp_518 to i64, !dbg !503   ; [#uses=2 type=i64] [debug line = 137:8]
  %K_addr_13 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_519, !dbg !503 ; [#uses=1 type=i64*] [debug line = 137:8]
  %K_load_13 = load i64* %K_addr_13, align 16, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %W_addr_25 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_519, !dbg !503 ; [#uses=1 type=i64*] [debug line = 137:8]
  %W_load_21 = load i64* %W_addr_25, align 16, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp61 = add i64 %K_load_13, %W_load_21, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp63 = add i64 %tmp_513, %tmp_410, !dbg !503  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp62 = add i64 %tmp63, %tmp_517, !dbg !503    ; [#uses=1 type=i64] [debug line = 137:8]
  %t0_13 = add i64 %tmp62, %tmp61, !dbg !503      ; [#uses=2 type=i64] [debug line = 137:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_13}, i64 0, metadata !492), !dbg !503 ; [debug line = 137:8] [debug variable = t0]
  %tmp_520 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_504, i32 28, i32 63), !dbg !504 ; [#uses=1 type=i36] [debug line = 137:0]
  %tmp_571 = trunc i64 %tmp_504 to i28            ; [#uses=1 type=i28]
  %tmp_521 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_571, i36 %tmp_520), !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_522 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_504, i32 34, i32 63), !dbg !504 ; [#uses=1 type=i30] [debug line = 137:0]
  %tmp_572 = trunc i64 %tmp_504 to i34            ; [#uses=1 type=i34]
  %tmp_524 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_572, i30 %tmp_522), !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_525 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_504, i32 39, i32 63), !dbg !504 ; [#uses=1 type=i25] [debug line = 137:0]
  %tmp_573 = trunc i64 %tmp_504 to i39            ; [#uses=1 type=i39]
  %tmp_527 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_573, i25 %tmp_525), !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp64 = xor i64 %tmp_527, %tmp_524, !dbg !504  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_528 = xor i64 %tmp64, %tmp_521, !dbg !504  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_530 = or i64 %tmp_504, %tmp_473, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_531 = and i64 %tmp_530, %tmp_442, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_532 = and i64 %tmp_504, %tmp_473, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_533 = or i64 %tmp_531, %tmp_532, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_534 = add i64 %tmp_411, %t0_13, !dbg !504  ; [#uses=8 type=i64] [debug line = 137:0]
  store i64 %tmp_534, i64* %S_addr_13, align 8, !dbg !504 ; [debug line = 137:0]
  %tmp65 = add i64 %tmp_528, %t0_13, !dbg !504    ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_535 = add i64 %tmp65, %tmp_533, !dbg !504  ; [#uses=9 type=i64] [debug line = 137:0]
  store i64 %tmp_535, i64* %S_addr_15, align 8, !dbg !504 ; [debug line = 137:0]
  %tmp_536 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_534, i32 14, i32 63), !dbg !505 ; [#uses=1 type=i50] [debug line = 138:8]
  %tmp_574 = trunc i64 %tmp_534 to i14            ; [#uses=1 type=i14]
  %tmp_537 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_574, i50 %tmp_536), !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_538 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_534, i32 18, i32 63), !dbg !505 ; [#uses=1 type=i46] [debug line = 138:8]
  %tmp_575 = trunc i64 %tmp_534 to i18            ; [#uses=1 type=i18]
  %tmp_540 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_575, i46 %tmp_538), !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_541 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_534, i32 41, i32 63), !dbg !505 ; [#uses=1 type=i23] [debug line = 138:8]
  %tmp_576 = trunc i64 %tmp_534 to i41            ; [#uses=1 type=i41]
  %tmp_543 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_576, i23 %tmp_541), !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp66 = xor i64 %tmp_543, %tmp_540, !dbg !505  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_544 = xor i64 %tmp66, %tmp_537, !dbg !505  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_546 = xor i64 %tmp_503, %tmp_472, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_547 = and i64 %tmp_534, %tmp_546, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_548 = xor i64 %tmp_547, %tmp_472, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_549 = or i7 %i_3, 7, !dbg !505             ; [#uses=1 type=i7] [debug line = 138:8]
  %tmp_550 = zext i7 %tmp_549 to i64, !dbg !505   ; [#uses=2 type=i64] [debug line = 138:8]
  %K_addr_14 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_550, !dbg !505 ; [#uses=1 type=i64*] [debug line = 138:8]
  %K_load_14 = load i64* %K_addr_14, align 8, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %W_addr_26 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_550, !dbg !505 ; [#uses=1 type=i64*] [debug line = 138:8]
  %W_load_22 = load i64* %W_addr_26, align 8, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp67 = add i64 %K_load_14, %W_load_22, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp68 = add i64 %tmp_544, %tmp_441, !dbg !505  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp69 = add i64 %tmp68, %tmp_548, !dbg !505    ; [#uses=1 type=i64] [debug line = 138:8]
  %t0_14 = add i64 %tmp69, %tmp67, !dbg !505      ; [#uses=2 type=i64] [debug line = 138:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_14}, i64 0, metadata !492), !dbg !505 ; [debug line = 138:8] [debug variable = t0]
  %tmp_551 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_535, i32 28, i32 63), !dbg !506 ; [#uses=1 type=i36] [debug line = 138:0]
  %tmp_577 = trunc i64 %tmp_535 to i28            ; [#uses=1 type=i28]
  %tmp_552 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_577, i36 %tmp_551), !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_553 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_535, i32 34, i32 63), !dbg !506 ; [#uses=1 type=i30] [debug line = 138:0]
  %tmp_578 = trunc i64 %tmp_535 to i34            ; [#uses=1 type=i34]
  %tmp_555 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_578, i30 %tmp_553), !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_556 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_535, i32 39, i32 63), !dbg !506 ; [#uses=1 type=i25] [debug line = 138:0]
  %tmp_579 = trunc i64 %tmp_535 to i39            ; [#uses=1 type=i39]
  %tmp_558 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_579, i25 %tmp_556), !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp70 = xor i64 %tmp_558, %tmp_555, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_559 = xor i64 %tmp70, %tmp_552, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_561 = or i64 %tmp_535, %tmp_504, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_562 = and i64 %tmp_561, %tmp_473, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_563 = and i64 %tmp_535, %tmp_504, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_564 = or i64 %tmp_562, %tmp_563, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_565 = add i64 %tmp_442, %t0_14, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp_565, i64* %S_addr_11, align 16, !dbg !506 ; [debug line = 138:0]
  %tmp71 = add i64 %tmp_559, %t0_14, !dbg !506    ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_566 = add i64 %tmp71, %tmp_564, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp_566, i64* %S_addr_14, align 16, !dbg !506 ; [debug line = 138:0]
  %i_13 = add i7 8, %i_3, !dbg !507               ; [#uses=1 type=i7] [debug line = 130:25]
  call void @llvm.dbg.value(metadata !{i7 %i_13}, i64 0, metadata !475), !dbg !507 ; [debug line = 130:25] [debug variable = i]
  br label %.preheader11, !dbg !507               ; [debug line = 130:25]

.preheader:                                       ; preds = %6, %.preheader.preheader
  %i_4 = phi i4 [ %i_14, %6 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i4]
  %exitcond = icmp eq i4 %i_4, -8, !dbg !490      ; [#uses=1 type=i1] [debug line = 146:9]
  %empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_14 = add i4 %i_4, 1, !dbg !508               ; [#uses=1 type=i4] [debug line = 146:23]
  br i1 %exitcond, label %7, label %6, !dbg !490  ; [debug line = 146:9]

; <label>:6                                       ; preds = %.preheader
  %tmp_567 = zext i4 %i_4 to i64, !dbg !509       ; [#uses=2 type=i64] [debug line = 147:9]
  %md_state_addr_9 = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp_567, !dbg !509 ; [#uses=2 type=i64*] [debug line = 147:9]
  %md_state_load_2 = load i64* %md_state_addr_9, align 8, !dbg !509 ; [#uses=1 type=i64] [debug line = 147:9]
  %S_addr_18 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp_567, !dbg !509 ; [#uses=1 type=i64*] [debug line = 147:9]
  %S_load_16 = load i64* %S_addr_18, align 8, !dbg !509 ; [#uses=1 type=i64] [debug line = 147:9]
  %tmp_568 = add i64 %md_state_load_2, %S_load_16, !dbg !509 ; [#uses=1 type=i64] [debug line = 147:9]
  store i64 %tmp_568, i64* %md_state_addr_9, align 8, !dbg !509 ; [debug line = 147:9]
  call void @llvm.dbg.value(metadata !{i4 %i_14}, i64 0, metadata !475), !dbg !508 ; [debug line = 146:23] [debug variable = i]
  br label %.preheader, !dbg !508                 ; [debug line = 146:23]

; <label>:7                                       ; preds = %.preheader
  ret void
}

; [#uses=5]
define internal fastcc void @sha512_compress_128([8 x i64]* nocapture %md_state, [128 x i8]* nocapture %buf) {
  %S = alloca [8 x i64], align 16                 ; [#uses=10 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=14 type=[80 x i64]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md_state}, i64 0, metadata !452), !dbg !455 ; [debug line = 96:48] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %buf}, i64 0, metadata !511), !dbg !512 ; [debug line = 96:66] [debug variable = buf]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str8, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !456 ; [debug line = 98:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str210, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !458 ; [debug line = 99:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str311, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !459 ; [debug line = 100:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str412, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !460 ; [debug line = 101:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str513, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !461 ; [debug line = 102:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str614, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !462 ; [debug line = 103:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str715, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind, !dbg !463 ; [debug line = 104:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !464), !dbg !465 ; [debug line = 105:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !466), !dbg !467 ; [debug line = 105:17] [debug variable = W]
  br label %1, !dbg !468                          ; [debug line = 109:10]

; <label>:1                                       ; preds = %2, %0
  %i = phi i4 [ 0, %0 ], [ %i_15, %2 ]            ; [#uses=3 type=i4]
  %exitcond4 = icmp eq i4 %i, -8, !dbg !468       ; [#uses=1 type=i1] [debug line = 109:10]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_15 = add i4 %i, 1, !dbg !470                 ; [#uses=1 type=i4] [debug line = 109:24]
  br i1 %exitcond4, label %.preheader13.preheader, label %2, !dbg !468 ; [debug line = 109:10]

.preheader13.preheader:                           ; preds = %1
  br label %.preheader13, !dbg !471               ; [debug line = 114:10]

; <label>:2                                       ; preds = %1
  %tmp = zext i4 %i to i64, !dbg !473             ; [#uses=2 type=i64] [debug line = 110:9]
  %md_state_addr = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp, !dbg !473 ; [#uses=1 type=i64*] [debug line = 110:9]
  %md_state_load = load i64* %md_state_addr, align 8, !dbg !473 ; [#uses=1 type=i64] [debug line = 110:9]
  %S_addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp, !dbg !473 ; [#uses=1 type=i64*] [debug line = 110:9]
  store i64 %md_state_load, i64* %S_addr, align 8, !dbg !473 ; [debug line = 110:9]
  call void @llvm.dbg.value(metadata !{i4 %i_15}, i64 0, metadata !475), !dbg !470 ; [debug line = 109:24] [debug variable = i]
  br label %1, !dbg !470                          ; [debug line = 109:24]

.preheader13:                                     ; preds = %3, %.preheader13.preheader
  %i_1 = phi i5 [ %i_16, %3 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i5]
  %exitcond9 = icmp eq i5 %i_1, -16, !dbg !471    ; [#uses=1 type=i1] [debug line = 114:10]
  %empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) ; [#uses=0 type=i32]
  %i_16 = add i5 %i_1, 1, !dbg !476               ; [#uses=1 type=i5] [debug line = 114:25]
  br i1 %exitcond9, label %.preheader12.preheader, label %3, !dbg !471 ; [debug line = 114:10]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !477               ; [debug line = 119:10]

; <label>:3                                       ; preds = %.preheader13
  %tmp_580 = trunc i5 %i_1 to i4                  ; [#uses=1 type=i4]
  %tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_580, i3 0), !dbg !479 ; [#uses=8 type=i7] [debug line = 115:11]
  %tmp_411 = zext i7 %tmp_s to i64, !dbg !479     ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr = getelementptr [128 x i8]* %buf, i64 0, i64 %tmp_411, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load = load i8* %buf_addr, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum1 = or i7 %tmp_s, 1, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum1_cast = zext i7 %p_sum1 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_15 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum1_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_8 = load i8* %buf_addr_15, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum2 = or i7 %tmp_s, 2, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum2_cast = zext i7 %p_sum2 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_16 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum2_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_9 = load i8* %buf_addr_16, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum3 = or i7 %tmp_s, 3, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum3_cast = zext i7 %p_sum3 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_17 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum3_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_10 = load i8* %buf_addr_17, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum4 = or i7 %tmp_s, 4, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum4_cast = zext i7 %p_sum4 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_18 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum4_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_11 = load i8* %buf_addr_18, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum5 = or i7 %tmp_s, 5, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum5_cast = zext i7 %p_sum5 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_19 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum5_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_12 = load i8* %buf_addr_19, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum6 = or i7 %tmp_s, 6, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum6_cast = zext i7 %p_sum6 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_20 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum6_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_13 = load i8* %buf_addr_20, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %p_sum7 = or i7 %tmp_s, 7, !dbg !479            ; [#uses=1 type=i7] [debug line = 115:11]
  %p_sum7_cast = zext i7 %p_sum7 to i64, !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %buf_addr_21 = getelementptr [128 x i8]* %buf, i64 0, i64 %p_sum7_cast, !dbg !479 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf_load_14 = load i8* %buf_addr_21, align 1, !dbg !479 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp_433 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i8.i8.i8.i8.i8.i8.i8(i8 %buf_load, i8 %buf_load_8, i8 %buf_load_9, i8 %buf_load_10, i8 %buf_load_11, i8 %buf_load_12, i8 %buf_load_13, i8 %buf_load_14), !dbg !479 ; [#uses=1 type=i64] [debug line = 115:11]
  %tmp_434 = zext i5 %i_1 to i64, !dbg !479       ; [#uses=1 type=i64] [debug line = 115:11]
  %W_addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_434, !dbg !479 ; [#uses=1 type=i64*] [debug line = 115:11]
  store i64 %tmp_433, i64* %W_addr, align 8, !dbg !479 ; [debug line = 115:11]
  call void @llvm.dbg.value(metadata !{i5 %i_16}, i64 0, metadata !475), !dbg !476 ; [debug line = 114:25] [debug variable = i]
  br label %.preheader13, !dbg !476               ; [debug line = 114:25]

.preheader12:                                     ; preds = %4, %.preheader12.preheader
  %i_2 = phi i7 [ %i_17, %4 ], [ 16, %.preheader12.preheader ] ; [#uses=7 type=i7]
  %exitcond8 = icmp eq i7 %i_2, -48, !dbg !477    ; [#uses=1 type=i1] [debug line = 119:10]
  %empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader11.preheader, label %4, !dbg !477 ; [debug line = 119:10]

.preheader11.preheader:                           ; preds = %.preheader12
  %S_addr_10 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_11 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_12 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_13 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5, !dbg !482 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S_addr_14 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S_addr_15 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S_addr_16 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S_addr_17 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3, !dbg !485 ; [#uses=2 type=i64*] [debug line = 131:0]
  br label %.preheader11, !dbg !486               ; [debug line = 130:10]

; <label>:4                                       ; preds = %.preheader12
  %tmp_435 = add i7 -2, %i_2, !dbg !487           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_436 = zext i7 %tmp_435 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_14 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_436, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load = load i64* %W_addr_14, align 8, !dbg !487 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp_437 = call i45 @_ssdm_op_PartSelect.i45.i64.i32.i32(i64 %W_load, i32 19, i32 63), !dbg !487 ; [#uses=1 type=i45] [debug line = 120:9]
  %tmp_582 = trunc i64 %W_load to i19             ; [#uses=1 type=i19]
  %tmp_439 = call i64 @_ssdm_op_BitConcatenate.i64.i19.i45(i19 %tmp_582, i45 %tmp_437), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_440 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %W_load, i32 61, i32 63), !dbg !487 ; [#uses=1 type=i3] [debug line = 120:9]
  %tmp_590 = trunc i64 %W_load to i61             ; [#uses=1 type=i61]
  %tmp_442 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 %tmp_590, i3 %tmp_440), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_443 = call i58 @_ssdm_op_PartSelect.i58.i64.i32.i32(i64 %W_load, i32 6, i32 63), !dbg !487 ; [#uses=1 type=i58] [debug line = 120:9]
  %tmp_574 = zext i58 %tmp_443 to i64, !dbg !487  ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp6 = xor i64 %tmp_574, %tmp_442, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_445 = xor i64 %tmp6, %tmp_439, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_446 = add i7 -7, %i_2, !dbg !487           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_447 = zext i7 %tmp_446 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_15 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_447, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load_12 = load i64* %W_addr_15, align 8, !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_448 = add i7 -15, %i_2, !dbg !487          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_449 = zext i7 %tmp_448 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_16 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_449, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load_13 = load i64* %W_addr_16, align 8, !dbg !487 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp_450 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %W_load_13, i32 1, i32 63), !dbg !487 ; [#uses=1 type=i63] [debug line = 120:9]
  %tmp_591 = trunc i64 %W_load_13 to i1           ; [#uses=1 type=i1]
  %tmp_452 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1 %tmp_591, i63 %tmp_450), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_453 = call i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64 %W_load_13, i32 8, i32 63), !dbg !487 ; [#uses=1 type=i56] [debug line = 120:9]
  %tmp_593 = trunc i64 %W_load_13 to i8           ; [#uses=1 type=i8]
  %tmp_455 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8 %tmp_593, i56 %tmp_453), !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_456 = call i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64 %W_load_13, i32 7, i32 63), !dbg !487 ; [#uses=1 type=i57] [debug line = 120:9]
  %tmp_577 = zext i57 %tmp_456 to i64, !dbg !487  ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp7 = xor i64 %tmp_577, %tmp_455, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_458 = xor i64 %tmp7, %tmp_452, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_459 = add i7 -16, %i_2, !dbg !487          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp_460 = zext i7 %tmp_459 to i64, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_17 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_460, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W_load_14 = load i64* %W_addr_17, align 8, !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp8 = add i64 %W_load_12, %W_load_14, !dbg !487 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp9 = add i64 %tmp_445, %tmp_458, !dbg !487   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_463 = add i64 %tmp9, %tmp8, !dbg !487      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp_464 = zext i7 %i_2 to i64, !dbg !487       ; [#uses=1 type=i64] [debug line = 120:9]
  %W_addr_18 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_464, !dbg !487 ; [#uses=1 type=i64*] [debug line = 120:9]
  store i64 %tmp_463, i64* %W_addr_18, align 8, !dbg !487 ; [debug line = 120:9]
  %i_17 = add i7 1, %i_2, !dbg !489               ; [#uses=1 type=i7] [debug line = 119:26]
  call void @llvm.dbg.value(metadata !{i7 %i_17}, i64 0, metadata !475), !dbg !489 ; [debug line = 119:26] [debug variable = i]
  br label %.preheader12, !dbg !489               ; [debug line = 119:26]

.preheader11:                                     ; preds = %5, %.preheader11.preheader
  %i_3 = phi i7 [ %i_18, %5 ], [ 0, %.preheader11.preheader ] ; [#uses=10 type=i7]
  %tmp_465 = icmp ult i7 %i_3, -48, !dbg !486     ; [#uses=1 type=i1] [debug line = 130:10]
  %empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %tmp_465, label %5, label %.preheader.preheader, !dbg !486 ; [debug line = 130:10]

.preheader.preheader:                             ; preds = %.preheader11
  br label %.preheader, !dbg !490                 ; [debug line = 146:9]

; <label>:5                                       ; preds = %.preheader11
  %S_load = load i64* %S_addr_10, align 8, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %S_load_9 = load i64* %S_addr_11, align 16, !dbg !482 ; [#uses=11 type=i64] [debug line = 131:8]
  %tmp_466 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %S_load_9, i32 14, i32 63), !dbg !482 ; [#uses=1 type=i50] [debug line = 131:8]
  %tmp_596 = trunc i64 %S_load_9 to i14           ; [#uses=1 type=i14]
  %tmp_468 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_596, i50 %tmp_466), !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_469 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %S_load_9, i32 18, i32 63), !dbg !482 ; [#uses=1 type=i46] [debug line = 131:8]
  %tmp_599 = trunc i64 %S_load_9 to i18           ; [#uses=1 type=i18]
  %tmp_471 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_599, i46 %tmp_469), !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_472 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %S_load_9, i32 41, i32 63), !dbg !482 ; [#uses=1 type=i23] [debug line = 131:8]
  %tmp_601 = trunc i64 %S_load_9 to i41           ; [#uses=1 type=i41]
  %tmp_474 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_601, i23 %tmp_472), !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp10 = xor i64 %tmp_474, %tmp_471, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_476 = xor i64 %tmp10, %tmp_468, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %S_load_10 = load i64* %S_addr_12, align 16, !dbg !482 ; [#uses=3 type=i64] [debug line = 131:8]
  %S_load_11 = load i64* %S_addr_13, align 8, !dbg !482 ; [#uses=4 type=i64] [debug line = 131:8]
  %tmp_477 = xor i64 %S_load_11, %S_load_10, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_478 = and i64 %S_load_9, %tmp_477, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_479 = xor i64 %S_load_10, %tmp_478, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp_480 = zext i7 %i_3 to i64, !dbg !482       ; [#uses=2 type=i64] [debug line = 131:8]
  %K_addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_480, !dbg !482 ; [#uses=1 type=i64*] [debug line = 131:8]
  %K_load = load i64* %K_addr, align 16, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %W_addr_19 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_480, !dbg !482 ; [#uses=1 type=i64*] [debug line = 131:8]
  %W_load_15 = load i64* %W_addr_19, align 16, !dbg !482 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp13 = add i64 %K_load, %S_load, !dbg !482    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp15 = add i64 %tmp_476, %tmp_479, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp14 = add i64 %tmp15, %W_load_15, !dbg !482  ; [#uses=1 type=i64] [debug line = 131:8]
  %t0 = add i64 %tmp14, %tmp13, !dbg !482         ; [#uses=2 type=i64] [debug line = 131:8]
  call void @llvm.dbg.value(metadata !{i64 %t0}, i64 0, metadata !492), !dbg !482 ; [debug line = 131:8] [debug variable = t0]
  %S_load_12 = load i64* %S_addr_14, align 16, !dbg !485 ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp_484 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %S_load_12, i32 28, i32 63), !dbg !485 ; [#uses=1 type=i36] [debug line = 131:0]
  %tmp_610 = trunc i64 %S_load_12 to i28          ; [#uses=1 type=i28]
  %tmp_486 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_610, i36 %tmp_484), !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_487 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %S_load_12, i32 34, i32 63), !dbg !485 ; [#uses=1 type=i30] [debug line = 131:0]
  %tmp_613 = trunc i64 %S_load_12 to i34          ; [#uses=1 type=i34]
  %tmp_489 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_613, i30 %tmp_487), !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_490 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %S_load_12, i32 39, i32 63), !dbg !485 ; [#uses=1 type=i25] [debug line = 131:0]
  %tmp_616 = trunc i64 %S_load_12 to i39          ; [#uses=1 type=i39]
  %tmp_492 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_616, i25 %tmp_490), !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp16 = xor i64 %tmp_492, %tmp_489, !dbg !485  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_494 = xor i64 %tmp16, %tmp_486, !dbg !485  ; [#uses=1 type=i64] [debug line = 131:0]
  %S_load_13 = load i64* %S_addr_15, align 8, !dbg !485 ; [#uses=4 type=i64] [debug line = 131:0]
  %tmp_495 = or i64 %S_load_13, %S_load_12, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %S_load_14 = load i64* %S_addr_16, align 16, !dbg !485 ; [#uses=2 type=i64] [debug line = 131:0]
  %tmp_496 = and i64 %S_load_14, %tmp_495, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_497 = and i64 %S_load_13, %S_load_12, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_498 = or i64 %tmp_496, %tmp_497, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %S_load_15 = load i64* %S_addr_17, align 8, !dbg !485 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_499 = add i64 %S_load_15, %t0, !dbg !485   ; [#uses=11 type=i64] [debug line = 131:0]
  %tmp17 = add i64 %tmp_494, %tmp_498, !dbg !485  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp_500 = add i64 %tmp17, %t0, !dbg !485       ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp_501 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_499, i32 14, i32 63), !dbg !493 ; [#uses=1 type=i50] [debug line = 132:8]
  %tmp_618 = trunc i64 %tmp_499 to i14            ; [#uses=1 type=i14]
  %tmp_503 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_618, i50 %tmp_501), !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_504 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_499, i32 18, i32 63), !dbg !493 ; [#uses=1 type=i46] [debug line = 132:8]
  %tmp_625 = trunc i64 %tmp_499 to i18            ; [#uses=1 type=i18]
  %tmp_506 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_625, i46 %tmp_504), !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_507 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_499, i32 41, i32 63), !dbg !493 ; [#uses=1 type=i23] [debug line = 132:8]
  %tmp_626 = trunc i64 %tmp_499 to i41            ; [#uses=1 type=i41]
  %tmp_509 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_626, i23 %tmp_507), !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp18 = xor i64 %tmp_509, %tmp_506, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_511 = xor i64 %tmp18, %tmp_503, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_512 = xor i64 %S_load_11, %S_load_9, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_513 = and i64 %tmp_499, %tmp_512, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_514 = xor i64 %S_load_11, %tmp_513, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp_515 = or i7 %i_3, 1, !dbg !493             ; [#uses=1 type=i7] [debug line = 132:8]
  %tmp_516 = zext i7 %tmp_515 to i64, !dbg !493   ; [#uses=2 type=i64] [debug line = 132:8]
  %K_addr_8 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_516, !dbg !493 ; [#uses=1 type=i64*] [debug line = 132:8]
  %K_load_8 = load i64* %K_addr_8, align 8, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %W_addr_20 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_516, !dbg !493 ; [#uses=1 type=i64*] [debug line = 132:8]
  %W_load_16 = load i64* %W_addr_20, align 8, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp21 = add i64 %K_load_8, %S_load_10, !dbg !493 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp23 = add i64 %tmp_514, %tmp_511, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp22 = add i64 %tmp23, %W_load_16, !dbg !493  ; [#uses=1 type=i64] [debug line = 132:8]
  %t0_8 = add i64 %tmp22, %tmp21, !dbg !493       ; [#uses=2 type=i64] [debug line = 132:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_8}, i64 0, metadata !492), !dbg !493 ; [debug line = 132:8] [debug variable = t0]
  %tmp_520 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_500, i32 28, i32 63), !dbg !494 ; [#uses=1 type=i36] [debug line = 132:0]
  %tmp_627 = trunc i64 %tmp_500 to i28            ; [#uses=1 type=i28]
  %tmp_522 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_627, i36 %tmp_520), !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_523 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_500, i32 34, i32 63), !dbg !494 ; [#uses=1 type=i30] [debug line = 132:0]
  %tmp_629 = trunc i64 %tmp_500 to i34            ; [#uses=1 type=i34]
  %tmp_525 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_629, i30 %tmp_523), !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_526 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_500, i32 39, i32 63), !dbg !494 ; [#uses=1 type=i25] [debug line = 132:0]
  %tmp_632 = trunc i64 %tmp_500 to i39            ; [#uses=1 type=i39]
  %tmp_528 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_632, i25 %tmp_526), !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp24 = xor i64 %tmp_528, %tmp_525, !dbg !494  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_530 = xor i64 %tmp24, %tmp_522, !dbg !494  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_531 = or i64 %S_load_12, %tmp_500, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_532 = and i64 %S_load_13, %tmp_531, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_533 = and i64 %S_load_12, %tmp_500, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_534 = or i64 %tmp_532, %tmp_533, !dbg !494 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_535 = add i64 %S_load_14, %t0_8, !dbg !494 ; [#uses=11 type=i64] [debug line = 132:0]
  %tmp25 = add i64 %tmp_530, %t0_8, !dbg !494     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp_536 = add i64 %tmp25, %tmp_534, !dbg !494  ; [#uses=12 type=i64] [debug line = 132:0]
  %tmp_537 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_535, i32 14, i32 63), !dbg !495 ; [#uses=1 type=i50] [debug line = 133:8]
  %tmp_635 = trunc i64 %tmp_535 to i14            ; [#uses=1 type=i14]
  %tmp_539 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_635, i50 %tmp_537), !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_540 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_535, i32 18, i32 63), !dbg !495 ; [#uses=1 type=i46] [debug line = 133:8]
  %tmp_645 = trunc i64 %tmp_535 to i18            ; [#uses=1 type=i18]
  %tmp_542 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_645, i46 %tmp_540), !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_543 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_535, i32 41, i32 63), !dbg !495 ; [#uses=1 type=i23] [debug line = 133:8]
  %tmp_648 = trunc i64 %tmp_535 to i41            ; [#uses=1 type=i41]
  %tmp_545 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_648, i23 %tmp_543), !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp26 = xor i64 %tmp_545, %tmp_542, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_547 = xor i64 %tmp26, %tmp_539, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_548 = xor i64 %S_load_9, %tmp_499, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_549 = and i64 %tmp_535, %tmp_548, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_550 = xor i64 %S_load_9, %tmp_549, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp_551 = or i7 %i_3, 2, !dbg !495             ; [#uses=1 type=i7] [debug line = 133:8]
  %tmp_552 = zext i7 %tmp_551 to i64, !dbg !495   ; [#uses=2 type=i64] [debug line = 133:8]
  %K_addr_9 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_552, !dbg !495 ; [#uses=1 type=i64*] [debug line = 133:8]
  %K_load_9 = load i64* %K_addr_9, align 16, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %W_addr_21 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_552, !dbg !495 ; [#uses=1 type=i64*] [debug line = 133:8]
  %W_load_17 = load i64* %W_addr_21, align 16, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp29 = add i64 %K_load_9, %S_load_11, !dbg !495 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp31 = add i64 %tmp_550, %tmp_547, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp30 = add i64 %tmp31, %W_load_17, !dbg !495  ; [#uses=1 type=i64] [debug line = 133:8]
  %t0_9 = add i64 %tmp30, %tmp29, !dbg !495       ; [#uses=2 type=i64] [debug line = 133:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_9}, i64 0, metadata !492), !dbg !495 ; [debug line = 133:8] [debug variable = t0]
  %tmp_556 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_536, i32 28, i32 63), !dbg !496 ; [#uses=1 type=i36] [debug line = 133:0]
  %tmp_651 = trunc i64 %tmp_536 to i28            ; [#uses=1 type=i28]
  %tmp_558 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_651, i36 %tmp_556), !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_559 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_536, i32 34, i32 63), !dbg !496 ; [#uses=1 type=i30] [debug line = 133:0]
  %tmp_660 = trunc i64 %tmp_536 to i34            ; [#uses=1 type=i34]
  %tmp_561 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_660, i30 %tmp_559), !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_562 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_536, i32 39, i32 63), !dbg !496 ; [#uses=1 type=i25] [debug line = 133:0]
  %tmp_663 = trunc i64 %tmp_536 to i39            ; [#uses=1 type=i39]
  %tmp_564 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_663, i25 %tmp_562), !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp32 = xor i64 %tmp_564, %tmp_561, !dbg !496  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_566 = xor i64 %tmp32, %tmp_558, !dbg !496  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_567 = or i64 %tmp_536, %tmp_500, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_568 = and i64 %S_load_12, %tmp_567, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_569 = and i64 %tmp_536, %tmp_500, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_570 = or i64 %tmp_568, %tmp_569, !dbg !496 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_571 = add i64 %S_load_13, %t0_9, !dbg !496 ; [#uses=11 type=i64] [debug line = 133:0]
  %tmp33 = add i64 %tmp_566, %t0_9, !dbg !496     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp_572 = add i64 %tmp33, %tmp_570, !dbg !496  ; [#uses=12 type=i64] [debug line = 133:0]
  %tmp_573 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_571, i32 14, i32 63), !dbg !497 ; [#uses=1 type=i50] [debug line = 134:8]
  %tmp_666 = trunc i64 %tmp_571 to i14            ; [#uses=1 type=i14]
  %tmp_575 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_666, i50 %tmp_573), !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_576 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_571, i32 18, i32 63), !dbg !497 ; [#uses=1 type=i46] [debug line = 134:8]
  %tmp_676 = trunc i64 %tmp_571 to i18            ; [#uses=1 type=i18]
  %tmp_578 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_676, i46 %tmp_576), !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_579 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_571, i32 41, i32 63), !dbg !497 ; [#uses=1 type=i23] [debug line = 134:8]
  %tmp_679 = trunc i64 %tmp_571 to i41            ; [#uses=1 type=i41]
  %tmp_581 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_679, i23 %tmp_579), !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp34 = xor i64 %tmp_581, %tmp_578, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_583 = xor i64 %tmp34, %tmp_575, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_584 = xor i64 %tmp_535, %tmp_499, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_585 = and i64 %tmp_571, %tmp_584, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_586 = xor i64 %tmp_585, %tmp_499, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp_587 = or i7 %i_3, 3, !dbg !497             ; [#uses=1 type=i7] [debug line = 134:8]
  %tmp_588 = zext i7 %tmp_587 to i64, !dbg !497   ; [#uses=2 type=i64] [debug line = 134:8]
  %K_addr_10 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_588, !dbg !497 ; [#uses=1 type=i64*] [debug line = 134:8]
  %K_load_10 = load i64* %K_addr_10, align 8, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %W_addr_22 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_588, !dbg !497 ; [#uses=1 type=i64*] [debug line = 134:8]
  %W_load_18 = load i64* %W_addr_22, align 8, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp37 = add i64 %K_load_10, %S_load_9, !dbg !497 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp39 = add i64 %tmp_586, %tmp_583, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp38 = add i64 %tmp39, %W_load_18, !dbg !497  ; [#uses=1 type=i64] [debug line = 134:8]
  %t0_15 = add i64 %tmp38, %tmp37, !dbg !497      ; [#uses=2 type=i64] [debug line = 134:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_15}, i64 0, metadata !492), !dbg !497 ; [debug line = 134:8] [debug variable = t0]
  %tmp_589 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_572, i32 28, i32 63), !dbg !498 ; [#uses=1 type=i36] [debug line = 134:0]
  %tmp_682 = trunc i64 %tmp_572 to i28            ; [#uses=1 type=i28]
  %tmp_592 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_682, i36 %tmp_589), !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_594 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_572, i32 34, i32 63), !dbg !498 ; [#uses=1 type=i30] [debug line = 134:0]
  %tmp_691 = trunc i64 %tmp_572 to i34            ; [#uses=1 type=i34]
  %tmp_595 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_691, i30 %tmp_594), !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_597 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_572, i32 39, i32 63), !dbg !498 ; [#uses=1 type=i25] [debug line = 134:0]
  %tmp_694 = trunc i64 %tmp_572 to i39            ; [#uses=1 type=i39]
  %tmp_598 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_694, i25 %tmp_597), !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp40 = xor i64 %tmp_598, %tmp_595, !dbg !498  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_600 = xor i64 %tmp40, %tmp_592, !dbg !498  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_602 = or i64 %tmp_572, %tmp_536, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_603 = and i64 %tmp_602, %tmp_500, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_604 = and i64 %tmp_572, %tmp_536, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_605 = or i64 %tmp_603, %tmp_604, !dbg !498 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_606 = add i64 %S_load_12, %t0_15, !dbg !498 ; [#uses=11 type=i64] [debug line = 134:0]
  %tmp41 = add i64 %tmp_600, %t0_15, !dbg !498    ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp_607 = add i64 %tmp41, %tmp_605, !dbg !498  ; [#uses=12 type=i64] [debug line = 134:0]
  %tmp_608 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_606, i32 14, i32 63), !dbg !499 ; [#uses=1 type=i50] [debug line = 135:8]
  %tmp_697 = trunc i64 %tmp_606 to i14            ; [#uses=1 type=i14]
  %tmp_609 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_697, i50 %tmp_608), !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_611 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_606, i32 18, i32 63), !dbg !499 ; [#uses=1 type=i46] [debug line = 135:8]
  %tmp_707 = trunc i64 %tmp_606 to i18            ; [#uses=1 type=i18]
  %tmp_612 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_707, i46 %tmp_611), !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_614 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_606, i32 41, i32 63), !dbg !499 ; [#uses=1 type=i23] [debug line = 135:8]
  %tmp_710 = trunc i64 %tmp_606 to i41            ; [#uses=1 type=i41]
  %tmp_615 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_710, i23 %tmp_614), !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp42 = xor i64 %tmp_615, %tmp_612, !dbg !499  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_617 = xor i64 %tmp42, %tmp_609, !dbg !499  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_619 = xor i64 %tmp_571, %tmp_535, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_620 = and i64 %tmp_606, %tmp_619, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_621 = xor i64 %tmp_620, %tmp_535, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp_622 = or i7 %i_3, 4, !dbg !499             ; [#uses=1 type=i7] [debug line = 135:8]
  %tmp_623 = zext i7 %tmp_622 to i64, !dbg !499   ; [#uses=2 type=i64] [debug line = 135:8]
  %K_addr_11 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_623, !dbg !499 ; [#uses=1 type=i64*] [debug line = 135:8]
  %K_load_11 = load i64* %K_addr_11, align 16, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %W_addr_23 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_623, !dbg !499 ; [#uses=1 type=i64*] [debug line = 135:8]
  %W_load_19 = load i64* %W_addr_23, align 16, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp45 = add i64 %K_load_11, %W_load_19, !dbg !499 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp47 = add i64 %tmp_617, %tmp_499, !dbg !499  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp46 = add i64 %tmp47, %tmp_621, !dbg !499    ; [#uses=1 type=i64] [debug line = 135:8]
  %t0_16 = add i64 %tmp46, %tmp45, !dbg !499      ; [#uses=2 type=i64] [debug line = 135:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_16}, i64 0, metadata !492), !dbg !499 ; [debug line = 135:8] [debug variable = t0]
  %tmp_624 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_607, i32 28, i32 63), !dbg !500 ; [#uses=1 type=i36] [debug line = 135:0]
  %tmp_713 = trunc i64 %tmp_607 to i28            ; [#uses=1 type=i28]
  %tmp_628 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_713, i36 %tmp_624), !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_630 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_607, i32 34, i32 63), !dbg !500 ; [#uses=1 type=i30] [debug line = 135:0]
  %tmp_722 = trunc i64 %tmp_607 to i34            ; [#uses=1 type=i34]
  %tmp_631 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_722, i30 %tmp_630), !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_633 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_607, i32 39, i32 63), !dbg !500 ; [#uses=1 type=i25] [debug line = 135:0]
  %tmp_725 = trunc i64 %tmp_607 to i39            ; [#uses=1 type=i39]
  %tmp_634 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_725, i25 %tmp_633), !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp48 = xor i64 %tmp_634, %tmp_631, !dbg !500  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_636 = xor i64 %tmp48, %tmp_628, !dbg !500  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_637 = or i64 %tmp_607, %tmp_572, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_638 = and i64 %tmp_637, %tmp_536, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_639 = and i64 %tmp_607, %tmp_572, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_640 = or i64 %tmp_638, %tmp_639, !dbg !500 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_641 = add i64 %tmp_500, %t0_16, !dbg !500  ; [#uses=11 type=i64] [debug line = 135:0]
  store i64 %tmp_641, i64* %S_addr_10, align 8, !dbg !500 ; [debug line = 135:0]
  %tmp49 = add i64 %tmp_636, %t0_16, !dbg !500    ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp_642 = add i64 %tmp49, %tmp_640, !dbg !500  ; [#uses=12 type=i64] [debug line = 135:0]
  store i64 %tmp_642, i64* %S_addr_17, align 8, !dbg !500 ; [debug line = 135:0]
  %tmp_643 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_641, i32 14, i32 63), !dbg !501 ; [#uses=1 type=i50] [debug line = 136:8]
  %tmp_728 = trunc i64 %tmp_641 to i14            ; [#uses=1 type=i14]
  %tmp_644 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_728, i50 %tmp_643), !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_646 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_641, i32 18, i32 63), !dbg !501 ; [#uses=1 type=i46] [debug line = 136:8]
  %tmp_739 = trunc i64 %tmp_641 to i18            ; [#uses=1 type=i18]
  %tmp_647 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_739, i46 %tmp_646), !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_649 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_641, i32 41, i32 63), !dbg !501 ; [#uses=1 type=i23] [debug line = 136:8]
  %tmp_740 = trunc i64 %tmp_641 to i41            ; [#uses=1 type=i41]
  %tmp_650 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_740, i23 %tmp_649), !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp50 = xor i64 %tmp_650, %tmp_647, !dbg !501  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_652 = xor i64 %tmp50, %tmp_644, !dbg !501  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_653 = xor i64 %tmp_606, %tmp_571, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_654 = and i64 %tmp_641, %tmp_653, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_655 = xor i64 %tmp_654, %tmp_571, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp_656 = or i7 %i_3, 5, !dbg !501             ; [#uses=1 type=i7] [debug line = 136:8]
  %tmp_657 = zext i7 %tmp_656 to i64, !dbg !501   ; [#uses=2 type=i64] [debug line = 136:8]
  %K_addr_12 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_657, !dbg !501 ; [#uses=1 type=i64*] [debug line = 136:8]
  %K_load_12 = load i64* %K_addr_12, align 8, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %W_addr_24 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_657, !dbg !501 ; [#uses=1 type=i64*] [debug line = 136:8]
  %W_load_20 = load i64* %W_addr_24, align 8, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp53 = add i64 %K_load_12, %W_load_20, !dbg !501 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp55 = add i64 %tmp_652, %tmp_535, !dbg !501  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp54 = add i64 %tmp55, %tmp_655, !dbg !501    ; [#uses=1 type=i64] [debug line = 136:8]
  %t0_17 = add i64 %tmp54, %tmp53, !dbg !501      ; [#uses=2 type=i64] [debug line = 136:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_17}, i64 0, metadata !492), !dbg !501 ; [debug line = 136:8] [debug variable = t0]
  %tmp_658 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_642, i32 28, i32 63), !dbg !502 ; [#uses=1 type=i36] [debug line = 136:0]
  %tmp_741 = trunc i64 %tmp_642 to i28            ; [#uses=1 type=i28]
  %tmp_659 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_741, i36 %tmp_658), !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_661 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_642, i32 34, i32 63), !dbg !502 ; [#uses=1 type=i30] [debug line = 136:0]
  %tmp_742 = trunc i64 %tmp_642 to i34            ; [#uses=1 type=i34]
  %tmp_662 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_742, i30 %tmp_661), !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_664 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_642, i32 39, i32 63), !dbg !502 ; [#uses=1 type=i25] [debug line = 136:0]
  %tmp_743 = trunc i64 %tmp_642 to i39            ; [#uses=1 type=i39]
  %tmp_665 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_743, i25 %tmp_664), !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp56 = xor i64 %tmp_665, %tmp_662, !dbg !502  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_667 = xor i64 %tmp56, %tmp_659, !dbg !502  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_668 = or i64 %tmp_642, %tmp_607, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_669 = and i64 %tmp_668, %tmp_572, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_670 = and i64 %tmp_642, %tmp_607, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_671 = or i64 %tmp_669, %tmp_670, !dbg !502 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_672 = add i64 %tmp_536, %t0_17, !dbg !502  ; [#uses=9 type=i64] [debug line = 136:0]
  store i64 %tmp_672, i64* %S_addr_12, align 16, !dbg !502 ; [debug line = 136:0]
  %tmp57 = add i64 %tmp_667, %t0_17, !dbg !502    ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp_673 = add i64 %tmp57, %tmp_671, !dbg !502  ; [#uses=11 type=i64] [debug line = 136:0]
  store i64 %tmp_673, i64* %S_addr_16, align 16, !dbg !502 ; [debug line = 136:0]
  %tmp_674 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_672, i32 14, i32 63), !dbg !503 ; [#uses=1 type=i50] [debug line = 137:8]
  %tmp_744 = trunc i64 %tmp_672 to i14            ; [#uses=1 type=i14]
  %tmp_675 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_744, i50 %tmp_674), !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_677 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_672, i32 18, i32 63), !dbg !503 ; [#uses=1 type=i46] [debug line = 137:8]
  %tmp_745 = trunc i64 %tmp_672 to i18            ; [#uses=1 type=i18]
  %tmp_678 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_745, i46 %tmp_677), !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_680 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_672, i32 41, i32 63), !dbg !503 ; [#uses=1 type=i23] [debug line = 137:8]
  %tmp_746 = trunc i64 %tmp_672 to i41            ; [#uses=1 type=i41]
  %tmp_681 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_746, i23 %tmp_680), !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp58 = xor i64 %tmp_681, %tmp_678, !dbg !503  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_683 = xor i64 %tmp58, %tmp_675, !dbg !503  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_684 = xor i64 %tmp_641, %tmp_606, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_685 = and i64 %tmp_672, %tmp_684, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_686 = xor i64 %tmp_685, %tmp_606, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp_687 = or i7 %i_3, 6, !dbg !503             ; [#uses=1 type=i7] [debug line = 137:8]
  %tmp_688 = zext i7 %tmp_687 to i64, !dbg !503   ; [#uses=2 type=i64] [debug line = 137:8]
  %K_addr_13 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_688, !dbg !503 ; [#uses=1 type=i64*] [debug line = 137:8]
  %K_load_13 = load i64* %K_addr_13, align 16, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %W_addr_25 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_688, !dbg !503 ; [#uses=1 type=i64*] [debug line = 137:8]
  %W_load_21 = load i64* %W_addr_25, align 16, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp61 = add i64 %K_load_13, %W_load_21, !dbg !503 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp63 = add i64 %tmp_683, %tmp_571, !dbg !503  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp62 = add i64 %tmp63, %tmp_686, !dbg !503    ; [#uses=1 type=i64] [debug line = 137:8]
  %t0_18 = add i64 %tmp62, %tmp61, !dbg !503      ; [#uses=2 type=i64] [debug line = 137:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_18}, i64 0, metadata !492), !dbg !503 ; [debug line = 137:8] [debug variable = t0]
  %tmp_689 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_673, i32 28, i32 63), !dbg !504 ; [#uses=1 type=i36] [debug line = 137:0]
  %tmp_747 = trunc i64 %tmp_673 to i28            ; [#uses=1 type=i28]
  %tmp_690 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_747, i36 %tmp_689), !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_692 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_673, i32 34, i32 63), !dbg !504 ; [#uses=1 type=i30] [debug line = 137:0]
  %tmp_748 = trunc i64 %tmp_673 to i34            ; [#uses=1 type=i34]
  %tmp_693 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_748, i30 %tmp_692), !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_695 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_673, i32 39, i32 63), !dbg !504 ; [#uses=1 type=i25] [debug line = 137:0]
  %tmp_749 = trunc i64 %tmp_673 to i39            ; [#uses=1 type=i39]
  %tmp_696 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_749, i25 %tmp_695), !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp64 = xor i64 %tmp_696, %tmp_693, !dbg !504  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_698 = xor i64 %tmp64, %tmp_690, !dbg !504  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_699 = or i64 %tmp_673, %tmp_642, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_700 = and i64 %tmp_699, %tmp_607, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_701 = and i64 %tmp_673, %tmp_642, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_702 = or i64 %tmp_700, %tmp_701, !dbg !504 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_703 = add i64 %tmp_572, %t0_18, !dbg !504  ; [#uses=8 type=i64] [debug line = 137:0]
  store i64 %tmp_703, i64* %S_addr_13, align 8, !dbg !504 ; [debug line = 137:0]
  %tmp65 = add i64 %tmp_698, %t0_18, !dbg !504    ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp_704 = add i64 %tmp65, %tmp_702, !dbg !504  ; [#uses=9 type=i64] [debug line = 137:0]
  store i64 %tmp_704, i64* %S_addr_15, align 8, !dbg !504 ; [debug line = 137:0]
  %tmp_705 = call i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64 %tmp_703, i32 14, i32 63), !dbg !505 ; [#uses=1 type=i50] [debug line = 138:8]
  %tmp_750 = trunc i64 %tmp_703 to i14            ; [#uses=1 type=i14]
  %tmp_706 = call i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14 %tmp_750, i50 %tmp_705), !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_708 = call i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64 %tmp_703, i32 18, i32 63), !dbg !505 ; [#uses=1 type=i46] [debug line = 138:8]
  %tmp_751 = trunc i64 %tmp_703 to i18            ; [#uses=1 type=i18]
  %tmp_709 = call i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18 %tmp_751, i46 %tmp_708), !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_711 = call i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64 %tmp_703, i32 41, i32 63), !dbg !505 ; [#uses=1 type=i23] [debug line = 138:8]
  %tmp_752 = trunc i64 %tmp_703 to i41            ; [#uses=1 type=i41]
  %tmp_712 = call i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41 %tmp_752, i23 %tmp_711), !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp66 = xor i64 %tmp_712, %tmp_709, !dbg !505  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_714 = xor i64 %tmp66, %tmp_706, !dbg !505  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_715 = xor i64 %tmp_672, %tmp_641, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_716 = and i64 %tmp_703, %tmp_715, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_717 = xor i64 %tmp_716, %tmp_641, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp_718 = or i7 %i_3, 7, !dbg !505             ; [#uses=1 type=i7] [debug line = 138:8]
  %tmp_719 = zext i7 %tmp_718 to i64, !dbg !505   ; [#uses=2 type=i64] [debug line = 138:8]
  %K_addr_14 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp_719, !dbg !505 ; [#uses=1 type=i64*] [debug line = 138:8]
  %K_load_14 = load i64* %K_addr_14, align 8, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %W_addr_26 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp_719, !dbg !505 ; [#uses=1 type=i64*] [debug line = 138:8]
  %W_load_22 = load i64* %W_addr_26, align 8, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp69 = add i64 %K_load_14, %W_load_22, !dbg !505 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp71 = add i64 %tmp_714, %tmp_606, !dbg !505  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp70 = add i64 %tmp71, %tmp_717, !dbg !505    ; [#uses=1 type=i64] [debug line = 138:8]
  %t0_19 = add i64 %tmp70, %tmp69, !dbg !505      ; [#uses=2 type=i64] [debug line = 138:8]
  call void @llvm.dbg.value(metadata !{i64 %t0_19}, i64 0, metadata !492), !dbg !505 ; [debug line = 138:8] [debug variable = t0]
  %tmp_720 = call i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64 %tmp_704, i32 28, i32 63), !dbg !506 ; [#uses=1 type=i36] [debug line = 138:0]
  %tmp_753 = trunc i64 %tmp_704 to i28            ; [#uses=1 type=i28]
  %tmp_721 = call i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28 %tmp_753, i36 %tmp_720), !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_723 = call i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64 %tmp_704, i32 34, i32 63), !dbg !506 ; [#uses=1 type=i30] [debug line = 138:0]
  %tmp_754 = trunc i64 %tmp_704 to i34            ; [#uses=1 type=i34]
  %tmp_724 = call i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34 %tmp_754, i30 %tmp_723), !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_726 = call i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64 %tmp_704, i32 39, i32 63), !dbg !506 ; [#uses=1 type=i25] [debug line = 138:0]
  %tmp_755 = trunc i64 %tmp_704 to i39            ; [#uses=1 type=i39]
  %tmp_727 = call i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39 %tmp_755, i25 %tmp_726), !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp72 = xor i64 %tmp_727, %tmp_724, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_729 = xor i64 %tmp72, %tmp_721, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_730 = or i64 %tmp_704, %tmp_673, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_731 = and i64 %tmp_730, %tmp_642, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_732 = and i64 %tmp_704, %tmp_673, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_733 = or i64 %tmp_731, %tmp_732, !dbg !506 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_734 = add i64 %tmp_607, %t0_19, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp_734, i64* %S_addr_11, align 16, !dbg !506 ; [debug line = 138:0]
  %tmp73 = add i64 %tmp_729, %t0_19, !dbg !506    ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp_735 = add i64 %tmp73, %tmp_733, !dbg !506  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp_735, i64* %S_addr_14, align 16, !dbg !506 ; [debug line = 138:0]
  %i_18 = add i7 8, %i_3, !dbg !507               ; [#uses=1 type=i7] [debug line = 130:25]
  call void @llvm.dbg.value(metadata !{i7 %i_18}, i64 0, metadata !475), !dbg !507 ; [debug line = 130:25] [debug variable = i]
  br label %.preheader11, !dbg !507               ; [debug line = 130:25]

.preheader:                                       ; preds = %6, %.preheader.preheader
  %i_4 = phi i4 [ %i_19, %6 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i4]
  %exitcond = icmp eq i4 %i_4, -8, !dbg !490      ; [#uses=1 type=i1] [debug line = 146:9]
  %empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  %i_19 = add i4 %i_4, 1, !dbg !508               ; [#uses=1 type=i4] [debug line = 146:23]
  br i1 %exitcond, label %7, label %6, !dbg !490  ; [debug line = 146:9]

; <label>:6                                       ; preds = %.preheader
  %tmp_736 = zext i4 %i_4 to i64, !dbg !509       ; [#uses=2 type=i64] [debug line = 147:9]
  %md_state_addr_9 = getelementptr [8 x i64]* %md_state, i64 0, i64 %tmp_736, !dbg !509 ; [#uses=2 type=i64*] [debug line = 147:9]
  %md_state_load_3 = load i64* %md_state_addr_9, align 8, !dbg !509 ; [#uses=1 type=i64] [debug line = 147:9]
  %S_addr_18 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp_736, !dbg !509 ; [#uses=1 type=i64*] [debug line = 147:9]
  %S_load_16 = load i64* %S_addr_18, align 8, !dbg !509 ; [#uses=1 type=i64] [debug line = 147:9]
  %tmp_737 = add i64 %md_state_load_3, %S_load_16, !dbg !509 ; [#uses=1 type=i64] [debug line = 147:9]
  store i64 %tmp_737, i64* %md_state_addr_9, align 8, !dbg !509 ; [debug line = 147:9]
  call void @llvm.dbg.value(metadata !{i4 %i_19}, i64 0, metadata !475), !dbg !508 ; [debug line = 146:23] [debug variable = i]
  br label %.preheader, !dbg !508                 ; [debug line = 146:23]

; <label>:7                                       ; preds = %.preheader
  ret void
}

; [#uses=2]
define internal fastcc void @reduce_add_sub([32 x i32]* nocapture %r_v) {
  %mask = alloca i2                               ; [#uses=2 type=i2*]
  call void @llvm.dbg.declare(metadata !{i2* %mask}, metadata !513) ; [debug variable = mask]
  %t = alloca [32 x i8], align 16                 ; [#uses=2 type=[32 x i8]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !530), !dbg !534 ; [debug line = 20:61] [debug variable = r.v]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %t}, metadata !535), !dbg !537 ; [debug line = 26:17] [debug variable = t]
  br label %1, !dbg !538                          ; [debug line = 28:7]

; <label>:1                                       ; preds = %2, %0
  %pb = phi i1 [ false, %0 ], [ %tmp_756, %2 ]    ; [#uses=1 type=i1]
  %i = phi i6 [ 0, %0 ], [ %i_20, %2 ]            ; [#uses=3 type=i6]
  %exitcond2 = icmp eq i6 %i, -32, !dbg !538      ; [#uses=1 type=i1] [debug line = 28:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_20 = add i6 %i, 1, !dbg !540                 ; [#uses=1 type=i6] [debug line = 28:16]
  br i1 %exitcond2, label %.preheader.preheader, label %2, !dbg !538 ; [debug line = 28:7]

.preheader.preheader:                             ; preds = %1
  %mask_load = load i2* %mask, !dbg !541          ; [#uses=1 type=i2] [debug line = 35:3]
  %mask_cast = sext i2 %mask_load to i32, !dbg !541 ; [#uses=1 type=i32] [debug line = 35:3]
  br label %.preheader, !dbg !542                 ; [debug line = 36:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !544             ; [#uses=3 type=i64] [debug line = 30:5]
  %m_addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp, !dbg !544 ; [#uses=1 type=i8*] [debug line = 30:5]
  %m_load = load i8* %m_addr, align 1, !dbg !544  ; [#uses=1 type=i8] [debug line = 30:5]
  %pb_cast1 = zext i1 %pb to i8, !dbg !541        ; [#uses=1 type=i8] [debug line = 35:3]
  %pb_1 = add i8 %m_load, %pb_cast1, !dbg !544    ; [#uses=1 type=i8] [debug line = 30:5]
  %pb_3_cast = zext i8 %pb_1 to i32, !dbg !544    ; [#uses=1 type=i32] [debug line = 30:5]
  call void @llvm.dbg.value(metadata !{i8 %pb_1}, i64 0, metadata !546), !dbg !544 ; [debug line = 30:5] [debug variable = pb]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp, !dbg !547 ; [#uses=1 type=i32*] [debug line = 31:9]
  %x = load i32* %r_v_addr, align 4, !dbg !547    ; [#uses=1 type=i32] [debug line = 31:9]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !548), !dbg !552 ; [debug line = 11:39@31:9] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i8 %pb_1}, i64 0, metadata !553), !dbg !554 ; [debug line = 11:55@31:9] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !555), !dbg !557 ; [debug line = 13:21@31:9] [debug variable = x]
  %x_1 = sub i32 %x, %pb_3_cast, !dbg !558        ; [#uses=2 type=i32] [debug line = 14:3@31:9]
  call void @llvm.dbg.value(metadata !{i32 %x_1}, i64 0, metadata !555), !dbg !558 ; [debug line = 14:3@31:9] [debug variable = x]
  %tmp_756 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_1, i32 31), !dbg !559 ; [#uses=2 type=i1] [debug line = 15:3@31:9]
  %tmp_757 = trunc i32 %x_1 to i8, !dbg !560      ; [#uses=1 type=i8] [debug line = 32:5]
  %t_addr = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp, !dbg !560 ; [#uses=1 type=i8*] [debug line = 32:5]
  store i8 %tmp_757, i8* %t_addr, align 1, !dbg !560 ; [debug line = 32:5]
  call void @llvm.dbg.value(metadata !{i6 %i_20}, i64 0, metadata !561), !dbg !540 ; [debug line = 28:16] [debug variable = i]
  %phitmp = xor i1 %tmp_756, true, !dbg !540      ; [#uses=1 type=i1] [debug line = 28:16]
  %phitmp_cast_cast = select i1 %phitmp, i2 -1, i2 0, !dbg !540 ; [#uses=1 type=i2] [debug line = 28:16]
  store i2 %phitmp_cast_cast, i2* %mask
  br label %1, !dbg !540                          ; [debug line = 28:16]

.preheader:                                       ; preds = %3, %.preheader.preheader
  %i_1 = phi i6 [ %i_21, %3 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i_1, -32, !dbg !542     ; [#uses=1 type=i1] [debug line = 36:7]
  %empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_21 = add i6 %i_1, 1, !dbg !562               ; [#uses=1 type=i6] [debug line = 36:16]
  br i1 %exitcond, label %4, label %3, !dbg !542  ; [debug line = 36:7]

; <label>:3                                       ; preds = %.preheader
  %tmp_s = zext i6 %i_1 to i64, !dbg !563         ; [#uses=2 type=i64] [debug line = 37:5]
  %r_v_addr_1 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_s, !dbg !563 ; [#uses=2 type=i32*] [debug line = 37:5]
  %r_v_load = load i32* %r_v_addr_1, align 4, !dbg !563 ; [#uses=2 type=i32] [debug line = 37:5]
  %t_addr_1 = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp_s, !dbg !563 ; [#uses=1 type=i8*] [debug line = 37:5]
  %t_load = load i8* %t_addr_1, align 1, !dbg !563 ; [#uses=1 type=i8] [debug line = 37:5]
  %tmp_738 = zext i8 %t_load to i32, !dbg !563    ; [#uses=1 type=i32] [debug line = 37:5]
  %tmp_739 = xor i32 %r_v_load, %tmp_738, !dbg !563 ; [#uses=1 type=i32] [debug line = 37:5]
  %tmp_740 = and i32 %tmp_739, %mask_cast, !dbg !563 ; [#uses=1 type=i32] [debug line = 37:5]
  %tmp_741 = xor i32 %r_v_load, %tmp_740, !dbg !563 ; [#uses=1 type=i32] [debug line = 37:5]
  store i32 %tmp_741, i32* %r_v_addr_1, align 4, !dbg !563 ; [debug line = 37:5]
  call void @llvm.dbg.value(metadata !{i6 %i_21}, i64 0, metadata !561), !dbg !562 ; [debug line = 36:16] [debug variable = i]
  br label %.preheader, !dbg !562                 ; [debug line = 36:16]

; <label>:4                                       ; preds = %.preheader
  ret void, !dbg !564                             ; [debug line = 38:1]
}

; [#uses=1]
declare i8 @llvm.part.select.i8(i8, i32, i32) nounwind readnone

; [#uses=13]
declare i64 @llvm.part.select.i64(i64, i32, i32) nounwind readnone

; [#uses=1]
declare i56 @llvm.part.select.i56(i56, i32, i32) nounwind readnone

; [#uses=1]
declare i48 @llvm.part.select.i48(i48, i32, i32) nounwind readnone

; [#uses=1]
declare i40 @llvm.part.select.i40(i40, i32, i32) nounwind readnone

; [#uses=4]
declare i32 @llvm.part.select.i32(i32, i32, i32) nounwind readnone

; [#uses=1]
declare i24 @llvm.part.select.i24(i24, i32, i32) nounwind readnone

; [#uses=1]
declare i16 @llvm.part.select.i16(i16, i32, i32) nounwind readnone

; [#uses=447]
declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

; [#uses=77]
declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.9([64 x i8]* nocapture %r, [32 x i32]* %x_v) {
  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %r, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  %y_v = alloca [32 x i32], align 4               ; [#uses=34 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %r}, i64 0, metadata !565), !dbg !579 ; [debug line = 98:57] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !580), !dbg !584 ; [debug line = 98:103] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %y_v}, metadata !585), !dbg !588 ; [debug line = 101:35] [debug variable = y.v]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 0, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 0, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load, i32* %y_v_addr, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_1 = getelementptr [32 x i32]* %y_v, i64 0, i64 1, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_1 = getelementptr [32 x i32]* %x_v, i64 0, i64 1, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_1 = load i32* %x_v_addr_1, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_1, i32* %y_v_addr_1, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_2 = getelementptr [32 x i32]* %y_v, i64 0, i64 2, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_2 = getelementptr [32 x i32]* %x_v, i64 0, i64 2, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_2 = load i32* %x_v_addr_2, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_2, i32* %y_v_addr_2, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_3 = getelementptr [32 x i32]* %y_v, i64 0, i64 3, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_3 = getelementptr [32 x i32]* %x_v, i64 0, i64 3, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_3 = load i32* %x_v_addr_3, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_3, i32* %y_v_addr_3, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_4 = getelementptr [32 x i32]* %y_v, i64 0, i64 4, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_4 = getelementptr [32 x i32]* %x_v, i64 0, i64 4, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_4 = load i32* %x_v_addr_4, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_4, i32* %y_v_addr_4, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_5 = getelementptr [32 x i32]* %y_v, i64 0, i64 5, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_5 = getelementptr [32 x i32]* %x_v, i64 0, i64 5, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_5 = load i32* %x_v_addr_5, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_5, i32* %y_v_addr_5, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_6 = getelementptr [32 x i32]* %y_v, i64 0, i64 6, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_6 = getelementptr [32 x i32]* %x_v, i64 0, i64 6, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_6 = load i32* %x_v_addr_6, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_6, i32* %y_v_addr_6, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_7 = getelementptr [32 x i32]* %y_v, i64 0, i64 7, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_7 = getelementptr [32 x i32]* %x_v, i64 0, i64 7, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_7 = load i32* %x_v_addr_7, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_7, i32* %y_v_addr_7, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_8 = getelementptr [32 x i32]* %y_v, i64 0, i64 8, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_8 = getelementptr [32 x i32]* %x_v, i64 0, i64 8, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_8 = load i32* %x_v_addr_8, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_8, i32* %y_v_addr_8, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_9 = getelementptr [32 x i32]* %y_v, i64 0, i64 9, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_9 = getelementptr [32 x i32]* %x_v, i64 0, i64 9, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_9 = load i32* %x_v_addr_9, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_9, i32* %y_v_addr_9, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_10 = getelementptr [32 x i32]* %y_v, i64 0, i64 10, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_10 = getelementptr [32 x i32]* %x_v, i64 0, i64 10, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_10 = load i32* %x_v_addr_10, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_10, i32* %y_v_addr_10, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_11 = getelementptr [32 x i32]* %y_v, i64 0, i64 11, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_11 = getelementptr [32 x i32]* %x_v, i64 0, i64 11, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_11 = load i32* %x_v_addr_11, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_11, i32* %y_v_addr_11, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_12 = getelementptr [32 x i32]* %y_v, i64 0, i64 12, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_12 = getelementptr [32 x i32]* %x_v, i64 0, i64 12, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_12 = load i32* %x_v_addr_12, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_12, i32* %y_v_addr_12, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_13 = getelementptr [32 x i32]* %y_v, i64 0, i64 13, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_13 = getelementptr [32 x i32]* %x_v, i64 0, i64 13, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_13 = load i32* %x_v_addr_13, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_13, i32* %y_v_addr_13, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_14 = getelementptr [32 x i32]* %y_v, i64 0, i64 14, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_14 = getelementptr [32 x i32]* %x_v, i64 0, i64 14, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_14 = load i32* %x_v_addr_14, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_14, i32* %y_v_addr_14, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_15 = getelementptr [32 x i32]* %y_v, i64 0, i64 15, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_15 = getelementptr [32 x i32]* %x_v, i64 0, i64 15, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_15 = load i32* %x_v_addr_15, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_15, i32* %y_v_addr_15, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_16 = getelementptr [32 x i32]* %y_v, i64 0, i64 16, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_16 = getelementptr [32 x i32]* %x_v, i64 0, i64 16, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_16 = load i32* %x_v_addr_16, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_16, i32* %y_v_addr_16, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_17 = getelementptr [32 x i32]* %y_v, i64 0, i64 17, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_17 = getelementptr [32 x i32]* %x_v, i64 0, i64 17, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_17 = load i32* %x_v_addr_17, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_17, i32* %y_v_addr_17, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_18 = getelementptr [32 x i32]* %y_v, i64 0, i64 18, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_18 = getelementptr [32 x i32]* %x_v, i64 0, i64 18, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_18 = load i32* %x_v_addr_18, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_18, i32* %y_v_addr_18, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_19 = getelementptr [32 x i32]* %y_v, i64 0, i64 19, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_19 = getelementptr [32 x i32]* %x_v, i64 0, i64 19, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_19 = load i32* %x_v_addr_19, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_19, i32* %y_v_addr_19, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_20 = getelementptr [32 x i32]* %y_v, i64 0, i64 20, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_20 = getelementptr [32 x i32]* %x_v, i64 0, i64 20, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_20 = load i32* %x_v_addr_20, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_20, i32* %y_v_addr_20, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_21 = getelementptr [32 x i32]* %y_v, i64 0, i64 21, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_21 = getelementptr [32 x i32]* %x_v, i64 0, i64 21, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_21 = load i32* %x_v_addr_21, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_21, i32* %y_v_addr_21, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_22 = getelementptr [32 x i32]* %y_v, i64 0, i64 22, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_22 = getelementptr [32 x i32]* %x_v, i64 0, i64 22, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_22 = load i32* %x_v_addr_22, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_22, i32* %y_v_addr_22, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_23 = getelementptr [32 x i32]* %y_v, i64 0, i64 23, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_23 = getelementptr [32 x i32]* %x_v, i64 0, i64 23, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_23 = load i32* %x_v_addr_23, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_23, i32* %y_v_addr_23, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_24 = getelementptr [32 x i32]* %y_v, i64 0, i64 24, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_24 = getelementptr [32 x i32]* %x_v, i64 0, i64 24, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_24 = load i32* %x_v_addr_24, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_24, i32* %y_v_addr_24, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_25 = getelementptr [32 x i32]* %y_v, i64 0, i64 25, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_25 = getelementptr [32 x i32]* %x_v, i64 0, i64 25, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_25 = load i32* %x_v_addr_25, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_25, i32* %y_v_addr_25, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_26 = getelementptr [32 x i32]* %y_v, i64 0, i64 26, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_26 = getelementptr [32 x i32]* %x_v, i64 0, i64 26, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_26 = load i32* %x_v_addr_26, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_26, i32* %y_v_addr_26, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_27 = getelementptr [32 x i32]* %y_v, i64 0, i64 27, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_27 = getelementptr [32 x i32]* %x_v, i64 0, i64 27, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_27 = load i32* %x_v_addr_27, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_27, i32* %y_v_addr_27, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_28 = getelementptr [32 x i32]* %y_v, i64 0, i64 28, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_28 = getelementptr [32 x i32]* %x_v, i64 0, i64 28, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_28 = load i32* %x_v_addr_28, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_28, i32* %y_v_addr_28, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_29 = getelementptr [32 x i32]* %y_v, i64 0, i64 29, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_29 = getelementptr [32 x i32]* %x_v, i64 0, i64 29, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_29 = load i32* %x_v_addr_29, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_29, i32* %y_v_addr_29, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_30 = getelementptr [32 x i32]* %y_v, i64 0, i64 30, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_30 = getelementptr [32 x i32]* %x_v, i64 0, i64 30, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_30 = load i32* %x_v_addr_30, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_30, i32* %y_v_addr_30, align 4, !dbg !589 ; [debug line = 101:41]
  %y_v_addr_31 = getelementptr [32 x i32]* %y_v, i64 0, i64 31, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_addr_31 = getelementptr [32 x i32]* %x_v, i64 0, i64 31, !dbg !589 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x_v_load_31 = load i32* %x_v_addr_31, align 4, !dbg !589 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x_v_load_31, i32* %y_v_addr_31, align 4, !dbg !589 ; [debug line = 101:41]
  call fastcc void @crypto_sign_ed25519_.21([32 x i32]* %y_v), !dbg !590 ; [debug line = 102:3]
  br label %1, !dbg !591                          ; [debug line = 103:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_22, %2 ]            ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i, -32, !dbg !591       ; [#uses=1 type=i1] [debug line = 103:7]
  %empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_22 = add i6 %i, 1, !dbg !593                 ; [#uses=1 type=i6] [debug line = 103:16]
  br i1 %exitcond, label %3, label %2, !dbg !591  ; [debug line = 103:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !594             ; [#uses=2 type=i64] [debug line = 104:5]
  %y_v_addr_32 = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp, !dbg !594 ; [#uses=1 type=i32*] [debug line = 104:5]
  %y_v_load = load i32* %y_v_addr_32, align 4, !dbg !594 ; [#uses=1 type=i32] [debug line = 104:5]
  %tmp_758 = trunc i32 %y_v_load to i8, !dbg !594 ; [#uses=1 type=i8] [debug line = 104:5]
  %r_addr = getelementptr [64 x i8]* %r, i64 0, i64 %tmp, !dbg !594 ; [#uses=1 type=i8*] [debug line = 104:5]
  store i8 %tmp_758, i8* %r_addr, align 1, !dbg !594 ; [debug line = 104:5]
  call void @llvm.dbg.value(metadata !{i6 %i_22}, i64 0, metadata !595), !dbg !593 ; [debug line = 103:16] [debug variable = i]
  br label %1, !dbg !593                          ; [debug line = 103:16]

; <label>:3                                       ; preds = %1
  ret void, !dbg !596                             ; [debug line = 105:1]
}

; [#uses=4]
define internal fastcc void @crypto_sign_ed25519_.8([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %x_v, [32 x i32]* nocapture %y_v) {
  %t = alloca [32 x i32], align 16                ; [#uses=4 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !597), !dbg !603 ; [debug line = 175:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !604), !dbg !606 ; [debug line = 175:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !607), !dbg !609 ; [debug line = 175:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t}, metadata !610), !dbg !612 ; [debug line = 178:17] [debug variable = t]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 0, !dbg !613 ; [#uses=1 type=i32*] [debug line = 179:3]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !613 ; [#uses=1 type=i32] [debug line = 179:3]
  %tmp = add i32 %x_v_load, 474, !dbg !613        ; [#uses=1 type=i32] [debug line = 179:3]
  %t_addr = getelementptr inbounds [32 x i32]* %t, i64 0, i64 0, !dbg !613 ; [#uses=1 type=i32*] [debug line = 179:3]
  store i32 %tmp, i32* %t_addr, align 16, !dbg !613 ; [debug line = 179:3]
  %x_v_addr_1 = getelementptr [32 x i32]* %x_v, i64 0, i64 31, !dbg !614 ; [#uses=1 type=i32*] [debug line = 180:3]
  %x_v_load_1 = load i32* %x_v_addr_1, align 4, !dbg !614 ; [#uses=1 type=i32] [debug line = 180:3]
  %tmp_s = add i32 %x_v_load_1, 254, !dbg !614    ; [#uses=1 type=i32] [debug line = 180:3]
  %t_addr_2 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 31, !dbg !614 ; [#uses=1 type=i32*] [debug line = 180:3]
  store i32 %tmp_s, i32* %t_addr_2, align 4, !dbg !614 ; [debug line = 180:3]
  br label %1, !dbg !615                          ; [debug line = 181:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i5 [ 1, %0 ], [ %i_23, %2 ]            ; [#uses=3 type=i5]
  %exitcond1 = icmp eq i5 %i, -1, !dbg !615       ; [#uses=1 type=i1] [debug line = 181:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %.preheader.preheader, label %2, !dbg !615 ; [debug line = 181:7]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !617                 ; [debug line = 182:7]

; <label>:2                                       ; preds = %1
  %tmp_742 = zext i5 %i to i64, !dbg !619         ; [#uses=2 type=i64] [debug line = 181:21]
  %x_v_addr_2 = getelementptr [32 x i32]* %x_v, i64 0, i64 %tmp_742, !dbg !619 ; [#uses=1 type=i32*] [debug line = 181:21]
  %x_v_load_2 = load i32* %x_v_addr_2, align 4, !dbg !619 ; [#uses=1 type=i32] [debug line = 181:21]
  %tmp_743 = add i32 %x_v_load_2, 510, !dbg !619  ; [#uses=1 type=i32] [debug line = 181:21]
  %t_addr_3 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp_742, !dbg !619 ; [#uses=1 type=i32*] [debug line = 181:21]
  store i32 %tmp_743, i32* %t_addr_3, align 4, !dbg !619 ; [debug line = 181:21]
  %i_23 = add i5 %i, 1, !dbg !620                 ; [#uses=1 type=i5] [debug line = 181:16]
  call void @llvm.dbg.value(metadata !{i5 %i_23}, i64 0, metadata !621), !dbg !620 ; [debug line = 181:16] [debug variable = i]
  br label %1, !dbg !620                          ; [debug line = 181:16]

.preheader:                                       ; preds = %3, %.preheader.preheader
  %i_1 = phi i6 [ %i_24, %3 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i_1, -32, !dbg !617     ; [#uses=1 type=i1] [debug line = 182:7]
  %empty_43 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_24 = add i6 %i_1, 1, !dbg !622               ; [#uses=1 type=i6] [debug line = 182:16]
  br i1 %exitcond, label %4, label %3, !dbg !617  ; [debug line = 182:7]

; <label>:3                                       ; preds = %.preheader
  %tmp_744 = zext i6 %i_1 to i64, !dbg !623       ; [#uses=3 type=i64] [debug line = 182:21]
  %t_addr_4 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp_744, !dbg !623 ; [#uses=1 type=i32*] [debug line = 182:21]
  %t_load = load i32* %t_addr_4, align 4, !dbg !623 ; [#uses=1 type=i32] [debug line = 182:21]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp_744, !dbg !623 ; [#uses=1 type=i32*] [debug line = 182:21]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !623 ; [#uses=1 type=i32] [debug line = 182:21]
  %tmp_745 = sub i32 %t_load, %y_v_load, !dbg !623 ; [#uses=1 type=i32] [debug line = 182:21]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_744, !dbg !623 ; [#uses=1 type=i32*] [debug line = 182:21]
  store i32 %tmp_745, i32* %r_v_addr, align 4, !dbg !623 ; [debug line = 182:21]
  call void @llvm.dbg.value(metadata !{i6 %i_24}, i64 0, metadata !621), !dbg !622 ; [debug line = 182:16] [debug variable = i]
  br label %.preheader, !dbg !622                 ; [debug line = 182:16]

; <label>:4                                       ; preds = %.preheader
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !624), !dbg !630 ; [debug line = 33:61@183:3] [debug variable = r.v]
  %r_v_addr_2 = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !631 ; [#uses=2 type=i32*] [debug line = 40:5@183:3]
  %r_v_addr_3 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !635 ; [#uses=2 type=i32*] [debug line = 43:5@183:3]
  br label %.loopexit, !dbg !636                  ; [debug line = 38:7@183:3]

.loopexit.loopexit:                               ; preds = %6
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %4
  %rep_i = phi i3 [ 0, %4 ], [ %rep, %.loopexit.loopexit ] ; [#uses=2 type=i3]
  %exitcond1_i = icmp eq i3 %rep_i, -4, !dbg !636 ; [#uses=1 type=i1] [debug line = 38:7@183:3]
  %empty_44 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  %rep = add i3 %rep_i, 1, !dbg !637              ; [#uses=1 type=i3] [debug line = 38:19@183:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !638), !dbg !637 ; [debug line = 38:19@183:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_add_sub64.exit, label %5, !dbg !636 ; [debug line = 38:7@183:3]

; <label>:5                                       ; preds = %.loopexit
  %r_v_load = load i32* %r_v_addr_2, align 4, !dbg !631 ; [#uses=2 type=i32] [debug line = 40:5@183:3]
  %tmp_759 = trunc i32 %r_v_load to i7, !dbg !631 ; [#uses=1 type=i7] [debug line = 40:5@183:3]
  %tmp_746 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load, i32 7, i32 31), !dbg !631 ; [#uses=1 type=i25] [debug line = 40:5@183:3]
  %t_8_cast = zext i25 %tmp_746 to i31, !dbg !631 ; [#uses=1 type=i31] [debug line = 40:5@183:3]
  %tmp_i_cast = zext i7 %tmp_759 to i32, !dbg !639 ; [#uses=1 type=i32] [debug line = 41:5@183:3]
  store i32 %tmp_i_cast, i32* %r_v_addr_2, align 4, !dbg !639 ; [debug line = 41:5@183:3]
  %t_1 = mul i31 19, %t_8_cast, !dbg !640         ; [#uses=1 type=i31] [debug line = 25:3@42:9@183:3]
  %t_6_cast4 = zext i31 %t_1 to i32, !dbg !640    ; [#uses=1 type=i32] [debug line = 25:3@42:9@183:3]
  call void @llvm.dbg.value(metadata !{i31 %t_1}, i64 0, metadata !646), !dbg !645 ; [debug line = 42:9@183:3] [debug variable = t]
  %r_v_load_1 = load i32* %r_v_addr_3, align 4, !dbg !635 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  %tmp_i = add i32 %t_6_cast4, %r_v_load_1, !dbg !635 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  store i32 %tmp_i, i32* %r_v_addr_3, align 4, !dbg !635 ; [debug line = 43:5@183:3]
  br label %6, !dbg !647                          ; [debug line = 44:9@183:3]

; <label>:6                                       ; preds = %7, %5
  %i_i = phi i5 [ 0, %5 ], [ %i_25, %7 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !647    ; [#uses=1 type=i1] [debug line = 44:9@183:3]
  %empty_45 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_25 = add i5 %i_i, 1, !dbg !649               ; [#uses=2 type=i5] [debug line = 47:7@183:3]
  br i1 %exitcond_i, label %.loopexit.loopexit, label %7, !dbg !647 ; [debug line = 44:9@183:3]

; <label>:7                                       ; preds = %6
  %tmp_759_i = zext i5 %i_i to i64, !dbg !651     ; [#uses=1 type=i64] [debug line = 46:7@183:3]
  %r_v_addr_4 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_759_i, !dbg !651 ; [#uses=2 type=i32*] [debug line = 46:7@183:3]
  %r_v_load_2 = load i32* %r_v_addr_4, align 4, !dbg !651 ; [#uses=2 type=i32] [debug line = 46:7@183:3]
  %tmp_760 = trunc i32 %r_v_load_2 to i8, !dbg !651 ; [#uses=1 type=i8] [debug line = 46:7@183:3]
  %t_7 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_2, i32 8, i32 31), !dbg !651 ; [#uses=1 type=i24] [debug line = 46:7@183:3]
  %t_2 = zext i24 %t_7 to i32, !dbg !651          ; [#uses=1 type=i32] [debug line = 46:7@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t_2}, i64 0, metadata !646), !dbg !651 ; [debug line = 46:7@183:3] [debug variable = t]
  %tmp_760_i = zext i5 %i_25 to i64, !dbg !649    ; [#uses=1 type=i64] [debug line = 47:7@183:3]
  %r_v_addr_5 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_760_i, !dbg !649 ; [#uses=2 type=i32*] [debug line = 47:7@183:3]
  %r_v_load_3 = load i32* %r_v_addr_5, align 4, !dbg !649 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  %tmp_761_i = add i32 %t_2, %r_v_load_3, !dbg !649 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  store i32 %tmp_761_i, i32* %r_v_addr_5, align 4, !dbg !649 ; [debug line = 47:7@183:3]
  %tmp_762_i_cast = zext i8 %tmp_760 to i32, !dbg !652 ; [#uses=1 type=i32] [debug line = 48:7@183:3]
  store i32 %tmp_762_i_cast, i32* %r_v_addr_4, align 4, !dbg !652 ; [debug line = 48:7@183:3]
  call void @llvm.dbg.value(metadata !{i5 %i_25}, i64 0, metadata !653), !dbg !654 ; [debug line = 44:18@183:3] [debug variable = i]
  br label %6, !dbg !654                          ; [debug line = 44:18@183:3]

reduce_add_sub64.exit:                            ; preds = %.loopexit
  ret void, !dbg !655                             ; [debug line = 184:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.7([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %y_v) {
  %t = alloca [32 x i32], align 16                ; [#uses=4 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !597), !dbg !603 ; [debug line = 175:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !604), !dbg !606 ; [debug line = 175:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !607), !dbg !609 ; [debug line = 175:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t}, metadata !610), !dbg !612 ; [debug line = 178:17] [debug variable = t]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !613 ; [#uses=3 type=i32*] [debug line = 179:3]
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !613 ; [#uses=1 type=i32] [debug line = 179:3]
  %tmp = add i32 %r_v_load, 474, !dbg !613        ; [#uses=1 type=i32] [debug line = 179:3]
  %t_addr = getelementptr inbounds [32 x i32]* %t, i64 0, i64 0, !dbg !613 ; [#uses=1 type=i32*] [debug line = 179:3]
  store i32 %tmp, i32* %t_addr, align 16, !dbg !613 ; [debug line = 179:3]
  %r_v_addr_6 = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !614 ; [#uses=3 type=i32*] [debug line = 180:3]
  %r_v_load_4 = load i32* %r_v_addr_6, align 4, !dbg !614 ; [#uses=1 type=i32] [debug line = 180:3]
  %tmp_s = add i32 %r_v_load_4, 254, !dbg !614    ; [#uses=1 type=i32] [debug line = 180:3]
  %t_addr_5 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 31, !dbg !614 ; [#uses=1 type=i32*] [debug line = 180:3]
  store i32 %tmp_s, i32* %t_addr_5, align 4, !dbg !614 ; [debug line = 180:3]
  br label %1, !dbg !615                          ; [debug line = 181:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i5 [ 1, %0 ], [ %i_26, %2 ]            ; [#uses=3 type=i5]
  %exitcond1 = icmp eq i5 %i, -1, !dbg !615       ; [#uses=1 type=i1] [debug line = 181:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %.preheader.preheader, label %2, !dbg !615 ; [debug line = 181:7]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !617                 ; [debug line = 182:7]

; <label>:2                                       ; preds = %1
  %tmp_747 = zext i5 %i to i64, !dbg !619         ; [#uses=2 type=i64] [debug line = 181:21]
  %r_v_addr_7 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_747, !dbg !619 ; [#uses=1 type=i32*] [debug line = 181:21]
  %r_v_load_5 = load i32* %r_v_addr_7, align 4, !dbg !619 ; [#uses=1 type=i32] [debug line = 181:21]
  %tmp_748 = add i32 %r_v_load_5, 510, !dbg !619  ; [#uses=1 type=i32] [debug line = 181:21]
  %t_addr_6 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp_747, !dbg !619 ; [#uses=1 type=i32*] [debug line = 181:21]
  store i32 %tmp_748, i32* %t_addr_6, align 4, !dbg !619 ; [debug line = 181:21]
  %i_26 = add i5 %i, 1, !dbg !620                 ; [#uses=1 type=i5] [debug line = 181:16]
  call void @llvm.dbg.value(metadata !{i5 %i_26}, i64 0, metadata !621), !dbg !620 ; [debug line = 181:16] [debug variable = i]
  br label %1, !dbg !620                          ; [debug line = 181:16]

.preheader:                                       ; preds = %3, %.preheader.preheader
  %i_1 = phi i6 [ %i_27, %3 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i_1, -32, !dbg !617     ; [#uses=1 type=i1] [debug line = 182:7]
  %empty_46 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_27 = add i6 %i_1, 1, !dbg !622               ; [#uses=1 type=i6] [debug line = 182:16]
  br i1 %exitcond, label %.preheader1.preheader, label %3, !dbg !617 ; [debug line = 182:7]

.preheader1.preheader:                            ; preds = %.preheader
  br label %.preheader1, !dbg !636                ; [debug line = 38:7@183:3]

; <label>:3                                       ; preds = %.preheader
  %tmp_749 = zext i6 %i_1 to i64, !dbg !623       ; [#uses=3 type=i64] [debug line = 182:21]
  %t_addr_7 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp_749, !dbg !623 ; [#uses=1 type=i32*] [debug line = 182:21]
  %t_load = load i32* %t_addr_7, align 4, !dbg !623 ; [#uses=1 type=i32] [debug line = 182:21]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp_749, !dbg !623 ; [#uses=1 type=i32*] [debug line = 182:21]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !623 ; [#uses=1 type=i32] [debug line = 182:21]
  %tmp_750 = sub i32 %t_load, %y_v_load, !dbg !623 ; [#uses=1 type=i32] [debug line = 182:21]
  %r_v_addr_8 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_749, !dbg !623 ; [#uses=1 type=i32*] [debug line = 182:21]
  store i32 %tmp_750, i32* %r_v_addr_8, align 4, !dbg !623 ; [debug line = 182:21]
  call void @llvm.dbg.value(metadata !{i6 %i_27}, i64 0, metadata !621), !dbg !622 ; [debug line = 182:16] [debug variable = i]
  br label %.preheader, !dbg !622                 ; [debug line = 182:16]

.preheader1.loopexit:                             ; preds = %5
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.loopexit, %.preheader1.preheader
  %rep_i = phi i3 [ %rep, %.preheader1.loopexit ], [ 0, %.preheader1.preheader ] ; [#uses=2 type=i3]
  %exitcond1_i = icmp eq i3 %rep_i, -4, !dbg !636 ; [#uses=1 type=i1] [debug line = 38:7@183:3]
  %empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  %rep = add i3 %rep_i, 1, !dbg !637              ; [#uses=1 type=i3] [debug line = 38:19@183:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !638), !dbg !637 ; [debug line = 38:19@183:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_add_sub64.exit, label %4, !dbg !636 ; [debug line = 38:7@183:3]

; <label>:4                                       ; preds = %.preheader1
  %r_v_load_6 = load i32* %r_v_addr_6, align 4, !dbg !631 ; [#uses=2 type=i32] [debug line = 40:5@183:3]
  %tmp_761 = trunc i32 %r_v_load_6 to i7, !dbg !631 ; [#uses=1 type=i7] [debug line = 40:5@183:3]
  %tmp_751 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load_6, i32 7, i32 31), !dbg !631 ; [#uses=1 type=i25] [debug line = 40:5@183:3]
  %t_4_cast = zext i25 %tmp_751 to i31, !dbg !631 ; [#uses=1 type=i31] [debug line = 40:5@183:3]
  %tmp_i_cast = zext i7 %tmp_761 to i32, !dbg !639 ; [#uses=1 type=i32] [debug line = 41:5@183:3]
  store i32 %tmp_i_cast, i32* %r_v_addr_6, align 4, !dbg !639 ; [debug line = 41:5@183:3]
  %t_2 = mul i31 19, %t_4_cast, !dbg !640         ; [#uses=1 type=i31] [debug line = 25:3@42:9@183:3]
  %t_2_cast4 = zext i31 %t_2 to i32, !dbg !640    ; [#uses=1 type=i32] [debug line = 25:3@42:9@183:3]
  call void @llvm.dbg.value(metadata !{i31 %t_2}, i64 0, metadata !646), !dbg !645 ; [debug line = 42:9@183:3] [debug variable = t]
  %r_v_load_7 = load i32* %r_v_addr, align 4, !dbg !635 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  %tmp_i = add i32 %t_2_cast4, %r_v_load_7, !dbg !635 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  store i32 %tmp_i, i32* %r_v_addr, align 4, !dbg !635 ; [debug line = 43:5@183:3]
  br label %5, !dbg !647                          ; [debug line = 44:9@183:3]

; <label>:5                                       ; preds = %6, %4
  %i_i = phi i5 [ 0, %4 ], [ %i_28, %6 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !647    ; [#uses=1 type=i1] [debug line = 44:9@183:3]
  %empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_28 = add i5 %i_i, 1, !dbg !649               ; [#uses=2 type=i5] [debug line = 47:7@183:3]
  br i1 %exitcond_i, label %.preheader1.loopexit, label %6, !dbg !647 ; [debug line = 44:9@183:3]

; <label>:6                                       ; preds = %5
  %tmp_759_i = zext i5 %i_i to i64, !dbg !651     ; [#uses=1 type=i64] [debug line = 46:7@183:3]
  %r_v_addr_9 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_759_i, !dbg !651 ; [#uses=2 type=i32*] [debug line = 46:7@183:3]
  %r_v_load_8 = load i32* %r_v_addr_9, align 4, !dbg !651 ; [#uses=2 type=i32] [debug line = 46:7@183:3]
  %tmp_762 = trunc i32 %r_v_load_8 to i8, !dbg !651 ; [#uses=1 type=i8] [debug line = 46:7@183:3]
  %t_3 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_8, i32 8, i32 31), !dbg !651 ; [#uses=1 type=i24] [debug line = 46:7@183:3]
  %t_4 = zext i24 %t_3 to i32, !dbg !651          ; [#uses=1 type=i32] [debug line = 46:7@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t_4}, i64 0, metadata !646), !dbg !651 ; [debug line = 46:7@183:3] [debug variable = t]
  %tmp_760_i = zext i5 %i_28 to i64, !dbg !649    ; [#uses=1 type=i64] [debug line = 47:7@183:3]
  %r_v_addr_10 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_760_i, !dbg !649 ; [#uses=2 type=i32*] [debug line = 47:7@183:3]
  %r_v_load_9 = load i32* %r_v_addr_10, align 4, !dbg !649 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  %tmp_761_i = add i32 %t_4, %r_v_load_9, !dbg !649 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  store i32 %tmp_761_i, i32* %r_v_addr_10, align 4, !dbg !649 ; [debug line = 47:7@183:3]
  %tmp_762_i_cast = zext i8 %tmp_762 to i32, !dbg !652 ; [#uses=1 type=i32] [debug line = 48:7@183:3]
  store i32 %tmp_762_i_cast, i32* %r_v_addr_9, align 4, !dbg !652 ; [debug line = 48:7@183:3]
  call void @llvm.dbg.value(metadata !{i5 %i_28}, i64 0, metadata !653), !dbg !654 ; [debug line = 44:18@183:3] [debug variable = i]
  br label %5, !dbg !654                          ; [debug line = 44:18@183:3]

reduce_add_sub64.exit:                            ; preds = %.preheader1
  ret void, !dbg !655                             ; [debug line = 184:1]
}

; [#uses=2]
define internal fastcc void @crypto_sign_ed25519_.21([32 x i32]* nocapture %r_v) {
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !656), !dbg !659 ; [debug line = 74:78] [debug variable = r.v]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !660 ; [#uses=2 type=i32*] [debug line = 77:21]
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !660 ; [#uses=2 type=i32] [debug line = 77:21]
  call void @llvm.dbg.value(metadata !{i32 %r_v_load}, i64 0, metadata !662), !dbg !666 ; [debug line = 6:42@77:21] [debug variable = a]
  %x = xor i32 %r_v_load, 127, !dbg !667          ; [#uses=1 type=i32] [debug line = 8:26@77:21]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !669), !dbg !667 ; [debug line = 8:26@77:21] [debug variable = x]
  %x_2 = add i32 %x, -1, !dbg !670                ; [#uses=1 type=i32] [debug line = 9:3@77:21]
  call void @llvm.dbg.value(metadata !{i32 %x_2}, i64 0, metadata !669), !dbg !670 ; [debug line = 9:3@77:21] [debug variable = x]
  %tmp_763 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_2, i32 31), !dbg !671 ; [#uses=1 type=i1] [debug line = 10:3@77:21]
  br label %1, !dbg !672                          ; [debug line = 78:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i5 [ -2, %0 ], [ %i_29, %2 ]           ; [#uses=3 type=i5]
  %m1 = phi i1 [ %tmp_763, %0 ], [ %m_1, %2 ]     ; [#uses=2 type=i1]
  %tmp = icmp eq i5 %i, 0, !dbg !672              ; [#uses=1 type=i1] [debug line = 78:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %tmp, label %3, label %2, !dbg !672       ; [debug line = 78:7]

; <label>:2                                       ; preds = %1
  %tmp_s = zext i5 %i to i64, !dbg !674           ; [#uses=1 type=i64] [debug line = 79:10]
  %r_v_addr_8 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_s, !dbg !674 ; [#uses=1 type=i32*] [debug line = 79:10]
  %r_v_load_11 = load i32* %r_v_addr_8, align 4, !dbg !674 ; [#uses=1 type=i32] [debug line = 79:10]
  call void @llvm.dbg.value(metadata !{i32 %r_v_load_11}, i64 0, metadata !675), !dbg !676 ; [debug line = 6:42@79:10] [debug variable = a]
  %x_6 = xor i32 %r_v_load_11, 255, !dbg !677     ; [#uses=1 type=i32] [debug line = 8:26@79:10]
  call void @llvm.dbg.value(metadata !{i32 %x_6}, i64 0, metadata !678), !dbg !677 ; [debug line = 8:26@79:10] [debug variable = x]
  %x_7 = add i32 %x_6, -1, !dbg !679              ; [#uses=1 type=i32] [debug line = 9:3@79:10]
  call void @llvm.dbg.value(metadata !{i32 %x_7}, i64 0, metadata !678), !dbg !679 ; [debug line = 9:3@79:10] [debug variable = x]
  %tmp_765 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_7, i32 31), !dbg !680 ; [#uses=1 type=i1] [debug line = 10:3@79:10]
  %m_1 = and i1 %tmp_765, %m1, !dbg !674          ; [#uses=1 type=i1] [debug line = 79:10]
  call void @llvm.dbg.value(metadata !{i1 %m_1}, i64 0, metadata !681), !dbg !674 ; [debug line = 79:10] [debug variable = m]
  %i_29 = add i5 %i, -1, !dbg !682                ; [#uses=1 type=i5] [debug line = 78:16]
  call void @llvm.dbg.value(metadata !{i5 %i_29}, i64 0, metadata !683), !dbg !682 ; [debug line = 78:16] [debug variable = i]
  br label %1, !dbg !682                          ; [debug line = 78:16]

; <label>:3                                       ; preds = %1
  %r_v_addr_9 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !684 ; [#uses=3 type=i32*] [debug line = 80:8]
  %x_3 = load i32* %r_v_addr_9, align 4, !dbg !684 ; [#uses=1 type=i32] [debug line = 80:8]
  call void @llvm.dbg.value(metadata !{i32 %x_3}, i64 0, metadata !685), !dbg !687 ; [debug line = 14:39@80:8] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i32 %x_3}, i64 0, metadata !688), !dbg !690 ; [debug line = 16:21@80:8] [debug variable = x]
  %x_4 = add i32 %x_3, -237, !dbg !691            ; [#uses=1 type=i32] [debug line = 17:3@80:8]
  call void @llvm.dbg.value(metadata !{i32 %x_4}, i64 0, metadata !688), !dbg !691 ; [debug line = 17:3@80:8] [debug variable = x]
  %tmp_764 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_4, i32 31), !dbg !692 ; [#uses=1 type=i1] [debug line = 18:3@80:8]
  %x_5 = xor i1 %tmp_764, true, !dbg !693         ; [#uses=1 type=i1] [debug line = 19:3@80:8]
  call void @llvm.dbg.value(metadata !{i1 %x_5}, i64 0, metadata !688), !dbg !693 ; [debug line = 19:3@80:8] [debug variable = x]
  %m_1_1 = and i1 %m1, %x_5, !dbg !684            ; [#uses=3 type=i1] [debug line = 80:8]
  call void @llvm.dbg.value(metadata !{i1 %m_1_1}, i64 0, metadata !681), !dbg !684 ; [debug line = 80:8] [debug variable = m]
  %tmp_884_cast_cast = select i1 %m_1_1, i32 127, i32 0, !dbg !694 ; [#uses=1 type=i32] [debug line = 84:3]
  %tmp_752 = sub i32 %r_v_load, %tmp_884_cast_cast, !dbg !694 ; [#uses=1 type=i32] [debug line = 84:3]
  store i32 %tmp_752, i32* %r_v_addr, align 4, !dbg !694 ; [debug line = 84:3]
  %tmp_886_cast_cast = select i1 %m_1_1, i32 255, i32 0, !dbg !695 ; [#uses=1 type=i32] [debug line = 86:5]
  br label %4, !dbg !697                          ; [debug line = 85:7]

; <label>:4                                       ; preds = %5, %3
  %i_1 = phi i5 [ -2, %3 ], [ %i_30, %5 ]         ; [#uses=3 type=i5]
  %tmp_753 = icmp eq i5 %i_1, 0, !dbg !697        ; [#uses=1 type=i1] [debug line = 85:7]
  %empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %tmp_753, label %6, label %5, !dbg !697   ; [debug line = 85:7]

; <label>:5                                       ; preds = %4
  %tmp_755 = zext i5 %i_1 to i64, !dbg !695       ; [#uses=1 type=i64] [debug line = 86:5]
  %r_v_addr_10 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_755, !dbg !695 ; [#uses=2 type=i32*] [debug line = 86:5]
  %r_v_load_7 = load i32* %r_v_addr_10, align 4, !dbg !695 ; [#uses=1 type=i32] [debug line = 86:5]
  %tmp_756 = sub i32 %r_v_load_7, %tmp_886_cast_cast, !dbg !695 ; [#uses=1 type=i32] [debug line = 86:5]
  store i32 %tmp_756, i32* %r_v_addr_10, align 4, !dbg !695 ; [debug line = 86:5]
  %i_30 = add i5 %i_1, -1, !dbg !698              ; [#uses=1 type=i5] [debug line = 85:16]
  call void @llvm.dbg.value(metadata !{i5 %i_30}, i64 0, metadata !683), !dbg !698 ; [debug line = 85:16] [debug variable = i]
  br label %4, !dbg !698                          ; [debug line = 85:16]

; <label>:6                                       ; preds = %4
  %tmp_890_cast_cast = select i1 %m_1_1, i32 237, i32 0, !dbg !699 ; [#uses=1 type=i32] [debug line = 87:3]
  %r_v_load_8 = load i32* %r_v_addr_9, align 4, !dbg !699 ; [#uses=1 type=i32] [debug line = 87:3]
  %tmp_754 = sub i32 %r_v_load_8, %tmp_890_cast_cast, !dbg !699 ; [#uses=1 type=i32] [debug line = 87:3]
  store i32 %tmp_754, i32* %r_v_addr_9, align 4, !dbg !699 ; [debug line = 87:3]
  ret void, !dbg !700                             ; [debug line = 88:1]
}

; [#uses=1]
define internal fastcc i1 @crypto_sign_ed25519_.20([32 x i32]* %x_v) {
  %t_v = alloca [32 x i32], align 4               ; [#uses=33 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !701), !dbg !706 ; [debug line = 139:96] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t_v}, metadata !707), !dbg !710 ; [debug line = 141:35] [debug variable = t.v]
  %t_v_addr = getelementptr [32 x i32]* %t_v, i64 0, i64 0, !dbg !711 ; [#uses=2 type=i32*] [debug line = 141:41]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 0, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load, i32* %t_v_addr, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_1 = getelementptr [32 x i32]* %t_v, i64 0, i64 1, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_32 = getelementptr [32 x i32]* %x_v, i64 0, i64 1, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_32 = load i32* %x_v_addr_32, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_32, i32* %t_v_addr_1, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_2 = getelementptr [32 x i32]* %t_v, i64 0, i64 2, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_33 = getelementptr [32 x i32]* %x_v, i64 0, i64 2, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_33 = load i32* %x_v_addr_33, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_33, i32* %t_v_addr_2, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_3 = getelementptr [32 x i32]* %t_v, i64 0, i64 3, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_34 = getelementptr [32 x i32]* %x_v, i64 0, i64 3, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_34 = load i32* %x_v_addr_34, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_34, i32* %t_v_addr_3, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_4 = getelementptr [32 x i32]* %t_v, i64 0, i64 4, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_35 = getelementptr [32 x i32]* %x_v, i64 0, i64 4, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_35 = load i32* %x_v_addr_35, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_35, i32* %t_v_addr_4, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_5 = getelementptr [32 x i32]* %t_v, i64 0, i64 5, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_36 = getelementptr [32 x i32]* %x_v, i64 0, i64 5, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_36 = load i32* %x_v_addr_36, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_36, i32* %t_v_addr_5, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_6 = getelementptr [32 x i32]* %t_v, i64 0, i64 6, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_37 = getelementptr [32 x i32]* %x_v, i64 0, i64 6, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_37 = load i32* %x_v_addr_37, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_37, i32* %t_v_addr_6, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_7 = getelementptr [32 x i32]* %t_v, i64 0, i64 7, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_38 = getelementptr [32 x i32]* %x_v, i64 0, i64 7, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_38 = load i32* %x_v_addr_38, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_38, i32* %t_v_addr_7, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_8 = getelementptr [32 x i32]* %t_v, i64 0, i64 8, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_39 = getelementptr [32 x i32]* %x_v, i64 0, i64 8, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_39 = load i32* %x_v_addr_39, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_39, i32* %t_v_addr_8, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_9 = getelementptr [32 x i32]* %t_v, i64 0, i64 9, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_40 = getelementptr [32 x i32]* %x_v, i64 0, i64 9, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_40 = load i32* %x_v_addr_40, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_40, i32* %t_v_addr_9, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_10 = getelementptr [32 x i32]* %t_v, i64 0, i64 10, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_41 = getelementptr [32 x i32]* %x_v, i64 0, i64 10, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_41 = load i32* %x_v_addr_41, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_41, i32* %t_v_addr_10, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_11 = getelementptr [32 x i32]* %t_v, i64 0, i64 11, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_42 = getelementptr [32 x i32]* %x_v, i64 0, i64 11, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_42 = load i32* %x_v_addr_42, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_42, i32* %t_v_addr_11, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_12 = getelementptr [32 x i32]* %t_v, i64 0, i64 12, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_43 = getelementptr [32 x i32]* %x_v, i64 0, i64 12, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_43 = load i32* %x_v_addr_43, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_43, i32* %t_v_addr_12, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_13 = getelementptr [32 x i32]* %t_v, i64 0, i64 13, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_44 = getelementptr [32 x i32]* %x_v, i64 0, i64 13, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_44 = load i32* %x_v_addr_44, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_44, i32* %t_v_addr_13, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_14 = getelementptr [32 x i32]* %t_v, i64 0, i64 14, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_45 = getelementptr [32 x i32]* %x_v, i64 0, i64 14, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_45 = load i32* %x_v_addr_45, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_45, i32* %t_v_addr_14, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_15 = getelementptr [32 x i32]* %t_v, i64 0, i64 15, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_46 = getelementptr [32 x i32]* %x_v, i64 0, i64 15, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_46 = load i32* %x_v_addr_46, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_46, i32* %t_v_addr_15, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_16 = getelementptr [32 x i32]* %t_v, i64 0, i64 16, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_47 = getelementptr [32 x i32]* %x_v, i64 0, i64 16, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_47 = load i32* %x_v_addr_47, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_47, i32* %t_v_addr_16, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_17 = getelementptr [32 x i32]* %t_v, i64 0, i64 17, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_48 = getelementptr [32 x i32]* %x_v, i64 0, i64 17, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_48 = load i32* %x_v_addr_48, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_48, i32* %t_v_addr_17, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_18 = getelementptr [32 x i32]* %t_v, i64 0, i64 18, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_49 = getelementptr [32 x i32]* %x_v, i64 0, i64 18, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_49 = load i32* %x_v_addr_49, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_49, i32* %t_v_addr_18, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_19 = getelementptr [32 x i32]* %t_v, i64 0, i64 19, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_50 = getelementptr [32 x i32]* %x_v, i64 0, i64 19, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_50 = load i32* %x_v_addr_50, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_50, i32* %t_v_addr_19, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_20 = getelementptr [32 x i32]* %t_v, i64 0, i64 20, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_51 = getelementptr [32 x i32]* %x_v, i64 0, i64 20, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_51 = load i32* %x_v_addr_51, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_51, i32* %t_v_addr_20, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_21 = getelementptr [32 x i32]* %t_v, i64 0, i64 21, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_52 = getelementptr [32 x i32]* %x_v, i64 0, i64 21, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_52 = load i32* %x_v_addr_52, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_52, i32* %t_v_addr_21, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_22 = getelementptr [32 x i32]* %t_v, i64 0, i64 22, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_53 = getelementptr [32 x i32]* %x_v, i64 0, i64 22, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_53 = load i32* %x_v_addr_53, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_53, i32* %t_v_addr_22, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_23 = getelementptr [32 x i32]* %t_v, i64 0, i64 23, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_54 = getelementptr [32 x i32]* %x_v, i64 0, i64 23, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_54 = load i32* %x_v_addr_54, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_54, i32* %t_v_addr_23, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_24 = getelementptr [32 x i32]* %t_v, i64 0, i64 24, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_55 = getelementptr [32 x i32]* %x_v, i64 0, i64 24, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_55 = load i32* %x_v_addr_55, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_55, i32* %t_v_addr_24, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_25 = getelementptr [32 x i32]* %t_v, i64 0, i64 25, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_56 = getelementptr [32 x i32]* %x_v, i64 0, i64 25, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_56 = load i32* %x_v_addr_56, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_56, i32* %t_v_addr_25, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_26 = getelementptr [32 x i32]* %t_v, i64 0, i64 26, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_57 = getelementptr [32 x i32]* %x_v, i64 0, i64 26, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_57 = load i32* %x_v_addr_57, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_57, i32* %t_v_addr_26, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_27 = getelementptr [32 x i32]* %t_v, i64 0, i64 27, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_58 = getelementptr [32 x i32]* %x_v, i64 0, i64 27, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_58 = load i32* %x_v_addr_58, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_58, i32* %t_v_addr_27, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_28 = getelementptr [32 x i32]* %t_v, i64 0, i64 28, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_59 = getelementptr [32 x i32]* %x_v, i64 0, i64 28, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_59 = load i32* %x_v_addr_59, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_59, i32* %t_v_addr_28, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_29 = getelementptr [32 x i32]* %t_v, i64 0, i64 29, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_60 = getelementptr [32 x i32]* %x_v, i64 0, i64 29, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_60 = load i32* %x_v_addr_60, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_60, i32* %t_v_addr_29, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_30 = getelementptr [32 x i32]* %t_v, i64 0, i64 30, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_61 = getelementptr [32 x i32]* %x_v, i64 0, i64 30, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_61 = load i32* %x_v_addr_61, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_61, i32* %t_v_addr_30, align 4, !dbg !711 ; [debug line = 141:41]
  %t_v_addr_31 = getelementptr [32 x i32]* %t_v, i64 0, i64 31, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_addr_62 = getelementptr [32 x i32]* %x_v, i64 0, i64 31, !dbg !711 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x_v_load_62 = load i32* %x_v_addr_62, align 4, !dbg !711 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x_v_load_62, i32* %t_v_addr_31, align 4, !dbg !711 ; [debug line = 141:41]
  call fastcc void @crypto_sign_ed25519_.21([32 x i32]* %t_v), !dbg !712 ; [debug line = 142:3]
  %t_v_load = load i32* %t_v_addr, align 4, !dbg !713 ; [#uses=1 type=i32] [debug line = 143:3]
  %tmp = trunc i32 %t_v_load to i1, !dbg !713     ; [#uses=1 type=i1] [debug line = 143:3]
  ret i1 %tmp, !dbg !713                          ; [debug line = 143:3]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.19([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %x_v) {
  %z2_v = alloca [32 x i32], align 4              ; [#uses=3 type=[32 x i32]*]
  %z9_v = alloca [32 x i32], align 4              ; [#uses=3 type=[32 x i32]*]
  %z11_v = alloca [32 x i32], align 4             ; [#uses=3 type=[32 x i32]*]
  %z2_5_0_v = alloca [32 x i32], align 4          ; [#uses=3 type=[32 x i32]*]
  %z2_10_0_v = alloca [32 x i32], align 4         ; [#uses=4 type=[32 x i32]*]
  %z2_20_0_v = alloca [32 x i32], align 4         ; [#uses=3 type=[32 x i32]*]
  %z2_50_0_v = alloca [32 x i32], align 4         ; [#uses=4 type=[32 x i32]*]
  %z2_100_0_v = alloca [32 x i32], align 4        ; [#uses=3 type=[32 x i32]*]
  %t0_v = alloca [32 x i32], align 4              ; [#uses=42 type=[32 x i32]*]
  %t1_v = alloca [32 x i32], align 4              ; [#uses=38 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !714), !dbg !719 ; [debug line = 208:78] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !720), !dbg !722 ; [debug line = 208:120] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_v}, metadata !723), !dbg !726 ; [debug line = 210:34] [debug variable = z2.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z9_v}, metadata !727), !dbg !729 ; [debug line = 211:34] [debug variable = z9.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z11_v}, metadata !730), !dbg !732 ; [debug line = 212:34] [debug variable = z11.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_5_0_v}, metadata !733), !dbg !735 ; [debug line = 213:34] [debug variable = z2_5_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_10_0_v}, metadata !736), !dbg !738 ; [debug line = 214:34] [debug variable = z2_10_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_20_0_v}, metadata !739), !dbg !741 ; [debug line = 215:34] [debug variable = z2_20_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_50_0_v}, metadata !742), !dbg !744 ; [debug line = 216:34] [debug variable = z2_50_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_100_0_v}, metadata !745), !dbg !747 ; [debug line = 217:34] [debug variable = z2_100_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t0_v}, metadata !748), !dbg !750 ; [debug line = 218:34] [debug variable = t0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t1_v}, metadata !751), !dbg !753 ; [debug line = 219:34] [debug variable = t1.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_v}, i64 0, metadata !754), !dbg !758 ; [debug line = 203:78@222:10] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !759), !dbg !761 ; [debug line = 203:120@222:10] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %z2_v, [32 x i32]* %x_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !762), !dbg !764 ; [debug line = 203:78@223:10] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_v}, i64 0, metadata !765), !dbg !766 ; [debug line = 203:120@223:10] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %z2_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !767), !dbg !769 ; [debug line = 203:78@224:10] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !770), !dbg !771 ; [debug line = 203:120@224:10] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z9_v, [32 x i32]* %t0_v, [32 x i32]* %x_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z11_v, [32 x i32]* %z9_v, [32 x i32]* %z2_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !772), !dbg !774 ; [debug line = 203:78@227:11] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z11_v}, i64 0, metadata !775), !dbg !776 ; [debug line = 203:120@227:11] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %z11_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z2_5_0_v, [32 x i32]* %t0_v, [32 x i32]* %z9_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !777), !dbg !779 ; [debug line = 203:78@230:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_5_0_v}, i64 0, metadata !780), !dbg !781 ; [debug line = 203:120@230:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %z2_5_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !782), !dbg !784 ; [debug line = 203:78@231:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !785), !dbg !786 ; [debug line = 203:120@231:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !787), !dbg !789 ; [debug line = 203:78@232:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !790), !dbg !791 ; [debug line = 203:120@232:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !792), !dbg !794 ; [debug line = 203:78@233:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !795), !dbg !796 ; [debug line = 203:120@233:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !797), !dbg !799 ; [debug line = 203:78@234:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !800), !dbg !801 ; [debug line = 203:120@234:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z2_10_0_v, [32 x i32]* %t0_v, [32 x i32]* %z2_5_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !802), !dbg !804 ; [debug line = 203:78@237:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_10_0_v}, i64 0, metadata !805), !dbg !806 ; [debug line = 203:120@237:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %z2_10_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !807), !dbg !809 ; [debug line = 203:78@238:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !810), !dbg !811 ; [debug line = 203:120@238:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  br label %1, !dbg !812                          ; [debug line = 239:25]

; <label>:1                                       ; preds = %2, %0
  %i = phi i4 [ 2, %0 ], [ %i_31, %2 ]            ; [#uses=2 type=i4]
  %tmp = icmp ult i4 %i, -6, !dbg !812            ; [#uses=1 type=i1] [debug line = 239:25]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %tmp, label %2, label %3, !dbg !812       ; [debug line = 239:25]

; <label>:2                                       ; preds = %1
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !814), !dbg !817 ; [debug line = 203:78@239:48] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !818), !dbg !819 ; [debug line = 203:120@239:48] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !820), !dbg !822 ; [debug line = 203:78@239:97] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !823), !dbg !824 ; [debug line = 203:120@239:97] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  %i_31 = add i4 %i, 2, !dbg !825                 ; [#uses=1 type=i4] [debug line = 239:38]
  call void @llvm.dbg.value(metadata !{i4 %i_31}, i64 0, metadata !826), !dbg !825 ; [debug line = 239:38] [debug variable = i]
  br label %1, !dbg !825                          ; [debug line = 239:38]

; <label>:3                                       ; preds = %1
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z2_20_0_v, [32 x i32]* %t1_v, [32 x i32]* %z2_10_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !827), !dbg !829 ; [debug line = 203:78@242:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_20_0_v}, i64 0, metadata !830), !dbg !831 ; [debug line = 203:120@242:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %z2_20_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !832), !dbg !834 ; [debug line = 203:78@243:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !835), !dbg !836 ; [debug line = 203:120@243:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  br label %4, !dbg !837                          ; [debug line = 244:25]

; <label>:4                                       ; preds = %5, %3
  %i_1 = phi i5 [ 2, %3 ], [ %i_32, %5 ]          ; [#uses=2 type=i5]
  %tmp_s = icmp ult i5 %i_1, -12, !dbg !837       ; [#uses=1 type=i1] [debug line = 244:25]
  %empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9) ; [#uses=0 type=i32]
  br i1 %tmp_s, label %5, label %6, !dbg !837     ; [debug line = 244:25]

; <label>:5                                       ; preds = %4
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !839), !dbg !842 ; [debug line = 203:78@244:48] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !843), !dbg !844 ; [debug line = 203:120@244:48] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !845), !dbg !847 ; [debug line = 203:78@244:97] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !848), !dbg !849 ; [debug line = 203:120@244:97] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  %i_32 = add i5 %i_1, 2, !dbg !850               ; [#uses=1 type=i5] [debug line = 244:38]
  call void @llvm.dbg.value(metadata !{i5 %i_32}, i64 0, metadata !826), !dbg !850 ; [debug line = 244:38] [debug variable = i]
  br label %4, !dbg !850                          ; [debug line = 244:38]

; <label>:6                                       ; preds = %4
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %t0_v, [32 x i32]* %t1_v, [32 x i32]* %z2_20_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !851), !dbg !853 ; [debug line = 203:78@247:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !854), !dbg !855 ; [debug line = 203:120@247:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !856), !dbg !858 ; [debug line = 203:78@248:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !859), !dbg !860 ; [debug line = 203:120@248:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  br label %7, !dbg !861                          ; [debug line = 249:25]

; <label>:7                                       ; preds = %8, %6
  %i_2 = phi i4 [ 2, %6 ], [ %i_33, %8 ]          ; [#uses=2 type=i4]
  %tmp_757 = icmp ult i4 %i_2, -6, !dbg !861      ; [#uses=1 type=i1] [debug line = 249:25]
  %empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %tmp_757, label %8, label %9, !dbg !861   ; [debug line = 249:25]

; <label>:8                                       ; preds = %7
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !863), !dbg !866 ; [debug line = 203:78@249:48] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !867), !dbg !868 ; [debug line = 203:120@249:48] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !869), !dbg !871 ; [debug line = 203:78@249:97] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !872), !dbg !873 ; [debug line = 203:120@249:97] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  %i_33 = add i4 %i_2, 2, !dbg !874               ; [#uses=1 type=i4] [debug line = 249:38]
  call void @llvm.dbg.value(metadata !{i4 %i_33}, i64 0, metadata !826), !dbg !874 ; [debug line = 249:38] [debug variable = i]
  br label %7, !dbg !874                          ; [debug line = 249:38]

; <label>:9                                       ; preds = %7
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z2_50_0_v, [32 x i32]* %t0_v, [32 x i32]* %z2_10_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !875), !dbg !877 ; [debug line = 203:78@252:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_50_0_v}, i64 0, metadata !878), !dbg !879 ; [debug line = 203:120@252:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %z2_50_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !880), !dbg !882 ; [debug line = 203:78@253:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !883), !dbg !884 ; [debug line = 203:120@253:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  br label %10, !dbg !885                         ; [debug line = 254:26]

; <label>:10                                      ; preds = %11, %9
  %i_3 = phi i6 [ 2, %9 ], [ %i_34, %11 ]         ; [#uses=2 type=i6]
  %tmp_758 = icmp ult i6 %i_3, -14, !dbg !885     ; [#uses=1 type=i1] [debug line = 254:26]
  %empty_52 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24) ; [#uses=0 type=i32]
  br i1 %tmp_758, label %11, label %12, !dbg !885 ; [debug line = 254:26]

; <label>:11                                      ; preds = %10
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !887), !dbg !890 ; [debug line = 203:78@254:49] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !891), !dbg !892 ; [debug line = 203:120@254:49] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !893), !dbg !895 ; [debug line = 203:78@254:98] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !896), !dbg !897 ; [debug line = 203:120@254:98] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  %i_34 = add i6 %i_3, 2, !dbg !898               ; [#uses=1 type=i6] [debug line = 254:39]
  call void @llvm.dbg.value(metadata !{i6 %i_34}, i64 0, metadata !826), !dbg !898 ; [debug line = 254:39] [debug variable = i]
  br label %10, !dbg !898                         ; [debug line = 254:39]

; <label>:12                                      ; preds = %10
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %z2_100_0_v, [32 x i32]* %t1_v, [32 x i32]* %z2_50_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !899), !dbg !901 ; [debug line = 203:78@257:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_100_0_v}, i64 0, metadata !902), !dbg !903 ; [debug line = 203:120@257:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %z2_100_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !904), !dbg !906 ; [debug line = 203:78@258:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !907), !dbg !908 ; [debug line = 203:120@258:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  br label %13, !dbg !909                         ; [debug line = 259:27]

; <label>:13                                      ; preds = %14, %12
  %i_4 = phi i7 [ 2, %12 ], [ %i_35, %14 ]        ; [#uses=2 type=i7]
  %tmp_759 = icmp ult i7 %i_4, -28, !dbg !909     ; [#uses=1 type=i1] [debug line = 259:27]
  %empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49) ; [#uses=0 type=i32]
  br i1 %tmp_759, label %14, label %15, !dbg !909 ; [debug line = 259:27]

; <label>:14                                      ; preds = %13
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !911), !dbg !914 ; [debug line = 203:78@259:51] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !915), !dbg !916 ; [debug line = 203:120@259:51] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !917), !dbg !919 ; [debug line = 203:78@259:100] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !920), !dbg !921 ; [debug line = 203:120@259:100] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  %i_35 = add i7 %i_4, 2, !dbg !922               ; [#uses=1 type=i7] [debug line = 259:41]
  call void @llvm.dbg.value(metadata !{i7 %i_35}, i64 0, metadata !826), !dbg !922 ; [debug line = 259:41] [debug variable = i]
  br label %13, !dbg !922                         ; [debug line = 259:41]

; <label>:15                                      ; preds = %13
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %t1_v, [32 x i32]* %t0_v, [32 x i32]* %z2_100_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !923), !dbg !925 ; [debug line = 203:78@262:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !926), !dbg !927 ; [debug line = 203:120@262:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !928), !dbg !930 ; [debug line = 203:78@263:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !931), !dbg !932 ; [debug line = 203:120@263:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  br label %16, !dbg !933                         ; [debug line = 264:26]

; <label>:16                                      ; preds = %17, %15
  %i_5 = phi i6 [ 2, %15 ], [ %i_36, %17 ]        ; [#uses=2 type=i6]
  %tmp_760 = icmp ult i6 %i_5, -14, !dbg !933     ; [#uses=1 type=i1] [debug line = 264:26]
  %empty_54 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24) ; [#uses=0 type=i32]
  br i1 %tmp_760, label %17, label %18, !dbg !933 ; [debug line = 264:26]

; <label>:17                                      ; preds = %16
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !935), !dbg !938 ; [debug line = 203:78@264:49] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !939), !dbg !940 ; [debug line = 203:120@264:49] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !941), !dbg !943 ; [debug line = 203:78@264:98] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !944), !dbg !945 ; [debug line = 203:120@264:98] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  %i_36 = add i6 %i_5, 2, !dbg !946               ; [#uses=1 type=i6] [debug line = 264:39]
  call void @llvm.dbg.value(metadata !{i6 %i_36}, i64 0, metadata !826), !dbg !946 ; [debug line = 264:39] [debug variable = i]
  br label %16, !dbg !946                         ; [debug line = 264:39]

; <label>:18                                      ; preds = %16
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %t0_v, [32 x i32]* %t1_v, [32 x i32]* %z2_50_0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !947), !dbg !949 ; [debug line = 203:78@267:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !950), !dbg !951 ; [debug line = 203:120@267:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !952), !dbg !954 ; [debug line = 203:78@268:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !955), !dbg !956 ; [debug line = 203:120@268:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !957), !dbg !959 ; [debug line = 203:78@269:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !960), !dbg !961 ; [debug line = 203:120@269:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !962), !dbg !964 ; [debug line = 203:78@270:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !965), !dbg !966 ; [debug line = 203:120@270:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t0_v, [32 x i32]* %t1_v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1_v}, i64 0, metadata !967), !dbg !969 ; [debug line = 203:78@271:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0_v}, i64 0, metadata !970), !dbg !971 ; [debug line = 203:120@271:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_.10([32 x i32]* %t1_v, [32 x i32]* %t0_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %r_v, [32 x i32]* %t1_v, [32 x i32]* %z11_v)
  ret void, !dbg !972                             ; [debug line = 273:1]
}

; [#uses=20]
define internal fastcc void @crypto_sign_ed25519_.18([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %x_v, [32 x i32]* nocapture %y_v) {
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !973), !dbg !976 ; [debug line = 186:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !977), !dbg !979 ; [debug line = 186:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !980), !dbg !982 ; [debug line = 186:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !983), !dbg !988 ; [debug line = 189:17] [debug variable = t]
  br label %1, !dbg !989                          ; [debug line = 190:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_37, %2 ]            ; [#uses=3 type=i6]
  %exitcond3 = icmp eq i6 %i, -1, !dbg !989       ; [#uses=1 type=i1] [debug line = 190:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  %i_37 = add i6 %i, 1, !dbg !991                 ; [#uses=1 type=i6] [debug line = 190:16]
  br i1 %exitcond3, label %.preheader5.preheader, label %2, !dbg !989 ; [debug line = 190:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !992                ; [debug line = 192:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !994             ; [#uses=1 type=i64] [debug line = 190:20]
  %t_addr = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp, !dbg !994 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %t_addr, align 4, !dbg !994   ; [debug line = 190:20]
  call void @llvm.dbg.value(metadata !{i6 %i_37}, i64 0, metadata !995), !dbg !991 ; [debug line = 190:16] [debug variable = i]
  br label %1, !dbg !991                          ; [debug line = 190:16]

.preheader5.loopexit:                             ; preds = %.preheader4
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.loopexit, %.preheader5.preheader
  %i_1 = phi i6 [ %i_39, %.preheader5.loopexit ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i_1, -32, !dbg !992    ; [#uses=1 type=i1] [debug line = 192:7]
  %empty_55 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_39 = add i6 %i_1, 1, !dbg !996               ; [#uses=1 type=i6] [debug line = 192:16]
  call void @llvm.dbg.value(metadata !{i6 %i_39}, i64 0, metadata !995), !dbg !996 ; [debug line = 192:16] [debug variable = i]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !992 ; [debug line = 192:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !997                 ; [debug line = 196:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp_s = zext i6 %i_1 to i64, !dbg !999         ; [#uses=1 type=i64] [debug line = 194:7]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 %tmp_s, !dbg !999 ; [#uses=1 type=i32*] [debug line = 194:7]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  br label %.preheader4, !dbg !1001               ; [debug line = 193:9]

.preheader4:                                      ; preds = %3, %.preheader4.preheader
  %j = phi i6 [ %j_1, %3 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !1001     ; [#uses=1 type=i1] [debug line = 193:9]
  %empty_56 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %j_1 = add i6 %j, 1, !dbg !1002                 ; [#uses=1 type=i6] [debug line = 193:18]
  br i1 %exitcond1, label %.preheader5.loopexit, label %3, !dbg !1001 ; [debug line = 193:9]

; <label>:3                                       ; preds = %.preheader4
  %tmp_765 = zext i6 %j to i64, !dbg !999         ; [#uses=1 type=i64] [debug line = 194:7]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp_765, !dbg !999 ; [#uses=1 type=i32*] [debug line = 194:7]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_766 = mul i32 %x_v_load, %y_v_load, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_767 = add i6 %i_1, %j, !dbg !999           ; [#uses=1 type=i6] [debug line = 194:7]
  %tmp_768 = zext i6 %tmp_767 to i64, !dbg !999   ; [#uses=1 type=i64] [debug line = 194:7]
  %t_addr_11 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_768, !dbg !999 ; [#uses=2 type=i32*] [debug line = 194:7]
  %t_load_3 = load i32* %t_addr_11, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_769 = add i32 %t_load_3, %tmp_766, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %tmp_769, i32* %t_addr_11, align 4, !dbg !999 ; [debug line = 194:7]
  call void @llvm.dbg.value(metadata !{i6 %j_1}, i64 0, metadata !1003), !dbg !1002 ; [debug line = 193:18] [debug variable = j]
  br label %.preheader4, !dbg !1002               ; [debug line = 193:18]

.preheader:                                       ; preds = %4, %.preheader.preheader
  %i_2 = phi i6 [ %i_41, %4 ], [ -32, %.preheader.preheader ] ; [#uses=4 type=i6]
  %exitcond = icmp eq i6 %i_2, -1, !dbg !997      ; [#uses=1 type=i1] [debug line = 196:7]
  %empty_57 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %5, label %4, !dbg !997  ; [debug line = 196:7]

; <label>:4                                       ; preds = %.preheader
  %tmp_761 = xor i6 %i_2, -32, !dbg !1004         ; [#uses=1 type=i6] [debug line = 197:5]
  %tmp_762 = zext i6 %tmp_761 to i64, !dbg !1004  ; [#uses=2 type=i64] [debug line = 197:5]
  %t_addr_9 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_762, !dbg !1004 ; [#uses=1 type=i32*] [debug line = 197:5]
  %t_load_1 = load i32* %t_addr_9, align 4, !dbg !1004 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp_763 = zext i6 %i_2 to i64, !dbg !1005      ; [#uses=1 type=i64] [debug line = 197:28]
  %t_addr_10 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_763, !dbg !1005 ; [#uses=1 type=i32*] [debug line = 197:28]
  %t_load_2 = load i32* %t_addr_10, align 4, !dbg !1005 ; [#uses=1 type=i32] [debug line = 197:28]
  call void @llvm.dbg.value(metadata !{i32 %t_load_2}, i64 0, metadata !1006), !dbg !1008 ; [debug line = 28:44@197:28] [debug variable = a]
  %tmp2_i = mul i32 %t_load_2, 38, !dbg !1009     ; [#uses=1 type=i32] [debug line = 30:3@197:28]
  %tmp_764 = add i32 %t_load_1, %tmp2_i, !dbg !1005 ; [#uses=1 type=i32] [debug line = 197:28]
  %r_v_addr_7 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_762, !dbg !1005 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %tmp_764, i32* %r_v_addr_7, align 4, !dbg !1005 ; [debug line = 197:28]
  %i_41 = add i6 %i_2, 1, !dbg !1011              ; [#uses=1 type=i6] [debug line = 196:17]
  call void @llvm.dbg.value(metadata !{i6 %i_41}, i64 0, metadata !995), !dbg !1011 ; [debug line = 196:17] [debug variable = i]
  br label %.preheader, !dbg !1011                ; [debug line = 196:17]

; <label>:5                                       ; preds = %.preheader
  %t_addr_8 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 31, !dbg !1012 ; [#uses=1 type=i32*] [debug line = 198:3]
  %t_load = load i32* %t_addr_8, align 4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 198:3]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !1012 ; [#uses=3 type=i32*] [debug line = 198:3]
  store i32 %t_load, i32* %r_v_addr, align 4, !dbg !1012 ; [debug line = 198:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1013), !dbg !1017 ; [debug line = 53:57@200:3] [debug variable = r.v]
  %r_v_addr_10 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !1018 ; [#uses=2 type=i32*] [debug line = 63:5@200:3]
  br label %.loopexit, !dbg !1022                 ; [debug line = 58:7@200:3]

.loopexit.loopexit:                               ; preds = %7
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5
  %rep_i = phi i2 [ 0, %5 ], [ %rep, %.loopexit.loopexit ] ; [#uses=2 type=i2]
  %exitcond1_i = icmp eq i2 %rep_i, -2, !dbg !1022 ; [#uses=1 type=i1] [debug line = 58:7@200:3]
  %empty_58 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) ; [#uses=0 type=i32]
  %rep = add i2 %rep_i, 1, !dbg !1023             ; [#uses=1 type=i2] [debug line = 58:19@200:3]
  call void @llvm.dbg.value(metadata !{i2 %rep}, i64 0, metadata !1024), !dbg !1023 ; [debug line = 58:19@200:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_mul.exit, label %6, !dbg !1022 ; [debug line = 58:7@200:3]

; <label>:6                                       ; preds = %.loopexit
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !1025 ; [#uses=2 type=i32] [debug line = 60:5@200:3]
  %tmp_770 = trunc i32 %r_v_load to i7, !dbg !1025 ; [#uses=1 type=i7] [debug line = 60:5@200:3]
  %tmp_757 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load, i32 7, i32 31), !dbg !1025 ; [#uses=1 type=i25] [debug line = 60:5@200:3]
  %t_20_cast = zext i25 %tmp_757 to i31, !dbg !1025 ; [#uses=1 type=i31] [debug line = 60:5@200:3]
  %tmp_i_cast = zext i7 %tmp_770 to i32, !dbg !1026 ; [#uses=1 type=i32] [debug line = 61:5@200:3]
  store i32 %tmp_i_cast, i32* %r_v_addr, align 4, !dbg !1026 ; [debug line = 61:5@200:3]
  %t_5 = mul i31 19, %t_20_cast, !dbg !1027       ; [#uses=1 type=i31] [debug line = 25:3@62:9@200:3]
  %t_18_cast6 = zext i31 %t_5 to i32, !dbg !1027  ; [#uses=1 type=i32] [debug line = 25:3@62:9@200:3]
  call void @llvm.dbg.value(metadata !{i31 %t_5}, i64 0, metadata !1029), !dbg !1028 ; [debug line = 62:9@200:3] [debug variable = t]
  %r_v_load_7 = load i32* %r_v_addr_10, align 4, !dbg !1018 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  %tmp_i = add i32 %t_18_cast6, %r_v_load_7, !dbg !1018 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  store i32 %tmp_i, i32* %r_v_addr_10, align 4, !dbg !1018 ; [debug line = 63:5@200:3]
  br label %7, !dbg !1030                         ; [debug line = 64:9@200:3]

; <label>:7                                       ; preds = %8, %6
  %i_i = phi i5 [ 0, %6 ], [ %i_42, %8 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !1030   ; [#uses=1 type=i1] [debug line = 64:9@200:3]
  %empty_59 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_42 = add i5 %i_i, 1, !dbg !1032              ; [#uses=2 type=i5] [debug line = 67:7@200:3]
  br i1 %exitcond_i, label %.loopexit.loopexit, label %8, !dbg !1030 ; [debug line = 64:9@200:3]

; <label>:8                                       ; preds = %7
  %tmp_755_i = zext i5 %i_i to i64, !dbg !1034    ; [#uses=1 type=i64] [debug line = 66:7@200:3]
  %r_v_addr_11 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_755_i, !dbg !1034 ; [#uses=2 type=i32*] [debug line = 66:7@200:3]
  %r_v_load_8 = load i32* %r_v_addr_11, align 4, !dbg !1034 ; [#uses=2 type=i32] [debug line = 66:7@200:3]
  %tmp_771 = trunc i32 %r_v_load_8 to i8, !dbg !1034 ; [#uses=1 type=i8] [debug line = 66:7@200:3]
  %t_s = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_8, i32 8, i32 31), !dbg !1034 ; [#uses=1 type=i24] [debug line = 66:7@200:3]
  %t_6 = zext i24 %t_s to i32, !dbg !1034         ; [#uses=1 type=i32] [debug line = 66:7@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t_6}, i64 0, metadata !1029), !dbg !1034 ; [debug line = 66:7@200:3] [debug variable = t]
  %tmp_756_i = zext i5 %i_42 to i64, !dbg !1032   ; [#uses=1 type=i64] [debug line = 67:7@200:3]
  %r_v_addr_12 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_756_i, !dbg !1032 ; [#uses=2 type=i32*] [debug line = 67:7@200:3]
  %r_v_load_9 = load i32* %r_v_addr_12, align 4, !dbg !1032 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  %tmp_757_i = add i32 %t_6, %r_v_load_9, !dbg !1032 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  store i32 %tmp_757_i, i32* %r_v_addr_12, align 4, !dbg !1032 ; [debug line = 67:7@200:3]
  %tmp_758_i_cast = zext i8 %tmp_771 to i32, !dbg !1035 ; [#uses=1 type=i32] [debug line = 68:7@200:3]
  store i32 %tmp_758_i_cast, i32* %r_v_addr_11, align 4, !dbg !1035 ; [debug line = 68:7@200:3]
  call void @llvm.dbg.value(metadata !{i5 %i_42}, i64 0, metadata !1036), !dbg !1037 ; [debug line = 64:18@200:3] [debug variable = i]
  br label %7, !dbg !1037                         ; [debug line = 64:18@200:3]

reduce_mul.exit:                                  ; preds = %.loopexit
  ret void, !dbg !1038                            ; [debug line = 201:1]
}

; [#uses=3]
define internal fastcc void @crypto_sign_ed25519_.17([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %y_v) {
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !973), !dbg !976 ; [debug line = 186:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !977), !dbg !979 ; [debug line = 186:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !980), !dbg !982 ; [debug line = 186:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !983), !dbg !988 ; [debug line = 189:17] [debug variable = t]
  br label %1, !dbg !989                          ; [debug line = 190:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_45, %2 ]            ; [#uses=3 type=i6]
  %exitcond3 = icmp eq i6 %i, -1, !dbg !989       ; [#uses=1 type=i1] [debug line = 190:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  %i_45 = add i6 %i, 1, !dbg !991                 ; [#uses=1 type=i6] [debug line = 190:16]
  br i1 %exitcond3, label %.preheader5.preheader, label %2, !dbg !989 ; [debug line = 190:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !992                ; [debug line = 192:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !994             ; [#uses=1 type=i64] [debug line = 190:20]
  %t_addr = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp, !dbg !994 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %t_addr, align 4, !dbg !994   ; [debug line = 190:20]
  call void @llvm.dbg.value(metadata !{i6 %i_45}, i64 0, metadata !995), !dbg !991 ; [debug line = 190:16] [debug variable = i]
  br label %1, !dbg !991                          ; [debug line = 190:16]

.preheader5.loopexit:                             ; preds = %.preheader4
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.loopexit, %.preheader5.preheader
  %i_1 = phi i6 [ %i_46, %.preheader5.loopexit ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i_1, -32, !dbg !992    ; [#uses=1 type=i1] [debug line = 192:7]
  %empty_60 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_46 = add i6 %i_1, 1, !dbg !996               ; [#uses=1 type=i6] [debug line = 192:16]
  call void @llvm.dbg.value(metadata !{i6 %i_46}, i64 0, metadata !995), !dbg !996 ; [debug line = 192:16] [debug variable = i]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !992 ; [debug line = 192:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !997                 ; [debug line = 196:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp_s = zext i6 %i_1 to i64, !dbg !999         ; [#uses=1 type=i64] [debug line = 194:7]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_s, !dbg !999 ; [#uses=1 type=i32*] [debug line = 194:7]
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  br label %.preheader4, !dbg !1001               ; [debug line = 193:9]

.preheader4:                                      ; preds = %3, %.preheader4.preheader
  %j = phi i6 [ %j_2, %3 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !1001     ; [#uses=1 type=i1] [debug line = 193:9]
  %empty_61 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %j_2 = add i6 %j, 1, !dbg !1002                 ; [#uses=1 type=i6] [debug line = 193:18]
  br i1 %exitcond1, label %.preheader5.loopexit, label %3, !dbg !1001 ; [debug line = 193:9]

; <label>:3                                       ; preds = %.preheader4
  %tmp_774 = zext i6 %j to i64, !dbg !999         ; [#uses=1 type=i64] [debug line = 194:7]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp_774, !dbg !999 ; [#uses=1 type=i32*] [debug line = 194:7]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_775 = mul i32 %r_v_load, %y_v_load, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_776 = add i6 %i_1, %j, !dbg !999           ; [#uses=1 type=i6] [debug line = 194:7]
  %tmp_777 = zext i6 %tmp_776 to i64, !dbg !999   ; [#uses=1 type=i64] [debug line = 194:7]
  %t_addr_15 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_777, !dbg !999 ; [#uses=2 type=i32*] [debug line = 194:7]
  %t_load_5 = load i32* %t_addr_15, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_778 = add i32 %t_load_5, %tmp_775, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %tmp_778, i32* %t_addr_15, align 4, !dbg !999 ; [debug line = 194:7]
  call void @llvm.dbg.value(metadata !{i6 %j_2}, i64 0, metadata !1003), !dbg !1002 ; [debug line = 193:18] [debug variable = j]
  br label %.preheader4, !dbg !1002               ; [debug line = 193:18]

.preheader:                                       ; preds = %4, %.preheader.preheader
  %i_2 = phi i6 [ %i_47, %4 ], [ -32, %.preheader.preheader ] ; [#uses=4 type=i6]
  %exitcond = icmp eq i6 %i_2, -1, !dbg !997      ; [#uses=1 type=i1] [debug line = 196:7]
  %empty_62 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %5, label %4, !dbg !997  ; [debug line = 196:7]

; <label>:4                                       ; preds = %.preheader
  %tmp_770 = xor i6 %i_2, -32, !dbg !1004         ; [#uses=1 type=i6] [debug line = 197:5]
  %tmp_771 = zext i6 %tmp_770 to i64, !dbg !1004  ; [#uses=2 type=i64] [debug line = 197:5]
  %t_addr_13 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_771, !dbg !1004 ; [#uses=1 type=i32*] [debug line = 197:5]
  %t_load_3 = load i32* %t_addr_13, align 4, !dbg !1004 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp_772 = zext i6 %i_2 to i64, !dbg !1005      ; [#uses=1 type=i64] [debug line = 197:28]
  %t_addr_14 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_772, !dbg !1005 ; [#uses=1 type=i32*] [debug line = 197:28]
  %t_load_4 = load i32* %t_addr_14, align 4, !dbg !1005 ; [#uses=1 type=i32] [debug line = 197:28]
  call void @llvm.dbg.value(metadata !{i32 %t_load_4}, i64 0, metadata !1006), !dbg !1008 ; [debug line = 28:44@197:28] [debug variable = a]
  %tmp2_i = mul i32 %t_load_4, 38, !dbg !1009     ; [#uses=1 type=i32] [debug line = 30:3@197:28]
  %tmp_773 = add i32 %t_load_3, %tmp2_i, !dbg !1005 ; [#uses=1 type=i32] [debug line = 197:28]
  %r_v_addr_15 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_771, !dbg !1005 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %tmp_773, i32* %r_v_addr_15, align 4, !dbg !1005 ; [debug line = 197:28]
  %i_47 = add i6 %i_2, 1, !dbg !1011              ; [#uses=1 type=i6] [debug line = 196:17]
  call void @llvm.dbg.value(metadata !{i6 %i_47}, i64 0, metadata !995), !dbg !1011 ; [debug line = 196:17] [debug variable = i]
  br label %.preheader, !dbg !1011                ; [debug line = 196:17]

; <label>:5                                       ; preds = %.preheader
  %t_addr_12 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 31, !dbg !1012 ; [#uses=1 type=i32*] [debug line = 198:3]
  %t_load = load i32* %t_addr_12, align 4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 198:3]
  %r_v_addr_13 = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !1012 ; [#uses=3 type=i32*] [debug line = 198:3]
  store i32 %t_load, i32* %r_v_addr_13, align 4, !dbg !1012 ; [debug line = 198:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1013), !dbg !1017 ; [debug line = 53:57@200:3] [debug variable = r.v]
  %r_v_addr_14 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !1018 ; [#uses=2 type=i32*] [debug line = 63:5@200:3]
  br label %.loopexit, !dbg !1022                 ; [debug line = 58:7@200:3]

.loopexit.loopexit:                               ; preds = %7
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5
  %rep_i = phi i2 [ 0, %5 ], [ %rep, %.loopexit.loopexit ] ; [#uses=2 type=i2]
  %exitcond1_i = icmp eq i2 %rep_i, -2, !dbg !1022 ; [#uses=1 type=i1] [debug line = 58:7@200:3]
  %empty_63 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) ; [#uses=0 type=i32]
  %rep = add i2 %rep_i, 1, !dbg !1023             ; [#uses=1 type=i2] [debug line = 58:19@200:3]
  call void @llvm.dbg.value(metadata !{i2 %rep}, i64 0, metadata !1024), !dbg !1023 ; [debug line = 58:19@200:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_mul.exit, label %6, !dbg !1022 ; [debug line = 58:7@200:3]

; <label>:6                                       ; preds = %.loopexit
  %r_v_load_12 = load i32* %r_v_addr_13, align 4, !dbg !1025 ; [#uses=2 type=i32] [debug line = 60:5@200:3]
  %tmp_779 = trunc i32 %r_v_load_12 to i7, !dbg !1025 ; [#uses=1 type=i7] [debug line = 60:5@200:3]
  %tmp_759 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load_12, i32 7, i32 31), !dbg !1025 ; [#uses=1 type=i25] [debug line = 60:5@200:3]
  %t_16_cast = zext i25 %tmp_759 to i31, !dbg !1025 ; [#uses=1 type=i31] [debug line = 60:5@200:3]
  %tmp_i_cast = zext i7 %tmp_779 to i32, !dbg !1026 ; [#uses=1 type=i32] [debug line = 61:5@200:3]
  store i32 %tmp_i_cast, i32* %r_v_addr_13, align 4, !dbg !1026 ; [debug line = 61:5@200:3]
  %t_7 = mul i31 19, %t_16_cast, !dbg !1027       ; [#uses=1 type=i31] [debug line = 25:3@62:9@200:3]
  %t_14_cast6 = zext i31 %t_7 to i32, !dbg !1027  ; [#uses=1 type=i32] [debug line = 25:3@62:9@200:3]
  call void @llvm.dbg.value(metadata !{i31 %t_7}, i64 0, metadata !1029), !dbg !1028 ; [debug line = 62:9@200:3] [debug variable = t]
  %r_v_load_13 = load i32* %r_v_addr_14, align 4, !dbg !1018 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  %tmp_i = add i32 %t_14_cast6, %r_v_load_13, !dbg !1018 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  store i32 %tmp_i, i32* %r_v_addr_14, align 4, !dbg !1018 ; [debug line = 63:5@200:3]
  br label %7, !dbg !1030                         ; [debug line = 64:9@200:3]

; <label>:7                                       ; preds = %8, %6
  %i_i = phi i5 [ 0, %6 ], [ %i_48, %8 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !1030   ; [#uses=1 type=i1] [debug line = 64:9@200:3]
  %empty_64 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_48 = add i5 %i_i, 1, !dbg !1032              ; [#uses=2 type=i5] [debug line = 67:7@200:3]
  br i1 %exitcond_i, label %.loopexit.loopexit, label %8, !dbg !1030 ; [debug line = 64:9@200:3]

; <label>:8                                       ; preds = %7
  %tmp_755_i = zext i5 %i_i to i64, !dbg !1034    ; [#uses=1 type=i64] [debug line = 66:7@200:3]
  %r_v_addr_16 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_755_i, !dbg !1034 ; [#uses=2 type=i32*] [debug line = 66:7@200:3]
  %r_v_load_14 = load i32* %r_v_addr_16, align 4, !dbg !1034 ; [#uses=2 type=i32] [debug line = 66:7@200:3]
  %tmp_780 = trunc i32 %r_v_load_14 to i8, !dbg !1034 ; [#uses=1 type=i8] [debug line = 66:7@200:3]
  %t_s = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_14, i32 8, i32 31), !dbg !1034 ; [#uses=1 type=i24] [debug line = 66:7@200:3]
  %t_8 = zext i24 %t_s to i32, !dbg !1034         ; [#uses=1 type=i32] [debug line = 66:7@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t_8}, i64 0, metadata !1029), !dbg !1034 ; [debug line = 66:7@200:3] [debug variable = t]
  %tmp_756_i = zext i5 %i_48 to i64, !dbg !1032   ; [#uses=1 type=i64] [debug line = 67:7@200:3]
  %r_v_addr_17 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_756_i, !dbg !1032 ; [#uses=2 type=i32*] [debug line = 67:7@200:3]
  %r_v_load_15 = load i32* %r_v_addr_17, align 4, !dbg !1032 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  %tmp_757_i = add i32 %t_8, %r_v_load_15, !dbg !1032 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  store i32 %tmp_757_i, i32* %r_v_addr_17, align 4, !dbg !1032 ; [debug line = 67:7@200:3]
  %tmp_758_i_cast = zext i8 %tmp_780 to i32, !dbg !1035 ; [#uses=1 type=i32] [debug line = 68:7@200:3]
  store i32 %tmp_758_i_cast, i32* %r_v_addr_16, align 4, !dbg !1035 ; [debug line = 68:7@200:3]
  call void @llvm.dbg.value(metadata !{i5 %i_48}, i64 0, metadata !1036), !dbg !1037 ; [debug line = 64:18@200:3] [debug variable = i]
  br label %7, !dbg !1037                         ; [debug line = 64:18@200:3]

reduce_mul.exit:                                  ; preds = %.loopexit
  ret void, !dbg !1038                            ; [debug line = 201:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.16([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %y_v) {
  %t = alloca [32 x i8], align 16                 ; [#uses=2 type=[32 x i8]*]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %t}, metadata !535), !dbg !1039 ; [debug line = 26:17@167:3] [debug variable = t]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1047), !dbg !1049 ; [debug line = 157:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1050), !dbg !1052 ; [debug line = 157:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !1053), !dbg !1055 ; [debug line = 157:159] [debug variable = y.v]
  br label %1, !dbg !1056                         ; [debug line = 160:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_49, %2 ]            ; [#uses=3 type=i6]
  %exitcond1 = icmp eq i6 %i, -32, !dbg !1056     ; [#uses=1 type=i1] [debug line = 160:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_49 = add i6 %i, 1, !dbg !1058                ; [#uses=1 type=i6] [debug line = 160:16]
  br i1 %exitcond1, label %.preheader.preheader, label %2, !dbg !1056 ; [debug line = 160:7]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !1059                ; [debug line = 161:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !1061            ; [#uses=2 type=i64] [debug line = 160:21]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp, !dbg !1061 ; [#uses=2 type=i32*] [debug line = 160:21]
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !1061 ; [#uses=1 type=i32] [debug line = 160:21]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp, !dbg !1061 ; [#uses=1 type=i32*] [debug line = 160:21]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !1061 ; [#uses=1 type=i32] [debug line = 160:21]
  %tmp_s = add i32 %r_v_load, %y_v_load, !dbg !1061 ; [#uses=1 type=i32] [debug line = 160:21]
  store i32 %tmp_s, i32* %r_v_addr, align 4, !dbg !1061 ; [debug line = 160:21]
  call void @llvm.dbg.value(metadata !{i6 %i_49}, i64 0, metadata !1062), !dbg !1058 ; [debug line = 160:16] [debug variable = i]
  br label %1, !dbg !1058                         ; [debug line = 160:16]

.preheader:                                       ; preds = %3, %.preheader.preheader
  %i_1 = phi i5 [ %i_50, %3 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i5]
  %exitcond = icmp eq i5 %i_1, -1, !dbg !1059     ; [#uses=1 type=i1] [debug line = 161:7]
  %empty_65 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_50 = add i5 %i_1, 1, !dbg !1063              ; [#uses=2 type=i5] [debug line = 164:5]
  br i1 %exitcond, label %.preheader1.preheader, label %3, !dbg !1059 ; [debug line = 161:7]

.preheader1.preheader:                            ; preds = %.preheader
  %mask = alloca i2                               ; [#uses=2 type=i2*]
  call void @llvm.dbg.declare(metadata !{i2* %mask}, metadata !1065) ; [debug variable = mask]
  br label %.preheader1, !dbg !1066               ; [debug line = 35:3@167:3]

; <label>:3                                       ; preds = %.preheader
  %tmp_779 = zext i5 %i_1 to i64, !dbg !1067      ; [#uses=1 type=i64] [debug line = 163:5]
  %r_v_addr_18 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_779, !dbg !1067 ; [#uses=2 type=i32*] [debug line = 163:5]
  %r_v_load_16 = load i32* %r_v_addr_18, align 4, !dbg !1067 ; [#uses=2 type=i32] [debug line = 163:5]
  %tmp_782 = trunc i32 %r_v_load_16 to i8, !dbg !1067 ; [#uses=1 type=i8] [debug line = 163:5]
  %carry = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_16, i32 8, i32 31), !dbg !1067 ; [#uses=1 type=i24] [debug line = 163:5]
  %carry_1 = zext i24 %carry to i32, !dbg !1067   ; [#uses=1 type=i32] [debug line = 163:5]
  call void @llvm.dbg.value(metadata !{i32 %carry_1}, i64 0, metadata !1068), !dbg !1067 ; [debug line = 163:5] [debug variable = carry]
  %tmp_780 = zext i5 %i_50 to i64, !dbg !1063     ; [#uses=1 type=i64] [debug line = 164:5]
  %r_v_addr_19 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_780, !dbg !1063 ; [#uses=2 type=i32*] [debug line = 164:5]
  %r_v_load_17 = load i32* %r_v_addr_19, align 4, !dbg !1063 ; [#uses=1 type=i32] [debug line = 164:5]
  %tmp_781 = add i32 %carry_1, %r_v_load_17, !dbg !1063 ; [#uses=1 type=i32] [debug line = 164:5]
  store i32 %tmp_781, i32* %r_v_addr_19, align 4, !dbg !1063 ; [debug line = 164:5]
  %tmp_852_cast = zext i8 %tmp_782 to i32, !dbg !1069 ; [#uses=1 type=i32] [debug line = 165:5]
  store i32 %tmp_852_cast, i32* %r_v_addr_18, align 4, !dbg !1069 ; [debug line = 165:5]
  call void @llvm.dbg.value(metadata !{i5 %i_50}, i64 0, metadata !1062), !dbg !1070 ; [debug line = 161:16] [debug variable = i]
  br label %.preheader, !dbg !1070                ; [debug line = 161:16]

.preheader1:                                      ; preds = %4, %.preheader1.preheader
  %pb_i = phi i1 [ %tmp_783, %4 ], [ false, %.preheader1.preheader ] ; [#uses=1 type=i1]
  %i_i = phi i6 [ %i_51, %4 ], [ 0, %.preheader1.preheader ] ; [#uses=3 type=i6]
  %exitcond2_i = icmp eq i6 %i_i, -32, !dbg !1071 ; [#uses=1 type=i1] [debug line = 28:7@167:3]
  %empty_66 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_51 = add i6 %i_i, 1, !dbg !1072              ; [#uses=1 type=i6] [debug line = 28:16@167:3]
  br i1 %exitcond2_i, label %.preheader.i.preheader, label %4, !dbg !1071 ; [debug line = 28:7@167:3]

.preheader.i.preheader:                           ; preds = %.preheader1
  %mask_load = load i2* %mask, !dbg !1066         ; [#uses=1 type=i2] [debug line = 35:3@167:3]
  %mask_cast = sext i2 %mask_load to i32, !dbg !1066 ; [#uses=1 type=i32] [debug line = 35:3@167:3]
  br label %.preheader.i, !dbg !1073              ; [debug line = 36:7@167:3]

; <label>:4                                       ; preds = %.preheader1
  %tmp_i = zext i6 %i_i to i64, !dbg !1074        ; [#uses=3 type=i64] [debug line = 30:5@167:3]
  %m_addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp_i, !dbg !1074 ; [#uses=1 type=i8*] [debug line = 30:5@167:3]
  %m_load = load i8* %m_addr, align 1, !dbg !1074 ; [#uses=1 type=i8] [debug line = 30:5@167:3]
  %pb_i_cast1 = zext i1 %pb_i to i8, !dbg !1066   ; [#uses=1 type=i8] [debug line = 35:3@167:3]
  %pb = add i8 %m_load, %pb_i_cast1, !dbg !1074   ; [#uses=1 type=i8] [debug line = 30:5@167:3]
  %pb_4_cast = zext i8 %pb to i32, !dbg !1074     ; [#uses=1 type=i32] [debug line = 30:5@167:3]
  call void @llvm.dbg.value(metadata !{i8 %pb}, i64 0, metadata !1075), !dbg !1074 ; [debug line = 30:5@167:3] [debug variable = pb]
  %r_v_addr_20 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_i, !dbg !1076 ; [#uses=1 type=i32*] [debug line = 31:9@167:3]
  %x = load i32* %r_v_addr_20, align 4, !dbg !1076 ; [#uses=1 type=i32] [debug line = 31:9@167:3]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !1077), !dbg !1078 ; [debug line = 11:39@31:9@167:3] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i8 %pb}, i64 0, metadata !1079), !dbg !1080 ; [debug line = 11:55@31:9@167:3] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !1081), !dbg !1082 ; [debug line = 13:21@31:9@167:3] [debug variable = x]
  %x_3 = sub i32 %x, %pb_4_cast, !dbg !1083       ; [#uses=2 type=i32] [debug line = 14:3@31:9@167:3]
  call void @llvm.dbg.value(metadata !{i32 %x_3}, i64 0, metadata !1081), !dbg !1083 ; [debug line = 14:3@31:9@167:3] [debug variable = x]
  %tmp_783 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_3, i32 31), !dbg !1084 ; [#uses=2 type=i1] [debug line = 15:3@31:9@167:3]
  %tmp_784 = trunc i32 %x_3 to i8, !dbg !1085     ; [#uses=1 type=i8] [debug line = 32:5@167:3]
  %t_addr = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp_i, !dbg !1085 ; [#uses=1 type=i8*] [debug line = 32:5@167:3]
  store i8 %tmp_784, i8* %t_addr, align 1, !dbg !1085 ; [debug line = 32:5@167:3]
  call void @llvm.dbg.value(metadata !{i6 %i_51}, i64 0, metadata !1086), !dbg !1072 ; [debug line = 28:16@167:3] [debug variable = i]
  %phitmp_i = xor i1 %tmp_783, true, !dbg !1072   ; [#uses=1 type=i1] [debug line = 28:16@167:3]
  %phitmp_i_cast_cast = select i1 %phitmp_i, i2 -1, i2 0, !dbg !1072 ; [#uses=1 type=i2] [debug line = 28:16@167:3]
  store i2 %phitmp_i_cast_cast, i2* %mask
  br label %.preheader1, !dbg !1072               ; [debug line = 28:16@167:3]

.preheader.i:                                     ; preds = %5, %.preheader.i.preheader
  %i_1_i = phi i6 [ %i_52, %5 ], [ 0, %.preheader.i.preheader ] ; [#uses=3 type=i6]
  %exitcond_i = icmp eq i6 %i_1_i, -32, !dbg !1073 ; [#uses=1 type=i1] [debug line = 36:7@167:3]
  %empty_67 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_52 = add i6 %i_1_i, 1, !dbg !1087            ; [#uses=1 type=i6] [debug line = 36:16@167:3]
  br i1 %exitcond_i, label %reduce_add_sub.exit, label %5, !dbg !1073 ; [debug line = 36:7@167:3]

; <label>:5                                       ; preds = %.preheader.i
  %tmp_764_i = zext i6 %i_1_i to i64, !dbg !1088  ; [#uses=2 type=i64] [debug line = 37:5@167:3]
  %r_v_addr_21 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_764_i, !dbg !1088 ; [#uses=2 type=i32*] [debug line = 37:5@167:3]
  %r_v_load_19 = load i32* %r_v_addr_21, align 4, !dbg !1088 ; [#uses=2 type=i32] [debug line = 37:5@167:3]
  %t_addr_5 = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp_764_i, !dbg !1088 ; [#uses=1 type=i8*] [debug line = 37:5@167:3]
  %t_load = load i8* %t_addr_5, align 1, !dbg !1088 ; [#uses=1 type=i8] [debug line = 37:5@167:3]
  %tmp_765_i = zext i8 %t_load to i32, !dbg !1088 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  %tmp_766_i = xor i32 %r_v_load_19, %tmp_765_i, !dbg !1088 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  %tmp_767_i = and i32 %tmp_766_i, %mask_cast, !dbg !1088 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  %tmp_768_i = xor i32 %r_v_load_19, %tmp_767_i, !dbg !1088 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  store i32 %tmp_768_i, i32* %r_v_addr_21, align 4, !dbg !1088 ; [debug line = 37:5@167:3]
  call void @llvm.dbg.value(metadata !{i6 %i_52}, i64 0, metadata !1086), !dbg !1087 ; [debug line = 36:16@167:3] [debug variable = i]
  br label %.preheader.i, !dbg !1087              ; [debug line = 36:16@167:3]

reduce_add_sub.exit:                              ; preds = %.preheader.i
  ret void, !dbg !1089                            ; [debug line = 168:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.15([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %y_v) {
  %t = alloca [64 x i32], align 16                ; [#uses=5 type=[64 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1090), !dbg !1093 ; [debug line = 183:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1094), !dbg !1096 ; [debug line = 183:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !1097), !dbg !1099 ; [debug line = 183:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !1100), !dbg !1103 ; [debug line = 186:17] [debug variable = t]
  br label %1, !dbg !1104                         ; [debug line = 187:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i7 [ 0, %0 ], [ %i_53, %2 ]            ; [#uses=3 type=i7]
  %exitcond3 = icmp eq i7 %i, -64, !dbg !1104     ; [#uses=1 type=i1] [debug line = 187:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  %i_53 = add i7 %i, 1, !dbg !1106                ; [#uses=1 type=i7] [debug line = 187:16]
  br i1 %exitcond3, label %.preheader5.preheader, label %2, !dbg !1104 ; [debug line = 187:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !1107               ; [debug line = 189:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i7 %i to i64, !dbg !1109            ; [#uses=1 type=i64] [debug line = 187:20]
  %t_addr = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp, !dbg !1109 ; [#uses=1 type=i32*] [debug line = 187:20]
  store i32 0, i32* %t_addr, align 4, !dbg !1109  ; [debug line = 187:20]
  call void @llvm.dbg.value(metadata !{i7 %i_53}, i64 0, metadata !1110), !dbg !1106 ; [debug line = 187:16] [debug variable = i]
  br label %1, !dbg !1106                         ; [debug line = 187:16]

.preheader5.loopexit:                             ; preds = %.preheader4
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.loopexit, %.preheader5.preheader
  %i_1 = phi i6 [ %i_54, %.preheader5.loopexit ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i_1, -32, !dbg !1107   ; [#uses=1 type=i1] [debug line = 189:7]
  %empty_68 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_54 = add i6 %i_1, 1, !dbg !1111              ; [#uses=1 type=i6] [debug line = 189:16]
  call void @llvm.dbg.value(metadata !{i6 %i_54}, i64 0, metadata !1110), !dbg !1111 ; [debug line = 189:16] [debug variable = i]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !1107 ; [debug line = 189:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !1112                ; [debug line = 194:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp_s = zext i6 %i_1 to i64, !dbg !1114        ; [#uses=1 type=i64] [debug line = 191:7]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_s, !dbg !1114 ; [#uses=1 type=i32*] [debug line = 191:7]
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !1114 ; [#uses=1 type=i32] [debug line = 191:7]
  br label %.preheader4, !dbg !1116               ; [debug line = 190:9]

.preheader4:                                      ; preds = %3, %.preheader4.preheader
  %j = phi i6 [ %j_1, %3 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !1116     ; [#uses=1 type=i1] [debug line = 190:9]
  %empty_69 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %j_1 = add i6 %j, 1, !dbg !1117                 ; [#uses=1 type=i6] [debug line = 190:18]
  br i1 %exitcond1, label %.preheader5.loopexit, label %3, !dbg !1116 ; [debug line = 190:9]

; <label>:3                                       ; preds = %.preheader4
  %tmp_785 = zext i6 %j to i64, !dbg !1114        ; [#uses=1 type=i64] [debug line = 191:7]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp_785, !dbg !1114 ; [#uses=1 type=i32*] [debug line = 191:7]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !1114 ; [#uses=1 type=i32] [debug line = 191:7]
  %tmp_786 = mul i32 %r_v_load, %y_v_load, !dbg !1114 ; [#uses=1 type=i32] [debug line = 191:7]
  %tmp_787 = add i6 %i_1, %j, !dbg !1114          ; [#uses=1 type=i6] [debug line = 191:7]
  %tmp_788 = zext i6 %tmp_787 to i64, !dbg !1114  ; [#uses=1 type=i64] [debug line = 191:7]
  %t_addr_4 = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp_788, !dbg !1114 ; [#uses=2 type=i32*] [debug line = 191:7]
  %t_load_2 = load i32* %t_addr_4, align 4, !dbg !1114 ; [#uses=1 type=i32] [debug line = 191:7]
  %tmp_789 = add i32 %t_load_2, %tmp_786, !dbg !1114 ; [#uses=1 type=i32] [debug line = 191:7]
  store i32 %tmp_789, i32* %t_addr_4, align 4, !dbg !1114 ; [debug line = 191:7]
  call void @llvm.dbg.value(metadata !{i6 %j_1}, i64 0, metadata !1118), !dbg !1117 ; [debug line = 190:18] [debug variable = j]
  br label %.preheader4, !dbg !1117               ; [debug line = 190:18]

.preheader:                                       ; preds = %4, %.preheader.preheader
  %i_2 = phi i6 [ %i_55, %4 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i_2, -1, !dbg !1112     ; [#uses=1 type=i1] [debug line = 194:7]
  %empty_70 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  %i_55 = add i6 %i_2, 1, !dbg !1119              ; [#uses=2 type=i6] [debug line = 197:5]
  br i1 %exitcond, label %5, label %4, !dbg !1112 ; [debug line = 194:7]

; <label>:4                                       ; preds = %.preheader
  %tmp_782 = zext i6 %i_2 to i64, !dbg !1121      ; [#uses=1 type=i64] [debug line = 196:5]
  %t_addr_2 = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp_782, !dbg !1121 ; [#uses=2 type=i32*] [debug line = 196:5]
  %t_load = load i32* %t_addr_2, align 4, !dbg !1121 ; [#uses=2 type=i32] [debug line = 196:5]
  %tmp_790 = trunc i32 %t_load to i8, !dbg !1121  ; [#uses=1 type=i8] [debug line = 196:5]
  %carry = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %t_load, i32 8, i32 31), !dbg !1121 ; [#uses=1 type=i24] [debug line = 196:5]
  %carry_2 = zext i24 %carry to i32, !dbg !1121   ; [#uses=1 type=i32] [debug line = 196:5]
  call void @llvm.dbg.value(metadata !{i32 %carry_2}, i64 0, metadata !1122), !dbg !1121 ; [debug line = 196:5] [debug variable = carry]
  %tmp_783 = zext i6 %i_55 to i64, !dbg !1119     ; [#uses=1 type=i64] [debug line = 197:5]
  %t_addr_3 = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp_783, !dbg !1119 ; [#uses=2 type=i32*] [debug line = 197:5]
  %t_load_1 = load i32* %t_addr_3, align 4, !dbg !1119 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp_784 = add i32 %carry_2, %t_load_1, !dbg !1119 ; [#uses=1 type=i32] [debug line = 197:5]
  store i32 %tmp_784, i32* %t_addr_3, align 4, !dbg !1119 ; [debug line = 197:5]
  %tmp_843_cast = zext i8 %tmp_790 to i32, !dbg !1123 ; [#uses=1 type=i32] [debug line = 198:5]
  store i32 %tmp_843_cast, i32* %t_addr_2, align 4, !dbg !1123 ; [debug line = 198:5]
  call void @llvm.dbg.value(metadata !{i6 %i_55}, i64 0, metadata !1110), !dbg !1124 ; [debug line = 194:16] [debug variable = i]
  br label %.preheader, !dbg !1124                ; [debug line = 194:16]

; <label>:5                                       ; preds = %.preheader
  call fastcc void @barrett_reduce([32 x i32]* %r_v, [64 x i32]* %t), !dbg !1125 ; [debug line = 201:3]
  ret void, !dbg !1126                            ; [debug line = 202:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.14([85 x i8]* nocapture %r, [32 x i32]* nocapture %s_v) {
  call void @llvm.dbg.value(metadata !{[85 x i8]* %r}, i64 0, metadata !1127), !dbg !1136 ; [debug line = 211:58] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %s_v}, i64 0, metadata !1137), !dbg !1139 ; [debug line = 211:104] [debug variable = s.v]
  br label %1, !dbg !1140                         ; [debug line = 215:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i4 [ 0, %0 ], [ %tmp_782, %2 ]         ; [#uses=5 type=i4]
  %i_cast = zext i4 %i to i7, !dbg !1140          ; [#uses=1 type=i7] [debug line = 215:7]
  %exitcond1 = icmp eq i4 %i, -6, !dbg !1140      ; [#uses=1 type=i1] [debug line = 215:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  %tmp_782 = add i4 %i, 1, !dbg !1143             ; [#uses=1 type=i4] [debug line = 215:16]
  br i1 %exitcond1, label %3, label %2, !dbg !1140 ; [debug line = 215:7]

; <label>:2                                       ; preds = %1
  %p_shl = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %i, i2 0), !dbg !1144 ; [#uses=1 type=i6] [debug line = 217:5]
  %p_shl_cast = zext i6 %p_shl to i7, !dbg !1144  ; [#uses=1 type=i7] [debug line = 217:5]
  %tmp_749 = sub i7 %p_shl_cast, %i_cast, !dbg !1144 ; [#uses=3 type=i7] [debug line = 217:5]
  %tmp_776_cast = sext i7 %tmp_749 to i32, !dbg !1144 ; [#uses=1 type=i32] [debug line = 217:5]
  %tmp_750 = zext i32 %tmp_776_cast to i64, !dbg !1144 ; [#uses=1 type=i64] [debug line = 217:5]
  %s_v_addr_2 = getelementptr [32 x i32]* %s_v, i64 0, i64 %tmp_750, !dbg !1144 ; [#uses=1 type=i32*] [debug line = 217:5]
  %s_v_load_2 = load i32* %s_v_addr_2, align 4, !dbg !1144 ; [#uses=3 type=i32] [debug line = 217:5]
  %tmp_792 = trunc i32 %s_v_load_2 to i3, !dbg !1144 ; [#uses=1 type=i3] [debug line = 217:5]
  %tmp_779_cast = zext i3 %tmp_792 to i8, !dbg !1144 ; [#uses=1 type=i8] [debug line = 217:5]
  %tmp_751 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i, i3 0), !dbg !1144 ; [#uses=8 type=i7] [debug line = 217:5]
  %tmp_752 = zext i7 %tmp_751 to i64, !dbg !1144  ; [#uses=1 type=i64] [debug line = 217:5]
  %r_addr_5 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_752, !dbg !1144 ; [#uses=1 type=i8*] [debug line = 217:5]
  store i8 %tmp_779_cast, i8* %r_addr_5, align 1, !dbg !1144 ; [debug line = 217:5]
  %tmp_783_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_2, i32 3, i32 5), !dbg !1146 ; [#uses=1 type=i3] [debug line = 218:5]
  %tmp_784_cast = zext i3 %tmp_783_cast to i8, !dbg !1146 ; [#uses=1 type=i8] [debug line = 218:5]
  %tmp_754 = or i7 %tmp_751, 1, !dbg !1146        ; [#uses=1 type=i7] [debug line = 218:5]
  %tmp_755 = zext i7 %tmp_754 to i64, !dbg !1146  ; [#uses=1 type=i64] [debug line = 218:5]
  %r_addr_6 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_755, !dbg !1146 ; [#uses=1 type=i8*] [debug line = 218:5]
  store i8 %tmp_784_cast, i8* %r_addr_6, align 1, !dbg !1146 ; [debug line = 218:5]
  %tmp_788_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_2, i32 6, i32 8), !dbg !1147 ; [#uses=1 type=i3] [debug line = 219:5]
  %tmp_757 = or i7 %tmp_751, 2, !dbg !1147        ; [#uses=1 type=i7] [debug line = 219:5]
  %tmp_758 = zext i7 %tmp_757 to i64, !dbg !1147  ; [#uses=1 type=i64] [debug line = 219:5]
  %r_addr_7 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_758, !dbg !1147 ; [#uses=1 type=i8*] [debug line = 219:5]
  %tmp_759 = add i7 1, %tmp_749, !dbg !1148       ; [#uses=1 type=i7] [debug line = 220:5]
  %tmp_792_cast = sext i7 %tmp_759 to i32, !dbg !1148 ; [#uses=1 type=i32] [debug line = 220:5]
  %tmp_760 = zext i32 %tmp_792_cast to i64, !dbg !1148 ; [#uses=1 type=i64] [debug line = 220:5]
  %s_v_addr_3 = getelementptr [32 x i32]* %s_v, i64 0, i64 %tmp_760, !dbg !1148 ; [#uses=1 type=i32*] [debug line = 220:5]
  %s_v_load_3 = load i32* %s_v_addr_3, align 4, !dbg !1148 ; [#uses=4 type=i32] [debug line = 220:5]
  %tmp_793 = trunc i32 %s_v_load_3 to i1          ; [#uses=1 type=i1]
  %tmp_761 = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 %tmp_793, i2 0), !dbg !1148 ; [#uses=1 type=i3] [debug line = 220:5]
  %tmp_762 = xor i3 %tmp_761, %tmp_788_cast, !dbg !1148 ; [#uses=1 type=i3] [debug line = 220:5]
  %tmp_797_cast = zext i3 %tmp_762 to i8, !dbg !1148 ; [#uses=1 type=i8] [debug line = 220:5]
  store i8 %tmp_797_cast, i8* %r_addr_7, align 1, !dbg !1148 ; [debug line = 220:5]
  %tmp_799_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_3, i32 1, i32 3), !dbg !1149 ; [#uses=1 type=i3] [debug line = 221:5]
  %tmp_800_cast = zext i3 %tmp_799_cast to i8, !dbg !1149 ; [#uses=1 type=i8] [debug line = 221:5]
  %tmp_764 = or i7 %tmp_751, 3, !dbg !1149        ; [#uses=1 type=i7] [debug line = 221:5]
  %tmp_765 = zext i7 %tmp_764 to i64, !dbg !1149  ; [#uses=1 type=i64] [debug line = 221:5]
  %r_addr_8 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_765, !dbg !1149 ; [#uses=1 type=i8*] [debug line = 221:5]
  store i8 %tmp_800_cast, i8* %r_addr_8, align 1, !dbg !1149 ; [debug line = 221:5]
  %tmp_804_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_3, i32 4, i32 6), !dbg !1150 ; [#uses=1 type=i3] [debug line = 222:5]
  %tmp_805_cast = zext i3 %tmp_804_cast to i8, !dbg !1150 ; [#uses=1 type=i8] [debug line = 222:5]
  %tmp_767 = or i7 %tmp_751, 4, !dbg !1150        ; [#uses=1 type=i7] [debug line = 222:5]
  %tmp_768 = zext i7 %tmp_767 to i64, !dbg !1150  ; [#uses=1 type=i64] [debug line = 222:5]
  %r_addr_9 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_768, !dbg !1150 ; [#uses=1 type=i8*] [debug line = 222:5]
  store i8 %tmp_805_cast, i8* %r_addr_9, align 1, !dbg !1150 ; [debug line = 222:5]
  %tmp_809_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_3, i32 7, i32 9), !dbg !1151 ; [#uses=1 type=i3] [debug line = 223:5]
  %tmp_770 = or i7 %tmp_751, 5, !dbg !1151        ; [#uses=1 type=i7] [debug line = 223:5]
  %tmp_771 = zext i7 %tmp_770 to i64, !dbg !1151  ; [#uses=1 type=i64] [debug line = 223:5]
  %r_addr_10 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_771, !dbg !1151 ; [#uses=1 type=i8*] [debug line = 223:5]
  %tmp_772 = add i7 2, %tmp_749, !dbg !1152       ; [#uses=1 type=i7] [debug line = 224:5]
  %tmp_813_cast = sext i7 %tmp_772 to i32, !dbg !1152 ; [#uses=1 type=i32] [debug line = 224:5]
  %tmp_773 = zext i32 %tmp_813_cast to i64, !dbg !1152 ; [#uses=1 type=i64] [debug line = 224:5]
  %s_v_addr_4 = getelementptr [32 x i32]* %s_v, i64 0, i64 %tmp_773, !dbg !1152 ; [#uses=1 type=i32*] [debug line = 224:5]
  %s_v_load_4 = load i32* %s_v_addr_4, align 4, !dbg !1152 ; [#uses=3 type=i32] [debug line = 224:5]
  %tmp_794 = trunc i32 %s_v_load_4 to i2          ; [#uses=1 type=i2]
  %tmp_774 = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %tmp_794, i1 false), !dbg !1152 ; [#uses=1 type=i3] [debug line = 224:5]
  %tmp_775 = xor i3 %tmp_774, %tmp_809_cast, !dbg !1152 ; [#uses=1 type=i3] [debug line = 224:5]
  %tmp_818_cast = zext i3 %tmp_775 to i8, !dbg !1152 ; [#uses=1 type=i8] [debug line = 224:5]
  store i8 %tmp_818_cast, i8* %r_addr_10, align 1, !dbg !1152 ; [debug line = 224:5]
  %tmp_820_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_4, i32 2, i32 4), !dbg !1153 ; [#uses=1 type=i3] [debug line = 225:5]
  %tmp_821_cast = zext i3 %tmp_820_cast to i8, !dbg !1153 ; [#uses=1 type=i8] [debug line = 225:5]
  %tmp_777 = or i7 %tmp_751, 6, !dbg !1153        ; [#uses=1 type=i7] [debug line = 225:5]
  %tmp_778 = zext i7 %tmp_777 to i64, !dbg !1153  ; [#uses=1 type=i64] [debug line = 225:5]
  %r_addr_11 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_778, !dbg !1153 ; [#uses=1 type=i8*] [debug line = 225:5]
  store i8 %tmp_821_cast, i8* %r_addr_11, align 1, !dbg !1153 ; [debug line = 225:5]
  %tmp_825_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_4, i32 5, i32 7), !dbg !1154 ; [#uses=1 type=i3] [debug line = 226:5]
  %tmp_826_cast = zext i3 %tmp_825_cast to i8, !dbg !1154 ; [#uses=1 type=i8] [debug line = 226:5]
  %tmp_780 = or i7 %tmp_751, 7, !dbg !1154        ; [#uses=1 type=i7] [debug line = 226:5]
  %tmp_781 = zext i7 %tmp_780 to i64, !dbg !1154  ; [#uses=1 type=i64] [debug line = 226:5]
  %r_addr_12 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_781, !dbg !1154 ; [#uses=1 type=i8*] [debug line = 226:5]
  store i8 %tmp_826_cast, i8* %r_addr_12, align 1, !dbg !1154 ; [debug line = 226:5]
  br label %1, !dbg !1143                         ; [debug line = 215:16]

; <label>:3                                       ; preds = %1
  %s_v_addr = getelementptr [32 x i32]* %s_v, i64 0, i64 30, !dbg !1155 ; [#uses=1 type=i32*] [debug line = 228:3]
  %s_v_load = load i32* %s_v_addr, align 4, !dbg !1155 ; [#uses=3 type=i32] [debug line = 228:3]
  %tmp = trunc i32 %s_v_load to i3, !dbg !1155    ; [#uses=1 type=i3] [debug line = 228:3]
  %tmp_cast = zext i3 %tmp to i8, !dbg !1155      ; [#uses=1 type=i8] [debug line = 228:3]
  %r_addr = getelementptr [85 x i8]* %r, i64 0, i64 80, !dbg !1155 ; [#uses=1 type=i8*] [debug line = 228:3]
  store i8 %tmp_cast, i8* %r_addr, align 1, !dbg !1155 ; [debug line = 228:3]
  %tmp_761_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load, i32 3, i32 5), !dbg !1156 ; [#uses=1 type=i3] [debug line = 229:3]
  %tmp_762_cast = zext i3 %tmp_761_cast to i8, !dbg !1156 ; [#uses=1 type=i8] [debug line = 229:3]
  %r_addr_1 = getelementptr [85 x i8]* %r, i64 0, i64 81, !dbg !1156 ; [#uses=1 type=i8*] [debug line = 229:3]
  store i8 %tmp_762_cast, i8* %r_addr_1, align 1, !dbg !1156 ; [debug line = 229:3]
  %tmp_764_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load, i32 6, i32 8), !dbg !1157 ; [#uses=1 type=i3] [debug line = 230:3]
  %r_addr_2 = getelementptr [85 x i8]* %r, i64 0, i64 82, !dbg !1157 ; [#uses=1 type=i8*] [debug line = 230:3]
  %s_v_addr_1 = getelementptr [32 x i32]* %s_v, i64 0, i64 31, !dbg !1158 ; [#uses=1 type=i32*] [debug line = 231:3]
  %s_v_load_1 = load i32* %s_v_addr_1, align 4, !dbg !1158 ; [#uses=3 type=i32] [debug line = 231:3]
  %tmp_791 = trunc i32 %s_v_load_1 to i1          ; [#uses=1 type=i1]
  %tmp_745 = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 %tmp_791, i2 0), !dbg !1158 ; [#uses=1 type=i3] [debug line = 231:3]
  %tmp_746 = xor i3 %tmp_745, %tmp_764_cast, !dbg !1158 ; [#uses=1 type=i3] [debug line = 231:3]
  %tmp_769_cast = zext i3 %tmp_746 to i8, !dbg !1158 ; [#uses=1 type=i8] [debug line = 231:3]
  store i8 %tmp_769_cast, i8* %r_addr_2, align 1, !dbg !1158 ; [debug line = 231:3]
  %tmp_771_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_1, i32 1, i32 3), !dbg !1159 ; [#uses=1 type=i3] [debug line = 232:3]
  %tmp_772_cast = zext i3 %tmp_771_cast to i8, !dbg !1159 ; [#uses=1 type=i8] [debug line = 232:3]
  %r_addr_3 = getelementptr [85 x i8]* %r, i64 0, i64 83, !dbg !1159 ; [#uses=1 type=i8*] [debug line = 232:3]
  store i8 %tmp_772_cast, i8* %r_addr_3, align 1, !dbg !1159 ; [debug line = 232:3]
  %tmp_774_cast = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %s_v_load_1, i32 4, i32 6), !dbg !1160 ; [#uses=1 type=i3] [debug line = 233:3]
  %tmp_775_cast = zext i3 %tmp_774_cast to i8, !dbg !1160 ; [#uses=1 type=i8] [debug line = 233:3]
  %r_addr_4 = getelementptr [85 x i8]* %r, i64 0, i64 84, !dbg !1160 ; [#uses=3 type=i8*] [debug line = 233:3]
  store i8 %tmp_775_cast, i8* %r_addr_4, align 1, !dbg !1160 ; [debug line = 233:3]
  br label %4, !dbg !1161                         ; [debug line = 237:7]

; <label>:4                                       ; preds = %5, %3
  %carry = phi i1 [ false, %3 ], [ %tmp_796, %5 ] ; [#uses=2 type=i1]
  %i_1 = phi i7 [ 0, %3 ], [ %i_56, %5 ]          ; [#uses=3 type=i7]
  %carry_cast = zext i1 %carry to i8, !dbg !1161  ; [#uses=2 type=i8] [debug line = 237:7]
  %exitcond = icmp eq i7 %i_1, -44, !dbg !1161    ; [#uses=1 type=i1] [debug line = 237:7]
  %empty_71 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 84, i64 84, i64 84) ; [#uses=0 type=i32]
  %i_56 = add i7 %i_1, 1, !dbg !1163              ; [#uses=2 type=i7] [debug line = 240:5]
  br i1 %exitcond, label %6, label %5, !dbg !1161 ; [debug line = 237:7]

; <label>:5                                       ; preds = %4
  %tmp_784 = zext i7 %i_1 to i64, !dbg !1165      ; [#uses=1 type=i64] [debug line = 239:5]
  %r_addr_13 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_784, !dbg !1165 ; [#uses=2 type=i8*] [debug line = 239:5]
  %r_load_1 = load i8* %r_addr_13, align 1, !dbg !1165 ; [#uses=2 type=i8] [debug line = 239:5]
  %tmp_795 = trunc i8 %r_load_1 to i3             ; [#uses=1 type=i3]
  %tmp_77 = zext i1 %carry to i3                  ; [#uses=1 type=i3]
  %tmp_785 = add i8 %carry_cast, %r_load_1, !dbg !1165 ; [#uses=1 type=i8] [debug line = 239:5]
  %tmp_832_cast = add i3 %tmp_795, %tmp_77, !dbg !1163 ; [#uses=2 type=i3] [debug line = 240:5]
  %tmp_9 = call i5 @_ssdm_op_PartSelect.i5.i8.i32.i32(i8 %tmp_785, i32 3, i32 7), !dbg !1163 ; [#uses=1 type=i5] [debug line = 240:5]
  %tmp_786 = zext i7 %i_56 to i64, !dbg !1163     ; [#uses=1 type=i64] [debug line = 240:5]
  %r_addr_14 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp_786, !dbg !1163 ; [#uses=2 type=i8*] [debug line = 240:5]
  %r_load_2 = load i8* %r_addr_14, align 1, !dbg !1163 ; [#uses=1 type=i8] [debug line = 240:5]
  %tmp_787 = sext i5 %tmp_9 to i8, !dbg !1163     ; [#uses=1 type=i8] [debug line = 240:5]
  %tmp_788 = add i8 %tmp_787, %r_load_2, !dbg !1163 ; [#uses=1 type=i8] [debug line = 240:5]
  store i8 %tmp_788, i8* %r_addr_14, align 1, !dbg !1163 ; [debug line = 240:5]
  %tmp_836_cast1 = zext i3 %tmp_832_cast to i5, !dbg !1166 ; [#uses=1 type=i5] [debug line = 241:5]
  %tmp_796 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %tmp_832_cast, i32 2), !dbg !1167 ; [#uses=2 type=i1] [debug line = 242:5]
  %tmp_s = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 %tmp_796, i3 0), !dbg !1168 ; [#uses=1 type=i4] [debug line = 243:5]
  %tmp_838_cast = zext i4 %tmp_s to i5, !dbg !1168 ; [#uses=1 type=i5] [debug line = 243:5]
  %tmp_790 = sub i5 %tmp_836_cast1, %tmp_838_cast, !dbg !1168 ; [#uses=1 type=i5] [debug line = 243:5]
  %tmp_839_cast = sext i5 %tmp_790 to i8, !dbg !1168 ; [#uses=1 type=i8] [debug line = 243:5]
  store i8 %tmp_839_cast, i8* %r_addr_13, align 1, !dbg !1168 ; [debug line = 243:5]
  call void @llvm.dbg.value(metadata !{i7 %i_56}, i64 0, metadata !1169), !dbg !1170 ; [debug line = 237:16] [debug variable = i]
  br label %4, !dbg !1170                         ; [debug line = 237:16]

; <label>:6                                       ; preds = %4
  %r_load = load i8* %r_addr_4, align 1, !dbg !1171 ; [#uses=1 type=i8] [debug line = 245:3]
  %tmp_783 = add i8 %r_load, %carry_cast, !dbg !1171 ; [#uses=1 type=i8] [debug line = 245:3]
  store i8 %tmp_783, i8* %r_addr_4, align 1, !dbg !1171 ; [debug line = 245:3]
  ret void, !dbg !1172                            ; [debug line = 246:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.13([32 x i32]* %r_x_v, [32 x i32]* %r_y_v, [32 x i32]* nocapture %r_z_v, [32 x i32]* nocapture %r_t_v, [32 x i32]* nocapture %s_v) {
  %a_v = alloca [32 x i32], align 4               ; [#uses=4 type=[32 x i32]*]
  %b_v = alloca [32 x i32], align 4               ; [#uses=4 type=[32 x i32]*]
  %t1_v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %t2_v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %c_v = alloca [32 x i32], align 4               ; [#uses=4 type=[32 x i32]*]
  %d_v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %e_v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %f_v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %g_v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %h_v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %qt_v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %b = alloca [85 x i8], align 16                 ; [#uses=3 type=[85 x i8]*]
  %t_x_v = alloca [32 x i32], align 4             ; [#uses=4 type=[32 x i32]*]
  %t_y_v = alloca [32 x i32], align 4             ; [#uses=4 type=[32 x i32]*]
  %r_temp_x_v = alloca [32 x i32], align 4        ; [#uses=33 type=[32 x i32]*]
  %r_temp_y_v = alloca [32 x i32], align 4        ; [#uses=33 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_x_v}, i64 0, metadata !1173), !dbg !1202 ; [debug line = 297:79] [debug variable = r.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_y_v}, i64 0, metadata !1203), !dbg !1202 ; [debug line = 297:79] [debug variable = r.y.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_z_v}, i64 0, metadata !1204), !dbg !1202 ; [debug line = 297:79] [debug variable = r.z.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_t_v}, i64 0, metadata !1205), !dbg !1202 ; [debug line = 297:79] [debug variable = r.t.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %s_v}, i64 0, metadata !1206), !dbg !1210 ; [debug line = 297:121] [debug variable = s.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t_x_v}, metadata !1211), !dbg !1220 ; [debug line = 301:15] [debug variable = t.x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t_y_v}, metadata !1221), !dbg !1220 ; [debug line = 301:15] [debug variable = t.y.v]
  %b_addr = getelementptr inbounds [85 x i8]* %b, i64 0, i64 0, !dbg !1222 ; [#uses=1 type=i8*] [debug line = 302:3]
  call fastcc void @crypto_sign_ed25519_.14([85 x i8]* %b, [32 x i32]* %s_v), !dbg !1222 ; [debug line = 302:3]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %r_temp_x_v}, metadata !1223), !dbg !1225 ; [debug line = 304:15] [debug variable = r_temp.x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %r_temp_y_v}, metadata !1226), !dbg !1225 ; [debug line = 304:15] [debug variable = r_temp.y.v]
  %r_temp_x_v_addr = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 0, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr = getelementptr [32 x i32]* %r_x_v, i64 0, i64 0, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load = load i32* %r_x_v_addr, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load, i32* %r_temp_x_v_addr, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_1 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 1, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_1 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 1, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_1 = load i32* %r_x_v_addr_1, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_1, i32* %r_temp_x_v_addr_1, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_2 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 2, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_2 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 2, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_2 = load i32* %r_x_v_addr_2, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_2, i32* %r_temp_x_v_addr_2, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_3 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 3, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_3 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 3, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_3 = load i32* %r_x_v_addr_3, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_3, i32* %r_temp_x_v_addr_3, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_4 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 4, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_4 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 4, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_4 = load i32* %r_x_v_addr_4, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_4, i32* %r_temp_x_v_addr_4, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_5 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 5, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_5 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 5, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_5 = load i32* %r_x_v_addr_5, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_5, i32* %r_temp_x_v_addr_5, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_6 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 6, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_6 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 6, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_6 = load i32* %r_x_v_addr_6, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_6, i32* %r_temp_x_v_addr_6, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_7 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 7, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_7 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 7, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_7 = load i32* %r_x_v_addr_7, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_7, i32* %r_temp_x_v_addr_7, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_8 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 8, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_8 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 8, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_8 = load i32* %r_x_v_addr_8, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_8, i32* %r_temp_x_v_addr_8, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_9 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 9, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_9 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 9, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_9 = load i32* %r_x_v_addr_9, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_9, i32* %r_temp_x_v_addr_9, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_10 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 10, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_10 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 10, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_10 = load i32* %r_x_v_addr_10, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_10, i32* %r_temp_x_v_addr_10, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_11 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 11, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_11 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 11, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_11 = load i32* %r_x_v_addr_11, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_11, i32* %r_temp_x_v_addr_11, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_12 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 12, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_12 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 12, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_12 = load i32* %r_x_v_addr_12, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_12, i32* %r_temp_x_v_addr_12, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_13 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 13, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_13 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 13, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_13 = load i32* %r_x_v_addr_13, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_13, i32* %r_temp_x_v_addr_13, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_14 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 14, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_14 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 14, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_14 = load i32* %r_x_v_addr_14, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_14, i32* %r_temp_x_v_addr_14, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_15 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 15, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_15 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 15, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_15 = load i32* %r_x_v_addr_15, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_15, i32* %r_temp_x_v_addr_15, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_16 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 16, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_16 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 16, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_16 = load i32* %r_x_v_addr_16, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_16, i32* %r_temp_x_v_addr_16, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_17 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 17, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_17 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 17, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_17 = load i32* %r_x_v_addr_17, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_17, i32* %r_temp_x_v_addr_17, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_18 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 18, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_18 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 18, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_18 = load i32* %r_x_v_addr_18, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_18, i32* %r_temp_x_v_addr_18, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_19 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 19, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_19 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 19, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_19 = load i32* %r_x_v_addr_19, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_19, i32* %r_temp_x_v_addr_19, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_20 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 20, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_20 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 20, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_20 = load i32* %r_x_v_addr_20, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_20, i32* %r_temp_x_v_addr_20, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_21 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 21, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_21 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 21, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_21 = load i32* %r_x_v_addr_21, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_21, i32* %r_temp_x_v_addr_21, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_22 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 22, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_22 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 22, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_22 = load i32* %r_x_v_addr_22, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_22, i32* %r_temp_x_v_addr_22, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_23 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 23, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_23 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 23, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_23 = load i32* %r_x_v_addr_23, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_23, i32* %r_temp_x_v_addr_23, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_24 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 24, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_24 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 24, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_24 = load i32* %r_x_v_addr_24, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_24, i32* %r_temp_x_v_addr_24, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_25 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 25, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_25 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 25, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_25 = load i32* %r_x_v_addr_25, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_25, i32* %r_temp_x_v_addr_25, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_26 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 26, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_26 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 26, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_26 = load i32* %r_x_v_addr_26, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_26, i32* %r_temp_x_v_addr_26, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_27 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 27, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_27 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 27, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_27 = load i32* %r_x_v_addr_27, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_27, i32* %r_temp_x_v_addr_27, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_28 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 28, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_28 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 28, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_28 = load i32* %r_x_v_addr_28, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_28, i32* %r_temp_x_v_addr_28, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_29 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 29, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_29 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 29, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_29 = load i32* %r_x_v_addr_29, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_29, i32* %r_temp_x_v_addr_29, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_30 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 30, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_30 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 30, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_30 = load i32* %r_x_v_addr_30, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_30, i32* %r_temp_x_v_addr_30, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_x_v_addr_31 = getelementptr [32 x i32]* %r_temp_x_v, i64 0, i64 31, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_addr_31 = getelementptr [32 x i32]* %r_x_v, i64 0, i64 31, !dbg !1227 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r_x_v_load_31 = load i32* %r_x_v_addr_31, align 4, !dbg !1227 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r_x_v_load_31, i32* %r_temp_x_v_addr_31, align 4, !dbg !1227 ; [debug line = 305:3]
  %r_temp_y_v_addr = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 0, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr = getelementptr [32 x i32]* %r_y_v, i64 0, i64 0, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load = load i32* %r_y_v_addr, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load, i32* %r_temp_y_v_addr, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_1 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 1, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_1 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 1, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_1 = load i32* %r_y_v_addr_1, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_1, i32* %r_temp_y_v_addr_1, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_2 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 2, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_2 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 2, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_2 = load i32* %r_y_v_addr_2, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_2, i32* %r_temp_y_v_addr_2, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_3 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 3, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_3 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 3, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_3 = load i32* %r_y_v_addr_3, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_3, i32* %r_temp_y_v_addr_3, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_4 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 4, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_4 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 4, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_4 = load i32* %r_y_v_addr_4, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_4, i32* %r_temp_y_v_addr_4, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_5 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 5, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_5 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 5, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_5 = load i32* %r_y_v_addr_5, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_5, i32* %r_temp_y_v_addr_5, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_6 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 6, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_6 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 6, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_6 = load i32* %r_y_v_addr_6, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_6, i32* %r_temp_y_v_addr_6, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_7 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 7, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_7 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 7, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_7 = load i32* %r_y_v_addr_7, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_7, i32* %r_temp_y_v_addr_7, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_8 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 8, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_8 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 8, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_8 = load i32* %r_y_v_addr_8, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_8, i32* %r_temp_y_v_addr_8, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_9 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 9, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_9 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 9, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_9 = load i32* %r_y_v_addr_9, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_9, i32* %r_temp_y_v_addr_9, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_10 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 10, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_10 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 10, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_10 = load i32* %r_y_v_addr_10, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_10, i32* %r_temp_y_v_addr_10, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_11 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 11, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_11 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 11, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_11 = load i32* %r_y_v_addr_11, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_11, i32* %r_temp_y_v_addr_11, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_12 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 12, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_12 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 12, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_12 = load i32* %r_y_v_addr_12, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_12, i32* %r_temp_y_v_addr_12, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_13 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 13, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_13 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 13, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_13 = load i32* %r_y_v_addr_13, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_13, i32* %r_temp_y_v_addr_13, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_14 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 14, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_14 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 14, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_14 = load i32* %r_y_v_addr_14, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_14, i32* %r_temp_y_v_addr_14, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_15 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 15, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_15 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 15, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_15 = load i32* %r_y_v_addr_15, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_15, i32* %r_temp_y_v_addr_15, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_16 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 16, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_16 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 16, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_16 = load i32* %r_y_v_addr_16, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_16, i32* %r_temp_y_v_addr_16, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_17 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 17, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_17 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 17, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_17 = load i32* %r_y_v_addr_17, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_17, i32* %r_temp_y_v_addr_17, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_18 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 18, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_18 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 18, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_18 = load i32* %r_y_v_addr_18, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_18, i32* %r_temp_y_v_addr_18, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_19 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 19, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_19 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 19, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_19 = load i32* %r_y_v_addr_19, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_19, i32* %r_temp_y_v_addr_19, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_20 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 20, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_20 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 20, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_20 = load i32* %r_y_v_addr_20, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_20, i32* %r_temp_y_v_addr_20, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_21 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 21, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_21 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 21, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_21 = load i32* %r_y_v_addr_21, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_21, i32* %r_temp_y_v_addr_21, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_22 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 22, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_22 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 22, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_22 = load i32* %r_y_v_addr_22, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_22, i32* %r_temp_y_v_addr_22, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_23 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 23, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_23 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 23, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_23 = load i32* %r_y_v_addr_23, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_23, i32* %r_temp_y_v_addr_23, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_24 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 24, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_24 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 24, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_24 = load i32* %r_y_v_addr_24, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_24, i32* %r_temp_y_v_addr_24, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_25 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 25, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_25 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 25, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_25 = load i32* %r_y_v_addr_25, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_25, i32* %r_temp_y_v_addr_25, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_26 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 26, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_26 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 26, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_26 = load i32* %r_y_v_addr_26, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_26, i32* %r_temp_y_v_addr_26, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_27 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 27, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_27 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 27, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_27 = load i32* %r_y_v_addr_27, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_27, i32* %r_temp_y_v_addr_27, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_28 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 28, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_28 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 28, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_28 = load i32* %r_y_v_addr_28, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_28, i32* %r_temp_y_v_addr_28, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_29 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 29, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_29 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 29, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_29 = load i32* %r_y_v_addr_29, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_29, i32* %r_temp_y_v_addr_29, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_30 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 30, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_30 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 30, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_30 = load i32* %r_y_v_addr_30, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_30, i32* %r_temp_y_v_addr_30, align 4, !dbg !1228 ; [debug line = 306:3]
  %r_temp_y_v_addr_31 = getelementptr [32 x i32]* %r_temp_y_v, i64 0, i64 31, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_addr_31 = getelementptr [32 x i32]* %r_y_v, i64 0, i64 31, !dbg !1228 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r_y_v_load_31 = load i32* %r_y_v_addr_31, align 4, !dbg !1228 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r_y_v_load_31, i32* %r_temp_y_v_addr_31, align 4, !dbg !1228 ; [debug line = 306:3]
  %b_load = load i8* %b_addr, align 16, !dbg !1229 ; [#uses=1 type=i8] [debug line = 308:3]
  call fastcc void @choose_t([32 x i32]* %r_temp_x_v, [32 x i32]* %r_temp_y_v, i7 0, i8 signext %b_load), !dbg !1229 ; [debug line = 308:3]
  %r_temp_x_v_load = load i32* %r_temp_x_v_addr, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load, i32* %r_x_v_addr, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_1 = load i32* %r_temp_x_v_addr_1, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_1, i32* %r_x_v_addr_1, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_2 = load i32* %r_temp_x_v_addr_2, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_2, i32* %r_x_v_addr_2, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_3 = load i32* %r_temp_x_v_addr_3, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_3, i32* %r_x_v_addr_3, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_4 = load i32* %r_temp_x_v_addr_4, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_4, i32* %r_x_v_addr_4, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_5 = load i32* %r_temp_x_v_addr_5, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_5, i32* %r_x_v_addr_5, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_6 = load i32* %r_temp_x_v_addr_6, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_6, i32* %r_x_v_addr_6, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_7 = load i32* %r_temp_x_v_addr_7, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_7, i32* %r_x_v_addr_7, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_8 = load i32* %r_temp_x_v_addr_8, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_8, i32* %r_x_v_addr_8, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_9 = load i32* %r_temp_x_v_addr_9, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_9, i32* %r_x_v_addr_9, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_10 = load i32* %r_temp_x_v_addr_10, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_10, i32* %r_x_v_addr_10, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_11 = load i32* %r_temp_x_v_addr_11, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_11, i32* %r_x_v_addr_11, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_12 = load i32* %r_temp_x_v_addr_12, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_12, i32* %r_x_v_addr_12, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_13 = load i32* %r_temp_x_v_addr_13, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_13, i32* %r_x_v_addr_13, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_14 = load i32* %r_temp_x_v_addr_14, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_14, i32* %r_x_v_addr_14, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_15 = load i32* %r_temp_x_v_addr_15, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_15, i32* %r_x_v_addr_15, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_16 = load i32* %r_temp_x_v_addr_16, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_16, i32* %r_x_v_addr_16, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_17 = load i32* %r_temp_x_v_addr_17, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_17, i32* %r_x_v_addr_17, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_18 = load i32* %r_temp_x_v_addr_18, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_18, i32* %r_x_v_addr_18, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_19 = load i32* %r_temp_x_v_addr_19, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_19, i32* %r_x_v_addr_19, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_20 = load i32* %r_temp_x_v_addr_20, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_20, i32* %r_x_v_addr_20, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_21 = load i32* %r_temp_x_v_addr_21, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_21, i32* %r_x_v_addr_21, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_22 = load i32* %r_temp_x_v_addr_22, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_22, i32* %r_x_v_addr_22, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_23 = load i32* %r_temp_x_v_addr_23, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_23, i32* %r_x_v_addr_23, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_24 = load i32* %r_temp_x_v_addr_24, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_24, i32* %r_x_v_addr_24, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_25 = load i32* %r_temp_x_v_addr_25, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_25, i32* %r_x_v_addr_25, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_26 = load i32* %r_temp_x_v_addr_26, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_26, i32* %r_x_v_addr_26, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_27 = load i32* %r_temp_x_v_addr_27, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_27, i32* %r_x_v_addr_27, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_28 = load i32* %r_temp_x_v_addr_28, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_28, i32* %r_x_v_addr_28, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_29 = load i32* %r_temp_x_v_addr_29, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_29, i32* %r_x_v_addr_29, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_30 = load i32* %r_temp_x_v_addr_30, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_30, i32* %r_x_v_addr_30, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_x_v_load_31 = load i32* %r_temp_x_v_addr_31, align 4, !dbg !1230 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp_x_v_load_31, i32* %r_x_v_addr_31, align 4, !dbg !1230 ; [debug line = 309:3]
  %r_temp_y_v_load = load i32* %r_temp_y_v_addr, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load, i32* %r_y_v_addr, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_1 = load i32* %r_temp_y_v_addr_1, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_1, i32* %r_y_v_addr_1, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_2 = load i32* %r_temp_y_v_addr_2, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_2, i32* %r_y_v_addr_2, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_3 = load i32* %r_temp_y_v_addr_3, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_3, i32* %r_y_v_addr_3, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_4 = load i32* %r_temp_y_v_addr_4, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_4, i32* %r_y_v_addr_4, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_5 = load i32* %r_temp_y_v_addr_5, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_5, i32* %r_y_v_addr_5, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_6 = load i32* %r_temp_y_v_addr_6, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_6, i32* %r_y_v_addr_6, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_7 = load i32* %r_temp_y_v_addr_7, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_7, i32* %r_y_v_addr_7, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_8 = load i32* %r_temp_y_v_addr_8, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_8, i32* %r_y_v_addr_8, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_9 = load i32* %r_temp_y_v_addr_9, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_9, i32* %r_y_v_addr_9, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_10 = load i32* %r_temp_y_v_addr_10, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_10, i32* %r_y_v_addr_10, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_11 = load i32* %r_temp_y_v_addr_11, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_11, i32* %r_y_v_addr_11, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_12 = load i32* %r_temp_y_v_addr_12, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_12, i32* %r_y_v_addr_12, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_13 = load i32* %r_temp_y_v_addr_13, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_13, i32* %r_y_v_addr_13, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_14 = load i32* %r_temp_y_v_addr_14, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_14, i32* %r_y_v_addr_14, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_15 = load i32* %r_temp_y_v_addr_15, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_15, i32* %r_y_v_addr_15, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_16 = load i32* %r_temp_y_v_addr_16, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_16, i32* %r_y_v_addr_16, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_17 = load i32* %r_temp_y_v_addr_17, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_17, i32* %r_y_v_addr_17, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_18 = load i32* %r_temp_y_v_addr_18, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_18, i32* %r_y_v_addr_18, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_19 = load i32* %r_temp_y_v_addr_19, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_19, i32* %r_y_v_addr_19, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_20 = load i32* %r_temp_y_v_addr_20, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_20, i32* %r_y_v_addr_20, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_21 = load i32* %r_temp_y_v_addr_21, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_21, i32* %r_y_v_addr_21, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_22 = load i32* %r_temp_y_v_addr_22, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_22, i32* %r_y_v_addr_22, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_23 = load i32* %r_temp_y_v_addr_23, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_23, i32* %r_y_v_addr_23, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_24 = load i32* %r_temp_y_v_addr_24, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_24, i32* %r_y_v_addr_24, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_25 = load i32* %r_temp_y_v_addr_25, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_25, i32* %r_y_v_addr_25, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_26 = load i32* %r_temp_y_v_addr_26, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_26, i32* %r_y_v_addr_26, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_27 = load i32* %r_temp_y_v_addr_27, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_27, i32* %r_y_v_addr_27, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_28 = load i32* %r_temp_y_v_addr_28, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_28, i32* %r_y_v_addr_28, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_29 = load i32* %r_temp_y_v_addr_29, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_29, i32* %r_y_v_addr_29, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_30 = load i32* %r_temp_y_v_addr_30, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_30, i32* %r_y_v_addr_30, align 4, !dbg !1231 ; [debug line = 310:3]
  %r_temp_y_v_load_31 = load i32* %r_temp_y_v_addr_31, align 4, !dbg !1231 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp_y_v_load_31, i32* %r_y_v_addr_31, align 4, !dbg !1231 ; [debug line = 310:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_z_v}, i64 0, metadata !1232), !dbg !1236 ; [debug line = 146:78@314:3] [debug variable = r.v]
  %r_z_v_addr = getelementptr [32 x i32]* %r_z_v, i64 0, i64 0, !dbg !1237 ; [#uses=1 type=i32*] [debug line = 149:3@314:3]
  store i32 1, i32* %r_z_v_addr, align 4, !dbg !1237 ; [debug line = 149:3@314:3]
  br label %1, !dbg !1239                         ; [debug line = 150:7@314:3]

; <label>:1                                       ; preds = %2, %0
  %i_i = phi i6 [ 1, %0 ], [ %i_57, %2 ]          ; [#uses=3 type=i6]
  %exitcond_i = icmp eq i6 %i_i, -32, !dbg !1239  ; [#uses=1 type=i1] [debug line = 150:7@314:3]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond_i, label %crypto_sign_ed25519_ref_fe25519_setone.exit, label %2, !dbg !1239 ; [debug line = 150:7@314:3]

; <label>:2                                       ; preds = %1
  %tmp_i = zext i6 %i_i to i64, !dbg !1241        ; [#uses=1 type=i64] [debug line = 150:21@314:3]
  %r_z_v_addr_1 = getelementptr [32 x i32]* %r_z_v, i64 0, i64 %tmp_i, !dbg !1241 ; [#uses=1 type=i32*] [debug line = 150:21@314:3]
  store i32 0, i32* %r_z_v_addr_1, align 4, !dbg !1241 ; [debug line = 150:21@314:3]
  %i_57 = add i6 %i_i, 1, !dbg !1242              ; [#uses=1 type=i6] [debug line = 150:16@314:3]
  call void @llvm.dbg.value(metadata !{i6 %i_57}, i64 0, metadata !1243), !dbg !1242 ; [debug line = 150:16@314:3] [debug variable = i]
  br label %1, !dbg !1242                         ; [debug line = 150:16@314:3]

crypto_sign_ed25519_ref_fe25519_setone.exit:      ; preds = %1
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %r_t_v, [32 x i32]* %r_x_v, [32 x i32]* %r_y_v)
  br label %3, !dbg !1244                         ; [debug line = 316:7]

; <label>:3                                       ; preds = %4, %crypto_sign_ed25519_ref_fe25519_setone.exit
  %i = phi i7 [ 1, %crypto_sign_ed25519_ref_fe25519_setone.exit ], [ %i_58, %4 ] ; [#uses=4 type=i7]
  %exitcond = icmp eq i7 %i, -43, !dbg !1244      ; [#uses=1 type=i1] [debug line = 316:7]
  %empty_72 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 84, i64 84, i64 84) ; [#uses=0 type=i32]
  br i1 %exitcond, label %5, label %4, !dbg !1244 ; [debug line = 316:7]

; <label>:4                                       ; preds = %3
  %tmp = zext i7 %i to i64, !dbg !1246            ; [#uses=1 type=i64] [debug line = 318:5]
  %b_addr_1 = getelementptr inbounds [85 x i8]* %b, i64 0, i64 %tmp, !dbg !1246 ; [#uses=1 type=i8*] [debug line = 318:5]
  %b_load_1 = load i8* %b_addr_1, align 1, !dbg !1246 ; [#uses=1 type=i8] [debug line = 318:5]
  call fastcc void @choose_t([32 x i32]* %t_x_v, [32 x i32]* %t_y_v, i7 %i, i8 signext %b_load_1), !dbg !1246 ; [debug line = 318:5]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_x_v}, i64 0, metadata !1248), !dbg !1256 ; [debug line = 74:62@319:5] [debug variable = r.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_y_v}, i64 0, metadata !1257), !dbg !1256 ; [debug line = 74:62@319:5] [debug variable = r.y.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_z_v}, i64 0, metadata !1258), !dbg !1256 ; [debug line = 74:62@319:5] [debug variable = r.z.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_t_v}, i64 0, metadata !1259), !dbg !1256 ; [debug line = 74:62@319:5] [debug variable = r.t.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t_x_v}, i64 0, metadata !1260), !dbg !1263 ; [debug line = 74:84@319:5] [debug variable = q.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t_y_v}, i64 0, metadata !1264), !dbg !1263 ; [debug line = 74:84@319:5] [debug variable = q.y.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %a_v}, metadata !1265), !dbg !1268 ; [debug line = 76:35@319:5] [debug variable = a.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %b_v}, metadata !1269), !dbg !1271 ; [debug line = 76:37@319:5] [debug variable = b.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t1_v}, metadata !1272), !dbg !1274 ; [debug line = 76:39@319:5] [debug variable = t1.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t2_v}, metadata !1275), !dbg !1277 ; [debug line = 76:42@319:5] [debug variable = t2.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %c_v}, metadata !1278), !dbg !1280 ; [debug line = 76:45@319:5] [debug variable = c.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %d_v}, metadata !1281), !dbg !1283 ; [debug line = 76:47@319:5] [debug variable = d.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %e_v}, metadata !1284), !dbg !1286 ; [debug line = 76:49@319:5] [debug variable = e.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %f_v}, metadata !1287), !dbg !1289 ; [debug line = 76:51@319:5] [debug variable = f.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %g_v}, metadata !1290), !dbg !1292 ; [debug line = 76:53@319:5] [debug variable = g.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %h_v}, metadata !1293), !dbg !1295 ; [debug line = 76:55@319:5] [debug variable = h.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %qt_v}, metadata !1296), !dbg !1298 ; [debug line = 76:57@319:5] [debug variable = qt.v]
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %qt_v, [32 x i32]* %t_x_v, [32 x i32]* %t_y_v)
  call fastcc void @crypto_sign_ed25519_.8([32 x i32]* %a_v, [32 x i32]* %r_y_v, [32 x i32]* %r_x_v)
  call fastcc void @crypto_sign_ed25519_.12([32 x i32]* %b_v, [32 x i32]* %r_y_v, [32 x i32]* %r_x_v)
  call fastcc void @crypto_sign_ed25519_.8([32 x i32]* %t1_v, [32 x i32]* %t_y_v, [32 x i32]* %t_x_v)
  call fastcc void @crypto_sign_ed25519_.12([32 x i32]* %t2_v, [32 x i32]* %t_y_v, [32 x i32]* %t_x_v)
  call fastcc void @crypto_sign_ed25519_.17([32 x i32]* %a_v, [32 x i32]* %t1_v)
  call fastcc void @crypto_sign_ed25519_.17([32 x i32]* %b_v, [32 x i32]* %t2_v)
  call fastcc void @crypto_sign_ed25519_.8([32 x i32]* %e_v, [32 x i32]* %b_v, [32 x i32]* %a_v)
  call fastcc void @crypto_sign_ed25519_.12([32 x i32]* %h_v, [32 x i32]* %b_v, [32 x i32]* %a_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %c_v, [32 x i32]* %r_t_v, [32 x i32]* %qt_v)
  call fastcc void @crypto_sign_ed25519_.17([32 x i32]* %c_v, [32 x i32]* @ge25519_ec2d_v)
  call fastcc void @crypto_sign_ed25519_.11([32 x i32]* %d_v, [32 x i32]* %r_z_v)
  call fastcc void @crypto_sign_ed25519_.8([32 x i32]* %f_v, [32 x i32]* %d_v, [32 x i32]* %c_v)
  call fastcc void @crypto_sign_ed25519_.12([32 x i32]* %g_v, [32 x i32]* %d_v, [32 x i32]* %c_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %r_x_v, [32 x i32]* %e_v, [32 x i32]* %f_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %r_y_v, [32 x i32]* %h_v, [32 x i32]* %g_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %r_z_v, [32 x i32]* %g_v, [32 x i32]* %f_v)
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %r_t_v, [32 x i32]* %e_v, [32 x i32]* %h_v)
  %i_58 = add i7 %i, 1, !dbg !1299                ; [#uses=1 type=i7] [debug line = 316:16]
  call void @llvm.dbg.value(metadata !{i7 %i_58}, i64 0, metadata !1300), !dbg !1299 ; [debug line = 316:16] [debug variable = i]
  br label %3, !dbg !1299                         ; [debug line = 316:16]

; <label>:5                                       ; preds = %3
  ret void, !dbg !1301                            ; [debug line = 321:1]
}

; [#uses=4]
define internal fastcc void @crypto_sign_ed25519_.12([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %x_v, [32 x i32]* nocapture %y_v) {
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1302), !dbg !1305 ; [debug line = 168:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !1306), !dbg !1308 ; [debug line = 168:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y_v}, i64 0, metadata !1309), !dbg !1311 ; [debug line = 168:159] [debug variable = y.v]
  br label %1, !dbg !1312                         ; [debug line = 171:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_59, %2 ]            ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i, -32, !dbg !1312      ; [#uses=1 type=i1] [debug line = 171:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_59 = add i6 %i, 1, !dbg !1315                ; [#uses=1 type=i6] [debug line = 171:16]
  br i1 %exitcond, label %3, label %2, !dbg !1312 ; [debug line = 171:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !1316            ; [#uses=3 type=i64] [debug line = 171:21]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 %tmp, !dbg !1316 ; [#uses=1 type=i32*] [debug line = 171:21]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !1316 ; [#uses=1 type=i32] [debug line = 171:21]
  %y_v_addr = getelementptr [32 x i32]* %y_v, i64 0, i64 %tmp, !dbg !1316 ; [#uses=1 type=i32*] [debug line = 171:21]
  %y_v_load = load i32* %y_v_addr, align 4, !dbg !1316 ; [#uses=1 type=i32] [debug line = 171:21]
  %tmp_s = add i32 %x_v_load, %y_v_load, !dbg !1316 ; [#uses=1 type=i32] [debug line = 171:21]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp, !dbg !1316 ; [#uses=1 type=i32*] [debug line = 171:21]
  store i32 %tmp_s, i32* %r_v_addr, align 4, !dbg !1316 ; [debug line = 171:21]
  call void @llvm.dbg.value(metadata !{i6 %i_59}, i64 0, metadata !1317), !dbg !1315 ; [debug line = 171:16] [debug variable = i]
  br label %1, !dbg !1315                         ; [debug line = 171:16]

; <label>:3                                       ; preds = %1
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1318), !dbg !1320 ; [debug line = 33:61@172:3] [debug variable = r.v]
  %r_v_addr_17 = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !1321 ; [#uses=2 type=i32*] [debug line = 40:5@172:3]
  %r_v_addr_18 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !1322 ; [#uses=2 type=i32*] [debug line = 43:5@172:3]
  br label %.loopexit, !dbg !1323                 ; [debug line = 38:7@172:3]

.loopexit.loopexit:                               ; preds = %5
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %3
  %rep_i = phi i3 [ 0, %3 ], [ %rep, %.loopexit.loopexit ] ; [#uses=2 type=i3]
  %exitcond1_i = icmp eq i3 %rep_i, -4, !dbg !1323 ; [#uses=1 type=i1] [debug line = 38:7@172:3]
  %empty_73 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  %rep = add i3 %rep_i, 1, !dbg !1324             ; [#uses=1 type=i3] [debug line = 38:19@172:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !1325), !dbg !1324 ; [debug line = 38:19@172:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_add_sub64.exit, label %4, !dbg !1323 ; [debug line = 38:7@172:3]

; <label>:4                                       ; preds = %.loopexit
  %r_v_load = load i32* %r_v_addr_17, align 4, !dbg !1321 ; [#uses=2 type=i32] [debug line = 40:5@172:3]
  %tmp_797 = trunc i32 %r_v_load to i7, !dbg !1321 ; [#uses=1 type=i7] [debug line = 40:5@172:3]
  %tmp_777 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load, i32 7, i32 31), !dbg !1321 ; [#uses=1 type=i25] [debug line = 40:5@172:3]
  %t_24_cast = zext i25 %tmp_777 to i31, !dbg !1321 ; [#uses=1 type=i31] [debug line = 40:5@172:3]
  %tmp_i_cast = zext i7 %tmp_797 to i32, !dbg !1326 ; [#uses=1 type=i32] [debug line = 41:5@172:3]
  store i32 %tmp_i_cast, i32* %r_v_addr_17, align 4, !dbg !1326 ; [debug line = 41:5@172:3]
  %t = mul i31 19, %t_24_cast, !dbg !1327         ; [#uses=1 type=i31] [debug line = 25:3@42:9@172:3]
  %t_cast3 = zext i31 %t to i32, !dbg !1327       ; [#uses=1 type=i32] [debug line = 25:3@42:9@172:3]
  call void @llvm.dbg.value(metadata !{i31 %t}, i64 0, metadata !1329), !dbg !1328 ; [debug line = 42:9@172:3] [debug variable = t]
  %r_v_load_13 = load i32* %r_v_addr_18, align 4, !dbg !1322 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  %tmp_i = add i32 %t_cast3, %r_v_load_13, !dbg !1322 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  store i32 %tmp_i, i32* %r_v_addr_18, align 4, !dbg !1322 ; [debug line = 43:5@172:3]
  br label %5, !dbg !1330                         ; [debug line = 44:9@172:3]

; <label>:5                                       ; preds = %6, %4
  %i_i = phi i5 [ 0, %4 ], [ %i_60, %6 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !1330   ; [#uses=1 type=i1] [debug line = 44:9@172:3]
  %empty_74 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_60 = add i5 %i_i, 1, !dbg !1331              ; [#uses=2 type=i5] [debug line = 47:7@172:3]
  br i1 %exitcond_i, label %.loopexit.loopexit, label %6, !dbg !1330 ; [debug line = 44:9@172:3]

; <label>:6                                       ; preds = %5
  %tmp_759_i = zext i5 %i_i to i64, !dbg !1332    ; [#uses=1 type=i64] [debug line = 46:7@172:3]
  %r_v_addr_19 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_759_i, !dbg !1332 ; [#uses=2 type=i32*] [debug line = 46:7@172:3]
  %r_v_load_14 = load i32* %r_v_addr_19, align 4, !dbg !1332 ; [#uses=2 type=i32] [debug line = 46:7@172:3]
  %tmp_798 = trunc i32 %r_v_load_14 to i8, !dbg !1332 ; [#uses=1 type=i8] [debug line = 46:7@172:3]
  %t_s = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_14, i32 8, i32 31), !dbg !1332 ; [#uses=1 type=i24] [debug line = 46:7@172:3]
  %t_9 = zext i24 %t_s to i32, !dbg !1332         ; [#uses=1 type=i32] [debug line = 46:7@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t_9}, i64 0, metadata !1329), !dbg !1332 ; [debug line = 46:7@172:3] [debug variable = t]
  %tmp_760_i = zext i5 %i_60 to i64, !dbg !1331   ; [#uses=1 type=i64] [debug line = 47:7@172:3]
  %r_v_addr_20 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_760_i, !dbg !1331 ; [#uses=2 type=i32*] [debug line = 47:7@172:3]
  %r_v_load_15 = load i32* %r_v_addr_20, align 4, !dbg !1331 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  %tmp_761_i = add i32 %t_9, %r_v_load_15, !dbg !1331 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  store i32 %tmp_761_i, i32* %r_v_addr_20, align 4, !dbg !1331 ; [debug line = 47:7@172:3]
  %tmp_762_i_cast = zext i8 %tmp_798 to i32, !dbg !1333 ; [#uses=1 type=i32] [debug line = 48:7@172:3]
  store i32 %tmp_762_i_cast, i32* %r_v_addr_19, align 4, !dbg !1333 ; [debug line = 48:7@172:3]
  call void @llvm.dbg.value(metadata !{i5 %i_60}, i64 0, metadata !1334), !dbg !1335 ; [debug line = 44:18@172:3] [debug variable = i]
  br label %5, !dbg !1335                         ; [debug line = 44:18@172:3]

reduce_add_sub64.exit:                            ; preds = %.loopexit
  ret void, !dbg !1336                            ; [debug line = 173:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_.11([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %x_v) {
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1302), !dbg !1305 ; [debug line = 168:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !1306), !dbg !1308 ; [debug line = 168:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !1309), !dbg !1311 ; [debug line = 168:159] [debug variable = y.v]
  br label %1, !dbg !1312                         ; [debug line = 171:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_61, %2 ]            ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i, -32, !dbg !1312      ; [#uses=1 type=i1] [debug line = 171:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_61 = add i6 %i, 1, !dbg !1315                ; [#uses=1 type=i6] [debug line = 171:16]
  br i1 %exitcond, label %3, label %2, !dbg !1312 ; [debug line = 171:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !1316            ; [#uses=2 type=i64] [debug line = 171:21]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 %tmp, !dbg !1316 ; [#uses=1 type=i32*] [debug line = 171:21]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !1316 ; [#uses=1 type=i32] [debug line = 171:21]
  %tmp_799 = shl i32 %x_v_load, 1, !dbg !1316     ; [#uses=1 type=i32] [debug line = 171:21]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp, !dbg !1316 ; [#uses=1 type=i32*] [debug line = 171:21]
  store i32 %tmp_799, i32* %r_v_addr, align 4, !dbg !1316 ; [debug line = 171:21]
  call void @llvm.dbg.value(metadata !{i6 %i_61}, i64 0, metadata !1317), !dbg !1315 ; [debug line = 171:16] [debug variable = i]
  br label %1, !dbg !1315                         ; [debug line = 171:16]

; <label>:3                                       ; preds = %1
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1318), !dbg !1320 ; [debug line = 33:61@172:3] [debug variable = r.v]
  %r_v_addr_13 = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !1321 ; [#uses=2 type=i32*] [debug line = 40:5@172:3]
  %r_v_addr_14 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !1322 ; [#uses=2 type=i32*] [debug line = 43:5@172:3]
  br label %.loopexit, !dbg !1323                 ; [debug line = 38:7@172:3]

.loopexit.loopexit:                               ; preds = %5
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %3
  %rep_i = phi i3 [ 0, %3 ], [ %rep, %.loopexit.loopexit ] ; [#uses=2 type=i3]
  %exitcond1_i = icmp eq i3 %rep_i, -4, !dbg !1323 ; [#uses=1 type=i1] [debug line = 38:7@172:3]
  %empty_75 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  %rep = add i3 %rep_i, 1, !dbg !1324             ; [#uses=1 type=i3] [debug line = 38:19@172:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !1325), !dbg !1324 ; [debug line = 38:19@172:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_add_sub64.exit, label %4, !dbg !1323 ; [debug line = 38:7@172:3]

; <label>:4                                       ; preds = %.loopexit
  %r_v_load = load i32* %r_v_addr_13, align 4, !dbg !1321 ; [#uses=2 type=i32] [debug line = 40:5@172:3]
  %tmp_800 = trunc i32 %r_v_load to i7, !dbg !1321 ; [#uses=1 type=i7] [debug line = 40:5@172:3]
  %tmp_780 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load, i32 7, i32 31), !dbg !1321 ; [#uses=1 type=i25] [debug line = 40:5@172:3]
  %t_22_cast = zext i25 %tmp_780 to i31, !dbg !1321 ; [#uses=1 type=i31] [debug line = 40:5@172:3]
  %tmp_i_cast = zext i7 %tmp_800 to i32, !dbg !1326 ; [#uses=1 type=i32] [debug line = 41:5@172:3]
  store i32 %tmp_i_cast, i32* %r_v_addr_13, align 4, !dbg !1326 ; [debug line = 41:5@172:3]
  %t = mul i31 19, %t_22_cast, !dbg !1327         ; [#uses=1 type=i31] [debug line = 25:3@42:9@172:3]
  %t_cast3 = zext i31 %t to i32, !dbg !1327       ; [#uses=1 type=i32] [debug line = 25:3@42:9@172:3]
  call void @llvm.dbg.value(metadata !{i31 %t}, i64 0, metadata !1329), !dbg !1328 ; [debug line = 42:9@172:3] [debug variable = t]
  %r_v_load_10 = load i32* %r_v_addr_14, align 4, !dbg !1322 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  %tmp_i = add i32 %t_cast3, %r_v_load_10, !dbg !1322 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  store i32 %tmp_i, i32* %r_v_addr_14, align 4, !dbg !1322 ; [debug line = 43:5@172:3]
  br label %5, !dbg !1330                         ; [debug line = 44:9@172:3]

; <label>:5                                       ; preds = %6, %4
  %i_i = phi i5 [ 0, %4 ], [ %i_62, %6 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !1330   ; [#uses=1 type=i1] [debug line = 44:9@172:3]
  %empty_76 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_62 = add i5 %i_i, 1, !dbg !1331              ; [#uses=2 type=i5] [debug line = 47:7@172:3]
  br i1 %exitcond_i, label %.loopexit.loopexit, label %6, !dbg !1330 ; [debug line = 44:9@172:3]

; <label>:6                                       ; preds = %5
  %tmp_759_i = zext i5 %i_i to i64, !dbg !1332    ; [#uses=1 type=i64] [debug line = 46:7@172:3]
  %r_v_addr_15 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_759_i, !dbg !1332 ; [#uses=2 type=i32*] [debug line = 46:7@172:3]
  %r_v_load_11 = load i32* %r_v_addr_15, align 4, !dbg !1332 ; [#uses=2 type=i32] [debug line = 46:7@172:3]
  %tmp_801 = trunc i32 %r_v_load_11 to i8, !dbg !1332 ; [#uses=1 type=i8] [debug line = 46:7@172:3]
  %t_s = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_11, i32 8, i32 31), !dbg !1332 ; [#uses=1 type=i24] [debug line = 46:7@172:3]
  %t_1 = zext i24 %t_s to i32, !dbg !1332         ; [#uses=1 type=i32] [debug line = 46:7@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t_1}, i64 0, metadata !1329), !dbg !1332 ; [debug line = 46:7@172:3] [debug variable = t]
  %tmp_760_i = zext i5 %i_62 to i64, !dbg !1331   ; [#uses=1 type=i64] [debug line = 47:7@172:3]
  %r_v_addr_16 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_760_i, !dbg !1331 ; [#uses=2 type=i32*] [debug line = 47:7@172:3]
  %r_v_load_12 = load i32* %r_v_addr_16, align 4, !dbg !1331 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  %tmp_761_i = add i32 %t_1, %r_v_load_12, !dbg !1331 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  store i32 %tmp_761_i, i32* %r_v_addr_16, align 4, !dbg !1331 ; [debug line = 47:7@172:3]
  %tmp_762_i_cast = zext i8 %tmp_801 to i32, !dbg !1333 ; [#uses=1 type=i32] [debug line = 48:7@172:3]
  store i32 %tmp_762_i_cast, i32* %r_v_addr_15, align 4, !dbg !1333 ; [debug line = 48:7@172:3]
  call void @llvm.dbg.value(metadata !{i5 %i_62}, i64 0, metadata !1334), !dbg !1335 ; [debug line = 44:18@172:3] [debug variable = i]
  br label %5, !dbg !1335                         ; [debug line = 44:18@172:3]

reduce_add_sub64.exit:                            ; preds = %.loopexit
  ret void, !dbg !1336                            ; [debug line = 173:1]
}

; [#uses=38]
define internal fastcc void @crypto_sign_ed25519_.10([32 x i32]* nocapture %r_v, [32 x i32]* nocapture %x_v) {
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !973), !dbg !976 ; [debug line = 186:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !977), !dbg !979 ; [debug line = 186:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x_v}, i64 0, metadata !980), !dbg !982 ; [debug line = 186:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !983), !dbg !988 ; [debug line = 189:17] [debug variable = t]
  br label %1, !dbg !989                          ; [debug line = 190:7]

; <label>:1                                       ; preds = %2, %0
  %i = phi i6 [ 0, %0 ], [ %i_63, %2 ]            ; [#uses=3 type=i6]
  %exitcond3 = icmp eq i6 %i, -1, !dbg !989       ; [#uses=1 type=i1] [debug line = 190:7]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  %i_63 = add i6 %i, 1, !dbg !991                 ; [#uses=1 type=i6] [debug line = 190:16]
  br i1 %exitcond3, label %.preheader5.preheader, label %2, !dbg !989 ; [debug line = 190:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !992                ; [debug line = 192:7]

; <label>:2                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !994             ; [#uses=1 type=i64] [debug line = 190:20]
  %t_addr = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp, !dbg !994 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %t_addr, align 4, !dbg !994   ; [debug line = 190:20]
  call void @llvm.dbg.value(metadata !{i6 %i_63}, i64 0, metadata !995), !dbg !991 ; [debug line = 190:16] [debug variable = i]
  br label %1, !dbg !991                          ; [debug line = 190:16]

.preheader5.loopexit:                             ; preds = %.preheader4
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.loopexit, %.preheader5.preheader
  %i_1 = phi i6 [ %i_64, %.preheader5.loopexit ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i_1, -32, !dbg !992    ; [#uses=1 type=i1] [debug line = 192:7]
  %empty_77 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_64 = add i6 %i_1, 1, !dbg !996               ; [#uses=1 type=i6] [debug line = 192:16]
  call void @llvm.dbg.value(metadata !{i6 %i_64}, i64 0, metadata !995), !dbg !996 ; [debug line = 192:16] [debug variable = i]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !992 ; [debug line = 192:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !997                 ; [debug line = 196:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp_s = zext i6 %i_1 to i64, !dbg !999         ; [#uses=1 type=i64] [debug line = 194:7]
  %x_v_addr = getelementptr [32 x i32]* %x_v, i64 0, i64 %tmp_s, !dbg !999 ; [#uses=1 type=i32*] [debug line = 194:7]
  %x_v_load = load i32* %x_v_addr, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  br label %.preheader4, !dbg !1001               ; [debug line = 193:9]

.preheader4:                                      ; preds = %3, %.preheader4.preheader
  %j = phi i6 [ %j_2, %3 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !1001     ; [#uses=1 type=i1] [debug line = 193:9]
  %empty_78 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %j_2 = add i6 %j, 1, !dbg !1002                 ; [#uses=1 type=i6] [debug line = 193:18]
  br i1 %exitcond1, label %.preheader5.loopexit, label %3, !dbg !1001 ; [debug line = 193:9]

; <label>:3                                       ; preds = %.preheader4
  %tmp_795 = zext i6 %j to i64, !dbg !999         ; [#uses=1 type=i64] [debug line = 194:7]
  %x_v_addr_63 = getelementptr [32 x i32]* %x_v, i64 0, i64 %tmp_795, !dbg !999 ; [#uses=1 type=i32*] [debug line = 194:7]
  %x_v_load_63 = load i32* %x_v_addr_63, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_796 = mul i32 %x_v_load, %x_v_load_63, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_797 = add i6 %i_1, %j, !dbg !999           ; [#uses=1 type=i6] [debug line = 194:7]
  %tmp_798 = zext i6 %tmp_797 to i64, !dbg !999   ; [#uses=1 type=i64] [debug line = 194:7]
  %t_addr_15 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_798, !dbg !999 ; [#uses=2 type=i32*] [debug line = 194:7]
  %t_load_5 = load i32* %t_addr_15, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp_799 = add i32 %t_load_5, %tmp_796, !dbg !999 ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %tmp_799, i32* %t_addr_15, align 4, !dbg !999 ; [debug line = 194:7]
  call void @llvm.dbg.value(metadata !{i6 %j_2}, i64 0, metadata !1003), !dbg !1002 ; [debug line = 193:18] [debug variable = j]
  br label %.preheader4, !dbg !1002               ; [debug line = 193:18]

.preheader:                                       ; preds = %4, %.preheader.preheader
  %i_2 = phi i6 [ %i_65, %4 ], [ -32, %.preheader.preheader ] ; [#uses=4 type=i6]
  %exitcond = icmp eq i6 %i_2, -1, !dbg !997      ; [#uses=1 type=i1] [debug line = 196:7]
  %empty_79 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %5, label %4, !dbg !997  ; [debug line = 196:7]

; <label>:4                                       ; preds = %.preheader
  %tmp_791 = xor i6 %i_2, -32, !dbg !1004         ; [#uses=1 type=i6] [debug line = 197:5]
  %tmp_792 = zext i6 %tmp_791 to i64, !dbg !1004  ; [#uses=2 type=i64] [debug line = 197:5]
  %t_addr_13 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_792, !dbg !1004 ; [#uses=1 type=i32*] [debug line = 197:5]
  %t_load_3 = load i32* %t_addr_13, align 4, !dbg !1004 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp_793 = zext i6 %i_2 to i64, !dbg !1005      ; [#uses=1 type=i64] [debug line = 197:28]
  %t_addr_14 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp_793, !dbg !1005 ; [#uses=1 type=i32*] [debug line = 197:28]
  %t_load_6 = load i32* %t_addr_14, align 4, !dbg !1005 ; [#uses=1 type=i32] [debug line = 197:28]
  call void @llvm.dbg.value(metadata !{i32 %t_load_6}, i64 0, metadata !1006), !dbg !1008 ; [debug line = 28:44@197:28] [debug variable = a]
  %tmp2_i = mul i32 %t_load_6, 38, !dbg !1009     ; [#uses=1 type=i32] [debug line = 30:3@197:28]
  %tmp_794 = add i32 %t_load_3, %tmp2_i, !dbg !1005 ; [#uses=1 type=i32] [debug line = 197:28]
  %r_v_addr_6 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_792, !dbg !1005 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %tmp_794, i32* %r_v_addr_6, align 4, !dbg !1005 ; [debug line = 197:28]
  %i_65 = add i6 %i_2, 1, !dbg !1011              ; [#uses=1 type=i6] [debug line = 196:17]
  call void @llvm.dbg.value(metadata !{i6 %i_65}, i64 0, metadata !995), !dbg !1011 ; [debug line = 196:17] [debug variable = i]
  br label %.preheader, !dbg !1011                ; [debug line = 196:17]

; <label>:5                                       ; preds = %.preheader
  %t_addr_12 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 31, !dbg !1012 ; [#uses=1 type=i32*] [debug line = 198:3]
  %t_load = load i32* %t_addr_12, align 4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 198:3]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 31, !dbg !1012 ; [#uses=3 type=i32*] [debug line = 198:3]
  store i32 %t_load, i32* %r_v_addr, align 4, !dbg !1012 ; [debug line = 198:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1013), !dbg !1017 ; [debug line = 53:57@200:3] [debug variable = r.v]
  %r_v_addr_7 = getelementptr [32 x i32]* %r_v, i64 0, i64 0, !dbg !1018 ; [#uses=2 type=i32*] [debug line = 63:5@200:3]
  br label %.loopexit, !dbg !1022                 ; [debug line = 58:7@200:3]

.loopexit.loopexit:                               ; preds = %7
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5
  %rep_i = phi i2 [ 0, %5 ], [ %rep, %.loopexit.loopexit ] ; [#uses=2 type=i2]
  %exitcond1_i = icmp eq i2 %rep_i, -2, !dbg !1022 ; [#uses=1 type=i1] [debug line = 58:7@200:3]
  %empty_80 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) ; [#uses=0 type=i32]
  %rep = add i2 %rep_i, 1, !dbg !1023             ; [#uses=1 type=i2] [debug line = 58:19@200:3]
  call void @llvm.dbg.value(metadata !{i2 %rep}, i64 0, metadata !1024), !dbg !1023 ; [debug line = 58:19@200:3] [debug variable = rep]
  br i1 %exitcond1_i, label %reduce_mul.exit, label %6, !dbg !1022 ; [debug line = 58:7@200:3]

; <label>:6                                       ; preds = %.loopexit
  %r_v_load = load i32* %r_v_addr, align 4, !dbg !1025 ; [#uses=2 type=i32] [debug line = 60:5@200:3]
  %tmp_802 = trunc i32 %r_v_load to i7, !dbg !1025 ; [#uses=1 type=i7] [debug line = 60:5@200:3]
  %tmp_782 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %r_v_load, i32 7, i32 31), !dbg !1025 ; [#uses=1 type=i25] [debug line = 60:5@200:3]
  %t_12_cast = zext i25 %tmp_782 to i31, !dbg !1025 ; [#uses=1 type=i31] [debug line = 60:5@200:3]
  %tmp_i_cast = zext i7 %tmp_802 to i32, !dbg !1026 ; [#uses=1 type=i32] [debug line = 61:5@200:3]
  store i32 %tmp_i_cast, i32* %r_v_addr, align 4, !dbg !1026 ; [debug line = 61:5@200:3]
  %t_2 = mul i31 19, %t_12_cast, !dbg !1027       ; [#uses=1 type=i31] [debug line = 25:3@62:9@200:3]
  %t_10_cast6 = zext i31 %t_2 to i32, !dbg !1027  ; [#uses=1 type=i32] [debug line = 25:3@62:9@200:3]
  call void @llvm.dbg.value(metadata !{i31 %t_2}, i64 0, metadata !1029), !dbg !1028 ; [debug line = 62:9@200:3] [debug variable = t]
  %r_v_load_4 = load i32* %r_v_addr_7, align 4, !dbg !1018 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  %tmp_i = add i32 %t_10_cast6, %r_v_load_4, !dbg !1018 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  store i32 %tmp_i, i32* %r_v_addr_7, align 4, !dbg !1018 ; [debug line = 63:5@200:3]
  br label %7, !dbg !1030                         ; [debug line = 64:9@200:3]

; <label>:7                                       ; preds = %8, %6
  %i_i = phi i5 [ 0, %6 ], [ %i_66, %8 ]          ; [#uses=3 type=i5]
  %exitcond_i = icmp eq i5 %i_i, -1, !dbg !1030   ; [#uses=1 type=i1] [debug line = 64:9@200:3]
  %empty_81 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  %i_66 = add i5 %i_i, 1, !dbg !1032              ; [#uses=2 type=i5] [debug line = 67:7@200:3]
  br i1 %exitcond_i, label %.loopexit.loopexit, label %8, !dbg !1030 ; [debug line = 64:9@200:3]

; <label>:8                                       ; preds = %7
  %tmp_755_i = zext i5 %i_i to i64, !dbg !1034    ; [#uses=1 type=i64] [debug line = 66:7@200:3]
  %r_v_addr_8 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_755_i, !dbg !1034 ; [#uses=2 type=i32*] [debug line = 66:7@200:3]
  %r_v_load_5 = load i32* %r_v_addr_8, align 4, !dbg !1034 ; [#uses=2 type=i32] [debug line = 66:7@200:3]
  %tmp_803 = trunc i32 %r_v_load_5 to i8, !dbg !1034 ; [#uses=1 type=i8] [debug line = 66:7@200:3]
  %t_s = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_v_load_5, i32 8, i32 31), !dbg !1034 ; [#uses=1 type=i24] [debug line = 66:7@200:3]
  %t_3 = zext i24 %t_s to i32, !dbg !1034         ; [#uses=1 type=i32] [debug line = 66:7@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t_3}, i64 0, metadata !1029), !dbg !1034 ; [debug line = 66:7@200:3] [debug variable = t]
  %tmp_756_i = zext i5 %i_66 to i64, !dbg !1032   ; [#uses=1 type=i64] [debug line = 67:7@200:3]
  %r_v_addr_9 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_756_i, !dbg !1032 ; [#uses=2 type=i32*] [debug line = 67:7@200:3]
  %r_v_load_6 = load i32* %r_v_addr_9, align 4, !dbg !1032 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  %tmp_757_i = add i32 %t_3, %r_v_load_6, !dbg !1032 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  store i32 %tmp_757_i, i32* %r_v_addr_9, align 4, !dbg !1032 ; [debug line = 67:7@200:3]
  %tmp_758_i_cast = zext i8 %tmp_803 to i32, !dbg !1035 ; [#uses=1 type=i32] [debug line = 68:7@200:3]
  store i32 %tmp_758_i_cast, i32* %r_v_addr_8, align 4, !dbg !1035 ; [debug line = 68:7@200:3]
  call void @llvm.dbg.value(metadata !{i5 %i_66}, i64 0, metadata !1036), !dbg !1037 ; [debug line = 64:18@200:3] [debug variable = i]
  br label %7, !dbg !1037                         ; [debug line = 64:18@200:3]

reduce_mul.exit:                                  ; preds = %.loopexit
  ret void, !dbg !1038                            ; [debug line = 201:1]
}

; [#uses=0]
define i32 @crypto_sign(i8* %mem, i32 %num_blocks, [64 x i8]* %sk, [64 x i8]* %signature_out) {
  %num_blocks_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %num_blocks) ; [#uses=2 type=i32]
  call void @llvm.dbg.value(metadata !{i32 %num_blocks_read}, i64 0, metadata !1337), !dbg !1342 ; [debug line = 50:16] [debug variable = num_blocks]
  %t_11 = alloca [64 x i32], align 16             ; [#uses=3 type=[64 x i32]*]
  %t_10 = alloca [64 x i32], align 16             ; [#uses=2 type=[64 x i32]*]
  %tx_v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %ty_v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %zi_v = alloca [32 x i32], align 4              ; [#uses=3 type=[32 x i32]*]
  %t = alloca [64 x i32], align 16                ; [#uses=2 type=[64 x i32]*]
  call void (...)* @_ssdm_op_SpecBitsMap(i8* %mem), !map !1343
  call void (...)* @_ssdm_op_SpecBitsMap(i32 %num_blocks) nounwind, !map !1349
  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %sk) nounwind, !map !1355
  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %signature_out) nounwind, !map !1361
  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !1365
  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @crypto_sign_str) nounwind
  %pk = alloca [32 x i8], align 16                ; [#uses=2 type=[32 x i8]*]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %pk}, i64 0, metadata !1371) nounwind, !dbg !1380 ; [debug line = 13:29@35:2@78:3] [debug variable = dst]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %pk}, i64 0, metadata !1381) nounwind, !dbg !1382 ; [debug line = 34:30@78:3] [debug variable = dst]
  %az = alloca [64 x i8], align 16                ; [#uses=5 type=[64 x i8]*]
  %nonce = alloca [64 x i8], align 16             ; [#uses=2 type=[64 x i8]*]
  %hram = alloca [64 x i8], align 16              ; [#uses=2 type=[64 x i8]*]
  %signature = alloca [64 x i8], align 16         ; [#uses=11 type=[64 x i8]*]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=4 type=[128 x i8]*]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !1383), !dbg !1384 ; [debug line = 71:17] [debug variable = temp_buf]
  %sck_v = alloca [32 x i32], align 4             ; [#uses=3 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %sck_v}, metadata !1385), !dbg !1392 ; [debug line = 73:35] [debug variable = sck.v]
  %scs_v = alloca [32 x i32], align 4             ; [#uses=4 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %scs_v}, metadata !1393), !dbg !1395 ; [debug line = 73:40] [debug variable = scs.v]
  %scsk_v = alloca [32 x i32], align 4            ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %scsk_v}, metadata !1396), !dbg !1398 ; [debug line = 73:45] [debug variable = scsk.v]
  %ger_x_v = alloca [32 x i32], align 4           ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ger_x_v}, metadata !1399), !dbg !1415 ; [debug line = 74:35] [debug variable = ger.x.v]
  %ger_y_v = alloca [32 x i32], align 4           ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ger_y_v}, metadata !1416), !dbg !1415 ; [debug line = 74:35] [debug variable = ger.y.v]
  %ger_z_v = alloca [32 x i32], align 4           ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ger_z_v}, metadata !1417), !dbg !1415 ; [debug line = 74:35] [debug variable = ger.z.v]
  %ger_t_v = alloca [32 x i32], align 4           ; [#uses=1 type=[32 x i32]*]
  %hash_state = alloca [8 x i64], align 8         ; [#uses=12 type=[8 x i64]*]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %hash_state}, metadata !1418), !dbg !1429 ; [debug line = 75:18] [debug variable = hash.state]
  %hash_buf = alloca [128 x i8], align 1          ; [#uses=9 type=[128 x i8]*]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %hash_buf}, metadata !1430), !dbg !1429 ; [debug line = 75:18] [debug variable = hash.buf]
  call void @llvm.dbg.value(metadata !{i8* %mem}, i64 0, metadata !1433), !dbg !1437 ; [debug line = 49:17] [debug variable = mem]
  call void @llvm.dbg.value(metadata !{i32 %num_blocks}, i64 0, metadata !1337), !dbg !1342 ; [debug line = 50:16] [debug variable = num_blocks]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %sk}, i64 0, metadata !1438), !dbg !1439 ; [debug line = 51:17] [debug variable = sk]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %signature_out}, i64 0, metadata !1440), !dbg !1441 ; [debug line = 52:17] [debug variable = signature_out]
  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind, !dbg !1442 ; [debug line = 55:1]
  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %signature_out, [1 x i8]* @p_str13, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str13, i32 -1, [1 x i8]* @p_str13, [1 x i8]* @p_str13, [1 x i8]* @p_str13, [1 x i8]* @p_str13, [1 x i8]* @p_str13) ; [#uses=0 type=i32]
  call void (...)* @_ssdm_op_SpecInterface([64 x i8]* %signature_out, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind
  %empty_82 = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %sk, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  call void (...)* @_ssdm_op_SpecInterface([64 x i8]* %sk, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind
  call void (...)* @_ssdm_op_SpecInterface(i32 %num_blocks, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind, !dbg !1443 ; [debug line = 58:1]
  call void (...)* @_ssdm_op_SpecInterface(i8* %mem, [6 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32768, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [17 x i8]* @p_str3, [1 x i8]* @p_str1) nounwind, !dbg !1444 ; [debug line = 60:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [18 x i8]* @p_str4, [1 x i8]* @p_str1) nounwind, !dbg !1445 ; [debug line = 61:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [13 x i8]* @p_str5, [1 x i8]* @p_str1) nounwind, !dbg !1446 ; [debug line = 62:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [12 x i8]* @p_str6, [1 x i8]* @p_str1) nounwind, !dbg !1447 ; [debug line = 63:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [9 x i8]* @p_str7, [1 x i8]* @p_str1) nounwind, !dbg !1448 ; [debug line = 64:1]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %pk}, metadata !1449), !dbg !1450 ; [debug line = 65:16] [debug variable = pk]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %az}, metadata !1451), !dbg !1452 ; [debug line = 66:17] [debug variable = az]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %signature}, metadata !1453), !dbg !1454 ; [debug line = 70:17] [debug variable = signature]
  %empty_83 = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %signature, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  br label %meminst

meminst:                                          ; preds = %meminst, %0
  %invdar = phi i6 [ 0, %0 ], [ %indvarinc, %meminst ] ; [#uses=3 type=i6]
  %indvarinc = add i6 %invdar, 1, !dbg !1455      ; [#uses=1 type=i6] [debug line = 70:36]
  %tmp = zext i6 %invdar to i64, !dbg !1455       ; [#uses=1 type=i64] [debug line = 70:36]
  %signature_addr = getelementptr [64 x i8]* %signature, i64 0, i64 %tmp, !dbg !1455 ; [#uses=1 type=i8*] [debug line = 70:36]
  store i8 0, i8* %signature_addr, align 1, !dbg !1455 ; [debug line = 70:36]
  %tmp_s = icmp eq i6 %invdar, -1, !dbg !1455     ; [#uses=1 type=i1] [debug line = 70:36]
  %empty_84 = call i32 (...)* @_ssdm_op_SpecLoopName([17 x i8]* @memset_signature_str) nounwind ; [#uses=0 type=i32]
  %empty_85 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  br i1 %tmp_s, label %.preheader109.preheader, label %meminst, !dbg !1455 ; [debug line = 70:36]

.preheader109.preheader:                          ; preds = %meminst
  br label %.preheader109, !dbg !1456             ; [debug line = 15:6@35:2@78:3]

.preheader109:                                    ; preds = %1, %.preheader109.preheader
  %i_i_i = phi i6 [ %i_73, %1 ], [ 0, %.preheader109.preheader ] ; [#uses=4 type=i6]
  %exitcond_i_i = icmp eq i6 %i_i_i, -32, !dbg !1456 ; [#uses=1 type=i1] [debug line = 15:6@35:2@78:3]
  %empty_86 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  %i_73 = add i6 %i_i_i, 1, !dbg !1459            ; [#uses=1 type=i6] [debug line = 15:18@35:2@78:3]
  br i1 %exitcond_i_i, label %_memmove.1.exit, label %1, !dbg !1456 ; [debug line = 15:6@35:2@78:3]

; <label>:1                                       ; preds = %.preheader109
  %tmp_i_i = zext i6 %i_i_i to i64, !dbg !1460    ; [#uses=1 type=i64] [debug line = 16:3@35:2@78:3]
  %sum_i_i = xor i6 %i_i_i, -32                   ; [#uses=1 type=i6]
  %sum_i_i_cast = zext i6 %sum_i_i to i64         ; [#uses=1 type=i64]
  %sk_addr = getelementptr [64 x i8]* %sk, i64 0, i64 %sum_i_i_cast, !dbg !1460 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@78:3]
  %sk_load = load i8* %sk_addr, align 1, !dbg !1460 ; [#uses=1 type=i8] [debug line = 16:3@35:2@78:3]
  %pk_addr = getelementptr [32 x i8]* %pk, i64 0, i64 %tmp_i_i, !dbg !1460 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@78:3]
  store i8 %sk_load, i8* %pk_addr, align 1, !dbg !1460 ; [debug line = 16:3@35:2@78:3]
  call void @llvm.dbg.value(metadata !{i6 %i_73}, i64 0, metadata !1462) nounwind, !dbg !1459 ; [debug line = 15:18@35:2@78:3] [debug variable = i]
  br label %.preheader109, !dbg !1459             ; [debug line = 15:18@35:2@78:3]

_memmove.1.exit:                                  ; preds = %.preheader109
  call fastcc void @sha512_init([8 x i64]* %hash_state) nounwind, !dbg !1463 ; [debug line = 82:3]
  %call_ret = call fastcc { i64, i64 } @sha512_update_32([8 x i64]* %hash_state, [128 x i8]* %hash_buf, [64 x i8]* %sk) nounwind, !dbg !1464 ; [#uses=2 type={ i64, i64 }] [debug line = 83:3]
  %hash_length = extractvalue { i64, i64 } %call_ret, 0, !dbg !1464 ; [#uses=1 type=i64] [debug line = 83:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_length}, i64 0, metadata !1465), !dbg !1464 ; [debug line = 83:3] [debug variable = hash.length]
  %hash_curlen = extractvalue { i64, i64 } %call_ret, 1, !dbg !1464 ; [#uses=1 type=i64] [debug line = 83:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_curlen}, i64 0, metadata !1468), !dbg !1464 ; [debug line = 83:3] [debug variable = hash.curlen]
  %az_addr = getelementptr inbounds [64 x i8]* %az, i64 0, i64 0, !dbg !1471 ; [#uses=2 type=i8*] [debug line = 84:3]
  call fastcc void @sha512_final(i64 %hash_length, [8 x i64]* %hash_state, i64 %hash_curlen, [128 x i8]* %hash_buf, [64 x i8]* %az) nounwind, !dbg !1471 ; [debug line = 84:3]
  %az_load = load i8* %az_addr, align 16, !dbg !1472 ; [#uses=1 type=i8] [debug line = 86:3]
  %tmp_784 = call i5 @_ssdm_op_PartSelect.i5.i8.i32.i32(i8 %az_load, i32 3, i32 7) ; [#uses=1 type=i5]
  %tmp_800 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_784, i3 0), !dbg !1472 ; [#uses=1 type=i8] [debug line = 86:3]
  store i8 %tmp_800, i8* %az_addr, align 16, !dbg !1472 ; [debug line = 86:3]
  %az_addr_1 = getelementptr inbounds [64 x i8]* %az, i64 0, i64 31, !dbg !1473 ; [#uses=2 type=i8*] [debug line = 87:3]
  %az_load_1 = load i8* %az_addr_1, align 1, !dbg !1473 ; [#uses=1 type=i8] [debug line = 87:3]
  %tmp_804 = trunc i8 %az_load_1 to i6, !dbg !1473 ; [#uses=1 type=i6] [debug line = 87:3]
  %tmp_801 = call i7 @_ssdm_op_BitConcatenate.i7.i1.i6(i1 true, i6 %tmp_804), !dbg !1474 ; [#uses=1 type=i7] [debug line = 88:3]
  %tmp_894_cast = zext i7 %tmp_801 to i8, !dbg !1474 ; [#uses=1 type=i8] [debug line = 88:3]
  store i8 %tmp_894_cast, i8* %az_addr_1, align 1, !dbg !1474 ; [debug line = 88:3]
  br label %2, !dbg !1475                         ; [debug line = 15:6@35:2@96:3]

; <label>:2                                       ; preds = %3, %_memmove.1.exit
  %i_i_i1 = phi i6 [ 0, %_memmove.1.exit ], [ %i_74, %3 ] ; [#uses=3 type=i6]
  %exitcond_i_i1 = icmp eq i6 %i_i_i1, -32, !dbg !1475 ; [#uses=1 type=i1] [debug line = 15:6@35:2@96:3]
  %empty_87 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  %i_74 = add i6 %i_i_i1, 1, !dbg !1478           ; [#uses=1 type=i6] [debug line = 15:18@35:2@96:3]
  br i1 %exitcond_i_i1, label %_memmove.2.exit, label %3, !dbg !1475 ; [debug line = 15:6@35:2@96:3]

; <label>:3                                       ; preds = %2
  %sum3_i_i = xor i6 %i_i_i1, -32                 ; [#uses=1 type=i6]
  %sum3_i_i_cast = zext i6 %sum3_i_i to i64       ; [#uses=2 type=i64]
  %az_addr_2 = getelementptr [64 x i8]* %az, i64 0, i64 %sum3_i_i_cast, !dbg !1479 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@96:3]
  %az_load_2 = load i8* %az_addr_2, align 1, !dbg !1479 ; [#uses=1 type=i8] [debug line = 16:3@35:2@96:3]
  %signature_addr_1 = getelementptr [64 x i8]* %signature, i64 0, i64 %sum3_i_i_cast, !dbg !1479 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@96:3]
  store i8 %az_load_2, i8* %signature_addr_1, align 1, !dbg !1479 ; [debug line = 16:3@35:2@96:3]
  call void @llvm.dbg.value(metadata !{i6 %i_74}, i64 0, metadata !1480) nounwind, !dbg !1478 ; [debug line = 15:18@35:2@96:3] [debug variable = i]
  br label %2, !dbg !1478                         ; [debug line = 15:18@35:2@96:3]

_memmove.2.exit:                                  ; preds = %2
  call fastcc void @sha512_init([8 x i64]* %hash_state) nounwind, !dbg !1481 ; [debug line = 100:3]
  %tmp_10 = call fastcc { i64, i64 } @sha512_update_32.1(i64 0, [8 x i64]* %hash_state, i64 0, [128 x i8]* %hash_buf, [64 x i8]* %signature, i7 32) nounwind, !dbg !1482 ; [#uses=2 type={ i64, i64 }] [debug line = 102:3]
  %hash_length_2 = extractvalue { i64, i64 } %tmp_10, 0, !dbg !1482 ; [#uses=1 type=i64] [debug line = 102:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_length_2}, i64 0, metadata !1465), !dbg !1482 ; [debug line = 102:3] [debug variable = hash.length]
  %hash_curlen_2 = extractvalue { i64, i64 } %tmp_10, 1, !dbg !1482 ; [#uses=1 type=i64] [debug line = 102:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_curlen_2}, i64 0, metadata !1468), !dbg !1482 ; [debug line = 102:3] [debug variable = hash.curlen]
  br label %4, !dbg !1483                         ; [debug line = 104:7]

; <label>:4                                       ; preds = %6, %_memmove.2.exit
  %hash_curlen3 = phi i64 [ %hash_curlen_2, %_memmove.2.exit ], [ %hash_curlen_5, %6 ] ; [#uses=2 type=i64]
  %hash_length3 = phi i64 [ %hash_length_2, %_memmove.2.exit ], [ %hash_length_5, %6 ] ; [#uses=2 type=i64]
  %i = phi i32 [ 0, %_memmove.2.exit ], [ %i_75, %6 ] ; [#uses=3 type=i32]
  %exitcond3 = icmp eq i32 %i, %num_blocks_read, !dbg !1483 ; [#uses=1 type=i1] [debug line = 104:7]
  %i_75 = add nsw i32 %i, 1, !dbg !1485           ; [#uses=1 type=i32] [debug line = 104:26]
  br i1 %exitcond3, label %7, label %.preheader4.preheader, !dbg !1483 ; [debug line = 104:7]

.preheader4.preheader:                            ; preds = %4
  %tmp_806 = shl i32 %i, 7, !dbg !1486            ; [#uses=1 type=i32] [debug line = 107:5]
  %tmp_80 = sext i32 %tmp_806 to i64, !dbg !1486  ; [#uses=1 type=i64] [debug line = 107:5]
  %mem_addr = getelementptr i8* %mem, i64 %tmp_80 ; [#uses=2 type=i8*]
  %mem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %mem_addr, i32 128), !dbg !1486 ; [#uses=0 type=i1] [debug line = 107:5]
  br label %.preheader4, !dbg !1490               ; [debug line = 106:8]

.preheader4:                                      ; preds = %5, %.preheader4.preheader
  %j = phi i8 [ %j_3, %5 ], [ 0, %.preheader4.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %j, -128, !dbg !1490    ; [#uses=1 type=i1] [debug line = 106:8]
  %empty_88 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind ; [#uses=0 type=i32]
  %j_3 = add i8 %j, 1, !dbg !1491                 ; [#uses=1 type=i8] [debug line = 106:20]
  br i1 %exitcond2, label %6, label %5, !dbg !1490 ; [debug line = 106:8]

; <label>:5                                       ; preds = %.preheader4
  %mem_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %mem_addr), !dbg !1486 ; [#uses=1 type=i8] [debug line = 107:5]
  %tmp_802 = zext i8 %j to i64, !dbg !1486        ; [#uses=1 type=i64] [debug line = 107:5]
  %temp_buf_addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_802, !dbg !1486 ; [#uses=1 type=i8*] [debug line = 107:5]
  store i8 %mem_addr_read, i8* %temp_buf_addr, align 1, !dbg !1486 ; [debug line = 107:5]
  call void @llvm.dbg.value(metadata !{i8 %j_3}, i64 0, metadata !1492), !dbg !1491 ; [debug line = 106:20] [debug variable = j]
  br label %.preheader4, !dbg !1491               ; [debug line = 106:20]

; <label>:6                                       ; preds = %.preheader4
  %call_ret1 = call fastcc { i64, i64 } @sha512_update_128(i64 %hash_length3, [8 x i64]* %hash_state, i64 %hash_curlen3, [128 x i8]* %hash_buf, [128 x i8]* %temp_buf) nounwind, !dbg !1493 ; [#uses=2 type={ i64, i64 }] [debug line = 109:4]
  %hash_length_5 = extractvalue { i64, i64 } %call_ret1, 0, !dbg !1493 ; [#uses=1 type=i64] [debug line = 109:4]
  call void @llvm.dbg.value(metadata !{i64 %hash_length_5}, i64 0, metadata !1465), !dbg !1493 ; [debug line = 109:4] [debug variable = hash.length]
  %hash_curlen_5 = extractvalue { i64, i64 } %call_ret1, 1, !dbg !1493 ; [#uses=1 type=i64] [debug line = 109:4]
  call void @llvm.dbg.value(metadata !{i64 %hash_curlen_5}, i64 0, metadata !1468), !dbg !1493 ; [debug line = 109:4] [debug variable = hash.curlen]
  call void @llvm.dbg.value(metadata !{i32 %i_75}, i64 0, metadata !1494), !dbg !1485 ; [debug line = 104:26] [debug variable = i]
  br label %4, !dbg !1485                         ; [debug line = 104:26]

; <label>:7                                       ; preds = %4
  call fastcc void @sha512_final(i64 %hash_length3, [8 x i64]* %hash_state, i64 %hash_curlen3, [128 x i8]* %hash_buf, [64 x i8]* %nonce) nounwind, !dbg !1495 ; [debug line = 111:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %sck_v}, i64 0, metadata !1496) nounwind, !dbg !1502 ; [debug line = 107:83@114:3] [debug variable = r.v]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !1503) nounwind, !dbg !1505 ; [debug line = 110:17@114:3] [debug variable = t]
  br label %8, !dbg !1506                         ; [debug line = 111:7@114:3]

; <label>:8                                       ; preds = %9, %7
  %i_i = phi i7 [ 0, %7 ], [ %i_2, %9 ]           ; [#uses=3 type=i7]
  %exitcond_i = icmp eq i7 %i_i, -64, !dbg !1506  ; [#uses=1 type=i1] [debug line = 111:7@114:3]
  %empty_89 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  %i_2 = add i7 %i_i, 1, !dbg !1508               ; [#uses=1 type=i7] [debug line = 111:16@114:3]
  br i1 %exitcond_i, label %crypto_sign_ed25519_ref_sc25519_from64bytes.exit, label %9, !dbg !1506 ; [debug line = 111:7@114:3]

; <label>:9                                       ; preds = %8
  %tmp_i = zext i7 %i_i to i64, !dbg !1509        ; [#uses=2 type=i64] [debug line = 111:21@114:3]
  %nonce_addr = getelementptr [64 x i8]* %nonce, i64 0, i64 %tmp_i, !dbg !1509 ; [#uses=1 type=i8*] [debug line = 111:21@114:3]
  %nonce_load = load i8* %nonce_addr, align 1, !dbg !1509 ; [#uses=1 type=i8] [debug line = 111:21@114:3]
  %tmp_i_90 = zext i8 %nonce_load to i32, !dbg !1509 ; [#uses=1 type=i32] [debug line = 111:21@114:3]
  %t_addr = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp_i, !dbg !1509 ; [#uses=1 type=i32*] [debug line = 111:21@114:3]
  store i32 %tmp_i_90, i32* %t_addr, align 4, !dbg !1509 ; [debug line = 111:21@114:3]
  call void @llvm.dbg.value(metadata !{i7 %i_2}, i64 0, metadata !1510) nounwind, !dbg !1508 ; [debug line = 111:16@114:3] [debug variable = i]
  br label %8, !dbg !1508                         ; [debug line = 111:16@114:3]

crypto_sign_ed25519_ref_sc25519_from64bytes.exit: ; preds = %8
  call fastcc void @barrett_reduce([32 x i32]* %sck_v, [64 x i32]* %t) nounwind, !dbg !1511 ; [debug line = 112:3@114:3]
  call fastcc void @crypto_sign_ed25519_.13([32 x i32]* %ger_x_v, [32 x i32]* %ger_y_v, [32 x i32]* %ger_z_v, [32 x i32]* %ger_t_v, [32 x i32]* %sck_v) nounwind, !dbg !1512 ; [debug line = 115:3]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %signature}, i64 0, metadata !1513) nounwind, !dbg !1520 ; [debug line = 234:49@117:3] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %ger_x_v}, i64 0, metadata !1521) nounwind, !dbg !1523 ; [debug line = 234:95@117:3] [debug variable = p.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %ger_y_v}, i64 0, metadata !1524) nounwind, !dbg !1523 ; [debug line = 234:95@117:3] [debug variable = p.y.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %ger_z_v}, i64 0, metadata !1525) nounwind, !dbg !1523 ; [debug line = 234:95@117:3] [debug variable = p.z.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %tx_v}, metadata !1526) nounwind, !dbg !1529 ; [debug line = 236:35@117:3] [debug variable = tx.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ty_v}, metadata !1530) nounwind, !dbg !1532 ; [debug line = 236:39@117:3] [debug variable = ty.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %zi_v}, metadata !1533) nounwind, !dbg !1535 ; [debug line = 236:43@117:3] [debug variable = zi.v]
  call fastcc void @crypto_sign_ed25519_.19([32 x i32]* %zi_v, [32 x i32]* %ger_z_v) nounwind, !dbg !1536 ; [debug line = 237:3@117:3]
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %tx_v, [32 x i32]* %ger_x_v, [32 x i32]* %zi_v) nounwind
  call fastcc void @crypto_sign_ed25519_.18([32 x i32]* %ty_v, [32 x i32]* %ger_y_v, [32 x i32]* %zi_v) nounwind
  call fastcc void @crypto_sign_ed25519_.9([64 x i8]* %signature, [32 x i32]* %ty_v) nounwind, !dbg !1537 ; [debug line = 240:3@117:3]
  %tmp_i1 = call fastcc i1 @crypto_sign_ed25519_.20([32 x i32]* %tx_v) nounwind, !dbg !1538 ; [#uses=1 type=i1] [debug line = 241:12@117:3]
  %tmp_i1_91 = call i8 @_ssdm_op_BitConcatenate.i8.i1.i7(i1 %tmp_i1, i7 0), !dbg !1538 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  %signature_addr_2 = getelementptr [64 x i8]* %signature, i64 0, i64 31, !dbg !1538 ; [#uses=2 type=i8*] [debug line = 241:12@117:3]
  %signature_load = load i8* %signature_addr_2, align 1, !dbg !1538 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  %tmp_863_i = xor i8 %signature_load, %tmp_i1_91, !dbg !1538 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  store i8 %tmp_863_i, i8* %signature_addr_2, align 1, !dbg !1538 ; [debug line = 241:12@117:3]
  call fastcc void @_memmove([64 x i8]* %signature, [32 x i8]* %pk) nounwind, !dbg !1539 ; [debug line = 122:3]
  call fastcc void @sha512_init([8 x i64]* %hash_state) nounwind, !dbg !1540 ; [debug line = 126:3]
  %tmp_11 = call fastcc { i64, i64 } @sha512_update_32.1(i64 0, [8 x i64]* %hash_state, i64 0, [128 x i8]* %hash_buf, [64 x i8]* %signature, i7 0) nounwind, !dbg !1541 ; [#uses=2 type={ i64, i64 }] [debug line = 127:3]
  %hash_length_3 = extractvalue { i64, i64 } %tmp_11, 0, !dbg !1541 ; [#uses=1 type=i64] [debug line = 127:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_length_3}, i64 0, metadata !1465), !dbg !1541 ; [debug line = 127:3] [debug variable = hash.length]
  %hash_curlen_3 = extractvalue { i64, i64 } %tmp_11, 1, !dbg !1541 ; [#uses=1 type=i64] [debug line = 127:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_curlen_3}, i64 0, metadata !1468), !dbg !1541 ; [debug line = 127:3] [debug variable = hash.curlen]
  %tmp_12 = call fastcc { i64, i64 } @sha512_update_32.1(i64 %hash_length_3, [8 x i64]* %hash_state, i64 %hash_curlen_3, [128 x i8]* %hash_buf, [64 x i8]* %signature, i7 32) nounwind, !dbg !1542 ; [#uses=2 type={ i64, i64 }] [debug line = 128:3]
  %hash_length_4 = extractvalue { i64, i64 } %tmp_12, 0, !dbg !1542 ; [#uses=1 type=i64] [debug line = 128:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_length_4}, i64 0, metadata !1465), !dbg !1542 ; [debug line = 128:3] [debug variable = hash.length]
  %hash_curlen_4 = extractvalue { i64, i64 } %tmp_12, 1, !dbg !1542 ; [#uses=1 type=i64] [debug line = 128:3]
  call void @llvm.dbg.value(metadata !{i64 %hash_curlen_4}, i64 0, metadata !1468), !dbg !1542 ; [debug line = 128:3] [debug variable = hash.curlen]
  br label %10, !dbg !1543                        ; [debug line = 130:7]

; <label>:10                                      ; preds = %12, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit
  %hash_curlen_1 = phi i64 [ %hash_curlen_4, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit ], [ %hash_curlen_6, %12 ] ; [#uses=2 type=i64]
  %hash_length_1 = phi i64 [ %hash_length_4, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit ], [ %hash_length_6, %12 ] ; [#uses=2 type=i64]
  %i_1 = phi i32 [ 0, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit ], [ %i_76, %12 ] ; [#uses=3 type=i32]
  %exitcond1 = icmp eq i32 %i_1, %num_blocks_read, !dbg !1543 ; [#uses=1 type=i1] [debug line = 130:7]
  %i_76 = add nsw i32 %i_1, 1, !dbg !1545         ; [#uses=1 type=i32] [debug line = 130:26]
  br i1 %exitcond1, label %13, label %.preheader.preheader, !dbg !1543 ; [debug line = 130:7]

.preheader.preheader:                             ; preds = %10
  %tmp_807 = shl i32 %i_1, 7, !dbg !1546          ; [#uses=1 type=i32] [debug line = 133:7]
  %tmp_808 = sext i32 %tmp_807 to i64, !dbg !1546 ; [#uses=1 type=i64] [debug line = 133:7]
  %mem_addr_1 = getelementptr i8* %mem, i64 %tmp_808 ; [#uses=2 type=i8*]
  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %mem_addr_1, i32 128), !dbg !1546 ; [#uses=0 type=i1] [debug line = 133:7]
  br label %.preheader, !dbg !1550                ; [debug line = 132:9]

.preheader:                                       ; preds = %11, %.preheader.preheader
  %j_1 = phi i8 [ %j_4, %11 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %j_1, -128, !dbg !1550   ; [#uses=1 type=i1] [debug line = 132:9]
  %empty_92 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind ; [#uses=0 type=i32]
  %j_4 = add i8 %j_1, 1, !dbg !1551               ; [#uses=1 type=i8] [debug line = 132:21]
  br i1 %exitcond, label %12, label %11, !dbg !1550 ; [debug line = 132:9]

; <label>:11                                      ; preds = %.preheader
  %mem_addr_1_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %mem_addr_1), !dbg !1546 ; [#uses=1 type=i8] [debug line = 133:7]
  %tmp_803 = zext i8 %j_1 to i64, !dbg !1546      ; [#uses=1 type=i64] [debug line = 133:7]
  %temp_buf_addr_6 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp_803, !dbg !1546 ; [#uses=1 type=i8*] [debug line = 133:7]
  store i8 %mem_addr_1_read, i8* %temp_buf_addr_6, align 1, !dbg !1546 ; [debug line = 133:7]
  call void @llvm.dbg.value(metadata !{i8 %j_4}, i64 0, metadata !1492), !dbg !1551 ; [debug line = 132:21] [debug variable = j]
  br label %.preheader, !dbg !1551                ; [debug line = 132:21]

; <label>:12                                      ; preds = %.preheader
  %call_ret2 = call fastcc { i64, i64 } @sha512_update_128(i64 %hash_length_1, [8 x i64]* %hash_state, i64 %hash_curlen_1, [128 x i8]* %hash_buf, [128 x i8]* %temp_buf) nounwind, !dbg !1552 ; [#uses=2 type={ i64, i64 }] [debug line = 135:2]
  %hash_length_6 = extractvalue { i64, i64 } %call_ret2, 0, !dbg !1552 ; [#uses=1 type=i64] [debug line = 135:2]
  call void @llvm.dbg.value(metadata !{i64 %hash_length_6}, i64 0, metadata !1465), !dbg !1552 ; [debug line = 135:2] [debug variable = hash.length]
  %hash_curlen_6 = extractvalue { i64, i64 } %call_ret2, 1, !dbg !1552 ; [#uses=1 type=i64] [debug line = 135:2]
  call void @llvm.dbg.value(metadata !{i64 %hash_curlen_6}, i64 0, metadata !1468), !dbg !1552 ; [debug line = 135:2] [debug variable = hash.curlen]
  call void @llvm.dbg.value(metadata !{i32 %i_76}, i64 0, metadata !1494), !dbg !1545 ; [debug line = 130:26] [debug variable = i]
  br label %10, !dbg !1545                        ; [debug line = 130:26]

; <label>:13                                      ; preds = %10
  call fastcc void @sha512_final(i64 %hash_length_1, [8 x i64]* %hash_state, i64 %hash_curlen_1, [128 x i8]* %hash_buf, [64 x i8]* %hram) nounwind, !dbg !1553 ; [debug line = 137:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %scs_v}, i64 0, metadata !1554) nounwind, !dbg !1556 ; [debug line = 107:83@141:3] [debug variable = r.v]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t_10}, metadata !1503) nounwind, !dbg !1557 ; [debug line = 110:17@141:3] [debug variable = t]
  br label %14, !dbg !1558                        ; [debug line = 111:7@141:3]

; <label>:14                                      ; preds = %15, %13
  %i_i1 = phi i7 [ 0, %13 ], [ %i_3, %15 ]        ; [#uses=3 type=i7]
  %exitcond_i1 = icmp eq i7 %i_i1, -64, !dbg !1558 ; [#uses=1 type=i1] [debug line = 111:7@141:3]
  %empty_93 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  %i_3 = add i7 %i_i1, 1, !dbg !1559              ; [#uses=1 type=i7] [debug line = 111:16@141:3]
  br i1 %exitcond_i1, label %crypto_sign_ed25519_ref_sc25519_from64bytes.exit92, label %15, !dbg !1558 ; [debug line = 111:7@141:3]

; <label>:15                                      ; preds = %14
  %tmp_i2 = zext i7 %i_i1 to i64, !dbg !1560      ; [#uses=2 type=i64] [debug line = 111:21@141:3]
  %hram_addr = getelementptr [64 x i8]* %hram, i64 0, i64 %tmp_i2, !dbg !1560 ; [#uses=1 type=i8*] [debug line = 111:21@141:3]
  %hram_load = load i8* %hram_addr, align 1, !dbg !1560 ; [#uses=1 type=i8] [debug line = 111:21@141:3]
  %tmp_i2_94 = zext i8 %hram_load to i32, !dbg !1560 ; [#uses=1 type=i32] [debug line = 111:21@141:3]
  %t_10_addr = getelementptr inbounds [64 x i32]* %t_10, i64 0, i64 %tmp_i2, !dbg !1560 ; [#uses=1 type=i32*] [debug line = 111:21@141:3]
  store i32 %tmp_i2_94, i32* %t_10_addr, align 4, !dbg !1560 ; [debug line = 111:21@141:3]
  call void @llvm.dbg.value(metadata !{i7 %i_3}, i64 0, metadata !1561) nounwind, !dbg !1559 ; [debug line = 111:16@141:3] [debug variable = i]
  br label %14, !dbg !1559                        ; [debug line = 111:16@141:3]

crypto_sign_ed25519_ref_sc25519_from64bytes.exit92: ; preds = %14
  call fastcc void @barrett_reduce([32 x i32]* %scs_v, [64 x i32]* %t_10) nounwind, !dbg !1562 ; [debug line = 112:3@141:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %scsk_v}, i64 0, metadata !1563) nounwind, !dbg !1567 ; [debug line = 92:83@142:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %az}, i64 0, metadata !1568) nounwind, !dbg !1569 ; [debug line = 92:106@142:3] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t_11}, metadata !1570) nounwind, !dbg !1572 ; [debug line = 95:17@142:3] [debug variable = t]
  br label %16, !dbg !1573                        ; [debug line = 96:7@142:3]

; <label>:16                                      ; preds = %17, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit92
  %i_i2 = phi i6 [ 0, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit92 ], [ %i_77, %17 ] ; [#uses=3 type=i6]
  %exitcond1_i = icmp eq i6 %i_i2, -32, !dbg !1573 ; [#uses=1 type=i1] [debug line = 96:7@142:3]
  %empty_95 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  %i_77 = add i6 %i_i2, 1, !dbg !1575             ; [#uses=1 type=i6] [debug line = 96:16@142:3]
  br i1 %exitcond1_i, label %.preheader.i.preheader, label %17, !dbg !1573 ; [debug line = 96:7@142:3]

.preheader.i.preheader:                           ; preds = %16
  br label %.preheader.i, !dbg !1576              ; [debug line = 97:7@142:3]

; <label>:17                                      ; preds = %16
  %tmp_i3 = zext i6 %i_i2 to i64, !dbg !1578      ; [#uses=2 type=i64] [debug line = 96:21@142:3]
  %az_addr_3 = getelementptr [64 x i8]* %az, i64 0, i64 %tmp_i3, !dbg !1578 ; [#uses=1 type=i8*] [debug line = 96:21@142:3]
  %az_load_3 = load i8* %az_addr_3, align 1, !dbg !1578 ; [#uses=1 type=i8] [debug line = 96:21@142:3]
  %tmp_i3_96 = zext i8 %az_load_3 to i32, !dbg !1578 ; [#uses=1 type=i32] [debug line = 96:21@142:3]
  %t_11_addr = getelementptr inbounds [64 x i32]* %t_11, i64 0, i64 %tmp_i3, !dbg !1578 ; [#uses=1 type=i32*] [debug line = 96:21@142:3]
  store i32 %tmp_i3_96, i32* %t_11_addr, align 4, !dbg !1578 ; [debug line = 96:21@142:3]
  call void @llvm.dbg.value(metadata !{i6 %i_77}, i64 0, metadata !1579) nounwind, !dbg !1575 ; [debug line = 96:16@142:3] [debug variable = i]
  br label %16, !dbg !1575                        ; [debug line = 96:16@142:3]

.preheader.i:                                     ; preds = %18, %.preheader.i.preheader
  %i_1_i = phi i7 [ %i_78, %18 ], [ 32, %.preheader.i.preheader ] ; [#uses=3 type=i7]
  %exitcond_i2 = icmp eq i7 %i_1_i, -64, !dbg !1576 ; [#uses=1 type=i1] [debug line = 97:7@142:3]
  %empty_97 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond_i2, label %crypto_sign_ed25519_ref_sc25519_from32bytes.exit, label %18, !dbg !1576 ; [debug line = 97:7@142:3]

; <label>:18                                      ; preds = %.preheader.i
  %tmp_858_i = zext i7 %i_1_i to i64, !dbg !1580  ; [#uses=1 type=i64] [debug line = 97:22@142:3]
  %t_11_addr_1 = getelementptr inbounds [64 x i32]* %t_11, i64 0, i64 %tmp_858_i, !dbg !1580 ; [#uses=1 type=i32*] [debug line = 97:22@142:3]
  store i32 0, i32* %t_11_addr_1, align 4, !dbg !1580 ; [debug line = 97:22@142:3]
  %i_78 = add i7 %i_1_i, 1, !dbg !1581            ; [#uses=1 type=i7] [debug line = 97:17@142:3]
  call void @llvm.dbg.value(metadata !{i7 %i_78}, i64 0, metadata !1579) nounwind, !dbg !1581 ; [debug line = 97:17@142:3] [debug variable = i]
  br label %.preheader.i, !dbg !1581              ; [debug line = 97:17@142:3]

crypto_sign_ed25519_ref_sc25519_from32bytes.exit: ; preds = %.preheader.i
  call fastcc void @barrett_reduce([32 x i32]* %scsk_v, [64 x i32]* %t_11) nounwind, !dbg !1582 ; [debug line = 98:3@142:3]
  call fastcc void @crypto_sign_ed25519_.15([32 x i32]* %scs_v, [32 x i32]* %scsk_v) nounwind
  call fastcc void @crypto_sign_ed25519_.16([32 x i32]* %scs_v, [32 x i32]* %sck_v) nounwind
  call void @llvm.dbg.value(metadata !{[64 x i8]* %signature}, i64 0, metadata !1583) nounwind, !dbg !1588 ; [debug line = 124:62@148:3] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %scs_v}, i64 0, metadata !1589) nounwind, !dbg !1591 ; [debug line = 124:108@148:3] [debug variable = x.v]
  br label %19, !dbg !1592                        ; [debug line = 127:7@148:3]

; <label>:19                                      ; preds = %20, %crypto_sign_ed25519_ref_sc25519_from32bytes.exit
  %i_i3 = phi i6 [ 0, %crypto_sign_ed25519_ref_sc25519_from32bytes.exit ], [ %i_79, %20 ] ; [#uses=4 type=i6]
  %exitcond_i3 = icmp eq i6 %i_i3, -32, !dbg !1592 ; [#uses=1 type=i1] [debug line = 127:7@148:3]
  %empty_98 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  %i_79 = add i6 %i_i3, 1, !dbg !1595             ; [#uses=1 type=i6] [debug line = 127:16@148:3]
  br i1 %exitcond_i3, label %crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader, label %20, !dbg !1592 ; [debug line = 127:7@148:3]

crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader: ; preds = %19
  br label %crypto_sign_ed25519_ref_sc25519_to32bytes.exit, !dbg !1596 ; [debug line = 15:6@154:3]

; <label>:20                                      ; preds = %19
  %tmp_i4 = zext i6 %i_i3 to i64, !dbg !1598      ; [#uses=1 type=i64] [debug line = 127:21@148:3]
  %scs_v_addr = getelementptr [32 x i32]* %scs_v, i64 0, i64 %tmp_i4, !dbg !1598 ; [#uses=1 type=i32*] [debug line = 127:21@148:3]
  %scs_v_load = load i32* %scs_v_addr, align 4, !dbg !1598 ; [#uses=1 type=i32] [debug line = 127:21@148:3]
  %tmp_809 = trunc i32 %scs_v_load to i8, !dbg !1598 ; [#uses=1 type=i8] [debug line = 127:21@148:3]
  %sum_i = xor i6 %i_i3, -32                      ; [#uses=1 type=i6]
  %sum_i_cast = zext i6 %sum_i to i64             ; [#uses=1 type=i64]
  %signature_addr_3 = getelementptr [64 x i8]* %signature, i64 0, i64 %sum_i_cast, !dbg !1598 ; [#uses=1 type=i8*] [debug line = 127:21@148:3]
  store i8 %tmp_809, i8* %signature_addr_3, align 1, !dbg !1598 ; [debug line = 127:21@148:3]
  call void @llvm.dbg.value(metadata !{i6 %i_79}, i64 0, metadata !1599) nounwind, !dbg !1595 ; [debug line = 127:16@148:3] [debug variable = i]
  br label %19, !dbg !1595                        ; [debug line = 127:16@148:3]

crypto_sign_ed25519_ref_sc25519_to32bytes.exit:   ; preds = %21, %crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader
  %i_i4 = phi i7 [ %i_80, %21 ], [ 0, %crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader ] ; [#uses=3 type=i7]
  %exitcond_i4 = icmp eq i7 %i_i4, -64, !dbg !1596 ; [#uses=1 type=i1] [debug line = 15:6@154:3]
  %empty_99 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  %i_80 = add i7 %i_i4, 1, !dbg !1600             ; [#uses=1 type=i7] [debug line = 15:18@154:3]
  br i1 %exitcond_i4, label %_memcpy.2.exit, label %21, !dbg !1596 ; [debug line = 15:6@154:3]

; <label>:21                                      ; preds = %crypto_sign_ed25519_ref_sc25519_to32bytes.exit
  %tmp_i5 = zext i7 %i_i4 to i64, !dbg !1601      ; [#uses=2 type=i64] [debug line = 16:3@154:3]
  %signature_addr_4 = getelementptr [64 x i8]* %signature, i64 0, i64 %tmp_i5, !dbg !1601 ; [#uses=1 type=i8*] [debug line = 16:3@154:3]
  %signature_load_1 = load i8* %signature_addr_4, align 1, !dbg !1601 ; [#uses=1 type=i8] [debug line = 16:3@154:3]
  %signature_out_addr = getelementptr [64 x i8]* %signature_out, i64 0, i64 %tmp_i5, !dbg !1601 ; [#uses=1 type=i8*] [debug line = 16:3@154:3]
  store i8 %signature_load_1, i8* %signature_out_addr, align 1, !dbg !1601 ; [debug line = 16:3@154:3]
  call void @llvm.dbg.value(metadata !{i7 %i_80}, i64 0, metadata !1602) nounwind, !dbg !1600 ; [debug line = 15:18@154:3] [debug variable = i]
  br label %crypto_sign_ed25519_ref_sc25519_to32bytes.exit, !dbg !1600 ; [debug line = 15:18@154:3]

_memcpy.2.exit:                                   ; preds = %crypto_sign_ed25519_ref_sc25519_to32bytes.exit
  ret i32 0, !dbg !1603                           ; [debug line = 155:3]
}

; [#uses=4]
define internal fastcc void @cmov_aff([32 x i32]* nocapture %r_x_v, [32 x i32]* %r_y_v, [13600 x i32]* %p_x_v, i9 %tmp_919, [13600 x i32]* %p_y_v, i9 %tmp_9191, i1 %b) {
  %mask = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %b) ; [#uses=1 type=i1]
  call void @llvm.dbg.value(metadata !{i1 %mask}, i64 0, metadata !1604), !dbg !1609 ; [debug line = 137:74] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i1 %mask}, i64 0, metadata !1610), !dbg !1616 ; [debug line = 131:135@139:3] [debug variable = b]
  %tmp_9191_read = call i9 @_ssdm_op_Read.ap_auto.i9(i9 %tmp_9191) ; [#uses=1 type=i9]
  %tmp_919_read = call i9 @_ssdm_op_Read.ap_auto.i9(i9 %tmp_919) ; [#uses=1 type=i9]
  %tmp = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_9191_read, i5 0) ; [#uses=1 type=i14]
  %tmp_787_cast = zext i14 %tmp to i15            ; [#uses=1 type=i15]
  %tmp_788 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_919_read, i5 0) ; [#uses=1 type=i14]
  %tmp_789_cast = zext i14 %tmp_788 to i15        ; [#uses=1 type=i15]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_x_v}, i64 0, metadata !1617), !dbg !1619 ; [debug line = 137:35] [debug variable = r.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_y_v}, i64 0, metadata !1620), !dbg !1619 ; [debug line = 137:35] [debug variable = r.y.v]
  call void @llvm.dbg.value(metadata !{[13600 x i32]* %p_x_v}, i64 0, metadata !1621), !dbg !1626 ; [debug line = 137:57] [debug variable = p.x.v]
  call void @llvm.dbg.value(metadata !{[13600 x i32]* %p_y_v}, i64 0, metadata !1627), !dbg !1626 ; [debug line = 137:57] [debug variable = p.y.v]
  call void @llvm.dbg.value(metadata !{i1 %b}, i64 0, metadata !1604), !dbg !1609 ; [debug line = 137:74] [debug variable = b]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_x_v}, i64 0, metadata !1628), !dbg !1630 ; [debug line = 131:76@139:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[13600 x i32]* %p_x_v}, i64 0, metadata !1631), !dbg !1634 ; [debug line = 131:118@139:3] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{i1 %b}, i64 0, metadata !1610), !dbg !1616 ; [debug line = 131:135@139:3] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i1 %b}, i64 0, metadata !1635), !dbg !1637 ; [debug line = 134:25@139:3] [debug variable = mask]
  %mask_cast = select i1 %mask, i32 -1, i32 0, !dbg !1638 ; [#uses=2 type=i32] [debug line = 135:3@139:3]
  call void @llvm.dbg.value(metadata !{i1 %mask}, i64 0, metadata !1639), !dbg !1641 ; [debug line = 135:3@140:3] [debug variable = mask]
  call void @llvm.dbg.value(metadata !{i1 %mask}, i64 0, metadata !1635), !dbg !1638 ; [debug line = 135:3@139:3] [debug variable = mask]
  br label %1, !dbg !1642                         ; [debug line = 136:7@139:3]

; <label>:1                                       ; preds = %2, %0
  %i_i = phi i6 [ 0, %0 ], [ %i, %2 ]             ; [#uses=4 type=i6]
  %exitcond_i = icmp eq i6 %i_i, -32, !dbg !1642  ; [#uses=1 type=i1] [debug line = 136:7@139:3]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i = add i6 %i_i, 1, !dbg !1644                 ; [#uses=1 type=i6] [debug line = 136:16@139:3]
  br i1 %exitcond_i, label %crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader, label %2, !dbg !1642 ; [debug line = 136:7@139:3]

crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader: ; preds = %1
  br label %crypto_sign_ed25519_ref_fe25519_cmov.exit, !dbg !1645 ; [debug line = 136:7@140:3]

; <label>:2                                       ; preds = %1
  %tmp_i = zext i6 %i_i to i64, !dbg !1646        ; [#uses=1 type=i64] [debug line = 136:21@139:3]
  %tmp_i_cast = zext i6 %i_i to i15, !dbg !1646   ; [#uses=1 type=i15] [debug line = 136:21@139:3]
  %tmp_790 = add i15 %tmp_789_cast, %tmp_i_cast, !dbg !1646 ; [#uses=1 type=i15] [debug line = 136:21@139:3]
  %tmp_790_cast = zext i15 %tmp_790 to i64, !dbg !1646 ; [#uses=1 type=i64] [debug line = 136:21@139:3]
  %p_x_v_addr = getelementptr [13600 x i32]* %p_x_v, i64 0, i64 %tmp_790_cast, !dbg !1646 ; [#uses=1 type=i32*] [debug line = 136:21@139:3]
  %p_x_v_load = load i32* %p_x_v_addr, align 4, !dbg !1646 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  %r_x_v_addr = getelementptr [32 x i32]* %r_x_v, i64 0, i64 %tmp_i, !dbg !1646 ; [#uses=2 type=i32*] [debug line = 136:21@139:3]
  %r_x_v_load = load i32* %r_x_v_addr, align 4, !dbg !1646 ; [#uses=2 type=i32] [debug line = 136:21@139:3]
  %tmp_894_i = xor i32 %r_x_v_load, %p_x_v_load, !dbg !1646 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  %tmp_895_i = and i32 %tmp_894_i, %mask_cast, !dbg !1646 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  %tmp_896_i = xor i32 %r_x_v_load, %tmp_895_i, !dbg !1646 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  store i32 %tmp_896_i, i32* %r_x_v_addr, align 4, !dbg !1646 ; [debug line = 136:21@139:3]
  call void @llvm.dbg.value(metadata !{i6 %i}, i64 0, metadata !1647), !dbg !1644 ; [debug line = 136:16@139:3] [debug variable = i]
  br label %1, !dbg !1644                         ; [debug line = 136:16@139:3]

crypto_sign_ed25519_ref_fe25519_cmov.exit:        ; preds = %3, %crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader
  %i_i5 = phi i6 [ %i_81, %3 ], [ 0, %crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader ] ; [#uses=4 type=i6]
  %exitcond_i6 = icmp eq i6 %i_i5, -32, !dbg !1645 ; [#uses=1 type=i1] [debug line = 136:7@140:3]
  %empty_100 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_81 = add i6 %i_i5, 1, !dbg !1648             ; [#uses=1 type=i6] [debug line = 136:16@140:3]
  br i1 %exitcond_i6, label %crypto_sign_ed25519_ref_fe25519_cmov.exit16, label %3, !dbg !1645 ; [debug line = 136:7@140:3]

; <label>:3                                       ; preds = %crypto_sign_ed25519_ref_fe25519_cmov.exit
  %tmp_i7 = zext i6 %i_i5 to i64, !dbg !1649      ; [#uses=1 type=i64] [debug line = 136:21@140:3]
  %tmp_i7_cast = zext i6 %i_i5 to i15, !dbg !1649 ; [#uses=1 type=i15] [debug line = 136:21@140:3]
  %tmp_791 = add i15 %tmp_787_cast, %tmp_i7_cast, !dbg !1649 ; [#uses=1 type=i15] [debug line = 136:21@140:3]
  %tmp_791_cast = zext i15 %tmp_791 to i64, !dbg !1649 ; [#uses=1 type=i64] [debug line = 136:21@140:3]
  %p_y_v_addr = getelementptr [13600 x i32]* %p_y_v, i64 0, i64 %tmp_791_cast, !dbg !1649 ; [#uses=1 type=i32*] [debug line = 136:21@140:3]
  %p_y_v_load = load i32* %p_y_v_addr, align 4, !dbg !1649 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  %r_y_v_addr = getelementptr [32 x i32]* %r_y_v, i64 0, i64 %tmp_i7, !dbg !1649 ; [#uses=2 type=i32*] [debug line = 136:21@140:3]
  %r_y_v_load = load i32* %r_y_v_addr, align 4, !dbg !1649 ; [#uses=2 type=i32] [debug line = 136:21@140:3]
  %tmp_894_i1 = xor i32 %r_y_v_load, %p_y_v_load, !dbg !1649 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  %tmp_895_i1 = and i32 %tmp_894_i1, %mask_cast, !dbg !1649 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  %tmp_896_i1 = xor i32 %r_y_v_load, %tmp_895_i1, !dbg !1649 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  store i32 %tmp_896_i1, i32* %r_y_v_addr, align 4, !dbg !1649 ; [debug line = 136:21@140:3]
  call void @llvm.dbg.value(metadata !{i6 %i_81}, i64 0, metadata !1650), !dbg !1648 ; [debug line = 136:16@140:3] [debug variable = i]
  br label %crypto_sign_ed25519_ref_fe25519_cmov.exit, !dbg !1648 ; [debug line = 136:16@140:3]

crypto_sign_ed25519_ref_fe25519_cmov.exit16:      ; preds = %crypto_sign_ed25519_ref_fe25519_cmov.exit
  ret void, !dbg !1651                            ; [debug line = 141:1]
}

; [#uses=2]
define internal fastcc void @choose_t([32 x i32]* %t_x_v, [32 x i32]* %t_y_v, i7 %pos, i8 %b) {
  %b_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %b) ; [#uses=8 type=i8]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1652), !dbg !1656 ; [debug line = 161:74] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1657), !dbg !1663 ; [debug line = 143:40@166:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1664), !dbg !1666 ; [debug line = 143:40@166:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1667), !dbg !1669 ; [debug line = 143:40@167:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1670), !dbg !1672 ; [debug line = 143:40@167:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1673), !dbg !1675 ; [debug line = 143:40@168:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1676), !dbg !1678 ; [debug line = 143:40@168:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1679), !dbg !1681 ; [debug line = 143:40@169:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b_read}, i64 0, metadata !1682), !dbg !1687 ; [debug line = 154:43@171:51] [debug variable = b]
  %pos_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %pos) ; [#uses=2 type=i7]
  call void @llvm.dbg.value(metadata !{i7 %pos_read}, i64 0, metadata !1688), !dbg !1689 ; [debug line = 161:57] [debug variable = pos]
  %t_v = alloca [32 x i32], align 4               ; [#uses=2 type=[32 x i32]*]
  %v_v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %v_v}, i64 0, metadata !1690), !dbg !1697 ; [debug line = 153:79@164:3@170:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t_x_v}, i64 0, metadata !1698), !dbg !1700 ; [debug line = 161:35] [debug variable = t.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t_y_v}, i64 0, metadata !1701), !dbg !1700 ; [debug line = 161:35] [debug variable = t.y.v]
  call void @llvm.dbg.value(metadata !{i7 %pos}, i64 0, metadata !1688), !dbg !1689 ; [debug line = 161:57] [debug variable = pos]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1652), !dbg !1656 ; [debug line = 161:74] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %v_v}, metadata !1702), !dbg !1704 ; [debug line = 164:35] [debug variable = v.v]
  %pos_cast4 = zext i7 %pos_read to i9, !dbg !1705 ; [#uses=1 type=i9] [debug line = 165:3]
  %p_shl = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %pos_read, i2 0), !dbg !1705 ; [#uses=1 type=i9] [debug line = 165:3]
  %tmp = add i9 %p_shl, %pos_cast4, !dbg !1705    ; [#uses=5 type=i9] [debug line = 165:3]
  %tmp_792 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp, i5 0) ; [#uses=32 type=i14]
  %tmp_793 = zext i14 %tmp_792 to i64, !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_793, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_794 = or i14 %tmp_792, 1                   ; [#uses=1 type=i14]
  %tmp_795 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_794), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_2 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_795, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_796 = or i14 %tmp_792, 2                   ; [#uses=1 type=i14]
  %tmp_797 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_796), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_3 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_797, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_798 = or i14 %tmp_792, 3                   ; [#uses=1 type=i14]
  %tmp_799 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_798), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_4 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_799, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_800 = or i14 %tmp_792, 4                   ; [#uses=1 type=i14]
  %tmp_801 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_800), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_5 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_801, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_802 = or i14 %tmp_792, 5                   ; [#uses=1 type=i14]
  %tmp_803 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_802), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_6 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_803, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_804 = or i14 %tmp_792, 6                   ; [#uses=1 type=i14]
  %tmp_805 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_804), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_7 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_805, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_806 = or i14 %tmp_792, 7                   ; [#uses=1 type=i14]
  %tmp_807 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_806), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_8 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_807, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_808 = or i14 %tmp_792, 8                   ; [#uses=1 type=i14]
  %tmp_809 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_808), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_9 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_809, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_810 = or i14 %tmp_792, 9                   ; [#uses=1 type=i14]
  %tmp_811 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_810), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_10 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_811, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_812 = or i14 %tmp_792, 10                  ; [#uses=1 type=i14]
  %tmp_813 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_812), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_11 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_813, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_814 = or i14 %tmp_792, 11                  ; [#uses=1 type=i14]
  %tmp_815 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_814), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_12 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_815, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_816 = or i14 %tmp_792, 12                  ; [#uses=1 type=i14]
  %tmp_817 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_816), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_13 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_817, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_818 = or i14 %tmp_792, 13                  ; [#uses=1 type=i14]
  %tmp_819 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_818), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_14 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_819, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_820 = or i14 %tmp_792, 14                  ; [#uses=1 type=i14]
  %tmp_821 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_820), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_15 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_821, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_822 = or i14 %tmp_792, 15                  ; [#uses=1 type=i14]
  %tmp_823 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_822), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_16 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_823, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_824 = or i14 %tmp_792, 16                  ; [#uses=1 type=i14]
  %tmp_825 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_824), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_17 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_825, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_826 = or i14 %tmp_792, 17                  ; [#uses=1 type=i14]
  %tmp_827 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_826), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_18 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_827, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_828 = or i14 %tmp_792, 18                  ; [#uses=1 type=i14]
  %tmp_829 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_828), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_19 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_829, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_830 = or i14 %tmp_792, 19                  ; [#uses=1 type=i14]
  %tmp_831 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_830), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_20 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_831, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_832 = or i14 %tmp_792, 20                  ; [#uses=1 type=i14]
  %tmp_833 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_832), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_21 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_833, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_834 = or i14 %tmp_792, 21                  ; [#uses=1 type=i14]
  %tmp_835 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_834), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_22 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_835, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_836 = or i14 %tmp_792, 22                  ; [#uses=1 type=i14]
  %tmp_837 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_836), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_23 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_837, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_838 = or i14 %tmp_792, 23                  ; [#uses=1 type=i14]
  %tmp_839 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_838), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_24 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_839, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_840 = or i14 %tmp_792, 24                  ; [#uses=1 type=i14]
  %tmp_841 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_840), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_25 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_841, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_842 = or i14 %tmp_792, 25                  ; [#uses=1 type=i14]
  %tmp_843 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_842), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_26 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_843, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_844 = or i14 %tmp_792, 26                  ; [#uses=1 type=i14]
  %tmp_845 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_844), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_27 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_845, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_846 = or i14 %tmp_792, 27                  ; [#uses=1 type=i14]
  %tmp_847 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_846), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_28 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_847, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_848 = or i14 %tmp_792, 28                  ; [#uses=1 type=i14]
  %tmp_849 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_848), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_29 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_849, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_850 = or i14 %tmp_792, 29                  ; [#uses=1 type=i14]
  %tmp_851 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_850), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_30 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_851, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_852 = or i14 %tmp_792, 30                  ; [#uses=1 type=i14]
  %tmp_853 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_852), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_31 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_853, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %tmp_854 = or i14 %tmp_792, 31                  ; [#uses=1 type=i14]
  %tmp_855 = call i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50 0, i14 %tmp_854), !dbg !1705 ; [#uses=2 type=i64] [debug line = 165:3]
  %ge25519_base_multipl_32 = getelementptr [13600 x i32]* @ge25519_base_multipl_1, i64 0, i64 %tmp_855, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_33 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_793, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_34 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_795, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_35 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_797, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_36 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_799, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_37 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_801, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_38 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_803, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_39 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_805, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_40 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_807, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_41 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_809, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_42 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_811, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_43 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_813, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_44 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_815, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_45 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_817, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_46 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_819, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_47 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_821, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_48 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_823, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_49 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_825, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_50 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_827, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_51 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_829, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_52 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_831, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_53 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_833, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_54 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_835, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_55 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_837, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_56 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_839, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_57 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_841, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_58 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_843, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_59 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_845, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_60 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_847, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_61 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_849, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_62 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_851, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_63 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_853, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_64 = getelementptr [13600 x i32]* @ge25519_base_multipl, i64 0, i64 %tmp_855, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %t_x_v_addr = getelementptr [32 x i32]* %t_x_v, i64 0, i64 0, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_65 = load i32* %ge25519_base_multipl, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_65, i32* %t_x_v_addr, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_1 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 1, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_66 = load i32* %ge25519_base_multipl_2, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_66, i32* %t_x_v_addr_1, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_2 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 2, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_67 = load i32* %ge25519_base_multipl_3, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_67, i32* %t_x_v_addr_2, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_3 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 3, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_68 = load i32* %ge25519_base_multipl_4, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_68, i32* %t_x_v_addr_3, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_4 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 4, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_69 = load i32* %ge25519_base_multipl_5, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_69, i32* %t_x_v_addr_4, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_5 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 5, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_70 = load i32* %ge25519_base_multipl_6, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_70, i32* %t_x_v_addr_5, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_6 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 6, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_71 = load i32* %ge25519_base_multipl_7, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_71, i32* %t_x_v_addr_6, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_7 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 7, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_72 = load i32* %ge25519_base_multipl_8, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_72, i32* %t_x_v_addr_7, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_8 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 8, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_73 = load i32* %ge25519_base_multipl_9, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_73, i32* %t_x_v_addr_8, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_9 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 9, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_74 = load i32* %ge25519_base_multipl_10, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_74, i32* %t_x_v_addr_9, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_10 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 10, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_75 = load i32* %ge25519_base_multipl_11, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_75, i32* %t_x_v_addr_10, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_11 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 11, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_76 = load i32* %ge25519_base_multipl_12, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_76, i32* %t_x_v_addr_11, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_12 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 12, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_77 = load i32* %ge25519_base_multipl_13, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_77, i32* %t_x_v_addr_12, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_13 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 13, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_78 = load i32* %ge25519_base_multipl_14, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_78, i32* %t_x_v_addr_13, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_14 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 14, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_79 = load i32* %ge25519_base_multipl_15, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_79, i32* %t_x_v_addr_14, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_15 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 15, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_80 = load i32* %ge25519_base_multipl_16, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_80, i32* %t_x_v_addr_15, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_16 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 16, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_81 = load i32* %ge25519_base_multipl_17, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_81, i32* %t_x_v_addr_16, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_17 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 17, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_82 = load i32* %ge25519_base_multipl_18, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_82, i32* %t_x_v_addr_17, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_18 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 18, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_83 = load i32* %ge25519_base_multipl_19, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_83, i32* %t_x_v_addr_18, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_19 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 19, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_84 = load i32* %ge25519_base_multipl_20, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_84, i32* %t_x_v_addr_19, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_20 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 20, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_85 = load i32* %ge25519_base_multipl_21, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_85, i32* %t_x_v_addr_20, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_21 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 21, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_86 = load i32* %ge25519_base_multipl_22, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_86, i32* %t_x_v_addr_21, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_22 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 22, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_87 = load i32* %ge25519_base_multipl_23, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_87, i32* %t_x_v_addr_22, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_23 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 23, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_88 = load i32* %ge25519_base_multipl_24, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_88, i32* %t_x_v_addr_23, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_24 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 24, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_89 = load i32* %ge25519_base_multipl_25, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_89, i32* %t_x_v_addr_24, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_25 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 25, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_90 = load i32* %ge25519_base_multipl_26, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_90, i32* %t_x_v_addr_25, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_26 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 26, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_91 = load i32* %ge25519_base_multipl_27, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_91, i32* %t_x_v_addr_26, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_27 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 27, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_92 = load i32* %ge25519_base_multipl_28, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_92, i32* %t_x_v_addr_27, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_28 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 28, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_93 = load i32* %ge25519_base_multipl_29, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_93, i32* %t_x_v_addr_28, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_29 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 29, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_94 = load i32* %ge25519_base_multipl_30, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_94, i32* %t_x_v_addr_29, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_30 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 30, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_95 = load i32* %ge25519_base_multipl_31, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_95, i32* %t_x_v_addr_30, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_x_v_addr_31 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 31, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_96 = load i32* %ge25519_base_multipl_32, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_96, i32* %t_x_v_addr_31, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr = getelementptr [32 x i32]* %t_y_v, i64 0, i64 0, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_97 = load i32* %ge25519_base_multipl_33, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_97, i32* %t_y_v_addr, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_1 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 1, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_98 = load i32* %ge25519_base_multipl_34, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_98, i32* %t_y_v_addr_1, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_2 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 2, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_99 = load i32* %ge25519_base_multipl_35, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_99, i32* %t_y_v_addr_2, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_3 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 3, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_100 = load i32* %ge25519_base_multipl_36, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_100, i32* %t_y_v_addr_3, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_4 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 4, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_101 = load i32* %ge25519_base_multipl_37, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_101, i32* %t_y_v_addr_4, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_5 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 5, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_102 = load i32* %ge25519_base_multipl_38, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_102, i32* %t_y_v_addr_5, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_6 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 6, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_103 = load i32* %ge25519_base_multipl_39, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_103, i32* %t_y_v_addr_6, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_7 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 7, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_104 = load i32* %ge25519_base_multipl_40, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_104, i32* %t_y_v_addr_7, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_8 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 8, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_105 = load i32* %ge25519_base_multipl_41, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_105, i32* %t_y_v_addr_8, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_9 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 9, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_106 = load i32* %ge25519_base_multipl_42, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_106, i32* %t_y_v_addr_9, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_10 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 10, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_107 = load i32* %ge25519_base_multipl_43, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_107, i32* %t_y_v_addr_10, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_11 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 11, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_108 = load i32* %ge25519_base_multipl_44, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_108, i32* %t_y_v_addr_11, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_12 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 12, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_109 = load i32* %ge25519_base_multipl_45, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_109, i32* %t_y_v_addr_12, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_13 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 13, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_110 = load i32* %ge25519_base_multipl_46, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_110, i32* %t_y_v_addr_13, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_14 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 14, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_111 = load i32* %ge25519_base_multipl_47, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_111, i32* %t_y_v_addr_14, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_15 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 15, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_112 = load i32* %ge25519_base_multipl_48, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_112, i32* %t_y_v_addr_15, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_16 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 16, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_113 = load i32* %ge25519_base_multipl_49, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_113, i32* %t_y_v_addr_16, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_17 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 17, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_114 = load i32* %ge25519_base_multipl_50, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_114, i32* %t_y_v_addr_17, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_18 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 18, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_115 = load i32* %ge25519_base_multipl_51, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_115, i32* %t_y_v_addr_18, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_19 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 19, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_116 = load i32* %ge25519_base_multipl_52, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_116, i32* %t_y_v_addr_19, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_20 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 20, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_117 = load i32* %ge25519_base_multipl_53, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_117, i32* %t_y_v_addr_20, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_21 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 21, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_118 = load i32* %ge25519_base_multipl_54, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_118, i32* %t_y_v_addr_21, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_22 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 22, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_119 = load i32* %ge25519_base_multipl_55, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_119, i32* %t_y_v_addr_22, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_23 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 23, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_120 = load i32* %ge25519_base_multipl_56, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_120, i32* %t_y_v_addr_23, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_24 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 24, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_121 = load i32* %ge25519_base_multipl_57, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_121, i32* %t_y_v_addr_24, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_25 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 25, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_122 = load i32* %ge25519_base_multipl_58, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_122, i32* %t_y_v_addr_25, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_26 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 26, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_123 = load i32* %ge25519_base_multipl_59, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_123, i32* %t_y_v_addr_26, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_27 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 27, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_124 = load i32* %ge25519_base_multipl_60, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_124, i32* %t_y_v_addr_27, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_28 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 28, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_125 = load i32* %ge25519_base_multipl_61, align 16, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_125, i32* %t_y_v_addr_28, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_29 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 29, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_126 = load i32* %ge25519_base_multipl_62, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_126, i32* %t_y_v_addr_29, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_30 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 30, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_127 = load i32* %ge25519_base_multipl_63, align 8, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_127, i32* %t_y_v_addr_30, align 4, !dbg !1705 ; [debug line = 165:3]
  %t_y_v_addr_31 = getelementptr [32 x i32]* %t_y_v, i64 0, i64 31, !dbg !1705 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multipl_128 = load i32* %ge25519_base_multipl_64, align 4, !dbg !1705 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multipl_128, i32* %t_y_v_addr_31, align 4, !dbg !1705 ; [debug line = 165:3]
  %tmp_s = add i9 %tmp, 1, !dbg !1706             ; [#uses=2 type=i9] [debug line = 166:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1657), !dbg !1663 ; [debug line = 143:40@166:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1707), !dbg !1709 ; [debug line = 145:23@166:55] [debug variable = ub]
  %x = xor i8 %b_read, 1, !dbg !1710              ; [#uses=1 type=i8] [debug line = 147:28@166:55]
  call void @llvm.dbg.value(metadata !{i8 %x}, i64 0, metadata !1711), !dbg !1710 ; [debug line = 147:28@166:55] [debug variable = x]
  %y_cast = zext i8 %x to i9, !dbg !1712          ; [#uses=1 type=i9] [debug line = 148:22@166:55]
  %y = add i9 %y_cast, -1, !dbg !1713             ; [#uses=1 type=i9] [debug line = 149:3@166:55]
  call void @llvm.dbg.value(metadata !{i9 %y}, i64 0, metadata !1714), !dbg !1713 ; [debug line = 149:3@166:55] [debug variable = y]
  %tmp_862 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y, i32 8), !dbg !1715 ; [#uses=1 type=i1] [debug line = 150:3@166:55]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1664), !dbg !1666 ; [debug line = 143:40@166:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1716), !dbg !1717 ; [debug line = 145:23@166:68] [debug variable = ub]
  %x_8 = xor i8 %b_read, -1, !dbg !1718           ; [#uses=1 type=i8] [debug line = 147:28@166:68]
  call void @llvm.dbg.value(metadata !{i8 %x_8}, i64 0, metadata !1719), !dbg !1718 ; [debug line = 147:28@166:68] [debug variable = x]
  %y_3_cast = zext i8 %x_8 to i9, !dbg !1720      ; [#uses=1 type=i9] [debug line = 148:22@166:68]
  %y_1 = add i9 %y_3_cast, -1, !dbg !1721         ; [#uses=1 type=i9] [debug line = 149:3@166:68]
  call void @llvm.dbg.value(metadata !{i9 %y_1}, i64 0, metadata !1722), !dbg !1721 ; [debug line = 149:3@166:68] [debug variable = y]
  %tmp_863 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y_1, i32 8), !dbg !1723 ; [#uses=1 type=i1] [debug line = 150:3@166:68]
  %tmp_856 = or i1 %tmp_863, %tmp_862, !dbg !1665 ; [#uses=1 type=i1] [debug line = 166:68]
  call fastcc void @cmov_aff([32 x i32]* %t_x_v, [32 x i32]* %t_y_v, [13600 x i32]* @ge25519_base_multipl_1, i9 %tmp_s, [13600 x i32]* @ge25519_base_multipl, i9 %tmp_s, i1 %tmp_856), !dbg !1665 ; [debug line = 166:68]
  %tmp_857 = add i9 %tmp, 2, !dbg !1724           ; [#uses=2 type=i9] [debug line = 167:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1667), !dbg !1669 ; [debug line = 143:40@167:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1725), !dbg !1726 ; [debug line = 145:23@167:55] [debug variable = ub]
  %x_9 = xor i8 %b_read, 2, !dbg !1727            ; [#uses=1 type=i8] [debug line = 147:28@167:55]
  call void @llvm.dbg.value(metadata !{i8 %x_9}, i64 0, metadata !1728), !dbg !1727 ; [debug line = 147:28@167:55] [debug variable = x]
  %y_6_cast = zext i8 %x_9 to i9, !dbg !1729      ; [#uses=1 type=i9] [debug line = 148:22@167:55]
  %y_2 = add i9 %y_6_cast, -1, !dbg !1730         ; [#uses=1 type=i9] [debug line = 149:3@167:55]
  call void @llvm.dbg.value(metadata !{i9 %y_2}, i64 0, metadata !1731), !dbg !1730 ; [debug line = 149:3@167:55] [debug variable = y]
  %tmp_864 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y_2, i32 8), !dbg !1732 ; [#uses=1 type=i1] [debug line = 150:3@167:55]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1670), !dbg !1672 ; [debug line = 143:40@167:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1733), !dbg !1734 ; [debug line = 145:23@167:68] [debug variable = ub]
  %x_10 = xor i8 %b_read, -2, !dbg !1735          ; [#uses=1 type=i8] [debug line = 147:28@167:68]
  call void @llvm.dbg.value(metadata !{i8 %x_10}, i64 0, metadata !1736), !dbg !1735 ; [debug line = 147:28@167:68] [debug variable = x]
  %y_9_cast = zext i8 %x_10 to i9, !dbg !1737     ; [#uses=1 type=i9] [debug line = 148:22@167:68]
  %y_3 = add i9 %y_9_cast, -1, !dbg !1738         ; [#uses=1 type=i9] [debug line = 149:3@167:68]
  call void @llvm.dbg.value(metadata !{i9 %y_3}, i64 0, metadata !1739), !dbg !1738 ; [debug line = 149:3@167:68] [debug variable = y]
  %tmp_865 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y_3, i32 8), !dbg !1740 ; [#uses=1 type=i1] [debug line = 150:3@167:68]
  %tmp_858 = or i1 %tmp_865, %tmp_864, !dbg !1671 ; [#uses=1 type=i1] [debug line = 167:68]
  call fastcc void @cmov_aff([32 x i32]* %t_x_v, [32 x i32]* %t_y_v, [13600 x i32]* @ge25519_base_multipl_1, i9 %tmp_857, [13600 x i32]* @ge25519_base_multipl, i9 %tmp_857, i1 %tmp_858), !dbg !1671 ; [debug line = 167:68]
  %tmp_859 = add i9 %tmp, 3, !dbg !1741           ; [#uses=2 type=i9] [debug line = 168:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1673), !dbg !1675 ; [debug line = 143:40@168:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1742), !dbg !1743 ; [debug line = 145:23@168:55] [debug variable = ub]
  %x_11 = xor i8 %b_read, 3, !dbg !1744           ; [#uses=1 type=i8] [debug line = 147:28@168:55]
  call void @llvm.dbg.value(metadata !{i8 %x_11}, i64 0, metadata !1745), !dbg !1744 ; [debug line = 147:28@168:55] [debug variable = x]
  %y_12_cast = zext i8 %x_11 to i9, !dbg !1746    ; [#uses=1 type=i9] [debug line = 148:22@168:55]
  %y_4 = add i9 %y_12_cast, -1, !dbg !1747        ; [#uses=1 type=i9] [debug line = 149:3@168:55]
  call void @llvm.dbg.value(metadata !{i9 %y_4}, i64 0, metadata !1748), !dbg !1747 ; [debug line = 149:3@168:55] [debug variable = y]
  %tmp_866 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y_4, i32 8), !dbg !1749 ; [#uses=1 type=i1] [debug line = 150:3@168:55]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1676), !dbg !1678 ; [debug line = 143:40@168:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1750), !dbg !1751 ; [debug line = 145:23@168:68] [debug variable = ub]
  %x_12 = xor i8 %b_read, -3, !dbg !1752          ; [#uses=1 type=i8] [debug line = 147:28@168:68]
  call void @llvm.dbg.value(metadata !{i8 %x_12}, i64 0, metadata !1753), !dbg !1752 ; [debug line = 147:28@168:68] [debug variable = x]
  %y_15_cast = zext i8 %x_12 to i9, !dbg !1754    ; [#uses=1 type=i9] [debug line = 148:22@168:68]
  %y_5 = add i9 %y_15_cast, -1, !dbg !1755        ; [#uses=1 type=i9] [debug line = 149:3@168:68]
  call void @llvm.dbg.value(metadata !{i9 %y_5}, i64 0, metadata !1756), !dbg !1755 ; [debug line = 149:3@168:68] [debug variable = y]
  %tmp_867 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y_5, i32 8), !dbg !1757 ; [#uses=1 type=i1] [debug line = 150:3@168:68]
  %tmp_860 = or i1 %tmp_867, %tmp_866, !dbg !1677 ; [#uses=1 type=i1] [debug line = 168:68]
  call fastcc void @cmov_aff([32 x i32]* %t_x_v, [32 x i32]* %t_y_v, [13600 x i32]* @ge25519_base_multipl_1, i9 %tmp_859, [13600 x i32]* @ge25519_base_multipl, i9 %tmp_859, i1 %tmp_860), !dbg !1677 ; [debug line = 168:68]
  %tmp_861 = add i9 %tmp, 4, !dbg !1758           ; [#uses=2 type=i9] [debug line = 169:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1679), !dbg !1681 ; [debug line = 143:40@169:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1759), !dbg !1760 ; [debug line = 145:23@169:55] [debug variable = ub]
  %x_13 = xor i8 %b_read, -4, !dbg !1761          ; [#uses=1 type=i8] [debug line = 147:28@169:55]
  call void @llvm.dbg.value(metadata !{i8 %x_13}, i64 0, metadata !1762), !dbg !1761 ; [debug line = 147:28@169:55] [debug variable = x]
  %y_18_cast = zext i8 %x_13 to i9, !dbg !1763    ; [#uses=1 type=i9] [debug line = 148:22@169:55]
  %y_6 = add i9 %y_18_cast, -1, !dbg !1764        ; [#uses=1 type=i9] [debug line = 149:3@169:55]
  call void @llvm.dbg.value(metadata !{i9 %y_6}, i64 0, metadata !1765), !dbg !1764 ; [debug line = 149:3@169:55] [debug variable = y]
  %tmp_868 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %y_6, i32 8), !dbg !1766 ; [#uses=1 type=i1] [debug line = 150:3@169:55]
  call fastcc void @cmov_aff([32 x i32]* %t_x_v, [32 x i32]* %t_y_v, [13600 x i32]* @ge25519_base_multipl_1, i9 %tmp_861, [13600 x i32]* @ge25519_base_multipl, i9 %tmp_861, i1 %tmp_868), !dbg !1680 ; [debug line = 169:55]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %v_v}, i64 0, metadata !1767), !dbg !1769 ; [debug line = 159:75@170:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t_x_v}, i64 0, metadata !1770), !dbg !1772 ; [debug line = 159:117@170:3] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t_v}, metadata !1773), !dbg !1775 ; [debug line = 161:35@170:3] [debug variable = t.v]
  br label %1, !dbg !1776                         ; [debug line = 163:7@170:3]

; <label>:1                                       ; preds = %2, %0
  %i_i = phi i6 [ 0, %0 ], [ %i, %2 ]             ; [#uses=3 type=i6]
  %exitcond_i = icmp eq i6 %i_i, -32, !dbg !1776  ; [#uses=1 type=i1] [debug line = 163:7@170:3]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i = add i6 %i_i, 1, !dbg !1778                 ; [#uses=1 type=i6] [debug line = 163:16@170:3]
  br i1 %exitcond_i, label %.preheader.preheader, label %2, !dbg !1776 ; [debug line = 163:7@170:3]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !1779                ; [debug line = 156:7@164:3@170:3]

; <label>:2                                       ; preds = %1
  %tmp_i1 = zext i6 %i_i to i64, !dbg !1782       ; [#uses=2 type=i64] [debug line = 163:21@170:3]
  %t_x_v_addr_32 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 %tmp_i1, !dbg !1782 ; [#uses=1 type=i32*] [debug line = 163:21@170:3]
  %t_x_v_load = load i32* %t_x_v_addr_32, align 4, !dbg !1782 ; [#uses=1 type=i32] [debug line = 163:21@170:3]
  %t_v_addr = getelementptr [32 x i32]* %t_v, i64 0, i64 %tmp_i1, !dbg !1782 ; [#uses=1 type=i32*] [debug line = 163:21@170:3]
  store i32 %t_x_v_load, i32* %t_v_addr, align 4, !dbg !1782 ; [debug line = 163:21@170:3]
  call void @llvm.dbg.value(metadata !{i6 %i}, i64 0, metadata !1783), !dbg !1778 ; [debug line = 163:16@170:3] [debug variable = i]
  br label %1, !dbg !1778                         ; [debug line = 163:16@170:3]

.preheader:                                       ; preds = %3, %.preheader.preheader
  %i_i_i = phi i6 [ %i_82, %3 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond_i_i = icmp eq i6 %i_i_i, -32, !dbg !1779 ; [#uses=1 type=i1] [debug line = 156:7@164:3@170:3]
  %empty_101 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_82 = add i6 %i_i_i, 1, !dbg !1784            ; [#uses=1 type=i6] [debug line = 156:16@164:3@170:3]
  br i1 %exitcond_i_i, label %crypto_sign_ed25519_ref_fe25519_neg.exit, label %3, !dbg !1779 ; [debug line = 156:7@164:3@170:3]

; <label>:3                                       ; preds = %.preheader
  %tmp_i_i = zext i6 %i_i_i to i64, !dbg !1785    ; [#uses=1 type=i64] [debug line = 156:21@164:3@170:3]
  %v_v_addr = getelementptr [32 x i32]* %v_v, i64 0, i64 %tmp_i_i, !dbg !1785 ; [#uses=1 type=i32*] [debug line = 156:21@164:3@170:3]
  store i32 0, i32* %v_v_addr, align 4, !dbg !1785 ; [debug line = 156:21@164:3@170:3]
  call void @llvm.dbg.value(metadata !{i6 %i_82}, i64 0, metadata !1786), !dbg !1784 ; [debug line = 156:16@164:3@170:3] [debug variable = i]
  br label %.preheader, !dbg !1784                ; [debug line = 156:16@164:3@170:3]

crypto_sign_ed25519_ref_fe25519_neg.exit:         ; preds = %.preheader
  call fastcc void @crypto_sign_ed25519_.7([32 x i32]* %v_v, [32 x i32]* %t_v)
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1682), !dbg !1687 ; [debug line = 154:43@171:51] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1787), !dbg !1789 ; [debug line = 156:27@171:51] [debug variable = x]
  %tmp_869 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %b_read, i32 7), !dbg !1790 ; [#uses=1 type=i1] [debug line = 157:3@171:51]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t_x_v}, i64 0, metadata !1791), !dbg !1792 ; [debug line = 131:76@171:51] [debug variable = r.v]
  %mask = select i1 %tmp_869, i32 -1, i32 0, !dbg !1793 ; [#uses=1 type=i32] [debug line = 135:3@171:51]
  call void @llvm.dbg.value(metadata !{i32 %mask}, i64 0, metadata !1794), !dbg !1793 ; [debug line = 135:3@171:51] [debug variable = mask]
  br label %4, !dbg !1795                         ; [debug line = 136:7@171:51]

; <label>:4                                       ; preds = %5, %crypto_sign_ed25519_ref_fe25519_neg.exit
  %i_i5 = phi i6 [ 0, %crypto_sign_ed25519_ref_fe25519_neg.exit ], [ %i_83, %5 ] ; [#uses=3 type=i6]
  %exitcond_i5 = icmp eq i6 %i_i5, -32, !dbg !1795 ; [#uses=1 type=i1] [debug line = 136:7@171:51]
  %empty_102 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_83 = add i6 %i_i5, 1, !dbg !1796             ; [#uses=1 type=i6] [debug line = 136:16@171:51]
  br i1 %exitcond_i5, label %crypto_sign_ed25519_ref_fe25519_cmov.1.exit, label %5, !dbg !1795 ; [debug line = 136:7@171:51]

; <label>:5                                       ; preds = %4
  %tmp_i = zext i6 %i_i5 to i64, !dbg !1797       ; [#uses=2 type=i64] [debug line = 136:21@171:51]
  %v_v_addr_1 = getelementptr [32 x i32]* %v_v, i64 0, i64 %tmp_i, !dbg !1797 ; [#uses=1 type=i32*] [debug line = 136:21@171:51]
  %v_v_load = load i32* %v_v_addr_1, align 4, !dbg !1797 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  %t_x_v_addr_33 = getelementptr [32 x i32]* %t_x_v, i64 0, i64 %tmp_i, !dbg !1797 ; [#uses=2 type=i32*] [debug line = 136:21@171:51]
  %t_x_v_load_1 = load i32* %t_x_v_addr_33, align 4, !dbg !1797 ; [#uses=2 type=i32] [debug line = 136:21@171:51]
  %tmp_894_i = xor i32 %t_x_v_load_1, %v_v_load, !dbg !1797 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  %tmp_895_i = and i32 %tmp_894_i, %mask, !dbg !1797 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  %tmp_896_i = xor i32 %t_x_v_load_1, %tmp_895_i, !dbg !1797 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  store i32 %tmp_896_i, i32* %t_x_v_addr_33, align 4, !dbg !1797 ; [debug line = 136:21@171:51]
  call void @llvm.dbg.value(metadata !{i6 %i_83}, i64 0, metadata !1798), !dbg !1796 ; [debug line = 136:16@171:51] [debug variable = i]
  br label %4, !dbg !1796                         ; [debug line = 136:16@171:51]

crypto_sign_ed25519_ref_fe25519_cmov.1.exit:      ; preds = %4
  ret void, !dbg !1799                            ; [debug line = 172:1]
}

; [#uses=4]
define internal fastcc void @barrett_reduce([32 x i32]* nocapture %r_v, [64 x i32]* nocapture %x) {
  %q2 = alloca [66 x i32], align 16               ; [#uses=6 type=[66 x i32]*]
  %r1 = alloca [33 x i32], align 16               ; [#uses=2 type=[33 x i32]*]
  %r2 = alloca [33 x i32], align 16               ; [#uses=5 type=[33 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r_v}, i64 0, metadata !1800), !dbg !1807 ; [debug line = 41:61] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[64 x i32]* %x}, i64 0, metadata !1808), !dbg !1810 ; [debug line = 41:84] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{[66 x i32]* %q2}, metadata !1811), !dbg !1816 ; [debug line = 45:17] [debug variable = q2]
  call void @llvm.dbg.declare(metadata !{[33 x i32]* %r1}, metadata !1817), !dbg !1821 ; [debug line = 47:17] [debug variable = r1]
  call void @llvm.dbg.declare(metadata !{[33 x i32]* %r2}, metadata !1822), !dbg !1823 ; [debug line = 48:17] [debug variable = r2]
  br label %1, !dbg !1824                         ; [debug line = 53:8]

; <label>:1                                       ; preds = %2, %0
  %i = phi i7 [ 0, %0 ], [ %i_84, %2 ]            ; [#uses=3 type=i7]
  %exitcond8 = icmp eq i7 %i, -62, !dbg !1824     ; [#uses=1 type=i1] [debug line = 53:8]
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 66, i64 66, i64 66) ; [#uses=0 type=i32]
  %i_84 = add i7 %i, 1, !dbg !1826                ; [#uses=1 type=i7] [debug line = 53:21]
  br i1 %exitcond8, label %.preheader14.preheader, label %2, !dbg !1824 ; [debug line = 53:8]

.preheader14.preheader:                           ; preds = %1
  br label %.preheader14, !dbg !1827              ; [debug line = 54:8]

; <label>:2                                       ; preds = %1
  %tmp = zext i7 %i to i64, !dbg !1829            ; [#uses=1 type=i64] [debug line = 53:26]
  %q2_addr = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 %tmp, !dbg !1829 ; [#uses=1 type=i32*] [debug line = 53:26]
  store i32 0, i32* %q2_addr, align 4, !dbg !1829 ; [debug line = 53:26]
  call void @llvm.dbg.value(metadata !{i7 %i_84}, i64 0, metadata !1830), !dbg !1826 ; [debug line = 53:21] [debug variable = i]
  br label %1, !dbg !1826                         ; [debug line = 53:21]

.preheader14:                                     ; preds = %3, %.preheader14.preheader
  %i_1 = phi i6 [ %i_85, %3 ], [ 0, %.preheader14.preheader ] ; [#uses=3 type=i6]
  %exitcond7 = icmp eq i6 %i_1, -31, !dbg !1827   ; [#uses=1 type=i1] [debug line = 54:8]
  %empty_103 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  %i_85 = add i6 %i_1, 1, !dbg !1831              ; [#uses=1 type=i6] [debug line = 54:21]
  br i1 %exitcond7, label %.preheader13.preheader, label %3, !dbg !1827 ; [debug line = 54:8]

.preheader13.preheader:                           ; preds = %.preheader14
  br label %.preheader13, !dbg !1832              ; [debug line = 56:7]

; <label>:3                                       ; preds = %.preheader14
  %tmp_s = zext i6 %i_1 to i64, !dbg !1834        ; [#uses=1 type=i64] [debug line = 54:26]
  %r2_addr = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp_s, !dbg !1834 ; [#uses=1 type=i32*] [debug line = 54:26]
  store i32 0, i32* %r2_addr, align 4, !dbg !1834 ; [debug line = 54:26]
  call void @llvm.dbg.value(metadata !{i6 %i_85}, i64 0, metadata !1830), !dbg !1831 ; [debug line = 54:21] [debug variable = i]
  br label %.preheader14, !dbg !1831              ; [debug line = 54:21]

.preheader13.loopexit:                            ; preds = %.preheader12
  br label %.preheader13

.preheader13:                                     ; preds = %.preheader13.loopexit, %.preheader13.preheader
  %i_2 = phi i6 [ %i_86, %.preheader13.loopexit ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i6]
  %i_2_cast = zext i6 %i_2 to i7, !dbg !1832      ; [#uses=1 type=i7] [debug line = 56:7]
  %exitcond6 = icmp eq i6 %i_2, -31, !dbg !1832   ; [#uses=1 type=i1] [debug line = 56:7]
  %empty_104 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  %i_86 = add i6 %i_2, 1, !dbg !1835              ; [#uses=1 type=i6] [debug line = 56:16]
  call void @llvm.dbg.value(metadata !{i6 %i_86}, i64 0, metadata !1830), !dbg !1835 ; [debug line = 56:16] [debug variable = i]
  br i1 %exitcond6, label %6, label %.preheader12.preheader, !dbg !1832 ; [debug line = 56:7]

.preheader12.preheader:                           ; preds = %.preheader13
  %tmp_864 = zext i6 %i_2 to i64, !dbg !1836      ; [#uses=1 type=i64] [debug line = 58:21]
  %mu_addr = getelementptr [33 x i8]* @mu, i64 0, i64 %tmp_864, !dbg !1836 ; [#uses=1 type=i8*] [debug line = 58:21]
  %mu_load = load i8* %mu_addr, align 1, !dbg !1836 ; [#uses=1 type=i8] [debug line = 58:21]
  %mu_load_cast = zext i8 %mu_load to i32, !dbg !1836 ; [#uses=1 type=i32] [debug line = 58:21]
  br label %.preheader12, !dbg !1838              ; [debug line = 57:9]

.preheader12:                                     ; preds = %._crit_edge, %.preheader12.preheader
  %j = phi i6 [ %j_5, %._crit_edge ], [ 0, %.preheader12.preheader ] ; [#uses=4 type=i6]
  %j_cast = zext i6 %j to i7, !dbg !1838          ; [#uses=1 type=i7] [debug line = 57:9]
  %exitcond5 = icmp eq i6 %j, -31, !dbg !1838     ; [#uses=1 type=i1] [debug line = 57:9]
  %empty_105 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  %j_5 = add i6 %j, 1, !dbg !1839                 ; [#uses=1 type=i6] [debug line = 57:18]
  br i1 %exitcond5, label %.preheader13.loopexit, label %4, !dbg !1838 ; [debug line = 57:9]

; <label>:4                                       ; preds = %.preheader12
  %tmp_866 = add i7 %j_cast, %i_2_cast, !dbg !1840 ; [#uses=2 type=i7] [debug line = 58:7]
  %tmp_867 = icmp ugt i7 %tmp_866, 30, !dbg !1840 ; [#uses=1 type=i1] [debug line = 58:7]
  br i1 %tmp_867, label %5, label %._crit_edge, !dbg !1840 ; [debug line = 58:7]

; <label>:5                                       ; preds = %4
  %tmp_868 = add i6 %j, 31, !dbg !1836            ; [#uses=1 type=i6] [debug line = 58:21]
  %tmp_869 = zext i6 %tmp_868 to i64, !dbg !1836  ; [#uses=1 type=i64] [debug line = 58:21]
  %x_addr_1 = getelementptr [64 x i32]* %x, i64 0, i64 %tmp_869, !dbg !1836 ; [#uses=1 type=i32*] [debug line = 58:21]
  %x_load_1 = load i32* %x_addr_1, align 4, !dbg !1836 ; [#uses=1 type=i32] [debug line = 58:21]
  %tmp_870 = mul i32 %mu_load_cast, %x_load_1, !dbg !1836 ; [#uses=1 type=i32] [debug line = 58:21]
  %tmp_871 = zext i7 %tmp_866 to i64, !dbg !1836  ; [#uses=1 type=i64] [debug line = 58:21]
  %q2_addr_4 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 %tmp_871, !dbg !1836 ; [#uses=2 type=i32*] [debug line = 58:21]
  %q2_load_3 = load i32* %q2_addr_4, align 4, !dbg !1836 ; [#uses=1 type=i32] [debug line = 58:21]
  %tmp_872 = add i32 %q2_load_3, %tmp_870, !dbg !1836 ; [#uses=1 type=i32] [debug line = 58:21]
  store i32 %tmp_872, i32* %q2_addr_4, align 4, !dbg !1836 ; [debug line = 58:21]
  br label %._crit_edge, !dbg !1836               ; [debug line = 58:21]

._crit_edge:                                      ; preds = %5, %4
  call void @llvm.dbg.value(metadata !{i6 %j_5}, i64 0, metadata !1841), !dbg !1839 ; [debug line = 57:18] [debug variable = j]
  br label %.preheader12, !dbg !1839              ; [debug line = 57:18]

; <label>:6                                       ; preds = %.preheader13
  %q2_addr_1 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 31, !dbg !1842 ; [#uses=1 type=i32*] [debug line = 59:3]
  %q2_load = load i32* %q2_addr_1, align 4, !dbg !1842 ; [#uses=1 type=i32] [debug line = 59:3]
  %carry = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %q2_load, i32 8, i32 31), !dbg !1842 ; [#uses=1 type=i24] [debug line = 59:3]
  %carry_4 = zext i24 %carry to i32, !dbg !1842   ; [#uses=1 type=i32] [debug line = 59:3]
  call void @llvm.dbg.value(metadata !{i32 %carry_4}, i64 0, metadata !1843), !dbg !1842 ; [debug line = 59:3] [debug variable = carry]
  %q2_addr_2 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 32, !dbg !1844 ; [#uses=2 type=i32*] [debug line = 60:3]
  %q2_load_1 = load i32* %q2_addr_2, align 16, !dbg !1844 ; [#uses=1 type=i32] [debug line = 60:3]
  %tmp_862 = add i32 %q2_load_1, %carry_4, !dbg !1844 ; [#uses=2 type=i32] [debug line = 60:3]
  store i32 %tmp_862, i32* %q2_addr_2, align 16, !dbg !1844 ; [debug line = 60:3]
  %carry_2 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %tmp_862, i32 8, i32 31), !dbg !1845 ; [#uses=1 type=i24] [debug line = 61:3]
  %carry_5 = zext i24 %carry_2 to i32, !dbg !1845 ; [#uses=1 type=i32] [debug line = 61:3]
  call void @llvm.dbg.value(metadata !{i32 %carry_5}, i64 0, metadata !1843), !dbg !1845 ; [debug line = 61:3] [debug variable = carry]
  %q2_addr_3 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 33, !dbg !1846 ; [#uses=2 type=i32*] [debug line = 62:3]
  %q2_load_2 = load i32* %q2_addr_3, align 4, !dbg !1846 ; [#uses=1 type=i32] [debug line = 62:3]
  %tmp_863 = add i32 %q2_load_2, %carry_5, !dbg !1846 ; [#uses=1 type=i32] [debug line = 62:3]
  store i32 %tmp_863, i32* %q2_addr_3, align 4, !dbg !1846 ; [debug line = 62:3]
  br label %7, !dbg !1847                         ; [debug line = 64:7]

; <label>:7                                       ; preds = %8, %6
  %i_3 = phi i6 [ 0, %6 ], [ %i_87, %8 ]          ; [#uses=3 type=i6]
  %exitcond4 = icmp eq i6 %i_3, -31, !dbg !1847   ; [#uses=1 type=i1] [debug line = 64:7]
  %empty_106 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  %i_87 = add i6 %i_3, 1, !dbg !1849              ; [#uses=1 type=i6] [debug line = 64:16]
  br i1 %exitcond4, label %.preheader11.preheader, label %8, !dbg !1847 ; [debug line = 64:7]

.preheader11.preheader:                           ; preds = %7
  br label %.preheader11, !dbg !1850              ; [debug line = 65:7]

; <label>:8                                       ; preds = %7
  %tmp_865 = zext i6 %i_3 to i64, !dbg !1852      ; [#uses=2 type=i64] [debug line = 64:20]
  %x_addr = getelementptr [64 x i32]* %x, i64 0, i64 %tmp_865, !dbg !1852 ; [#uses=1 type=i32*] [debug line = 64:20]
  %x_load = load i32* %x_addr, align 4, !dbg !1852 ; [#uses=1 type=i32] [debug line = 64:20]
  %r1_addr = getelementptr inbounds [33 x i32]* %r1, i64 0, i64 %tmp_865, !dbg !1852 ; [#uses=1 type=i32*] [debug line = 64:20]
  store i32 %x_load, i32* %r1_addr, align 4, !dbg !1852 ; [debug line = 64:20]
  call void @llvm.dbg.value(metadata !{i6 %i_87}, i64 0, metadata !1830), !dbg !1849 ; [debug line = 64:16] [debug variable = i]
  br label %7, !dbg !1849                         ; [debug line = 64:16]

.preheader11.loopexit:                            ; preds = %.preheader10
  br label %.preheader11

.preheader11:                                     ; preds = %.preheader11.loopexit, %.preheader11.preheader
  %i_4 = phi i6 [ %i_88, %.preheader11.loopexit ], [ 0, %.preheader11.preheader ] ; [#uses=4 type=i6]
  %exitcond3 = icmp eq i6 %i_4, -32, !dbg !1850   ; [#uses=1 type=i1] [debug line = 65:7]
  %empty_107 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_88 = add i6 %i_4, 1, !dbg !1853              ; [#uses=1 type=i6] [debug line = 65:16]
  call void @llvm.dbg.value(metadata !{i6 %i_88}, i64 0, metadata !1830), !dbg !1853 ; [debug line = 65:16] [debug variable = i]
  br i1 %exitcond3, label %.preheader9.preheader, label %.preheader10.preheader, !dbg !1850 ; [debug line = 65:7]

.preheader9.preheader:                            ; preds = %.preheader11
  br label %.preheader9, !dbg !1854               ; [debug line = 69:7]

.preheader10.preheader:                           ; preds = %.preheader11
  %tmp_873 = zext i6 %i_4 to i64, !dbg !1856      ; [#uses=1 type=i64] [debug line = 67:20]
  %m_addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp_873, !dbg !1856 ; [#uses=1 type=i8*] [debug line = 67:20]
  %m_load = load i8* %m_addr, align 1, !dbg !1856 ; [#uses=1 type=i8] [debug line = 67:20]
  %m_load_cast = zext i8 %m_load to i32, !dbg !1856 ; [#uses=1 type=i32] [debug line = 67:20]
  br label %.preheader10, !dbg !1858              ; [debug line = 66:9]

.preheader10:                                     ; preds = %._crit_edge15, %.preheader10.preheader
  %j_1 = phi i6 [ %j_6, %._crit_edge15 ], [ 0, %.preheader10.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %j_1, -31, !dbg !1858   ; [#uses=1 type=i1] [debug line = 66:9]
  %empty_108 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  %j_6 = add i6 %j_1, 1, !dbg !1859               ; [#uses=1 type=i6] [debug line = 66:18]
  br i1 %exitcond2, label %.preheader11.loopexit, label %9, !dbg !1858 ; [debug line = 66:9]

; <label>:9                                       ; preds = %.preheader10
  %tmp_877 = add i6 %j_1, %i_4, !dbg !1860        ; [#uses=2 type=i6] [debug line = 67:7]
  %tmp_878 = icmp ult i6 %tmp_877, -31, !dbg !1860 ; [#uses=1 type=i1] [debug line = 67:7]
  br i1 %tmp_878, label %10, label %._crit_edge15, !dbg !1860 ; [debug line = 67:7]

; <label>:10                                      ; preds = %9
  %tmp_927_cast = zext i6 %j_1 to i7, !dbg !1856  ; [#uses=1 type=i7] [debug line = 67:20]
  %q3_0_sum = add i7 %tmp_927_cast, 33, !dbg !1856 ; [#uses=1 type=i7] [debug line = 67:20]
  %q3_0_sum_cast = zext i7 %q3_0_sum to i64, !dbg !1856 ; [#uses=1 type=i64] [debug line = 67:20]
  %q2_addr_5 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 %q3_0_sum_cast, !dbg !1856 ; [#uses=1 type=i32*] [debug line = 67:20]
  %q2_load_4 = load i32* %q2_addr_5, align 4, !dbg !1856 ; [#uses=1 type=i32] [debug line = 67:20]
  %tmp_879 = mul i32 %m_load_cast, %q2_load_4, !dbg !1856 ; [#uses=1 type=i32] [debug line = 67:20]
  %tmp_880 = zext i6 %tmp_877 to i64, !dbg !1856  ; [#uses=1 type=i64] [debug line = 67:20]
  %r2_addr_3 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp_880, !dbg !1856 ; [#uses=2 type=i32*] [debug line = 67:20]
  %r2_load_2 = load i32* %r2_addr_3, align 4, !dbg !1856 ; [#uses=1 type=i32] [debug line = 67:20]
  %tmp_881 = add i32 %r2_load_2, %tmp_879, !dbg !1856 ; [#uses=1 type=i32] [debug line = 67:20]
  store i32 %tmp_881, i32* %r2_addr_3, align 4, !dbg !1856 ; [debug line = 67:20]
  br label %._crit_edge15, !dbg !1856             ; [debug line = 67:20]

._crit_edge15:                                    ; preds = %10, %9
  call void @llvm.dbg.value(metadata !{i6 %j_6}, i64 0, metadata !1841), !dbg !1859 ; [debug line = 66:18] [debug variable = j]
  br label %.preheader10, !dbg !1859              ; [debug line = 66:18]

.preheader9:                                      ; preds = %11, %.preheader9.preheader
  %i_5 = phi i6 [ %i_89, %11 ], [ 0, %.preheader9.preheader ] ; [#uses=3 type=i6]
  %exitcond1 = icmp eq i6 %i_5, -32, !dbg !1854   ; [#uses=1 type=i1] [debug line = 69:7]
  %empty_109 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_89 = add i6 %i_5, 1, !dbg !1861              ; [#uses=2 type=i6] [debug line = 72:5]
  br i1 %exitcond1, label %.preheader.preheader, label %11, !dbg !1854 ; [debug line = 69:7]

.preheader.preheader:                             ; preds = %.preheader9
  br label %.preheader, !dbg !1863                ; [debug line = 76:7]

; <label>:11                                      ; preds = %.preheader9
  %tmp_874 = zext i6 %i_5 to i64, !dbg !1865      ; [#uses=1 type=i64] [debug line = 71:5]
  %r2_addr_1 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp_874, !dbg !1865 ; [#uses=2 type=i32*] [debug line = 71:5]
  %r2_load = load i32* %r2_addr_1, align 4, !dbg !1865 ; [#uses=2 type=i32] [debug line = 71:5]
  %tmp_885 = trunc i32 %r2_load to i8, !dbg !1865 ; [#uses=1 type=i8] [debug line = 71:5]
  %carry_3 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r2_load, i32 8, i32 31), !dbg !1865 ; [#uses=1 type=i24] [debug line = 71:5]
  %carry_6 = zext i24 %carry_3 to i32, !dbg !1865 ; [#uses=1 type=i32] [debug line = 71:5]
  call void @llvm.dbg.value(metadata !{i32 %carry_6}, i64 0, metadata !1843), !dbg !1865 ; [debug line = 71:5] [debug variable = carry]
  %tmp_875 = zext i6 %i_89 to i64, !dbg !1861     ; [#uses=1 type=i64] [debug line = 72:5]
  %r2_addr_2 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp_875, !dbg !1861 ; [#uses=2 type=i32*] [debug line = 72:5]
  %r2_load_1 = load i32* %r2_addr_2, align 4, !dbg !1861 ; [#uses=1 type=i32] [debug line = 72:5]
  %tmp_876 = add i32 %carry_6, %r2_load_1, !dbg !1861 ; [#uses=1 type=i32] [debug line = 72:5]
  store i32 %tmp_876, i32* %r2_addr_2, align 4, !dbg !1861 ; [debug line = 72:5]
  %tmp_924_cast = zext i8 %tmp_885 to i32, !dbg !1866 ; [#uses=1 type=i32] [debug line = 73:5]
  store i32 %tmp_924_cast, i32* %r2_addr_1, align 4, !dbg !1866 ; [debug line = 73:5]
  call void @llvm.dbg.value(metadata !{i6 %i_89}, i64 0, metadata !1830), !dbg !1867 ; [debug line = 69:16] [debug variable = i]
  br label %.preheader9, !dbg !1867               ; [debug line = 69:16]

.preheader:                                       ; preds = %12, %.preheader.preheader
  %i_6 = phi i6 [ %i_90, %12 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %pb = phi i1 [ %tmp_886, %12 ], [ false, %.preheader.preheader ] ; [#uses=1 type=i1]
  %exitcond = icmp eq i6 %i_6, -32, !dbg !1863    ; [#uses=1 type=i1] [debug line = 76:7]
  %empty_110 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i_90 = add i6 %i_6, 1, !dbg !1868              ; [#uses=1 type=i6] [debug line = 76:16]
  br i1 %exitcond, label %13, label %12, !dbg !1863 ; [debug line = 76:7]

; <label>:12                                      ; preds = %.preheader
  %tmp_882 = zext i6 %i_6 to i64, !dbg !1869      ; [#uses=3 type=i64] [debug line = 78:5]
  %r2_addr_4 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp_882, !dbg !1869 ; [#uses=1 type=i32*] [debug line = 78:5]
  %r2_load_3 = load i32* %r2_addr_4, align 4, !dbg !1869 ; [#uses=1 type=i32] [debug line = 78:5]
  %pb_cast1 = zext i1 %pb to i32, !dbg !1863      ; [#uses=1 type=i32] [debug line = 76:7]
  %pb_2 = add i32 %r2_load_3, %pb_cast1, !dbg !1869 ; [#uses=1 type=i32] [debug line = 78:5]
  call void @llvm.dbg.value(metadata !{i32 %pb_2}, i64 0, metadata !1871), !dbg !1869 ; [debug line = 78:5] [debug variable = pb]
  %r1_addr_1 = getelementptr inbounds [33 x i32]* %r1, i64 0, i64 %tmp_882, !dbg !1872 ; [#uses=1 type=i32*] [debug line = 79:9]
  %x_14 = load i32* %r1_addr_1, align 4, !dbg !1872 ; [#uses=1 type=i32] [debug line = 79:9]
  call void @llvm.dbg.value(metadata !{i32 %x_14}, i64 0, metadata !1873), !dbg !1874 ; [debug line = 11:39@79:9] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i32 %pb_2}, i64 0, metadata !1875), !dbg !1876 ; [debug line = 11:55@79:9] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i32 %x_14}, i64 0, metadata !1877), !dbg !1878 ; [debug line = 13:21@79:9] [debug variable = x]
  %x_15 = sub i32 %x_14, %pb_2, !dbg !1879        ; [#uses=2 type=i32] [debug line = 14:3@79:9]
  call void @llvm.dbg.value(metadata !{i32 %x_15}, i64 0, metadata !1877), !dbg !1879 ; [debug line = 14:3@79:9] [debug variable = x]
  %tmp_886 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_15, i32 31), !dbg !1880 ; [#uses=2 type=i1] [debug line = 15:3@79:9]
  %tmp_883 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %tmp_886, i8 0), !dbg !1881 ; [#uses=1 type=i9] [debug line = 80:5]
  %tmp_932_cast = zext i9 %tmp_883 to i32, !dbg !1881 ; [#uses=1 type=i32] [debug line = 80:5]
  %tmp_884 = add i32 %tmp_932_cast, %x_15, !dbg !1881 ; [#uses=1 type=i32] [debug line = 80:5]
  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_882, !dbg !1881 ; [#uses=1 type=i32*] [debug line = 80:5]
  store i32 %tmp_884, i32* %r_v_addr, align 4, !dbg !1881 ; [debug line = 80:5]
  call void @llvm.dbg.value(metadata !{i6 %i_90}, i64 0, metadata !1830), !dbg !1868 ; [debug line = 76:16] [debug variable = i]
  br label %.preheader, !dbg !1868                ; [debug line = 76:16]

; <label>:13                                      ; preds = %.preheader
  call fastcc void @reduce_add_sub([32 x i32]* %r_v), !dbg !1882 ; [debug line = 88:3]
  call fastcc void @reduce_add_sub([32 x i32]* %r_v), !dbg !1883 ; [debug line = 89:3]
  ret void, !dbg !1884                            ; [debug line = 90:1]
}

; [#uses=1]
define weak void @_ssdm_op_SpecTopModule(...) {
entry:
  ret void
}

; [#uses=56]
define weak void @_ssdm_op_SpecResourceLimit(...) nounwind {
entry:
  ret void
}

; [#uses=8]
define weak i32 @_ssdm_op_SpecMemCore(...) {
entry:
  ret i32 0
}

; [#uses=107]
define weak i32 @_ssdm_op_SpecLoopTripCount(...) {
entry:
  ret i32 0
}

; [#uses=1]
define weak i32 @_ssdm_op_SpecLoopName(...) {
entry:
  ret i32 0
}

; [#uses=5]
define weak void @_ssdm_op_SpecInterface(...) nounwind {
entry:
  ret void
}

; [#uses=5]
define weak void @_ssdm_op_SpecBitsMap(...) {
entry:
  ret void
}

; [#uses=2]
define weak i1 @_ssdm_op_ReadReq.m_axi.i8P(i8*, i32) {
entry:
  ret i1 true
}

; [#uses=1]
define weak i32 @_ssdm_op_Read.s_axilite.i32(i32) {
entry:
  ret i32 %0
}

; [#uses=2]
define weak i8 @_ssdm_op_Read.m_axi.i8P(i8*) {
entry:
  %empty = load i8* %0                            ; [#uses=1 type=i8]
  ret i8 %empty
}

; [#uses=2]
define weak i9 @_ssdm_op_Read.ap_auto.i9(i9) {
entry:
  ret i9 %0
}

; [#uses=1]
define weak i8 @_ssdm_op_Read.ap_auto.i8(i8) {
entry:
  ret i8 %0
}

; [#uses=2]
define weak i7 @_ssdm_op_Read.ap_auto.i7(i7) {
entry:
  ret i7 %0
}

; [#uses=8]
define weak i64 @_ssdm_op_Read.ap_auto.i64(i64) {
entry:
  ret i64 %0
}

; [#uses=1]
define weak i1 @_ssdm_op_Read.ap_auto.i1(i1) {
entry:
  ret i1 %0
}

; [#uses=0]
declare i9 @_ssdm_op_PartSelect.i9.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=8]
define weak i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_111 = trunc i64 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_111
}

; [#uses=1]
define weak i8 @_ssdm_op_PartSelect.i8.i56.i32.i32(i56, i32, i32) nounwind readnone {
entry:
  %empty = call i56 @llvm.part.select.i56(i56 %0, i32 %1, i32 %2) ; [#uses=1 type=i56]
  %empty_112 = trunc i56 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_112
}

; [#uses=1]
define weak i8 @_ssdm_op_PartSelect.i8.i48.i32.i32(i48, i32, i32) nounwind readnone {
entry:
  %empty = call i48 @llvm.part.select.i48(i48 %0, i32 %1, i32 %2) ; [#uses=1 type=i48]
  %empty_113 = trunc i48 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_113
}

; [#uses=1]
define weak i8 @_ssdm_op_PartSelect.i8.i40.i32.i32(i40, i32, i32) nounwind readnone {
entry:
  %empty = call i40 @llvm.part.select.i40(i40 %0, i32 %1, i32 %2) ; [#uses=1 type=i40]
  %empty_114 = trunc i40 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_114
}

; [#uses=1]
define weak i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2) ; [#uses=1 type=i32]
  %empty_115 = trunc i32 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_115
}

; [#uses=1]
define weak i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24, i32, i32) nounwind readnone {
entry:
  %empty = call i24 @llvm.part.select.i24(i24 %0, i32 %1, i32 %2) ; [#uses=1 type=i24]
  %empty_116 = trunc i24 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_116
}

; [#uses=1]
define weak i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16, i32, i32) nounwind readnone {
entry:
  %empty = call i16 @llvm.part.select.i16(i16 %0, i32 %1, i32 %2) ; [#uses=1 type=i16]
  %empty_117 = trunc i16 %empty to i8             ; [#uses=1 type=i8]
  ret i8 %empty_117
}

; [#uses=0]
declare i7 @_ssdm_op_PartSelect.i7.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32, i32, i32) nounwind readnone

; [#uses=3]
define weak i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_118 = trunc i64 %empty to i63            ; [#uses=1 type=i63]
  ret i63 %empty_118
}

; [#uses=0]
declare i61 @_ssdm_op_PartSelect.i61.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8, i32, i32) nounwind readnone

; [#uses=3]
define weak i58 @_ssdm_op_PartSelect.i58.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_119 = trunc i64 %empty to i58            ; [#uses=1 type=i58]
  ret i58 %empty_119
}

; [#uses=7]
define weak i57 @_ssdm_op_PartSelect.i57.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_120 = trunc i64 %empty to i57            ; [#uses=1 type=i57]
  ret i57 %empty_120
}

; [#uses=3]
define weak i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_121 = trunc i64 %empty to i56            ; [#uses=1 type=i56]
  ret i56 %empty_121
}

; [#uses=24]
define weak i50 @_ssdm_op_PartSelect.i50.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_122 = trunc i64 %empty to i50            ; [#uses=1 type=i50]
  ret i50 %empty_122
}

; [#uses=2]
define weak i5 @_ssdm_op_PartSelect.i5.i8.i32.i32(i8, i32, i32) nounwind readnone {
entry:
  %empty = call i8 @llvm.part.select.i8(i8 %0, i32 %1, i32 %2) ; [#uses=1 type=i8]
  %empty_123 = trunc i8 %empty to i5              ; [#uses=1 type=i5]
  ret i5 %empty_123
}

; [#uses=0]
declare i5 @_ssdm_op_PartSelect.i5.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i48 @_ssdm_op_PartSelect.i48.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=24]
define weak i46 @_ssdm_op_PartSelect.i46.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_124 = trunc i64 %empty to i46            ; [#uses=1 type=i46]
  ret i46 %empty_124
}

; [#uses=3]
define weak i45 @_ssdm_op_PartSelect.i45.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_125 = trunc i64 %empty to i45            ; [#uses=1 type=i45]
  ret i45 %empty_125
}

; [#uses=0]
declare i41 @_ssdm_op_PartSelect.i41.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i40 @_ssdm_op_PartSelect.i40.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5, i32, i32) nounwind readnone

; [#uses=0]
declare i39 @_ssdm_op_PartSelect.i39.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=24]
define weak i36 @_ssdm_op_PartSelect.i36.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_126 = trunc i64 %empty to i36            ; [#uses=1 type=i36]
  ret i36 %empty_126
}

; [#uses=0]
declare i34 @_ssdm_op_PartSelect.i34.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32, i32, i32) nounwind readnone

; [#uses=24]
define weak i30 @_ssdm_op_PartSelect.i30.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_127 = trunc i64 %empty to i30            ; [#uses=1 type=i30]
  ret i30 %empty_127
}

; [#uses=0]
declare i3 @_ssdm_op_PartSelect.i3.i8.i32.i32(i8, i32, i32) nounwind readnone

; [#uses=3]
define weak i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_128 = trunc i64 %empty to i3             ; [#uses=1 type=i3]
  ret i3 %empty_128
}

; [#uses=0]
declare i3 @_ssdm_op_PartSelect.i3.i4.i32.i32(i4, i32, i32) nounwind readnone

; [#uses=11]
define weak i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2) ; [#uses=1 type=i32]
  %empty_129 = trunc i32 %empty to i3             ; [#uses=1 type=i3]
  ret i3 %empty_129
}

; [#uses=0]
declare i28 @_ssdm_op_PartSelect.i28.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=24]
define weak i25 @_ssdm_op_PartSelect.i25.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_130 = trunc i64 %empty to i25            ; [#uses=1 type=i25]
  ret i25 %empty_130
}

; [#uses=7]
define weak i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2) ; [#uses=1 type=i32]
  %empty_131 = trunc i32 %empty to i25            ; [#uses=1 type=i25]
  ret i25 %empty_131
}

; [#uses=0]
declare i24 @_ssdm_op_PartSelect.i24.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=12]
define weak i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2) ; [#uses=1 type=i32]
  %empty_132 = trunc i32 %empty to i24            ; [#uses=1 type=i24]
  ret i24 %empty_132
}

; [#uses=24]
define weak i23 @_ssdm_op_PartSelect.i23.i64.i32.i32(i64, i32, i32) nounwind readnone {
entry:
  %empty = call i64 @llvm.part.select.i64(i64 %0, i32 %1, i32 %2) ; [#uses=1 type=i64]
  %empty_133 = trunc i64 %empty to i23            ; [#uses=1 type=i23]
  ret i23 %empty_133
}

; [#uses=0]
declare i2 @_ssdm_op_PartSelect.i2.i32.i32.i32(i32, i32, i32) nounwind readnone

; [#uses=0]
declare i19 @_ssdm_op_PartSelect.i19.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i18 @_ssdm_op_PartSelect.i18.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i14 @_ssdm_op_PartSelect.i14.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i1 @_ssdm_op_PartSelect.i1.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i1 @_ssdm_op_PartSelect.i1.i32.i32.i32(i32, i32, i32) nounwind readnone

; [#uses=7]
define weak i1 @_ssdm_op_BitSelect.i1.i9.i32(i9, i32) nounwind readnone {
entry:
  %empty = trunc i32 %1 to i9                     ; [#uses=1 type=i9]
  %empty_134 = shl i9 1, %empty                   ; [#uses=1 type=i9]
  %empty_135 = and i9 %0, %empty_134              ; [#uses=1 type=i9]
  %empty_136 = icmp ne i9 %empty_135, 0           ; [#uses=1 type=i1]
  ret i1 %empty_136
}

; [#uses=1]
define weak i1 @_ssdm_op_BitSelect.i1.i8.i32(i8, i32) nounwind readnone {
entry:
  %empty = trunc i32 %1 to i8                     ; [#uses=1 type=i8]
  %empty_137 = shl i8 1, %empty                   ; [#uses=1 type=i8]
  %empty_138 = and i8 %0, %empty_137              ; [#uses=1 type=i8]
  %empty_139 = icmp ne i8 %empty_138, 0           ; [#uses=1 type=i1]
  ret i1 %empty_139
}

; [#uses=6]
define weak i1 @_ssdm_op_BitSelect.i1.i32.i32(i32, i32) nounwind readnone {
entry:
  %empty = shl i32 1, %1                          ; [#uses=1 type=i32]
  %empty_140 = and i32 %0, %empty                 ; [#uses=1 type=i32]
  %empty_141 = icmp ne i32 %empty_140, 0          ; [#uses=1 type=i1]
  ret i1 %empty_141
}

; [#uses=1]
define weak i1 @_ssdm_op_BitSelect.i1.i3.i32(i3, i32) nounwind readnone {
entry:
  %empty = trunc i32 %1 to i3                     ; [#uses=1 type=i3]
  %empty_142 = shl i3 1, %empty                   ; [#uses=1 type=i3]
  %empty_143 = and i3 %0, %empty_142              ; [#uses=1 type=i3]
  %empty_144 = icmp ne i3 %empty_143, 0           ; [#uses=1 type=i1]
  ret i1 %empty_144
}

; [#uses=1]
define weak i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7, i2) nounwind readnone {
entry:
  %empty = zext i7 %0 to i9                       ; [#uses=1 type=i9]
  %empty_145 = zext i2 %1 to i9                   ; [#uses=1 type=i9]
  %empty_146 = shl i9 %empty, 2                   ; [#uses=1 type=i9]
  %empty_147 = or i9 %empty_146, %empty_145       ; [#uses=1 type=i9]
  ret i9 %empty_147
}

; [#uses=1]
define weak i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1, i8) nounwind readnone {
entry:
  %empty = zext i1 %0 to i9                       ; [#uses=1 type=i9]
  %empty_148 = zext i8 %1 to i9                   ; [#uses=1 type=i9]
  %empty_149 = shl i9 %empty, 8                   ; [#uses=1 type=i9]
  %empty_150 = or i9 %empty_149, %empty_148       ; [#uses=1 type=i9]
  ret i9 %empty_150
}

; [#uses=2]
define weak i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5, i3) nounwind readnone {
entry:
  %empty = zext i5 %0 to i8                       ; [#uses=1 type=i8]
  %empty_151 = zext i3 %1 to i8                   ; [#uses=1 type=i8]
  %empty_152 = shl i8 %empty, 3                   ; [#uses=1 type=i8]
  %empty_153 = or i8 %empty_152, %empty_151       ; [#uses=1 type=i8]
  ret i8 %empty_153
}

; [#uses=1]
define weak i8 @_ssdm_op_BitConcatenate.i8.i1.i7(i1, i7) nounwind readnone {
entry:
  %empty = zext i1 %0 to i8                       ; [#uses=1 type=i8]
  %empty_154 = zext i7 %1 to i8                   ; [#uses=1 type=i8]
  %empty_155 = shl i8 %empty, 7                   ; [#uses=1 type=i8]
  %empty_156 = or i8 %empty_155, %empty_154       ; [#uses=1 type=i8]
  ret i8 %empty_156
}

; [#uses=4]
define weak i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4, i3) nounwind readnone {
entry:
  %empty = zext i4 %0 to i7                       ; [#uses=1 type=i7]
  %empty_157 = zext i3 %1 to i7                   ; [#uses=1 type=i7]
  %empty_158 = shl i7 %empty, 3                   ; [#uses=1 type=i7]
  %empty_159 = or i7 %empty_158, %empty_157       ; [#uses=1 type=i7]
  ret i7 %empty_159
}

; [#uses=1]
define weak i7 @_ssdm_op_BitConcatenate.i7.i1.i6(i1, i6) nounwind readnone {
entry:
  %empty = zext i1 %0 to i7                       ; [#uses=1 type=i7]
  %empty_160 = zext i6 %1 to i7                   ; [#uses=1 type=i7]
  %empty_161 = shl i7 %empty, 6                   ; [#uses=1 type=i7]
  %empty_162 = or i7 %empty_161, %empty_160       ; [#uses=1 type=i7]
  ret i7 %empty_162
}

; [#uses=3]
define weak i64 @_ssdm_op_BitConcatenate.i64.i8.i8.i8.i8.i8.i8.i8.i8(i8, i8, i8, i8, i8, i8, i8, i8) nounwind readnone {
entry:
  %empty = zext i8 %6 to i16                      ; [#uses=1 type=i16]
  %empty_163 = zext i8 %7 to i16                  ; [#uses=1 type=i16]
  %empty_164 = shl i16 %empty, 8                  ; [#uses=1 type=i16]
  %empty_165 = or i16 %empty_164, %empty_163      ; [#uses=1 type=i16]
  %empty_166 = zext i8 %5 to i24                  ; [#uses=1 type=i24]
  %empty_167 = zext i16 %empty_165 to i24         ; [#uses=1 type=i24]
  %empty_168 = shl i24 %empty_166, 16             ; [#uses=1 type=i24]
  %empty_169 = or i24 %empty_168, %empty_167      ; [#uses=1 type=i24]
  %empty_170 = zext i8 %4 to i32                  ; [#uses=1 type=i32]
  %empty_171 = zext i24 %empty_169 to i32         ; [#uses=1 type=i32]
  %empty_172 = shl i32 %empty_170, 24             ; [#uses=1 type=i32]
  %empty_173 = or i32 %empty_172, %empty_171      ; [#uses=1 type=i32]
  %empty_174 = zext i8 %3 to i40                  ; [#uses=1 type=i40]
  %empty_175 = zext i32 %empty_173 to i40         ; [#uses=1 type=i40]
  %empty_176 = shl i40 %empty_174, 32             ; [#uses=1 type=i40]
  %empty_177 = or i40 %empty_176, %empty_175      ; [#uses=1 type=i40]
  %empty_178 = zext i8 %2 to i48                  ; [#uses=1 type=i48]
  %empty_179 = zext i40 %empty_177 to i48         ; [#uses=1 type=i48]
  %empty_180 = shl i48 %empty_178, 40             ; [#uses=1 type=i48]
  %empty_181 = or i48 %empty_180, %empty_179      ; [#uses=1 type=i48]
  %empty_182 = zext i8 %1 to i56                  ; [#uses=1 type=i56]
  %empty_183 = zext i48 %empty_181 to i56         ; [#uses=1 type=i56]
  %empty_184 = shl i56 %empty_182, 48             ; [#uses=1 type=i56]
  %empty_185 = or i56 %empty_184, %empty_183      ; [#uses=1 type=i56]
  %empty_186 = zext i8 %0 to i64                  ; [#uses=1 type=i64]
  %empty_187 = zext i56 %empty_185 to i64         ; [#uses=1 type=i64]
  %empty_188 = shl i64 %empty_186, 56             ; [#uses=1 type=i64]
  %empty_189 = or i64 %empty_188, %empty_187      ; [#uses=1 type=i64]
  ret i64 %empty_189
}

; [#uses=3]
define weak i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8, i56) nounwind readnone {
entry:
  %empty = zext i8 %0 to i64                      ; [#uses=1 type=i64]
  %empty_190 = zext i56 %1 to i64                 ; [#uses=1 type=i64]
  %empty_191 = shl i64 %empty, 56                 ; [#uses=1 type=i64]
  %empty_192 = or i64 %empty_191, %empty_190      ; [#uses=1 type=i64]
  ret i64 %empty_192
}

; [#uses=3]
define weak i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61, i3) nounwind readnone {
entry:
  %empty = zext i61 %0 to i64                     ; [#uses=1 type=i64]
  %empty_193 = zext i3 %1 to i64                  ; [#uses=1 type=i64]
  %empty_194 = shl i64 %empty, 3                  ; [#uses=1 type=i64]
  %empty_195 = or i64 %empty_194, %empty_193      ; [#uses=1 type=i64]
  ret i64 %empty_195
}

; [#uses=31]
define weak i64 @_ssdm_op_BitConcatenate.i64.i50.i14(i50, i14) nounwind readnone {
entry:
  %empty = zext i50 %0 to i64                     ; [#uses=1 type=i64]
  %empty_196 = zext i14 %1 to i64                 ; [#uses=1 type=i64]
  %empty_197 = shl i64 %empty, 14                 ; [#uses=1 type=i64]
  %empty_198 = or i64 %empty_197, %empty_196      ; [#uses=1 type=i64]
  ret i64 %empty_198
}

; [#uses=24]
define weak i64 @_ssdm_op_BitConcatenate.i64.i41.i23(i41, i23) nounwind readnone {
entry:
  %empty = zext i41 %0 to i64                     ; [#uses=1 type=i64]
  %empty_199 = zext i23 %1 to i64                 ; [#uses=1 type=i64]
  %empty_200 = shl i64 %empty, 23                 ; [#uses=1 type=i64]
  %empty_201 = or i64 %empty_200, %empty_199      ; [#uses=1 type=i64]
  ret i64 %empty_201
}

; [#uses=24]
define weak i64 @_ssdm_op_BitConcatenate.i64.i39.i25(i39, i25) nounwind readnone {
entry:
  %empty = zext i39 %0 to i64                     ; [#uses=1 type=i64]
  %empty_202 = zext i25 %1 to i64                 ; [#uses=1 type=i64]
  %empty_203 = shl i64 %empty, 25                 ; [#uses=1 type=i64]
  %empty_204 = or i64 %empty_203, %empty_202      ; [#uses=1 type=i64]
  ret i64 %empty_204
}

; [#uses=24]
define weak i64 @_ssdm_op_BitConcatenate.i64.i34.i30(i34, i30) nounwind readnone {
entry:
  %empty = zext i34 %0 to i64                     ; [#uses=1 type=i64]
  %empty_205 = zext i30 %1 to i64                 ; [#uses=1 type=i64]
  %empty_206 = shl i64 %empty, 30                 ; [#uses=1 type=i64]
  %empty_207 = or i64 %empty_206, %empty_205      ; [#uses=1 type=i64]
  ret i64 %empty_207
}

; [#uses=24]
define weak i64 @_ssdm_op_BitConcatenate.i64.i28.i36(i28, i36) nounwind readnone {
entry:
  %empty = zext i28 %0 to i64                     ; [#uses=1 type=i64]
  %empty_208 = zext i36 %1 to i64                 ; [#uses=1 type=i64]
  %empty_209 = shl i64 %empty, 36                 ; [#uses=1 type=i64]
  %empty_210 = or i64 %empty_209, %empty_208      ; [#uses=1 type=i64]
  ret i64 %empty_210
}

; [#uses=3]
define weak i64 @_ssdm_op_BitConcatenate.i64.i19.i45(i19, i45) nounwind readnone {
entry:
  %empty = zext i19 %0 to i64                     ; [#uses=1 type=i64]
  %empty_211 = zext i45 %1 to i64                 ; [#uses=1 type=i64]
  %empty_212 = shl i64 %empty, 45                 ; [#uses=1 type=i64]
  %empty_213 = or i64 %empty_212, %empty_211      ; [#uses=1 type=i64]
  ret i64 %empty_213
}

; [#uses=24]
define weak i64 @_ssdm_op_BitConcatenate.i64.i18.i46(i18, i46) nounwind readnone {
entry:
  %empty = zext i18 %0 to i64                     ; [#uses=1 type=i64]
  %empty_214 = zext i46 %1 to i64                 ; [#uses=1 type=i64]
  %empty_215 = shl i64 %empty, 46                 ; [#uses=1 type=i64]
  %empty_216 = or i64 %empty_215, %empty_214      ; [#uses=1 type=i64]
  ret i64 %empty_216
}

; [#uses=24]
define weak i64 @_ssdm_op_BitConcatenate.i64.i14.i50(i14, i50) nounwind readnone {
entry:
  %empty = zext i14 %0 to i64                     ; [#uses=1 type=i64]
  %empty_217 = zext i50 %1 to i64                 ; [#uses=1 type=i64]
  %empty_218 = shl i64 %empty, 50                 ; [#uses=1 type=i64]
  %empty_219 = or i64 %empty_218, %empty_217      ; [#uses=1 type=i64]
  ret i64 %empty_219
}

; [#uses=3]
define weak i64 @_ssdm_op_BitConcatenate.i64.i1.i63(i1, i63) nounwind readnone {
entry:
  %empty = zext i1 %0 to i64                      ; [#uses=1 type=i64]
  %empty_220 = zext i63 %1 to i64                 ; [#uses=1 type=i64]
  %empty_221 = shl i64 %empty, 63                 ; [#uses=1 type=i64]
  %empty_222 = or i64 %empty_221, %empty_220      ; [#uses=1 type=i64]
  ret i64 %empty_222
}

; [#uses=1]
define weak i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4, i2) nounwind readnone {
entry:
  %empty = zext i4 %0 to i6                       ; [#uses=1 type=i6]
  %empty_223 = zext i2 %1 to i6                   ; [#uses=1 type=i6]
  %empty_224 = shl i6 %empty, 2                   ; [#uses=1 type=i6]
  %empty_225 = or i6 %empty_224, %empty_223       ; [#uses=1 type=i6]
  ret i6 %empty_225
}

; [#uses=1]
define weak i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3, i3) nounwind readnone {
entry:
  %empty = zext i3 %0 to i6                       ; [#uses=1 type=i6]
  %empty_226 = zext i3 %1 to i6                   ; [#uses=1 type=i6]
  %empty_227 = shl i6 %empty, 3                   ; [#uses=1 type=i6]
  %empty_228 = or i6 %empty_227, %empty_226       ; [#uses=1 type=i6]
  ret i6 %empty_228
}

; [#uses=1]
define weak i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1, i3) nounwind readnone {
entry:
  %empty = zext i1 %0 to i4                       ; [#uses=1 type=i4]
  %empty_229 = zext i3 %1 to i4                   ; [#uses=1 type=i4]
  %empty_230 = shl i4 %empty, 3                   ; [#uses=1 type=i4]
  %empty_231 = or i4 %empty_230, %empty_229       ; [#uses=1 type=i4]
  ret i4 %empty_231
}

; [#uses=0]
declare i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31, i1) nounwind readnone

; [#uses=0]
declare i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25, i7) nounwind readnone

; [#uses=1]
define weak i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2, i1) nounwind readnone {
entry:
  %empty = zext i2 %0 to i3                       ; [#uses=1 type=i3]
  %empty_232 = zext i1 %1 to i3                   ; [#uses=1 type=i3]
  %empty_233 = shl i3 %empty, 1                   ; [#uses=1 type=i3]
  %empty_234 = or i3 %empty_233, %empty_232       ; [#uses=1 type=i3]
  ret i3 %empty_234
}

; [#uses=2]
define weak i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1, i2) nounwind readnone {
entry:
  %empty = zext i1 %0 to i3                       ; [#uses=1 type=i3]
  %empty_235 = zext i2 %1 to i3                   ; [#uses=1 type=i3]
  %empty_236 = shl i3 %empty, 2                   ; [#uses=1 type=i3]
  %empty_237 = or i3 %empty_236, %empty_235       ; [#uses=1 type=i3]
  ret i3 %empty_237
}

; [#uses=3]
define weak i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9, i5) nounwind readnone {
entry:
  %empty = zext i9 %0 to i14                      ; [#uses=1 type=i14]
  %empty_238 = zext i5 %1 to i14                  ; [#uses=1 type=i14]
  %empty_239 = shl i14 %empty, 5                  ; [#uses=1 type=i14]
  %empty_240 = or i14 %empty_239, %empty_238      ; [#uses=1 type=i14]
  ret i14 %empty_240
}

; [#uses=1]
define weak i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7, i3) nounwind readnone {
entry:
  %empty = zext i7 %0 to i10                      ; [#uses=1 type=i10]
  %empty_241 = zext i3 %1 to i10                  ; [#uses=1 type=i10]
  %empty_242 = shl i10 %empty, 3                  ; [#uses=1 type=i10]
  %empty_243 = or i10 %empty_242, %empty_241      ; [#uses=1 type=i10]
  ret i10 %empty_243
}

; [#uses=1]
define internal fastcc void @_memmove([64 x i8]* nocapture %dst, [32 x i8]* nocapture %src) {
  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([64 x i8]* %dst, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12) ; [#uses=0 type=i32]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %dst}, i64 0, metadata !1885), !dbg !1886 ; [debug line = 34:30] [debug variable = dst]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %src}, i64 0, metadata !1887), !dbg !1888 ; [debug line = 34:50] [debug variable = src]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %src}, i64 0, metadata !1889), !dbg !1891 ; [debug line = 13:49@35:2] [debug variable = src]
  br label %1, !dbg !1892                         ; [debug line = 15:6@35:2]

; <label>:1                                       ; preds = %2, %0
  %i_i = phi i6 [ 0, %0 ], [ %i, %2 ]             ; [#uses=4 type=i6]
  %exitcond_i = icmp eq i6 %i_i, -32, !dbg !1892  ; [#uses=1 type=i1] [debug line = 15:6@35:2]
  %empty_244 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  %i = add i6 %i_i, 1, !dbg !1893                 ; [#uses=1 type=i6] [debug line = 15:18@35:2]
  br i1 %exitcond_i, label %_memcpy.1.exit, label %2, !dbg !1892 ; [debug line = 15:6@35:2]

; <label>:2                                       ; preds = %1
  %tmp_i = zext i6 %i_i to i64, !dbg !1894        ; [#uses=1 type=i64] [debug line = 16:3@35:2]
  %src_addr = getelementptr [32 x i8]* %src, i64 0, i64 %tmp_i, !dbg !1894 ; [#uses=1 type=i8*] [debug line = 16:3@35:2]
  %src_load = load i8* %src_addr, align 1, !dbg !1894 ; [#uses=1 type=i8] [debug line = 16:3@35:2]
  %sum_i = xor i6 %i_i, -32                       ; [#uses=1 type=i6]
  %sum_i_cast = zext i6 %sum_i to i64             ; [#uses=1 type=i64]
  %dst_addr = getelementptr [64 x i8]* %dst, i64 0, i64 %sum_i_cast, !dbg !1894 ; [#uses=1 type=i8*] [debug line = 16:3@35:2]
  store i8 %src_load, i8* %dst_addr, align 1, !dbg !1894 ; [debug line = 16:3@35:2]
  call void @llvm.dbg.value(metadata !{i6 %i}, i64 0, metadata !1895), !dbg !1893 ; [debug line = 15:18@35:2] [debug variable = i]
  br label %1, !dbg !1893                         ; [debug line = 15:18@35:2]

_memcpy.1.exit:                                   ; preds = %1
  ret void, !dbg !1896                            ; [debug line = 36:1]
}

!opencl.kernels = !{!0, !7, !0, !11, !17, !23, !23, !29, !32, !32, !34, !37, !34, !39, !41, !43, !43, !47, !51, !51, !51, !56, !58, !58, !61, !64, !66, !70, !72, !75, !77, !80, !86, !88, !91, !94, !98, !101, !105, !107, !110, !112, !114, !115, !117, !119, !121, !122, !124, !121, !115, !115, !127, !128, !128, !128, !127, !127, !127, !115, !130, !130, !115, !66, !66}
!hls.encrypted.func = !{}
!llvm.map.gv = !{}

!0 = metadata !{null, metadata !1, metadata !2, metadata !3, metadata !4, metadata !5, metadata !6}
!1 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 0}
!2 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!3 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uchar*", metadata !"uint"}
!4 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !""}
!5 = metadata !{metadata !"kernel_arg_name", metadata !"dst", metadata !"src", metadata !"len"}
!6 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!7 = metadata !{null, metadata !8, metadata !2, metadata !9, metadata !4, metadata !10, metadata !6}
!8 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 0}
!9 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uchar", metadata !"uint"}
!10 = metadata !{metadata !"kernel_arg_name", metadata !"dst", metadata !"val", metadata !"len"}
!11 = metadata !{null, metadata !12, metadata !13, metadata !14, metadata !15, metadata !16, metadata !6}
!12 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 1, i32 1}
!13 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!14 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uint", metadata !"uchar*", metadata !"uchar*"}
!15 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !""}
!16 = metadata !{metadata !"kernel_arg_name", metadata !"mem", metadata !"num_blocks", metadata !"sk", metadata !"signature_out"}
!17 = metadata !{null, metadata !18, metadata !19, metadata !20, metadata !21, metadata !22, metadata !6}
!18 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!19 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!20 = metadata !{metadata !"kernel_arg_type", metadata !"sha512_context*"}
!21 = metadata !{metadata !"kernel_arg_type_qual", metadata !""}
!22 = metadata !{metadata !"kernel_arg_name", metadata !"md"}
!23 = metadata !{null, metadata !24, metadata !25, metadata !26, metadata !27, metadata !28, metadata !6}
!24 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1}
!25 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none"}
!26 = metadata !{metadata !"kernel_arg_type", metadata !"sha512_context*", metadata !"uchar*"}
!27 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const"}
!28 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"in"}
!29 = metadata !{null, metadata !24, metadata !25, metadata !26, metadata !30, metadata !31, metadata !6}
!30 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !""}
!31 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"out"}
!32 = metadata !{null, metadata !24, metadata !25, metadata !26, metadata !30, metadata !33, metadata !6}
!33 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"buf"}
!34 = metadata !{null, metadata !24, metadata !25, metadata !35, metadata !27, metadata !36, metadata !6}
!35 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"uchar*"}
!36 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x"}
!37 = metadata !{null, metadata !24, metadata !25, metadata !38, metadata !27, metadata !36, metadata !6}
!38 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_shortsc25519*", metadata !"uchar*"}
!39 = metadata !{null, metadata !24, metadata !25, metadata !40, metadata !27, metadata !36, metadata !6}
!40 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_shortsc25519*"}
!41 = metadata !{null, metadata !24, metadata !25, metadata !42, metadata !27, metadata !36, metadata !6}
!42 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!43 = metadata !{null, metadata !18, metadata !19, metadata !44, metadata !45, metadata !46, metadata !6}
!44 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!45 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const"}
!46 = metadata !{metadata !"kernel_arg_name", metadata !"x"}
!47 = metadata !{null, metadata !24, metadata !25, metadata !48, metadata !49, metadata !50, metadata !6}
!48 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!49 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const", metadata !"const"}
!50 = metadata !{metadata !"kernel_arg_name", metadata !"x", metadata !"y"}
!51 = metadata !{null, metadata !52, metadata !2, metadata !53, metadata !54, metadata !55, metadata !6}
!52 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1}
!53 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!54 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !"const"}
!55 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x", metadata !"y"}
!56 = metadata !{null, metadata !52, metadata !2, metadata !57, metadata !54, metadata !55, metadata !6}
!57 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_shortsc25519*"}
!58 = metadata !{null, metadata !24, metadata !25, metadata !59, metadata !27, metadata !60, metadata !6}
!59 = metadata !{metadata !"kernel_arg_type", metadata !"signed char*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!60 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"s"}
!61 = metadata !{null, metadata !52, metadata !2, metadata !62, metadata !54, metadata !63, metadata !6}
!62 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!63 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"s1", metadata !"s2"}
!64 = metadata !{null, metadata !18, metadata !19, metadata !44, metadata !21, metadata !65, metadata !6}
!65 = metadata !{metadata !"kernel_arg_name", metadata !"r"}
!66 = metadata !{null, metadata !67, metadata !25, metadata !68, metadata !30, metadata !69, metadata !6}
!67 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0}
!68 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_uint32", metadata !"crypto_uint32"}
!69 = metadata !{metadata !"kernel_arg_name", metadata !"a", metadata !"b"}
!70 = metadata !{null, metadata !24, metadata !25, metadata !71, metadata !27, metadata !36, metadata !6}
!71 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_uint32*"}
!72 = metadata !{null, metadata !24, metadata !25, metadata !73, metadata !27, metadata !74, metadata !6}
!73 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"uchar*"}
!74 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p"}
!75 = metadata !{null, metadata !24, metadata !25, metadata !76, metadata !27, metadata !74, metadata !6}
!76 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!77 = metadata !{null, metadata !18, metadata !19, metadata !78, metadata !45, metadata !79, metadata !6}
!78 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!79 = metadata !{metadata !"kernel_arg_name", metadata !"p"}
!80 = metadata !{null, metadata !81, metadata !82, metadata !83, metadata !84, metadata !85, metadata !6}
!81 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1, i32 1}
!82 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!83 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!84 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !"const", metadata !"const", metadata !"const"}
!85 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p1", metadata !"s1", metadata !"p2", metadata !"s2"}
!86 = metadata !{null, metadata !24, metadata !25, metadata !87, metadata !27, metadata !60, metadata !6}
!87 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!88 = metadata !{null, metadata !24, metadata !25, metadata !89, metadata !27, metadata !90, metadata !6}
!89 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"ge25519_aff*"}
!90 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"q"}
!91 = metadata !{null, metadata !8, metadata !2, metadata !92, metadata !4, metadata !93, metadata !6}
!92 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_aff*", metadata !"ulong long", metadata !"signed char"}
!93 = metadata !{metadata !"kernel_arg_name", metadata !"t", metadata !"pos", metadata !"b"}
!94 = metadata !{null, metadata !95, metadata !19, metadata !96, metadata !21, metadata !97, metadata !6}
!95 = metadata !{metadata !"kernel_arg_addr_space", i32 0}
!96 = metadata !{metadata !"kernel_arg_type", metadata !"signed char"}
!97 = metadata !{metadata !"kernel_arg_name", metadata !"b"}
!98 = metadata !{null, metadata !67, metadata !25, metadata !99, metadata !30, metadata !100, metadata !6}
!99 = metadata !{metadata !"kernel_arg_type", metadata !"signed char", metadata !"signed char"}
!100 = metadata !{metadata !"kernel_arg_name", metadata !"b", metadata !"c"}
!101 = metadata !{null, metadata !1, metadata !2, metadata !102, metadata !103, metadata !104, metadata !6}
!102 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_aff*", metadata !"ge25519_aff*", metadata !"uchar"}
!103 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !""}
!104 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p", metadata !"b"}
!105 = metadata !{null, metadata !24, metadata !25, metadata !106, metadata !27, metadata !74, metadata !6}
!106 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p2*", metadata !"ge25519_p1p1*"}
!107 = metadata !{null, metadata !52, metadata !2, metadata !108, metadata !54, metadata !109, metadata !6}
!108 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p1p1*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!109 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p", metadata !"q"}
!110 = metadata !{null, metadata !24, metadata !25, metadata !111, metadata !27, metadata !74, metadata !6}
!111 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"ge25519_p1p1*"}
!112 = metadata !{null, metadata !24, metadata !25, metadata !113, metadata !27, metadata !74, metadata !6}
!113 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p1p1*", metadata !"ge25519_p2*"}
!114 = metadata !{null, metadata !18, metadata !19, metadata !78, metadata !21, metadata !65, metadata !6}
!115 = metadata !{null, metadata !18, metadata !19, metadata !116, metadata !21, metadata !65, metadata !6}
!116 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!117 = metadata !{null, metadata !24, metadata !25, metadata !118, metadata !27, metadata !36, metadata !6}
!118 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"uchar*"}
!119 = metadata !{null, metadata !24, metadata !25, metadata !120, metadata !27, metadata !36, metadata !6}
!120 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!121 = metadata !{null, metadata !18, metadata !19, metadata !116, metadata !45, metadata !46, metadata !6}
!122 = metadata !{null, metadata !24, metadata !25, metadata !123, metadata !49, metadata !50, metadata !6}
!123 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!124 = metadata !{null, metadata !1, metadata !2, metadata !125, metadata !103, metadata !126, metadata !6}
!125 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"uchar"}
!126 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x", metadata !"b"}
!127 = metadata !{null, metadata !24, metadata !25, metadata !123, metadata !27, metadata !36, metadata !6}
!128 = metadata !{null, metadata !52, metadata !2, metadata !129, metadata !54, metadata !55, metadata !6}
!129 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!130 = metadata !{null, metadata !95, metadata !19, metadata !131, metadata !21, metadata !132, metadata !6}
!131 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_uint32"}
!132 = metadata !{metadata !"kernel_arg_name", metadata !"a"}
!133 = metadata !{i32 790533, metadata !134, metadata !"md.curlen", null, i32 298, metadata !164, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!134 = metadata !{i32 786689, metadata !135, metadata !"md", metadata !136, i32 16777514, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!135 = metadata !{i32 786478, i32 0, metadata !136, metadata !"sha512_update_32", metadata !"sha512_update_32", metadata !"", metadata !136, i32 298, metadata !137, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 299} ; [ DW_TAG_subprogram ]
!136 = metadata !{i32 786473, metadata !"ed25519_ref/src/sha512.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!137 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !138, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!138 = metadata !{metadata !139, metadata !140, metadata !160}
!139 = metadata !{i32 786468, null, metadata !"int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!140 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !141} ; [ DW_TAG_pointer_type ]
!141 = metadata !{i32 786454, null, metadata !"sha512_context", metadata !136, i32 15, i64 0, i64 0, i64 0, i32 0, metadata !142} ; [ DW_TAG_typedef ]
!142 = metadata !{i32 786451, null, metadata !"sha512_context_", metadata !143, i32 11, i64 1664, i64 64, i32 0, i32 0, null, metadata !144, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!143 = metadata !{i32 786473, metadata !"ed25519_ref/src/sha512.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!144 = metadata !{metadata !145, metadata !148, metadata !152, metadata !155}
!145 = metadata !{i32 786445, metadata !142, metadata !"length", metadata !143, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !146} ; [ DW_TAG_member ]
!146 = metadata !{i32 786454, null, metadata !"uint64_t", metadata !143, i32 56, i64 0, i64 0, i64 0, i32 0, metadata !147} ; [ DW_TAG_typedef ]
!147 = metadata !{i32 786468, null, metadata !"long long unsigned int", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!148 = metadata !{i32 786445, metadata !142, metadata !"state", metadata !143, i32 12, i64 512, i64 64, i64 64, i32 0, metadata !149} ; [ DW_TAG_member ]
!149 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 64, i32 0, i32 0, metadata !146, metadata !150, i32 0, i32 0} ; [ DW_TAG_array_type ]
!150 = metadata !{metadata !151}
!151 = metadata !{i32 786465, i64 0, i64 7}       ; [ DW_TAG_subrange_type ]
!152 = metadata !{i32 786445, metadata !142, metadata !"curlen", metadata !143, i32 13, i64 64, i64 64, i64 576, i32 0, metadata !153} ; [ DW_TAG_member ]
!153 = metadata !{i32 786454, null, metadata !"size_t", metadata !143, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !154} ; [ DW_TAG_typedef ]
!154 = metadata !{i32 786468, null, metadata !"long unsigned int", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!155 = metadata !{i32 786445, metadata !142, metadata !"buf", metadata !143, i32 14, i64 1024, i64 8, i64 640, i32 0, metadata !156} ; [ DW_TAG_member ]
!156 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 8, i32 0, i32 0, metadata !157, metadata !158, i32 0, i32 0} ; [ DW_TAG_array_type ]
!157 = metadata !{i32 786468, null, metadata !"unsigned char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!158 = metadata !{metadata !159}
!159 = metadata !{i32 786465, i64 0, i64 127}     ; [ DW_TAG_subrange_type ]
!160 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !161} ; [ DW_TAG_pointer_type ]
!161 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !157} ; [ DW_TAG_const_type ]
!162 = metadata !{metadata !163}
!163 = metadata !{i32 786468}                     ; [ DW_TAG_base_type ]
!164 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !165} ; [ DW_TAG_pointer_type ]
!165 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !166, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!166 = metadata !{metadata !152}
!167 = metadata !{i32 298, i32 39, metadata !135, null}
!168 = metadata !{i32 790533, metadata !134, metadata !"md.length", null, i32 298, metadata !169, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!169 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !170} ; [ DW_TAG_pointer_type ]
!170 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !171, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!171 = metadata !{metadata !145}
!172 = metadata !{i32 790531, metadata !134, metadata !"md.state", null, i32 298, metadata !173, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!173 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !174} ; [ DW_TAG_pointer_type ]
!174 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 512, i64 64, i32 0, i32 0, null, metadata !175, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!175 = metadata !{metadata !148}
!176 = metadata !{i32 790531, metadata !134, metadata !"md.buf", null, i32 298, metadata !177, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!177 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !178} ; [ DW_TAG_pointer_type ]
!178 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 1024, i64 64, i32 0, i32 0, null, metadata !179, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!179 = metadata !{metadata !155}
!180 = metadata !{i32 300, i32 1, metadata !181, null}
!181 = metadata !{i32 786443, metadata !135, i32 299, i32 1, metadata !136, i32 15} ; [ DW_TAG_lexical_block ]
!182 = metadata !{i32 301, i32 1, metadata !181, null}
!183 = metadata !{i32 302, i32 1, metadata !181, null}
!184 = metadata !{i32 303, i32 1, metadata !181, null}
!185 = metadata !{i32 304, i32 1, metadata !181, null}
!186 = metadata !{i32 305, i32 1, metadata !181, null}
!187 = metadata !{i32 306, i32 1, metadata !181, null}
!188 = metadata !{i32 786688, metadata !181, metadata !"temp_buf", metadata !136, i32 311, metadata !156, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!189 = metadata !{i32 311, i32 19, metadata !181, null}
!190 = metadata !{i32 315, i32 5, metadata !181, null}
!191 = metadata !{i32 786688, metadata !181, metadata !"inlen", metadata !136, i32 309, metadata !153, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!192 = metadata !{i32 325, i32 12, metadata !193, null}
!193 = metadata !{i32 786443, metadata !194, i32 319, i32 46, metadata !136, i32 18} ; [ DW_TAG_lexical_block ]
!194 = metadata !{i32 786443, metadata !181, i32 318, i32 23, metadata !136, i32 17} ; [ DW_TAG_lexical_block ]
!195 = metadata !{i32 323, i32 12, metadata !193, null}
!196 = metadata !{i32 318, i32 5, metadata !181, null}
!197 = metadata !{i32 319, i32 9, metadata !194, null}
!198 = metadata !{i32 324, i32 12, metadata !193, null}
!199 = metadata !{i32 320, i32 23, metadata !193, null}
!200 = metadata !{i32 326, i32 9, metadata !193, null}
!201 = metadata !{i32 327, i32 12, metadata !202, null}
!202 = metadata !{i32 786443, metadata !194, i32 326, i32 16, metadata !136, i32 20} ; [ DW_TAG_lexical_block ]
!203 = metadata !{i32 786688, metadata !181, metadata !"n", metadata !136, i32 307, metadata !153, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!204 = metadata !{i32 329, i32 17, metadata !205, null}
!205 = metadata !{i32 786443, metadata !202, i32 329, i32 12, metadata !136, i32 21} ; [ DW_TAG_lexical_block ]
!206 = metadata !{i32 329, i32 31, metadata !205, null}
!207 = metadata !{i32 330, i32 13, metadata !208, null}
!208 = metadata !{i32 786443, metadata !205, i32 329, i32 36, metadata !136, i32 22} ; [ DW_TAG_lexical_block ]
!209 = metadata !{i32 786688, metadata !181, metadata !"i", metadata !136, i32 308, metadata !153, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!210 = metadata !{i32 335, i32 12, metadata !202, null}
!211 = metadata !{i32 334, i32 12, metadata !202, null}
!212 = metadata !{i32 336, i32 12, metadata !202, null}
!213 = metadata !{i32 337, i32 4, metadata !202, null}
!214 = metadata !{i32 338, i32 9, metadata !215, null}
!215 = metadata !{i32 786443, metadata !216, i32 338, i32 5, metadata !136, i32 24} ; [ DW_TAG_lexical_block ]
!216 = metadata !{i32 786443, metadata !202, i32 337, i32 27, metadata !136, i32 23} ; [ DW_TAG_lexical_block ]
!217 = metadata !{i32 338, i32 39, metadata !215, null}
!218 = metadata !{i32 339, i32 6, metadata !219, null}
!219 = metadata !{i32 786443, metadata !215, i32 338, i32 52, metadata !136, i32 25} ; [ DW_TAG_lexical_block ]
!220 = metadata !{i32 786688, metadata !181, metadata !"temp_index", metadata !136, i32 310, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!221 = metadata !{i32 341, i32 16, metadata !216, null}
!222 = metadata !{i32 344, i32 9, metadata !223, null}
!223 = metadata !{i32 786443, metadata !216, i32 344, i32 5, metadata !136, i32 27} ; [ DW_TAG_lexical_block ]
!224 = metadata !{i32 344, i32 39, metadata !223, null}
!225 = metadata !{i32 345, i32 6, metadata !226, null}
!226 = metadata !{i32 786443, metadata !223, i32 344, i32 52, metadata !136, i32 28} ; [ DW_TAG_lexical_block ]
!227 = metadata !{i32 347, i32 5, metadata !216, null}
!228 = metadata !{i32 349, i32 4, metadata !216, null}
!229 = metadata !{i32 786689, metadata !135, metadata !"in", null, i32 298, metadata !230, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!230 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 0, i64 0, i32 0, i32 0, metadata !161, metadata !231, i32 0, i32 0} ; [ DW_TAG_array_type ]
!231 = metadata !{metadata !232}
!232 = metadata !{i32 786465, i64 0, i64 63}      ; [ DW_TAG_subrange_type ]
!233 = metadata !{i32 298, i32 63, metadata !135, null}
!234 = metadata !{i32 790533, metadata !235, metadata !"md.curlen", null, i32 240, metadata !164, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!235 = metadata !{i32 786689, metadata !236, metadata !"md", metadata !136, i32 16777456, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!236 = metadata !{i32 786478, i32 0, metadata !136, metadata !"sha512_update_128", metadata !"sha512_update_128", metadata !"", metadata !136, i32 240, metadata !137, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 241} ; [ DW_TAG_subprogram ]
!237 = metadata !{i32 240, i32 40, metadata !236, null}
!238 = metadata !{i32 790533, metadata !235, metadata !"md.length", null, i32 240, metadata !169, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!239 = metadata !{i32 790531, metadata !235, metadata !"md.state", null, i32 240, metadata !173, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!240 = metadata !{i32 790531, metadata !235, metadata !"md.buf", null, i32 240, metadata !177, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!241 = metadata !{i32 786689, metadata !236, metadata !"in", null, i32 240, metadata !242, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!242 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 0, i64 0, i32 0, i32 0, metadata !161, metadata !158, i32 0, i32 0} ; [ DW_TAG_array_type ]
!243 = metadata !{i32 240, i32 64, metadata !236, null}
!244 = metadata !{i32 242, i32 1, metadata !245, null}
!245 = metadata !{i32 786443, metadata !236, i32 241, i32 1, metadata !136, i32 1} ; [ DW_TAG_lexical_block ]
!246 = metadata !{i32 243, i32 1, metadata !245, null}
!247 = metadata !{i32 244, i32 1, metadata !245, null}
!248 = metadata !{i32 245, i32 1, metadata !245, null}
!249 = metadata !{i32 246, i32 1, metadata !245, null}
!250 = metadata !{i32 247, i32 1, metadata !245, null}
!251 = metadata !{i32 248, i32 1, metadata !245, null}
!252 = metadata !{i32 249, i32 1, metadata !245, null}
!253 = metadata !{i32 786688, metadata !245, metadata !"temp_buf", metadata !136, i32 255, metadata !156, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!254 = metadata !{i32 255, i32 19, metadata !245, null}
!255 = metadata !{i32 258, i32 5, metadata !245, null}
!256 = metadata !{i32 786688, metadata !245, metadata !"inlen", metadata !136, i32 252, metadata !153, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!257 = metadata !{i32 261, i32 5, metadata !245, null}
!258 = metadata !{i32 268, i32 12, metadata !259, null}
!259 = metadata !{i32 786443, metadata !260, i32 262, i32 46, metadata !136, i32 4} ; [ DW_TAG_lexical_block ]
!260 = metadata !{i32 786443, metadata !245, i32 261, i32 23, metadata !136, i32 3} ; [ DW_TAG_lexical_block ]
!261 = metadata !{i32 266, i32 12, metadata !259, null}
!262 = metadata !{i32 262, i32 9, metadata !260, null}
!263 = metadata !{i32 267, i32 12, metadata !259, null}
!264 = metadata !{i32 263, i32 23, metadata !259, null}
!265 = metadata !{i32 269, i32 9, metadata !259, null}
!266 = metadata !{i32 270, i32 12, metadata !267, null}
!267 = metadata !{i32 786443, metadata !260, i32 269, i32 16, metadata !136, i32 6} ; [ DW_TAG_lexical_block ]
!268 = metadata !{i32 786688, metadata !245, metadata !"n", metadata !136, i32 250, metadata !153, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!269 = metadata !{i32 272, i32 17, metadata !270, null}
!270 = metadata !{i32 786443, metadata !267, i32 272, i32 12, metadata !136, i32 7} ; [ DW_TAG_lexical_block ]
!271 = metadata !{i32 272, i32 31, metadata !270, null}
!272 = metadata !{i32 273, i32 13, metadata !273, null}
!273 = metadata !{i32 786443, metadata !270, i32 272, i32 36, metadata !136, i32 8} ; [ DW_TAG_lexical_block ]
!274 = metadata !{i32 786688, metadata !245, metadata !"i", metadata !136, i32 251, metadata !153, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!275 = metadata !{i32 278, i32 12, metadata !267, null}
!276 = metadata !{i32 277, i32 12, metadata !267, null}
!277 = metadata !{i32 279, i32 12, metadata !267, null}
!278 = metadata !{i32 280, i32 12, metadata !267, null}
!279 = metadata !{i32 281, i32 17, metadata !280, null}
!280 = metadata !{i32 786443, metadata !281, i32 281, i32 13, metadata !136, i32 10} ; [ DW_TAG_lexical_block ]
!281 = metadata !{i32 786443, metadata !267, i32 280, i32 35, metadata !136, i32 9} ; [ DW_TAG_lexical_block ]
!282 = metadata !{i32 281, i32 47, metadata !280, null}
!283 = metadata !{i32 282, i32 6, metadata !284, null}
!284 = metadata !{i32 786443, metadata !280, i32 281, i32 60, metadata !136, i32 11} ; [ DW_TAG_lexical_block ]
!285 = metadata !{i32 786688, metadata !245, metadata !"temp_index", metadata !136, i32 253, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!286 = metadata !{i32 284, i32 26, metadata !281, null}
!287 = metadata !{i32 287, i32 20, metadata !288, null}
!288 = metadata !{i32 786443, metadata !281, i32 287, i32 16, metadata !136, i32 13} ; [ DW_TAG_lexical_block ]
!289 = metadata !{i32 287, i32 50, metadata !288, null}
!290 = metadata !{i32 288, i32 6, metadata !291, null}
!291 = metadata !{i32 786443, metadata !288, i32 287, i32 63, metadata !136, i32 14} ; [ DW_TAG_lexical_block ]
!292 = metadata !{i32 290, i32 15, metadata !281, null}
!293 = metadata !{i32 292, i32 12, metadata !281, null}
!294 = metadata !{i32 790531, metadata !295, metadata !"md.state", null, i32 216, metadata !173, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!295 = metadata !{i32 786689, metadata !296, metadata !"md", metadata !136, i32 16777432, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!296 = metadata !{i32 786478, i32 0, metadata !136, metadata !"sha512_init", metadata !"sha512_init", metadata !"", metadata !136, i32 216, metadata !297, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 216} ; [ DW_TAG_subprogram ]
!297 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !298, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!298 = metadata !{metadata !139, metadata !140}
!299 = metadata !{i32 216, i32 34, metadata !296, null}
!300 = metadata !{i32 221, i32 5, metadata !301, null}
!301 = metadata !{i32 786443, metadata !296, i32 216, i32 38, metadata !136, i32 0} ; [ DW_TAG_lexical_block ]
!302 = metadata !{i32 222, i32 5, metadata !301, null}
!303 = metadata !{i32 223, i32 5, metadata !301, null}
!304 = metadata !{i32 224, i32 5, metadata !301, null}
!305 = metadata !{i32 225, i32 5, metadata !301, null}
!306 = metadata !{i32 226, i32 5, metadata !301, null}
!307 = metadata !{i32 227, i32 5, metadata !301, null}
!308 = metadata !{i32 228, i32 5, metadata !301, null}
!309 = metadata !{i32 790533, metadata !310, metadata !"md.curlen", null, i32 361, metadata !164, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!310 = metadata !{i32 786689, metadata !311, metadata !"md", metadata !136, i32 16777577, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!311 = metadata !{i32 786478, i32 0, metadata !136, metadata !"sha512_final", metadata !"sha512_final", metadata !"", metadata !136, i32 361, metadata !312, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 362} ; [ DW_TAG_subprogram ]
!312 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !313, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!313 = metadata !{metadata !139, metadata !140, metadata !314}
!314 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !157} ; [ DW_TAG_pointer_type ]
!315 = metadata !{i32 361, i32 35, metadata !311, null}
!316 = metadata !{i32 790533, metadata !310, metadata !"md.length", null, i32 361, metadata !169, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!317 = metadata !{i32 790531, metadata !310, metadata !"md.state", null, i32 361, metadata !173, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!318 = metadata !{i32 790531, metadata !310, metadata !"md.buf", null, i32 361, metadata !177, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!319 = metadata !{i32 786689, metadata !311, metadata !"out", null, i32 361, metadata !320, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!320 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 8, i32 0, i32 0, metadata !157, metadata !231, i32 0, i32 0} ; [ DW_TAG_array_type ]
!321 = metadata !{i32 361, i32 54, metadata !311, null}
!322 = metadata !{i32 363, i32 1, metadata !323, null}
!323 = metadata !{i32 786443, metadata !311, i32 362, i32 1, metadata !136, i32 29} ; [ DW_TAG_lexical_block ]
!324 = metadata !{i32 364, i32 1, metadata !323, null}
!325 = metadata !{i32 365, i32 1, metadata !323, null}
!326 = metadata !{i32 366, i32 1, metadata !323, null}
!327 = metadata !{i32 367, i32 1, metadata !323, null}
!328 = metadata !{i32 368, i32 1, metadata !323, null}
!329 = metadata !{i32 369, i32 1, metadata !323, null}
!330 = metadata !{i32 370, i32 1, metadata !323, null}
!331 = metadata !{i32 786688, metadata !323, metadata !"temp_buf", metadata !136, i32 373, metadata !156, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!332 = metadata !{i32 373, i32 16, metadata !323, null}
!333 = metadata !{i32 378, i32 5, metadata !323, null}
!334 = metadata !{i32 383, i32 5, metadata !323, null}
!335 = metadata !{i32 386, i32 5, metadata !323, null}
!336 = metadata !{i32 392, i32 2, metadata !323, null}
!337 = metadata !{i32 410, i32 2, metadata !323, null}
!338 = metadata !{i32 393, i32 3, metadata !339, null}
!339 = metadata !{i32 786443, metadata !323, i32 392, i32 24, metadata !136, i32 31} ; [ DW_TAG_lexical_block ]
!340 = metadata !{i32 396, i32 7, metadata !341, null}
!341 = metadata !{i32 786443, metadata !339, i32 396, i32 3, metadata !136, i32 33} ; [ DW_TAG_lexical_block ]
!342 = metadata !{i32 394, i32 4, metadata !343, null}
!343 = metadata !{i32 786443, metadata !339, i32 393, i32 28, metadata !136, i32 32} ; [ DW_TAG_lexical_block ]
!344 = metadata !{i32 395, i32 3, metadata !343, null}
!345 = metadata !{i32 396, i32 37, metadata !341, null}
!346 = metadata !{i32 397, i32 4, metadata !347, null}
!347 = metadata !{i32 786443, metadata !341, i32 396, i32 50, metadata !136, i32 34} ; [ DW_TAG_lexical_block ]
!348 = metadata !{i32 786688, metadata !323, metadata !"temp_index", metadata !136, i32 372, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!349 = metadata !{i32 399, i32 3, metadata !339, null}
!350 = metadata !{i32 400, i32 7, metadata !351, null}
!351 = metadata !{i32 786443, metadata !339, i32 400, i32 3, metadata !136, i32 35} ; [ DW_TAG_lexical_block ]
!352 = metadata !{i32 400, i32 37, metadata !351, null}
!353 = metadata !{i32 401, i32 4, metadata !354, null}
!354 = metadata !{i32 786443, metadata !351, i32 400, i32 50, metadata !136, i32 36} ; [ DW_TAG_lexical_block ]
!355 = metadata !{i32 411, i32 3, metadata !356, null}
!356 = metadata !{i32 786443, metadata !323, i32 410, i32 27, metadata !136, i32 37} ; [ DW_TAG_lexical_block ]
!357 = metadata !{i32 412, i32 2, metadata !356, null}
!358 = metadata !{i32 415, i32 4, metadata !359, null}
!359 = metadata !{i32 786443, metadata !323, i32 415, i32 2, metadata !136, i32 38} ; [ DW_TAG_lexical_block ]
!360 = metadata !{i32 415, i32 64, metadata !359, null}
!361 = metadata !{i32 415, i32 124, metadata !359, null}
!362 = metadata !{i32 415, i32 184, metadata !359, null}
!363 = metadata !{i32 415, i32 244, metadata !359, null}
!364 = metadata !{i32 415, i32 0, metadata !359, null}
!365 = metadata !{i32 416, i32 6, metadata !366, null}
!366 = metadata !{i32 786443, metadata !323, i32 416, i32 2, metadata !136, i32 39} ; [ DW_TAG_lexical_block ]
!367 = metadata !{i32 416, i32 36, metadata !366, null}
!368 = metadata !{i32 417, i32 3, metadata !369, null}
!369 = metadata !{i32 786443, metadata !366, i32 416, i32 49, metadata !136, i32 40} ; [ DW_TAG_lexical_block ]
!370 = metadata !{i32 419, i32 2, metadata !323, null}
!371 = metadata !{i32 420, i32 6, metadata !372, null}
!372 = metadata !{i32 786443, metadata !323, i32 420, i32 2, metadata !136, i32 41} ; [ DW_TAG_lexical_block ]
!373 = metadata !{i32 420, i32 36, metadata !372, null}
!374 = metadata !{i32 425, i32 7, metadata !375, null}
!375 = metadata !{i32 786443, metadata !323, i32 425, i32 2, metadata !136, i32 43} ; [ DW_TAG_lexical_block ]
!376 = metadata !{i32 421, i32 3, metadata !377, null}
!377 = metadata !{i32 786443, metadata !372, i32 420, i32 49, metadata !136, i32 42} ; [ DW_TAG_lexical_block ]
!378 = metadata !{i32 425, i32 21, metadata !375, null}
!379 = metadata !{i32 426, i32 5, metadata !380, null}
!380 = metadata !{i32 786443, metadata !381, i32 426, i32 3, metadata !136, i32 45} ; [ DW_TAG_lexical_block ]
!381 = metadata !{i32 786443, metadata !375, i32 425, i32 26, metadata !136, i32 44} ; [ DW_TAG_lexical_block ]
!382 = metadata !{i32 426, i32 65, metadata !380, null}
!383 = metadata !{i32 426, i32 125, metadata !380, null}
!384 = metadata !{i32 426, i32 185, metadata !380, null}
!385 = metadata !{i32 426, i32 245, metadata !380, null}
!386 = metadata !{i32 426, i32 0, metadata !380, null}
!387 = metadata !{i32 786688, metadata !323, metadata !"i", metadata !136, i32 371, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!388 = metadata !{i32 790531, metadata !389, metadata !"md.state", null, i32 153, metadata !173, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!389 = metadata !{i32 786689, metadata !390, metadata !"md", metadata !136, i32 16777369, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!390 = metadata !{i32 786478, i32 0, metadata !136, metadata !"sha512_compress_32", metadata !"sha512_compress_32", metadata !"", metadata !136, i32 153, metadata !312, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 154} ; [ DW_TAG_subprogram ]
!391 = metadata !{i32 153, i32 47, metadata !390, null}
!392 = metadata !{i32 786689, metadata !390, metadata !"buf", null, i32 153, metadata !320, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!393 = metadata !{i32 153, i32 65, metadata !390, null}
!394 = metadata !{i32 155, i32 1, metadata !395, null}
!395 = metadata !{i32 786443, metadata !390, i32 154, i32 1, metadata !136, i32 46} ; [ DW_TAG_lexical_block ]
!396 = metadata !{i32 156, i32 1, metadata !395, null}
!397 = metadata !{i32 157, i32 1, metadata !395, null}
!398 = metadata !{i32 158, i32 1, metadata !395, null}
!399 = metadata !{i32 159, i32 1, metadata !395, null}
!400 = metadata !{i32 160, i32 1, metadata !395, null}
!401 = metadata !{i32 161, i32 1, metadata !395, null}
!402 = metadata !{i32 786688, metadata !395, metadata !"S", metadata !136, i32 162, metadata !149, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!403 = metadata !{i32 162, i32 11, metadata !395, null}
!404 = metadata !{i32 786688, metadata !395, metadata !"W", metadata !136, i32 162, metadata !405, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!405 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 5120, i64 64, i32 0, i32 0, metadata !146, metadata !406, i32 0, i32 0} ; [ DW_TAG_array_type ]
!406 = metadata !{metadata !407}
!407 = metadata !{i32 786465, i64 0, i64 79}      ; [ DW_TAG_subrange_type ]
!408 = metadata !{i32 162, i32 17, metadata !395, null}
!409 = metadata !{i32 166, i32 10, metadata !410, null}
!410 = metadata !{i32 786443, metadata !395, i32 166, i32 5, metadata !136, i32 47} ; [ DW_TAG_lexical_block ]
!411 = metadata !{i32 166, i32 24, metadata !410, null}
!412 = metadata !{i32 171, i32 10, metadata !413, null}
!413 = metadata !{i32 786443, metadata !395, i32 171, i32 5, metadata !136, i32 49} ; [ DW_TAG_lexical_block ]
!414 = metadata !{i32 167, i32 9, metadata !415, null}
!415 = metadata !{i32 786443, metadata !410, i32 166, i32 29, metadata !136, i32 48} ; [ DW_TAG_lexical_block ]
!416 = metadata !{i32 786688, metadata !395, metadata !"i", metadata !136, i32 163, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!417 = metadata !{i32 171, i32 25, metadata !413, null}
!418 = metadata !{i32 176, i32 10, metadata !419, null}
!419 = metadata !{i32 786443, metadata !395, i32 176, i32 5, metadata !136, i32 52} ; [ DW_TAG_lexical_block ]
!420 = metadata !{i32 172, i32 11, metadata !421, null}
!421 = metadata !{i32 786443, metadata !422, i32 172, i32 9, metadata !136, i32 51} ; [ DW_TAG_lexical_block ]
!422 = metadata !{i32 786443, metadata !413, i32 171, i32 30, metadata !136, i32 50} ; [ DW_TAG_lexical_block ]
!423 = metadata !{i32 188, i32 8, metadata !424, null}
!424 = metadata !{i32 786443, metadata !425, i32 187, i32 33, metadata !136, i32 55} ; [ DW_TAG_lexical_block ]
!425 = metadata !{i32 786443, metadata !395, i32 187, i32 5, metadata !136, i32 54} ; [ DW_TAG_lexical_block ]
!426 = metadata !{i32 188, i32 0, metadata !424, null}
!427 = metadata !{i32 187, i32 10, metadata !425, null}
!428 = metadata !{i32 177, i32 9, metadata !429, null}
!429 = metadata !{i32 786443, metadata !419, i32 176, i32 31, metadata !136, i32 53} ; [ DW_TAG_lexical_block ]
!430 = metadata !{i32 176, i32 26, metadata !419, null}
!431 = metadata !{i32 203, i32 9, metadata !432, null}
!432 = metadata !{i32 786443, metadata !395, i32 203, i32 4, metadata !136, i32 56} ; [ DW_TAG_lexical_block ]
!433 = metadata !{i32 786688, metadata !395, metadata !"t0", metadata !136, i32 162, metadata !146, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!434 = metadata !{i32 189, i32 8, metadata !424, null}
!435 = metadata !{i32 189, i32 0, metadata !424, null}
!436 = metadata !{i32 190, i32 8, metadata !424, null}
!437 = metadata !{i32 190, i32 0, metadata !424, null}
!438 = metadata !{i32 191, i32 8, metadata !424, null}
!439 = metadata !{i32 191, i32 0, metadata !424, null}
!440 = metadata !{i32 192, i32 8, metadata !424, null}
!441 = metadata !{i32 192, i32 0, metadata !424, null}
!442 = metadata !{i32 193, i32 8, metadata !424, null}
!443 = metadata !{i32 193, i32 0, metadata !424, null}
!444 = metadata !{i32 194, i32 8, metadata !424, null}
!445 = metadata !{i32 194, i32 0, metadata !424, null}
!446 = metadata !{i32 195, i32 8, metadata !424, null}
!447 = metadata !{i32 195, i32 0, metadata !424, null}
!448 = metadata !{i32 187, i32 25, metadata !425, null}
!449 = metadata !{i32 203, i32 23, metadata !432, null}
!450 = metadata !{i32 204, i32 9, metadata !451, null}
!451 = metadata !{i32 786443, metadata !432, i32 203, i32 28, metadata !136, i32 57} ; [ DW_TAG_lexical_block ]
!452 = metadata !{i32 790531, metadata !453, metadata !"md.state", null, i32 96, metadata !173, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!453 = metadata !{i32 786689, metadata !454, metadata !"md", metadata !136, i32 16777312, metadata !140, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!454 = metadata !{i32 786478, i32 0, metadata !136, metadata !"sha512_compress_128", metadata !"sha512_compress_128", metadata !"", metadata !136, i32 96, metadata !312, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 97} ; [ DW_TAG_subprogram ]
!455 = metadata !{i32 96, i32 48, metadata !454, null}
!456 = metadata !{i32 98, i32 1, metadata !457, null}
!457 = metadata !{i32 786443, metadata !454, i32 97, i32 1, metadata !136, i32 58} ; [ DW_TAG_lexical_block ]
!458 = metadata !{i32 99, i32 1, metadata !457, null}
!459 = metadata !{i32 100, i32 1, metadata !457, null}
!460 = metadata !{i32 101, i32 1, metadata !457, null}
!461 = metadata !{i32 102, i32 1, metadata !457, null}
!462 = metadata !{i32 103, i32 1, metadata !457, null}
!463 = metadata !{i32 104, i32 1, metadata !457, null}
!464 = metadata !{i32 786688, metadata !457, metadata !"S", metadata !136, i32 105, metadata !149, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!465 = metadata !{i32 105, i32 11, metadata !457, null}
!466 = metadata !{i32 786688, metadata !457, metadata !"W", metadata !136, i32 105, metadata !405, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!467 = metadata !{i32 105, i32 17, metadata !457, null}
!468 = metadata !{i32 109, i32 10, metadata !469, null}
!469 = metadata !{i32 786443, metadata !457, i32 109, i32 5, metadata !136, i32 59} ; [ DW_TAG_lexical_block ]
!470 = metadata !{i32 109, i32 24, metadata !469, null}
!471 = metadata !{i32 114, i32 10, metadata !472, null}
!472 = metadata !{i32 786443, metadata !457, i32 114, i32 5, metadata !136, i32 61} ; [ DW_TAG_lexical_block ]
!473 = metadata !{i32 110, i32 9, metadata !474, null}
!474 = metadata !{i32 786443, metadata !469, i32 109, i32 29, metadata !136, i32 60} ; [ DW_TAG_lexical_block ]
!475 = metadata !{i32 786688, metadata !457, metadata !"i", metadata !136, i32 106, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!476 = metadata !{i32 114, i32 25, metadata !472, null}
!477 = metadata !{i32 119, i32 10, metadata !478, null}
!478 = metadata !{i32 786443, metadata !457, i32 119, i32 5, metadata !136, i32 64} ; [ DW_TAG_lexical_block ]
!479 = metadata !{i32 115, i32 11, metadata !480, null}
!480 = metadata !{i32 786443, metadata !481, i32 115, i32 9, metadata !136, i32 63} ; [ DW_TAG_lexical_block ]
!481 = metadata !{i32 786443, metadata !472, i32 114, i32 30, metadata !136, i32 62} ; [ DW_TAG_lexical_block ]
!482 = metadata !{i32 131, i32 8, metadata !483, null}
!483 = metadata !{i32 786443, metadata !484, i32 130, i32 33, metadata !136, i32 67} ; [ DW_TAG_lexical_block ]
!484 = metadata !{i32 786443, metadata !457, i32 130, i32 5, metadata !136, i32 66} ; [ DW_TAG_lexical_block ]
!485 = metadata !{i32 131, i32 0, metadata !483, null}
!486 = metadata !{i32 130, i32 10, metadata !484, null}
!487 = metadata !{i32 120, i32 9, metadata !488, null}
!488 = metadata !{i32 786443, metadata !478, i32 119, i32 31, metadata !136, i32 65} ; [ DW_TAG_lexical_block ]
!489 = metadata !{i32 119, i32 26, metadata !478, null}
!490 = metadata !{i32 146, i32 9, metadata !491, null}
!491 = metadata !{i32 786443, metadata !457, i32 146, i32 4, metadata !136, i32 68} ; [ DW_TAG_lexical_block ]
!492 = metadata !{i32 786688, metadata !457, metadata !"t0", metadata !136, i32 105, metadata !146, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!493 = metadata !{i32 132, i32 8, metadata !483, null}
!494 = metadata !{i32 132, i32 0, metadata !483, null}
!495 = metadata !{i32 133, i32 8, metadata !483, null}
!496 = metadata !{i32 133, i32 0, metadata !483, null}
!497 = metadata !{i32 134, i32 8, metadata !483, null}
!498 = metadata !{i32 134, i32 0, metadata !483, null}
!499 = metadata !{i32 135, i32 8, metadata !483, null}
!500 = metadata !{i32 135, i32 0, metadata !483, null}
!501 = metadata !{i32 136, i32 8, metadata !483, null}
!502 = metadata !{i32 136, i32 0, metadata !483, null}
!503 = metadata !{i32 137, i32 8, metadata !483, null}
!504 = metadata !{i32 137, i32 0, metadata !483, null}
!505 = metadata !{i32 138, i32 8, metadata !483, null}
!506 = metadata !{i32 138, i32 0, metadata !483, null}
!507 = metadata !{i32 130, i32 25, metadata !484, null}
!508 = metadata !{i32 146, i32 23, metadata !491, null}
!509 = metadata !{i32 147, i32 9, metadata !510, null}
!510 = metadata !{i32 786443, metadata !491, i32 146, i32 28, metadata !136, i32 69} ; [ DW_TAG_lexical_block ]
!511 = metadata !{i32 786689, metadata !454, metadata !"buf", null, i32 96, metadata !156, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!512 = metadata !{i32 96, i32 66, metadata !454, null}
!513 = metadata !{i32 786688, metadata !514, metadata !"mask", metadata !516, i32 24, metadata !526, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!514 = metadata !{i32 786443, metadata !515, i32 21, i32 1, metadata !516, i32 46} ; [ DW_TAG_lexical_block ]
!515 = metadata !{i32 786478, i32 0, metadata !516, metadata !"reduce_add_sub", metadata !"reduce_add_sub", metadata !"", metadata !516, i32 20, metadata !517, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 21} ; [ DW_TAG_subprogram ]
!516 = metadata !{i32 786473, metadata !"ed25519_ref/src/sc25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!517 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !518, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!518 = metadata !{null, metadata !519}
!519 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !520} ; [ DW_TAG_pointer_type ]
!520 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !516, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !521} ; [ DW_TAG_typedef ]
!521 = metadata !{i32 786451, null, metadata !"", metadata !522, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !523, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!522 = metadata !{i32 786473, metadata !"ed25519_ref/src/sc25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!523 = metadata !{metadata !524}
!524 = metadata !{i32 786445, metadata !521, metadata !"v", metadata !522, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !525} ; [ DW_TAG_member ]
!525 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !526, metadata !528, i32 0, i32 0} ; [ DW_TAG_array_type ]
!526 = metadata !{i32 786454, null, metadata !"crypto_uint32", metadata !522, i32 4, i64 0, i64 0, i64 0, i32 0, metadata !527} ; [ DW_TAG_typedef ]
!527 = metadata !{i32 786468, null, metadata !"unsigned int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!528 = metadata !{metadata !529}
!529 = metadata !{i32 786465, i64 0, i64 31}      ; [ DW_TAG_subrange_type ]
!530 = metadata !{i32 790531, metadata !531, metadata !"r.v", null, i32 20, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!531 = metadata !{i32 786689, metadata !515, metadata !"r", metadata !516, i32 16777236, metadata !519, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!532 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !533} ; [ DW_TAG_pointer_type ]
!533 = metadata !{i32 786452, null, metadata !"", metadata !522, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !523, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!534 = metadata !{i32 20, i32 61, metadata !515, null}
!535 = metadata !{i32 786688, metadata !514, metadata !"t", metadata !516, i32 26, metadata !536, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!536 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 256, i64 8, i32 0, i32 0, metadata !157, metadata !528, i32 0, i32 0} ; [ DW_TAG_array_type ]
!537 = metadata !{i32 26, i32 17, metadata !514, null}
!538 = metadata !{i32 28, i32 7, metadata !539, null}
!539 = metadata !{i32 786443, metadata !514, i32 28, i32 3, metadata !516, i32 47} ; [ DW_TAG_lexical_block ]
!540 = metadata !{i32 28, i32 16, metadata !539, null}
!541 = metadata !{i32 35, i32 3, metadata !514, null}
!542 = metadata !{i32 36, i32 7, metadata !543, null}
!543 = metadata !{i32 786443, metadata !514, i32 36, i32 3, metadata !516, i32 49} ; [ DW_TAG_lexical_block ]
!544 = metadata !{i32 30, i32 5, metadata !545, null}
!545 = metadata !{i32 786443, metadata !539, i32 29, i32 3, metadata !516, i32 48} ; [ DW_TAG_lexical_block ]
!546 = metadata !{i32 786688, metadata !514, metadata !"pb", metadata !516, i32 22, metadata !526, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!547 = metadata !{i32 31, i32 9, metadata !545, null}
!548 = metadata !{i32 786689, metadata !549, metadata !"a", metadata !516, i32 16777227, metadata !526, i32 0, metadata !547} ; [ DW_TAG_arg_variable ]
!549 = metadata !{i32 786478, i32 0, metadata !516, metadata !"lt", metadata !"lt", metadata !"", metadata !516, i32 11, metadata !550, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 12} ; [ DW_TAG_subprogram ]
!550 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !551, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!551 = metadata !{metadata !526, metadata !526, metadata !526}
!552 = metadata !{i32 11, i32 39, metadata !549, metadata !547}
!553 = metadata !{i32 786689, metadata !549, metadata !"b", metadata !516, i32 33554443, metadata !526, i32 0, metadata !547} ; [ DW_TAG_arg_variable ]
!554 = metadata !{i32 11, i32 55, metadata !549, metadata !547}
!555 = metadata !{i32 786688, metadata !556, metadata !"x", metadata !516, i32 13, metadata !527, i32 0, metadata !547} ; [ DW_TAG_auto_variable ]
!556 = metadata !{i32 786443, metadata !549, i32 12, i32 1, metadata !516, i32 50} ; [ DW_TAG_lexical_block ]
!557 = metadata !{i32 13, i32 21, metadata !556, metadata !547}
!558 = metadata !{i32 14, i32 3, metadata !556, metadata !547}
!559 = metadata !{i32 15, i32 3, metadata !556, metadata !547}
!560 = metadata !{i32 32, i32 5, metadata !545, null}
!561 = metadata !{i32 786688, metadata !514, metadata !"i", metadata !516, i32 25, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!562 = metadata !{i32 36, i32 16, metadata !543, null}
!563 = metadata !{i32 37, i32 5, metadata !543, null}
!564 = metadata !{i32 38, i32 1, metadata !514, null}
!565 = metadata !{i32 786689, metadata !566, metadata !"r", null, i32 98, metadata !320, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!566 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_pack", metadata !"crypto_sign_ed25519_ref_fe25519_pack", metadata !"", metadata !567, i32 98, metadata !568, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 99} ; [ DW_TAG_subprogram ]
!567 = metadata !{i32 786473, metadata !"ed25519_ref/src/fe25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!568 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !569, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!569 = metadata !{null, metadata !314, metadata !570}
!570 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !571} ; [ DW_TAG_pointer_type ]
!571 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !572} ; [ DW_TAG_const_type ]
!572 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !567, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !573} ; [ DW_TAG_typedef ]
!573 = metadata !{i32 786451, null, metadata !"", metadata !574, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !575, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!574 = metadata !{i32 786473, metadata !"ed25519_ref/src/fe25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!575 = metadata !{metadata !576}
!576 = metadata !{i32 786445, metadata !573, metadata !"v", metadata !574, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !577} ; [ DW_TAG_member ]
!577 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !578, metadata !528, i32 0, i32 0} ; [ DW_TAG_array_type ]
!578 = metadata !{i32 786454, null, metadata !"crypto_uint32", metadata !574, i32 4, i64 0, i64 0, i64 0, i32 0, metadata !527} ; [ DW_TAG_typedef ]
!579 = metadata !{i32 98, i32 57, metadata !566, null}
!580 = metadata !{i32 790531, metadata !581, metadata !"x.v", null, i32 98, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!581 = metadata !{i32 786689, metadata !566, metadata !"x", metadata !567, i32 33554530, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!582 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !583} ; [ DW_TAG_pointer_type ]
!583 = metadata !{i32 786452, null, metadata !"", metadata !574, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !575, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!584 = metadata !{i32 98, i32 103, metadata !566, null}
!585 = metadata !{i32 790529, metadata !586, metadata !"y.v", null, i32 101, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!586 = metadata !{i32 786688, metadata !587, metadata !"y", metadata !567, i32 101, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!587 = metadata !{i32 786443, metadata !566, i32 99, i32 1, metadata !567, i32 5} ; [ DW_TAG_lexical_block ]
!588 = metadata !{i32 101, i32 35, metadata !587, null}
!589 = metadata !{i32 101, i32 41, metadata !587, null}
!590 = metadata !{i32 102, i32 3, metadata !587, null}
!591 = metadata !{i32 103, i32 7, metadata !592, null}
!592 = metadata !{i32 786443, metadata !587, i32 103, i32 3, metadata !567, i32 6} ; [ DW_TAG_lexical_block ]
!593 = metadata !{i32 103, i32 16, metadata !592, null}
!594 = metadata !{i32 104, i32 5, metadata !592, null}
!595 = metadata !{i32 786688, metadata !587, metadata !"i", metadata !567, i32 100, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!596 = metadata !{i32 105, i32 1, metadata !587, null}
!597 = metadata !{i32 790531, metadata !598, metadata !"r.v", null, i32 175, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!598 = metadata !{i32 786689, metadata !599, metadata !"r", metadata !567, i32 16777391, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!599 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_sub", metadata !"crypto_sign_ed25519_ref_fe25519_sub", metadata !"", metadata !567, i32 175, metadata !600, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 176} ; [ DW_TAG_subprogram ]
!600 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !601, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!601 = metadata !{null, metadata !602, metadata !570, metadata !570}
!602 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !572} ; [ DW_TAG_pointer_type ]
!603 = metadata !{i32 175, i32 75, metadata !599, null}
!604 = metadata !{i32 790531, metadata !605, metadata !"x.v", null, i32 175, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!605 = metadata !{i32 786689, metadata !599, metadata !"x", metadata !567, i32 33554607, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!606 = metadata !{i32 175, i32 117, metadata !599, null}
!607 = metadata !{i32 790531, metadata !608, metadata !"y.v", null, i32 175, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!608 = metadata !{i32 786689, metadata !599, metadata !"y", metadata !567, i32 50331823, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!609 = metadata !{i32 175, i32 159, metadata !599, null}
!610 = metadata !{i32 786688, metadata !611, metadata !"t", metadata !567, i32 178, metadata !577, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!611 = metadata !{i32 786443, metadata !599, i32 176, i32 1, metadata !567, i32 22} ; [ DW_TAG_lexical_block ]
!612 = metadata !{i32 178, i32 17, metadata !611, null}
!613 = metadata !{i32 179, i32 3, metadata !611, null}
!614 = metadata !{i32 180, i32 3, metadata !611, null}
!615 = metadata !{i32 181, i32 7, metadata !616, null}
!616 = metadata !{i32 786443, metadata !611, i32 181, i32 3, metadata !567, i32 23} ; [ DW_TAG_lexical_block ]
!617 = metadata !{i32 182, i32 7, metadata !618, null}
!618 = metadata !{i32 786443, metadata !611, i32 182, i32 3, metadata !567, i32 24} ; [ DW_TAG_lexical_block ]
!619 = metadata !{i32 181, i32 21, metadata !616, null}
!620 = metadata !{i32 181, i32 16, metadata !616, null}
!621 = metadata !{i32 786688, metadata !611, metadata !"i", metadata !567, i32 177, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!622 = metadata !{i32 182, i32 16, metadata !618, null}
!623 = metadata !{i32 182, i32 21, metadata !618, null}
!624 = metadata !{i32 790531, metadata !625, metadata !"r.v", null, i32 33, metadata !582, i32 0, metadata !629} ; [ DW_TAG_arg_variable_field ]
!625 = metadata !{i32 786689, metadata !626, metadata !"r", metadata !567, i32 16777249, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!626 = metadata !{i32 786478, i32 0, metadata !567, metadata !"reduce_add_sub", metadata !"reduce_add_sub", metadata !"", metadata !567, i32 33, metadata !627, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 34} ; [ DW_TAG_subprogram ]
!627 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !628, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!628 = metadata !{null, metadata !602}
!629 = metadata !{i32 183, i32 3, metadata !611, null}
!630 = metadata !{i32 33, i32 61, metadata !626, metadata !629}
!631 = metadata !{i32 40, i32 5, metadata !632, metadata !629}
!632 = metadata !{i32 786443, metadata !633, i32 39, i32 3, metadata !567, i32 68} ; [ DW_TAG_lexical_block ]
!633 = metadata !{i32 786443, metadata !634, i32 38, i32 3, metadata !567, i32 67} ; [ DW_TAG_lexical_block ]
!634 = metadata !{i32 786443, metadata !626, i32 34, i32 1, metadata !567, i32 66} ; [ DW_TAG_lexical_block ]
!635 = metadata !{i32 43, i32 5, metadata !632, metadata !629}
!636 = metadata !{i32 38, i32 7, metadata !633, metadata !629}
!637 = metadata !{i32 38, i32 19, metadata !633, metadata !629}
!638 = metadata !{i32 786688, metadata !634, metadata !"rep", metadata !567, i32 36, metadata !139, i32 0, metadata !629} ; [ DW_TAG_auto_variable ]
!639 = metadata !{i32 41, i32 5, metadata !632, metadata !629}
!640 = metadata !{i32 25, i32 3, metadata !641, metadata !645}
!641 = metadata !{i32 786443, metadata !642, i32 24, i32 1, metadata !567, i32 64} ; [ DW_TAG_lexical_block ]
!642 = metadata !{i32 786478, i32 0, metadata !567, metadata !"times19", metadata !"times19", metadata !"", metadata !567, i32 23, metadata !643, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 24} ; [ DW_TAG_subprogram ]
!643 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !644, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!644 = metadata !{metadata !578, metadata !578}
!645 = metadata !{i32 42, i32 9, metadata !632, metadata !629}
!646 = metadata !{i32 786688, metadata !634, metadata !"t", metadata !567, i32 35, metadata !578, i32 0, metadata !629} ; [ DW_TAG_auto_variable ]
!647 = metadata !{i32 44, i32 9, metadata !648, metadata !629}
!648 = metadata !{i32 786443, metadata !632, i32 44, i32 5, metadata !567, i32 69} ; [ DW_TAG_lexical_block ]
!649 = metadata !{i32 47, i32 7, metadata !650, metadata !629}
!650 = metadata !{i32 786443, metadata !648, i32 45, i32 5, metadata !567, i32 70} ; [ DW_TAG_lexical_block ]
!651 = metadata !{i32 46, i32 7, metadata !650, metadata !629}
!652 = metadata !{i32 48, i32 7, metadata !650, metadata !629}
!653 = metadata !{i32 786688, metadata !634, metadata !"i", metadata !567, i32 36, metadata !139, i32 0, metadata !629} ; [ DW_TAG_auto_variable ]
!654 = metadata !{i32 44, i32 18, metadata !648, metadata !629}
!655 = metadata !{i32 184, i32 1, metadata !611, null}
!656 = metadata !{i32 790531, metadata !657, metadata !"r.v", null, i32 74, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!657 = metadata !{i32 786689, metadata !658, metadata !"r", metadata !567, i32 16777290, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!658 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_freeze", metadata !"crypto_sign_ed25519_ref_fe25519_freeze", metadata !"", metadata !567, i32 74, metadata !627, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 75} ; [ DW_TAG_subprogram ]
!659 = metadata !{i32 74, i32 78, metadata !658, null}
!660 = metadata !{i32 77, i32 21, metadata !661, null}
!661 = metadata !{i32 786443, metadata !658, i32 75, i32 1, metadata !567, i32 0} ; [ DW_TAG_lexical_block ]
!662 = metadata !{i32 786689, metadata !663, metadata !"a", metadata !567, i32 16777222, metadata !578, i32 0, metadata !660} ; [ DW_TAG_arg_variable ]
!663 = metadata !{i32 786478, i32 0, metadata !567, metadata !"equal", metadata !"equal", metadata !"", metadata !567, i32 6, metadata !664, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 7} ; [ DW_TAG_subprogram ]
!664 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !665, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!665 = metadata !{metadata !578, metadata !578, metadata !578}
!666 = metadata !{i32 6, i32 42, metadata !663, metadata !660}
!667 = metadata !{i32 8, i32 26, metadata !668, metadata !660}
!668 = metadata !{i32 786443, metadata !663, i32 7, i32 1, metadata !567, i32 72} ; [ DW_TAG_lexical_block ]
!669 = metadata !{i32 786688, metadata !668, metadata !"x", metadata !567, i32 8, metadata !578, i32 0, metadata !660} ; [ DW_TAG_auto_variable ]
!670 = metadata !{i32 9, i32 3, metadata !668, metadata !660}
!671 = metadata !{i32 10, i32 3, metadata !668, metadata !660}
!672 = metadata !{i32 78, i32 7, metadata !673, null}
!673 = metadata !{i32 786443, metadata !661, i32 78, i32 3, metadata !567, i32 1} ; [ DW_TAG_lexical_block ]
!674 = metadata !{i32 79, i32 10, metadata !673, null}
!675 = metadata !{i32 786689, metadata !663, metadata !"a", metadata !567, i32 16777222, metadata !578, i32 0, metadata !674} ; [ DW_TAG_arg_variable ]
!676 = metadata !{i32 6, i32 42, metadata !663, metadata !674}
!677 = metadata !{i32 8, i32 26, metadata !668, metadata !674}
!678 = metadata !{i32 786688, metadata !668, metadata !"x", metadata !567, i32 8, metadata !578, i32 0, metadata !674} ; [ DW_TAG_auto_variable ]
!679 = metadata !{i32 9, i32 3, metadata !668, metadata !674}
!680 = metadata !{i32 10, i32 3, metadata !668, metadata !674}
!681 = metadata !{i32 786688, metadata !661, metadata !"m", metadata !567, i32 77, metadata !578, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!682 = metadata !{i32 78, i32 16, metadata !673, null}
!683 = metadata !{i32 786688, metadata !661, metadata !"i", metadata !567, i32 76, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!684 = metadata !{i32 80, i32 8, metadata !661, null}
!685 = metadata !{i32 786689, metadata !686, metadata !"a", metadata !567, i32 16777230, metadata !578, i32 0, metadata !684} ; [ DW_TAG_arg_variable ]
!686 = metadata !{i32 786478, i32 0, metadata !567, metadata !"ge", metadata !"ge", metadata !"", metadata !567, i32 14, metadata !664, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 15} ; [ DW_TAG_subprogram ]
!687 = metadata !{i32 14, i32 39, metadata !686, metadata !684}
!688 = metadata !{i32 786688, metadata !689, metadata !"x", metadata !567, i32 16, metadata !527, i32 0, metadata !684} ; [ DW_TAG_auto_variable ]
!689 = metadata !{i32 786443, metadata !686, i32 15, i32 1, metadata !567, i32 71} ; [ DW_TAG_lexical_block ]
!690 = metadata !{i32 16, i32 21, metadata !689, metadata !684}
!691 = metadata !{i32 17, i32 3, metadata !689, metadata !684}
!692 = metadata !{i32 18, i32 3, metadata !689, metadata !684}
!693 = metadata !{i32 19, i32 3, metadata !689, metadata !684}
!694 = metadata !{i32 84, i32 3, metadata !661, null}
!695 = metadata !{i32 86, i32 5, metadata !696, null}
!696 = metadata !{i32 786443, metadata !661, i32 85, i32 3, metadata !567, i32 2} ; [ DW_TAG_lexical_block ]
!697 = metadata !{i32 85, i32 7, metadata !696, null}
!698 = metadata !{i32 85, i32 16, metadata !696, null}
!699 = metadata !{i32 87, i32 3, metadata !661, null}
!700 = metadata !{i32 88, i32 1, metadata !661, null}
!701 = metadata !{i32 790531, metadata !702, metadata !"x.v", null, i32 139, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!702 = metadata !{i32 786689, metadata !703, metadata !"x", metadata !567, i32 16777355, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!703 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_getparity", metadata !"crypto_sign_ed25519_ref_fe25519_getparity", metadata !"", metadata !567, i32 139, metadata !704, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 140} ; [ DW_TAG_subprogram ]
!704 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !705, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!705 = metadata !{metadata !157, metadata !570}
!706 = metadata !{i32 139, i32 96, metadata !703, null}
!707 = metadata !{i32 790529, metadata !708, metadata !"t.v", null, i32 141, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!708 = metadata !{i32 786688, metadata !709, metadata !"t", metadata !567, i32 141, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!709 = metadata !{i32 786443, metadata !703, i32 140, i32 1, metadata !567, i32 13} ; [ DW_TAG_lexical_block ]
!710 = metadata !{i32 141, i32 35, metadata !709, null}
!711 = metadata !{i32 141, i32 41, metadata !709, null}
!712 = metadata !{i32 142, i32 3, metadata !709, null}
!713 = metadata !{i32 143, i32 3, metadata !709, null}
!714 = metadata !{i32 790531, metadata !715, metadata !"r.v", null, i32 208, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!715 = metadata !{i32 786689, metadata !716, metadata !"r", metadata !567, i32 16777424, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!716 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_invert", metadata !"crypto_sign_ed25519_ref_fe25519_invert", metadata !"", metadata !567, i32 208, metadata !717, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 209} ; [ DW_TAG_subprogram ]
!717 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !718, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!718 = metadata !{null, metadata !602, metadata !570}
!719 = metadata !{i32 208, i32 78, metadata !716, null}
!720 = metadata !{i32 790531, metadata !721, metadata !"x.v", null, i32 208, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!721 = metadata !{i32 786689, metadata !716, metadata !"x", metadata !567, i32 33554640, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!722 = metadata !{i32 208, i32 120, metadata !716, null}
!723 = metadata !{i32 790529, metadata !724, metadata !"z2.v", null, i32 210, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!724 = metadata !{i32 786688, metadata !725, metadata !"z2", metadata !567, i32 210, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!725 = metadata !{i32 786443, metadata !716, i32 209, i32 1, metadata !567, i32 31} ; [ DW_TAG_lexical_block ]
!726 = metadata !{i32 210, i32 34, metadata !725, null}
!727 = metadata !{i32 790529, metadata !728, metadata !"z9.v", null, i32 211, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!728 = metadata !{i32 786688, metadata !725, metadata !"z9", metadata !567, i32 211, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!729 = metadata !{i32 211, i32 34, metadata !725, null}
!730 = metadata !{i32 790529, metadata !731, metadata !"z11.v", null, i32 212, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!731 = metadata !{i32 786688, metadata !725, metadata !"z11", metadata !567, i32 212, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!732 = metadata !{i32 212, i32 34, metadata !725, null}
!733 = metadata !{i32 790529, metadata !734, metadata !"z2_5_0.v", null, i32 213, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!734 = metadata !{i32 786688, metadata !725, metadata !"z2_5_0", metadata !567, i32 213, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!735 = metadata !{i32 213, i32 34, metadata !725, null}
!736 = metadata !{i32 790529, metadata !737, metadata !"z2_10_0.v", null, i32 214, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!737 = metadata !{i32 786688, metadata !725, metadata !"z2_10_0", metadata !567, i32 214, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!738 = metadata !{i32 214, i32 34, metadata !725, null}
!739 = metadata !{i32 790529, metadata !740, metadata !"z2_20_0.v", null, i32 215, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!740 = metadata !{i32 786688, metadata !725, metadata !"z2_20_0", metadata !567, i32 215, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!741 = metadata !{i32 215, i32 34, metadata !725, null}
!742 = metadata !{i32 790529, metadata !743, metadata !"z2_50_0.v", null, i32 216, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!743 = metadata !{i32 786688, metadata !725, metadata !"z2_50_0", metadata !567, i32 216, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!744 = metadata !{i32 216, i32 34, metadata !725, null}
!745 = metadata !{i32 790529, metadata !746, metadata !"z2_100_0.v", null, i32 217, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!746 = metadata !{i32 786688, metadata !725, metadata !"z2_100_0", metadata !567, i32 217, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!747 = metadata !{i32 217, i32 34, metadata !725, null}
!748 = metadata !{i32 790529, metadata !749, metadata !"t0.v", null, i32 218, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!749 = metadata !{i32 786688, metadata !725, metadata !"t0", metadata !567, i32 218, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!750 = metadata !{i32 218, i32 34, metadata !725, null}
!751 = metadata !{i32 790529, metadata !752, metadata !"t1.v", null, i32 219, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!752 = metadata !{i32 786688, metadata !725, metadata !"t1", metadata !567, i32 219, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!753 = metadata !{i32 219, i32 34, metadata !725, null}
!754 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !757} ; [ DW_TAG_arg_variable_field ]
!755 = metadata !{i32 786689, metadata !756, metadata !"r", metadata !567, i32 16777419, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!756 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_square", metadata !"crypto_sign_ed25519_ref_fe25519_square", metadata !"", metadata !567, i32 203, metadata !717, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 204} ; [ DW_TAG_subprogram ]
!757 = metadata !{i32 222, i32 10, metadata !725, null}
!758 = metadata !{i32 203, i32 78, metadata !756, metadata !757}
!759 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !757} ; [ DW_TAG_arg_variable_field ]
!760 = metadata !{i32 786689, metadata !756, metadata !"x", metadata !567, i32 33554635, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!761 = metadata !{i32 203, i32 120, metadata !756, metadata !757}
!762 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !763} ; [ DW_TAG_arg_variable_field ]
!763 = metadata !{i32 223, i32 10, metadata !725, null}
!764 = metadata !{i32 203, i32 78, metadata !756, metadata !763}
!765 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !763} ; [ DW_TAG_arg_variable_field ]
!766 = metadata !{i32 203, i32 120, metadata !756, metadata !763}
!767 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !768} ; [ DW_TAG_arg_variable_field ]
!768 = metadata !{i32 224, i32 10, metadata !725, null}
!769 = metadata !{i32 203, i32 78, metadata !756, metadata !768}
!770 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !768} ; [ DW_TAG_arg_variable_field ]
!771 = metadata !{i32 203, i32 120, metadata !756, metadata !768}
!772 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !773} ; [ DW_TAG_arg_variable_field ]
!773 = metadata !{i32 227, i32 11, metadata !725, null}
!774 = metadata !{i32 203, i32 78, metadata !756, metadata !773}
!775 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !773} ; [ DW_TAG_arg_variable_field ]
!776 = metadata !{i32 203, i32 120, metadata !756, metadata !773}
!777 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !778} ; [ DW_TAG_arg_variable_field ]
!778 = metadata !{i32 230, i32 18, metadata !725, null}
!779 = metadata !{i32 203, i32 78, metadata !756, metadata !778}
!780 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !778} ; [ DW_TAG_arg_variable_field ]
!781 = metadata !{i32 203, i32 120, metadata !756, metadata !778}
!782 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !783} ; [ DW_TAG_arg_variable_field ]
!783 = metadata !{i32 231, i32 18, metadata !725, null}
!784 = metadata !{i32 203, i32 78, metadata !756, metadata !783}
!785 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !783} ; [ DW_TAG_arg_variable_field ]
!786 = metadata !{i32 203, i32 120, metadata !756, metadata !783}
!787 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !788} ; [ DW_TAG_arg_variable_field ]
!788 = metadata !{i32 232, i32 18, metadata !725, null}
!789 = metadata !{i32 203, i32 78, metadata !756, metadata !788}
!790 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !788} ; [ DW_TAG_arg_variable_field ]
!791 = metadata !{i32 203, i32 120, metadata !756, metadata !788}
!792 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !793} ; [ DW_TAG_arg_variable_field ]
!793 = metadata !{i32 233, i32 18, metadata !725, null}
!794 = metadata !{i32 203, i32 78, metadata !756, metadata !793}
!795 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !793} ; [ DW_TAG_arg_variable_field ]
!796 = metadata !{i32 203, i32 120, metadata !756, metadata !793}
!797 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !798} ; [ DW_TAG_arg_variable_field ]
!798 = metadata !{i32 234, i32 19, metadata !725, null}
!799 = metadata !{i32 203, i32 78, metadata !756, metadata !798}
!800 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !798} ; [ DW_TAG_arg_variable_field ]
!801 = metadata !{i32 203, i32 120, metadata !756, metadata !798}
!802 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !803} ; [ DW_TAG_arg_variable_field ]
!803 = metadata !{i32 237, i32 19, metadata !725, null}
!804 = metadata !{i32 203, i32 78, metadata !756, metadata !803}
!805 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !803} ; [ DW_TAG_arg_variable_field ]
!806 = metadata !{i32 203, i32 120, metadata !756, metadata !803}
!807 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !808} ; [ DW_TAG_arg_variable_field ]
!808 = metadata !{i32 238, i32 19, metadata !725, null}
!809 = metadata !{i32 203, i32 78, metadata !756, metadata !808}
!810 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !808} ; [ DW_TAG_arg_variable_field ]
!811 = metadata !{i32 203, i32 120, metadata !756, metadata !808}
!812 = metadata !{i32 239, i32 25, metadata !813, null}
!813 = metadata !{i32 786443, metadata !725, i32 239, i32 20, metadata !567, i32 32} ; [ DW_TAG_lexical_block ]
!814 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !815} ; [ DW_TAG_arg_variable_field ]
!815 = metadata !{i32 239, i32 48, metadata !816, null}
!816 = metadata !{i32 786443, metadata !813, i32 239, i32 46, metadata !567, i32 33} ; [ DW_TAG_lexical_block ]
!817 = metadata !{i32 203, i32 78, metadata !756, metadata !815}
!818 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !815} ; [ DW_TAG_arg_variable_field ]
!819 = metadata !{i32 203, i32 120, metadata !756, metadata !815}
!820 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !821} ; [ DW_TAG_arg_variable_field ]
!821 = metadata !{i32 239, i32 97, metadata !816, null}
!822 = metadata !{i32 203, i32 78, metadata !756, metadata !821}
!823 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !821} ; [ DW_TAG_arg_variable_field ]
!824 = metadata !{i32 203, i32 120, metadata !756, metadata !821}
!825 = metadata !{i32 239, i32 38, metadata !813, null}
!826 = metadata !{i32 786688, metadata !725, metadata !"i", metadata !567, i32 220, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!827 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !828} ; [ DW_TAG_arg_variable_field ]
!828 = metadata !{i32 242, i32 19, metadata !725, null}
!829 = metadata !{i32 203, i32 78, metadata !756, metadata !828}
!830 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !828} ; [ DW_TAG_arg_variable_field ]
!831 = metadata !{i32 203, i32 120, metadata !756, metadata !828}
!832 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !833} ; [ DW_TAG_arg_variable_field ]
!833 = metadata !{i32 243, i32 19, metadata !725, null}
!834 = metadata !{i32 203, i32 78, metadata !756, metadata !833}
!835 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !833} ; [ DW_TAG_arg_variable_field ]
!836 = metadata !{i32 203, i32 120, metadata !756, metadata !833}
!837 = metadata !{i32 244, i32 25, metadata !838, null}
!838 = metadata !{i32 786443, metadata !725, i32 244, i32 20, metadata !567, i32 34} ; [ DW_TAG_lexical_block ]
!839 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !840} ; [ DW_TAG_arg_variable_field ]
!840 = metadata !{i32 244, i32 48, metadata !841, null}
!841 = metadata !{i32 786443, metadata !838, i32 244, i32 46, metadata !567, i32 35} ; [ DW_TAG_lexical_block ]
!842 = metadata !{i32 203, i32 78, metadata !756, metadata !840}
!843 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !840} ; [ DW_TAG_arg_variable_field ]
!844 = metadata !{i32 203, i32 120, metadata !756, metadata !840}
!845 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !846} ; [ DW_TAG_arg_variable_field ]
!846 = metadata !{i32 244, i32 97, metadata !841, null}
!847 = metadata !{i32 203, i32 78, metadata !756, metadata !846}
!848 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !846} ; [ DW_TAG_arg_variable_field ]
!849 = metadata !{i32 203, i32 120, metadata !756, metadata !846}
!850 = metadata !{i32 244, i32 38, metadata !838, null}
!851 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !852} ; [ DW_TAG_arg_variable_field ]
!852 = metadata !{i32 247, i32 19, metadata !725, null}
!853 = metadata !{i32 203, i32 78, metadata !756, metadata !852}
!854 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !852} ; [ DW_TAG_arg_variable_field ]
!855 = metadata !{i32 203, i32 120, metadata !756, metadata !852}
!856 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !857} ; [ DW_TAG_arg_variable_field ]
!857 = metadata !{i32 248, i32 19, metadata !725, null}
!858 = metadata !{i32 203, i32 78, metadata !756, metadata !857}
!859 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !857} ; [ DW_TAG_arg_variable_field ]
!860 = metadata !{i32 203, i32 120, metadata !756, metadata !857}
!861 = metadata !{i32 249, i32 25, metadata !862, null}
!862 = metadata !{i32 786443, metadata !725, i32 249, i32 20, metadata !567, i32 36} ; [ DW_TAG_lexical_block ]
!863 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !864} ; [ DW_TAG_arg_variable_field ]
!864 = metadata !{i32 249, i32 48, metadata !865, null}
!865 = metadata !{i32 786443, metadata !862, i32 249, i32 46, metadata !567, i32 37} ; [ DW_TAG_lexical_block ]
!866 = metadata !{i32 203, i32 78, metadata !756, metadata !864}
!867 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !864} ; [ DW_TAG_arg_variable_field ]
!868 = metadata !{i32 203, i32 120, metadata !756, metadata !864}
!869 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !870} ; [ DW_TAG_arg_variable_field ]
!870 = metadata !{i32 249, i32 97, metadata !865, null}
!871 = metadata !{i32 203, i32 78, metadata !756, metadata !870}
!872 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !870} ; [ DW_TAG_arg_variable_field ]
!873 = metadata !{i32 203, i32 120, metadata !756, metadata !870}
!874 = metadata !{i32 249, i32 38, metadata !862, null}
!875 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !876} ; [ DW_TAG_arg_variable_field ]
!876 = metadata !{i32 252, i32 19, metadata !725, null}
!877 = metadata !{i32 203, i32 78, metadata !756, metadata !876}
!878 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !876} ; [ DW_TAG_arg_variable_field ]
!879 = metadata !{i32 203, i32 120, metadata !756, metadata !876}
!880 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !881} ; [ DW_TAG_arg_variable_field ]
!881 = metadata !{i32 253, i32 19, metadata !725, null}
!882 = metadata !{i32 203, i32 78, metadata !756, metadata !881}
!883 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !881} ; [ DW_TAG_arg_variable_field ]
!884 = metadata !{i32 203, i32 120, metadata !756, metadata !881}
!885 = metadata !{i32 254, i32 26, metadata !886, null}
!886 = metadata !{i32 786443, metadata !725, i32 254, i32 21, metadata !567, i32 38} ; [ DW_TAG_lexical_block ]
!887 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !888} ; [ DW_TAG_arg_variable_field ]
!888 = metadata !{i32 254, i32 49, metadata !889, null}
!889 = metadata !{i32 786443, metadata !886, i32 254, i32 47, metadata !567, i32 39} ; [ DW_TAG_lexical_block ]
!890 = metadata !{i32 203, i32 78, metadata !756, metadata !888}
!891 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !888} ; [ DW_TAG_arg_variable_field ]
!892 = metadata !{i32 203, i32 120, metadata !756, metadata !888}
!893 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !894} ; [ DW_TAG_arg_variable_field ]
!894 = metadata !{i32 254, i32 98, metadata !889, null}
!895 = metadata !{i32 203, i32 78, metadata !756, metadata !894}
!896 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !894} ; [ DW_TAG_arg_variable_field ]
!897 = metadata !{i32 203, i32 120, metadata !756, metadata !894}
!898 = metadata !{i32 254, i32 39, metadata !886, null}
!899 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !900} ; [ DW_TAG_arg_variable_field ]
!900 = metadata !{i32 257, i32 20, metadata !725, null}
!901 = metadata !{i32 203, i32 78, metadata !756, metadata !900}
!902 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !900} ; [ DW_TAG_arg_variable_field ]
!903 = metadata !{i32 203, i32 120, metadata !756, metadata !900}
!904 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !905} ; [ DW_TAG_arg_variable_field ]
!905 = metadata !{i32 258, i32 20, metadata !725, null}
!906 = metadata !{i32 203, i32 78, metadata !756, metadata !905}
!907 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !905} ; [ DW_TAG_arg_variable_field ]
!908 = metadata !{i32 203, i32 120, metadata !756, metadata !905}
!909 = metadata !{i32 259, i32 27, metadata !910, null}
!910 = metadata !{i32 786443, metadata !725, i32 259, i32 22, metadata !567, i32 40} ; [ DW_TAG_lexical_block ]
!911 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !912} ; [ DW_TAG_arg_variable_field ]
!912 = metadata !{i32 259, i32 51, metadata !913, null}
!913 = metadata !{i32 786443, metadata !910, i32 259, i32 49, metadata !567, i32 41} ; [ DW_TAG_lexical_block ]
!914 = metadata !{i32 203, i32 78, metadata !756, metadata !912}
!915 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !912} ; [ DW_TAG_arg_variable_field ]
!916 = metadata !{i32 203, i32 120, metadata !756, metadata !912}
!917 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !918} ; [ DW_TAG_arg_variable_field ]
!918 = metadata !{i32 259, i32 100, metadata !913, null}
!919 = metadata !{i32 203, i32 78, metadata !756, metadata !918}
!920 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !918} ; [ DW_TAG_arg_variable_field ]
!921 = metadata !{i32 203, i32 120, metadata !756, metadata !918}
!922 = metadata !{i32 259, i32 41, metadata !910, null}
!923 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !924} ; [ DW_TAG_arg_variable_field ]
!924 = metadata !{i32 262, i32 20, metadata !725, null}
!925 = metadata !{i32 203, i32 78, metadata !756, metadata !924}
!926 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !924} ; [ DW_TAG_arg_variable_field ]
!927 = metadata !{i32 203, i32 120, metadata !756, metadata !924}
!928 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !929} ; [ DW_TAG_arg_variable_field ]
!929 = metadata !{i32 263, i32 20, metadata !725, null}
!930 = metadata !{i32 203, i32 78, metadata !756, metadata !929}
!931 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !929} ; [ DW_TAG_arg_variable_field ]
!932 = metadata !{i32 203, i32 120, metadata !756, metadata !929}
!933 = metadata !{i32 264, i32 26, metadata !934, null}
!934 = metadata !{i32 786443, metadata !725, i32 264, i32 21, metadata !567, i32 42} ; [ DW_TAG_lexical_block ]
!935 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !936} ; [ DW_TAG_arg_variable_field ]
!936 = metadata !{i32 264, i32 49, metadata !937, null}
!937 = metadata !{i32 786443, metadata !934, i32 264, i32 47, metadata !567, i32 43} ; [ DW_TAG_lexical_block ]
!938 = metadata !{i32 203, i32 78, metadata !756, metadata !936}
!939 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !936} ; [ DW_TAG_arg_variable_field ]
!940 = metadata !{i32 203, i32 120, metadata !756, metadata !936}
!941 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !942} ; [ DW_TAG_arg_variable_field ]
!942 = metadata !{i32 264, i32 98, metadata !937, null}
!943 = metadata !{i32 203, i32 78, metadata !756, metadata !942}
!944 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !942} ; [ DW_TAG_arg_variable_field ]
!945 = metadata !{i32 203, i32 120, metadata !756, metadata !942}
!946 = metadata !{i32 264, i32 39, metadata !934, null}
!947 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !948} ; [ DW_TAG_arg_variable_field ]
!948 = metadata !{i32 267, i32 20, metadata !725, null}
!949 = metadata !{i32 203, i32 78, metadata !756, metadata !948}
!950 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !948} ; [ DW_TAG_arg_variable_field ]
!951 = metadata !{i32 203, i32 120, metadata !756, metadata !948}
!952 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !953} ; [ DW_TAG_arg_variable_field ]
!953 = metadata !{i32 268, i32 20, metadata !725, null}
!954 = metadata !{i32 203, i32 78, metadata !756, metadata !953}
!955 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !953} ; [ DW_TAG_arg_variable_field ]
!956 = metadata !{i32 203, i32 120, metadata !756, metadata !953}
!957 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !958} ; [ DW_TAG_arg_variable_field ]
!958 = metadata !{i32 269, i32 20, metadata !725, null}
!959 = metadata !{i32 203, i32 78, metadata !756, metadata !958}
!960 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !958} ; [ DW_TAG_arg_variable_field ]
!961 = metadata !{i32 203, i32 120, metadata !756, metadata !958}
!962 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !963} ; [ DW_TAG_arg_variable_field ]
!963 = metadata !{i32 270, i32 20, metadata !725, null}
!964 = metadata !{i32 203, i32 78, metadata !756, metadata !963}
!965 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !963} ; [ DW_TAG_arg_variable_field ]
!966 = metadata !{i32 203, i32 120, metadata !756, metadata !963}
!967 = metadata !{i32 790531, metadata !755, metadata !"r.v", null, i32 203, metadata !582, i32 0, metadata !968} ; [ DW_TAG_arg_variable_field ]
!968 = metadata !{i32 271, i32 20, metadata !725, null}
!969 = metadata !{i32 203, i32 78, metadata !756, metadata !968}
!970 = metadata !{i32 790531, metadata !760, metadata !"x.v", null, i32 203, metadata !582, i32 0, metadata !968} ; [ DW_TAG_arg_variable_field ]
!971 = metadata !{i32 203, i32 120, metadata !756, metadata !968}
!972 = metadata !{i32 273, i32 1, metadata !725, null}
!973 = metadata !{i32 790531, metadata !974, metadata !"r.v", null, i32 186, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!974 = metadata !{i32 786689, metadata !975, metadata !"r", metadata !567, i32 16777402, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!975 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_mul", metadata !"crypto_sign_ed25519_ref_fe25519_mul", metadata !"", metadata !567, i32 186, metadata !600, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 187} ; [ DW_TAG_subprogram ]
!976 = metadata !{i32 186, i32 75, metadata !975, null}
!977 = metadata !{i32 790531, metadata !978, metadata !"x.v", null, i32 186, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!978 = metadata !{i32 786689, metadata !975, metadata !"x", metadata !567, i32 33554618, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!979 = metadata !{i32 186, i32 117, metadata !975, null}
!980 = metadata !{i32 790531, metadata !981, metadata !"y.v", null, i32 186, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!981 = metadata !{i32 786689, metadata !975, metadata !"y", metadata !567, i32 50331834, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!982 = metadata !{i32 186, i32 159, metadata !975, null}
!983 = metadata !{i32 786688, metadata !984, metadata !"t", metadata !567, i32 189, metadata !985, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!984 = metadata !{i32 786443, metadata !975, i32 187, i32 1, metadata !567, i32 25} ; [ DW_TAG_lexical_block ]
!985 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2016, i64 32, i32 0, i32 0, metadata !578, metadata !986, i32 0, i32 0} ; [ DW_TAG_array_type ]
!986 = metadata !{metadata !987}
!987 = metadata !{i32 786465, i64 0, i64 62}      ; [ DW_TAG_subrange_type ]
!988 = metadata !{i32 189, i32 17, metadata !984, null}
!989 = metadata !{i32 190, i32 7, metadata !990, null}
!990 = metadata !{i32 786443, metadata !984, i32 190, i32 3, metadata !567, i32 26} ; [ DW_TAG_lexical_block ]
!991 = metadata !{i32 190, i32 16, metadata !990, null}
!992 = metadata !{i32 192, i32 7, metadata !993, null}
!993 = metadata !{i32 786443, metadata !984, i32 192, i32 3, metadata !567, i32 27} ; [ DW_TAG_lexical_block ]
!994 = metadata !{i32 190, i32 20, metadata !990, null}
!995 = metadata !{i32 786688, metadata !984, metadata !"i", metadata !567, i32 188, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!996 = metadata !{i32 192, i32 16, metadata !993, null}
!997 = metadata !{i32 196, i32 7, metadata !998, null}
!998 = metadata !{i32 786443, metadata !984, i32 196, i32 3, metadata !567, i32 29} ; [ DW_TAG_lexical_block ]
!999 = metadata !{i32 194, i32 7, metadata !1000, null}
!1000 = metadata !{i32 786443, metadata !993, i32 193, i32 5, metadata !567, i32 28} ; [ DW_TAG_lexical_block ]
!1001 = metadata !{i32 193, i32 9, metadata !1000, null}
!1002 = metadata !{i32 193, i32 18, metadata !1000, null}
!1003 = metadata !{i32 786688, metadata !984, metadata !"j", metadata !567, i32 188, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1004 = metadata !{i32 197, i32 5, metadata !998, null}
!1005 = metadata !{i32 197, i32 28, metadata !998, null}
!1006 = metadata !{i32 786689, metadata !1007, metadata !"a", metadata !567, i32 16777244, metadata !578, i32 0, metadata !1005} ; [ DW_TAG_arg_variable ]
!1007 = metadata !{i32 786478, i32 0, metadata !567, metadata !"times38", metadata !"times38", metadata !"", metadata !567, i32 28, metadata !643, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 29} ; [ DW_TAG_subprogram ]
!1008 = metadata !{i32 28, i32 44, metadata !1007, metadata !1005}
!1009 = metadata !{i32 30, i32 3, metadata !1010, metadata !1005}
!1010 = metadata !{i32 786443, metadata !1007, i32 29, i32 1, metadata !567, i32 65} ; [ DW_TAG_lexical_block ]
!1011 = metadata !{i32 196, i32 17, metadata !998, null}
!1012 = metadata !{i32 198, i32 3, metadata !984, null}
!1013 = metadata !{i32 790531, metadata !1014, metadata !"r.v", null, i32 53, metadata !582, i32 0, metadata !1016} ; [ DW_TAG_arg_variable_field ]
!1014 = metadata !{i32 786689, metadata !1015, metadata !"r", metadata !567, i32 16777269, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1015 = metadata !{i32 786478, i32 0, metadata !567, metadata !"reduce_mul", metadata !"reduce_mul", metadata !"", metadata !567, i32 53, metadata !627, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 54} ; [ DW_TAG_subprogram ]
!1016 = metadata !{i32 200, i32 3, metadata !984, null}
!1017 = metadata !{i32 53, i32 57, metadata !1015, metadata !1016}
!1018 = metadata !{i32 63, i32 5, metadata !1019, metadata !1016}
!1019 = metadata !{i32 786443, metadata !1020, i32 59, i32 3, metadata !567, i32 61} ; [ DW_TAG_lexical_block ]
!1020 = metadata !{i32 786443, metadata !1021, i32 58, i32 3, metadata !567, i32 60} ; [ DW_TAG_lexical_block ]
!1021 = metadata !{i32 786443, metadata !1015, i32 54, i32 1, metadata !567, i32 59} ; [ DW_TAG_lexical_block ]
!1022 = metadata !{i32 58, i32 7, metadata !1020, metadata !1016}
!1023 = metadata !{i32 58, i32 19, metadata !1020, metadata !1016}
!1024 = metadata !{i32 786688, metadata !1021, metadata !"rep", metadata !567, i32 56, metadata !139, i32 0, metadata !1016} ; [ DW_TAG_auto_variable ]
!1025 = metadata !{i32 60, i32 5, metadata !1019, metadata !1016}
!1026 = metadata !{i32 61, i32 5, metadata !1019, metadata !1016}
!1027 = metadata !{i32 25, i32 3, metadata !641, metadata !1028}
!1028 = metadata !{i32 62, i32 9, metadata !1019, metadata !1016}
!1029 = metadata !{i32 786688, metadata !1021, metadata !"t", metadata !567, i32 55, metadata !578, i32 0, metadata !1016} ; [ DW_TAG_auto_variable ]
!1030 = metadata !{i32 64, i32 9, metadata !1031, metadata !1016}
!1031 = metadata !{i32 786443, metadata !1019, i32 64, i32 5, metadata !567, i32 62} ; [ DW_TAG_lexical_block ]
!1032 = metadata !{i32 67, i32 7, metadata !1033, metadata !1016}
!1033 = metadata !{i32 786443, metadata !1031, i32 65, i32 5, metadata !567, i32 63} ; [ DW_TAG_lexical_block ]
!1034 = metadata !{i32 66, i32 7, metadata !1033, metadata !1016}
!1035 = metadata !{i32 68, i32 7, metadata !1033, metadata !1016}
!1036 = metadata !{i32 786688, metadata !1021, metadata !"i", metadata !567, i32 56, metadata !139, i32 0, metadata !1016} ; [ DW_TAG_auto_variable ]
!1037 = metadata !{i32 64, i32 18, metadata !1031, metadata !1016}
!1038 = metadata !{i32 201, i32 1, metadata !984, null}
!1039 = metadata !{i32 26, i32 17, metadata !514, metadata !1040}
!1040 = metadata !{i32 167, i32 3, metadata !1041, null}
!1041 = metadata !{i32 786443, metadata !1042, i32 158, i32 1, metadata !516, i32 19} ; [ DW_TAG_lexical_block ]
!1042 = metadata !{i32 786478, i32 0, metadata !516, metadata !"crypto_sign_ed25519_ref_sc25519_add", metadata !"crypto_sign_ed25519_ref_sc25519_add", metadata !"", metadata !516, i32 157, metadata !1043, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 158} ; [ DW_TAG_subprogram ]
!1043 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1044, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1044 = metadata !{null, metadata !519, metadata !1045, metadata !1045}
!1045 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1046} ; [ DW_TAG_pointer_type ]
!1046 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !520} ; [ DW_TAG_const_type ]
!1047 = metadata !{i32 790531, metadata !1048, metadata !"r.v", null, i32 157, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1048 = metadata !{i32 786689, metadata !1042, metadata !"r", metadata !516, i32 16777373, metadata !519, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1049 = metadata !{i32 157, i32 75, metadata !1042, null}
!1050 = metadata !{i32 790531, metadata !1051, metadata !"x.v", null, i32 157, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1051 = metadata !{i32 786689, metadata !1042, metadata !"x", metadata !516, i32 33554589, metadata !1045, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1052 = metadata !{i32 157, i32 117, metadata !1042, null}
!1053 = metadata !{i32 790531, metadata !1054, metadata !"y.v", null, i32 157, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1054 = metadata !{i32 786689, metadata !1042, metadata !"y", metadata !516, i32 50331805, metadata !1045, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1055 = metadata !{i32 157, i32 159, metadata !1042, null}
!1056 = metadata !{i32 160, i32 7, metadata !1057, null}
!1057 = metadata !{i32 786443, metadata !1041, i32 160, i32 3, metadata !516, i32 20} ; [ DW_TAG_lexical_block ]
!1058 = metadata !{i32 160, i32 16, metadata !1057, null}
!1059 = metadata !{i32 161, i32 7, metadata !1060, null}
!1060 = metadata !{i32 786443, metadata !1041, i32 161, i32 3, metadata !516, i32 21} ; [ DW_TAG_lexical_block ]
!1061 = metadata !{i32 160, i32 21, metadata !1057, null}
!1062 = metadata !{i32 786688, metadata !1041, metadata !"i", metadata !516, i32 159, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1063 = metadata !{i32 164, i32 5, metadata !1064, null}
!1064 = metadata !{i32 786443, metadata !1060, i32 162, i32 3, metadata !516, i32 22} ; [ DW_TAG_lexical_block ]
!1065 = metadata !{i32 786688, metadata !514, metadata !"mask", metadata !516, i32 24, metadata !526, i32 0, metadata !1040} ; [ DW_TAG_auto_variable ]
!1066 = metadata !{i32 35, i32 3, metadata !514, metadata !1040}
!1067 = metadata !{i32 163, i32 5, metadata !1064, null}
!1068 = metadata !{i32 786688, metadata !1041, metadata !"carry", metadata !516, i32 159, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1069 = metadata !{i32 165, i32 5, metadata !1064, null}
!1070 = metadata !{i32 161, i32 16, metadata !1060, null}
!1071 = metadata !{i32 28, i32 7, metadata !539, metadata !1040}
!1072 = metadata !{i32 28, i32 16, metadata !539, metadata !1040}
!1073 = metadata !{i32 36, i32 7, metadata !543, metadata !1040}
!1074 = metadata !{i32 30, i32 5, metadata !545, metadata !1040}
!1075 = metadata !{i32 786688, metadata !514, metadata !"pb", metadata !516, i32 22, metadata !526, i32 0, metadata !1040} ; [ DW_TAG_auto_variable ]
!1076 = metadata !{i32 31, i32 9, metadata !545, metadata !1040}
!1077 = metadata !{i32 786689, metadata !549, metadata !"a", metadata !516, i32 16777227, metadata !526, i32 0, metadata !1076} ; [ DW_TAG_arg_variable ]
!1078 = metadata !{i32 11, i32 39, metadata !549, metadata !1076}
!1079 = metadata !{i32 786689, metadata !549, metadata !"b", metadata !516, i32 33554443, metadata !526, i32 0, metadata !1076} ; [ DW_TAG_arg_variable ]
!1080 = metadata !{i32 11, i32 55, metadata !549, metadata !1076}
!1081 = metadata !{i32 786688, metadata !556, metadata !"x", metadata !516, i32 13, metadata !527, i32 0, metadata !1076} ; [ DW_TAG_auto_variable ]
!1082 = metadata !{i32 13, i32 21, metadata !556, metadata !1076}
!1083 = metadata !{i32 14, i32 3, metadata !556, metadata !1076}
!1084 = metadata !{i32 15, i32 3, metadata !556, metadata !1076}
!1085 = metadata !{i32 32, i32 5, metadata !545, metadata !1040}
!1086 = metadata !{i32 786688, metadata !514, metadata !"i", metadata !516, i32 25, metadata !139, i32 0, metadata !1040} ; [ DW_TAG_auto_variable ]
!1087 = metadata !{i32 36, i32 16, metadata !543, metadata !1040}
!1088 = metadata !{i32 37, i32 5, metadata !543, metadata !1040}
!1089 = metadata !{i32 168, i32 1, metadata !1041, null}
!1090 = metadata !{i32 790531, metadata !1091, metadata !"r.v", null, i32 183, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1091 = metadata !{i32 786689, metadata !1092, metadata !"r", metadata !516, i32 16777399, metadata !519, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1092 = metadata !{i32 786478, i32 0, metadata !516, metadata !"crypto_sign_ed25519_ref_sc25519_mul", metadata !"crypto_sign_ed25519_ref_sc25519_mul", metadata !"", metadata !516, i32 183, metadata !1043, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 184} ; [ DW_TAG_subprogram ]
!1093 = metadata !{i32 183, i32 75, metadata !1092, null}
!1094 = metadata !{i32 790531, metadata !1095, metadata !"x.v", null, i32 183, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1095 = metadata !{i32 786689, metadata !1092, metadata !"x", metadata !516, i32 33554615, metadata !1045, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1096 = metadata !{i32 183, i32 117, metadata !1092, null}
!1097 = metadata !{i32 790531, metadata !1098, metadata !"y.v", null, i32 183, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1098 = metadata !{i32 786689, metadata !1092, metadata !"y", metadata !516, i32 50331831, metadata !1045, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1099 = metadata !{i32 183, i32 159, metadata !1092, null}
!1100 = metadata !{i32 786688, metadata !1101, metadata !"t", metadata !516, i32 186, metadata !1102, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1101 = metadata !{i32 786443, metadata !1092, i32 184, i32 1, metadata !516, i32 26} ; [ DW_TAG_lexical_block ]
!1102 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2048, i64 32, i32 0, i32 0, metadata !526, metadata !231, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1103 = metadata !{i32 186, i32 17, metadata !1101, null}
!1104 = metadata !{i32 187, i32 7, metadata !1105, null}
!1105 = metadata !{i32 786443, metadata !1101, i32 187, i32 3, metadata !516, i32 27} ; [ DW_TAG_lexical_block ]
!1106 = metadata !{i32 187, i32 16, metadata !1105, null}
!1107 = metadata !{i32 189, i32 7, metadata !1108, null}
!1108 = metadata !{i32 786443, metadata !1101, i32 189, i32 3, metadata !516, i32 28} ; [ DW_TAG_lexical_block ]
!1109 = metadata !{i32 187, i32 20, metadata !1105, null}
!1110 = metadata !{i32 786688, metadata !1101, metadata !"i", metadata !516, i32 185, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1111 = metadata !{i32 189, i32 16, metadata !1108, null}
!1112 = metadata !{i32 194, i32 7, metadata !1113, null}
!1113 = metadata !{i32 786443, metadata !1101, i32 194, i32 3, metadata !516, i32 30} ; [ DW_TAG_lexical_block ]
!1114 = metadata !{i32 191, i32 7, metadata !1115, null}
!1115 = metadata !{i32 786443, metadata !1108, i32 190, i32 5, metadata !516, i32 29} ; [ DW_TAG_lexical_block ]
!1116 = metadata !{i32 190, i32 9, metadata !1115, null}
!1117 = metadata !{i32 190, i32 18, metadata !1115, null}
!1118 = metadata !{i32 786688, metadata !1101, metadata !"j", metadata !516, i32 185, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1119 = metadata !{i32 197, i32 5, metadata !1120, null}
!1120 = metadata !{i32 786443, metadata !1113, i32 195, i32 3, metadata !516, i32 31} ; [ DW_TAG_lexical_block ]
!1121 = metadata !{i32 196, i32 5, metadata !1120, null}
!1122 = metadata !{i32 786688, metadata !1101, metadata !"carry", metadata !516, i32 185, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1123 = metadata !{i32 198, i32 5, metadata !1120, null}
!1124 = metadata !{i32 194, i32 16, metadata !1113, null}
!1125 = metadata !{i32 201, i32 3, metadata !1101, null}
!1126 = metadata !{i32 202, i32 1, metadata !1101, null}
!1127 = metadata !{i32 786689, metadata !1128, metadata !"r", null, i32 211, metadata !1133, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1128 = metadata !{i32 786478, i32 0, metadata !516, metadata !"crypto_sign_ed25519_ref_sc25519_window3", metadata !"crypto_sign_ed25519_ref_sc25519_window3", metadata !"", metadata !516, i32 211, metadata !1129, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 212} ; [ DW_TAG_subprogram ]
!1129 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1130, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1130 = metadata !{null, metadata !1131, metadata !1045}
!1131 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1132} ; [ DW_TAG_pointer_type ]
!1132 = metadata !{i32 786468, null, metadata !"signed char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1133 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 680, i64 8, i32 0, i32 0, metadata !1132, metadata !1134, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1134 = metadata !{metadata !1135}
!1135 = metadata !{i32 786465, i64 0, i64 84}     ; [ DW_TAG_subrange_type ]
!1136 = metadata !{i32 211, i32 58, metadata !1128, null}
!1137 = metadata !{i32 790531, metadata !1138, metadata !"s.v", null, i32 211, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1138 = metadata !{i32 786689, metadata !1128, metadata !"s", metadata !516, i32 33554643, metadata !1045, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1139 = metadata !{i32 211, i32 104, metadata !1128, null}
!1140 = metadata !{i32 215, i32 7, metadata !1141, null}
!1141 = metadata !{i32 786443, metadata !1142, i32 215, i32 3, metadata !516, i32 34} ; [ DW_TAG_lexical_block ]
!1142 = metadata !{i32 786443, metadata !1128, i32 212, i32 1, metadata !516, i32 33} ; [ DW_TAG_lexical_block ]
!1143 = metadata !{i32 215, i32 16, metadata !1141, null}
!1144 = metadata !{i32 217, i32 5, metadata !1145, null}
!1145 = metadata !{i32 786443, metadata !1141, i32 216, i32 3, metadata !516, i32 35} ; [ DW_TAG_lexical_block ]
!1146 = metadata !{i32 218, i32 5, metadata !1145, null}
!1147 = metadata !{i32 219, i32 5, metadata !1145, null}
!1148 = metadata !{i32 220, i32 5, metadata !1145, null}
!1149 = metadata !{i32 221, i32 5, metadata !1145, null}
!1150 = metadata !{i32 222, i32 5, metadata !1145, null}
!1151 = metadata !{i32 223, i32 5, metadata !1145, null}
!1152 = metadata !{i32 224, i32 5, metadata !1145, null}
!1153 = metadata !{i32 225, i32 5, metadata !1145, null}
!1154 = metadata !{i32 226, i32 5, metadata !1145, null}
!1155 = metadata !{i32 228, i32 3, metadata !1142, null}
!1156 = metadata !{i32 229, i32 3, metadata !1142, null}
!1157 = metadata !{i32 230, i32 3, metadata !1142, null}
!1158 = metadata !{i32 231, i32 3, metadata !1142, null}
!1159 = metadata !{i32 232, i32 3, metadata !1142, null}
!1160 = metadata !{i32 233, i32 3, metadata !1142, null}
!1161 = metadata !{i32 237, i32 7, metadata !1162, null}
!1162 = metadata !{i32 786443, metadata !1142, i32 237, i32 3, metadata !516, i32 36} ; [ DW_TAG_lexical_block ]
!1163 = metadata !{i32 240, i32 5, metadata !1164, null}
!1164 = metadata !{i32 786443, metadata !1162, i32 238, i32 3, metadata !516, i32 37} ; [ DW_TAG_lexical_block ]
!1165 = metadata !{i32 239, i32 5, metadata !1164, null}
!1166 = metadata !{i32 241, i32 5, metadata !1164, null}
!1167 = metadata !{i32 242, i32 5, metadata !1164, null}
!1168 = metadata !{i32 243, i32 5, metadata !1164, null}
!1169 = metadata !{i32 786688, metadata !1142, metadata !"i", metadata !516, i32 214, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1170 = metadata !{i32 237, i32 16, metadata !1162, null}
!1171 = metadata !{i32 245, i32 3, metadata !1142, null}
!1172 = metadata !{i32 246, i32 1, metadata !1142, null}
!1173 = metadata !{i32 790531, metadata !1174, metadata !"r.x.v", null, i32 297, metadata !1198, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1174 = metadata !{i32 786689, metadata !1175, metadata !"r", metadata !1176, i32 16777513, metadata !1179, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1175 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"crypto_sign_ed25519_ref_scalarmult_base", metadata !"crypto_sign_ed25519_ref_scalarmult_base", metadata !"", metadata !1176, i32 297, metadata !1177, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 298} ; [ DW_TAG_subprogram ]
!1176 = metadata !{i32 786473, metadata !"ed25519_ref/src/ge25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!1177 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1178, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1178 = metadata !{null, metadata !1179, metadata !1192}
!1179 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1180} ; [ DW_TAG_pointer_type ]
!1180 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_ge25519", metadata !1176, i32 21, i64 0, i64 0, i64 0, i32 0, metadata !1181} ; [ DW_TAG_typedef ]
!1181 = metadata !{i32 786451, null, metadata !"", metadata !1182, i32 15, i64 4096, i64 32, i32 0, i32 0, null, metadata !1183, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1182 = metadata !{i32 786473, metadata !"ed25519_ref/src/ge25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!1183 = metadata !{metadata !1184, metadata !1189, metadata !1190, metadata !1191}
!1184 = metadata !{i32 786445, metadata !1181, metadata !"x", metadata !1182, i32 17, i64 1024, i64 32, i64 0, i32 0, metadata !1185} ; [ DW_TAG_member ]
!1185 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !1182, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !1186} ; [ DW_TAG_typedef ]
!1186 = metadata !{i32 786451, null, metadata !"", metadata !574, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1187, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1187 = metadata !{metadata !1188}
!1188 = metadata !{i32 786445, metadata !1186, metadata !"v", metadata !574, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !577} ; [ DW_TAG_member ]
!1189 = metadata !{i32 786445, metadata !1181, metadata !"y", metadata !1182, i32 18, i64 1024, i64 32, i64 1024, i32 0, metadata !1185} ; [ DW_TAG_member ]
!1190 = metadata !{i32 786445, metadata !1181, metadata !"z", metadata !1182, i32 19, i64 1024, i64 32, i64 2048, i32 0, metadata !1185} ; [ DW_TAG_member ]
!1191 = metadata !{i32 786445, metadata !1181, metadata !"t", metadata !1182, i32 20, i64 1024, i64 32, i64 3072, i32 0, metadata !1185} ; [ DW_TAG_member ]
!1192 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1193} ; [ DW_TAG_pointer_type ]
!1193 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1194} ; [ DW_TAG_const_type ]
!1194 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !1176, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !1195} ; [ DW_TAG_typedef ]
!1195 = metadata !{i32 786451, null, metadata !"", metadata !522, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1196, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1196 = metadata !{metadata !1197}
!1197 = metadata !{i32 786445, metadata !1195, metadata !"v", metadata !522, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !577} ; [ DW_TAG_member ]
!1198 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1199} ; [ DW_TAG_pointer_type ]
!1199 = metadata !{i32 786452, null, metadata !"", metadata !1182, i32 15, i64 1024, i64 32, i32 0, i32 0, null, metadata !1200, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1200 = metadata !{metadata !1201}
!1201 = metadata !{i32 786452, null, metadata !"", metadata !574, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1187, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1202 = metadata !{i32 297, i32 79, metadata !1175, null}
!1203 = metadata !{i32 790531, metadata !1174, metadata !"r.y.v", null, i32 297, metadata !1198, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1204 = metadata !{i32 790531, metadata !1174, metadata !"r.z.v", null, i32 297, metadata !1198, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1205 = metadata !{i32 790531, metadata !1174, metadata !"r.t.v", null, i32 297, metadata !1198, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1206 = metadata !{i32 790531, metadata !1207, metadata !"s.v", null, i32 297, metadata !1208, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1207 = metadata !{i32 786689, metadata !1175, metadata !"s", metadata !1176, i32 33554729, metadata !1192, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1208 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1209} ; [ DW_TAG_pointer_type ]
!1209 = metadata !{i32 786452, null, metadata !"", metadata !522, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1196, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1210 = metadata !{i32 297, i32 121, metadata !1175, null}
!1211 = metadata !{i32 790529, metadata !1212, metadata !"t.x.v", null, i32 301, metadata !1219, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1212 = metadata !{i32 786688, metadata !1213, metadata !"t", metadata !1176, i32 301, metadata !1214, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1213 = metadata !{i32 786443, metadata !1175, i32 298, i32 1, metadata !1176, i32 7} ; [ DW_TAG_lexical_block ]
!1214 = metadata !{i32 786454, null, metadata !"ge25519_aff", metadata !1176, i32 42, i64 0, i64 0, i64 0, i32 0, metadata !1215} ; [ DW_TAG_typedef ]
!1215 = metadata !{i32 786451, null, metadata !"", metadata !1176, i32 38, i64 2048, i64 32, i32 0, i32 0, null, metadata !1216, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1216 = metadata !{metadata !1217, metadata !1218}
!1217 = metadata !{i32 786445, metadata !1215, metadata !"x", metadata !1176, i32 40, i64 1024, i64 32, i64 0, i32 0, metadata !1185} ; [ DW_TAG_member ]
!1218 = metadata !{i32 786445, metadata !1215, metadata !"y", metadata !1176, i32 41, i64 1024, i64 32, i64 1024, i32 0, metadata !1185} ; [ DW_TAG_member ]
!1219 = metadata !{i32 786452, null, metadata !"", metadata !1176, i32 38, i64 1024, i64 32, i32 0, i32 0, null, metadata !1200, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1220 = metadata !{i32 301, i32 15, metadata !1213, null}
!1221 = metadata !{i32 790529, metadata !1212, metadata !"t.y.v", null, i32 301, metadata !1219, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1222 = metadata !{i32 302, i32 3, metadata !1213, null}
!1223 = metadata !{i32 790529, metadata !1224, metadata !"r_temp.x.v", null, i32 304, metadata !1219, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1224 = metadata !{i32 786688, metadata !1213, metadata !"r_temp", metadata !1176, i32 304, metadata !1214, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1225 = metadata !{i32 304, i32 15, metadata !1213, null}
!1226 = metadata !{i32 790529, metadata !1224, metadata !"r_temp.y.v", null, i32 304, metadata !1219, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1227 = metadata !{i32 305, i32 3, metadata !1213, null}
!1228 = metadata !{i32 306, i32 3, metadata !1213, null}
!1229 = metadata !{i32 308, i32 3, metadata !1213, null}
!1230 = metadata !{i32 309, i32 3, metadata !1213, null}
!1231 = metadata !{i32 310, i32 3, metadata !1213, null}
!1232 = metadata !{i32 790531, metadata !1233, metadata !"r.v", null, i32 146, metadata !582, i32 0, metadata !1235} ; [ DW_TAG_arg_variable_field ]
!1233 = metadata !{i32 786689, metadata !1234, metadata !"r", metadata !567, i32 16777362, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1234 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_setone", metadata !"crypto_sign_ed25519_ref_fe25519_setone", metadata !"", metadata !567, i32 146, metadata !627, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 147} ; [ DW_TAG_subprogram ]
!1235 = metadata !{i32 314, i32 3, metadata !1213, null}
!1236 = metadata !{i32 146, i32 78, metadata !1234, metadata !1235}
!1237 = metadata !{i32 149, i32 3, metadata !1238, metadata !1235}
!1238 = metadata !{i32 786443, metadata !1234, i32 147, i32 1, metadata !567, i32 14} ; [ DW_TAG_lexical_block ]
!1239 = metadata !{i32 150, i32 7, metadata !1240, metadata !1235}
!1240 = metadata !{i32 786443, metadata !1238, i32 150, i32 3, metadata !567, i32 15} ; [ DW_TAG_lexical_block ]
!1241 = metadata !{i32 150, i32 21, metadata !1240, metadata !1235}
!1242 = metadata !{i32 150, i32 16, metadata !1240, metadata !1235}
!1243 = metadata !{i32 786688, metadata !1238, metadata !"i", metadata !567, i32 148, metadata !139, i32 0, metadata !1235} ; [ DW_TAG_auto_variable ]
!1244 = metadata !{i32 316, i32 7, metadata !1245, null}
!1245 = metadata !{i32 786443, metadata !1213, i32 316, i32 3, metadata !1176, i32 8} ; [ DW_TAG_lexical_block ]
!1246 = metadata !{i32 318, i32 5, metadata !1247, null}
!1247 = metadata !{i32 786443, metadata !1245, i32 317, i32 3, metadata !1176, i32 9} ; [ DW_TAG_lexical_block ]
!1248 = metadata !{i32 790531, metadata !1249, metadata !"r.x.v", null, i32 74, metadata !1198, i32 0, metadata !1255} ; [ DW_TAG_arg_variable_field ]
!1249 = metadata !{i32 786689, metadata !1250, metadata !"r", metadata !1176, i32 16777290, metadata !1179, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1250 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"ge25519_mixadd2", metadata !"ge25519_mixadd2", metadata !"", metadata !1176, i32 74, metadata !1251, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 75} ; [ DW_TAG_subprogram ]
!1251 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1252, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1252 = metadata !{null, metadata !1179, metadata !1253}
!1253 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1254} ; [ DW_TAG_pointer_type ]
!1254 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1214} ; [ DW_TAG_const_type ]
!1255 = metadata !{i32 319, i32 5, metadata !1247, null}
!1256 = metadata !{i32 74, i32 62, metadata !1250, metadata !1255}
!1257 = metadata !{i32 790531, metadata !1249, metadata !"r.y.v", null, i32 74, metadata !1198, i32 0, metadata !1255} ; [ DW_TAG_arg_variable_field ]
!1258 = metadata !{i32 790531, metadata !1249, metadata !"r.z.v", null, i32 74, metadata !1198, i32 0, metadata !1255} ; [ DW_TAG_arg_variable_field ]
!1259 = metadata !{i32 790531, metadata !1249, metadata !"r.t.v", null, i32 74, metadata !1198, i32 0, metadata !1255} ; [ DW_TAG_arg_variable_field ]
!1260 = metadata !{i32 790531, metadata !1261, metadata !"q.x.v", null, i32 74, metadata !1262, i32 0, metadata !1255} ; [ DW_TAG_arg_variable_field ]
!1261 = metadata !{i32 786689, metadata !1250, metadata !"q", metadata !1176, i32 33554506, metadata !1253, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1262 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1219} ; [ DW_TAG_pointer_type ]
!1263 = metadata !{i32 74, i32 84, metadata !1250, metadata !1255}
!1264 = metadata !{i32 790531, metadata !1261, metadata !"q.y.v", null, i32 74, metadata !1262, i32 0, metadata !1255} ; [ DW_TAG_arg_variable_field ]
!1265 = metadata !{i32 790529, metadata !1266, metadata !"a.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1266 = metadata !{i32 786688, metadata !1267, metadata !"a", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1267 = metadata !{i32 786443, metadata !1250, i32 75, i32 1, metadata !1176, i32 10} ; [ DW_TAG_lexical_block ]
!1268 = metadata !{i32 76, i32 35, metadata !1267, metadata !1255}
!1269 = metadata !{i32 790529, metadata !1270, metadata !"b.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1270 = metadata !{i32 786688, metadata !1267, metadata !"b", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1271 = metadata !{i32 76, i32 37, metadata !1267, metadata !1255}
!1272 = metadata !{i32 790529, metadata !1273, metadata !"t1.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1273 = metadata !{i32 786688, metadata !1267, metadata !"t1", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1274 = metadata !{i32 76, i32 39, metadata !1267, metadata !1255}
!1275 = metadata !{i32 790529, metadata !1276, metadata !"t2.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1276 = metadata !{i32 786688, metadata !1267, metadata !"t2", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1277 = metadata !{i32 76, i32 42, metadata !1267, metadata !1255}
!1278 = metadata !{i32 790529, metadata !1279, metadata !"c.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1279 = metadata !{i32 786688, metadata !1267, metadata !"c", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1280 = metadata !{i32 76, i32 45, metadata !1267, metadata !1255}
!1281 = metadata !{i32 790529, metadata !1282, metadata !"d.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1282 = metadata !{i32 786688, metadata !1267, metadata !"d", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1283 = metadata !{i32 76, i32 47, metadata !1267, metadata !1255}
!1284 = metadata !{i32 790529, metadata !1285, metadata !"e.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1285 = metadata !{i32 786688, metadata !1267, metadata !"e", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1286 = metadata !{i32 76, i32 49, metadata !1267, metadata !1255}
!1287 = metadata !{i32 790529, metadata !1288, metadata !"f.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1288 = metadata !{i32 786688, metadata !1267, metadata !"f", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1289 = metadata !{i32 76, i32 51, metadata !1267, metadata !1255}
!1290 = metadata !{i32 790529, metadata !1291, metadata !"g.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1291 = metadata !{i32 786688, metadata !1267, metadata !"g", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1292 = metadata !{i32 76, i32 53, metadata !1267, metadata !1255}
!1293 = metadata !{i32 790529, metadata !1294, metadata !"h.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1294 = metadata !{i32 786688, metadata !1267, metadata !"h", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1295 = metadata !{i32 76, i32 55, metadata !1267, metadata !1255}
!1296 = metadata !{i32 790529, metadata !1297, metadata !"qt.v", null, i32 76, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1297 = metadata !{i32 786688, metadata !1267, metadata !"qt", metadata !1176, i32 76, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1298 = metadata !{i32 76, i32 57, metadata !1267, metadata !1255}
!1299 = metadata !{i32 316, i32 16, metadata !1245, null}
!1300 = metadata !{i32 786688, metadata !1213, metadata !"i", metadata !1176, i32 300, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1301 = metadata !{i32 321, i32 1, metadata !1213, null}
!1302 = metadata !{i32 790531, metadata !1303, metadata !"r.v", null, i32 168, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1303 = metadata !{i32 786689, metadata !1304, metadata !"r", metadata !567, i32 16777384, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1304 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_add", metadata !"crypto_sign_ed25519_ref_fe25519_add", metadata !"", metadata !567, i32 168, metadata !600, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 169} ; [ DW_TAG_subprogram ]
!1305 = metadata !{i32 168, i32 75, metadata !1304, null}
!1306 = metadata !{i32 790531, metadata !1307, metadata !"x.v", null, i32 168, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1307 = metadata !{i32 786689, metadata !1304, metadata !"x", metadata !567, i32 33554600, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1308 = metadata !{i32 168, i32 117, metadata !1304, null}
!1309 = metadata !{i32 790531, metadata !1310, metadata !"y.v", null, i32 168, metadata !582, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1310 = metadata !{i32 786689, metadata !1304, metadata !"y", metadata !567, i32 50331816, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1311 = metadata !{i32 168, i32 159, metadata !1304, null}
!1312 = metadata !{i32 171, i32 7, metadata !1313, null}
!1313 = metadata !{i32 786443, metadata !1314, i32 171, i32 3, metadata !567, i32 21} ; [ DW_TAG_lexical_block ]
!1314 = metadata !{i32 786443, metadata !1304, i32 169, i32 1, metadata !567, i32 20} ; [ DW_TAG_lexical_block ]
!1315 = metadata !{i32 171, i32 16, metadata !1313, null}
!1316 = metadata !{i32 171, i32 21, metadata !1313, null}
!1317 = metadata !{i32 786688, metadata !1314, metadata !"i", metadata !567, i32 170, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1318 = metadata !{i32 790531, metadata !625, metadata !"r.v", null, i32 33, metadata !582, i32 0, metadata !1319} ; [ DW_TAG_arg_variable_field ]
!1319 = metadata !{i32 172, i32 3, metadata !1314, null}
!1320 = metadata !{i32 33, i32 61, metadata !626, metadata !1319}
!1321 = metadata !{i32 40, i32 5, metadata !632, metadata !1319}
!1322 = metadata !{i32 43, i32 5, metadata !632, metadata !1319}
!1323 = metadata !{i32 38, i32 7, metadata !633, metadata !1319}
!1324 = metadata !{i32 38, i32 19, metadata !633, metadata !1319}
!1325 = metadata !{i32 786688, metadata !634, metadata !"rep", metadata !567, i32 36, metadata !139, i32 0, metadata !1319} ; [ DW_TAG_auto_variable ]
!1326 = metadata !{i32 41, i32 5, metadata !632, metadata !1319}
!1327 = metadata !{i32 25, i32 3, metadata !641, metadata !1328}
!1328 = metadata !{i32 42, i32 9, metadata !632, metadata !1319}
!1329 = metadata !{i32 786688, metadata !634, metadata !"t", metadata !567, i32 35, metadata !578, i32 0, metadata !1319} ; [ DW_TAG_auto_variable ]
!1330 = metadata !{i32 44, i32 9, metadata !648, metadata !1319}
!1331 = metadata !{i32 47, i32 7, metadata !650, metadata !1319}
!1332 = metadata !{i32 46, i32 7, metadata !650, metadata !1319}
!1333 = metadata !{i32 48, i32 7, metadata !650, metadata !1319}
!1334 = metadata !{i32 786688, metadata !634, metadata !"i", metadata !567, i32 36, metadata !139, i32 0, metadata !1319} ; [ DW_TAG_auto_variable ]
!1335 = metadata !{i32 44, i32 18, metadata !648, metadata !1319}
!1336 = metadata !{i32 173, i32 1, metadata !1314, null}
!1337 = metadata !{i32 786689, metadata !1338, metadata !"num_blocks", metadata !1339, i32 33554482, metadata !527, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1338 = metadata !{i32 786478, i32 0, metadata !1339, metadata !"crypto_sign", metadata !"crypto_sign", metadata !"", metadata !1339, i32 48, metadata !1340, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 54} ; [ DW_TAG_subprogram ]
!1339 = metadata !{i32 786473, metadata !"ed25519_ref/src/sign.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!1340 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1341, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1341 = metadata !{metadata !139, metadata !314, metadata !527, metadata !314, metadata !314}
!1342 = metadata !{i32 50, i32 16, metadata !1338, null}
!1343 = metadata !{metadata !1344}
!1344 = metadata !{i32 0, i32 7, metadata !1345}
!1345 = metadata !{metadata !1346}
!1346 = metadata !{metadata !"mem", metadata !1347, metadata !"unsigned char", i32 0, i32 7}
!1347 = metadata !{metadata !1348}
!1348 = metadata !{i32 0, i32 32767, i32 1}
!1349 = metadata !{metadata !1350}
!1350 = metadata !{i32 0, i32 31, metadata !1351}
!1351 = metadata !{metadata !1352}
!1352 = metadata !{metadata !"num_blocks", metadata !1353, metadata !"unsigned int", i32 0, i32 31}
!1353 = metadata !{metadata !1354}
!1354 = metadata !{i32 0, i32 0, i32 0}
!1355 = metadata !{metadata !1356}
!1356 = metadata !{i32 0, i32 7, metadata !1357}
!1357 = metadata !{metadata !1358}
!1358 = metadata !{metadata !"sk", metadata !1359, metadata !"unsigned char", i32 0, i32 7}
!1359 = metadata !{metadata !1360}
!1360 = metadata !{i32 0, i32 63, i32 1}
!1361 = metadata !{metadata !1362}
!1362 = metadata !{i32 0, i32 7, metadata !1363}
!1363 = metadata !{metadata !1364}
!1364 = metadata !{metadata !"signature_out", metadata !1359, metadata !"unsigned char", i32 0, i32 7}
!1365 = metadata !{metadata !1366}
!1366 = metadata !{i32 0, i32 31, metadata !1367}
!1367 = metadata !{metadata !1368}
!1368 = metadata !{metadata !"return", metadata !1369, metadata !"int", i32 0, i32 31}
!1369 = metadata !{metadata !1370}
!1370 = metadata !{i32 0, i32 1, i32 0}
!1371 = metadata !{i32 786689, metadata !1372, metadata !"dst", null, i32 13, metadata !536, i32 0, metadata !1375} ; [ DW_TAG_arg_variable ]
!1372 = metadata !{i32 786478, i32 0, metadata !1339, metadata !"_memcpy", metadata !"_memcpy", metadata !"", metadata !1339, i32 13, metadata !1373, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 13} ; [ DW_TAG_subprogram ]
!1373 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1374, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1374 = metadata !{null, metadata !314, metadata !314, metadata !527}
!1375 = metadata !{i32 35, i32 2, metadata !1376, metadata !1378}
!1376 = metadata !{i32 786443, metadata !1377, i32 34, i32 72, metadata !1339, i32 6} ; [ DW_TAG_lexical_block ]
!1377 = metadata !{i32 786478, i32 0, metadata !1339, metadata !"_memmove", metadata !"_memmove", metadata !"", metadata !1339, i32 34, metadata !1373, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 34} ; [ DW_TAG_subprogram ]
!1378 = metadata !{i32 78, i32 3, metadata !1379, null}
!1379 = metadata !{i32 786443, metadata !1338, i32 54, i32 1, metadata !1339, i32 7} ; [ DW_TAG_lexical_block ]
!1380 = metadata !{i32 13, i32 29, metadata !1372, metadata !1375}
!1381 = metadata !{i32 786689, metadata !1377, metadata !"dst", null, i32 34, metadata !536, i32 0, metadata !1378} ; [ DW_TAG_arg_variable ]
!1382 = metadata !{i32 34, i32 30, metadata !1377, metadata !1378}
!1383 = metadata !{i32 786688, metadata !1379, metadata !"temp_buf", metadata !1339, i32 71, metadata !156, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1384 = metadata !{i32 71, i32 17, metadata !1379, null}
!1385 = metadata !{i32 790529, metadata !1386, metadata !"sck.v", null, i32 73, metadata !1391, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1386 = metadata !{i32 786688, metadata !1379, metadata !"sck", metadata !1339, i32 73, metadata !1387, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1387 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !1339, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !1388} ; [ DW_TAG_typedef ]
!1388 = metadata !{i32 786451, null, metadata !"", metadata !522, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1389, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1389 = metadata !{metadata !1390}
!1390 = metadata !{i32 786445, metadata !1388, metadata !"v", metadata !522, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !525} ; [ DW_TAG_member ]
!1391 = metadata !{i32 786452, null, metadata !"", metadata !522, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1389, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1392 = metadata !{i32 73, i32 35, metadata !1379, null}
!1393 = metadata !{i32 790529, metadata !1394, metadata !"scs.v", null, i32 73, metadata !1391, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1394 = metadata !{i32 786688, metadata !1379, metadata !"scs", metadata !1339, i32 73, metadata !1387, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1395 = metadata !{i32 73, i32 40, metadata !1379, null}
!1396 = metadata !{i32 790529, metadata !1397, metadata !"scsk.v", null, i32 73, metadata !1391, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1397 = metadata !{i32 786688, metadata !1379, metadata !"scsk", metadata !1339, i32 73, metadata !1387, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1398 = metadata !{i32 73, i32 45, metadata !1379, null}
!1399 = metadata !{i32 790529, metadata !1400, metadata !"ger.x.v", null, i32 74, metadata !1412, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1400 = metadata !{i32 786688, metadata !1379, metadata !"ger", metadata !1339, i32 74, metadata !1401, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1401 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_ge25519", metadata !1339, i32 21, i64 0, i64 0, i64 0, i32 0, metadata !1402} ; [ DW_TAG_typedef ]
!1402 = metadata !{i32 786451, null, metadata !"", metadata !1182, i32 15, i64 4096, i64 32, i32 0, i32 0, null, metadata !1403, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1403 = metadata !{metadata !1404, metadata !1409, metadata !1410, metadata !1411}
!1404 = metadata !{i32 786445, metadata !1402, metadata !"x", metadata !1182, i32 17, i64 1024, i64 32, i64 0, i32 0, metadata !1405} ; [ DW_TAG_member ]
!1405 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !1182, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !1406} ; [ DW_TAG_typedef ]
!1406 = metadata !{i32 786451, null, metadata !"", metadata !574, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1407, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1407 = metadata !{metadata !1408}
!1408 = metadata !{i32 786445, metadata !1406, metadata !"v", metadata !574, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !525} ; [ DW_TAG_member ]
!1409 = metadata !{i32 786445, metadata !1402, metadata !"y", metadata !1182, i32 18, i64 1024, i64 32, i64 1024, i32 0, metadata !1405} ; [ DW_TAG_member ]
!1410 = metadata !{i32 786445, metadata !1402, metadata !"z", metadata !1182, i32 19, i64 1024, i64 32, i64 2048, i32 0, metadata !1405} ; [ DW_TAG_member ]
!1411 = metadata !{i32 786445, metadata !1402, metadata !"t", metadata !1182, i32 20, i64 1024, i64 32, i64 3072, i32 0, metadata !1405} ; [ DW_TAG_member ]
!1412 = metadata !{i32 786452, null, metadata !"", metadata !1182, i32 15, i64 1024, i64 32, i32 0, i32 0, null, metadata !1413, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1413 = metadata !{metadata !1414}
!1414 = metadata !{i32 786452, null, metadata !"", metadata !574, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1407, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1415 = metadata !{i32 74, i32 35, metadata !1379, null}
!1416 = metadata !{i32 790529, metadata !1400, metadata !"ger.y.v", null, i32 74, metadata !1412, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1417 = metadata !{i32 790529, metadata !1400, metadata !"ger.z.v", null, i32 74, metadata !1412, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1418 = metadata !{i32 790529, metadata !1419, metadata !"hash.state", null, i32 75, metadata !1427, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1419 = metadata !{i32 786688, metadata !1379, metadata !"hash", metadata !1339, i32 75, metadata !1420, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1420 = metadata !{i32 786454, null, metadata !"sha512_context", metadata !1339, i32 15, i64 0, i64 0, i64 0, i32 0, metadata !1421} ; [ DW_TAG_typedef ]
!1421 = metadata !{i32 786451, null, metadata !"sha512_context_", metadata !143, i32 11, i64 1664, i64 64, i32 0, i32 0, null, metadata !1422, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1422 = metadata !{metadata !1423, metadata !1424, metadata !1425, metadata !1426}
!1423 = metadata !{i32 786445, metadata !1421, metadata !"length", metadata !143, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !146} ; [ DW_TAG_member ]
!1424 = metadata !{i32 786445, metadata !1421, metadata !"state", metadata !143, i32 12, i64 512, i64 64, i64 64, i32 0, metadata !149} ; [ DW_TAG_member ]
!1425 = metadata !{i32 786445, metadata !1421, metadata !"curlen", metadata !143, i32 13, i64 64, i64 64, i64 576, i32 0, metadata !153} ; [ DW_TAG_member ]
!1426 = metadata !{i32 786445, metadata !1421, metadata !"buf", metadata !143, i32 14, i64 1024, i64 8, i64 640, i32 0, metadata !156} ; [ DW_TAG_member ]
!1427 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 512, i64 64, i32 0, i32 0, null, metadata !1428, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1428 = metadata !{metadata !1424}
!1429 = metadata !{i32 75, i32 18, metadata !1379, null}
!1430 = metadata !{i32 790529, metadata !1419, metadata !"hash.buf", null, i32 75, metadata !1431, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1431 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 1024, i64 64, i32 0, i32 0, null, metadata !1432, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1432 = metadata !{metadata !1426}
!1433 = metadata !{i32 786689, metadata !1338, metadata !"mem", null, i32 49, metadata !1434, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1434 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 262144, i64 8, i32 0, i32 0, metadata !157, metadata !1435, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1435 = metadata !{metadata !1436}
!1436 = metadata !{i32 786465, i64 0, i64 32767}  ; [ DW_TAG_subrange_type ]
!1437 = metadata !{i32 49, i32 17, metadata !1338, null}
!1438 = metadata !{i32 786689, metadata !1338, metadata !"sk", null, i32 51, metadata !320, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1439 = metadata !{i32 51, i32 17, metadata !1338, null}
!1440 = metadata !{i32 786689, metadata !1338, metadata !"signature_out", null, i32 52, metadata !320, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1441 = metadata !{i32 52, i32 17, metadata !1338, null}
!1442 = metadata !{i32 55, i32 1, metadata !1379, null}
!1443 = metadata !{i32 58, i32 1, metadata !1379, null}
!1444 = metadata !{i32 60, i32 1, metadata !1379, null}
!1445 = metadata !{i32 61, i32 1, metadata !1379, null}
!1446 = metadata !{i32 62, i32 1, metadata !1379, null}
!1447 = metadata !{i32 63, i32 1, metadata !1379, null}
!1448 = metadata !{i32 64, i32 1, metadata !1379, null}
!1449 = metadata !{i32 786688, metadata !1379, metadata !"pk", metadata !1339, i32 65, metadata !536, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1450 = metadata !{i32 65, i32 16, metadata !1379, null}
!1451 = metadata !{i32 786688, metadata !1379, metadata !"az", metadata !1339, i32 66, metadata !320, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1452 = metadata !{i32 66, i32 17, metadata !1379, null}
!1453 = metadata !{i32 786688, metadata !1379, metadata !"signature", metadata !1339, i32 70, metadata !320, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1454 = metadata !{i32 70, i32 17, metadata !1379, null}
!1455 = metadata !{i32 70, i32 36, metadata !1379, null}
!1456 = metadata !{i32 15, i32 6, metadata !1457, metadata !1375}
!1457 = metadata !{i32 786443, metadata !1458, i32 15, i32 2, metadata !1339, i32 1} ; [ DW_TAG_lexical_block ]
!1458 = metadata !{i32 786443, metadata !1372, i32 13, i32 71, metadata !1339, i32 0} ; [ DW_TAG_lexical_block ]
!1459 = metadata !{i32 15, i32 18, metadata !1457, metadata !1375}
!1460 = metadata !{i32 16, i32 3, metadata !1461, metadata !1375}
!1461 = metadata !{i32 786443, metadata !1457, i32 15, i32 22, metadata !1339, i32 2} ; [ DW_TAG_lexical_block ]
!1462 = metadata !{i32 786688, metadata !1458, metadata !"i", metadata !1339, i32 14, metadata !139, i32 0, metadata !1375} ; [ DW_TAG_auto_variable ]
!1463 = metadata !{i32 82, i32 3, metadata !1379, null}
!1464 = metadata !{i32 83, i32 3, metadata !1379, null}
!1465 = metadata !{i32 790529, metadata !1419, metadata !"hash.length", null, i32 75, metadata !1466, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1466 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !1467, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1467 = metadata !{metadata !1423}
!1468 = metadata !{i32 790529, metadata !1419, metadata !"hash.curlen", null, i32 75, metadata !1469, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1469 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !143, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !1470, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1470 = metadata !{metadata !1425}
!1471 = metadata !{i32 84, i32 3, metadata !1379, null}
!1472 = metadata !{i32 86, i32 3, metadata !1379, null}
!1473 = metadata !{i32 87, i32 3, metadata !1379, null}
!1474 = metadata !{i32 88, i32 3, metadata !1379, null}
!1475 = metadata !{i32 15, i32 6, metadata !1457, metadata !1476}
!1476 = metadata !{i32 35, i32 2, metadata !1376, metadata !1477}
!1477 = metadata !{i32 96, i32 3, metadata !1379, null}
!1478 = metadata !{i32 15, i32 18, metadata !1457, metadata !1476}
!1479 = metadata !{i32 16, i32 3, metadata !1461, metadata !1476}
!1480 = metadata !{i32 786688, metadata !1458, metadata !"i", metadata !1339, i32 14, metadata !139, i32 0, metadata !1476} ; [ DW_TAG_auto_variable ]
!1481 = metadata !{i32 100, i32 3, metadata !1379, null}
!1482 = metadata !{i32 102, i32 3, metadata !1379, null}
!1483 = metadata !{i32 104, i32 7, metadata !1484, null}
!1484 = metadata !{i32 786443, metadata !1379, i32 104, i32 3, metadata !1339, i32 8} ; [ DW_TAG_lexical_block ]
!1485 = metadata !{i32 104, i32 26, metadata !1484, null}
!1486 = metadata !{i32 107, i32 5, metadata !1487, null}
!1487 = metadata !{i32 786443, metadata !1488, i32 106, i32 24, metadata !1339, i32 11} ; [ DW_TAG_lexical_block ]
!1488 = metadata !{i32 786443, metadata !1489, i32 106, i32 4, metadata !1339, i32 10} ; [ DW_TAG_lexical_block ]
!1489 = metadata !{i32 786443, metadata !1484, i32 104, i32 30, metadata !1339, i32 9} ; [ DW_TAG_lexical_block ]
!1490 = metadata !{i32 106, i32 8, metadata !1488, null}
!1491 = metadata !{i32 106, i32 20, metadata !1488, null}
!1492 = metadata !{i32 786688, metadata !1379, metadata !"j", metadata !1339, i32 72, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1493 = metadata !{i32 109, i32 4, metadata !1489, null}
!1494 = metadata !{i32 786688, metadata !1379, metadata !"i", metadata !1339, i32 72, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1495 = metadata !{i32 111, i32 3, metadata !1379, null}
!1496 = metadata !{i32 790531, metadata !1497, metadata !"r.v", null, i32 107, metadata !532, i32 0, metadata !1501} ; [ DW_TAG_arg_variable_field ]
!1497 = metadata !{i32 786689, metadata !1498, metadata !"r", metadata !516, i32 16777323, metadata !519, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1498 = metadata !{i32 786478, i32 0, metadata !516, metadata !"crypto_sign_ed25519_ref_sc25519_from64bytes", metadata !"crypto_sign_ed25519_ref_sc25519_from64bytes", metadata !"", metadata !516, i32 107, metadata !1499, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 108} ; [ DW_TAG_subprogram ]
!1499 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1500, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1500 = metadata !{null, metadata !519, metadata !160}
!1501 = metadata !{i32 114, i32 3, metadata !1379, null}
!1502 = metadata !{i32 107, i32 83, metadata !1498, metadata !1501}
!1503 = metadata !{i32 786688, metadata !1504, metadata !"t", metadata !516, i32 110, metadata !1102, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1504 = metadata !{i32 786443, metadata !1498, i32 108, i32 1, metadata !516, i32 5} ; [ DW_TAG_lexical_block ]
!1505 = metadata !{i32 110, i32 17, metadata !1504, metadata !1501}
!1506 = metadata !{i32 111, i32 7, metadata !1507, metadata !1501}
!1507 = metadata !{i32 786443, metadata !1504, i32 111, i32 3, metadata !516, i32 6} ; [ DW_TAG_lexical_block ]
!1508 = metadata !{i32 111, i32 16, metadata !1507, metadata !1501}
!1509 = metadata !{i32 111, i32 21, metadata !1507, metadata !1501}
!1510 = metadata !{i32 786688, metadata !1504, metadata !"i", metadata !516, i32 109, metadata !139, i32 0, metadata !1501} ; [ DW_TAG_auto_variable ]
!1511 = metadata !{i32 112, i32 3, metadata !1504, metadata !1501}
!1512 = metadata !{i32 115, i32 3, metadata !1379, null}
!1513 = metadata !{i32 786689, metadata !1514, metadata !"r", null, i32 234, metadata !320, i32 0, metadata !1519} ; [ DW_TAG_arg_variable ]
!1514 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"crypto_sign_ed25519_ref_pack", metadata !"crypto_sign_ed25519_ref_pack", metadata !"", metadata !1176, i32 234, metadata !1515, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 235} ; [ DW_TAG_subprogram ]
!1515 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1516, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1516 = metadata !{null, metadata !314, metadata !1517}
!1517 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1518} ; [ DW_TAG_pointer_type ]
!1518 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !1180} ; [ DW_TAG_const_type ]
!1519 = metadata !{i32 117, i32 3, metadata !1379, null}
!1520 = metadata !{i32 234, i32 49, metadata !1514, metadata !1519}
!1521 = metadata !{i32 790531, metadata !1522, metadata !"p.x.v", null, i32 234, metadata !1198, i32 0, metadata !1519} ; [ DW_TAG_arg_variable_field ]
!1522 = metadata !{i32 786689, metadata !1514, metadata !"p", metadata !1176, i32 33554666, metadata !1517, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1523 = metadata !{i32 234, i32 95, metadata !1514, metadata !1519}
!1524 = metadata !{i32 790531, metadata !1522, metadata !"p.y.v", null, i32 234, metadata !1198, i32 0, metadata !1519} ; [ DW_TAG_arg_variable_field ]
!1525 = metadata !{i32 790531, metadata !1522, metadata !"p.z.v", null, i32 234, metadata !1198, i32 0, metadata !1519} ; [ DW_TAG_arg_variable_field ]
!1526 = metadata !{i32 790529, metadata !1527, metadata !"tx.v", null, i32 236, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1527 = metadata !{i32 786688, metadata !1528, metadata !"tx", metadata !1176, i32 236, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1528 = metadata !{i32 786443, metadata !1514, i32 235, i32 1, metadata !1176, i32 1} ; [ DW_TAG_lexical_block ]
!1529 = metadata !{i32 236, i32 35, metadata !1528, metadata !1519}
!1530 = metadata !{i32 790529, metadata !1531, metadata !"ty.v", null, i32 236, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1531 = metadata !{i32 786688, metadata !1528, metadata !"ty", metadata !1176, i32 236, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1532 = metadata !{i32 236, i32 39, metadata !1528, metadata !1519}
!1533 = metadata !{i32 790529, metadata !1534, metadata !"zi.v", null, i32 236, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1534 = metadata !{i32 786688, metadata !1528, metadata !"zi", metadata !1176, i32 236, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1535 = metadata !{i32 236, i32 43, metadata !1528, metadata !1519}
!1536 = metadata !{i32 237, i32 3, metadata !1528, metadata !1519}
!1537 = metadata !{i32 240, i32 3, metadata !1528, metadata !1519}
!1538 = metadata !{i32 241, i32 12, metadata !1528, metadata !1519}
!1539 = metadata !{i32 122, i32 3, metadata !1379, null}
!1540 = metadata !{i32 126, i32 3, metadata !1379, null}
!1541 = metadata !{i32 127, i32 3, metadata !1379, null}
!1542 = metadata !{i32 128, i32 3, metadata !1379, null}
!1543 = metadata !{i32 130, i32 7, metadata !1544, null}
!1544 = metadata !{i32 786443, metadata !1379, i32 130, i32 3, metadata !1339, i32 12} ; [ DW_TAG_lexical_block ]
!1545 = metadata !{i32 130, i32 26, metadata !1544, null}
!1546 = metadata !{i32 133, i32 7, metadata !1547, null}
!1547 = metadata !{i32 786443, metadata !1548, i32 132, i32 25, metadata !1339, i32 15} ; [ DW_TAG_lexical_block ]
!1548 = metadata !{i32 786443, metadata !1549, i32 132, i32 5, metadata !1339, i32 14} ; [ DW_TAG_lexical_block ]
!1549 = metadata !{i32 786443, metadata !1544, i32 130, i32 30, metadata !1339, i32 13} ; [ DW_TAG_lexical_block ]
!1550 = metadata !{i32 132, i32 9, metadata !1548, null}
!1551 = metadata !{i32 132, i32 21, metadata !1548, null}
!1552 = metadata !{i32 135, i32 2, metadata !1549, null}
!1553 = metadata !{i32 137, i32 3, metadata !1379, null}
!1554 = metadata !{i32 790531, metadata !1497, metadata !"r.v", null, i32 107, metadata !532, i32 0, metadata !1555} ; [ DW_TAG_arg_variable_field ]
!1555 = metadata !{i32 141, i32 3, metadata !1379, null}
!1556 = metadata !{i32 107, i32 83, metadata !1498, metadata !1555}
!1557 = metadata !{i32 110, i32 17, metadata !1504, metadata !1555}
!1558 = metadata !{i32 111, i32 7, metadata !1507, metadata !1555}
!1559 = metadata !{i32 111, i32 16, metadata !1507, metadata !1555}
!1560 = metadata !{i32 111, i32 21, metadata !1507, metadata !1555}
!1561 = metadata !{i32 786688, metadata !1504, metadata !"i", metadata !516, i32 109, metadata !139, i32 0, metadata !1555} ; [ DW_TAG_auto_variable ]
!1562 = metadata !{i32 112, i32 3, metadata !1504, metadata !1555}
!1563 = metadata !{i32 790531, metadata !1564, metadata !"r.v", null, i32 92, metadata !532, i32 0, metadata !1566} ; [ DW_TAG_arg_variable_field ]
!1564 = metadata !{i32 786689, metadata !1565, metadata !"r", metadata !516, i32 16777308, metadata !519, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1565 = metadata !{i32 786478, i32 0, metadata !516, metadata !"crypto_sign_ed25519_ref_sc25519_from32bytes", metadata !"crypto_sign_ed25519_ref_sc25519_from32bytes", metadata !"", metadata !516, i32 92, metadata !1499, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 93} ; [ DW_TAG_subprogram ]
!1566 = metadata !{i32 142, i32 3, metadata !1379, null}
!1567 = metadata !{i32 92, i32 83, metadata !1565, metadata !1566}
!1568 = metadata !{i32 786689, metadata !1565, metadata !"x", null, i32 92, metadata !230, i32 0, metadata !1566} ; [ DW_TAG_arg_variable ]
!1569 = metadata !{i32 92, i32 106, metadata !1565, metadata !1566}
!1570 = metadata !{i32 786688, metadata !1571, metadata !"t", metadata !516, i32 95, metadata !1102, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1571 = metadata !{i32 786443, metadata !1565, i32 93, i32 1, metadata !516, i32 0} ; [ DW_TAG_lexical_block ]
!1572 = metadata !{i32 95, i32 17, metadata !1571, metadata !1566}
!1573 = metadata !{i32 96, i32 7, metadata !1574, metadata !1566}
!1574 = metadata !{i32 786443, metadata !1571, i32 96, i32 3, metadata !516, i32 1} ; [ DW_TAG_lexical_block ]
!1575 = metadata !{i32 96, i32 16, metadata !1574, metadata !1566}
!1576 = metadata !{i32 97, i32 7, metadata !1577, metadata !1566}
!1577 = metadata !{i32 786443, metadata !1571, i32 97, i32 3, metadata !516, i32 2} ; [ DW_TAG_lexical_block ]
!1578 = metadata !{i32 96, i32 21, metadata !1574, metadata !1566}
!1579 = metadata !{i32 786688, metadata !1571, metadata !"i", metadata !516, i32 94, metadata !139, i32 0, metadata !1566} ; [ DW_TAG_auto_variable ]
!1580 = metadata !{i32 97, i32 22, metadata !1577, metadata !1566}
!1581 = metadata !{i32 97, i32 17, metadata !1577, metadata !1566}
!1582 = metadata !{i32 98, i32 3, metadata !1571, metadata !1566}
!1583 = metadata !{i32 786689, metadata !1584, metadata !"r", null, i32 124, metadata !320, i32 0, metadata !1587} ; [ DW_TAG_arg_variable ]
!1584 = metadata !{i32 786478, i32 0, metadata !516, metadata !"crypto_sign_ed25519_ref_sc25519_to32bytes", metadata !"crypto_sign_ed25519_ref_sc25519_to32bytes", metadata !"", metadata !516, i32 124, metadata !1585, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 125} ; [ DW_TAG_subprogram ]
!1585 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1586, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1586 = metadata !{null, metadata !314, metadata !1045}
!1587 = metadata !{i32 148, i32 3, metadata !1379, null}
!1588 = metadata !{i32 124, i32 62, metadata !1584, metadata !1587}
!1589 = metadata !{i32 790531, metadata !1590, metadata !"x.v", null, i32 124, metadata !532, i32 0, metadata !1587} ; [ DW_TAG_arg_variable_field ]
!1590 = metadata !{i32 786689, metadata !1584, metadata !"x", metadata !516, i32 33554556, metadata !1045, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1591 = metadata !{i32 124, i32 108, metadata !1584, metadata !1587}
!1592 = metadata !{i32 127, i32 7, metadata !1593, metadata !1587}
!1593 = metadata !{i32 786443, metadata !1594, i32 127, i32 3, metadata !516, i32 11} ; [ DW_TAG_lexical_block ]
!1594 = metadata !{i32 786443, metadata !1584, i32 125, i32 1, metadata !516, i32 10} ; [ DW_TAG_lexical_block ]
!1595 = metadata !{i32 127, i32 16, metadata !1593, metadata !1587}
!1596 = metadata !{i32 15, i32 6, metadata !1457, metadata !1597}
!1597 = metadata !{i32 154, i32 3, metadata !1379, null}
!1598 = metadata !{i32 127, i32 21, metadata !1593, metadata !1587}
!1599 = metadata !{i32 786688, metadata !1594, metadata !"i", metadata !516, i32 126, metadata !139, i32 0, metadata !1587} ; [ DW_TAG_auto_variable ]
!1600 = metadata !{i32 15, i32 18, metadata !1457, metadata !1597}
!1601 = metadata !{i32 16, i32 3, metadata !1461, metadata !1597}
!1602 = metadata !{i32 786688, metadata !1458, metadata !"i", metadata !1339, i32 14, metadata !139, i32 0, metadata !1597} ; [ DW_TAG_auto_variable ]
!1603 = metadata !{i32 155, i32 3, metadata !1379, null}
!1604 = metadata !{i32 786689, metadata !1605, metadata !"b", metadata !1176, i32 50331785, metadata !157, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1605 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"cmov_aff", metadata !"cmov_aff", metadata !"", metadata !1176, i32 137, metadata !1606, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 138} ; [ DW_TAG_subprogram ]
!1606 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1607, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1607 = metadata !{null, metadata !1608, metadata !1253, metadata !157}
!1608 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1214} ; [ DW_TAG_pointer_type ]
!1609 = metadata !{i32 137, i32 74, metadata !1605, null}
!1610 = metadata !{i32 786689, metadata !1611, metadata !"b", metadata !567, i32 50331779, metadata !157, i32 0, metadata !1614} ; [ DW_TAG_arg_variable ]
!1611 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_cmov", metadata !"crypto_sign_ed25519_ref_fe25519_cmov", metadata !"", metadata !567, i32 131, metadata !1612, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 132} ; [ DW_TAG_subprogram ]
!1612 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1613, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1613 = metadata !{null, metadata !602, metadata !570, metadata !157}
!1614 = metadata !{i32 139, i32 3, metadata !1615, null}
!1615 = metadata !{i32 786443, metadata !1605, i32 138, i32 1, metadata !1176, i32 14} ; [ DW_TAG_lexical_block ]
!1616 = metadata !{i32 131, i32 135, metadata !1611, metadata !1614}
!1617 = metadata !{i32 790531, metadata !1618, metadata !"r.x.v", null, i32 137, metadata !1262, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1618 = metadata !{i32 786689, metadata !1605, metadata !"r", metadata !1176, i32 16777353, metadata !1608, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1619 = metadata !{i32 137, i32 35, metadata !1605, null}
!1620 = metadata !{i32 790531, metadata !1618, metadata !"r.y.v", null, i32 137, metadata !1262, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1621 = metadata !{i32 790531, metadata !1622, metadata !"p.x.v", null, i32 137, metadata !1623, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1622 = metadata !{i32 786689, metadata !1605, metadata !"p", metadata !1176, i32 33554569, metadata !1253, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1623 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 435200, i64 32, i32 0, i32 0, metadata !1219, metadata !1624, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1624 = metadata !{metadata !1625}
!1625 = metadata !{i32 786465, i64 0, i64 424}    ; [ DW_TAG_subrange_type ]
!1626 = metadata !{i32 137, i32 57, metadata !1605, null}
!1627 = metadata !{i32 790531, metadata !1622, metadata !"p.y.v", null, i32 137, metadata !1623, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1628 = metadata !{i32 790531, metadata !1629, metadata !"r.v", null, i32 131, metadata !582, i32 0, metadata !1614} ; [ DW_TAG_arg_variable_field ]
!1629 = metadata !{i32 786689, metadata !1611, metadata !"r", metadata !567, i32 16777347, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1630 = metadata !{i32 131, i32 76, metadata !1611, metadata !1614}
!1631 = metadata !{i32 790531, metadata !1632, metadata !"x.v", null, i32 131, metadata !1633, i32 0, metadata !1614} ; [ DW_TAG_arg_variable_field ]
!1632 = metadata !{i32 786689, metadata !1611, metadata !"x", metadata !567, i32 33554563, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1633 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 435200, i64 32, i32 0, i32 0, metadata !583, metadata !1624, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1634 = metadata !{i32 131, i32 118, metadata !1611, metadata !1614}
!1635 = metadata !{i32 786688, metadata !1636, metadata !"mask", metadata !567, i32 134, metadata !578, i32 0, metadata !1614} ; [ DW_TAG_auto_variable ]
!1636 = metadata !{i32 786443, metadata !1611, i32 132, i32 1, metadata !567, i32 11} ; [ DW_TAG_lexical_block ]
!1637 = metadata !{i32 134, i32 25, metadata !1636, metadata !1614}
!1638 = metadata !{i32 135, i32 3, metadata !1636, metadata !1614}
!1639 = metadata !{i32 786688, metadata !1636, metadata !"mask", metadata !567, i32 134, metadata !578, i32 0, metadata !1640} ; [ DW_TAG_auto_variable ]
!1640 = metadata !{i32 140, i32 3, metadata !1615, null}
!1641 = metadata !{i32 135, i32 3, metadata !1636, metadata !1640}
!1642 = metadata !{i32 136, i32 7, metadata !1643, metadata !1614}
!1643 = metadata !{i32 786443, metadata !1636, i32 136, i32 3, metadata !567, i32 12} ; [ DW_TAG_lexical_block ]
!1644 = metadata !{i32 136, i32 16, metadata !1643, metadata !1614}
!1645 = metadata !{i32 136, i32 7, metadata !1643, metadata !1640}
!1646 = metadata !{i32 136, i32 21, metadata !1643, metadata !1614}
!1647 = metadata !{i32 786688, metadata !1636, metadata !"i", metadata !567, i32 133, metadata !139, i32 0, metadata !1614} ; [ DW_TAG_auto_variable ]
!1648 = metadata !{i32 136, i32 16, metadata !1643, metadata !1640}
!1649 = metadata !{i32 136, i32 21, metadata !1643, metadata !1640}
!1650 = metadata !{i32 786688, metadata !1636, metadata !"i", metadata !567, i32 133, metadata !139, i32 0, metadata !1640} ; [ DW_TAG_auto_variable ]
!1651 = metadata !{i32 141, i32 1, metadata !1615, null}
!1652 = metadata !{i32 786689, metadata !1653, metadata !"b", metadata !1176, i32 50331809, metadata !1132, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1653 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"choose_t", metadata !"choose_t", metadata !"", metadata !1176, i32 161, metadata !1654, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 162} ; [ DW_TAG_subprogram ]
!1654 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1655, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1655 = metadata !{null, metadata !1608, metadata !147, metadata !1132}
!1656 = metadata !{i32 161, i32 74, metadata !1653, null}
!1657 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1661} ; [ DW_TAG_arg_variable ]
!1658 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"equal", metadata !"equal", metadata !"", metadata !1176, i32 143, metadata !1659, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 144} ; [ DW_TAG_subprogram ]
!1659 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1660, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1660 = metadata !{metadata !157, metadata !1132, metadata !1132}
!1661 = metadata !{i32 166, i32 55, metadata !1662, null}
!1662 = metadata !{i32 786443, metadata !1653, i32 162, i32 1, metadata !1176, i32 11} ; [ DW_TAG_lexical_block ]
!1663 = metadata !{i32 143, i32 40, metadata !1658, metadata !1661}
!1664 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1665} ; [ DW_TAG_arg_variable ]
!1665 = metadata !{i32 166, i32 68, metadata !1662, null}
!1666 = metadata !{i32 143, i32 40, metadata !1658, metadata !1665}
!1667 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1668} ; [ DW_TAG_arg_variable ]
!1668 = metadata !{i32 167, i32 55, metadata !1662, null}
!1669 = metadata !{i32 143, i32 40, metadata !1658, metadata !1668}
!1670 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1671} ; [ DW_TAG_arg_variable ]
!1671 = metadata !{i32 167, i32 68, metadata !1662, null}
!1672 = metadata !{i32 143, i32 40, metadata !1658, metadata !1671}
!1673 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1674} ; [ DW_TAG_arg_variable ]
!1674 = metadata !{i32 168, i32 55, metadata !1662, null}
!1675 = metadata !{i32 143, i32 40, metadata !1658, metadata !1674}
!1676 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1677} ; [ DW_TAG_arg_variable ]
!1677 = metadata !{i32 168, i32 68, metadata !1662, null}
!1678 = metadata !{i32 143, i32 40, metadata !1658, metadata !1677}
!1679 = metadata !{i32 786689, metadata !1658, metadata !"b", metadata !1176, i32 16777359, metadata !1132, i32 0, metadata !1680} ; [ DW_TAG_arg_variable ]
!1680 = metadata !{i32 169, i32 55, metadata !1662, null}
!1681 = metadata !{i32 143, i32 40, metadata !1658, metadata !1680}
!1682 = metadata !{i32 786689, metadata !1683, metadata !"b", metadata !1176, i32 16777370, metadata !1132, i32 0, metadata !1686} ; [ DW_TAG_arg_variable ]
!1683 = metadata !{i32 786478, i32 0, metadata !1176, metadata !"negative", metadata !"negative", metadata !"", metadata !1176, i32 154, metadata !1684, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 155} ; [ DW_TAG_subprogram ]
!1684 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1685, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1685 = metadata !{metadata !157, metadata !1132}
!1686 = metadata !{i32 171, i32 51, metadata !1662, null}
!1687 = metadata !{i32 154, i32 43, metadata !1683, metadata !1686}
!1688 = metadata !{i32 786689, metadata !1653, metadata !"pos", metadata !1176, i32 33554593, metadata !147, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1689 = metadata !{i32 161, i32 57, metadata !1653, null}
!1690 = metadata !{i32 790531, metadata !1691, metadata !"r.v", null, i32 153, metadata !582, i32 0, metadata !1693} ; [ DW_TAG_arg_variable_field ]
!1691 = metadata !{i32 786689, metadata !1692, metadata !"r", metadata !567, i32 16777369, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1692 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_setzero", metadata !"crypto_sign_ed25519_ref_fe25519_setzero", metadata !"", metadata !567, i32 153, metadata !627, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 154} ; [ DW_TAG_subprogram ]
!1693 = metadata !{i32 164, i32 3, metadata !1694, metadata !1696}
!1694 = metadata !{i32 786443, metadata !1695, i32 160, i32 1, metadata !567, i32 18} ; [ DW_TAG_lexical_block ]
!1695 = metadata !{i32 786478, i32 0, metadata !567, metadata !"crypto_sign_ed25519_ref_fe25519_neg", metadata !"crypto_sign_ed25519_ref_fe25519_neg", metadata !"", metadata !567, i32 159, metadata !717, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 160} ; [ DW_TAG_subprogram ]
!1696 = metadata !{i32 170, i32 3, metadata !1662, null}
!1697 = metadata !{i32 153, i32 79, metadata !1692, metadata !1693}
!1698 = metadata !{i32 790531, metadata !1699, metadata !"t.x.v", null, i32 161, metadata !1262, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1699 = metadata !{i32 786689, metadata !1653, metadata !"t", metadata !1176, i32 16777377, metadata !1608, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1700 = metadata !{i32 161, i32 35, metadata !1653, null}
!1701 = metadata !{i32 790531, metadata !1699, metadata !"t.y.v", null, i32 161, metadata !1262, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1702 = metadata !{i32 790529, metadata !1703, metadata !"v.v", null, i32 164, metadata !1201, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1703 = metadata !{i32 786688, metadata !1662, metadata !"v", metadata !1176, i32 164, metadata !1185, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1704 = metadata !{i32 164, i32 35, metadata !1662, null}
!1705 = metadata !{i32 165, i32 3, metadata !1662, null}
!1706 = metadata !{i32 166, i32 3, metadata !1662, null}
!1707 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1661} ; [ DW_TAG_auto_variable ]
!1708 = metadata !{i32 786443, metadata !1658, i32 144, i32 1, metadata !1176, i32 13} ; [ DW_TAG_lexical_block ]
!1709 = metadata !{i32 145, i32 23, metadata !1708, metadata !1661}
!1710 = metadata !{i32 147, i32 28, metadata !1708, metadata !1661}
!1711 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1661} ; [ DW_TAG_auto_variable ]
!1712 = metadata !{i32 148, i32 22, metadata !1708, metadata !1661}
!1713 = metadata !{i32 149, i32 3, metadata !1708, metadata !1661}
!1714 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1661} ; [ DW_TAG_auto_variable ]
!1715 = metadata !{i32 150, i32 3, metadata !1708, metadata !1661}
!1716 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1665} ; [ DW_TAG_auto_variable ]
!1717 = metadata !{i32 145, i32 23, metadata !1708, metadata !1665}
!1718 = metadata !{i32 147, i32 28, metadata !1708, metadata !1665}
!1719 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1665} ; [ DW_TAG_auto_variable ]
!1720 = metadata !{i32 148, i32 22, metadata !1708, metadata !1665}
!1721 = metadata !{i32 149, i32 3, metadata !1708, metadata !1665}
!1722 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1665} ; [ DW_TAG_auto_variable ]
!1723 = metadata !{i32 150, i32 3, metadata !1708, metadata !1665}
!1724 = metadata !{i32 167, i32 3, metadata !1662, null}
!1725 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1668} ; [ DW_TAG_auto_variable ]
!1726 = metadata !{i32 145, i32 23, metadata !1708, metadata !1668}
!1727 = metadata !{i32 147, i32 28, metadata !1708, metadata !1668}
!1728 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1668} ; [ DW_TAG_auto_variable ]
!1729 = metadata !{i32 148, i32 22, metadata !1708, metadata !1668}
!1730 = metadata !{i32 149, i32 3, metadata !1708, metadata !1668}
!1731 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1668} ; [ DW_TAG_auto_variable ]
!1732 = metadata !{i32 150, i32 3, metadata !1708, metadata !1668}
!1733 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1671} ; [ DW_TAG_auto_variable ]
!1734 = metadata !{i32 145, i32 23, metadata !1708, metadata !1671}
!1735 = metadata !{i32 147, i32 28, metadata !1708, metadata !1671}
!1736 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1671} ; [ DW_TAG_auto_variable ]
!1737 = metadata !{i32 148, i32 22, metadata !1708, metadata !1671}
!1738 = metadata !{i32 149, i32 3, metadata !1708, metadata !1671}
!1739 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1671} ; [ DW_TAG_auto_variable ]
!1740 = metadata !{i32 150, i32 3, metadata !1708, metadata !1671}
!1741 = metadata !{i32 168, i32 3, metadata !1662, null}
!1742 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1674} ; [ DW_TAG_auto_variable ]
!1743 = metadata !{i32 145, i32 23, metadata !1708, metadata !1674}
!1744 = metadata !{i32 147, i32 28, metadata !1708, metadata !1674}
!1745 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1674} ; [ DW_TAG_auto_variable ]
!1746 = metadata !{i32 148, i32 22, metadata !1708, metadata !1674}
!1747 = metadata !{i32 149, i32 3, metadata !1708, metadata !1674}
!1748 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1674} ; [ DW_TAG_auto_variable ]
!1749 = metadata !{i32 150, i32 3, metadata !1708, metadata !1674}
!1750 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1677} ; [ DW_TAG_auto_variable ]
!1751 = metadata !{i32 145, i32 23, metadata !1708, metadata !1677}
!1752 = metadata !{i32 147, i32 28, metadata !1708, metadata !1677}
!1753 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1677} ; [ DW_TAG_auto_variable ]
!1754 = metadata !{i32 148, i32 22, metadata !1708, metadata !1677}
!1755 = metadata !{i32 149, i32 3, metadata !1708, metadata !1677}
!1756 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1677} ; [ DW_TAG_auto_variable ]
!1757 = metadata !{i32 150, i32 3, metadata !1708, metadata !1677}
!1758 = metadata !{i32 169, i32 3, metadata !1662, null}
!1759 = metadata !{i32 786688, metadata !1708, metadata !"ub", metadata !1176, i32 145, metadata !157, i32 0, metadata !1680} ; [ DW_TAG_auto_variable ]
!1760 = metadata !{i32 145, i32 23, metadata !1708, metadata !1680}
!1761 = metadata !{i32 147, i32 28, metadata !1708, metadata !1680}
!1762 = metadata !{i32 786688, metadata !1708, metadata !"x", metadata !1176, i32 147, metadata !157, i32 0, metadata !1680} ; [ DW_TAG_auto_variable ]
!1763 = metadata !{i32 148, i32 22, metadata !1708, metadata !1680}
!1764 = metadata !{i32 149, i32 3, metadata !1708, metadata !1680}
!1765 = metadata !{i32 786688, metadata !1708, metadata !"y", metadata !1176, i32 148, metadata !578, i32 0, metadata !1680} ; [ DW_TAG_auto_variable ]
!1766 = metadata !{i32 150, i32 3, metadata !1708, metadata !1680}
!1767 = metadata !{i32 790531, metadata !1768, metadata !"r.v", null, i32 159, metadata !582, i32 0, metadata !1696} ; [ DW_TAG_arg_variable_field ]
!1768 = metadata !{i32 786689, metadata !1695, metadata !"r", metadata !567, i32 16777375, metadata !602, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1769 = metadata !{i32 159, i32 75, metadata !1695, metadata !1696}
!1770 = metadata !{i32 790531, metadata !1771, metadata !"x.v", null, i32 159, metadata !582, i32 0, metadata !1696} ; [ DW_TAG_arg_variable_field ]
!1771 = metadata !{i32 786689, metadata !1695, metadata !"x", metadata !567, i32 33554591, metadata !570, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1772 = metadata !{i32 159, i32 117, metadata !1695, metadata !1696}
!1773 = metadata !{i32 790529, metadata !1774, metadata !"t.v", null, i32 161, metadata !583, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1774 = metadata !{i32 786688, metadata !1694, metadata !"t", metadata !567, i32 161, metadata !572, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1775 = metadata !{i32 161, i32 35, metadata !1694, metadata !1696}
!1776 = metadata !{i32 163, i32 7, metadata !1777, metadata !1696}
!1777 = metadata !{i32 786443, metadata !1694, i32 163, i32 3, metadata !567, i32 19} ; [ DW_TAG_lexical_block ]
!1778 = metadata !{i32 163, i32 16, metadata !1777, metadata !1696}
!1779 = metadata !{i32 156, i32 7, metadata !1780, metadata !1693}
!1780 = metadata !{i32 786443, metadata !1781, i32 156, i32 3, metadata !567, i32 17} ; [ DW_TAG_lexical_block ]
!1781 = metadata !{i32 786443, metadata !1692, i32 154, i32 1, metadata !567, i32 16} ; [ DW_TAG_lexical_block ]
!1782 = metadata !{i32 163, i32 21, metadata !1777, metadata !1696}
!1783 = metadata !{i32 786688, metadata !1694, metadata !"i", metadata !567, i32 162, metadata !139, i32 0, metadata !1696} ; [ DW_TAG_auto_variable ]
!1784 = metadata !{i32 156, i32 16, metadata !1780, metadata !1693}
!1785 = metadata !{i32 156, i32 21, metadata !1780, metadata !1693}
!1786 = metadata !{i32 786688, metadata !1781, metadata !"i", metadata !567, i32 155, metadata !139, i32 0, metadata !1693} ; [ DW_TAG_auto_variable ]
!1787 = metadata !{i32 786688, metadata !1788, metadata !"x", metadata !1176, i32 156, metadata !147, i32 0, metadata !1686} ; [ DW_TAG_auto_variable ]
!1788 = metadata !{i32 786443, metadata !1683, i32 155, i32 1, metadata !1176, i32 12} ; [ DW_TAG_lexical_block ]
!1789 = metadata !{i32 156, i32 27, metadata !1788, metadata !1686}
!1790 = metadata !{i32 157, i32 3, metadata !1788, metadata !1686}
!1791 = metadata !{i32 790531, metadata !1629, metadata !"r.v", null, i32 131, metadata !582, i32 0, metadata !1686} ; [ DW_TAG_arg_variable_field ]
!1792 = metadata !{i32 131, i32 76, metadata !1611, metadata !1686}
!1793 = metadata !{i32 135, i32 3, metadata !1636, metadata !1686}
!1794 = metadata !{i32 786688, metadata !1636, metadata !"mask", metadata !567, i32 134, metadata !578, i32 0, metadata !1686} ; [ DW_TAG_auto_variable ]
!1795 = metadata !{i32 136, i32 7, metadata !1643, metadata !1686}
!1796 = metadata !{i32 136, i32 16, metadata !1643, metadata !1686}
!1797 = metadata !{i32 136, i32 21, metadata !1643, metadata !1686}
!1798 = metadata !{i32 786688, metadata !1636, metadata !"i", metadata !567, i32 133, metadata !139, i32 0, metadata !1686} ; [ DW_TAG_auto_variable ]
!1799 = metadata !{i32 172, i32 1, metadata !1662, null}
!1800 = metadata !{i32 790531, metadata !1801, metadata !"r.v", null, i32 41, metadata !532, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1801 = metadata !{i32 786689, metadata !1802, metadata !"r", metadata !516, i32 16777257, metadata !519, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1802 = metadata !{i32 786478, i32 0, metadata !516, metadata !"barrett_reduce", metadata !"barrett_reduce", metadata !"", metadata !516, i32 41, metadata !1803, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !162, i32 42} ; [ DW_TAG_subprogram ]
!1803 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1804, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1804 = metadata !{null, metadata !519, metadata !1805}
!1805 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1806} ; [ DW_TAG_pointer_type ]
!1806 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !526} ; [ DW_TAG_const_type ]
!1807 = metadata !{i32 41, i32 61, metadata !1802, null}
!1808 = metadata !{i32 786689, metadata !1802, metadata !"x", null, i32 41, metadata !1809, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1809 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 0, i64 0, i32 0, i32 0, metadata !1806, metadata !231, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1810 = metadata !{i32 41, i32 84, metadata !1802, null}
!1811 = metadata !{i32 786688, metadata !1812, metadata !"q2", metadata !516, i32 45, metadata !1813, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1812 = metadata !{i32 786443, metadata !1802, i32 42, i32 1, metadata !516, i32 51} ; [ DW_TAG_lexical_block ]
!1813 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2112, i64 32, i32 0, i32 0, metadata !526, metadata !1814, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1814 = metadata !{metadata !1815}
!1815 = metadata !{i32 786465, i64 0, i64 65}     ; [ DW_TAG_subrange_type ]
!1816 = metadata !{i32 45, i32 17, metadata !1812, null}
!1817 = metadata !{i32 786688, metadata !1812, metadata !"r1", metadata !516, i32 47, metadata !1818, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1818 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1056, i64 32, i32 0, i32 0, metadata !526, metadata !1819, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1819 = metadata !{metadata !1820}
!1820 = metadata !{i32 786465, i64 0, i64 32}     ; [ DW_TAG_subrange_type ]
!1821 = metadata !{i32 47, i32 17, metadata !1812, null}
!1822 = metadata !{i32 786688, metadata !1812, metadata !"r2", metadata !516, i32 48, metadata !1818, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1823 = metadata !{i32 48, i32 17, metadata !1812, null}
!1824 = metadata !{i32 53, i32 8, metadata !1825, null}
!1825 = metadata !{i32 786443, metadata !1812, i32 53, i32 3, metadata !516, i32 52} ; [ DW_TAG_lexical_block ]
!1826 = metadata !{i32 53, i32 21, metadata !1825, null}
!1827 = metadata !{i32 54, i32 8, metadata !1828, null}
!1828 = metadata !{i32 786443, metadata !1812, i32 54, i32 3, metadata !516, i32 53} ; [ DW_TAG_lexical_block ]
!1829 = metadata !{i32 53, i32 26, metadata !1825, null}
!1830 = metadata !{i32 786688, metadata !1812, metadata !"i", metadata !516, i32 44, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1831 = metadata !{i32 54, i32 21, metadata !1828, null}
!1832 = metadata !{i32 56, i32 7, metadata !1833, null}
!1833 = metadata !{i32 786443, metadata !1812, i32 56, i32 3, metadata !516, i32 54} ; [ DW_TAG_lexical_block ]
!1834 = metadata !{i32 54, i32 26, metadata !1828, null}
!1835 = metadata !{i32 56, i32 16, metadata !1833, null}
!1836 = metadata !{i32 58, i32 21, metadata !1837, null}
!1837 = metadata !{i32 786443, metadata !1833, i32 57, i32 5, metadata !516, i32 55} ; [ DW_TAG_lexical_block ]
!1838 = metadata !{i32 57, i32 9, metadata !1837, null}
!1839 = metadata !{i32 57, i32 18, metadata !1837, null}
!1840 = metadata !{i32 58, i32 7, metadata !1837, null}
!1841 = metadata !{i32 786688, metadata !1812, metadata !"j", metadata !516, i32 44, metadata !139, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1842 = metadata !{i32 59, i32 3, metadata !1812, null}
!1843 = metadata !{i32 786688, metadata !1812, metadata !"carry", metadata !516, i32 49, metadata !526, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1844 = metadata !{i32 60, i32 3, metadata !1812, null}
!1845 = metadata !{i32 61, i32 3, metadata !1812, null}
!1846 = metadata !{i32 62, i32 3, metadata !1812, null}
!1847 = metadata !{i32 64, i32 7, metadata !1848, null}
!1848 = metadata !{i32 786443, metadata !1812, i32 64, i32 3, metadata !516, i32 56} ; [ DW_TAG_lexical_block ]
!1849 = metadata !{i32 64, i32 16, metadata !1848, null}
!1850 = metadata !{i32 65, i32 7, metadata !1851, null}
!1851 = metadata !{i32 786443, metadata !1812, i32 65, i32 3, metadata !516, i32 57} ; [ DW_TAG_lexical_block ]
!1852 = metadata !{i32 64, i32 20, metadata !1848, null}
!1853 = metadata !{i32 65, i32 16, metadata !1851, null}
!1854 = metadata !{i32 69, i32 7, metadata !1855, null}
!1855 = metadata !{i32 786443, metadata !1812, i32 69, i32 3, metadata !516, i32 59} ; [ DW_TAG_lexical_block ]
!1856 = metadata !{i32 67, i32 20, metadata !1857, null}
!1857 = metadata !{i32 786443, metadata !1851, i32 66, i32 5, metadata !516, i32 58} ; [ DW_TAG_lexical_block ]
!1858 = metadata !{i32 66, i32 9, metadata !1857, null}
!1859 = metadata !{i32 66, i32 18, metadata !1857, null}
!1860 = metadata !{i32 67, i32 7, metadata !1857, null}
!1861 = metadata !{i32 72, i32 5, metadata !1862, null}
!1862 = metadata !{i32 786443, metadata !1855, i32 70, i32 3, metadata !516, i32 60} ; [ DW_TAG_lexical_block ]
!1863 = metadata !{i32 76, i32 7, metadata !1864, null}
!1864 = metadata !{i32 786443, metadata !1812, i32 76, i32 3, metadata !516, i32 61} ; [ DW_TAG_lexical_block ]
!1865 = metadata !{i32 71, i32 5, metadata !1862, null}
!1866 = metadata !{i32 73, i32 5, metadata !1862, null}
!1867 = metadata !{i32 69, i32 16, metadata !1855, null}
!1868 = metadata !{i32 76, i32 16, metadata !1864, null}
!1869 = metadata !{i32 78, i32 5, metadata !1870, null}
!1870 = metadata !{i32 786443, metadata !1864, i32 77, i32 3, metadata !516, i32 62} ; [ DW_TAG_lexical_block ]
!1871 = metadata !{i32 786688, metadata !1812, metadata !"pb", metadata !516, i32 50, metadata !526, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1872 = metadata !{i32 79, i32 9, metadata !1870, null}
!1873 = metadata !{i32 786689, metadata !549, metadata !"a", metadata !516, i32 16777227, metadata !526, i32 0, metadata !1872} ; [ DW_TAG_arg_variable ]
!1874 = metadata !{i32 11, i32 39, metadata !549, metadata !1872}
!1875 = metadata !{i32 786689, metadata !549, metadata !"b", metadata !516, i32 33554443, metadata !526, i32 0, metadata !1872} ; [ DW_TAG_arg_variable ]
!1876 = metadata !{i32 11, i32 55, metadata !549, metadata !1872}
!1877 = metadata !{i32 786688, metadata !556, metadata !"x", metadata !516, i32 13, metadata !527, i32 0, metadata !1872} ; [ DW_TAG_auto_variable ]
!1878 = metadata !{i32 13, i32 21, metadata !556, metadata !1872}
!1879 = metadata !{i32 14, i32 3, metadata !556, metadata !1872}
!1880 = metadata !{i32 15, i32 3, metadata !556, metadata !1872}
!1881 = metadata !{i32 80, i32 5, metadata !1870, null}
!1882 = metadata !{i32 88, i32 3, metadata !1812, null}
!1883 = metadata !{i32 89, i32 3, metadata !1812, null}
!1884 = metadata !{i32 90, i32 1, metadata !1812, null}
!1885 = metadata !{i32 786689, metadata !1377, metadata !"dst", null, i32 34, metadata !320, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1886 = metadata !{i32 34, i32 30, metadata !1377, null}
!1887 = metadata !{i32 786689, metadata !1377, metadata !"src", null, i32 34, metadata !536, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1888 = metadata !{i32 34, i32 50, metadata !1377, null}
!1889 = metadata !{i32 786689, metadata !1372, metadata !"src", null, i32 13, metadata !536, i32 0, metadata !1890} ; [ DW_TAG_arg_variable ]
!1890 = metadata !{i32 35, i32 2, metadata !1376, null}
!1891 = metadata !{i32 13, i32 49, metadata !1372, metadata !1890}
!1892 = metadata !{i32 15, i32 6, metadata !1457, metadata !1890}
!1893 = metadata !{i32 15, i32 18, metadata !1457, metadata !1890}
!1894 = metadata !{i32 16, i32 3, metadata !1461, metadata !1890}
!1895 = metadata !{i32 786688, metadata !1458, metadata !"i", metadata !1339, i32 14, metadata !139, i32 0, metadata !1890} ; [ DW_TAG_auto_variable ]
!1896 = metadata !{i32 36, i32 1, metadata !1376, null}
