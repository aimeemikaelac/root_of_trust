// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="secure_enclave_key_store,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=420,HLS_SYN_DSP=0,HLS_SYN_FF=16265,HLS_SYN_LUT=47946}" *)

module secure_enclave_key_store (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        device_key_ocm_addr,
        device_key_ocm_addr_ap_vld,
        ocm_V_req_din,
        ocm_V_req_full_n,
        ocm_V_req_write,
        ocm_V_rsp_empty_n,
        ocm_V_rsp_read,
        ocm_V_address,
        ocm_V_datain,
        ocm_V_dataout,
        ocm_V_size,
        iv_V,
        iv_V_ap_vld,
        encrypted_header_old_V_address0,
        encrypted_header_old_V_ce0,
        encrypted_header_old_V_q0,
        tag_header_old_V,
        tag_header_old_V_ap_vld,
        encrypted_header_new_V_address0,
        encrypted_header_new_V_ce0,
        encrypted_header_new_V_q0,
        tag_header_new_V,
        tag_header_new_V_ap_vld,
        user_key_V,
        user_key_valid_i,
        user_key_valid_o,
        writing_done_in,
        derived_key_out_V,
        derived_key_valid,
        master_key_out_V,
        master_key_out_valid,
        iv_out_V,
        iv_out_valid,
        decrypted_new_header_out,
        decrypted_new_header_out_valid,
        reset_key_out
);

parameter    ap_ST_st1_fsm_0 = 54'b1;
parameter    ap_ST_st2_fsm_1 = 54'b10;
parameter    ap_ST_st3_fsm_2 = 54'b100;
parameter    ap_ST_st4_fsm_3 = 54'b1000;
parameter    ap_ST_st5_fsm_4 = 54'b10000;
parameter    ap_ST_st6_fsm_5 = 54'b100000;
parameter    ap_ST_st7_fsm_6 = 54'b1000000;
parameter    ap_ST_st8_fsm_7 = 54'b10000000;
parameter    ap_ST_st9_fsm_8 = 54'b100000000;
parameter    ap_ST_st10_fsm_9 = 54'b1000000000;
parameter    ap_ST_st11_fsm_10 = 54'b10000000000;
parameter    ap_ST_st12_fsm_11 = 54'b100000000000;
parameter    ap_ST_st13_fsm_12 = 54'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 54'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 54'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 54'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 54'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 54'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 54'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 54'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 54'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 54'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 54'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 54'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 54'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 54'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 54'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 54'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 54'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 54'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 54'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 54'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 54'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 54'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 54'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 54'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 54'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 54'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 54'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 54'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 54'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 54'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 54'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 54'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 54'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 54'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 54'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 54'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 54'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 54'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 54'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 54'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 54'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 54'b100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv128_lc_1 = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv128_lc_2 = 128'b100000000000000000000000000000000000000000000000000000000000000010000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv104_0 = 104'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] device_key_ocm_addr;
input   device_key_ocm_addr_ap_vld;
output   ocm_V_req_din;
input   ocm_V_req_full_n;
output   ocm_V_req_write;
input   ocm_V_rsp_empty_n;
output   ocm_V_rsp_read;
output  [31:0] ocm_V_address;
input  [127:0] ocm_V_datain;
output  [127:0] ocm_V_dataout;
output  [31:0] ocm_V_size;
input  [127:0] iv_V;
input   iv_V_ap_vld;
output  [7:0] encrypted_header_old_V_address0;
output   encrypted_header_old_V_ce0;
input  [127:0] encrypted_header_old_V_q0;
input  [127:0] tag_header_old_V;
input   tag_header_old_V_ap_vld;
output  [7:0] encrypted_header_new_V_address0;
output   encrypted_header_new_V_ce0;
input  [127:0] encrypted_header_new_V_q0;
input  [127:0] tag_header_new_V;
input   tag_header_new_V_ap_vld;
input  [127:0] user_key_V;
input   user_key_valid_i;
output   user_key_valid_o;
input   writing_done_in;
output  [127:0] derived_key_out_V;
output   derived_key_valid;
output  [127:0] master_key_out_V;
output   master_key_out_valid;
input  [127:0] iv_out_V;
output   iv_out_valid;
output   decrypted_new_header_out;
output   decrypted_new_header_out_valid;
output   reset_key_out;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ocm_V_req_write;
reg ocm_V_rsp_read;
reg encrypted_header_old_V_ce0;
reg encrypted_header_new_V_ce0;
reg user_key_valid_o;
reg derived_key_valid;
reg[127:0] master_key_out_V;
reg master_key_out_valid;
reg iv_out_valid;
reg decrypted_new_header_out;
reg decrypted_new_header_out_valid;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_69;
reg   [31:0] device_key_ocm_addr_in_sig;
reg   [31:0] device_key_ocm_addr_preg;
reg    device_key_ocm_addr_ap_vld_in_sig;
reg    device_key_ocm_addr_ap_vld_preg;
reg   [127:0] iv_V_in_sig;
reg   [127:0] iv_V_preg;
reg    iv_V_ap_vld_in_sig;
reg    iv_V_ap_vld_preg;
reg   [127:0] tag_header_old_V_in_sig;
reg   [127:0] tag_header_old_V_preg;
reg    tag_header_old_V_ap_vld_in_sig;
reg    tag_header_old_V_ap_vld_preg;
reg   [127:0] tag_header_new_V_in_sig;
reg   [127:0] tag_header_new_V_preg;
reg    tag_header_new_V_ap_vld_in_sig;
reg    tag_header_new_V_ap_vld_preg;
reg    device_key_ocm_addr_blk_n;
reg    iv_V_blk_n;
reg    tag_header_old_V_blk_n;
reg    tag_header_new_V_blk_n;
wire   [127:0] grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return;
reg   [127:0] reg_569;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_162;
wire    grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_173;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_182;
reg    ap_sig_196;
reg   [127:0] master_key_old_storage_V_reg_698;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_212;
wire   [8:0] i_2_fu_603_p2;
reg   [8:0] i_2_reg_709;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_224;
wire   [63:0] tmp_3_fu_609_p1;
reg   [63:0] tmp_3_reg_714;
wire   [0:0] exitcond1_fu_597_p2;
wire   [8:0] i_3_fu_620_p2;
reg   [8:0] i_3_reg_727;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_241;
wire   [63:0] tmp_6_fu_626_p1;
reg   [63:0] tmp_6_reg_732;
wire   [0:0] exitcond_fu_614_p2;
wire   [0:0] grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return;
reg   [0:0] tmp_reg_742;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_257;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done;
wire   [127:0] grp_secure_enclave_key_store_aes_fu_503_ap_return;
reg   [127:0] hash_key_V_reg_754;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_270;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_279;
wire   [127:0] decrypted_header_storage_V_q0;
reg   [127:0] p_Val2_s_reg_770;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_290;
wire   [127:0] decrypted_header_storage_V_q1;
reg   [127:0] lhs_V_reg_775;
wire   [0:0] user_key_valid_read_read_fu_252_p2;
reg   [0:0] user_key_valid_read_reg_780;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_301;
wire   [0:0] tmp_9_fu_651_p2;
reg   [0:0] tmp_9_reg_787;
wire   [0:0] tmp_8_fu_634_p2;
reg   [7:0] encrypted_header_old_storage_V_address0;
reg    encrypted_header_old_storage_V_ce0;
reg    encrypted_header_old_storage_V_we0;
wire   [127:0] encrypted_header_old_storage_V_q0;
reg   [7:0] encrypted_header_new_storage_V_address0;
reg    encrypted_header_new_storage_V_ce0;
reg    encrypted_header_new_storage_V_we0;
wire   [127:0] encrypted_header_new_storage_V_q0;
reg   [7:0] decrypted_header_storage_V_address0;
reg    decrypted_header_storage_V_ce0;
wire   [7:0] decrypted_header_storage_V_address1;
reg    decrypted_header_storage_V_ce1;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready;
wire   [7:0] grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0;
reg   [127:0] grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0;
wire   [7:0] grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0;
wire    grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0;
wire   [127:0] grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0;
reg   [127:0] grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready;
wire   [7:0] grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0;
wire   [7:0] grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0;
wire   [127:0] grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0;
wire    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt;
wire   [127:0] grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return;
wire    grp_secure_enclave_key_store_aes_fu_503_ap_start;
wire    grp_secure_enclave_key_store_aes_fu_503_ap_done;
wire    grp_secure_enclave_key_store_aes_fu_503_ap_idle;
wire    grp_secure_enclave_key_store_aes_fu_503_ap_ready;
reg    grp_secure_enclave_key_store_aes_fu_503_ap_ce;
reg   [127:0] grp_secure_enclave_key_store_aes_fu_503_inptext_V_read;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_401;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_537;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_659;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_669;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_678;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_687;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_695;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_706;
wire    grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start;
wire    grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle;
wire    grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready;
reg   [127:0] grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V;
reg   [127:0] grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V;
reg   [8:0] i_reg_367;
reg   [8:0] i_1_reg_378;
reg   [0:0] decrypted_new_header_reg_389;
reg    ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start;
reg    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start;
reg    ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start;
reg   [53:0] ap_NS_fsm;
reg    ap_sig_nseq_ST_st10_fsm_9;
reg    ap_sig_2768;
reg    ap_sig_nseq_ST_st33_fsm_32;
reg    ap_sig_2776;
reg    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start;
wire   [63:0] tmp_2_fu_586_p1;
reg   [31:0] key_attempts_fu_174;
wire   [31:0] key_attempts_1_fu_660_p2;
reg   [127:0] master_key_out_V_preg;
reg    master_key_out_valid_preg;
reg    iv_out_valid_preg;
reg    decrypted_new_header_out_preg;
reg    decrypted_new_header_out_valid_preg;
reg    derived_key_valid_preg;
wire   [27:0] tmp_1_fu_576_p4;
wire   [23:0] tmp_4_fu_640_p1;
wire   [127:0] out_V_fu_643_p3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'b1;
#0 device_key_ocm_addr_preg = 32'b00000000000000000000000000000000;
#0 device_key_ocm_addr_ap_vld_preg = 1'b0;
#0 iv_V_preg = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 iv_V_ap_vld_preg = 1'b0;
#0 tag_header_old_V_preg = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 tag_header_old_V_ap_vld_preg = 1'b0;
#0 tag_header_new_V_preg = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 tag_header_new_V_ap_vld_preg = 1'b0;
#0 ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = 1'b0;
#0 ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = 1'b0;
#0 ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start = 1'b0;
#0 ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = 1'b0;
#0 master_key_out_V_preg = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 master_key_out_valid_preg = 1'b0;
#0 iv_out_valid_preg = 1'b0;
#0 decrypted_new_header_out_preg = 1'b0;
#0 decrypted_new_header_out_valid_preg = 1'b0;
#0 derived_key_valid_preg = 1'b0;
end

secure_enclave_key_store_encrypted_header_old_storage_V #(
    .DataWidth( 128 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
encrypted_header_old_storage_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(encrypted_header_old_storage_V_address0),
    .ce0(encrypted_header_old_storage_V_ce0),
    .we0(encrypted_header_old_storage_V_we0),
    .d0(encrypted_header_old_V_q0),
    .q0(encrypted_header_old_storage_V_q0)
);

secure_enclave_key_store_encrypted_header_old_storage_V #(
    .DataWidth( 128 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
encrypted_header_new_storage_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(encrypted_header_new_storage_V_address0),
    .ce0(encrypted_header_new_storage_V_ce0),
    .we0(encrypted_header_new_storage_V_we0),
    .d0(encrypted_header_new_V_q0),
    .q0(encrypted_header_new_storage_V_q0)
);

secure_enclave_key_store_decrypted_header_storage_V #(
    .DataWidth( 128 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
decrypted_header_storage_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(decrypted_header_storage_V_address0),
    .ce0(decrypted_header_storage_V_ce0),
    .we0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0),
    .d0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0),
    .q0(decrypted_header_storage_V_q0),
    .address1(decrypted_header_storage_V_address1),
    .ce1(decrypted_header_storage_V_ce1),
    .q1(decrypted_header_storage_V_q1)
);

secure_enclave_key_store_ct_V_assign #(
    .DataWidth( 128 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
ct_V_assign_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0),
    .ce0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0),
    .we0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0),
    .d0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0)
);

secure_enclave_key_store_aes_gcm_d grp_secure_enclave_key_store_aes_gcm_d_fu_403(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start),
    .ap_done(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done),
    .ap_idle(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle),
    .ap_ready(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready),
    .key_V(master_key_old_storage_V_reg_698),
    .iv_V(iv_V_in_sig),
    .ct_V_address0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0),
    .ct_V_ce0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0),
    .ct_V_q0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0),
    .pt_V_address0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0),
    .pt_V_ce0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0),
    .pt_V_we0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0),
    .pt_V_d0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0),
    .tag_in_V(grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V),
    .ap_return(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return)
);

secure_enclave_key_store_aes_gcm_cipher grp_secure_enclave_key_store_aes_gcm_cipher_fu_452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start),
    .ap_done(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done),
    .ap_idle(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle),
    .ap_ready(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready),
    .key_V(master_key_old_storage_V_reg_698),
    .data_in_V_address0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0),
    .data_in_V_ce0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0),
    .data_in_V_q0(decrypted_header_storage_V_q0),
    .data_out_V_address0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0),
    .data_out_V_ce0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0),
    .data_out_V_we0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0),
    .data_out_V_d0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0),
    .counter_V(reg_569),
    .hash_key_V(hash_key_V_reg_754),
    .encrypt(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt),
    .ap_return(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return)
);

secure_enclave_key_store_aes grp_secure_enclave_key_store_aes_fu_503(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_secure_enclave_key_store_aes_fu_503_ap_start),
    .ap_done(grp_secure_enclave_key_store_aes_fu_503_ap_done),
    .ap_idle(grp_secure_enclave_key_store_aes_fu_503_ap_idle),
    .ap_ready(grp_secure_enclave_key_store_aes_fu_503_ap_ready),
    .ap_ce(grp_secure_enclave_key_store_aes_fu_503_ap_ce),
    .inptext_V_read(grp_secure_enclave_key_store_aes_fu_503_inptext_V_read),
    .key_V_read(master_key_old_storage_V_reg_698),
    .ap_return(grp_secure_enclave_key_store_aes_fu_503_ap_return)
);

secure_enclave_key_store_ghash_iteration grp_secure_enclave_key_store_ghash_iteration_fu_550(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start),
    .ap_done(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done),
    .ap_idle(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle),
    .ap_ready(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready),
    .h_V(hash_key_V_reg_754),
    .d_V(grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V),
    .x_prev_V(grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V),
    .ap_return(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_nseq_ST_st10_fsm_9) & ((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) | ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (1'b1 == ap_sig_nseq_ST_st33_fsm_32)))) begin
            ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start <= 1'b1;
        end else if ((1'b1 == grp_secure_enclave_key_store_aes_fu_503_ap_ready)) begin
            ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= 1'b0;
    end else begin
        if ((~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st33_fsm_32))) begin
            ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= 1'b1;
        end else if ((1'b1 == grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready)) begin
            ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond_fu_614_p2)))) begin
            ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= 1'b1;
        end else if ((1'b1 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready)) begin
            ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) | (~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st32_fsm_31)) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29))) begin
            ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= 1'b1;
        end else if ((1'b1 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready)) begin
            ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        decrypted_new_header_out_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
            decrypted_new_header_out_preg <= decrypted_new_header_reg_389;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        decrypted_new_header_out_valid_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
            decrypted_new_header_out_valid_preg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        derived_key_valid_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st54_fsm_53) & ~(1'b0 == user_key_valid_read_reg_780) & ~(1'b0 == tmp_9_reg_787))) begin
            derived_key_valid_preg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        device_key_ocm_addr_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
            device_key_ocm_addr_ap_vld_preg <= 1'b0;
        end else if (((1'b1 == device_key_ocm_addr_ap_vld) & ~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)))) begin
            device_key_ocm_addr_ap_vld_preg <= device_key_ocm_addr_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        device_key_ocm_addr_preg <= ap_const_lv32_0;
    end else begin
        if (((1'b1 == device_key_ocm_addr_ap_vld) & ~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)))) begin
            device_key_ocm_addr_preg <= device_key_ocm_addr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        iv_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
            iv_V_ap_vld_preg <= 1'b0;
        end else if ((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == iv_V_ap_vld))) begin
            iv_V_ap_vld_preg <= iv_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        iv_V_preg <= ap_const_lv128_lc_1;
    end else begin
        if ((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == iv_V_ap_vld))) begin
            iv_V_preg <= iv_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        iv_out_valid_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
            iv_out_valid_preg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        master_key_out_V_preg <= ap_const_lv128_lc_1;
    end else begin
        if ((~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st33_fsm_32))) begin
            master_key_out_V_preg <= master_key_old_storage_V_reg_698;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        master_key_out_valid_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
            master_key_out_valid_preg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tag_header_new_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
            tag_header_new_V_ap_vld_preg <= 1'b0;
        end else if ((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == tag_header_new_V_ap_vld))) begin
            tag_header_new_V_ap_vld_preg <= tag_header_new_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tag_header_new_V_preg <= ap_const_lv128_lc_1;
    end else begin
        if ((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == tag_header_new_V_ap_vld))) begin
            tag_header_new_V_preg <= tag_header_new_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tag_header_old_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
            tag_header_old_V_ap_vld_preg <= 1'b0;
        end else if ((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == tag_header_old_V_ap_vld))) begin
            tag_header_old_V_ap_vld_preg <= tag_header_old_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tag_header_old_V_preg <= ap_const_lv128_lc_1;
    end else begin
        if ((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == tag_header_old_V_ap_vld))) begin
            tag_header_old_V_preg <= tag_header_old_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & (1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return))) begin
        decrypted_new_header_reg_389 <= 1'b0;
    end else if ((~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~((1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & ~(1'b0 == tmp_reg_742)))) begin
        decrypted_new_header_reg_389 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_597_p2 == 1'b0))) begin
        i_1_reg_378 <= ap_const_lv9_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_1_reg_378 <= i_3_reg_727;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_reg_367 <= i_2_reg_709;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ocm_V_rsp_empty_n == 1'b0))) begin
        i_reg_367 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & (1'b0 == tmp_8_fu_634_p2) & (1'b0 == tmp_9_fu_651_p2))) begin
        key_attempts_fu_174 <= key_attempts_1_fu_660_p2;
    end else if ((((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~((1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & ~(1'b0 == tmp_reg_742))) | ((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & (1'b0 == tmp_8_fu_634_p2) & ~(1'b0 == tmp_9_fu_651_p2)))) begin
        key_attempts_fu_174 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        hash_key_V_reg_754 <= grp_secure_enclave_key_store_aes_fu_503_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_2_reg_709 <= i_2_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_3_reg_727 <= i_3_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        lhs_V_reg_775 <= decrypted_header_storage_V_q1;
        p_Val2_s_reg_770 <= decrypted_header_storage_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ocm_V_rsp_empty_n == 1'b0))) begin
        master_key_old_storage_V_reg_698 <= ocm_V_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) | (~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st32_fsm_31)) | (~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st33_fsm_32)))) begin
        reg_569 <= grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_597_p2 == 1'b0))) begin
        tmp_3_reg_714[8 : 0] <= tmp_3_fu_609_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond_fu_614_p2))) begin
        tmp_6_reg_732[8 : 0] <= tmp_6_fu_626_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & (1'b0 == tmp_8_fu_634_p2))) begin
        tmp_9_reg_787 <= tmp_9_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done))) begin
        tmp_reg_742 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        user_key_valid_read_reg_780 <= user_key_valid_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_401) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_69) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_270) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_659) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_695) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_162) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_173) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_182) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_537) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_212) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_224) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_279) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_290) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_301) begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_706) begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_669) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_241) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_678) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_257) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_687) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_2768) begin
        ap_sig_nseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_nseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_2776) begin
        ap_sig_nseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_nseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        decrypted_header_storage_V_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        decrypted_header_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9)))) begin
        decrypted_header_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0;
    end else begin
        decrypted_header_storage_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        decrypted_header_storage_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        decrypted_header_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9)))) begin
        decrypted_header_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0;
    end else begin
        decrypted_header_storage_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        decrypted_header_storage_V_ce1 = 1'b1;
    end else begin
        decrypted_header_storage_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        decrypted_new_header_out = decrypted_new_header_reg_389;
    end else begin
        decrypted_new_header_out = decrypted_new_header_out_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        decrypted_new_header_out_valid = 1'b1;
    end else begin
        decrypted_new_header_out_valid = decrypted_new_header_out_valid_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st54_fsm_53) & ~(1'b0 == user_key_valid_read_reg_780) & ~(1'b0 == tmp_9_reg_787))) begin
        derived_key_valid = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & (1'b0 == tmp_8_fu_634_p2))) begin
        derived_key_valid = 1'b0;
    end else begin
        derived_key_valid = derived_key_valid_preg;
    end
end

always @ (*) begin
    if ((1'b1 == device_key_ocm_addr_ap_vld)) begin
        device_key_ocm_addr_ap_vld_in_sig = device_key_ocm_addr_ap_vld;
    end else begin
        device_key_ocm_addr_ap_vld_in_sig = device_key_ocm_addr_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        device_key_ocm_addr_blk_n = device_key_ocm_addr_ap_vld;
    end else begin
        device_key_ocm_addr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == device_key_ocm_addr_ap_vld)) begin
        device_key_ocm_addr_in_sig = device_key_ocm_addr;
    end else begin
        device_key_ocm_addr_in_sig = device_key_ocm_addr_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        encrypted_header_new_V_ce0 = 1'b1;
    end else begin
        encrypted_header_new_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        encrypted_header_new_storage_V_address0 = tmp_6_reg_732;
    end else if ((~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        encrypted_header_new_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0;
    end else begin
        encrypted_header_new_storage_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        encrypted_header_new_storage_V_ce0 = 1'b1;
    end else if ((~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        encrypted_header_new_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0;
    end else begin
        encrypted_header_new_storage_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        encrypted_header_new_storage_V_we0 = 1'b1;
    end else begin
        encrypted_header_new_storage_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        encrypted_header_old_V_ce0 = 1'b1;
    end else begin
        encrypted_header_old_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        encrypted_header_old_storage_V_address0 = tmp_3_reg_714;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        encrypted_header_old_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0;
    end else begin
        encrypted_header_old_storage_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        encrypted_header_old_storage_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        encrypted_header_old_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0;
    end else begin
        encrypted_header_old_storage_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        encrypted_header_old_storage_V_we0 = 1'b1;
    end else begin
        encrypted_header_old_storage_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st53_fsm_52) | ((1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & ~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9)) | ((1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st33_fsm_32)) | ((1'b0 == grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done) & (1'b1 == ap_sig_cseq_ST_st34_fsm_33)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st54_fsm_53))) begin
        grp_secure_enclave_key_store_aes_fu_503_ap_ce = 1'b0;
    end else begin
        grp_secure_enclave_key_store_aes_fu_503_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_secure_enclave_key_store_aes_fu_503_inptext_V_read = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_secure_enclave_key_store_aes_fu_503_inptext_V_read = ap_const_lv128_lc_1;
    end else begin
        grp_secure_enclave_key_store_aes_fu_503_inptext_V_read = 'bx;
    end
end

always @ (*) begin
    if ((~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 = encrypted_header_new_storage_V_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 = encrypted_header_old_storage_V_q0;
    end else begin
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((~(1'b0 == tmp_reg_742) & (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V = tag_header_new_V_in_sig;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V = tag_header_old_V_in_sig;
    end else begin
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V = ap_const_lv128_lc_2;
    end else if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V = ap_const_lv128_lc_1;
    end else begin
        grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V = reg_569;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V = ap_const_lv128_lc_1;
    end else begin
        grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == iv_V_ap_vld)) begin
        iv_V_ap_vld_in_sig = iv_V_ap_vld;
    end else begin
        iv_V_ap_vld_in_sig = iv_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        iv_V_blk_n = iv_V_ap_vld;
    end else begin
        iv_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == iv_V_ap_vld)) begin
        iv_V_in_sig = iv_V;
    end else begin
        iv_V_in_sig = iv_V_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        iv_out_valid = 1'b1;
    end else begin
        iv_out_valid = iv_out_valid_preg;
    end
end

always @ (*) begin
    if ((~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) & (1'b1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        master_key_out_V = master_key_old_storage_V_reg_698;
    end else begin
        master_key_out_V = master_key_out_V_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        master_key_out_valid = 1'b1;
    end else begin
        master_key_out_valid = master_key_out_valid_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_196)) begin
        ocm_V_req_write = 1'b1;
    end else begin
        ocm_V_req_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ocm_V_rsp_empty_n == 1'b0))) begin
        ocm_V_rsp_read = 1'b1;
    end else begin
        ocm_V_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == tag_header_new_V_ap_vld)) begin
        tag_header_new_V_ap_vld_in_sig = tag_header_new_V_ap_vld;
    end else begin
        tag_header_new_V_ap_vld_in_sig = tag_header_new_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        tag_header_new_V_blk_n = tag_header_new_V_ap_vld;
    end else begin
        tag_header_new_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == tag_header_new_V_ap_vld)) begin
        tag_header_new_V_in_sig = tag_header_new_V;
    end else begin
        tag_header_new_V_in_sig = tag_header_new_V_preg;
    end
end

always @ (*) begin
    if ((1'b1 == tag_header_old_V_ap_vld)) begin
        tag_header_old_V_ap_vld_in_sig = tag_header_old_V_ap_vld;
    end else begin
        tag_header_old_V_ap_vld_in_sig = tag_header_old_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        tag_header_old_V_blk_n = tag_header_old_V_ap_vld;
    end else begin
        tag_header_old_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == tag_header_old_V_ap_vld)) begin
        tag_header_old_V_in_sig = tag_header_old_V;
    end else begin
        tag_header_old_V_in_sig = tag_header_old_V_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(1'b0 == user_key_valid_read_read_fu_252_p2) & (1'b0 == tmp_8_fu_634_p2))) begin
        user_key_valid_o = 1'b0;
    end else begin
        user_key_valid_o = user_key_valid_i;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_196) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            if (~(ocm_V_rsp_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(exitcond1_fu_597_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == exitcond_fu_614_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st8_fsm_7 : begin
            if ((~(1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & (1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return))) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else if ((~(1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & ~(1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return))) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            if (~((1'b0 == grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) & ~(1'b0 == tmp_reg_742))) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            if (~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end
        end
        ap_ST_st32_fsm_31 : begin
            if (~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        end
        ap_ST_st33_fsm_32 : begin
            if (~(1'b0 == grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st34_fsm_33 : begin
            if (~(1'b0 == grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done)) begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            if ((~(1'b0 == user_key_valid_read_read_fu_252_p2) & ~(1'b0 == tmp_8_fu_634_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st54_fsm_53;
            end
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_162 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_173 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_182 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_196 = ((ap_start == 1'b0) | (tag_header_new_V_ap_vld_in_sig == 1'b0) | (tag_header_old_V_ap_vld_in_sig == 1'b0) | (iv_V_ap_vld_in_sig == 1'b0) | (device_key_ocm_addr_ap_vld_in_sig == 1'b0));
end

always @ (*) begin
    ap_sig_212 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_224 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_241 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_257 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_270 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_2768 = (1'b1 == ap_NS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_2776 = (1'b1 == ap_NS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_279 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_290 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_301 = (1'b1 == ap_CS_fsm[ap_const_lv32_34]);
end

always @ (*) begin
    ap_sig_401 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_537 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_659 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_669 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_678 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_687 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_69 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_695 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_706 = (1'b1 == ap_CS_fsm[ap_const_lv32_35]);
end

assign decrypted_header_storage_V_address1 = ap_const_lv64_1;

assign derived_key_out_V = (lhs_V_reg_775 ^ user_key_V);

assign encrypted_header_new_V_address0 = tmp_6_fu_626_p1;

assign encrypted_header_old_V_address0 = tmp_3_fu_609_p1;

assign exitcond1_fu_597_p2 = ((i_reg_367 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_614_p2 = ((i_1_reg_378 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign grp_secure_enclave_key_store_aes_fu_503_ap_start = ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start;

assign grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start;

assign grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt = 1'b1;

assign grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start;

assign grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start;

assign i_2_fu_603_p2 = (i_reg_367 + ap_const_lv9_1);

assign i_3_fu_620_p2 = (i_1_reg_378 + ap_const_lv9_1);

assign key_attempts_1_fu_660_p2 = (key_attempts_fu_174 + ap_const_lv32_1);

assign ocm_V_address = tmp_2_fu_586_p1;

assign ocm_V_dataout = ap_const_lv128_lc_1;

assign ocm_V_req_din = 1'b0;

assign ocm_V_size = ap_const_lv32_1;

assign out_V_fu_643_p3 = {{ap_const_lv104_0}, {tmp_4_fu_640_p1}};

assign reset_key_out = 1'b1;

assign tmp_1_fu_576_p4 = {{device_key_ocm_addr_in_sig[ap_const_lv32_1F : ap_const_lv32_4]}};

assign tmp_2_fu_586_p1 = tmp_1_fu_576_p4;

assign tmp_3_fu_609_p1 = i_reg_367;

assign tmp_4_fu_640_p1 = p_Val2_s_reg_770[23:0];

assign tmp_6_fu_626_p1 = i_1_reg_378;

assign tmp_8_fu_634_p2 = (($signed(key_attempts_fu_174) > $signed(32'b10)) ? 1'b1 : 1'b0);

assign tmp_9_fu_651_p2 = ((out_V_fu_643_p3 == user_key_V) ? 1'b1 : 1'b0);

assign user_key_valid_read_read_fu_252_p2 = user_key_valid_i;

always @ (posedge ap_clk) begin
    tmp_3_reg_714[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_6_reg_732[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //secure_enclave_key_store
