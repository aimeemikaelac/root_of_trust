// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module secure_enclave_key_store_aes_gcm_cipher (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        key_V,
        data_in_V_address0,
        data_in_V_ce0,
        data_in_V_q0,
        data_out_V_address0,
        data_out_V_ce0,
        data_out_V_we0,
        data_out_V_d0,
        counter_V,
        hash_key_V,
        encrypt,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 25'b1;
parameter    ap_ST_st2_fsm_1 = 25'b10;
parameter    ap_ST_st3_fsm_2 = 25'b100;
parameter    ap_ST_st4_fsm_3 = 25'b1000;
parameter    ap_ST_st5_fsm_4 = 25'b10000;
parameter    ap_ST_st6_fsm_5 = 25'b100000;
parameter    ap_ST_st7_fsm_6 = 25'b1000000;
parameter    ap_ST_st8_fsm_7 = 25'b10000000;
parameter    ap_ST_st9_fsm_8 = 25'b100000000;
parameter    ap_ST_st10_fsm_9 = 25'b1000000000;
parameter    ap_ST_st11_fsm_10 = 25'b10000000000;
parameter    ap_ST_st12_fsm_11 = 25'b100000000000;
parameter    ap_ST_st13_fsm_12 = 25'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 25'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 25'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 25'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 25'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 25'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 25'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 25'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 25'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 25'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 25'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 25'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 25'b1000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv128_lc_1 = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv13_1000 = 13'b1000000000000;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv6_21 = 6'b100001;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_7F = 32'b1111111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] key_V;
output  [7:0] data_in_V_address0;
output   data_in_V_ce0;
input  [127:0] data_in_V_q0;
output  [7:0] data_out_V_address0;
output   data_out_V_ce0;
output   data_out_V_we0;
output  [127:0] data_out_V_d0;
input  [127:0] counter_V;
input  [127:0] hash_key_V;
input   encrypt;
output  [127:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_in_V_ce0;
reg data_out_V_ce0;
reg data_out_V_we0;
reg[127:0] ap_return;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_42;
wire   [0:0] encrypt_read_read_fu_90_p2;
wire   [12:0] encrypt_iterations_1_fu_317_p2;
reg   [12:0] encrypt_iterations_1_reg_505;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_83;
wire   [0:0] tmp_6_fu_323_p1;
reg   [0:0] tmp_6_reg_511;
wire   [0:0] exitcond_fu_311_p2;
wire   [127:0] agg_result_V_i_fu_336_p1;
reg   [127:0] agg_result_V_i_reg_516;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_98;
wire   [127:0] grp_secure_enclave_key_store_aes_fu_265_ap_return;
reg   [127:0] encrypted_counter_out_V_reg_523;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_107;
wire   [63:0] tmp_fu_341_p1;
reg   [63:0] tmp_reg_528;
wire   [127:0] r_V_fu_352_p2;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_120;
wire   [127:0] r_V_16_fu_358_p2;
wire   [7:0] i_4_fu_374_p2;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_135;
wire   [127:0] agg_result_V_0_r_V_i_i1_fu_393_p3;
wire   [0:0] exitcond_i_i7_fu_368_p2;
wire   [127:0] lhs_V_r_V_i_i1_fu_401_p3;
wire   [127:0] r_V_13_fu_419_p1;
wire   [7:0] i_fu_433_p2;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_153;
wire   [127:0] agg_result_V_0_r_V_i_i_fu_452_p3;
wire   [0:0] exitcond_i_i_fu_427_p2;
wire   [127:0] lhs_V_r_V_i_i_fu_460_p3;
wire   [127:0] r_V_11_fu_478_p1;
wire    grp_secure_enclave_key_store_aes_fu_265_ap_start;
wire    grp_secure_enclave_key_store_aes_fu_265_ap_done;
wire    grp_secure_enclave_key_store_aes_fu_265_ap_idle;
wire    grp_secure_enclave_key_store_aes_fu_265_ap_ready;
wire   [127:0] grp_secure_enclave_key_store_aes_fu_265_inptext_V_read;
reg   [127:0] p_Val2_s_reg_138;
reg   [127:0] lhs_V_3_reg_149;
reg   [12:0] encrypt_iterations_reg_163;
reg   [127:0] agg_result_V_i_i3_reg_177;
reg   [127:0] lhs_V_5_reg_190;
reg   [127:0] rhs_V_4_reg_201;
reg   [7:0] i_assign_1_reg_210;
reg   [127:0] agg_result_V_i_i_reg_221;
reg   [127:0] lhs_V_4_reg_234;
reg   [127:0] rhs_V_3_reg_245;
reg   [7:0] i_assign_reg_254;
reg    ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start;
reg   [24:0] ap_NS_fsm;
reg    ap_sig_nseq_ST_st3_fsm_2;
reg    ap_sig_210;
wire   [127:0] r_V_15_fu_346_p2;
wire   [5:0] tmp_i_cast_fu_327_p1;
wire   [5:0] r_V_14_fu_330_p2;
wire   [31:0] i_assign_1_cast1_fu_364_p1;
wire   [0:0] tmp_8_fu_380_p3;
wire   [127:0] z_V_1_fu_387_p2;
wire   [126:0] r_V_8_fu_409_p4;
wire   [31:0] i_assign_cast2_fu_423_p1;
wire   [0:0] tmp_7_fu_439_p3;
wire   [127:0] z_V_fu_446_p2;
wire   [126:0] r_V_6_fu_468_p4;
reg   [127:0] ap_return_preg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'b1;
#0 ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start = 1'b0;
#0 ap_return_preg = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

secure_enclave_key_store_aes grp_secure_enclave_key_store_aes_fu_265(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_secure_enclave_key_store_aes_fu_265_ap_start),
    .ap_done(grp_secure_enclave_key_store_aes_fu_265_ap_done),
    .ap_idle(grp_secure_enclave_key_store_aes_fu_265_ap_idle),
    .ap_ready(grp_secure_enclave_key_store_aes_fu_265_ap_ready),
    .ap_ce(1'b1),
    .inptext_V_read(grp_secure_enclave_key_store_aes_fu_265_inptext_V_read),
    .key_V_read(key_V),
    .ap_return(grp_secure_enclave_key_store_aes_fu_265_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b1 == ap_sig_nseq_ST_st3_fsm_2))) begin
            ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start <= 1'b1;
        end else if ((1'b1 == grp_secure_enclave_key_store_aes_fu_265_ap_ready)) begin
            ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv128_lc_1;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_311_p2 == 1'b0))) begin
            ap_return_preg <= lhs_V_3_reg_149;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond_i_i7_fu_368_p2))) begin
        agg_result_V_i_i3_reg_177 <= agg_result_V_0_r_V_i_i1_fu_393_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (encrypt_read_read_fu_90_p2 == 1'b0))) begin
        agg_result_V_i_i3_reg_177 <= ap_const_lv128_lc_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_i_i_fu_427_p2))) begin
        agg_result_V_i_i_reg_221 <= agg_result_V_0_r_V_i_i_fu_452_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(encrypt_read_read_fu_90_p2 == 1'b0))) begin
        agg_result_V_i_i_reg_221 <= ap_const_lv128_lc_1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~(1'b0 == exitcond_i_i7_fu_368_p2)) | ((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond_i_i_fu_427_p2)))) begin
        encrypt_iterations_reg_163 <= encrypt_iterations_1_reg_505;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        encrypt_iterations_reg_163 <= ap_const_lv13_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond_i_i7_fu_368_p2))) begin
        i_assign_1_reg_210 <= i_4_fu_374_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (encrypt_read_read_fu_90_p2 == 1'b0))) begin
        i_assign_1_reg_210 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_i_i_fu_427_p2))) begin
        i_assign_reg_254 <= i_fu_433_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(encrypt_read_read_fu_90_p2 == 1'b0))) begin
        i_assign_reg_254 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond_i_i_fu_427_p2))) begin
        lhs_V_3_reg_149 <= agg_result_V_i_i_reg_221;
    end else if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~(1'b0 == exitcond_i_i7_fu_368_p2))) begin
        lhs_V_3_reg_149 <= agg_result_V_i_i3_reg_177;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        lhs_V_3_reg_149 <= ap_const_lv128_lc_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_i_i_fu_427_p2))) begin
        lhs_V_4_reg_234 <= lhs_V_r_V_i_i_fu_460_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(encrypt_read_read_fu_90_p2 == 1'b0))) begin
        lhs_V_4_reg_234 <= ap_const_lv128_lc_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond_i_i7_fu_368_p2))) begin
        lhs_V_5_reg_190 <= lhs_V_r_V_i_i1_fu_401_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (encrypt_read_read_fu_90_p2 == 1'b0))) begin
        lhs_V_5_reg_190 <= ap_const_lv128_lc_1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~(1'b0 == exitcond_i_i7_fu_368_p2)) | ((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond_i_i_fu_427_p2)))) begin
        p_Val2_s_reg_138 <= agg_result_V_i_reg_516;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        p_Val2_s_reg_138 <= counter_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_i_i_fu_427_p2))) begin
        rhs_V_3_reg_245 <= r_V_11_fu_478_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(encrypt_read_read_fu_90_p2 == 1'b0))) begin
        rhs_V_3_reg_245 <= r_V_16_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond_i_i7_fu_368_p2))) begin
        rhs_V_4_reg_201 <= r_V_13_fu_419_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (encrypt_read_read_fu_90_p2 == 1'b0))) begin
        rhs_V_4_reg_201 <= r_V_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        agg_result_V_i_reg_516[5 : 0] <= agg_result_V_i_fu_336_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        encrypt_iterations_1_reg_505 <= encrypt_iterations_1_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        encrypted_counter_out_V_reg_523 <= grp_secure_enclave_key_store_aes_fu_265_ap_return;
        tmp_reg_528[12 : 0] <= tmp_fu_341_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_311_p2 == 1'b0))) begin
        tmp_6_reg_511 <= tmp_6_fu_323_p1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_311_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_311_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_311_p2 == 1'b0))) begin
        ap_return = lhs_V_3_reg_149;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_42) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_107) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_120) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_135) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_153) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_83) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_98) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_210) begin
        ap_sig_nseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_nseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        data_in_V_ce0 = 1'b1;
    end else begin
        data_in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        data_out_V_ce0 = 1'b1;
    end else begin
        data_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        data_out_V_we0 = 1'b1;
    end else begin
        data_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond_fu_311_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            if (~(encrypt_read_read_fu_90_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        end
        ap_ST_st24_fsm_23 : begin
            if ((1'b0 == exitcond_i_i7_fu_368_p2)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st25_fsm_24 : begin
            if ((1'b0 == exitcond_i_i_fu_427_p2)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign agg_result_V_0_r_V_i_i1_fu_393_p3 = ((tmp_8_fu_380_p3[0:0] === 1'b1) ? z_V_1_fu_387_p2 : agg_result_V_i_i3_reg_177);

assign agg_result_V_0_r_V_i_i_fu_452_p3 = ((tmp_7_fu_439_p3[0:0] === 1'b1) ? z_V_fu_446_p2 : agg_result_V_i_i_reg_221);

assign agg_result_V_i_fu_336_p1 = r_V_14_fu_330_p2;

always @ (*) begin
    ap_sig_107 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_120 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_135 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_153 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_210 = (1'b1 == ap_NS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_42 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_83 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_98 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign data_in_V_address0 = tmp_fu_341_p1;

assign data_out_V_address0 = tmp_reg_528;

assign data_out_V_d0 = r_V_15_fu_346_p2;

assign encrypt_iterations_1_fu_317_p2 = (encrypt_iterations_reg_163 + ap_const_lv13_1);

assign encrypt_read_read_fu_90_p2 = encrypt;

assign exitcond_fu_311_p2 = ((encrypt_iterations_reg_163 == ap_const_lv13_1000) ? 1'b1 : 1'b0);

assign exitcond_i_i7_fu_368_p2 = ((i_assign_1_reg_210 == ap_const_lv8_80) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_427_p2 = ((i_assign_reg_254 == ap_const_lv8_80) ? 1'b1 : 1'b0);

assign grp_secure_enclave_key_store_aes_fu_265_ap_start = ap_reg_grp_secure_enclave_key_store_aes_fu_265_ap_start;

assign grp_secure_enclave_key_store_aes_fu_265_inptext_V_read = r_V_14_fu_330_p2;

assign i_4_fu_374_p2 = (i_assign_1_reg_210 + ap_const_lv8_1);

assign i_assign_1_cast1_fu_364_p1 = i_assign_1_reg_210;

assign i_assign_cast2_fu_423_p1 = i_assign_reg_254;

assign i_fu_433_p2 = (i_assign_reg_254 + ap_const_lv8_1);

assign lhs_V_r_V_i_i1_fu_401_p3 = ((tmp_8_fu_380_p3[0:0] === 1'b1) ? z_V_1_fu_387_p2 : lhs_V_5_reg_190);

assign lhs_V_r_V_i_i_fu_460_p3 = ((tmp_7_fu_439_p3[0:0] === 1'b1) ? z_V_fu_446_p2 : lhs_V_4_reg_234);

assign r_V_11_fu_478_p1 = r_V_6_fu_468_p4;

assign r_V_13_fu_419_p1 = r_V_8_fu_409_p4;

assign r_V_14_fu_330_p2 = (tmp_i_cast_fu_327_p1 ^ ap_const_lv6_21);

assign r_V_15_fu_346_p2 = (data_in_V_q0 ^ encrypted_counter_out_V_reg_523);

assign r_V_16_fu_358_p2 = (r_V_15_fu_346_p2 ^ lhs_V_3_reg_149);

assign r_V_6_fu_468_p4 = {{rhs_V_3_reg_245[ap_const_lv32_7F : ap_const_lv32_1]}};

assign r_V_8_fu_409_p4 = {{rhs_V_4_reg_201[ap_const_lv32_7F : ap_const_lv32_1]}};

assign r_V_fu_352_p2 = (data_in_V_q0 ^ lhs_V_3_reg_149);

assign tmp_6_fu_323_p1 = p_Val2_s_reg_138[0:0];

assign tmp_7_fu_439_p3 = hash_key_V[i_assign_cast2_fu_423_p1];

assign tmp_8_fu_380_p3 = hash_key_V[i_assign_1_cast1_fu_364_p1];

assign tmp_fu_341_p1 = encrypt_iterations_reg_163;

assign tmp_i_cast_fu_327_p1 = tmp_6_reg_511;

assign z_V_1_fu_387_p2 = (lhs_V_5_reg_190 ^ rhs_V_4_reg_201);

assign z_V_fu_446_p2 = (lhs_V_4_reg_234 ^ rhs_V_3_reg_245);

always @ (posedge ap_clk) begin
    agg_result_V_i_reg_516[127:6] <= 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    tmp_reg_528[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //secure_enclave_key_store_aes_gcm_cipher
