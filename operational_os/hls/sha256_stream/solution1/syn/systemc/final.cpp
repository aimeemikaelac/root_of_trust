// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "final.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic final::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic final::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> final::ap_ST_fsm_state1 = "1";
const sc_lv<13> final::ap_ST_fsm_state2 = "10";
const sc_lv<13> final::ap_ST_fsm_state3 = "100";
const sc_lv<13> final::ap_ST_fsm_state4 = "1000";
const sc_lv<13> final::ap_ST_fsm_state5 = "10000";
const sc_lv<13> final::ap_ST_fsm_state6 = "100000";
const sc_lv<13> final::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> final::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> final::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> final::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> final::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> final::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> final::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> final::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> final::ap_const_lv32_1 = "1";
const sc_lv<1> final::ap_const_lv1_1 = "1";
const sc_lv<32> final::ap_const_lv32_8 = "1000";
const sc_lv<1> final::ap_const_lv1_0 = "0";
const sc_lv<32> final::ap_const_lv32_9 = "1001";
const sc_lv<4> final::ap_const_lv4_0 = "0000";
const sc_lv<32> final::ap_const_lv32_7 = "111";
const sc_lv<32> final::ap_const_lv32_C = "1100";
const sc_lv<32> final::ap_const_lv32_6 = "110";
const sc_lv<32> final::ap_const_lv32_2 = "10";
const sc_lv<32> final::ap_const_lv32_3 = "11";
const sc_lv<32> final::ap_const_lv32_4 = "100";
const sc_lv<32> final::ap_const_lv32_5 = "101";
const sc_lv<32> final::ap_const_lv32_A = "1010";
const sc_lv<32> final::ap_const_lv32_B = "1011";
const sc_lv<8> final::ap_const_lv8_0 = "00000000";
const sc_lv<8> final::ap_const_lv8_80 = "10000000";
const sc_lv<6> final::ap_const_lv6_37 = "110111";
const sc_lv<2> final::ap_const_lv2_2 = "10";
const sc_lv<2> final::ap_const_lv2_1 = "1";
const sc_lv<32> final::ap_const_lv32_80 = "10000000";
const sc_lv<32> final::ap_const_lv32_40 = "1000000";
const sc_lv<32> final::ap_const_lv32_D = "1101";
const sc_lv<32> final::ap_const_lv32_14 = "10100";
const sc_lv<32> final::ap_const_lv32_15 = "10101";
const sc_lv<32> final::ap_const_lv32_1C = "11100";
const sc_lv<3> final::ap_const_lv3_0 = "000";
const sc_lv<64> final::ap_const_lv64_7F = "1111111";
const sc_lv<64> final::ap_const_lv64_3F = "111111";
const sc_lv<64> final::ap_const_lv64_7E = "1111110";
const sc_lv<64> final::ap_const_lv64_3E = "111110";
const sc_lv<64> final::ap_const_lv64_7D = "1111101";
const sc_lv<64> final::ap_const_lv64_3D = "111101";
const sc_lv<64> final::ap_const_lv64_7C = "1111100";
const sc_lv<64> final::ap_const_lv64_3C = "111100";
const sc_lv<4> final::ap_const_lv4_8 = "1000";
const sc_lv<4> final::ap_const_lv4_1 = "1";
const sc_lv<2> final::ap_const_lv2_0 = "00";
const sc_lv<5> final::ap_const_lv5_3 = "11";
const sc_lv<32> final::ap_const_lv32_F = "1111";
const sc_lv<32> final::ap_const_lv32_10 = "10000";
const sc_lv<32> final::ap_const_lv32_17 = "10111";
const sc_lv<32> final::ap_const_lv32_18 = "11000";
const sc_lv<32> final::ap_const_lv32_1F = "11111";
const sc_lv<5> final::ap_const_lv5_2 = "10";
const sc_lv<5> final::ap_const_lv5_1 = "1";
const bool final::ap_const_boolean_1 = true;

final::final(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_transform_fu_252 = new transform("grp_transform_fu_252");
    grp_transform_fu_252->ap_clk(ap_clk);
    grp_transform_fu_252->ap_rst(ap_rst);
    grp_transform_fu_252->ap_start(grp_transform_fu_252_ap_start);
    grp_transform_fu_252->ap_done(grp_transform_fu_252_ap_done);
    grp_transform_fu_252->ap_idle(grp_transform_fu_252_ap_idle);
    grp_transform_fu_252->ap_ready(grp_transform_fu_252_ap_ready);
    grp_transform_fu_252->SHA256_m_h_address0(grp_transform_fu_252_SHA256_m_h_address0);
    grp_transform_fu_252->SHA256_m_h_ce0(grp_transform_fu_252_SHA256_m_h_ce0);
    grp_transform_fu_252->SHA256_m_h_we0(grp_transform_fu_252_SHA256_m_h_we0);
    grp_transform_fu_252->SHA256_m_h_d0(grp_transform_fu_252_SHA256_m_h_d0);
    grp_transform_fu_252->SHA256_m_h_q0(SHA256_m_h_q0);
    grp_transform_fu_252->message_address0(grp_transform_fu_252_message_address0);
    grp_transform_fu_252->message_ce0(grp_transform_fu_252_message_ce0);
    grp_transform_fu_252->message_q0(SHA256_m_block_q0);
    grp_transform_fu_252->message_address1(grp_transform_fu_252_message_address1);
    grp_transform_fu_252->message_ce1(grp_transform_fu_252_message_ce1);
    grp_transform_fu_252->message_q1(SHA256_m_block_q1);
    grp_transform_fu_252->block_nb(block_nb_reg_555);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SHA256_m_block_address0);
    sensitive << ( tmp_85_reg_585 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_353_p2 );
    sensitive << ( grp_transform_fu_252_message_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sum_i_cast_fu_373_p1 );
    sensitive << ( p_sum1_cast_cast_fu_417_p3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_sum3_cast_cast_fu_425_p3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_sum5_cast_cast_fu_433_p3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_sum6_cast_cast_fu_441_p3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_SHA256_m_block_address1);
    sensitive << ( grp_transform_fu_252_message_address1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_SHA256_m_block_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_353_p2 );
    sensitive << ( grp_transform_fu_252_message_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_SHA256_m_block_ce1);
    sensitive << ( grp_transform_fu_252_message_ce1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_SHA256_m_block_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_353_p2 );
    sensitive << ( tmp_88_reg_613 );
    sensitive << ( tmp_89_reg_618 );
    sensitive << ( tmp_90_reg_623 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_87_fu_409_p3 );

    SC_METHOD(thread_SHA256_m_block_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_353_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_SHA256_m_h_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_transform_fu_252_SHA256_m_h_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_91_fu_461_p1 );

    SC_METHOD(thread_SHA256_m_h_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_transform_fu_252_SHA256_m_h_ce0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_SHA256_m_h_d0);
    sensitive << ( grp_transform_fu_252_SHA256_m_h_d0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_SHA256_m_h_we0);
    sensitive << ( grp_transform_fu_252_SHA256_m_h_we0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_449_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_449_p2 );

    SC_METHOD(thread_block_nb_fu_273_p3);
    sensitive << ( tmp_s_fu_267_p2 );

    SC_METHOD(thread_digest_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( p_sum_cast_fu_488_p1 );
    sensitive << ( p_sum2_cast_fu_528_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( p_sum4_cast_fu_538_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_93_fu_543_p1 );

    SC_METHOD(thread_digest_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_digest_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_94_reg_653 );
    sensitive << ( tmp_95_reg_658 );
    sensitive << ( tmp_96_reg_663 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_109_fu_470_p1 );

    SC_METHOD(thread_digest_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_exitcond_fu_449_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_reg_241 );

    SC_METHOD(thread_exitcond_i_fu_353_p2);
    sensitive << ( length_assign_reg_595 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_230 );

    SC_METHOD(thread_grp_transform_fu_252_ap_start);
    sensitive << ( ap_reg_grp_transform_fu_252_ap_start );

    SC_METHOD(thread_i_3_fu_358_p2);
    sensitive << ( i_i_reg_230 );

    SC_METHOD(thread_i_4_fu_455_p2);
    sensitive << ( i_reg_241 );

    SC_METHOD(thread_length_assign_fu_347_p2);
    sensitive << ( SHA256_m_len_read );
    sensitive << ( pm_len_cast_cast_fu_331_p3 );

    SC_METHOD(thread_p_sum1_cast_cast_fu_417_p3);
    sensitive << ( tmp_s_reg_547 );

    SC_METHOD(thread_p_sum2_cast_fu_528_p1);
    sensitive << ( p_sum2_fu_523_p2 );

    SC_METHOD(thread_p_sum2_fu_523_p2);
    sensitive << ( tmp_92_reg_646 );

    SC_METHOD(thread_p_sum3_cast_cast_fu_425_p3);
    sensitive << ( tmp_s_reg_547 );

    SC_METHOD(thread_p_sum4_cast_fu_538_p1);
    sensitive << ( p_sum4_fu_533_p2 );

    SC_METHOD(thread_p_sum4_fu_533_p2);
    sensitive << ( tmp_92_reg_646 );

    SC_METHOD(thread_p_sum5_cast_cast_fu_433_p3);
    sensitive << ( tmp_s_reg_547 );

    SC_METHOD(thread_p_sum6_cast_cast_fu_441_p3);
    sensitive << ( tmp_s_reg_547 );

    SC_METHOD(thread_p_sum_cast_fu_488_p1);
    sensitive << ( p_sum_fu_482_p2 );

    SC_METHOD(thread_p_sum_fu_482_p2);
    sensitive << ( tmp_92_fu_475_p3 );

    SC_METHOD(thread_pm_len_cast_cast_fu_331_p3);
    sensitive << ( tmp_s_fu_267_p2 );

    SC_METHOD(thread_sum_i_cast_fu_373_p1);
    sensitive << ( sum_i_fu_368_p2 );

    SC_METHOD(thread_sum_i_fu_368_p2);
    sensitive << ( tmp_107_reg_590 );
    sensitive << ( tmp_108_fu_364_p1 );

    SC_METHOD(thread_tmp_100_fu_285_p1);
    sensitive << ( SHA256_m_tot_len_read );

    SC_METHOD(thread_tmp_101_fu_289_p1);
    sensitive << ( SHA256_m_tot_len_read );

    SC_METHOD(thread_tmp_102_fu_293_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_103_fu_297_p1);
    sensitive << ( SHA256_m_tot_len_read );

    SC_METHOD(thread_tmp_104_fu_301_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_105_fu_323_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_106_fu_327_p1);
    sensitive << ( SHA256_m_tot_len_read );

    SC_METHOD(thread_tmp_107_fu_343_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_108_fu_364_p1);
    sensitive << ( i_i_reg_230 );

    SC_METHOD(thread_tmp_109_fu_470_p1);
    sensitive << ( SHA256_m_h_q0 );

    SC_METHOD(thread_tmp_110_fu_466_p1);
    sensitive << ( i_reg_241 );

    SC_METHOD(thread_tmp_84_fu_305_p2);
    sensitive << ( tmp_99_fu_281_p1 );
    sensitive << ( tmp_100_fu_285_p1 );

    SC_METHOD(thread_tmp_85_fu_339_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_86_fu_378_p2);
    sensitive << ( tmp_105_reg_575 );
    sensitive << ( tmp_106_reg_580 );

    SC_METHOD(thread_tmp_87_fu_409_p3);
    sensitive << ( tmp_86_reg_608 );

    SC_METHOD(thread_tmp_90_cast3_fu_311_p2);
    sensitive << ( tmp_103_fu_297_p1 );
    sensitive << ( tmp_104_fu_301_p1 );

    SC_METHOD(thread_tmp_90_cast_fu_317_p2);
    sensitive << ( tmp_101_fu_289_p1 );
    sensitive << ( tmp_102_fu_293_p1 );

    SC_METHOD(thread_tmp_91_fu_461_p1);
    sensitive << ( i_reg_241 );

    SC_METHOD(thread_tmp_92_fu_475_p3);
    sensitive << ( tmp_110_reg_641 );

    SC_METHOD(thread_tmp_93_fu_543_p1);
    sensitive << ( tmp_92_reg_646 );

    SC_METHOD(thread_tmp_99_fu_281_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_fu_263_p1);
    sensitive << ( SHA256_m_len_read );

    SC_METHOD(thread_tmp_s_fu_267_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_fu_263_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_353_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_449_p2 );
    sensitive << ( grp_transform_fu_252_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    ap_CS_fsm = "0000000000001";
    ap_reg_grp_transform_fu_252_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "final_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, SHA256_m_tot_len_read, "(port)SHA256_m_tot_len_read");
    sc_trace(mVcdFile, SHA256_m_len_read, "(port)SHA256_m_len_read");
    sc_trace(mVcdFile, SHA256_m_block_address0, "(port)SHA256_m_block_address0");
    sc_trace(mVcdFile, SHA256_m_block_ce0, "(port)SHA256_m_block_ce0");
    sc_trace(mVcdFile, SHA256_m_block_we0, "(port)SHA256_m_block_we0");
    sc_trace(mVcdFile, SHA256_m_block_d0, "(port)SHA256_m_block_d0");
    sc_trace(mVcdFile, SHA256_m_block_q0, "(port)SHA256_m_block_q0");
    sc_trace(mVcdFile, SHA256_m_block_address1, "(port)SHA256_m_block_address1");
    sc_trace(mVcdFile, SHA256_m_block_ce1, "(port)SHA256_m_block_ce1");
    sc_trace(mVcdFile, SHA256_m_block_q1, "(port)SHA256_m_block_q1");
    sc_trace(mVcdFile, SHA256_m_h_address0, "(port)SHA256_m_h_address0");
    sc_trace(mVcdFile, SHA256_m_h_ce0, "(port)SHA256_m_h_ce0");
    sc_trace(mVcdFile, SHA256_m_h_we0, "(port)SHA256_m_h_we0");
    sc_trace(mVcdFile, SHA256_m_h_d0, "(port)SHA256_m_h_d0");
    sc_trace(mVcdFile, SHA256_m_h_q0, "(port)SHA256_m_h_q0");
    sc_trace(mVcdFile, digest_address0, "(port)digest_address0");
    sc_trace(mVcdFile, digest_ce0, "(port)digest_ce0");
    sc_trace(mVcdFile, digest_we0, "(port)digest_we0");
    sc_trace(mVcdFile, digest_d0, "(port)digest_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_s_fu_267_p2, "tmp_s_fu_267_p2");
    sc_trace(mVcdFile, tmp_s_reg_547, "tmp_s_reg_547");
    sc_trace(mVcdFile, block_nb_fu_273_p3, "block_nb_fu_273_p3");
    sc_trace(mVcdFile, block_nb_reg_555, "block_nb_reg_555");
    sc_trace(mVcdFile, tmp_84_fu_305_p2, "tmp_84_fu_305_p2");
    sc_trace(mVcdFile, tmp_84_reg_560, "tmp_84_reg_560");
    sc_trace(mVcdFile, tmp_90_cast3_fu_311_p2, "tmp_90_cast3_fu_311_p2");
    sc_trace(mVcdFile, tmp_90_cast3_reg_565, "tmp_90_cast3_reg_565");
    sc_trace(mVcdFile, tmp_90_cast_fu_317_p2, "tmp_90_cast_fu_317_p2");
    sc_trace(mVcdFile, tmp_90_cast_reg_570, "tmp_90_cast_reg_570");
    sc_trace(mVcdFile, tmp_105_fu_323_p1, "tmp_105_fu_323_p1");
    sc_trace(mVcdFile, tmp_105_reg_575, "tmp_105_reg_575");
    sc_trace(mVcdFile, tmp_106_fu_327_p1, "tmp_106_fu_327_p1");
    sc_trace(mVcdFile, tmp_106_reg_580, "tmp_106_reg_580");
    sc_trace(mVcdFile, tmp_85_fu_339_p1, "tmp_85_fu_339_p1");
    sc_trace(mVcdFile, tmp_85_reg_585, "tmp_85_reg_585");
    sc_trace(mVcdFile, tmp_107_fu_343_p1, "tmp_107_fu_343_p1");
    sc_trace(mVcdFile, tmp_107_reg_590, "tmp_107_reg_590");
    sc_trace(mVcdFile, length_assign_fu_347_p2, "length_assign_fu_347_p2");
    sc_trace(mVcdFile, length_assign_reg_595, "length_assign_reg_595");
    sc_trace(mVcdFile, i_3_fu_358_p2, "i_3_fu_358_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_86_fu_378_p2, "tmp_86_fu_378_p2");
    sc_trace(mVcdFile, tmp_86_reg_608, "tmp_86_reg_608");
    sc_trace(mVcdFile, exitcond_i_fu_353_p2, "exitcond_i_fu_353_p2");
    sc_trace(mVcdFile, tmp_88_reg_613, "tmp_88_reg_613");
    sc_trace(mVcdFile, tmp_89_reg_618, "tmp_89_reg_618");
    sc_trace(mVcdFile, tmp_90_reg_623, "tmp_90_reg_623");
    sc_trace(mVcdFile, i_4_fu_455_p2, "i_4_fu_455_p2");
    sc_trace(mVcdFile, i_4_reg_631, "i_4_reg_631");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond_fu_449_p2, "exitcond_fu_449_p2");
    sc_trace(mVcdFile, tmp_110_fu_466_p1, "tmp_110_fu_466_p1");
    sc_trace(mVcdFile, tmp_110_reg_641, "tmp_110_reg_641");
    sc_trace(mVcdFile, tmp_92_fu_475_p3, "tmp_92_fu_475_p3");
    sc_trace(mVcdFile, tmp_92_reg_646, "tmp_92_reg_646");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_94_reg_653, "tmp_94_reg_653");
    sc_trace(mVcdFile, tmp_95_reg_658, "tmp_95_reg_658");
    sc_trace(mVcdFile, tmp_96_reg_663, "tmp_96_reg_663");
    sc_trace(mVcdFile, grp_transform_fu_252_ap_start, "grp_transform_fu_252_ap_start");
    sc_trace(mVcdFile, grp_transform_fu_252_ap_done, "grp_transform_fu_252_ap_done");
    sc_trace(mVcdFile, grp_transform_fu_252_ap_idle, "grp_transform_fu_252_ap_idle");
    sc_trace(mVcdFile, grp_transform_fu_252_ap_ready, "grp_transform_fu_252_ap_ready");
    sc_trace(mVcdFile, grp_transform_fu_252_SHA256_m_h_address0, "grp_transform_fu_252_SHA256_m_h_address0");
    sc_trace(mVcdFile, grp_transform_fu_252_SHA256_m_h_ce0, "grp_transform_fu_252_SHA256_m_h_ce0");
    sc_trace(mVcdFile, grp_transform_fu_252_SHA256_m_h_we0, "grp_transform_fu_252_SHA256_m_h_we0");
    sc_trace(mVcdFile, grp_transform_fu_252_SHA256_m_h_d0, "grp_transform_fu_252_SHA256_m_h_d0");
    sc_trace(mVcdFile, grp_transform_fu_252_message_address0, "grp_transform_fu_252_message_address0");
    sc_trace(mVcdFile, grp_transform_fu_252_message_ce0, "grp_transform_fu_252_message_ce0");
    sc_trace(mVcdFile, grp_transform_fu_252_message_address1, "grp_transform_fu_252_message_address1");
    sc_trace(mVcdFile, grp_transform_fu_252_message_ce1, "grp_transform_fu_252_message_ce1");
    sc_trace(mVcdFile, i_i_reg_230, "i_i_reg_230");
    sc_trace(mVcdFile, i_reg_241, "i_reg_241");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_reg_grp_transform_fu_252_ap_start, "ap_reg_grp_transform_fu_252_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sum_i_cast_fu_373_p1, "sum_i_cast_fu_373_p1");
    sc_trace(mVcdFile, p_sum1_cast_cast_fu_417_p3, "p_sum1_cast_cast_fu_417_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, p_sum3_cast_cast_fu_425_p3, "p_sum3_cast_cast_fu_425_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, p_sum5_cast_cast_fu_433_p3, "p_sum5_cast_cast_fu_433_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_sum6_cast_cast_fu_441_p3, "p_sum6_cast_cast_fu_441_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_91_fu_461_p1, "tmp_91_fu_461_p1");
    sc_trace(mVcdFile, p_sum_cast_fu_488_p1, "p_sum_cast_fu_488_p1");
    sc_trace(mVcdFile, p_sum2_cast_fu_528_p1, "p_sum2_cast_fu_528_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, p_sum4_cast_fu_538_p1, "p_sum4_cast_fu_538_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_93_fu_543_p1, "tmp_93_fu_543_p1");
    sc_trace(mVcdFile, tmp_87_fu_409_p3, "tmp_87_fu_409_p3");
    sc_trace(mVcdFile, tmp_109_fu_470_p1, "tmp_109_fu_470_p1");
    sc_trace(mVcdFile, tmp_fu_263_p1, "tmp_fu_263_p1");
    sc_trace(mVcdFile, tmp_99_fu_281_p1, "tmp_99_fu_281_p1");
    sc_trace(mVcdFile, tmp_100_fu_285_p1, "tmp_100_fu_285_p1");
    sc_trace(mVcdFile, tmp_103_fu_297_p1, "tmp_103_fu_297_p1");
    sc_trace(mVcdFile, tmp_104_fu_301_p1, "tmp_104_fu_301_p1");
    sc_trace(mVcdFile, tmp_101_fu_289_p1, "tmp_101_fu_289_p1");
    sc_trace(mVcdFile, tmp_102_fu_293_p1, "tmp_102_fu_293_p1");
    sc_trace(mVcdFile, pm_len_cast_cast_fu_331_p3, "pm_len_cast_cast_fu_331_p3");
    sc_trace(mVcdFile, tmp_108_fu_364_p1, "tmp_108_fu_364_p1");
    sc_trace(mVcdFile, sum_i_fu_368_p2, "sum_i_fu_368_p2");
    sc_trace(mVcdFile, p_sum_fu_482_p2, "p_sum_fu_482_p2");
    sc_trace(mVcdFile, p_sum2_fu_523_p2, "p_sum2_fu_523_p2");
    sc_trace(mVcdFile, p_sum4_fu_533_p2, "p_sum4_fu_533_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

final::~final() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_transform_fu_252;
}

void final::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_transform_fu_252_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_reg_grp_transform_fu_252_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_transform_fu_252_ap_ready.read())) {
            ap_reg_grp_transform_fu_252_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_0))) {
        i_i_reg_230 = i_3_fu_358_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_i_reg_230 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_241 = i_4_reg_631.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_transform_fu_252_ap_done.read(), ap_const_logic_1))) {
        i_reg_241 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        block_nb_reg_555 = block_nb_fu_273_p3.read();
        length_assign_reg_595 = length_assign_fu_347_p2.read();
        tmp_105_reg_575 = tmp_105_fu_323_p1.read();
        tmp_106_reg_580 = tmp_106_fu_327_p1.read();
        tmp_107_reg_590 = tmp_107_fu_343_p1.read();
        tmp_84_reg_560 = tmp_84_fu_305_p2.read();
        tmp_85_reg_585 = tmp_85_fu_339_p1.read();
        tmp_90_cast3_reg_565 = tmp_90_cast3_fu_311_p2.read();
        tmp_90_cast_reg_570 = tmp_90_cast_fu_317_p2.read();
        tmp_s_reg_547 = tmp_s_fu_267_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_4_reg_631 = i_4_fu_455_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond_fu_449_p2.read(), ap_const_lv1_0))) {
        tmp_110_reg_641 = tmp_110_fu_466_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_1))) {
        tmp_86_reg_608 = tmp_86_fu_378_p2.read();
        tmp_88_reg_613 = tmp_90_cast_reg_570.read().range(12, 5);
        tmp_89_reg_618 = tmp_90_cast3_reg_565.read().range(20, 13);
        tmp_90_reg_623 = tmp_84_reg_560.read().range(28, 21);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_92_reg_646 = tmp_92_fu_475_p3.read();
        tmp_94_reg_653 = SHA256_m_h_q0.read().range(15, 8);
        tmp_95_reg_658 = SHA256_m_h_q0.read().range(23, 16);
        tmp_96_reg_663 = SHA256_m_h_q0.read().range(31, 24);
    }
}

void final::thread_SHA256_m_block_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        SHA256_m_block_address0 =  (sc_lv<7>) (p_sum6_cast_cast_fu_441_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SHA256_m_block_address0 =  (sc_lv<7>) (p_sum5_cast_cast_fu_433_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        SHA256_m_block_address0 =  (sc_lv<7>) (p_sum3_cast_cast_fu_425_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        SHA256_m_block_address0 =  (sc_lv<7>) (p_sum1_cast_cast_fu_417_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_1))) {
        SHA256_m_block_address0 =  (sc_lv<7>) (tmp_85_reg_585.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_0))) {
        SHA256_m_block_address0 =  (sc_lv<7>) (sum_i_cast_fu_373_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SHA256_m_block_address0 = grp_transform_fu_252_message_address0.read();
    } else {
        SHA256_m_block_address0 = "XXXXXXX";
    }
}

void final::thread_SHA256_m_block_address1() {
    SHA256_m_block_address1 = grp_transform_fu_252_message_address1.read();
}

void final::thread_SHA256_m_block_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        SHA256_m_block_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SHA256_m_block_ce0 = grp_transform_fu_252_message_ce0.read();
    } else {
        SHA256_m_block_ce0 = ap_const_logic_0;
    }
}

void final::thread_SHA256_m_block_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SHA256_m_block_ce1 = grp_transform_fu_252_message_ce1.read();
    } else {
        SHA256_m_block_ce1 = ap_const_logic_0;
    }
}

void final::thread_SHA256_m_block_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        SHA256_m_block_d0 = tmp_90_reg_623.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SHA256_m_block_d0 = tmp_89_reg_618.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        SHA256_m_block_d0 = tmp_88_reg_613.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        SHA256_m_block_d0 = tmp_87_fu_409_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_1))) {
        SHA256_m_block_d0 = ap_const_lv8_80;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_0))) {
        SHA256_m_block_d0 = ap_const_lv8_0;
    } else {
        SHA256_m_block_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void final::thread_SHA256_m_block_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        SHA256_m_block_we0 = ap_const_logic_1;
    } else {
        SHA256_m_block_we0 = ap_const_logic_0;
    }
}

void final::thread_SHA256_m_h_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        SHA256_m_h_address0 =  (sc_lv<3>) (tmp_91_fu_461_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SHA256_m_h_address0 = grp_transform_fu_252_SHA256_m_h_address0.read();
    } else {
        SHA256_m_h_address0 =  (sc_lv<3>) ("XXX");
    }
}

void final::thread_SHA256_m_h_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        SHA256_m_h_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SHA256_m_h_ce0 = grp_transform_fu_252_SHA256_m_h_ce0.read();
    } else {
        SHA256_m_h_ce0 = ap_const_logic_0;
    }
}

void final::thread_SHA256_m_h_d0() {
    SHA256_m_h_d0 = grp_transform_fu_252_SHA256_m_h_d0.read();
}

void final::thread_SHA256_m_h_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SHA256_m_h_we0 = grp_transform_fu_252_SHA256_m_h_we0.read();
    } else {
        SHA256_m_h_we0 = ap_const_logic_0;
    }
}

void final::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void final::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void final::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void final::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void final::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void final::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void final::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void final::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void final::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void final::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void final::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void final::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void final::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void final::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_449_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void final::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void final::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_449_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void final::thread_block_nb_fu_273_p3() {
    block_nb_fu_273_p3 = (!tmp_s_fu_267_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_s_fu_267_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_1);
}

void final::thread_digest_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        digest_address0 =  (sc_lv<5>) (tmp_93_fu_543_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        digest_address0 =  (sc_lv<5>) (p_sum4_cast_fu_538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        digest_address0 =  (sc_lv<5>) (p_sum2_cast_fu_528_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        digest_address0 =  (sc_lv<5>) (p_sum_cast_fu_488_p1.read());
    } else {
        digest_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void final::thread_digest_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        digest_ce0 = ap_const_logic_1;
    } else {
        digest_ce0 = ap_const_logic_0;
    }
}

void final::thread_digest_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        digest_d0 = tmp_96_reg_663.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        digest_d0 = tmp_95_reg_658.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        digest_d0 = tmp_94_reg_653.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        digest_d0 = tmp_109_fu_470_p1.read();
    } else {
        digest_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void final::thread_digest_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        digest_we0 = ap_const_logic_1;
    } else {
        digest_we0 = ap_const_logic_0;
    }
}

void final::thread_exitcond_fu_449_p2() {
    exitcond_fu_449_p2 = (!i_reg_241.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_241.read() == ap_const_lv4_8);
}

void final::thread_exitcond_i_fu_353_p2() {
    exitcond_i_fu_353_p2 = (!i_i_reg_230.read().is_01() || !length_assign_reg_595.read().is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_230.read() == length_assign_reg_595.read());
}

void final::thread_grp_transform_fu_252_ap_start() {
    grp_transform_fu_252_ap_start = ap_reg_grp_transform_fu_252_ap_start.read();
}

void final::thread_i_3_fu_358_p2() {
    i_3_fu_358_p2 = (!i_i_reg_230.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_i_reg_230.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void final::thread_i_4_fu_455_p2() {
    i_4_fu_455_p2 = (!i_reg_241.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_241.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void final::thread_length_assign_fu_347_p2() {
    length_assign_fu_347_p2 = (!pm_len_cast_cast_fu_331_p3.read().is_01() || !SHA256_m_len_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(pm_len_cast_cast_fu_331_p3.read()) - sc_biguint<32>(SHA256_m_len_read.read()));
}

void final::thread_p_sum1_cast_cast_fu_417_p3() {
    p_sum1_cast_cast_fu_417_p3 = (!tmp_s_reg_547.read()[0].is_01())? sc_lv<64>(): ((tmp_s_reg_547.read()[0].to_bool())? ap_const_lv64_7F: ap_const_lv64_3F);
}

void final::thread_p_sum2_cast_fu_528_p1() {
    p_sum2_cast_fu_528_p1 = esl_zext<64,5>(p_sum2_fu_523_p2.read());
}

void final::thread_p_sum2_fu_523_p2() {
    p_sum2_fu_523_p2 = (tmp_92_reg_646.read() | ap_const_lv5_2);
}

void final::thread_p_sum3_cast_cast_fu_425_p3() {
    p_sum3_cast_cast_fu_425_p3 = (!tmp_s_reg_547.read()[0].is_01())? sc_lv<64>(): ((tmp_s_reg_547.read()[0].to_bool())? ap_const_lv64_7E: ap_const_lv64_3E);
}

void final::thread_p_sum4_cast_fu_538_p1() {
    p_sum4_cast_fu_538_p1 = esl_zext<64,5>(p_sum4_fu_533_p2.read());
}

void final::thread_p_sum4_fu_533_p2() {
    p_sum4_fu_533_p2 = (tmp_92_reg_646.read() | ap_const_lv5_1);
}

void final::thread_p_sum5_cast_cast_fu_433_p3() {
    p_sum5_cast_cast_fu_433_p3 = (!tmp_s_reg_547.read()[0].is_01())? sc_lv<64>(): ((tmp_s_reg_547.read()[0].to_bool())? ap_const_lv64_7D: ap_const_lv64_3D);
}

void final::thread_p_sum6_cast_cast_fu_441_p3() {
    p_sum6_cast_cast_fu_441_p3 = (!tmp_s_reg_547.read()[0].is_01())? sc_lv<64>(): ((tmp_s_reg_547.read()[0].to_bool())? ap_const_lv64_7C: ap_const_lv64_3C);
}

void final::thread_p_sum_cast_fu_488_p1() {
    p_sum_cast_fu_488_p1 = esl_zext<64,5>(p_sum_fu_482_p2.read());
}

void final::thread_p_sum_fu_482_p2() {
    p_sum_fu_482_p2 = (tmp_92_fu_475_p3.read() | ap_const_lv5_3);
}

void final::thread_pm_len_cast_cast_fu_331_p3() {
    pm_len_cast_cast_fu_331_p3 = (!tmp_s_fu_267_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_267_p2.read()[0].to_bool())? ap_const_lv32_80: ap_const_lv32_40);
}

void final::thread_sum_i_cast_fu_373_p1() {
    sum_i_cast_fu_373_p1 = esl_sext<64,9>(sum_i_fu_368_p2.read());
}

void final::thread_sum_i_fu_368_p2() {
    sum_i_fu_368_p2 = (!tmp_108_fu_364_p1.read().is_01() || !tmp_107_reg_590.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_108_fu_364_p1.read()) + sc_biguint<9>(tmp_107_reg_590.read()));
}

void final::thread_tmp_100_fu_285_p1() {
    tmp_100_fu_285_p1 = SHA256_m_tot_len_read.read().range(29-1, 0);
}

void final::thread_tmp_101_fu_289_p1() {
    tmp_101_fu_289_p1 = SHA256_m_tot_len_read.read().range(13-1, 0);
}

void final::thread_tmp_102_fu_293_p1() {
    tmp_102_fu_293_p1 = SHA256_m_len_read.read().range(13-1, 0);
}

void final::thread_tmp_103_fu_297_p1() {
    tmp_103_fu_297_p1 = SHA256_m_tot_len_read.read().range(21-1, 0);
}

void final::thread_tmp_104_fu_301_p1() {
    tmp_104_fu_301_p1 = SHA256_m_len_read.read().range(21-1, 0);
}

void final::thread_tmp_105_fu_323_p1() {
    tmp_105_fu_323_p1 = SHA256_m_len_read.read().range(5-1, 0);
}

void final::thread_tmp_106_fu_327_p1() {
    tmp_106_fu_327_p1 = SHA256_m_tot_len_read.read().range(5-1, 0);
}

void final::thread_tmp_107_fu_343_p1() {
    tmp_107_fu_343_p1 = SHA256_m_len_read.read().range(9-1, 0);
}

void final::thread_tmp_108_fu_364_p1() {
    tmp_108_fu_364_p1 = i_i_reg_230.read().range(9-1, 0);
}

void final::thread_tmp_109_fu_470_p1() {
    tmp_109_fu_470_p1 = SHA256_m_h_q0.read().range(8-1, 0);
}

void final::thread_tmp_110_fu_466_p1() {
    tmp_110_fu_466_p1 = i_reg_241.read().range(3-1, 0);
}

void final::thread_tmp_84_fu_305_p2() {
    tmp_84_fu_305_p2 = (!tmp_99_fu_281_p1.read().is_01() || !tmp_100_fu_285_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_99_fu_281_p1.read()) + sc_biguint<29>(tmp_100_fu_285_p1.read()));
}

void final::thread_tmp_85_fu_339_p1() {
    tmp_85_fu_339_p1 = esl_zext<64,32>(SHA256_m_len_read.read());
}

void final::thread_tmp_86_fu_378_p2() {
    tmp_86_fu_378_p2 = (!tmp_106_reg_580.read().is_01() || !tmp_105_reg_575.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_106_reg_580.read()) + sc_biguint<5>(tmp_105_reg_575.read()));
}

void final::thread_tmp_87_fu_409_p3() {
    tmp_87_fu_409_p3 = esl_concat<5,3>(tmp_86_reg_608.read(), ap_const_lv3_0);
}

void final::thread_tmp_90_cast3_fu_311_p2() {
    tmp_90_cast3_fu_311_p2 = (!tmp_103_fu_297_p1.read().is_01() || !tmp_104_fu_301_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(tmp_103_fu_297_p1.read()) + sc_biguint<21>(tmp_104_fu_301_p1.read()));
}

void final::thread_tmp_90_cast_fu_317_p2() {
    tmp_90_cast_fu_317_p2 = (!tmp_101_fu_289_p1.read().is_01() || !tmp_102_fu_293_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_101_fu_289_p1.read()) + sc_biguint<13>(tmp_102_fu_293_p1.read()));
}

void final::thread_tmp_91_fu_461_p1() {
    tmp_91_fu_461_p1 = esl_zext<64,4>(i_reg_241.read());
}

void final::thread_tmp_92_fu_475_p3() {
    tmp_92_fu_475_p3 = esl_concat<3,2>(tmp_110_reg_641.read(), ap_const_lv2_0);
}

void final::thread_tmp_93_fu_543_p1() {
    tmp_93_fu_543_p1 = esl_zext<64,5>(tmp_92_reg_646.read());
}

void final::thread_tmp_99_fu_281_p1() {
    tmp_99_fu_281_p1 = SHA256_m_len_read.read().range(29-1, 0);
}

void final::thread_tmp_fu_263_p1() {
    tmp_fu_263_p1 = SHA256_m_len_read.read().range(6-1, 0);
}

void final::thread_tmp_s_fu_267_p2() {
    tmp_s_fu_267_p2 = (!tmp_fu_263_p1.read().is_01() || !ap_const_lv6_37.is_01())? sc_lv<1>(): (sc_biguint<6>(tmp_fu_263_p1.read()) > sc_biguint<6>(ap_const_lv6_37));
}

void final::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_i_fu_353_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_transform_fu_252_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_449_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

