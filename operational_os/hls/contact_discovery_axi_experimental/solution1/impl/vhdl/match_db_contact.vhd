-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity match_db_contact is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    db_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    db_stream_V_empty_n : IN STD_LOGIC;
    db_stream_V_read : OUT STD_LOGIC;
    contacts_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    contacts_ce0 : OUT STD_LOGIC;
    contacts_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of match_db_contact is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal db_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond1_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_319_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal contacts_index_3_fu_336_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal contacts_index_3_reg_483 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_3_fu_346_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_reg_488 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond9_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_364_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_3_reg_496 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond8_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_391_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal contact_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal contact_V_empty_n : STD_LOGIC;
    signal contact_V_read : STD_LOGIC;
    signal exitcond3_i_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal db_item_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal db_item_V_empty_n : STD_LOGIC;
    signal db_item_V_read : STD_LOGIC;
    signal ap_block_state6 : BOOLEAN;
    signal i_5_fu_415_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_5_reg_522 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond_i_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal found_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal contacts_index_2_fu_443_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal contacts_index_2_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal matched_1_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal results_local_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal results_local_ce0 : STD_LOGIC;
    signal results_local_we0 : STD_LOGIC;
    signal results_local_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal results_local_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_results_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal local_results_ce0 : STD_LOGIC;
    signal local_results_we0 : STD_LOGIC;
    signal local_results_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal db_item_temp_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal db_item_temp_ce0 : STD_LOGIC;
    signal db_item_temp_we0 : STD_LOGIC;
    signal db_item_temp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_221 : STD_LOGIC_VECTOR (6 downto 0);
    signal contacts_index_reg_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_reg_244 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal contact_V_full_n : STD_LOGIC;
    signal contact_V_write : STD_LOGIC;
    signal db_item_V_full_n : STD_LOGIC;
    signal db_item_V_write : STD_LOGIC;
    signal ap_block_state5 : BOOLEAN;
    signal i_i_reg_255 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_i_reg_266 : STD_LOGIC_VECTOR (6 downto 0);
    signal found_i_reg_277 : STD_LOGIC_VECTOR (0 downto 0);
    signal contacts_index_1_reg_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal matched_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_i_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_i_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_342_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_cast5_fu_354_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_370_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);

    component match_db_contact_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component match_db_contact_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component match_db_contact_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fifo_w8_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    results_local_U : component match_db_contact_bkb
    generic map (
        DataWidth => 1,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => results_local_address0,
        ce0 => results_local_ce0,
        we0 => results_local_we0,
        d0 => results_local_d0,
        q0 => results_local_q0);

    local_results_U : component match_db_contact_cud
    generic map (
        DataWidth => 1,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_results_address0,
        ce0 => local_results_ce0,
        we0 => local_results_we0,
        d0 => found_i_reg_277,
        q0 => local_results_q0);

    db_item_temp_U : component match_db_contact_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => db_item_temp_address0,
        ce0 => db_item_temp_ce0,
        we0 => db_item_temp_we0,
        d0 => db_stream_V_dout,
        q0 => db_item_temp_q0);

    contact_V_fifo_U : component fifo_w8_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => contacts_q0,
        if_full_n => contact_V_full_n,
        if_write => contact_V_write,
        if_dout => contact_V_dout,
        if_empty_n => contact_V_empty_n,
        if_read => contact_V_read);

    db_item_V_fifo_U : component fifo_w8_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => db_item_temp_q0,
        if_full_n => db_item_V_full_n,
        if_write => db_item_V_write,
        if_dout => db_item_V_dout,
        if_empty_n => db_item_V_empty_n,
        if_read => db_item_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_437_p2 = ap_const_lv1_1))) then 
                    ap_return_preg <= matched_reg_301;
                end if; 
            end if;
        end if;
    end process;


    contacts_index_1_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond9_fu_330_p2 = ap_const_lv1_1))) then 
                contacts_index_1_reg_290 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                contacts_index_1_reg_290 <= contacts_index_2_reg_540;
            end if; 
        end if;
    end process;

    contacts_index_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n))) and (exitcond1_fu_313_p2 = ap_const_lv1_1))) then 
                contacts_index_reg_232 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_fu_409_p2 = ap_const_lv1_1))) then 
                contacts_index_reg_232 <= contacts_index_3_reg_483;
            end if; 
        end if;
    end process;

    found_i_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))) and (exitcond3_i_fu_385_p2 = ap_const_lv1_1))) then 
                found_i_reg_277 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                found_i_reg_277 <= found_fu_431_p2;
            end if; 
        end if;
    end process;

    i_1_i_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))) and (exitcond3_i_fu_385_p2 = ap_const_lv1_1))) then 
                i_1_i_reg_266 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_1_i_reg_266 <= i_5_reg_522;
            end if; 
        end if;
    end process;

    i_1_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and not(((ap_const_logic_0 = contact_V_full_n) or (ap_const_logic_0 = db_item_V_full_n))))) then 
                i_1_reg_244 <= i_3_reg_496;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond9_fu_330_p2))) then 
                i_1_reg_244 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_i_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond8_fu_358_p2 = ap_const_lv1_1))) then 
                i_i_reg_255 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))))) then 
                i_i_reg_255 <= i_4_fu_391_p2;
            end if; 
        end if;
    end process;

    i_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_313_p2 = ap_const_lv1_0) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n))))) then 
                i_reg_221 <= i_2_fu_319_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_221 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    matched_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond9_fu_330_p2 = ap_const_lv1_1))) then 
                matched_reg_301 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                matched_reg_301 <= matched_1_fu_454_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                contacts_index_2_reg_540 <= contacts_index_2_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                contacts_index_3_reg_483 <= contacts_index_3_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_3_reg_496 <= i_3_fu_364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                i_5_reg_522 <= i_5_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond9_fu_330_p2))) then
                    tmp_3_reg_488(12 downto 6) <= tmp_3_fu_346_p3(12 downto 6);
            end if;
        end if;
    end process;
    tmp_3_reg_488(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, db_stream_V_empty_n, ap_CS_fsm_state2, exitcond1_fu_313_p2, ap_CS_fsm_state3, exitcond9_fu_330_p2, ap_CS_fsm_state4, exitcond8_fu_358_p2, ap_CS_fsm_state6, contact_V_empty_n, exitcond3_i_fu_385_p2, db_item_V_empty_n, ap_CS_fsm_state7, exitcond_i_fu_409_p2, ap_CS_fsm_state9, exitcond_fu_437_p2, ap_CS_fsm_state5, contact_V_full_n, db_item_V_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n))) and (exitcond1_fu_313_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_313_p2 = ap_const_lv1_0) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond9_fu_330_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond8_fu_358_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and not(((ap_const_logic_0 = contact_V_full_n) or (ap_const_logic_0 = db_item_V_full_n))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))) and (exitcond3_i_fu_385_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_fu_409_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_437_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state2_assign_proc : process(db_stream_V_empty_n, exitcond1_fu_313_p2)
    begin
                ap_block_state2 <= ((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n));
    end process;


    ap_block_state5_assign_proc : process(contact_V_full_n, db_item_V_full_n)
    begin
                ap_block_state5 <= ((ap_const_logic_0 = contact_V_full_n) or (ap_const_logic_0 = db_item_V_full_n));
    end process;


    ap_block_state6_assign_proc : process(contact_V_empty_n, exitcond3_i_fu_385_p2, db_item_V_empty_n)
    begin
                ap_block_state6 <= (((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state9, exitcond_fu_437_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_437_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9, exitcond_fu_437_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_437_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state9, exitcond_fu_437_p2, matched_reg_301, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_437_p2 = ap_const_lv1_1))) then 
            ap_return <= matched_reg_301;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    contact_V_read_assign_proc : process(ap_CS_fsm_state6, contact_V_empty_n, exitcond3_i_fu_385_p2, db_item_V_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))))) then 
            contact_V_read <= ap_const_logic_1;
        else 
            contact_V_read <= ap_const_logic_0;
        end if; 
    end process;


    contact_V_write_assign_proc : process(ap_CS_fsm_state5, contact_V_full_n, db_item_V_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and not(((ap_const_logic_0 = contact_V_full_n) or (ap_const_logic_0 = db_item_V_full_n))))) then 
            contact_V_write <= ap_const_logic_1;
        else 
            contact_V_write <= ap_const_logic_0;
        end if; 
    end process;

    contacts_address0 <= tmp_2_fu_375_p1(13 - 1 downto 0);

    contacts_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            contacts_ce0 <= ap_const_logic_1;
        else 
            contacts_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    contacts_index_2_fu_443_p2 <= std_logic_vector(unsigned(contacts_index_1_reg_290) + unsigned(ap_const_lv8_1));
    contacts_index_3_fu_336_p2 <= std_logic_vector(unsigned(contacts_index_reg_232) + unsigned(ap_const_lv8_1));

    db_item_V_read_assign_proc : process(ap_CS_fsm_state6, contact_V_empty_n, exitcond3_i_fu_385_p2, db_item_V_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))))) then 
            db_item_V_read <= ap_const_logic_1;
        else 
            db_item_V_read <= ap_const_logic_0;
        end if; 
    end process;


    db_item_V_write_assign_proc : process(ap_CS_fsm_state5, contact_V_full_n, db_item_V_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and not(((ap_const_logic_0 = contact_V_full_n) or (ap_const_logic_0 = db_item_V_full_n))))) then 
            db_item_V_write <= ap_const_logic_1;
        else 
            db_item_V_write <= ap_const_logic_0;
        end if; 
    end process;


    db_item_temp_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, tmp_1_fu_325_p1, tmp_9_fu_380_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            db_item_temp_address0 <= tmp_9_fu_380_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            db_item_temp_address0 <= tmp_1_fu_325_p1(6 - 1 downto 0);
        else 
            db_item_temp_address0 <= "XXXXXX";
        end if; 
    end process;


    db_item_temp_ce0_assign_proc : process(db_stream_V_empty_n, ap_CS_fsm_state2, exitcond1_fu_313_p2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n)))) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            db_item_temp_ce0 <= ap_const_logic_1;
        else 
            db_item_temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    db_item_temp_we0_assign_proc : process(db_stream_V_empty_n, ap_CS_fsm_state2, exitcond1_fu_313_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_313_p2 = ap_const_lv1_0) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n))))) then 
            db_item_temp_we0 <= ap_const_logic_1;
        else 
            db_item_temp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    db_stream_V_blk_n_assign_proc : process(db_stream_V_empty_n, ap_CS_fsm_state2, exitcond1_fu_313_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_313_p2 = ap_const_lv1_0))) then 
            db_stream_V_blk_n <= db_stream_V_empty_n;
        else 
            db_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    db_stream_V_read_assign_proc : process(db_stream_V_empty_n, ap_CS_fsm_state2, exitcond1_fu_313_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_313_p2 = ap_const_lv1_0) and not(((exitcond1_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_0 = db_stream_V_empty_n))))) then 
            db_stream_V_read <= ap_const_logic_1;
        else 
            db_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_313_p2 <= "1" when (i_reg_221 = ap_const_lv7_40) else "0";
    exitcond3_i_fu_385_p2 <= "1" when (i_i_reg_255 = ap_const_lv7_40) else "0";
    exitcond8_fu_358_p2 <= "1" when (i_1_reg_244 = ap_const_lv7_40) else "0";
    exitcond9_fu_330_p2 <= "1" when (contacts_index_reg_232 = ap_const_lv8_80) else "0";
    exitcond_fu_437_p2 <= "1" when (contacts_index_1_reg_290 = ap_const_lv8_80) else "0";
    exitcond_i_fu_409_p2 <= "1" when (i_1_i_reg_266 = ap_const_lv7_40) else "0";
    found_fu_431_p2 <= (results_local_q0 and found_i_reg_277);
    i_1_cast5_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_244),13));
    i_2_fu_319_p2 <= std_logic_vector(unsigned(i_reg_221) + unsigned(ap_const_lv7_1));
    i_3_fu_364_p2 <= std_logic_vector(unsigned(i_1_reg_244) + unsigned(ap_const_lv7_1));
    i_4_fu_391_p2 <= std_logic_vector(unsigned(i_i_reg_255) + unsigned(ap_const_lv7_1));
    i_5_fu_415_p2 <= std_logic_vector(unsigned(i_1_i_reg_266) + unsigned(ap_const_lv7_1));

    local_results_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9, tmp_8_fu_426_p1, tmp_4_fu_449_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            local_results_address0 <= tmp_4_fu_449_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            local_results_address0 <= tmp_8_fu_426_p1(7 - 1 downto 0);
        else 
            local_results_address0 <= "XXXXXXX";
        end if; 
    end process;


    local_results_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            local_results_ce0 <= ap_const_logic_1;
        else 
            local_results_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_results_we0_assign_proc : process(ap_CS_fsm_state7, exitcond_i_fu_409_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_fu_409_p2 = ap_const_lv1_1))) then 
            local_results_we0 <= ap_const_logic_1;
        else 
            local_results_we0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_1_fu_454_p2 <= (local_results_q0 or matched_reg_301);

    results_local_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_5_i_fu_404_p1, tmp_6_i_fu_421_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            results_local_address0 <= tmp_6_i_fu_421_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            results_local_address0 <= tmp_5_i_fu_404_p1(6 - 1 downto 0);
        else 
            results_local_address0 <= "XXXXXX";
        end if; 
    end process;


    results_local_ce0_assign_proc : process(ap_CS_fsm_state6, contact_V_empty_n, exitcond3_i_fu_385_p2, db_item_V_empty_n, ap_CS_fsm_state7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n))))) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            results_local_ce0 <= ap_const_logic_1;
        else 
            results_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    results_local_d0 <= "1" when (contact_V_dout = db_item_V_dout) else "0";

    results_local_we0_assign_proc : process(ap_CS_fsm_state6, contact_V_empty_n, exitcond3_i_fu_385_p2, db_item_V_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2) and not((((ap_const_logic_0 = contact_V_empty_n) and (ap_const_lv1_0 = exitcond3_i_fu_385_p2)) or ((ap_const_lv1_0 = exitcond3_i_fu_385_p2) and (ap_const_logic_0 = db_item_V_empty_n)))))) then 
            results_local_we0 <= ap_const_logic_1;
        else 
            results_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_221),64));
    tmp_2_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_370_p2),64));
    tmp_3_fu_346_p3 <= (tmp_5_fu_342_p1 & ap_const_lv6_0);
    tmp_4_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(contacts_index_1_reg_290),64));
    tmp_5_fu_342_p1 <= contacts_index_reg_232(7 - 1 downto 0);
    tmp_5_i_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_255),64));
    tmp_6_i_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_i_reg_266),64));
    tmp_8_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(contacts_index_reg_232),64));
    tmp_9_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_244),64));
    tmp_s_fu_370_p2 <= std_logic_vector(unsigned(tmp_3_reg_488) + unsigned(i_1_cast5_fu_354_p1));
end behav;
