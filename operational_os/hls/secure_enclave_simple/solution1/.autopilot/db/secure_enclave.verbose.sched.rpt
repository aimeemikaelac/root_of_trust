

================================================================
== Vivado HLS Report for 'secure_enclave'
================================================================
* Date:           Tue Mar 14 21:27:57 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        secure_enclave_simple
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i-es2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      5.13|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    2|    2|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: secure_storage_in_V_s (17)  [1/1] 0.00ns
:9  %secure_storage_in_V_s = getelementptr [2 x i128]* %secure_storage_in_V, i64 0, i64 0

ST_1: stored_pin_V (33)  [2/2] 2.39ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:26
:25  %stored_pin_V = load i128* %secure_storage_in_V_s, align 8


 <State 2>: 5.13ns
ST_2: StgValue_5 (8)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([2 x i128]* %secure_storage_in_V), !map !31

ST_2: StgValue_6 (9)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i128 %pin_attempt_V), !map !37

ST_2: StgValue_7 (10)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([2 x i128]* %secure_storage_out_V), !map !43

ST_2: StgValue_8 (11)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i128* %key_out_V), !map !47

ST_2: StgValue_9 (12)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %counter_in), !map !51

ST_2: StgValue_10 (13)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32* %increment_counter), !map !55

ST_2: StgValue_11 (14)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32* %reset_counter), !map !59

ST_2: counter_in_read (15)  [1/1] 0.00ns
:7  %counter_in_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %counter_in)

ST_2: pin_attempt_V_read (16)  [1/1] 0.00ns
:8  %pin_attempt_V_read = call i128 @_ssdm_op_Read.ap_vld.i128(i128 %pin_attempt_V)

ST_2: StgValue_14 (18)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !63

ST_2: StgValue_15 (19)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @secure_enclave_str) nounwind

ST_2: StgValue_16 (20)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:12
:12  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_17 (21)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:13
:13  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_18 (22)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:14
:14  call void (...)* @_ssdm_op_SpecInterface(i32* %reset_counter, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_19 (23)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:15
:15  call void (...)* @_ssdm_op_SpecInterface(i32* %increment_counter, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_20 (24)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:16
:16  call void (...)* @_ssdm_op_SpecInterface(i32 %counter_in, [7 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_21 (25)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:17
:17  call void (...)* @_ssdm_op_SpecInterface(i32 %counter_in, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_22 (26)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:18
:18  call void (...)* @_ssdm_op_SpecInterface(i128* %key_out_V, [8 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: empty (27)  [1/1] 0.00ns
:19  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([2 x i128]* %secure_storage_out_V, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6)

ST_2: StgValue_24 (28)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface([2 x i128]* %secure_storage_out_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_25 (29)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:21
:21  call void (...)* @_ssdm_op_SpecInterface(i128 %pin_attempt_V, [7 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: StgValue_26 (30)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:22
:22  call void (...)* @_ssdm_op_SpecInterface(i128 %pin_attempt_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: empty_2 (31)  [1/1] 0.00ns
:23  %empty_2 = call i32 (...)* @_ssdm_op_SpecMemCore([2 x i128]* %secure_storage_in_V, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5)

ST_2: StgValue_28 (32)  [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecInterface([2 x i128]* %secure_storage_in_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stored_pin_V (33)  [1/2] 2.39ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:26
:25  %stored_pin_V = load i128* %secure_storage_in_V_s, align 8

ST_2: tmp (34)  [1/1] 1.50ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:29
:26  %tmp = icmp ult i32 %counter_in_read, 5

ST_2: tmp_1 (35)  [1/1] 2.03ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:29
:27  %tmp_1 = icmp eq i128 %stored_pin_V, %pin_attempt_V_read

ST_2: or_cond (36)  [1/1] 0.71ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:29
:28  %or_cond = and i1 %tmp, %tmp_1

ST_2: StgValue_33 (37)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:29
:29  br i1 %or_cond, label %1, label %._crit_edge

ST_2: StgValue_34 (39)  [1/1] 1.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:35
._crit_edge:0  call void @_ssdm_op_Write.s_axilite.i32P(i32* %increment_counter, i32 1)

ST_2: StgValue_35 (40)  [1/1] 1.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:36
._crit_edge:1  call void @_ssdm_op_Write.s_axilite.i32P(i32* %reset_counter, i32 0)

ST_2: StgValue_36 (41)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:37
._crit_edge:2  call void @_ssdm_op_Write.ap_ovld.i128P(i128* %key_out_V, i128 0)

ST_2: StgValue_37 (42)  [1/1] 0.89ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:38
._crit_edge:3  br label %2

ST_2: StgValue_38 (44)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:30
:0  call void @_ssdm_op_Write.ap_ovld.i128P(i128* %key_out_V, i128 %pin_attempt_V_read)

ST_2: StgValue_39 (45)  [1/1] 1.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:31
:1  call void @_ssdm_op_Write.s_axilite.i32P(i32* %reset_counter, i32 1)

ST_2: StgValue_40 (46)  [1/1] 1.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:32
:2  call void @_ssdm_op_Write.s_axilite.i32P(i32* %increment_counter, i32 0)

ST_2: StgValue_41 (47)  [1/1] 0.89ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:33
:3  br label %2

ST_2: p_s (49)  [1/1] 0.00ns
:0  %p_s = phi i1 [ true, %1 ], [ false, %._crit_edge ]

ST_2: p_cast (50)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:41
:1  %p_cast = zext i1 %p_s to i32

ST_2: StgValue_44 (51)  [1/1] 0.00ns  loc: secure_enclave_simple/src/secure_enclave_simple.cpp:41
:2  ret i32 %p_cast



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('secure_storage_in_V_s') [17]  (0 ns)
	'load' operation ('stored_pin.V', secure_enclave_simple/src/secure_enclave_simple.cpp:26) on array 'secure_storage_in_V' [33]  (2.39 ns)

 <State 2>: 5.13ns
The critical path consists of the following:
	'load' operation ('stored_pin.V', secure_enclave_simple/src/secure_enclave_simple.cpp:26) on array 'secure_storage_in_V' [33]  (2.39 ns)
	'icmp' operation ('tmp_1', secure_enclave_simple/src/secure_enclave_simple.cpp:29) [35]  (2.03 ns)
	'and' operation ('or_cond', secure_enclave_simple/src/secure_enclave_simple.cpp:29) [36]  (0.71 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
