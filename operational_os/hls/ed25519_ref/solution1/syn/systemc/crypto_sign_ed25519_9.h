// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_sign_ed25519_9_HH_
#define _crypto_sign_ed25519_9_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "crypto_sign_ed25519_21.h"
#include "crypto_sign_ed255Xh4.h"

namespace ap_rtl {

struct crypto_sign_ed25519_9 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > r_address0;
    sc_out< sc_logic > r_ce0;
    sc_out< sc_logic > r_we0;
    sc_out< sc_lv<8> > r_d0;
    sc_out< sc_lv<5> > x_v_address0;
    sc_out< sc_logic > x_v_ce0;
    sc_in< sc_lv<32> > x_v_q0;
    sc_out< sc_lv<5> > x_v_address1;
    sc_out< sc_logic > x_v_ce1;
    sc_in< sc_lv<32> > x_v_q1;


    // Module declarations
    crypto_sign_ed25519_9(sc_module_name name);
    SC_HAS_PROCESS(crypto_sign_ed25519_9);

    ~crypto_sign_ed25519_9();

    sc_trace_file* mVcdFile;

    crypto_sign_ed255Xh4* y_v_U;
    crypto_sign_ed25519_21* grp_crypto_sign_ed25519_21_fu_682;
    sc_signal< sc_lv<21> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<6> > i_22_fu_693_p2;
    sc_signal< sc_lv<6> > i_22_reg_872;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<64> > tmp_fu_699_p1;
    sc_signal< sc_lv<64> > tmp_reg_877;
    sc_signal< sc_lv<1> > exitcond_fu_687_p2;
    sc_signal< sc_lv<5> > y_v_address0;
    sc_signal< sc_logic > y_v_ce0;
    sc_signal< sc_logic > y_v_we0;
    sc_signal< sc_lv<32> > y_v_d0;
    sc_signal< sc_lv<32> > y_v_q0;
    sc_signal< sc_lv<5> > y_v_address1;
    sc_signal< sc_logic > y_v_ce1;
    sc_signal< sc_logic > y_v_we1;
    sc_signal< sc_logic > grp_crypto_sign_ed25519_21_fu_682_ap_start;
    sc_signal< sc_logic > grp_crypto_sign_ed25519_21_fu_682_ap_done;
    sc_signal< sc_logic > grp_crypto_sign_ed25519_21_fu_682_ap_idle;
    sc_signal< sc_logic > grp_crypto_sign_ed25519_21_fu_682_ap_ready;
    sc_signal< sc_lv<5> > grp_crypto_sign_ed25519_21_fu_682_r_v_address0;
    sc_signal< sc_logic > grp_crypto_sign_ed25519_21_fu_682_r_v_ce0;
    sc_signal< sc_logic > grp_crypto_sign_ed25519_21_fu_682_r_v_we0;
    sc_signal< sc_lv<32> > grp_crypto_sign_ed25519_21_fu_682_r_v_d0;
    sc_signal< sc_lv<6> > i_reg_671;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_reg_grp_crypto_sign_ed25519_21_fu_682_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<21> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<21> ap_ST_fsm_state1;
    static const sc_lv<21> ap_ST_fsm_state2;
    static const sc_lv<21> ap_ST_fsm_state3;
    static const sc_lv<21> ap_ST_fsm_state4;
    static const sc_lv<21> ap_ST_fsm_state5;
    static const sc_lv<21> ap_ST_fsm_state6;
    static const sc_lv<21> ap_ST_fsm_state7;
    static const sc_lv<21> ap_ST_fsm_state8;
    static const sc_lv<21> ap_ST_fsm_state9;
    static const sc_lv<21> ap_ST_fsm_state10;
    static const sc_lv<21> ap_ST_fsm_state11;
    static const sc_lv<21> ap_ST_fsm_state12;
    static const sc_lv<21> ap_ST_fsm_state13;
    static const sc_lv<21> ap_ST_fsm_state14;
    static const sc_lv<21> ap_ST_fsm_state15;
    static const sc_lv<21> ap_ST_fsm_state16;
    static const sc_lv<21> ap_ST_fsm_state17;
    static const sc_lv<21> ap_ST_fsm_state18;
    static const sc_lv<21> ap_ST_fsm_state19;
    static const sc_lv<21> ap_ST_fsm_state20;
    static const sc_lv<21> ap_ST_fsm_state21;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_10;
    static const sc_lv<64> ap_const_lv64_11;
    static const sc_lv<64> ap_const_lv64_12;
    static const sc_lv<64> ap_const_lv64_13;
    static const sc_lv<64> ap_const_lv64_14;
    static const sc_lv<64> ap_const_lv64_15;
    static const sc_lv<64> ap_const_lv64_16;
    static const sc_lv<64> ap_const_lv64_17;
    static const sc_lv<64> ap_const_lv64_18;
    static const sc_lv<64> ap_const_lv64_19;
    static const sc_lv<64> ap_const_lv64_1A;
    static const sc_lv<64> ap_const_lv64_1B;
    static const sc_lv<64> ap_const_lv64_1C;
    static const sc_lv<64> ap_const_lv64_1D;
    static const sc_lv<64> ap_const_lv64_1E;
    static const sc_lv<64> ap_const_lv64_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_687_p2();
    void thread_grp_crypto_sign_ed25519_21_fu_682_ap_start();
    void thread_i_22_fu_693_p2();
    void thread_r_address0();
    void thread_r_ce0();
    void thread_r_d0();
    void thread_r_we0();
    void thread_tmp_fu_699_p1();
    void thread_x_v_address0();
    void thread_x_v_address1();
    void thread_x_v_ce0();
    void thread_x_v_ce1();
    void thread_y_v_address0();
    void thread_y_v_address1();
    void thread_y_v_ce0();
    void thread_y_v_ce1();
    void thread_y_v_d0();
    void thread_y_v_we0();
    void thread_y_v_we1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
