-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity secure_enclave_key_store_aes_gcm_d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    key_V : IN STD_LOGIC_VECTOR (127 downto 0);
    iv_V : IN STD_LOGIC_VECTOR (127 downto 0);
    ct_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ct_V_ce0 : OUT STD_LOGIC;
    ct_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    pt_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pt_V_ce0 : OUT STD_LOGIC;
    pt_V_we0 : OUT STD_LOGIC;
    pt_V_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    tag_in_V : IN STD_LOGIC_VECTOR (127 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of secure_enclave_key_store_aes_gcm_d is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (43 downto 0) := "00000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (43 downto 0) := "00000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (43 downto 0) := "00000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (43 downto 0) := "00000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (43 downto 0) := "00000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (43 downto 0) := "00000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (43 downto 0) := "00001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (43 downto 0) := "00010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (43 downto 0) := "00100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (43 downto 0) := "01000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (43 downto 0) := "10000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv128_lc_2 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv128_lc_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_61 : BOOLEAN;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_259 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_90 : BOOLEAN;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done : STD_LOGIC;
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_101 : BOOLEAN;
    signal ap_sig_cseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_110 : BOOLEAN;
    signal grp_secure_enclave_key_store_aes_fu_197_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal hash_key_V_reg_346 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_126 : BOOLEAN;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal ghash_prev_V_reg_358 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_137 : BOOLEAN;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done : STD_LOGIC;
    signal ap_sig_cseq_ST_st43_fsm_42 : STD_LOGIC;
    signal ap_sig_150 : BOOLEAN;
    signal encrypted_counter_zero_V_reg_368 : STD_LOGIC_VECTOR (127 downto 0);
    signal r_V_6_fu_266_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_fu_281_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st44_fsm_43 : STD_LOGIC;
    signal ap_sig_162 : BOOLEAN;
    signal agg_result_V_0_r_V_i_i_i_fu_300_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal exitcond_i_i_i_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_r_V_i_i_i_fu_308_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal r_V_5_fu_326_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_in_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_in_V_ce0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_ce0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_we0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_encrypt : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_197_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_197_ap_done : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_197_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_197_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_197_ap_ce : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_197_inptext_V_read : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_454 : BOOLEAN;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_ghash_iteration_fu_245_x_prev_V : STD_LOGIC_VECTOR (127 downto 0);
    signal ghash_final_out_V_reg_102 : STD_LOGIC_VECTOR (127 downto 0);
    signal lhs_V_1_reg_113 : STD_LOGIC_VECTOR (127 downto 0);
    signal rhs_V_reg_124 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_assign_reg_133 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_sig_nseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_1914 : BOOLEAN;
    signal ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start : STD_LOGIC := '0';
    signal i_assign_cast1_fu_271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_287_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_V_fu_294_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal r_V_3_fu_316_p4 : STD_LOGIC_VECTOR (126 downto 0);
    signal r_V_fu_330_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";

    component secure_enclave_key_store_aes_gcm_cipher IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        key_V : IN STD_LOGIC_VECTOR (127 downto 0);
        data_in_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_in_V_ce0 : OUT STD_LOGIC;
        data_in_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        data_out_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_out_V_ce0 : OUT STD_LOGIC;
        data_out_V_we0 : OUT STD_LOGIC;
        data_out_V_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        counter_V : IN STD_LOGIC_VECTOR (127 downto 0);
        hash_key_V : IN STD_LOGIC_VECTOR (127 downto 0);
        encrypt : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_aes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        inptext_V_read : IN STD_LOGIC_VECTOR (127 downto 0);
        key_V_read : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_ghash_iteration IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        h_V : IN STD_LOGIC_VECTOR (127 downto 0);
        d_V : IN STD_LOGIC_VECTOR (127 downto 0);
        x_prev_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_144 : component secure_enclave_key_store_aes_gcm_cipher
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start,
        ap_done => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done,
        ap_idle => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_idle,
        ap_ready => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_ready,
        key_V => key_V,
        data_in_V_address0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_in_V_address0,
        data_in_V_ce0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_in_V_ce0,
        data_in_V_q0 => ct_V_q0,
        data_out_V_address0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_address0,
        data_out_V_ce0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_ce0,
        data_out_V_we0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_we0,
        data_out_V_d0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_d0,
        counter_V => reg_259,
        hash_key_V => hash_key_V_reg_346,
        encrypt => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_encrypt,
        ap_return => grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_return);

    grp_secure_enclave_key_store_aes_fu_197 : component secure_enclave_key_store_aes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_aes_fu_197_ap_start,
        ap_done => grp_secure_enclave_key_store_aes_fu_197_ap_done,
        ap_idle => grp_secure_enclave_key_store_aes_fu_197_ap_idle,
        ap_ready => grp_secure_enclave_key_store_aes_fu_197_ap_ready,
        ap_ce => grp_secure_enclave_key_store_aes_fu_197_ap_ce,
        inptext_V_read => grp_secure_enclave_key_store_aes_fu_197_inptext_V_read,
        key_V_read => key_V,
        ap_return => grp_secure_enclave_key_store_aes_fu_197_ap_return);

    grp_secure_enclave_key_store_ghash_iteration_fu_245 : component secure_enclave_key_store_ghash_iteration
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start,
        ap_done => grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done,
        ap_idle => grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_idle,
        ap_ready => grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_ready,
        h_V => hash_key_V_reg_346,
        d_V => grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V,
        x_prev_V => grp_secure_enclave_key_store_ghash_iteration_fu_245_x_prev_V,
        ap_return => grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22) and (ap_const_logic_1 = ap_sig_nseq_ST_st24_fsm_23))) then 
                    ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_aes_fu_197_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start <= ap_const_logic_0;
            else
                if ((not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23))) then 
                    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done))) or (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
                    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and not((exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0)))) then 
                    ap_return_preg <= tmp_fu_335_p2;
                end if; 
            end if;
        end if;
    end process;


    ghash_final_out_V_reg_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and (exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0))) then 
                ghash_final_out_V_reg_102 <= agg_result_V_0_r_V_i_i_i_fu_300_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then 
                ghash_final_out_V_reg_102 <= ap_const_lv128_lc_1;
            end if; 
        end if;
    end process;

    i_assign_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and (exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0))) then 
                i_assign_reg_133 <= i_fu_281_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then 
                i_assign_reg_133 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    lhs_V_1_reg_113_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and (exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0))) then 
                lhs_V_1_reg_113 <= lhs_V_r_V_i_i_i_fu_308_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then 
                lhs_V_1_reg_113 <= ap_const_lv128_lc_1;
            end if; 
        end if;
    end process;

    rhs_V_reg_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and (exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0))) then 
                rhs_V_reg_124 <= r_V_5_fu_326_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then 
                rhs_V_reg_124 <= r_V_6_fu_266_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then
                encrypted_counter_zero_V_reg_368 <= grp_secure_enclave_key_store_aes_fu_197_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) and not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done)))) then
                ghash_prev_V_reg_358 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                hash_key_V_reg_346 <= grp_secure_enclave_key_store_aes_fu_197_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done))) or (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) or (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)))) then
                reg_259 <= grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done, grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done, exitcond_i_i_i_fu_275_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done))) then
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                else
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                end if;
            when ap_ST_st23_fsm_22 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                end if;
            when ap_ST_st24_fsm_23 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done))) then
                    ap_NS_fsm <= ap_ST_st25_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                end if;
            when ap_ST_st25_fsm_24 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done))) then
                    ap_NS_fsm <= ap_ST_st26_fsm_25;
                else
                    ap_NS_fsm <= ap_ST_st25_fsm_24;
                end if;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                if (not((exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st44_fsm_43;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    agg_result_V_0_r_V_i_i_i_fu_300_p3 <= 
        z_V_fu_294_p2 when (tmp_5_fu_287_p3(0) = '1') else 
        ghash_final_out_V_reg_102;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st44_fsm_43, exitcond_i_i_i_fu_275_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and not((exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, exitcond_i_i_i_fu_275_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and not((exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, exitcond_i_i_i_fu_275_p2, tmp_fu_335_p2, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and not((exitcond_i_i_i_fu_275_p2 = ap_const_lv1_0)))) then 
            ap_return <= tmp_fu_335_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_101_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_101 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_110_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_110 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_126_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_126 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_137_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_137 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_150_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_150 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    ap_sig_162_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_162 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    ap_sig_1914_assign_proc : process(ap_NS_fsm)
    begin
                ap_sig_1914 <= (ap_const_lv1_1 = ap_NS_fsm(23 downto 23));
    end process;


    ap_sig_454_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_454 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_61_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_61 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_90 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_61)
    begin
        if (ap_sig_61) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_126)
    begin
        if (ap_sig_126) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_454)
    begin
        if (ap_sig_454) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_90)
    begin
        if (ap_sig_90) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_101)
    begin
        if (ap_sig_101) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st24_fsm_23_assign_proc : process(ap_sig_110)
    begin
        if (ap_sig_110) then 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_137)
    begin
        if (ap_sig_137) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st43_fsm_42_assign_proc : process(ap_sig_150)
    begin
        if (ap_sig_150) then 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st44_fsm_43_assign_proc : process(ap_sig_162)
    begin
        if (ap_sig_162) then 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_nseq_ST_st24_fsm_23_assign_proc : process(ap_sig_1914)
    begin
        if (ap_sig_1914) then 
            ap_sig_nseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_nseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;

    ct_V_address0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_in_V_address0;
    ct_V_ce0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_in_V_ce0;
    exitcond_i_i_i_fu_275_p2 <= "1" when (i_assign_reg_133 = ap_const_lv8_80) else "0";

    grp_secure_enclave_key_store_aes_fu_197_ap_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st22_fsm_21, grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st25_fsm_24, grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done, ap_sig_cseq_ST_st44_fsm_43, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_done) and (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) and (ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_done)) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            grp_secure_enclave_key_store_aes_fu_197_ap_ce <= ap_const_logic_0;
        else 
            grp_secure_enclave_key_store_aes_fu_197_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_secure_enclave_key_store_aes_fu_197_ap_start_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            grp_secure_enclave_key_store_aes_fu_197_ap_start <= ap_const_logic_1;
        else 
            grp_secure_enclave_key_store_aes_fu_197_ap_start <= ap_reg_grp_secure_enclave_key_store_aes_fu_197_ap_start;
        end if; 
    end process;


    grp_secure_enclave_key_store_aes_fu_197_inptext_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_return, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            grp_secure_enclave_key_store_aes_fu_197_inptext_V_read <= grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_return;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_secure_enclave_key_store_aes_fu_197_inptext_V_read <= ap_const_lv128_lc_1;
        else 
            grp_secure_enclave_key_store_aes_fu_197_inptext_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start <= ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_ap_start;
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_encrypt <= ap_const_logic_0;
    grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start <= ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_245_ap_start;

    grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V_assign_proc : process(iv_V, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V <= ap_const_lv128_lc_2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V <= iv_V;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V <= ap_const_lv128_lc_1;
        else 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_d_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_secure_enclave_key_store_ghash_iteration_fu_245_x_prev_V_assign_proc : process(reg_259, ap_sig_cseq_ST_st22_fsm_21, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23))) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_x_prev_V <= reg_259;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_x_prev_V <= ap_const_lv128_lc_1;
        else 
            grp_secure_enclave_key_store_ghash_iteration_fu_245_x_prev_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_assign_cast1_fu_271_p1 <= std_logic_vector(resize(unsigned(i_assign_reg_133),32));
    i_fu_281_p2 <= std_logic_vector(unsigned(i_assign_reg_133) + unsigned(ap_const_lv8_1));
    lhs_V_r_V_i_i_i_fu_308_p3 <= 
        z_V_fu_294_p2 when (tmp_5_fu_287_p3(0) = '1') else 
        lhs_V_1_reg_113;
    pt_V_address0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_address0;
    pt_V_ce0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_ce0;
    pt_V_d0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_d0;
    pt_V_we0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_144_data_out_V_we0;
    r_V_3_fu_316_p4 <= rhs_V_reg_124(127 downto 1);
    r_V_5_fu_326_p1 <= std_logic_vector(resize(unsigned(r_V_3_fu_316_p4),128));
    r_V_6_fu_266_p2 <= (ghash_prev_V_reg_358 xor ap_const_lv128_lc_3);
    r_V_fu_330_p2 <= (ghash_final_out_V_reg_102 xor encrypted_counter_zero_V_reg_368);
    tmp_5_fu_287_p3 <= hash_key_V_reg_346(to_integer(unsigned(i_assign_cast1_fu_271_p1)) downto to_integer(unsigned(i_assign_cast1_fu_271_p1))) when (to_integer(unsigned(i_assign_cast1_fu_271_p1))>= 0 and to_integer(unsigned(i_assign_cast1_fu_271_p1))<=127) else "-";
    tmp_fu_335_p2 <= "1" when (r_V_fu_330_p2 = tag_in_V) else "0";
    z_V_fu_294_p2 <= (lhs_V_1_reg_113 xor rhs_V_reg_124);
end behav;
