// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "contact_discovery.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic contact_discovery::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic contact_discovery::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> contact_discovery::ap_ST_fsm_state1 = "1";
const sc_lv<10> contact_discovery::ap_ST_fsm_state2 = "10";
const sc_lv<10> contact_discovery::ap_ST_fsm_state3 = "100";
const sc_lv<10> contact_discovery::ap_ST_fsm_state4 = "1000";
const sc_lv<10> contact_discovery::ap_ST_fsm_state5 = "10000";
const sc_lv<10> contact_discovery::ap_ST_fsm_state6 = "100000";
const sc_lv<10> contact_discovery::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> contact_discovery::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> contact_discovery::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> contact_discovery::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> contact_discovery::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> contact_discovery::ap_const_lv32_3 = "11";
const sc_lv<1> contact_discovery::ap_const_lv1_0 = "0";
const sc_lv<32> contact_discovery::ap_const_lv32_4 = "100";
const int contact_discovery::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> contact_discovery::ap_const_lv32_1 = "1";
const sc_lv<32> contact_discovery::ap_const_lv32_2 = "10";
const sc_lv<32> contact_discovery::ap_const_lv32_5 = "101";
const sc_lv<1> contact_discovery::ap_const_lv1_1 = "1";
const sc_lv<7> contact_discovery::ap_const_lv7_0 = "0000000";
const sc_lv<32> contact_discovery::ap_const_lv32_6 = "110";
const sc_lv<32> contact_discovery::ap_const_lv32_7 = "111";
const sc_lv<32> contact_discovery::ap_const_lv32_8 = "1000";
const sc_lv<32> contact_discovery::ap_const_lv32_1F = "11111";
const sc_lv<25> contact_discovery::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<6> contact_discovery::ap_const_lv6_0 = "000000";
const sc_lv<7> contact_discovery::ap_const_lv7_40 = "1000000";
const sc_lv<7> contact_discovery::ap_const_lv7_1 = "1";
const sc_lv<32> contact_discovery::ap_const_lv32_9 = "1001";
const bool contact_discovery::ap_const_boolean_1 = true;

contact_discovery::contact_discovery(sc_module_name name) : sc_module(name), mVcdFile(0) {
    contacts_U = new contact_discoveryeOg("contacts_U");
    contacts_U->clk(ap_clk);
    contacts_U->reset(ap_rst_n_inv);
    contacts_U->address0(contacts_address0);
    contacts_U->ce0(contacts_ce0);
    contacts_U->we0(contacts_we0);
    contacts_U->d0(contact_in_q0);
    contacts_U->q0(contacts_q0);
    contact_discovery_AXILiteS_s_axi_U = new contact_discovery_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("contact_discovery_AXILiteS_s_axi_U");
    contact_discovery_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    contact_discovery_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    contact_discovery_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    contact_discovery_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    contact_discovery_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    contact_discovery_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    contact_discovery_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    contact_discovery_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    contact_discovery_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    contact_discovery_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    contact_discovery_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    contact_discovery_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    contact_discovery_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    contact_discovery_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    contact_discovery_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    contact_discovery_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    contact_discovery_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    contact_discovery_AXILiteS_s_axi_U->ACLK(ap_clk);
    contact_discovery_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    contact_discovery_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    contact_discovery_AXILiteS_s_axi_U->ap_start(ap_start);
    contact_discovery_AXILiteS_s_axi_U->interrupt(interrupt);
    contact_discovery_AXILiteS_s_axi_U->ap_ready(ap_ready);
    contact_discovery_AXILiteS_s_axi_U->ap_done(ap_done);
    contact_discovery_AXILiteS_s_axi_U->ap_idle(ap_idle);
    contact_discovery_AXILiteS_s_axi_U->operation(operation);
    contact_discovery_AXILiteS_s_axi_U->operation_ap_vld(operation_ap_vld);
    contact_discovery_AXILiteS_s_axi_U->contact_in_address0(contact_in_address0);
    contact_discovery_AXILiteS_s_axi_U->contact_in_ce0(contact_in_ce0);
    contact_discovery_AXILiteS_s_axi_U->contact_in_q0(contact_in_q0);
    contact_discovery_AXILiteS_s_axi_U->db_size_in(db_size_in);
    contact_discovery_AXILiteS_s_axi_U->error_out(error_out_1_data_reg);
    contact_discovery_AXILiteS_s_axi_U->contacts_size_out(contacts_size_out_1_data_reg);
    grp_match_db_contact_fu_259 = new match_db_contact("grp_match_db_contact_fu_259");
    grp_match_db_contact_fu_259->ap_clk(ap_clk);
    grp_match_db_contact_fu_259->ap_rst(ap_rst_n_inv);
    grp_match_db_contact_fu_259->ap_start(grp_match_db_contact_fu_259_ap_start);
    grp_match_db_contact_fu_259->ap_done(grp_match_db_contact_fu_259_ap_done);
    grp_match_db_contact_fu_259->ap_idle(grp_match_db_contact_fu_259_ap_idle);
    grp_match_db_contact_fu_259->ap_ready(grp_match_db_contact_fu_259_ap_ready);
    grp_match_db_contact_fu_259->db_stream_V_dout(db_stream_V_dout);
    grp_match_db_contact_fu_259->db_stream_V_empty_n(db_stream_V_empty_n);
    grp_match_db_contact_fu_259->db_stream_V_read(grp_match_db_contact_fu_259_db_stream_V_read);
    grp_match_db_contact_fu_259->contacts_address0(grp_match_db_contact_fu_259_contacts_address0);
    grp_match_db_contact_fu_259->contacts_ce0(grp_match_db_contact_fu_259_contacts_ce0);
    grp_match_db_contact_fu_259->contacts_q0(contacts_q0);
    grp_match_db_contact_fu_259->ap_return(grp_match_db_contact_fu_259_ap_return);
    db_stream_V_fifo_U = new fifo_w8_d128_A_x("db_stream_V_fifo_U");
    db_stream_V_fifo_U->clk(ap_clk);
    db_stream_V_fifo_U->reset(ap_rst_n_inv);
    db_stream_V_fifo_U->if_read_ce(ap_var_for_const0);
    db_stream_V_fifo_U->if_write_ce(ap_var_for_const0);
    db_stream_V_fifo_U->if_din(db_in_V_dout);
    db_stream_V_fifo_U->if_full_n(db_stream_V_full_n);
    db_stream_V_fifo_U->if_write(db_stream_V_write);
    db_stream_V_fifo_U->if_dout(db_stream_V_dout);
    db_stream_V_fifo_U->if_empty_n(db_stream_V_empty_n);
    db_stream_V_fifo_U->if_read(db_stream_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( operation_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( db_in_V_empty_n );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( db_stream_V_full_n );

    SC_METHOD(thread_ap_block_state4_ignore_call0);
    sensitive << ( db_in_V_empty_n );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( db_stream_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_contact_in_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_i_fu_344_p1 );

    SC_METHOD(thread_contact_in_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_contacts_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_db_contact_fu_259_contacts_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sum_i_cast_fu_369_p1 );

    SC_METHOD(thread_contacts_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_db_contact_fu_259_contacts_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_contacts_size_out_1_ack_in);
    sensitive << ( contacts_size_out_1_vld_reg );

    SC_METHOD(thread_contacts_size_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( contacts_size );
    sensitive << ( operation_read_read_fu_144_p2 );
    sensitive << ( storemerge_reg_247 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_contacts_size_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_contacts_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_database_index_1_fu_309_p2);
    sensitive << ( database_index_reg_214 );

    SC_METHOD(thread_db_in_V_blk_n);
    sensitive << ( db_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_315_p2 );

    SC_METHOD(thread_db_in_V_read);
    sensitive << ( db_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( db_stream_V_full_n );

    SC_METHOD(thread_db_stream_V_read);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_db_contact_fu_259_db_stream_V_read );

    SC_METHOD(thread_db_stream_V_write);
    sensitive << ( db_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( db_stream_V_full_n );

    SC_METHOD(thread_error_out_1_ack_in);
    sensitive << ( error_out_1_vld_reg );

    SC_METHOD(thread_error_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_287_p2 );

    SC_METHOD(thread_error_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_287_p2 );

    SC_METHOD(thread_exitcond4_fu_304_p2);
    sensitive << ( db_size_in );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( database_index_reg_214 );

    SC_METHOD(thread_exitcond_fu_315_p2);
    sensitive << ( db_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( db_stream_V_full_n );
    sensitive << ( i_reg_225 );

    SC_METHOD(thread_exitcond_i_fu_332_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_i_reg_236 );

    SC_METHOD(thread_grp_match_db_contact_fu_259_ap_start);
    sensitive << ( ap_reg_grp_match_db_contact_fu_259_ap_start );

    SC_METHOD(thread_i_4_fu_321_p2);
    sensitive << ( i_reg_225 );

    SC_METHOD(thread_i_6_fu_338_p2);
    sensitive << ( i_i_reg_236 );

    SC_METHOD(thread_icmp_fu_287_p2);
    sensitive << ( operation_read_read_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_278_p4 );

    SC_METHOD(thread_operation_ap_vld_in_sig);
    sensitive << ( operation_ap_vld );
    sensitive << ( operation_ap_vld_preg );

    SC_METHOD(thread_operation_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld );

    SC_METHOD(thread_operation_in_sig);
    sensitive << ( operation );
    sensitive << ( operation_preg );
    sensitive << ( operation_ap_vld );

    SC_METHOD(thread_operation_read_read_fu_144_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_in_sig );
    sensitive << ( operation_ap_vld_in_sig );

    SC_METHOD(thread_results_out_V_blk_n);
    sensitive << ( results_out_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_results_out_V_din);
    sensitive << ( results_out_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_db_contact_fu_259_ap_done );
    sensitive << ( grp_match_db_contact_fu_259_ap_return );

    SC_METHOD(thread_results_out_V_write);
    sensitive << ( results_out_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_db_contact_fu_259_ap_done );

    SC_METHOD(thread_sum_i_cast_fu_369_p1);
    sensitive << ( sum_i_reg_428 );

    SC_METHOD(thread_sum_i_fu_353_p2);
    sensitive << ( tmp_1_cast_reg_394 );
    sensitive << ( tmp_i_cast_fu_349_p1 );

    SC_METHOD(thread_tmp_13_fu_293_p1);
    sensitive << ( contacts_size_load_reg_382 );

    SC_METHOD(thread_tmp_1_cast_fu_296_p3);
    sensitive << ( tmp_13_fu_293_p1 );

    SC_METHOD(thread_tmp_2_fu_358_p2);
    sensitive << ( contacts_size_load_reg_382 );

    SC_METHOD(thread_tmp_fu_278_p4);
    sensitive << ( contacts_size_load_reg_382 );

    SC_METHOD(thread_tmp_i_cast_fu_349_p1);
    sensitive << ( i_i_reg_236 );

    SC_METHOD(thread_tmp_i_fu_344_p1);
    sensitive << ( i_i_reg_236 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( db_in_V_empty_n );
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( results_out_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( operation_read_read_fu_144_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_287_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( db_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_i_fu_332_p2 );
    sensitive << ( grp_match_db_contact_fu_259_ap_done );
    sensitive << ( exitcond4_fu_304_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    operation_preg = "00000000000000000000000000000000";
    operation_ap_vld_preg = SC_LOGIC_0;
    error_out_1_data_reg = "00000000000000000000000000000000";
    error_out_1_vld_reg = SC_LOGIC_0;
    contacts_size_out_1_data_reg = "00000000000000000000000000000000";
    contacts_size_out_1_vld_reg = SC_LOGIC_0;
    contacts_size = "00000000000000000000000000000000";
    ap_reg_grp_match_db_contact_fu_259_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "contact_discovery_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, db_in_V_dout, "(port)db_in_V_dout");
    sc_trace(mVcdFile, db_in_V_empty_n, "(port)db_in_V_empty_n");
    sc_trace(mVcdFile, db_in_V_read, "(port)db_in_V_read");
    sc_trace(mVcdFile, results_out_V_din, "(port)results_out_V_din");
    sc_trace(mVcdFile, results_out_V_full_n, "(port)results_out_V_full_n");
    sc_trace(mVcdFile, results_out_V_write, "(port)results_out_V_write");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, operation, "operation");
    sc_trace(mVcdFile, operation_preg, "operation_preg");
    sc_trace(mVcdFile, operation_ap_vld, "operation_ap_vld");
    sc_trace(mVcdFile, operation_in_sig, "operation_in_sig");
    sc_trace(mVcdFile, operation_ap_vld_preg, "operation_ap_vld_preg");
    sc_trace(mVcdFile, operation_ap_vld_in_sig, "operation_ap_vld_in_sig");
    sc_trace(mVcdFile, contact_in_address0, "contact_in_address0");
    sc_trace(mVcdFile, contact_in_ce0, "contact_in_ce0");
    sc_trace(mVcdFile, contact_in_q0, "contact_in_q0");
    sc_trace(mVcdFile, db_size_in, "db_size_in");
    sc_trace(mVcdFile, error_out_1_data_reg, "error_out_1_data_reg");
    sc_trace(mVcdFile, error_out_1_data_in, "error_out_1_data_in");
    sc_trace(mVcdFile, error_out_1_vld_reg, "error_out_1_vld_reg");
    sc_trace(mVcdFile, error_out_1_vld_in, "error_out_1_vld_in");
    sc_trace(mVcdFile, error_out_1_ack_in, "error_out_1_ack_in");
    sc_trace(mVcdFile, contacts_size_out_1_data_reg, "contacts_size_out_1_data_reg");
    sc_trace(mVcdFile, contacts_size_out_1_data_in, "contacts_size_out_1_data_in");
    sc_trace(mVcdFile, contacts_size_out_1_vld_reg, "contacts_size_out_1_vld_reg");
    sc_trace(mVcdFile, contacts_size_out_1_vld_in, "contacts_size_out_1_vld_in");
    sc_trace(mVcdFile, contacts_size_out_1_ack_in, "contacts_size_out_1_ack_in");
    sc_trace(mVcdFile, contacts_size, "contacts_size");
    sc_trace(mVcdFile, contacts_address0, "contacts_address0");
    sc_trace(mVcdFile, contacts_ce0, "contacts_ce0");
    sc_trace(mVcdFile, contacts_we0, "contacts_we0");
    sc_trace(mVcdFile, contacts_q0, "contacts_q0");
    sc_trace(mVcdFile, operation_blk_n, "operation_blk_n");
    sc_trace(mVcdFile, db_in_V_blk_n, "db_in_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond_fu_315_p2, "exitcond_fu_315_p2");
    sc_trace(mVcdFile, results_out_V_blk_n, "results_out_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, operation_read_read_fu_144_p2, "operation_read_read_fu_144_p2");
    sc_trace(mVcdFile, contacts_size_load_reg_382, "contacts_size_load_reg_382");
    sc_trace(mVcdFile, tmp_1_cast_fu_296_p3, "tmp_1_cast_fu_296_p3");
    sc_trace(mVcdFile, tmp_1_cast_reg_394, "tmp_1_cast_reg_394");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_fu_287_p2, "icmp_fu_287_p2");
    sc_trace(mVcdFile, database_index_1_fu_309_p2, "database_index_1_fu_309_p2");
    sc_trace(mVcdFile, database_index_1_reg_402, "database_index_1_reg_402");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_4_fu_321_p2, "i_4_fu_321_p2");
    sc_trace(mVcdFile, db_stream_V_full_n, "db_stream_V_full_n");
    sc_trace(mVcdFile, db_stream_V_write, "db_stream_V_write");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, i_6_fu_338_p2, "i_6_fu_338_p2");
    sc_trace(mVcdFile, i_6_reg_418, "i_6_reg_418");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_i_fu_332_p2, "exitcond_i_fu_332_p2");
    sc_trace(mVcdFile, sum_i_fu_353_p2, "sum_i_fu_353_p2");
    sc_trace(mVcdFile, sum_i_reg_428, "sum_i_reg_428");
    sc_trace(mVcdFile, tmp_2_fu_358_p2, "tmp_2_fu_358_p2");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_ap_start, "grp_match_db_contact_fu_259_ap_start");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_ap_done, "grp_match_db_contact_fu_259_ap_done");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_ap_idle, "grp_match_db_contact_fu_259_ap_idle");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_ap_ready, "grp_match_db_contact_fu_259_ap_ready");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_db_stream_V_read, "grp_match_db_contact_fu_259_db_stream_V_read");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_contacts_address0, "grp_match_db_contact_fu_259_contacts_address0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_contacts_ce0, "grp_match_db_contact_fu_259_contacts_ce0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_259_ap_return, "grp_match_db_contact_fu_259_ap_return");
    sc_trace(mVcdFile, database_index_reg_214, "database_index_reg_214");
    sc_trace(mVcdFile, i_reg_225, "i_reg_225");
    sc_trace(mVcdFile, exitcond4_fu_304_p2, "exitcond4_fu_304_p2");
    sc_trace(mVcdFile, i_i_reg_236, "i_i_reg_236");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, storemerge_reg_247, "storemerge_reg_247");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_reg_grp_match_db_contact_fu_259_ap_start, "ap_reg_grp_match_db_contact_fu_259_ap_start");
    sc_trace(mVcdFile, ap_block_state4_ignore_call0, "ap_block_state4_ignore_call0");
    sc_trace(mVcdFile, db_stream_V_dout, "db_stream_V_dout");
    sc_trace(mVcdFile, db_stream_V_empty_n, "db_stream_V_empty_n");
    sc_trace(mVcdFile, db_stream_V_read, "db_stream_V_read");
    sc_trace(mVcdFile, tmp_i_fu_344_p1, "tmp_i_fu_344_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_369_p1, "sum_i_cast_fu_369_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_fu_278_p4, "tmp_fu_278_p4");
    sc_trace(mVcdFile, tmp_13_fu_293_p1, "tmp_13_fu_293_p1");
    sc_trace(mVcdFile, tmp_i_cast_fu_349_p1, "tmp_i_cast_fu_349_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("contact_discovery.hdltvin.dat");
    mHdltvoutHandle.open("contact_discovery.hdltvout.dat");
}

contact_discovery::~contact_discovery() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete contacts_U;
    delete contact_discovery_AXILiteS_s_axi_U;
    delete grp_match_db_contact_fu_259;
    delete db_stream_V_fifo_U;
}

void contact_discovery::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void contact_discovery::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_match_db_contact_fu_259_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
             !((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read()))) && 
             esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_1))) {
            ap_reg_grp_match_db_contact_fu_259_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_match_db_contact_fu_259_ap_ready.read())) {
            ap_reg_grp_match_db_contact_fu_259_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_332_p2.read(), ap_const_lv1_1))) {
        contacts_size = tmp_2_fu_358_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2))) {
        contacts_size = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_259_ap_done.read())))) {
        database_index_reg_214 = database_index_1_reg_402.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1))) {
        database_index_reg_214 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_i_reg_236 = i_6_reg_418.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_287_p2.read()))) {
        i_i_reg_236 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_304_p2.read()))) {
        i_reg_225 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
                !((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read()))))) {
        i_reg_225 = i_4_fu_321_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        operation_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
            operation_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            operation_ap_vld_preg = operation_ap_vld.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        operation_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            operation_preg = operation.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        storemerge_reg_247 = contacts_size_load_reg_382.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_332_p2.read(), ap_const_lv1_1))) {
        storemerge_reg_247 = tmp_2_fu_358_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())))) {
        contacts_size_load_reg_382 = contacts_size.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        contacts_size_out_1_data_reg = contacts_size_out_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        database_index_1_reg_402 = database_index_1_fu_309_p2.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        error_out_1_data_reg = error_out_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_6_reg_418 = i_6_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_332_p2.read()))) {
        sum_i_reg_428 = sum_i_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_287_p2.read()))) {
        tmp_1_cast_reg_394 = tmp_1_cast_fu_296_p3.read();
    }
}

void contact_discovery::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void contact_discovery::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void contact_discovery::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void contact_discovery::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void contact_discovery::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void contact_discovery::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void contact_discovery::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void contact_discovery::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void contact_discovery::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void contact_discovery::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void contact_discovery::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read()));
}

void contact_discovery::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read()));
}

void contact_discovery::thread_ap_block_state4() {
    ap_block_state4 = ((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read())));
}

void contact_discovery::thread_ap_block_state4_ignore_call0() {
    ap_block_state4_ignore_call0 = ((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read())));
}

void contact_discovery::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void contact_discovery::thread_contact_in_address0() {
    contact_in_address0 =  (sc_lv<6>) (tmp_i_fu_344_p1.read());
}

void contact_discovery::thread_contact_in_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        contact_in_ce0 = ap_const_logic_1;
    } else {
        contact_in_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        contacts_address0 =  (sc_lv<13>) (sum_i_cast_fu_369_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        contacts_address0 = grp_match_db_contact_fu_259_contacts_address0.read();
    } else {
        contacts_address0 = "XXXXXXXXXXXXX";
    }
}

void contact_discovery::thread_contacts_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        contacts_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        contacts_ce0 = grp_match_db_contact_fu_259_contacts_ce0.read();
    } else {
        contacts_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_size_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        contacts_size_out_1_ack_in = ap_const_logic_1;
    } else {
        contacts_size_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_size_out_1_data_in() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        contacts_size_out_1_data_in = storemerge_reg_247.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2)))) {
        contacts_size_out_1_data_in = contacts_size.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2))) {
        contacts_size_out_1_data_in = ap_const_lv32_0;
    } else {
        contacts_size_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_contacts_size_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        contacts_size_out_1_vld_in = ap_const_logic_1;
    } else {
        contacts_size_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        contacts_we0 = ap_const_logic_1;
    } else {
        contacts_we0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_index_1_fu_309_p2() {
    database_index_1_fu_309_p2 = (!database_index_reg_214.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(database_index_reg_214.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void contact_discovery::thread_db_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0))) {
        db_in_V_blk_n = db_in_V_empty_n.read();
    } else {
        db_in_V_blk_n = ap_const_logic_1;
    }
}

void contact_discovery::thread_db_in_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read()))))) {
        db_in_V_read = ap_const_logic_1;
    } else {
        db_in_V_read = ap_const_logic_0;
    }
}

void contact_discovery::thread_db_stream_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        db_stream_V_read = grp_match_db_contact_fu_259_db_stream_V_read.read();
    } else {
        db_stream_V_read = ap_const_logic_0;
    }
}

void contact_discovery::thread_db_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read()))))) {
        db_stream_V_write = ap_const_logic_1;
    } else {
        db_stream_V_write = ap_const_logic_0;
    }
}

void contact_discovery::thread_error_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        error_out_1_ack_in = ap_const_logic_1;
    } else {
        error_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_error_out_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
         esl_seteq<1,1,1>(icmp_fu_287_p2.read(), ap_const_lv1_1))) {
        error_out_1_data_in = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2))) {
        error_out_1_data_in = ap_const_lv32_3;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read())))) {
        error_out_1_data_in = ap_const_lv32_0;
    } else {
        error_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_error_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && 
          esl_seteq<1,1,1>(icmp_fu_287_p2.read(), ap_const_lv1_1)))) {
        error_out_1_vld_in = ap_const_logic_1;
    } else {
        error_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_exitcond4_fu_304_p2() {
    exitcond4_fu_304_p2 = (!database_index_reg_214.read().is_01() || !db_size_in.read().is_01())? sc_lv<1>(): sc_lv<1>(database_index_reg_214.read() == db_size_in.read());
}

void contact_discovery::thread_exitcond_fu_315_p2() {
    exitcond_fu_315_p2 = (!i_reg_225.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_225.read() == ap_const_lv7_40);
}

void contact_discovery::thread_exitcond_i_fu_332_p2() {
    exitcond_i_fu_332_p2 = (!i_i_reg_236.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_236.read() == ap_const_lv7_40);
}

void contact_discovery::thread_grp_match_db_contact_fu_259_ap_start() {
    grp_match_db_contact_fu_259_ap_start = ap_reg_grp_match_db_contact_fu_259_ap_start.read();
}

void contact_discovery::thread_i_4_fu_321_p2() {
    i_4_fu_321_p2 = (!i_reg_225.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_225.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void contact_discovery::thread_i_6_fu_338_p2() {
    i_6_fu_338_p2 = (!i_i_reg_236.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i_reg_236.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void contact_discovery::thread_icmp_fu_287_p2() {
    icmp_fu_287_p2 = (!tmp_fu_278_p4.read().is_01() || !ap_const_lv25_0.is_01())? sc_lv<1>(): (sc_bigint<25>(tmp_fu_278_p4.read()) > sc_bigint<25>(ap_const_lv25_0));
}

void contact_discovery::thread_operation_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read())) {
        operation_ap_vld_in_sig = operation_ap_vld.read();
    } else {
        operation_ap_vld_in_sig = operation_ap_vld_preg.read();
    }
}

void contact_discovery::thread_operation_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        operation_blk_n = operation_ap_vld.read();
    } else {
        operation_blk_n = ap_const_logic_1;
    }
}

void contact_discovery::thread_operation_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read())) {
        operation_in_sig = operation.read();
    } else {
        operation_in_sig = operation_preg.read();
    }
}

void contact_discovery::thread_operation_read_read_fu_144_p2() {
    operation_read_read_fu_144_p2 = operation_in_sig.read();
}

void contact_discovery::thread_results_out_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        results_out_V_blk_n = results_out_V_full_n.read();
    } else {
        results_out_V_blk_n = ap_const_logic_1;
    }
}

void contact_discovery::thread_results_out_V_din() {
    results_out_V_din = esl_zext<32,1>(grp_match_db_contact_fu_259_ap_return.read());
}

void contact_discovery::thread_results_out_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_259_ap_done.read())))) {
        results_out_V_write = ap_const_logic_1;
    } else {
        results_out_V_write = ap_const_logic_0;
    }
}

void contact_discovery::thread_sum_i_cast_fu_369_p1() {
    sum_i_cast_fu_369_p1 = esl_sext<64,15>(sum_i_reg_428.read());
}

void contact_discovery::thread_sum_i_fu_353_p2() {
    sum_i_fu_353_p2 = (!tmp_i_cast_fu_349_p1.read().is_01() || !tmp_1_cast_reg_394.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_i_cast_fu_349_p1.read()) + sc_biguint<15>(tmp_1_cast_reg_394.read()));
}

void contact_discovery::thread_tmp_13_fu_293_p1() {
    tmp_13_fu_293_p1 = contacts_size_load_reg_382.read().range(9-1, 0);
}

void contact_discovery::thread_tmp_1_cast_fu_296_p3() {
    tmp_1_cast_fu_296_p3 = esl_concat<9,6>(tmp_13_fu_293_p1.read(), ap_const_lv6_0);
}

void contact_discovery::thread_tmp_2_fu_358_p2() {
    tmp_2_fu_358_p2 = (!contacts_size_load_reg_382.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(contacts_size_load_reg_382.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void contact_discovery::thread_tmp_fu_278_p4() {
    tmp_fu_278_p4 = contacts_size_load_reg_382.read().range(31, 7);
}

void contact_discovery::thread_tmp_i_cast_fu_349_p1() {
    tmp_i_cast_fu_349_p1 = esl_zext<15,7>(i_i_reg_236.read());
}

void contact_discovery::thread_tmp_i_fu_344_p1() {
    tmp_i_fu_344_p1 = esl_zext<64,7>(i_i_reg_236.read());
}

void contact_discovery::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_287_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_144_p2.read()) && esl_seteq<1,1,1>(icmp_fu_287_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(operation_read_read_fu_144_p2.read(), ap_const_lv32_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_304_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !((esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_in_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, db_stream_V_full_n.read()))) && esl_seteq<1,1,1>(exitcond_fu_315_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_259_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_i_fu_332_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void contact_discovery::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"db_in_V_dout\" :  \"" << db_in_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"db_in_V_empty_n\" :  \"" << db_in_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"db_in_V_read\" :  \"" << db_in_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"results_out_V_din\" :  \"" << results_out_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"results_out_V_full_n\" :  \"" << results_out_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"results_out_V_write\" :  \"" << results_out_V_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

