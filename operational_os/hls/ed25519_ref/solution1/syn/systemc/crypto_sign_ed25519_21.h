// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_sign_ed25519_21_HH_
#define _crypto_sign_ed25519_21_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct crypto_sign_ed25519_21 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > r_v_address0;
    sc_out< sc_logic > r_v_ce0;
    sc_out< sc_logic > r_v_we0;
    sc_out< sc_lv<32> > r_v_d0;
    sc_in< sc_lv<32> > r_v_q0;


    // Module declarations
    crypto_sign_ed25519_21(sc_module_name name);
    SC_HAS_PROCESS(crypto_sign_ed25519_21);

    ~crypto_sign_ed25519_21();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > r_v_addr_reg_252;
    sc_signal< sc_lv<32> > r_v_load_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_fu_124_p2;
    sc_signal< sc_lv<5> > i_29_fu_135_p2;
    sc_signal< sc_lv<5> > i_29_reg_275;
    sc_signal< sc_lv<5> > r_v_addr_9_reg_280;
    sc_signal< sc_lv<1> > m_1_fu_161_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > m_1_1_fu_187_p2;
    sc_signal< sc_lv<1> > m_1_1_reg_290;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > tmp_886_cast_cast_fu_207_p3;
    sc_signal< sc_lv<32> > tmp_886_cast_cast_reg_295;
    sc_signal< sc_lv<5> > r_v_addr_10_reg_303;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_753_fu_215_p2;
    sc_signal< sc_lv<5> > i_30_fu_226_p2;
    sc_signal< sc_lv<5> > i_30_reg_308;
    sc_signal< sc_lv<5> > i_reg_72;
    sc_signal< sc_lv<1> > m1_reg_83;
    sc_signal< sc_lv<5> > i_1_reg_93;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_s_fu_130_p1;
    sc_signal< sc_lv<64> > tmp_755_fu_221_p1;
    sc_signal< sc_lv<32> > tmp_752_fu_201_p2;
    sc_signal< sc_lv<32> > tmp_756_fu_232_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_754_fu_245_p2;
    sc_signal< sc_lv<32> > x_fu_104_p2;
    sc_signal< sc_lv<32> > x_2_fu_110_p2;
    sc_signal< sc_lv<32> > x_6_fu_141_p2;
    sc_signal< sc_lv<32> > x_7_fu_147_p2;
    sc_signal< sc_lv<1> > tmp_765_fu_153_p3;
    sc_signal< sc_lv<32> > x_4_fu_167_p2;
    sc_signal< sc_lv<1> > tmp_764_fu_173_p3;
    sc_signal< sc_lv<1> > x_5_fu_181_p2;
    sc_signal< sc_lv<32> > tmp_884_cast_cast_fu_193_p3;
    sc_signal< sc_lv<32> > tmp_890_cast_cast_fu_238_p3;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_1F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_FFFFFF13;
    static const sc_lv<32> ap_const_lv32_ED;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_29_fu_135_p2();
    void thread_i_30_fu_226_p2();
    void thread_m_1_1_fu_187_p2();
    void thread_m_1_fu_161_p2();
    void thread_r_v_addr_9_reg_280();
    void thread_r_v_addr_reg_252();
    void thread_r_v_address0();
    void thread_r_v_ce0();
    void thread_r_v_d0();
    void thread_r_v_we0();
    void thread_tmp_752_fu_201_p2();
    void thread_tmp_753_fu_215_p2();
    void thread_tmp_754_fu_245_p2();
    void thread_tmp_755_fu_221_p1();
    void thread_tmp_756_fu_232_p2();
    void thread_tmp_764_fu_173_p3();
    void thread_tmp_765_fu_153_p3();
    void thread_tmp_884_cast_cast_fu_193_p3();
    void thread_tmp_886_cast_cast_fu_207_p3();
    void thread_tmp_890_cast_cast_fu_238_p3();
    void thread_tmp_fu_124_p2();
    void thread_tmp_s_fu_130_p1();
    void thread_x_2_fu_110_p2();
    void thread_x_4_fu_167_p2();
    void thread_x_5_fu_181_p2();
    void thread_x_6_fu_141_p2();
    void thread_x_7_fu_147_p2();
    void thread_x_fu_104_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
