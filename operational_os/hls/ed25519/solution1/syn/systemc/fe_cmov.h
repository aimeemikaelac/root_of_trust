// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fe_cmov_HH_
#define _fe_cmov_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct fe_cmov : public sc_module {
    // Port declarations 35
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > f_0_read;
    sc_in< sc_lv<32> > f_1_read;
    sc_in< sc_lv<32> > f_2_read;
    sc_in< sc_lv<32> > f_3_read;
    sc_in< sc_lv<32> > f_4_read;
    sc_in< sc_lv<32> > f_5_read;
    sc_in< sc_lv<32> > f_6_read;
    sc_in< sc_lv<32> > f_7_read;
    sc_in< sc_lv<32> > f_8_read;
    sc_in< sc_lv<32> > f_9_read;
    sc_out< sc_lv<12> > g_address0;
    sc_out< sc_logic > g_ce0;
    sc_in< sc_lv<32> > g_q0;
    sc_out< sc_lv<12> > g_address1;
    sc_out< sc_logic > g_ce1;
    sc_in< sc_lv<32> > g_q1;
    sc_in< sc_lv<5> > tmp_7562;
    sc_in< sc_lv<3> > u_xy2d_offset;
    sc_in< sc_lv<1> > b;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;
    sc_out< sc_lv<32> > ap_return_8;
    sc_out< sc_lv<32> > ap_return_9;


    // Module declarations
    fe_cmov(sc_module_name name);
    SC_HAS_PROCESS(fe_cmov);

    ~fe_cmov();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > grp_fu_255_p2;
    sc_signal< sc_lv<12> > tmp_1438_reg_262;
    sc_signal< sc_lv<12> > reg_270;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<12> > reg_276;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<12> > tmp_1442_reg_282;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > tmp_1443_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > g0_reg_650;
    sc_signal< sc_lv<32> > g1_reg_655;
    sc_signal< sc_lv<32> > g2_reg_670;
    sc_signal< sc_lv<32> > g3_reg_675;
    sc_signal< sc_lv<32> > g4_reg_690;
    sc_signal< sc_lv<32> > g5_reg_695;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > g6_reg_710;
    sc_signal< sc_lv<32> > g7_reg_715;
    sc_signal< sc_lv<64> > tmp_1438_cast_fu_334_p1;
    sc_signal< sc_lv<64> > tmp_1439_cast_fu_345_p1;
    sc_signal< sc_lv<64> > tmp_1440_cast_fu_350_p1;
    sc_signal< sc_lv<64> > tmp_1441_cast_fu_355_p1;
    sc_signal< sc_lv<64> > tmp_1442_cast_fu_360_p1;
    sc_signal< sc_lv<64> > tmp_1443_cast_fu_365_p1;
    sc_signal< sc_lv<64> > tmp_1444_cast_fu_370_p1;
    sc_signal< sc_lv<64> > tmp_1445_cast_fu_375_p1;
    sc_signal< sc_lv<64> > tmp_1446_cast_fu_380_p1;
    sc_signal< sc_lv<64> > tmp_1447_cast_fu_385_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<12> > grp_fu_255_p0;
    sc_signal< sc_lv<12> > p_shl_cast_fu_314_p1;
    sc_signal< sc_lv<12> > grp_fu_255_p1;
    sc_signal< sc_lv<12> > p_shl1_cast_fu_329_p1;
    sc_signal< sc_lv<11> > tmp_fu_304_p4;
    sc_signal< sc_lv<9> > tmp_1437_fu_319_p4;
    sc_signal< sc_lv<12> > tmp_1439_fu_339_p2;
    sc_signal< sc_lv<32> > x0_fu_390_p2;
    sc_signal< sc_lv<32> > b_assign_cast_fu_442_p3;
    sc_signal< sc_lv<32> > x1_fu_395_p2;
    sc_signal< sc_lv<32> > x2_fu_400_p2;
    sc_signal< sc_lv<32> > x3_fu_405_p2;
    sc_signal< sc_lv<32> > x4_fu_410_p2;
    sc_signal< sc_lv<32> > x5_fu_415_p2;
    sc_signal< sc_lv<32> > x6_fu_420_p2;
    sc_signal< sc_lv<32> > x7_fu_425_p2;
    sc_signal< sc_lv<32> > x8_fu_430_p2;
    sc_signal< sc_lv<32> > x9_fu_436_p2;
    sc_signal< sc_lv<32> > x0_1_fu_450_p2;
    sc_signal< sc_lv<32> > x1_1_fu_456_p2;
    sc_signal< sc_lv<32> > x2_1_fu_462_p2;
    sc_signal< sc_lv<32> > x3_1_fu_468_p2;
    sc_signal< sc_lv<32> > x4_1_fu_474_p2;
    sc_signal< sc_lv<32> > x5_1_fu_480_p2;
    sc_signal< sc_lv<32> > x6_1_fu_486_p2;
    sc_signal< sc_lv<32> > x7_1_fu_492_p2;
    sc_signal< sc_lv<32> > x8_1_fu_498_p2;
    sc_signal< sc_lv<32> > x9_1_fu_504_p2;
    sc_signal< sc_lv<32> > f_0_write_assign_fu_510_p2;
    sc_signal< sc_lv<32> > f_1_write_assign_fu_516_p2;
    sc_signal< sc_lv<32> > f_2_write_assign_fu_522_p2;
    sc_signal< sc_lv<32> > f_3_write_assign_fu_528_p2;
    sc_signal< sc_lv<32> > f_4_write_assign_fu_534_p2;
    sc_signal< sc_lv<32> > f_5_write_assign_fu_540_p2;
    sc_signal< sc_lv<32> > f_6_write_assign_fu_546_p2;
    sc_signal< sc_lv<32> > f_7_write_assign_fu_552_p2;
    sc_signal< sc_lv<32> > f_8_write_assign_fu_558_p2;
    sc_signal< sc_lv<32> > f_9_write_assign_fu_564_p2;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<32> > ap_return_1_preg;
    sc_signal< sc_lv<32> > ap_return_2_preg;
    sc_signal< sc_lv<32> > ap_return_3_preg;
    sc_signal< sc_lv<32> > ap_return_4_preg;
    sc_signal< sc_lv<32> > ap_return_5_preg;
    sc_signal< sc_lv<32> > ap_return_6_preg;
    sc_signal< sc_lv<32> > ap_return_7_preg;
    sc_signal< sc_lv<32> > ap_return_8_preg;
    sc_signal< sc_lv<32> > ap_return_9_preg;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<12> ap_const_lv12_2;
    static const sc_lv<12> ap_const_lv12_3;
    static const sc_lv<12> ap_const_lv12_4;
    static const sc_lv<12> ap_const_lv12_5;
    static const sc_lv<12> ap_const_lv12_6;
    static const sc_lv<12> ap_const_lv12_7;
    static const sc_lv<12> ap_const_lv12_8;
    static const sc_lv<12> ap_const_lv12_9;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_assign_cast_fu_442_p3();
    void thread_f_0_write_assign_fu_510_p2();
    void thread_f_1_write_assign_fu_516_p2();
    void thread_f_2_write_assign_fu_522_p2();
    void thread_f_3_write_assign_fu_528_p2();
    void thread_f_4_write_assign_fu_534_p2();
    void thread_f_5_write_assign_fu_540_p2();
    void thread_f_6_write_assign_fu_546_p2();
    void thread_f_7_write_assign_fu_552_p2();
    void thread_f_8_write_assign_fu_558_p2();
    void thread_f_9_write_assign_fu_564_p2();
    void thread_g_address0();
    void thread_g_address1();
    void thread_g_ce0();
    void thread_g_ce1();
    void thread_grp_fu_255_p0();
    void thread_grp_fu_255_p1();
    void thread_grp_fu_255_p2();
    void thread_p_shl1_cast_fu_329_p1();
    void thread_p_shl_cast_fu_314_p1();
    void thread_tmp_1437_fu_319_p4();
    void thread_tmp_1438_cast_fu_334_p1();
    void thread_tmp_1439_cast_fu_345_p1();
    void thread_tmp_1439_fu_339_p2();
    void thread_tmp_1440_cast_fu_350_p1();
    void thread_tmp_1441_cast_fu_355_p1();
    void thread_tmp_1442_cast_fu_360_p1();
    void thread_tmp_1443_cast_fu_365_p1();
    void thread_tmp_1444_cast_fu_370_p1();
    void thread_tmp_1445_cast_fu_375_p1();
    void thread_tmp_1446_cast_fu_380_p1();
    void thread_tmp_1447_cast_fu_385_p1();
    void thread_tmp_fu_304_p4();
    void thread_x0_1_fu_450_p2();
    void thread_x0_fu_390_p2();
    void thread_x1_1_fu_456_p2();
    void thread_x1_fu_395_p2();
    void thread_x2_1_fu_462_p2();
    void thread_x2_fu_400_p2();
    void thread_x3_1_fu_468_p2();
    void thread_x3_fu_405_p2();
    void thread_x4_1_fu_474_p2();
    void thread_x4_fu_410_p2();
    void thread_x5_1_fu_480_p2();
    void thread_x5_fu_415_p2();
    void thread_x6_1_fu_486_p2();
    void thread_x6_fu_420_p2();
    void thread_x7_1_fu_492_p2();
    void thread_x7_fu_425_p2();
    void thread_x8_1_fu_498_p2();
    void thread_x8_fu_430_p2();
    void thread_x9_1_fu_504_p2();
    void thread_x9_fu_436_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
