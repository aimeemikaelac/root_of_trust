// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "transform_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic transform_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic transform_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<20> transform_1::ap_ST_fsm_state1 = "1";
const sc_lv<20> transform_1::ap_ST_fsm_state2 = "10";
const sc_lv<20> transform_1::ap_ST_fsm_state3 = "100";
const sc_lv<20> transform_1::ap_ST_fsm_state4 = "1000";
const sc_lv<20> transform_1::ap_ST_fsm_state5 = "10000";
const sc_lv<20> transform_1::ap_ST_fsm_state6 = "100000";
const sc_lv<20> transform_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<20> transform_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<20> transform_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<20> transform_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<20> transform_1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> transform_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> transform_1::ap_const_lv32_B = "1011";
const sc_lv<32> transform_1::ap_const_lv32_C = "1100";
const sc_lv<32> transform_1::ap_const_lv32_E = "1110";
const sc_lv<32> transform_1::ap_const_lv32_2 = "10";
const sc_lv<1> transform_1::ap_const_lv1_0 = "0";
const sc_lv<32> transform_1::ap_const_lv32_3 = "11";
const sc_lv<32> transform_1::ap_const_lv32_5 = "101";
const sc_lv<32> transform_1::ap_const_lv32_6 = "110";
const sc_lv<32> transform_1::ap_const_lv32_7 = "111";
const sc_lv<32> transform_1::ap_const_lv32_8 = "1000";
const sc_lv<32> transform_1::ap_const_lv32_A = "1010";
const sc_lv<32> transform_1::ap_const_lv32_D = "1101";
const sc_lv<32> transform_1::ap_const_lv32_12 = "10010";
const sc_lv<1> transform_1::ap_const_lv1_1 = "1";
const sc_lv<32> transform_1::ap_const_lv32_4 = "100";
const sc_lv<5> transform_1::ap_const_lv5_0 = "00000";
const sc_lv<32> transform_1::ap_const_lv32_1 = "1";
const sc_lv<7> transform_1::ap_const_lv7_10 = "10000";
const sc_lv<32> transform_1::ap_const_lv32_9 = "1001";
const sc_lv<4> transform_1::ap_const_lv4_0 = "0000";
const sc_lv<32> transform_1::ap_const_lv32_11 = "10001";
const sc_lv<7> transform_1::ap_const_lv7_0 = "0000000";
const sc_lv<32> transform_1::ap_const_lv32_13 = "10011";
const sc_lv<64> transform_1::ap_const_lv64_7 = "111";
const sc_lv<64> transform_1::ap_const_lv64_4 = "100";
const sc_lv<64> transform_1::ap_const_lv64_5 = "101";
const sc_lv<64> transform_1::ap_const_lv64_6 = "110";
const sc_lv<64> transform_1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> transform_1::ap_const_lv64_1 = "1";
const sc_lv<64> transform_1::ap_const_lv64_2 = "10";
const sc_lv<64> transform_1::ap_const_lv64_3 = "11";
const sc_lv<32> transform_1::ap_const_lv32_F = "1111";
const sc_lv<32> transform_1::ap_const_lv32_10 = "10000";
const sc_lv<5> transform_1::ap_const_lv5_10 = "10000";
const sc_lv<5> transform_1::ap_const_lv5_1 = "1";
const sc_lv<2> transform_1::ap_const_lv2_0 = "00";
const sc_lv<6> transform_1::ap_const_lv6_3 = "11";
const sc_lv<6> transform_1::ap_const_lv6_2 = "10";
const sc_lv<6> transform_1::ap_const_lv6_1 = "1";
const sc_lv<7> transform_1::ap_const_lv7_40 = "1000000";
const sc_lv<7> transform_1::ap_const_lv7_7E = "1111110";
const sc_lv<7> transform_1::ap_const_lv7_79 = "1111001";
const sc_lv<7> transform_1::ap_const_lv7_71 = "1110001";
const sc_lv<7> transform_1::ap_const_lv7_70 = "1110000";
const sc_lv<32> transform_1::ap_const_lv32_1F = "11111";
const sc_lv<7> transform_1::ap_const_lv7_1 = "1";
const sc_lv<4> transform_1::ap_const_lv4_8 = "1000";
const sc_lv<4> transform_1::ap_const_lv4_1 = "1";
const sc_lv<32> transform_1::ap_const_lv32_19 = "11001";
const sc_lv<32> transform_1::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> transform_1::ap_const_lv32_16 = "10110";
const bool transform_1::ap_const_boolean_1 = true;

transform_1::transform_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SHA256_sha256_k_U = new transform_SHA256_bkb("SHA256_sha256_k_U");
    SHA256_sha256_k_U->clk(ap_clk);
    SHA256_sha256_k_U->reset(ap_rst);
    SHA256_sha256_k_U->address0(SHA256_sha256_k_address0);
    SHA256_sha256_k_U->ce0(SHA256_sha256_k_ce0);
    SHA256_sha256_k_U->q0(SHA256_sha256_k_q0);
    w_U = new transform_w("w_U");
    w_U->clk(ap_clk);
    w_U->reset(ap_rst);
    w_U->address0(w_address0);
    w_U->ce0(w_ce0);
    w_U->we0(w_we0);
    w_U->d0(w_d0);
    w_U->q0(w_q0);
    w_U->address1(w_address1);
    w_U->ce1(w_ce1);
    w_U->we1(w_we1);
    w_U->d1(w_d1);
    w_U->q1(w_q1);
    wv_U = new transform_wv("wv_U");
    wv_U->clk(ap_clk);
    wv_U->reset(ap_rst);
    wv_U->address0(wv_address0);
    wv_U->ce0(wv_ce0);
    wv_U->we0(wv_we0);
    wv_U->d0(wv_d0);
    wv_U->q0(wv_q0);
    wv_U->address1(wv_address1);
    wv_U->ce1(wv_ce1);
    wv_U->we1(wv_we1);
    wv_U->d1(wv_d1);
    wv_U->q1(wv_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SHA256_m_h_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_30_fu_829_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( SHA256_m_h_addr_1_reg_1366 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_60_fu_1101_p1 );

    SC_METHOD(thread_SHA256_m_h_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_SHA256_m_h_d0);
    sensitive << ( SHA256_m_h_q0 );
    sensitive << ( wv_q1 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_SHA256_m_h_we0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_SHA256_sha256_k_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_44_fu_924_p1 );

    SC_METHOD(thread_SHA256_sha256_k_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_476_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_476_p2 );

    SC_METHOD(thread_exitcond1_fu_481_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_405 );

    SC_METHOD(thread_exitcond7_fu_834_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j_3_reg_440 );

    SC_METHOD(thread_exitcond8_fu_817_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( j_2_reg_429 );

    SC_METHOD(thread_exitcond9_fu_603_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_exitcond_fu_1089_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( j_4_reg_452 );

    SC_METHOD(thread_j_5_fu_487_p2);
    sensitive << ( j_reg_405 );

    SC_METHOD(thread_j_6_fu_811_p2);
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_j_7_fu_823_p2);
    sensitive << ( j_2_reg_429 );

    SC_METHOD(thread_j_8_fu_840_p2);
    sensitive << ( j_3_reg_440 );

    SC_METHOD(thread_j_9_fu_1095_p2);
    sensitive << ( j_4_reg_452 );

    SC_METHOD(thread_message_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_cast_fu_534_p1 );
    sensitive << ( sum4_cast_fu_579_p1 );

    SC_METHOD(thread_message_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum2_cast_fu_554_p1 );
    sensitive << ( sum6_cast_fu_583_p1 );

    SC_METHOD(thread_message_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_message_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_p_sum1_cast_fu_525_p1);
    sensitive << ( p_sum1_fu_519_p2 );

    SC_METHOD(thread_p_sum1_fu_519_p2);
    sensitive << ( tmp_8_fu_497_p3 );

    SC_METHOD(thread_p_sum3_cast_fu_545_p1);
    sensitive << ( p_sum3_fu_539_p2 );

    SC_METHOD(thread_p_sum3_fu_539_p2);
    sensitive << ( sub_block_0_sum_fu_505_p4 );

    SC_METHOD(thread_p_sum5_cast_fu_565_p1);
    sensitive << ( p_sum5_fu_559_p2 );

    SC_METHOD(thread_p_sum5_fu_559_p2);
    sensitive << ( tmp_8_fu_497_p3 );

    SC_METHOD(thread_sub_block_0_sum_cast_fu_515_p1);
    sensitive << ( sub_block_0_sum_fu_505_p4 );

    SC_METHOD(thread_sub_block_0_sum_fu_505_p4);
    sensitive << ( i_reg_391 );
    sensitive << ( tmp_20_fu_493_p1 );

    SC_METHOD(thread_sum2_cast_fu_554_p1);
    sensitive << ( sum2_fu_549_p2 );

    SC_METHOD(thread_sum2_fu_549_p2);
    sensitive << ( tmp_1 );
    sensitive << ( p_sum3_cast_fu_545_p1 );

    SC_METHOD(thread_sum4_cast_fu_579_p1);
    sensitive << ( sum4_reg_1194 );

    SC_METHOD(thread_sum4_fu_569_p2);
    sensitive << ( tmp_1 );
    sensitive << ( p_sum5_cast_fu_565_p1 );

    SC_METHOD(thread_sum6_cast_fu_583_p1);
    sensitive << ( sum6_reg_1199 );

    SC_METHOD(thread_sum6_fu_574_p2);
    sensitive << ( tmp_1 );
    sensitive << ( sub_block_0_sum_cast_fu_515_p1 );

    SC_METHOD(thread_sum_cast_fu_534_p1);
    sensitive << ( sum_fu_529_p2 );

    SC_METHOD(thread_sum_fu_529_p2);
    sensitive << ( tmp_1 );
    sensitive << ( p_sum1_cast_fu_525_p1 );

    SC_METHOD(thread_t1_fu_969_p2);
    sensitive << ( tmp9_fu_963_p2 );
    sensitive << ( tmp8_fu_952_p2 );

    SC_METHOD(thread_tmp10_fu_958_p2);
    sensitive << ( tmp_38_reg_1299 );
    sensitive << ( tmp_43_fu_946_p2 );

    SC_METHOD(thread_tmp11_fu_1041_p2);
    sensitive << ( tmp_50_fu_1033_p3 );
    sensitive << ( tmp_48_fu_1011_p3 );

    SC_METHOD(thread_tmp12_fu_1079_p2);
    sensitive << ( tmp_52_reg_1331 );
    sensitive << ( tmp_57_fu_1068_p2 );

    SC_METHOD(thread_tmp1_fu_706_p2);
    sensitive << ( tmp_11_fu_702_p1 );
    sensitive << ( tmp_7_fu_685_p3 );

    SC_METHOD(thread_tmp2_fu_776_p2);
    sensitive << ( tmp_24_fu_772_p1 );
    sensitive << ( tmp_21_fu_754_p3 );

    SC_METHOD(thread_tmp3_fu_788_p2);
    sensitive << ( w_q0 );
    sensitive << ( w_load_1_reg_1246 );

    SC_METHOD(thread_tmp4_fu_793_p2);
    sensitive << ( tmp_12_fu_712_p2 );
    sensitive << ( tmp_25_fu_782_p2 );

    SC_METHOD(thread_tmp5_fu_912_p2);
    sensitive << ( tmp_37_fu_904_p3 );
    sensitive << ( tmp_34_fu_882_p3 );

    SC_METHOD(thread_tmp8_fu_952_p2);
    sensitive << ( SHA256_sha256_k_q0 );
    sensitive << ( reg_463 );

    SC_METHOD(thread_tmp9_fu_963_p2);
    sensitive << ( w_q0 );
    sensitive << ( tmp10_fu_958_p2 );

    SC_METHOD(thread_tmp_10_fu_693_p4);
    sensitive << ( w_load_reg_1237 );

    SC_METHOD(thread_tmp_11_fu_702_p1);
    sensitive << ( tmp_10_fu_693_p4 );

    SC_METHOD(thread_tmp_12_fu_712_p2);
    sensitive << ( tmp1_fu_706_p2 );
    sensitive << ( tmp_9_fu_665_p3 );

    SC_METHOD(thread_tmp_13_fu_620_p2);
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_tmp_14_fu_626_p1);
    sensitive << ( tmp_13_fu_620_p2 );

    SC_METHOD(thread_tmp_15_fu_631_p2);
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_tmp_16_fu_637_p1);
    sensitive << ( tmp_15_fu_631_p2 );

    SC_METHOD(thread_tmp_17_fu_718_p4);
    sensitive << ( w_q1 );

    SC_METHOD(thread_tmp_18_fu_732_p3);
    sensitive << ( tmp_39_fu_728_p1 );
    sensitive << ( tmp_17_fu_718_p4 );

    SC_METHOD(thread_tmp_19_fu_740_p4);
    sensitive << ( w_q1 );

    SC_METHOD(thread_tmp_20_fu_493_p1);
    sensitive << ( j_reg_405 );

    SC_METHOD(thread_tmp_21_fu_754_p3);
    sensitive << ( tmp_51_fu_750_p1 );
    sensitive << ( tmp_19_fu_740_p4 );

    SC_METHOD(thread_tmp_22_fu_762_p4);
    sensitive << ( w_q1 );

    SC_METHOD(thread_tmp_23_fu_662_p1);
    sensitive << ( w_load_reg_1237 );

    SC_METHOD(thread_tmp_24_fu_772_p1);
    sensitive << ( tmp_22_fu_762_p4 );

    SC_METHOD(thread_tmp_25_fu_782_p2);
    sensitive << ( tmp2_fu_776_p2 );
    sensitive << ( tmp_18_fu_732_p3 );

    SC_METHOD(thread_tmp_26_fu_642_p2);
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_tmp_27_fu_648_p1);
    sensitive << ( tmp_26_fu_642_p2 );

    SC_METHOD(thread_tmp_29_fu_806_p1);
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_tmp_30_fu_829_p1);
    sensitive << ( j_2_reg_429 );

    SC_METHOD(thread_tmp_31_fu_846_p4);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_32_fu_860_p3);
    sensitive << ( tmp_54_fu_856_p1 );
    sensitive << ( tmp_31_fu_846_p4 );

    SC_METHOD(thread_tmp_33_fu_868_p4);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_34_fu_882_p3);
    sensitive << ( tmp_64_fu_878_p1 );
    sensitive << ( tmp_33_fu_868_p4 );

    SC_METHOD(thread_tmp_35_fu_890_p4);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_36_fu_682_p1);
    sensitive << ( w_load_reg_1237 );

    SC_METHOD(thread_tmp_37_fu_904_p3);
    sensitive << ( tmp_65_fu_900_p1 );
    sensitive << ( tmp_35_fu_890_p4 );

    SC_METHOD(thread_tmp_38_fu_918_p2);
    sensitive << ( tmp5_fu_912_p2 );
    sensitive << ( tmp_32_fu_860_p3 );

    SC_METHOD(thread_tmp_39_fu_728_p1);
    sensitive << ( w_q1 );

    SC_METHOD(thread_tmp_3_fu_598_p1);
    sensitive << ( j_reg_405 );

    SC_METHOD(thread_tmp_40_fu_930_p2);
    sensitive << ( wv_q1 );
    sensitive << ( wv_load_1_reg_1292 );

    SC_METHOD(thread_tmp_41_fu_935_p2);
    sensitive << ( wv_load_1_reg_1292 );

    SC_METHOD(thread_tmp_42_fu_940_p2);
    sensitive << ( wv_q0 );
    sensitive << ( tmp_41_fu_935_p2 );

    SC_METHOD(thread_tmp_43_fu_946_p2);
    sensitive << ( tmp_42_fu_940_p2 );
    sensitive << ( tmp_40_fu_930_p2 );

    SC_METHOD(thread_tmp_44_fu_924_p1);
    sensitive << ( j_3_reg_440 );

    SC_METHOD(thread_tmp_45_fu_975_p4);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_46_fu_989_p3);
    sensitive << ( tmp_66_fu_985_p1 );
    sensitive << ( tmp_45_fu_975_p4 );

    SC_METHOD(thread_tmp_47_fu_997_p4);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_48_fu_1011_p3);
    sensitive << ( tmp_67_fu_1007_p1 );
    sensitive << ( tmp_47_fu_997_p4 );

    SC_METHOD(thread_tmp_49_fu_1019_p4);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_4_fu_609_p2);
    sensitive << ( j_1_reg_417 );

    SC_METHOD(thread_tmp_50_fu_1033_p3);
    sensitive << ( tmp_68_fu_1029_p1 );
    sensitive << ( tmp_49_fu_1019_p4 );

    SC_METHOD(thread_tmp_51_fu_750_p1);
    sensitive << ( w_q1 );

    SC_METHOD(thread_tmp_52_fu_1047_p2);
    sensitive << ( tmp11_fu_1041_p2 );
    sensitive << ( tmp_46_fu_989_p3 );

    SC_METHOD(thread_tmp_53_fu_1053_p2);
    sensitive << ( wv_q1 );
    sensitive << ( wv_load_5_reg_1336 );

    SC_METHOD(thread_tmp_54_fu_856_p1);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_55_fu_1058_p2);
    sensitive << ( wv_q1 );
    sensitive << ( wv_load_5_reg_1336 );

    SC_METHOD(thread_tmp_56_fu_1063_p2);
    sensitive << ( wv_load_4_reg_1325 );
    sensitive << ( tmp_55_fu_1058_p2 );

    SC_METHOD(thread_tmp_57_fu_1068_p2);
    sensitive << ( tmp_56_fu_1063_p2 );
    sensitive << ( tmp_53_fu_1053_p2 );

    SC_METHOD(thread_tmp_58_fu_1074_p2);
    sensitive << ( wv_q0 );
    sensitive << ( t1_reg_1319 );

    SC_METHOD(thread_tmp_59_fu_1084_p2);
    sensitive << ( t1_reg_1319 );
    sensitive << ( tmp12_fu_1079_p2 );

    SC_METHOD(thread_tmp_5_fu_615_p1);
    sensitive << ( tmp_4_fu_609_p2 );

    SC_METHOD(thread_tmp_60_fu_1101_p1);
    sensitive << ( j_4_reg_452 );

    SC_METHOD(thread_tmp_64_fu_878_p1);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_65_fu_900_p1);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_66_fu_985_p1);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_67_fu_1007_p1);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_68_fu_1029_p1);
    sensitive << ( wv_q1 );

    SC_METHOD(thread_tmp_6_fu_653_p4);
    sensitive << ( w_load_reg_1237 );

    SC_METHOD(thread_tmp_7_fu_685_p3);
    sensitive << ( tmp_36_fu_682_p1 );
    sensitive << ( tmp_s_fu_673_p4 );

    SC_METHOD(thread_tmp_8_fu_497_p3);
    sensitive << ( tmp_20_fu_493_p1 );

    SC_METHOD(thread_tmp_9_fu_665_p3);
    sensitive << ( tmp_23_fu_662_p1 );
    sensitive << ( tmp_6_fu_653_p4 );

    SC_METHOD(thread_tmp_fu_476_p2);
    sensitive << ( block_nb );
    sensitive << ( tmptmp_fu_470_p2 );

    SC_METHOD(thread_tmp_s_fu_673_p4);
    sensitive << ( w_load_reg_1237 );

    SC_METHOD(thread_tmptmp_fu_470_p2);
    sensitive << ( i_reg_391 );

    SC_METHOD(thread_w_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_fu_598_p1 );
    sensitive << ( tmp_5_fu_615_p1 );
    sensitive << ( tmp_27_fu_648_p1 );
    sensitive << ( tmp_44_fu_924_p1 );

    SC_METHOD(thread_w_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_14_fu_626_p1 );
    sensitive << ( tmp_16_fu_637_p1 );
    sensitive << ( tmp_29_fu_806_p1 );

    SC_METHOD(thread_w_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_w_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_w_d0);
    sensitive << ( message_q0 );
    sensitive << ( message_q1 );
    sensitive << ( message_load_reg_1204 );
    sensitive << ( message_load_1_reg_1209 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_w_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp4_fu_793_p2 );
    sensitive << ( tmp3_fu_788_p2 );

    SC_METHOD(thread_w_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_w_we1);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_wv_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_30_reg_1274 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_60_fu_1101_p1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_d0);
    sensitive << ( SHA256_m_h_q0 );
    sensitive << ( reg_463 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( wv_load_5_reg_1336 );
    sensitive << ( tmp_58_reg_1343 );
    sensitive << ( tmp_59_reg_1348 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_d1);
    sensitive << ( reg_463 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( wv_load_1_reg_1292 );
    sensitive << ( wv_load_3_reg_1314 );
    sensitive << ( wv_load_4_reg_1325 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_we0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_wv_we1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_481_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond9_fu_603_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond8_fu_817_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( exitcond_fu_1089_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_476_p2 );
    sensitive << ( exitcond7_fu_834_p2 );

    ap_CS_fsm = "00000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "transform_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, SHA256_m_h_address0, "(port)SHA256_m_h_address0");
    sc_trace(mVcdFile, SHA256_m_h_ce0, "(port)SHA256_m_h_ce0");
    sc_trace(mVcdFile, SHA256_m_h_we0, "(port)SHA256_m_h_we0");
    sc_trace(mVcdFile, SHA256_m_h_d0, "(port)SHA256_m_h_d0");
    sc_trace(mVcdFile, SHA256_m_h_q0, "(port)SHA256_m_h_q0");
    sc_trace(mVcdFile, message_address0, "(port)message_address0");
    sc_trace(mVcdFile, message_ce0, "(port)message_ce0");
    sc_trace(mVcdFile, message_q0, "(port)message_q0");
    sc_trace(mVcdFile, message_address1, "(port)message_address1");
    sc_trace(mVcdFile, message_ce1, "(port)message_ce1");
    sc_trace(mVcdFile, message_q1, "(port)message_q1");
    sc_trace(mVcdFile, tmp_1, "(port)tmp_1");
    sc_trace(mVcdFile, block_nb, "(port)block_nb");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, SHA256_sha256_k_address0, "SHA256_sha256_k_address0");
    sc_trace(mVcdFile, SHA256_sha256_k_ce0, "SHA256_sha256_k_ce0");
    sc_trace(mVcdFile, SHA256_sha256_k_q0, "SHA256_sha256_k_q0");
    sc_trace(mVcdFile, wv_q0, "wv_q0");
    sc_trace(mVcdFile, reg_463, "reg_463");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, wv_q1, "wv_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, j_5_fu_487_p2, "j_5_fu_487_p2");
    sc_trace(mVcdFile, j_5_reg_1179, "j_5_reg_1179");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond1_fu_481_p2, "exitcond1_fu_481_p2");
    sc_trace(mVcdFile, sum4_fu_569_p2, "sum4_fu_569_p2");
    sc_trace(mVcdFile, sum4_reg_1194, "sum4_reg_1194");
    sc_trace(mVcdFile, sum6_fu_574_p2, "sum6_fu_574_p2");
    sc_trace(mVcdFile, sum6_reg_1199, "sum6_reg_1199");
    sc_trace(mVcdFile, message_load_reg_1204, "message_load_reg_1204");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, message_load_1_reg_1209, "message_load_1_reg_1209");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond9_fu_603_p2, "exitcond9_fu_603_p2");
    sc_trace(mVcdFile, w_q0, "w_q0");
    sc_trace(mVcdFile, w_load_reg_1237, "w_load_reg_1237");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, w_q1, "w_q1");
    sc_trace(mVcdFile, w_load_1_reg_1246, "w_load_1_reg_1246");
    sc_trace(mVcdFile, j_6_fu_811_p2, "j_6_fu_811_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, j_7_fu_823_p2, "j_7_fu_823_p2");
    sc_trace(mVcdFile, j_7_reg_1269, "j_7_reg_1269");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_30_fu_829_p1, "tmp_30_fu_829_p1");
    sc_trace(mVcdFile, tmp_30_reg_1274, "tmp_30_reg_1274");
    sc_trace(mVcdFile, exitcond8_fu_817_p2, "exitcond8_fu_817_p2");
    sc_trace(mVcdFile, j_8_fu_840_p2, "j_8_fu_840_p2");
    sc_trace(mVcdFile, j_8_reg_1287, "j_8_reg_1287");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, wv_load_1_reg_1292, "wv_load_1_reg_1292");
    sc_trace(mVcdFile, tmp_38_fu_918_p2, "tmp_38_fu_918_p2");
    sc_trace(mVcdFile, tmp_38_reg_1299, "tmp_38_reg_1299");
    sc_trace(mVcdFile, wv_load_3_reg_1314, "wv_load_3_reg_1314");
    sc_trace(mVcdFile, t1_fu_969_p2, "t1_fu_969_p2");
    sc_trace(mVcdFile, t1_reg_1319, "t1_reg_1319");
    sc_trace(mVcdFile, wv_load_4_reg_1325, "wv_load_4_reg_1325");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_52_fu_1047_p2, "tmp_52_fu_1047_p2");
    sc_trace(mVcdFile, tmp_52_reg_1331, "tmp_52_reg_1331");
    sc_trace(mVcdFile, wv_load_5_reg_1336, "wv_load_5_reg_1336");
    sc_trace(mVcdFile, tmp_58_fu_1074_p2, "tmp_58_fu_1074_p2");
    sc_trace(mVcdFile, tmp_58_reg_1343, "tmp_58_reg_1343");
    sc_trace(mVcdFile, tmp_59_fu_1084_p2, "tmp_59_fu_1084_p2");
    sc_trace(mVcdFile, tmp_59_reg_1348, "tmp_59_reg_1348");
    sc_trace(mVcdFile, j_9_fu_1095_p2, "j_9_fu_1095_p2");
    sc_trace(mVcdFile, j_9_reg_1356, "j_9_reg_1356");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, exitcond_fu_1089_p2, "exitcond_fu_1089_p2");
    sc_trace(mVcdFile, SHA256_m_h_addr_1_reg_1366, "SHA256_m_h_addr_1_reg_1366");
    sc_trace(mVcdFile, w_address0, "w_address0");
    sc_trace(mVcdFile, w_ce0, "w_ce0");
    sc_trace(mVcdFile, w_we0, "w_we0");
    sc_trace(mVcdFile, w_d0, "w_d0");
    sc_trace(mVcdFile, w_address1, "w_address1");
    sc_trace(mVcdFile, w_ce1, "w_ce1");
    sc_trace(mVcdFile, w_we1, "w_we1");
    sc_trace(mVcdFile, w_d1, "w_d1");
    sc_trace(mVcdFile, wv_address0, "wv_address0");
    sc_trace(mVcdFile, wv_ce0, "wv_ce0");
    sc_trace(mVcdFile, wv_we0, "wv_we0");
    sc_trace(mVcdFile, wv_d0, "wv_d0");
    sc_trace(mVcdFile, wv_address1, "wv_address1");
    sc_trace(mVcdFile, wv_ce1, "wv_ce1");
    sc_trace(mVcdFile, wv_we1, "wv_we1");
    sc_trace(mVcdFile, wv_d1, "wv_d1");
    sc_trace(mVcdFile, i_reg_391, "i_reg_391");
    sc_trace(mVcdFile, j_reg_405, "j_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_476_p2, "tmp_fu_476_p2");
    sc_trace(mVcdFile, j_1_reg_417, "j_1_reg_417");
    sc_trace(mVcdFile, j_2_reg_429, "j_2_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, j_3_reg_440, "j_3_reg_440");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, j_4_reg_452, "j_4_reg_452");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, exitcond7_fu_834_p2, "exitcond7_fu_834_p2");
    sc_trace(mVcdFile, sum_cast_fu_534_p1, "sum_cast_fu_534_p1");
    sc_trace(mVcdFile, sum2_cast_fu_554_p1, "sum2_cast_fu_554_p1");
    sc_trace(mVcdFile, sum4_cast_fu_579_p1, "sum4_cast_fu_579_p1");
    sc_trace(mVcdFile, sum6_cast_fu_583_p1, "sum6_cast_fu_583_p1");
    sc_trace(mVcdFile, tmp_3_fu_598_p1, "tmp_3_fu_598_p1");
    sc_trace(mVcdFile, tmp_5_fu_615_p1, "tmp_5_fu_615_p1");
    sc_trace(mVcdFile, tmp_14_fu_626_p1, "tmp_14_fu_626_p1");
    sc_trace(mVcdFile, tmp_16_fu_637_p1, "tmp_16_fu_637_p1");
    sc_trace(mVcdFile, tmp_27_fu_648_p1, "tmp_27_fu_648_p1");
    sc_trace(mVcdFile, tmp_29_fu_806_p1, "tmp_29_fu_806_p1");
    sc_trace(mVcdFile, tmp_44_fu_924_p1, "tmp_44_fu_924_p1");
    sc_trace(mVcdFile, tmp_60_fu_1101_p1, "tmp_60_fu_1101_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmptmp_fu_470_p2, "tmptmp_fu_470_p2");
    sc_trace(mVcdFile, tmp_20_fu_493_p1, "tmp_20_fu_493_p1");
    sc_trace(mVcdFile, sub_block_0_sum_fu_505_p4, "sub_block_0_sum_fu_505_p4");
    sc_trace(mVcdFile, tmp_8_fu_497_p3, "tmp_8_fu_497_p3");
    sc_trace(mVcdFile, p_sum1_fu_519_p2, "p_sum1_fu_519_p2");
    sc_trace(mVcdFile, p_sum1_cast_fu_525_p1, "p_sum1_cast_fu_525_p1");
    sc_trace(mVcdFile, sum_fu_529_p2, "sum_fu_529_p2");
    sc_trace(mVcdFile, p_sum3_fu_539_p2, "p_sum3_fu_539_p2");
    sc_trace(mVcdFile, p_sum3_cast_fu_545_p1, "p_sum3_cast_fu_545_p1");
    sc_trace(mVcdFile, sum2_fu_549_p2, "sum2_fu_549_p2");
    sc_trace(mVcdFile, p_sum5_fu_559_p2, "p_sum5_fu_559_p2");
    sc_trace(mVcdFile, p_sum5_cast_fu_565_p1, "p_sum5_cast_fu_565_p1");
    sc_trace(mVcdFile, sub_block_0_sum_cast_fu_515_p1, "sub_block_0_sum_cast_fu_515_p1");
    sc_trace(mVcdFile, tmp_4_fu_609_p2, "tmp_4_fu_609_p2");
    sc_trace(mVcdFile, tmp_13_fu_620_p2, "tmp_13_fu_620_p2");
    sc_trace(mVcdFile, tmp_15_fu_631_p2, "tmp_15_fu_631_p2");
    sc_trace(mVcdFile, tmp_26_fu_642_p2, "tmp_26_fu_642_p2");
    sc_trace(mVcdFile, tmp_23_fu_662_p1, "tmp_23_fu_662_p1");
    sc_trace(mVcdFile, tmp_6_fu_653_p4, "tmp_6_fu_653_p4");
    sc_trace(mVcdFile, tmp_36_fu_682_p1, "tmp_36_fu_682_p1");
    sc_trace(mVcdFile, tmp_s_fu_673_p4, "tmp_s_fu_673_p4");
    sc_trace(mVcdFile, tmp_10_fu_693_p4, "tmp_10_fu_693_p4");
    sc_trace(mVcdFile, tmp_11_fu_702_p1, "tmp_11_fu_702_p1");
    sc_trace(mVcdFile, tmp_7_fu_685_p3, "tmp_7_fu_685_p3");
    sc_trace(mVcdFile, tmp1_fu_706_p2, "tmp1_fu_706_p2");
    sc_trace(mVcdFile, tmp_9_fu_665_p3, "tmp_9_fu_665_p3");
    sc_trace(mVcdFile, tmp_39_fu_728_p1, "tmp_39_fu_728_p1");
    sc_trace(mVcdFile, tmp_17_fu_718_p4, "tmp_17_fu_718_p4");
    sc_trace(mVcdFile, tmp_51_fu_750_p1, "tmp_51_fu_750_p1");
    sc_trace(mVcdFile, tmp_19_fu_740_p4, "tmp_19_fu_740_p4");
    sc_trace(mVcdFile, tmp_22_fu_762_p4, "tmp_22_fu_762_p4");
    sc_trace(mVcdFile, tmp_24_fu_772_p1, "tmp_24_fu_772_p1");
    sc_trace(mVcdFile, tmp_21_fu_754_p3, "tmp_21_fu_754_p3");
    sc_trace(mVcdFile, tmp2_fu_776_p2, "tmp2_fu_776_p2");
    sc_trace(mVcdFile, tmp_18_fu_732_p3, "tmp_18_fu_732_p3");
    sc_trace(mVcdFile, tmp_12_fu_712_p2, "tmp_12_fu_712_p2");
    sc_trace(mVcdFile, tmp_25_fu_782_p2, "tmp_25_fu_782_p2");
    sc_trace(mVcdFile, tmp4_fu_793_p2, "tmp4_fu_793_p2");
    sc_trace(mVcdFile, tmp3_fu_788_p2, "tmp3_fu_788_p2");
    sc_trace(mVcdFile, tmp_54_fu_856_p1, "tmp_54_fu_856_p1");
    sc_trace(mVcdFile, tmp_31_fu_846_p4, "tmp_31_fu_846_p4");
    sc_trace(mVcdFile, tmp_64_fu_878_p1, "tmp_64_fu_878_p1");
    sc_trace(mVcdFile, tmp_33_fu_868_p4, "tmp_33_fu_868_p4");
    sc_trace(mVcdFile, tmp_65_fu_900_p1, "tmp_65_fu_900_p1");
    sc_trace(mVcdFile, tmp_35_fu_890_p4, "tmp_35_fu_890_p4");
    sc_trace(mVcdFile, tmp_37_fu_904_p3, "tmp_37_fu_904_p3");
    sc_trace(mVcdFile, tmp_34_fu_882_p3, "tmp_34_fu_882_p3");
    sc_trace(mVcdFile, tmp5_fu_912_p2, "tmp5_fu_912_p2");
    sc_trace(mVcdFile, tmp_32_fu_860_p3, "tmp_32_fu_860_p3");
    sc_trace(mVcdFile, tmp_41_fu_935_p2, "tmp_41_fu_935_p2");
    sc_trace(mVcdFile, tmp_42_fu_940_p2, "tmp_42_fu_940_p2");
    sc_trace(mVcdFile, tmp_40_fu_930_p2, "tmp_40_fu_930_p2");
    sc_trace(mVcdFile, tmp_43_fu_946_p2, "tmp_43_fu_946_p2");
    sc_trace(mVcdFile, tmp10_fu_958_p2, "tmp10_fu_958_p2");
    sc_trace(mVcdFile, tmp9_fu_963_p2, "tmp9_fu_963_p2");
    sc_trace(mVcdFile, tmp8_fu_952_p2, "tmp8_fu_952_p2");
    sc_trace(mVcdFile, tmp_66_fu_985_p1, "tmp_66_fu_985_p1");
    sc_trace(mVcdFile, tmp_45_fu_975_p4, "tmp_45_fu_975_p4");
    sc_trace(mVcdFile, tmp_67_fu_1007_p1, "tmp_67_fu_1007_p1");
    sc_trace(mVcdFile, tmp_47_fu_997_p4, "tmp_47_fu_997_p4");
    sc_trace(mVcdFile, tmp_68_fu_1029_p1, "tmp_68_fu_1029_p1");
    sc_trace(mVcdFile, tmp_49_fu_1019_p4, "tmp_49_fu_1019_p4");
    sc_trace(mVcdFile, tmp_50_fu_1033_p3, "tmp_50_fu_1033_p3");
    sc_trace(mVcdFile, tmp_48_fu_1011_p3, "tmp_48_fu_1011_p3");
    sc_trace(mVcdFile, tmp11_fu_1041_p2, "tmp11_fu_1041_p2");
    sc_trace(mVcdFile, tmp_46_fu_989_p3, "tmp_46_fu_989_p3");
    sc_trace(mVcdFile, tmp_55_fu_1058_p2, "tmp_55_fu_1058_p2");
    sc_trace(mVcdFile, tmp_56_fu_1063_p2, "tmp_56_fu_1063_p2");
    sc_trace(mVcdFile, tmp_53_fu_1053_p2, "tmp_53_fu_1053_p2");
    sc_trace(mVcdFile, tmp_57_fu_1068_p2, "tmp_57_fu_1068_p2");
    sc_trace(mVcdFile, tmp12_fu_1079_p2, "tmp12_fu_1079_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

transform_1::~transform_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete SHA256_sha256_k_U;
    delete w_U;
    delete wv_U;
}

void transform_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_1089_p2.read(), ap_const_lv1_1))) {
        i_reg_391 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_391 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_481_p2.read(), ap_const_lv1_1))) {
        j_1_reg_417 = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_1_reg_417 = j_6_fu_811_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond9_fu_603_p2.read(), ap_const_lv1_1))) {
        j_2_reg_429 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_2_reg_429 = j_7_reg_1269.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_817_p2.read(), ap_const_lv1_1))) {
        j_3_reg_440 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        j_3_reg_440 = j_8_reg_1287.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_834_p2.read()))) {
        j_4_reg_452 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j_4_reg_452 = j_9_reg_1356.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_476_p2.read()))) {
        j_reg_405 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_reg_405 = j_5_reg_1179.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        reg_463 = wv_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        reg_463 = wv_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1089_p2.read()))) {
        SHA256_m_h_addr_1_reg_1366 =  (sc_lv<3>) (tmp_60_fu_1101_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_5_reg_1179 = j_5_fu_487_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_7_reg_1269 = j_7_fu_823_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_8_reg_1287 = j_8_fu_840_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        j_9_reg_1356 = j_9_fu_1095_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        message_load_1_reg_1209 = message_q1.read();
        message_load_reg_1204 = message_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_481_p2.read(), ap_const_lv1_0))) {
        sum4_reg_1194 = sum4_fu_569_p2.read();
        sum6_reg_1199 = sum6_fu_574_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t1_reg_1319 = t1_fu_969_p2.read();
        wv_load_3_reg_1314 = wv_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_817_p2.read()))) {
        tmp_30_reg_1274 = tmp_30_fu_829_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_38_reg_1299 = tmp_38_fu_918_p2.read();
        wv_load_1_reg_1292 = wv_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_52_reg_1331 = tmp_52_fu_1047_p2.read();
        wv_load_4_reg_1325 = wv_q1.read();
        wv_load_5_reg_1336 = wv_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_58_reg_1343 = tmp_58_fu_1074_p2.read();
        tmp_59_reg_1348 = tmp_59_fu_1084_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        w_load_1_reg_1246 = w_q1.read();
        w_load_reg_1237 = w_q0.read();
    }
}

void transform_1::thread_SHA256_m_h_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        SHA256_m_h_address0 = SHA256_m_h_addr_1_reg_1366.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        SHA256_m_h_address0 =  (sc_lv<3>) (tmp_60_fu_1101_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        SHA256_m_h_address0 =  (sc_lv<3>) (tmp_30_fu_829_p1.read());
    } else {
        SHA256_m_h_address0 = "XXX";
    }
}

void transform_1::thread_SHA256_m_h_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        SHA256_m_h_ce0 = ap_const_logic_1;
    } else {
        SHA256_m_h_ce0 = ap_const_logic_0;
    }
}

void transform_1::thread_SHA256_m_h_d0() {
    SHA256_m_h_d0 = (!wv_q1.read().is_01() || !SHA256_m_h_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(wv_q1.read()) + sc_biguint<32>(SHA256_m_h_q0.read()));
}

void transform_1::thread_SHA256_m_h_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        SHA256_m_h_we0 = ap_const_logic_1;
    } else {
        SHA256_m_h_we0 = ap_const_logic_0;
    }
}

void transform_1::thread_SHA256_sha256_k_address0() {
    SHA256_sha256_k_address0 =  (sc_lv<6>) (tmp_44_fu_924_p1.read());
}

void transform_1::thread_SHA256_sha256_k_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        SHA256_sha256_k_ce0 = ap_const_logic_1;
    } else {
        SHA256_sha256_k_ce0 = ap_const_logic_0;
    }
}

void transform_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void transform_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void transform_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void transform_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void transform_1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void transform_1::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void transform_1::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void transform_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void transform_1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void transform_1::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void transform_1::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void transform_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void transform_1::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void transform_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void transform_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void transform_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void transform_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void transform_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void transform_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void transform_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void transform_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_476_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void transform_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void transform_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_476_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void transform_1::thread_exitcond1_fu_481_p2() {
    exitcond1_fu_481_p2 = (!j_reg_405.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_405.read() == ap_const_lv5_10);
}

void transform_1::thread_exitcond7_fu_834_p2() {
    exitcond7_fu_834_p2 = (!j_3_reg_440.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j_3_reg_440.read() == ap_const_lv7_40);
}

void transform_1::thread_exitcond8_fu_817_p2() {
    exitcond8_fu_817_p2 = (!j_2_reg_429.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_429.read() == ap_const_lv4_8);
}

void transform_1::thread_exitcond9_fu_603_p2() {
    exitcond9_fu_603_p2 = (!j_1_reg_417.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_417.read() == ap_const_lv7_40);
}

void transform_1::thread_exitcond_fu_1089_p2() {
    exitcond_fu_1089_p2 = (!j_4_reg_452.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_4_reg_452.read() == ap_const_lv4_8);
}

void transform_1::thread_j_5_fu_487_p2() {
    j_5_fu_487_p2 = (!j_reg_405.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_405.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void transform_1::thread_j_6_fu_811_p2() {
    j_6_fu_811_p2 = (!ap_const_lv7_1.is_01() || !j_1_reg_417.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(j_1_reg_417.read()));
}

void transform_1::thread_j_7_fu_823_p2() {
    j_7_fu_823_p2 = (!j_2_reg_429.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_2_reg_429.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void transform_1::thread_j_8_fu_840_p2() {
    j_8_fu_840_p2 = (!j_3_reg_440.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_3_reg_440.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void transform_1::thread_j_9_fu_1095_p2() {
    j_9_fu_1095_p2 = (!j_4_reg_452.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_4_reg_452.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void transform_1::thread_message_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        message_address0 =  (sc_lv<6>) (sum4_cast_fu_579_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        message_address0 =  (sc_lv<6>) (sum_cast_fu_534_p1.read());
    } else {
        message_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void transform_1::thread_message_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        message_address1 =  (sc_lv<6>) (sum6_cast_fu_583_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        message_address1 =  (sc_lv<6>) (sum2_cast_fu_554_p1.read());
    } else {
        message_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void transform_1::thread_message_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        message_ce0 = ap_const_logic_1;
    } else {
        message_ce0 = ap_const_logic_0;
    }
}

void transform_1::thread_message_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        message_ce1 = ap_const_logic_1;
    } else {
        message_ce1 = ap_const_logic_0;
    }
}

void transform_1::thread_p_sum1_cast_fu_525_p1() {
    p_sum1_cast_fu_525_p1 = esl_zext<7,6>(p_sum1_fu_519_p2.read());
}

void transform_1::thread_p_sum1_fu_519_p2() {
    p_sum1_fu_519_p2 = (tmp_8_fu_497_p3.read() | ap_const_lv6_3);
}

void transform_1::thread_p_sum3_cast_fu_545_p1() {
    p_sum3_cast_fu_545_p1 = esl_zext<7,6>(p_sum3_fu_539_p2.read());
}

void transform_1::thread_p_sum3_fu_539_p2() {
    p_sum3_fu_539_p2 = (sub_block_0_sum_fu_505_p4.read() | ap_const_lv6_2);
}

void transform_1::thread_p_sum5_cast_fu_565_p1() {
    p_sum5_cast_fu_565_p1 = esl_zext<7,6>(p_sum5_fu_559_p2.read());
}

void transform_1::thread_p_sum5_fu_559_p2() {
    p_sum5_fu_559_p2 = (tmp_8_fu_497_p3.read() | ap_const_lv6_1);
}

void transform_1::thread_sub_block_0_sum_cast_fu_515_p1() {
    sub_block_0_sum_cast_fu_515_p1 = esl_zext<7,6>(sub_block_0_sum_fu_505_p4.read());
}

void transform_1::thread_sub_block_0_sum_fu_505_p4() {
    sub_block_0_sum_fu_505_p4 = esl_concat<5,1>(esl_concat<4,1>(tmp_20_fu_493_p1.read(), ap_const_lv1_0), i_reg_391.read());
}

void transform_1::thread_sum2_cast_fu_554_p1() {
    sum2_cast_fu_554_p1 = esl_zext<64,7>(sum2_fu_549_p2.read());
}

void transform_1::thread_sum2_fu_549_p2() {
    sum2_fu_549_p2 = (!tmp_1.read().is_01() || !p_sum3_cast_fu_545_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1.read()) + sc_biguint<7>(p_sum3_cast_fu_545_p1.read()));
}

void transform_1::thread_sum4_cast_fu_579_p1() {
    sum4_cast_fu_579_p1 = esl_zext<64,7>(sum4_reg_1194.read());
}

void transform_1::thread_sum4_fu_569_p2() {
    sum4_fu_569_p2 = (!tmp_1.read().is_01() || !p_sum5_cast_fu_565_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1.read()) + sc_biguint<7>(p_sum5_cast_fu_565_p1.read()));
}

void transform_1::thread_sum6_cast_fu_583_p1() {
    sum6_cast_fu_583_p1 = esl_zext<64,7>(sum6_reg_1199.read());
}

void transform_1::thread_sum6_fu_574_p2() {
    sum6_fu_574_p2 = (!tmp_1.read().is_01() || !sub_block_0_sum_cast_fu_515_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1.read()) + sc_biguint<7>(sub_block_0_sum_cast_fu_515_p1.read()));
}

void transform_1::thread_sum_cast_fu_534_p1() {
    sum_cast_fu_534_p1 = esl_zext<64,7>(sum_fu_529_p2.read());
}

void transform_1::thread_sum_fu_529_p2() {
    sum_fu_529_p2 = (!tmp_1.read().is_01() || !p_sum1_cast_fu_525_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1.read()) + sc_biguint<7>(p_sum1_cast_fu_525_p1.read()));
}

void transform_1::thread_t1_fu_969_p2() {
    t1_fu_969_p2 = (!tmp9_fu_963_p2.read().is_01() || !tmp8_fu_952_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp9_fu_963_p2.read()) + sc_biguint<32>(tmp8_fu_952_p2.read()));
}

void transform_1::thread_tmp10_fu_958_p2() {
    tmp10_fu_958_p2 = (!tmp_38_reg_1299.read().is_01() || !tmp_43_fu_946_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_38_reg_1299.read()) + sc_biguint<32>(tmp_43_fu_946_p2.read()));
}

void transform_1::thread_tmp11_fu_1041_p2() {
    tmp11_fu_1041_p2 = (tmp_50_fu_1033_p3.read() ^ tmp_48_fu_1011_p3.read());
}

void transform_1::thread_tmp12_fu_1079_p2() {
    tmp12_fu_1079_p2 = (!tmp_52_reg_1331.read().is_01() || !tmp_57_fu_1068_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_52_reg_1331.read()) + sc_biguint<32>(tmp_57_fu_1068_p2.read()));
}

void transform_1::thread_tmp1_fu_706_p2() {
    tmp1_fu_706_p2 = (tmp_11_fu_702_p1.read() ^ tmp_7_fu_685_p3.read());
}

void transform_1::thread_tmp2_fu_776_p2() {
    tmp2_fu_776_p2 = (tmp_24_fu_772_p1.read() ^ tmp_21_fu_754_p3.read());
}

void transform_1::thread_tmp3_fu_788_p2() {
    tmp3_fu_788_p2 = (!w_load_1_reg_1246.read().is_01() || !w_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(w_load_1_reg_1246.read()) + sc_biguint<32>(w_q0.read()));
}

void transform_1::thread_tmp4_fu_793_p2() {
    tmp4_fu_793_p2 = (!tmp_12_fu_712_p2.read().is_01() || !tmp_25_fu_782_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_12_fu_712_p2.read()) + sc_biguint<32>(tmp_25_fu_782_p2.read()));
}

void transform_1::thread_tmp5_fu_912_p2() {
    tmp5_fu_912_p2 = (tmp_37_fu_904_p3.read() ^ tmp_34_fu_882_p3.read());
}

void transform_1::thread_tmp8_fu_952_p2() {
    tmp8_fu_952_p2 = (!SHA256_sha256_k_q0.read().is_01() || !reg_463.read().is_01())? sc_lv<32>(): (sc_biguint<32>(SHA256_sha256_k_q0.read()) + sc_biguint<32>(reg_463.read()));
}

void transform_1::thread_tmp9_fu_963_p2() {
    tmp9_fu_963_p2 = (!tmp10_fu_958_p2.read().is_01() || !w_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp10_fu_958_p2.read()) + sc_biguint<32>(w_q0.read()));
}

void transform_1::thread_tmp_10_fu_693_p4() {
    tmp_10_fu_693_p4 = w_load_reg_1237.read().range(31, 10);
}

void transform_1::thread_tmp_11_fu_702_p1() {
    tmp_11_fu_702_p1 = esl_zext<32,22>(tmp_10_fu_693_p4.read());
}

void transform_1::thread_tmp_12_fu_712_p2() {
    tmp_12_fu_712_p2 = (tmp1_fu_706_p2.read() ^ tmp_9_fu_665_p3.read());
}

void transform_1::thread_tmp_13_fu_620_p2() {
    tmp_13_fu_620_p2 = (!ap_const_lv7_79.is_01() || !j_1_reg_417.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_79) + sc_biguint<7>(j_1_reg_417.read()));
}

void transform_1::thread_tmp_14_fu_626_p1() {
    tmp_14_fu_626_p1 = esl_zext<64,7>(tmp_13_fu_620_p2.read());
}

void transform_1::thread_tmp_15_fu_631_p2() {
    tmp_15_fu_631_p2 = (!ap_const_lv7_71.is_01() || !j_1_reg_417.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_71) + sc_biguint<7>(j_1_reg_417.read()));
}

void transform_1::thread_tmp_16_fu_637_p1() {
    tmp_16_fu_637_p1 = esl_zext<64,7>(tmp_15_fu_631_p2.read());
}

void transform_1::thread_tmp_17_fu_718_p4() {
    tmp_17_fu_718_p4 = w_q1.read().range(31, 7);
}

void transform_1::thread_tmp_18_fu_732_p3() {
    tmp_18_fu_732_p3 = esl_concat<7,25>(tmp_39_fu_728_p1.read(), tmp_17_fu_718_p4.read());
}

void transform_1::thread_tmp_19_fu_740_p4() {
    tmp_19_fu_740_p4 = w_q1.read().range(31, 18);
}

void transform_1::thread_tmp_20_fu_493_p1() {
    tmp_20_fu_493_p1 = j_reg_405.read().range(4-1, 0);
}

void transform_1::thread_tmp_21_fu_754_p3() {
    tmp_21_fu_754_p3 = esl_concat<18,14>(tmp_51_fu_750_p1.read(), tmp_19_fu_740_p4.read());
}

void transform_1::thread_tmp_22_fu_762_p4() {
    tmp_22_fu_762_p4 = w_q1.read().range(31, 3);
}

void transform_1::thread_tmp_23_fu_662_p1() {
    tmp_23_fu_662_p1 = w_load_reg_1237.read().range(17-1, 0);
}

void transform_1::thread_tmp_24_fu_772_p1() {
    tmp_24_fu_772_p1 = esl_zext<32,29>(tmp_22_fu_762_p4.read());
}

void transform_1::thread_tmp_25_fu_782_p2() {
    tmp_25_fu_782_p2 = (tmp2_fu_776_p2.read() ^ tmp_18_fu_732_p3.read());
}

void transform_1::thread_tmp_26_fu_642_p2() {
    tmp_26_fu_642_p2 = (!ap_const_lv7_70.is_01() || !j_1_reg_417.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_70) + sc_biguint<7>(j_1_reg_417.read()));
}

void transform_1::thread_tmp_27_fu_648_p1() {
    tmp_27_fu_648_p1 = esl_zext<64,7>(tmp_26_fu_642_p2.read());
}

void transform_1::thread_tmp_29_fu_806_p1() {
    tmp_29_fu_806_p1 = esl_zext<64,7>(j_1_reg_417.read());
}

void transform_1::thread_tmp_30_fu_829_p1() {
    tmp_30_fu_829_p1 = esl_zext<64,4>(j_2_reg_429.read());
}

void transform_1::thread_tmp_31_fu_846_p4() {
    tmp_31_fu_846_p4 = wv_q1.read().range(31, 6);
}

void transform_1::thread_tmp_32_fu_860_p3() {
    tmp_32_fu_860_p3 = esl_concat<6,26>(tmp_54_fu_856_p1.read(), tmp_31_fu_846_p4.read());
}

void transform_1::thread_tmp_33_fu_868_p4() {
    tmp_33_fu_868_p4 = wv_q1.read().range(31, 11);
}

void transform_1::thread_tmp_34_fu_882_p3() {
    tmp_34_fu_882_p3 = esl_concat<11,21>(tmp_64_fu_878_p1.read(), tmp_33_fu_868_p4.read());
}

void transform_1::thread_tmp_35_fu_890_p4() {
    tmp_35_fu_890_p4 = wv_q1.read().range(31, 25);
}

void transform_1::thread_tmp_36_fu_682_p1() {
    tmp_36_fu_682_p1 = w_load_reg_1237.read().range(19-1, 0);
}

void transform_1::thread_tmp_37_fu_904_p3() {
    tmp_37_fu_904_p3 = esl_concat<25,7>(tmp_65_fu_900_p1.read(), tmp_35_fu_890_p4.read());
}

void transform_1::thread_tmp_38_fu_918_p2() {
    tmp_38_fu_918_p2 = (tmp5_fu_912_p2.read() ^ tmp_32_fu_860_p3.read());
}

void transform_1::thread_tmp_39_fu_728_p1() {
    tmp_39_fu_728_p1 = w_q1.read().range(7-1, 0);
}

void transform_1::thread_tmp_3_fu_598_p1() {
    tmp_3_fu_598_p1 = esl_zext<64,5>(j_reg_405.read());
}

void transform_1::thread_tmp_40_fu_930_p2() {
    tmp_40_fu_930_p2 = (wv_q1.read() & wv_load_1_reg_1292.read());
}

void transform_1::thread_tmp_41_fu_935_p2() {
    tmp_41_fu_935_p2 = (wv_load_1_reg_1292.read() ^ ap_const_lv32_FFFFFFFF);
}

void transform_1::thread_tmp_42_fu_940_p2() {
    tmp_42_fu_940_p2 = (wv_q0.read() & tmp_41_fu_935_p2.read());
}

void transform_1::thread_tmp_43_fu_946_p2() {
    tmp_43_fu_946_p2 = (tmp_42_fu_940_p2.read() ^ tmp_40_fu_930_p2.read());
}

void transform_1::thread_tmp_44_fu_924_p1() {
    tmp_44_fu_924_p1 = esl_zext<64,7>(j_3_reg_440.read());
}

void transform_1::thread_tmp_45_fu_975_p4() {
    tmp_45_fu_975_p4 = wv_q1.read().range(31, 2);
}

void transform_1::thread_tmp_46_fu_989_p3() {
    tmp_46_fu_989_p3 = esl_concat<2,30>(tmp_66_fu_985_p1.read(), tmp_45_fu_975_p4.read());
}

void transform_1::thread_tmp_47_fu_997_p4() {
    tmp_47_fu_997_p4 = wv_q1.read().range(31, 13);
}

void transform_1::thread_tmp_48_fu_1011_p3() {
    tmp_48_fu_1011_p3 = esl_concat<13,19>(tmp_67_fu_1007_p1.read(), tmp_47_fu_997_p4.read());
}

void transform_1::thread_tmp_49_fu_1019_p4() {
    tmp_49_fu_1019_p4 = wv_q1.read().range(31, 22);
}

void transform_1::thread_tmp_4_fu_609_p2() {
    tmp_4_fu_609_p2 = (!ap_const_lv7_7E.is_01() || !j_1_reg_417.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7E) + sc_biguint<7>(j_1_reg_417.read()));
}

void transform_1::thread_tmp_50_fu_1033_p3() {
    tmp_50_fu_1033_p3 = esl_concat<22,10>(tmp_68_fu_1029_p1.read(), tmp_49_fu_1019_p4.read());
}

void transform_1::thread_tmp_51_fu_750_p1() {
    tmp_51_fu_750_p1 = w_q1.read().range(18-1, 0);
}

void transform_1::thread_tmp_52_fu_1047_p2() {
    tmp_52_fu_1047_p2 = (tmp11_fu_1041_p2.read() ^ tmp_46_fu_989_p3.read());
}

void transform_1::thread_tmp_53_fu_1053_p2() {
    tmp_53_fu_1053_p2 = (wv_q1.read() & wv_load_5_reg_1336.read());
}

void transform_1::thread_tmp_54_fu_856_p1() {
    tmp_54_fu_856_p1 = wv_q1.read().range(6-1, 0);
}

void transform_1::thread_tmp_55_fu_1058_p2() {
    tmp_55_fu_1058_p2 = (wv_q1.read() ^ wv_load_5_reg_1336.read());
}

void transform_1::thread_tmp_56_fu_1063_p2() {
    tmp_56_fu_1063_p2 = (wv_load_4_reg_1325.read() & tmp_55_fu_1058_p2.read());
}

void transform_1::thread_tmp_57_fu_1068_p2() {
    tmp_57_fu_1068_p2 = (tmp_56_fu_1063_p2.read() ^ tmp_53_fu_1053_p2.read());
}

void transform_1::thread_tmp_58_fu_1074_p2() {
    tmp_58_fu_1074_p2 = (!wv_q0.read().is_01() || !t1_reg_1319.read().is_01())? sc_lv<32>(): (sc_biguint<32>(wv_q0.read()) + sc_biguint<32>(t1_reg_1319.read()));
}

void transform_1::thread_tmp_59_fu_1084_p2() {
    tmp_59_fu_1084_p2 = (!tmp12_fu_1079_p2.read().is_01() || !t1_reg_1319.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp12_fu_1079_p2.read()) + sc_biguint<32>(t1_reg_1319.read()));
}

void transform_1::thread_tmp_5_fu_615_p1() {
    tmp_5_fu_615_p1 = esl_zext<64,7>(tmp_4_fu_609_p2.read());
}

void transform_1::thread_tmp_60_fu_1101_p1() {
    tmp_60_fu_1101_p1 = esl_zext<64,4>(j_4_reg_452.read());
}

void transform_1::thread_tmp_64_fu_878_p1() {
    tmp_64_fu_878_p1 = wv_q1.read().range(11-1, 0);
}

void transform_1::thread_tmp_65_fu_900_p1() {
    tmp_65_fu_900_p1 = wv_q1.read().range(25-1, 0);
}

void transform_1::thread_tmp_66_fu_985_p1() {
    tmp_66_fu_985_p1 = wv_q1.read().range(2-1, 0);
}

void transform_1::thread_tmp_67_fu_1007_p1() {
    tmp_67_fu_1007_p1 = wv_q1.read().range(13-1, 0);
}

void transform_1::thread_tmp_68_fu_1029_p1() {
    tmp_68_fu_1029_p1 = wv_q1.read().range(22-1, 0);
}

void transform_1::thread_tmp_6_fu_653_p4() {
    tmp_6_fu_653_p4 = w_load_reg_1237.read().range(31, 17);
}

void transform_1::thread_tmp_7_fu_685_p3() {
    tmp_7_fu_685_p3 = esl_concat<19,13>(tmp_36_fu_682_p1.read(), tmp_s_fu_673_p4.read());
}

void transform_1::thread_tmp_8_fu_497_p3() {
    tmp_8_fu_497_p3 = esl_concat<4,2>(tmp_20_fu_493_p1.read(), ap_const_lv2_0);
}

void transform_1::thread_tmp_9_fu_665_p3() {
    tmp_9_fu_665_p3 = esl_concat<17,15>(tmp_23_fu_662_p1.read(), tmp_6_fu_653_p4.read());
}

void transform_1::thread_tmp_fu_476_p2() {
    tmp_fu_476_p2 = (block_nb.read() & tmptmp_fu_470_p2.read());
}

void transform_1::thread_tmp_s_fu_673_p4() {
    tmp_s_fu_673_p4 = w_load_reg_1237.read().range(31, 19);
}

void transform_1::thread_tmptmp_fu_470_p2() {
    tmptmp_fu_470_p2 = (i_reg_391.read() ^ ap_const_lv1_1);
}

void transform_1::thread_w_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        w_address0 =  (sc_lv<6>) (tmp_44_fu_924_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        w_address0 =  (sc_lv<6>) (tmp_27_fu_648_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        w_address0 =  (sc_lv<6>) (tmp_5_fu_615_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        w_address0 =  (sc_lv<6>) (tmp_3_fu_598_p1.read());
    } else {
        w_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void transform_1::thread_w_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        w_address1 =  (sc_lv<6>) (tmp_29_fu_806_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        w_address1 =  (sc_lv<6>) (tmp_16_fu_637_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        w_address1 =  (sc_lv<6>) (tmp_14_fu_626_p1.read());
    } else {
        w_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void transform_1::thread_w_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        w_ce0 = ap_const_logic_1;
    } else {
        w_ce0 = ap_const_logic_0;
    }
}

void transform_1::thread_w_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        w_ce1 = ap_const_logic_1;
    } else {
        w_ce1 = ap_const_logic_0;
    }
}

void transform_1::thread_w_d0() {
    w_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(message_q1.read(), message_q0.read()), message_load_1_reg_1209.read()), message_load_reg_1204.read());
}

void transform_1::thread_w_d1() {
    w_d1 = (!tmp4_fu_793_p2.read().is_01() || !tmp3_fu_788_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_fu_793_p2.read()) + sc_biguint<32>(tmp3_fu_788_p2.read()));
}

void transform_1::thread_w_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        w_we0 = ap_const_logic_1;
    } else {
        w_we0 = ap_const_logic_0;
    }
}

void transform_1::thread_w_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        w_we1 = ap_const_logic_1;
    } else {
        w_we1 = ap_const_logic_0;
    }
}

void transform_1::thread_wv_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        wv_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        wv_address0 =  (sc_lv<3>) (tmp_30_reg_1274.read());
    } else {
        wv_address0 = "XXX";
    }
}

void transform_1::thread_wv_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        wv_address1 =  (sc_lv<3>) (tmp_60_fu_1101_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        wv_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else {
        wv_address1 = "XXX";
    }
}

void transform_1::thread_wv_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        wv_ce0 = ap_const_logic_1;
    } else {
        wv_ce0 = ap_const_logic_0;
    }
}

void transform_1::thread_wv_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        wv_ce1 = ap_const_logic_1;
    } else {
        wv_ce1 = ap_const_logic_0;
    }
}

void transform_1::thread_wv_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        wv_d0 = tmp_59_reg_1348.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        wv_d0 = wv_load_5_reg_1336.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        wv_d0 = tmp_58_reg_1343.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        wv_d0 = reg_463.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        wv_d0 = SHA256_m_h_q0.read();
    } else {
        wv_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transform_1::thread_wv_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        wv_d1 = wv_load_4_reg_1325.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        wv_d1 = reg_463.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        wv_d1 = wv_load_1_reg_1292.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        wv_d1 = wv_load_3_reg_1314.read();
    } else {
        wv_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transform_1::thread_wv_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        wv_we0 = ap_const_logic_1;
    } else {
        wv_we0 = ap_const_logic_0;
    }
}

void transform_1::thread_wv_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        wv_we1 = ap_const_logic_1;
    } else {
        wv_we1 = ap_const_logic_0;
    }
}

void transform_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_476_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_481_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond9_fu_603_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond8_fu_817_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_834_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(exitcond_fu_1089_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

