// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sign_ed25519_14.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sign_ed25519_14::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sign_ed25519_14::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state1 = "1";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state2 = "10";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state3 = "100";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state4 = "1000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state5 = "10000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state6 = "100000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> crypto_sign_ed25519_14::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_2 = "10";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_6 = "110";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_1 = "1";
const sc_lv<1> crypto_sign_ed25519_14::ap_const_lv1_0 = "0";
const sc_lv<1> crypto_sign_ed25519_14::ap_const_lv1_1 = "1";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_3 = "11";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_7 = "111";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_8 = "1000";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_9 = "1001";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_A = "1010";
const sc_lv<4> crypto_sign_ed25519_14::ap_const_lv4_0 = "0000";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_5 = "101";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_0 = "0000000";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_1E = "11110";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_4 = "100";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_50 = "1010000";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_51 = "1010001";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_1F = "11111";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_52 = "1010010";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_53 = "1010011";
const sc_lv<64> crypto_sign_ed25519_14::ap_const_lv64_54 = "1010100";
const sc_lv<32> crypto_sign_ed25519_14::ap_const_lv32_B = "1011";
const sc_lv<4> crypto_sign_ed25519_14::ap_const_lv4_A = "1010";
const sc_lv<4> crypto_sign_ed25519_14::ap_const_lv4_1 = "1";
const sc_lv<2> crypto_sign_ed25519_14::ap_const_lv2_0 = "00";
const sc_lv<3> crypto_sign_ed25519_14::ap_const_lv3_0 = "000";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_1 = "1";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_2 = "10";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_3 = "11";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_4 = "100";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_5 = "101";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_6 = "110";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_7 = "111";
const sc_lv<7> crypto_sign_ed25519_14::ap_const_lv7_54 = "1010100";
const bool crypto_sign_ed25519_14::ap_const_boolean_1 = true;

crypto_sign_ed25519_14::crypto_sign_ed25519_14(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_carry_cast_fu_675_p1);
    sensitive << ( carry_reg_281 );

    SC_METHOD(thread_exitcond1_fu_332_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_269 );

    SC_METHOD(thread_exitcond_fu_679_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_1_reg_293 );

    SC_METHOD(thread_grp_fu_304_p4);
    sensitive << ( s_v_q0 );

    SC_METHOD(thread_i_56_fu_685_p2);
    sensitive << ( i_1_reg_293 );

    SC_METHOD(thread_i_cast_fu_328_p1);
    sensitive << ( i_reg_269 );

    SC_METHOD(thread_p_shl_cast_fu_352_p1);
    sensitive << ( p_shl_fu_344_p3 );

    SC_METHOD(thread_p_shl_fu_344_p3);
    sensitive << ( i_reg_269 );

    SC_METHOD(thread_r_addr_4_reg_856);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( r_addr_4_reg_856 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( r_addr_14_reg_881 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_752_fu_388_p1 );
    sensitive << ( tmp_758_fu_442_p1 );
    sensitive << ( tmp_768_fu_562_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_778_fu_590_p1 );
    sensitive << ( tmp_786_fu_696_p1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_r_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( r_addr_13_reg_876 );
    sensitive << ( exitcond_fu_679_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_755_fu_404_p1 );
    sensitive << ( tmp_765_fu_490_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_771_fu_572_p1 );
    sensitive << ( tmp_781_fu_604_p1 );
    sensitive << ( tmp_784_fu_691_p1 );

    SC_METHOD(thread_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_r_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_679_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_r_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_779_cast_fu_375_p1 );
    sensitive << ( tmp_797_cast_fu_465_p1 );
    sensitive << ( tmp_805_cast_fu_553_p1 );
    sensitive << ( tmp_821_cast_fu_581_p1 );
    sensitive << ( tmp_cast_fu_613_p1 );
    sensitive << ( tmp_769_cast_fu_641_p1 );
    sensitive << ( tmp_775_cast_fu_671_p1 );
    sensitive << ( tmp_788_fu_734_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_783_fu_776_p2 );

    SC_METHOD(thread_r_d1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_784_cast_fu_393_p1 );
    sensitive << ( tmp_800_cast_fu_480_p1 );
    sensitive << ( tmp_818_cast_fu_577_p1 );
    sensitive << ( tmp_826_cast_fu_595_p1 );
    sensitive << ( tmp_762_cast_fu_618_p1 );
    sensitive << ( tmp_772_cast_fu_656_p1 );
    sensitive << ( tmp_839_cast_fu_771_p1 );

    SC_METHOD(thread_r_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_r_we1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_s_v_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_332_p2 );
    sensitive << ( tmp_750_fu_366_p1 );
    sensitive << ( tmp_760_fu_418_p1 );

    SC_METHOD(thread_s_v_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_773_fu_432_p1 );

    SC_METHOD(thread_s_v_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_332_p2 );

    SC_METHOD(thread_s_v_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_745_fu_627_p3);
    sensitive << ( tmp_791_fu_623_p1 );

    SC_METHOD(thread_tmp_746_fu_635_p2);
    sensitive << ( reg_324 );
    sensitive << ( tmp_745_fu_627_p3 );

    SC_METHOD(thread_tmp_749_fu_356_p2);
    sensitive << ( p_shl_cast_fu_352_p1 );
    sensitive << ( i_cast_fu_328_p1 );

    SC_METHOD(thread_tmp_750_fu_366_p1);
    sensitive << ( tmp_776_cast_fu_362_p1 );

    SC_METHOD(thread_tmp_751_fu_380_p3);
    sensitive << ( i_reg_269 );

    SC_METHOD(thread_tmp_752_fu_388_p1);
    sensitive << ( tmp_751_fu_380_p3 );

    SC_METHOD(thread_tmp_754_fu_398_p2);
    sensitive << ( tmp_751_fu_380_p3 );

    SC_METHOD(thread_tmp_755_fu_404_p1);
    sensitive << ( tmp_754_fu_398_p2 );

    SC_METHOD(thread_tmp_757_fu_437_p2);
    sensitive << ( tmp_751_reg_806 );

    SC_METHOD(thread_tmp_758_fu_442_p1);
    sensitive << ( tmp_757_fu_437_p2 );

    SC_METHOD(thread_tmp_759_fu_409_p2);
    sensitive << ( tmp_749_reg_790 );

    SC_METHOD(thread_tmp_760_fu_418_p1);
    sensitive << ( tmp_792_cast_fu_414_p1 );

    SC_METHOD(thread_tmp_761_fu_451_p3);
    sensitive << ( tmp_793_fu_447_p1 );

    SC_METHOD(thread_tmp_762_cast_fu_618_p1);
    sensitive << ( grp_fu_304_p4 );

    SC_METHOD(thread_tmp_762_fu_459_p2);
    sensitive << ( reg_324 );
    sensitive << ( tmp_761_fu_451_p3 );

    SC_METHOD(thread_tmp_764_fu_485_p2);
    sensitive << ( tmp_751_reg_806 );

    SC_METHOD(thread_tmp_765_fu_490_p1);
    sensitive << ( tmp_764_fu_485_p2 );

    SC_METHOD(thread_tmp_767_fu_557_p2);
    sensitive << ( tmp_751_reg_806 );

    SC_METHOD(thread_tmp_768_fu_562_p1);
    sensitive << ( tmp_767_fu_557_p2 );

    SC_METHOD(thread_tmp_769_cast_fu_641_p1);
    sensitive << ( tmp_746_fu_635_p2 );

    SC_METHOD(thread_tmp_770_fu_567_p2);
    sensitive << ( tmp_751_reg_806 );

    SC_METHOD(thread_tmp_771_cast_fu_646_p4);
    sensitive << ( s_v_q1 );

    SC_METHOD(thread_tmp_771_fu_572_p1);
    sensitive << ( tmp_770_fu_567_p2 );

    SC_METHOD(thread_tmp_772_cast_fu_656_p1);
    sensitive << ( tmp_771_cast_fu_646_p4 );

    SC_METHOD(thread_tmp_772_fu_423_p2);
    sensitive << ( tmp_749_reg_790 );

    SC_METHOD(thread_tmp_773_fu_432_p1);
    sensitive << ( tmp_813_cast_fu_428_p1 );

    SC_METHOD(thread_tmp_774_fu_519_p3);
    sensitive << ( tmp_794_fu_515_p1 );

    SC_METHOD(thread_tmp_775_cast_fu_671_p1);
    sensitive << ( tmp_774_cast_reg_851 );

    SC_METHOD(thread_tmp_775_fu_527_p2);
    sensitive << ( tmp_774_fu_519_p3 );
    sensitive << ( tmp_809_cast_fu_505_p4 );

    SC_METHOD(thread_tmp_776_cast_fu_362_p1);
    sensitive << ( tmp_749_fu_356_p2 );

    SC_METHOD(thread_tmp_777_fu_585_p2);
    sensitive << ( tmp_751_reg_806 );

    SC_METHOD(thread_tmp_778_fu_590_p1);
    sensitive << ( tmp_777_fu_585_p2 );

    SC_METHOD(thread_tmp_779_cast_fu_375_p1);
    sensitive << ( tmp_792_fu_371_p1 );

    SC_METHOD(thread_tmp_77_fu_705_p1);
    sensitive << ( carry_reg_281 );

    SC_METHOD(thread_tmp_780_fu_599_p2);
    sensitive << ( tmp_751_reg_806 );

    SC_METHOD(thread_tmp_781_fu_604_p1);
    sensitive << ( tmp_780_fu_599_p2 );

    SC_METHOD(thread_tmp_782_fu_338_p2);
    sensitive << ( i_reg_269 );

    SC_METHOD(thread_tmp_783_fu_776_p2);
    sensitive << ( r_q1 );
    sensitive << ( carry_cast_reg_862 );

    SC_METHOD(thread_tmp_784_cast_fu_393_p1);
    sensitive << ( grp_fu_304_p4 );

    SC_METHOD(thread_tmp_784_fu_691_p1);
    sensitive << ( i_1_reg_293 );

    SC_METHOD(thread_tmp_785_fu_709_p2);
    sensitive << ( r_q1 );
    sensitive << ( carry_cast_reg_862 );

    SC_METHOD(thread_tmp_786_fu_696_p1);
    sensitive << ( i_56_fu_685_p2 );

    SC_METHOD(thread_tmp_787_fu_730_p1);
    sensitive << ( tmp_9_fu_720_p4 );

    SC_METHOD(thread_tmp_788_fu_734_p2);
    sensitive << ( r_q0 );
    sensitive << ( tmp_787_fu_730_p1 );

    SC_METHOD(thread_tmp_790_fu_765_p2);
    sensitive << ( tmp_836_cast1_fu_741_p1 );
    sensitive << ( tmp_838_cast_fu_761_p1 );

    SC_METHOD(thread_tmp_791_fu_623_p1);
    sensitive << ( s_v_q1 );

    SC_METHOD(thread_tmp_792_cast_fu_414_p1);
    sensitive << ( tmp_759_fu_409_p2 );

    SC_METHOD(thread_tmp_792_fu_371_p1);
    sensitive << ( s_v_q0 );

    SC_METHOD(thread_tmp_793_fu_447_p1);
    sensitive << ( s_v_q0 );

    SC_METHOD(thread_tmp_794_fu_515_p1);
    sensitive << ( s_v_q1 );

    SC_METHOD(thread_tmp_795_fu_701_p1);
    sensitive << ( r_q1 );

    SC_METHOD(thread_tmp_796_fu_745_p3);
    sensitive << ( tmp_832_cast_fu_714_p2 );

    SC_METHOD(thread_tmp_797_cast_fu_465_p1);
    sensitive << ( tmp_762_fu_459_p2 );

    SC_METHOD(thread_tmp_799_cast_fu_470_p4);
    sensitive << ( s_v_q0 );

    SC_METHOD(thread_tmp_800_cast_fu_480_p1);
    sensitive << ( tmp_799_cast_fu_470_p4 );

    SC_METHOD(thread_tmp_805_cast_fu_553_p1);
    sensitive << ( tmp_804_cast_reg_826 );

    SC_METHOD(thread_tmp_809_cast_fu_505_p4);
    sensitive << ( s_v_q0 );

    SC_METHOD(thread_tmp_813_cast_fu_428_p1);
    sensitive << ( tmp_772_fu_423_p2 );

    SC_METHOD(thread_tmp_818_cast_fu_577_p1);
    sensitive << ( tmp_775_reg_831 );

    SC_METHOD(thread_tmp_821_cast_fu_581_p1);
    sensitive << ( tmp_820_cast_reg_836 );

    SC_METHOD(thread_tmp_826_cast_fu_595_p1);
    sensitive << ( tmp_825_cast_reg_841 );

    SC_METHOD(thread_tmp_832_cast_fu_714_p2);
    sensitive << ( tmp_795_fu_701_p1 );
    sensitive << ( tmp_77_fu_705_p1 );

    SC_METHOD(thread_tmp_836_cast1_fu_741_p1);
    sensitive << ( tmp_832_cast_fu_714_p2 );

    SC_METHOD(thread_tmp_838_cast_fu_761_p1);
    sensitive << ( tmp_s_fu_753_p3 );

    SC_METHOD(thread_tmp_839_cast_fu_771_p1);
    sensitive << ( tmp_790_fu_765_p2 );

    SC_METHOD(thread_tmp_9_fu_720_p4);
    sensitive << ( tmp_785_fu_709_p2 );

    SC_METHOD(thread_tmp_cast_fu_613_p1);
    sensitive << ( tmp_fu_609_p1 );

    SC_METHOD(thread_tmp_fu_609_p1);
    sensitive << ( s_v_q0 );

    SC_METHOD(thread_tmp_s_fu_753_p3);
    sensitive << ( tmp_796_fu_745_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_679_p2 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sign_ed25519_14_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_address0, "(port)r_address0");
    sc_trace(mVcdFile, r_ce0, "(port)r_ce0");
    sc_trace(mVcdFile, r_we0, "(port)r_we0");
    sc_trace(mVcdFile, r_d0, "(port)r_d0");
    sc_trace(mVcdFile, r_q0, "(port)r_q0");
    sc_trace(mVcdFile, r_address1, "(port)r_address1");
    sc_trace(mVcdFile, r_ce1, "(port)r_ce1");
    sc_trace(mVcdFile, r_we1, "(port)r_we1");
    sc_trace(mVcdFile, r_d1, "(port)r_d1");
    sc_trace(mVcdFile, r_q1, "(port)r_q1");
    sc_trace(mVcdFile, s_v_address0, "(port)s_v_address0");
    sc_trace(mVcdFile, s_v_ce0, "(port)s_v_ce0");
    sc_trace(mVcdFile, s_v_q0, "(port)s_v_q0");
    sc_trace(mVcdFile, s_v_address1, "(port)s_v_address1");
    sc_trace(mVcdFile, s_v_ce1, "(port)s_v_ce1");
    sc_trace(mVcdFile, s_v_q1, "(port)s_v_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_324, "reg_324");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_782_fu_338_p2, "tmp_782_fu_338_p2");
    sc_trace(mVcdFile, tmp_782_reg_785, "tmp_782_reg_785");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_749_fu_356_p2, "tmp_749_fu_356_p2");
    sc_trace(mVcdFile, tmp_749_reg_790, "tmp_749_reg_790");
    sc_trace(mVcdFile, exitcond1_fu_332_p2, "exitcond1_fu_332_p2");
    sc_trace(mVcdFile, tmp_751_fu_380_p3, "tmp_751_fu_380_p3");
    sc_trace(mVcdFile, tmp_751_reg_806, "tmp_751_reg_806");
    sc_trace(mVcdFile, tmp_804_cast_reg_826, "tmp_804_cast_reg_826");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_775_fu_527_p2, "tmp_775_fu_527_p2");
    sc_trace(mVcdFile, tmp_775_reg_831, "tmp_775_reg_831");
    sc_trace(mVcdFile, tmp_820_cast_reg_836, "tmp_820_cast_reg_836");
    sc_trace(mVcdFile, tmp_825_cast_reg_841, "tmp_825_cast_reg_841");
    sc_trace(mVcdFile, tmp_774_cast_reg_851, "tmp_774_cast_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, r_addr_4_reg_856, "r_addr_4_reg_856");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, carry_cast_fu_675_p1, "carry_cast_fu_675_p1");
    sc_trace(mVcdFile, carry_cast_reg_862, "carry_cast_reg_862");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_56_fu_685_p2, "i_56_fu_685_p2");
    sc_trace(mVcdFile, i_56_reg_871, "i_56_reg_871");
    sc_trace(mVcdFile, r_addr_13_reg_876, "r_addr_13_reg_876");
    sc_trace(mVcdFile, exitcond_fu_679_p2, "exitcond_fu_679_p2");
    sc_trace(mVcdFile, r_addr_14_reg_881, "r_addr_14_reg_881");
    sc_trace(mVcdFile, tmp_796_fu_745_p3, "tmp_796_fu_745_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_reg_269, "i_reg_269");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, carry_reg_281, "carry_reg_281");
    sc_trace(mVcdFile, i_1_reg_293, "i_1_reg_293");
    sc_trace(mVcdFile, tmp_750_fu_366_p1, "tmp_750_fu_366_p1");
    sc_trace(mVcdFile, tmp_752_fu_388_p1, "tmp_752_fu_388_p1");
    sc_trace(mVcdFile, tmp_755_fu_404_p1, "tmp_755_fu_404_p1");
    sc_trace(mVcdFile, tmp_760_fu_418_p1, "tmp_760_fu_418_p1");
    sc_trace(mVcdFile, tmp_773_fu_432_p1, "tmp_773_fu_432_p1");
    sc_trace(mVcdFile, tmp_758_fu_442_p1, "tmp_758_fu_442_p1");
    sc_trace(mVcdFile, tmp_765_fu_490_p1, "tmp_765_fu_490_p1");
    sc_trace(mVcdFile, tmp_768_fu_562_p1, "tmp_768_fu_562_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_771_fu_572_p1, "tmp_771_fu_572_p1");
    sc_trace(mVcdFile, tmp_778_fu_590_p1, "tmp_778_fu_590_p1");
    sc_trace(mVcdFile, tmp_781_fu_604_p1, "tmp_781_fu_604_p1");
    sc_trace(mVcdFile, tmp_784_fu_691_p1, "tmp_784_fu_691_p1");
    sc_trace(mVcdFile, tmp_786_fu_696_p1, "tmp_786_fu_696_p1");
    sc_trace(mVcdFile, tmp_779_cast_fu_375_p1, "tmp_779_cast_fu_375_p1");
    sc_trace(mVcdFile, tmp_784_cast_fu_393_p1, "tmp_784_cast_fu_393_p1");
    sc_trace(mVcdFile, tmp_797_cast_fu_465_p1, "tmp_797_cast_fu_465_p1");
    sc_trace(mVcdFile, tmp_800_cast_fu_480_p1, "tmp_800_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp_805_cast_fu_553_p1, "tmp_805_cast_fu_553_p1");
    sc_trace(mVcdFile, tmp_818_cast_fu_577_p1, "tmp_818_cast_fu_577_p1");
    sc_trace(mVcdFile, tmp_821_cast_fu_581_p1, "tmp_821_cast_fu_581_p1");
    sc_trace(mVcdFile, tmp_826_cast_fu_595_p1, "tmp_826_cast_fu_595_p1");
    sc_trace(mVcdFile, tmp_cast_fu_613_p1, "tmp_cast_fu_613_p1");
    sc_trace(mVcdFile, tmp_762_cast_fu_618_p1, "tmp_762_cast_fu_618_p1");
    sc_trace(mVcdFile, tmp_769_cast_fu_641_p1, "tmp_769_cast_fu_641_p1");
    sc_trace(mVcdFile, tmp_772_cast_fu_656_p1, "tmp_772_cast_fu_656_p1");
    sc_trace(mVcdFile, tmp_775_cast_fu_671_p1, "tmp_775_cast_fu_671_p1");
    sc_trace(mVcdFile, tmp_788_fu_734_p2, "tmp_788_fu_734_p2");
    sc_trace(mVcdFile, tmp_839_cast_fu_771_p1, "tmp_839_cast_fu_771_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_783_fu_776_p2, "tmp_783_fu_776_p2");
    sc_trace(mVcdFile, p_shl_fu_344_p3, "p_shl_fu_344_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_352_p1, "p_shl_cast_fu_352_p1");
    sc_trace(mVcdFile, i_cast_fu_328_p1, "i_cast_fu_328_p1");
    sc_trace(mVcdFile, tmp_776_cast_fu_362_p1, "tmp_776_cast_fu_362_p1");
    sc_trace(mVcdFile, tmp_792_fu_371_p1, "tmp_792_fu_371_p1");
    sc_trace(mVcdFile, grp_fu_304_p4, "grp_fu_304_p4");
    sc_trace(mVcdFile, tmp_754_fu_398_p2, "tmp_754_fu_398_p2");
    sc_trace(mVcdFile, tmp_759_fu_409_p2, "tmp_759_fu_409_p2");
    sc_trace(mVcdFile, tmp_792_cast_fu_414_p1, "tmp_792_cast_fu_414_p1");
    sc_trace(mVcdFile, tmp_772_fu_423_p2, "tmp_772_fu_423_p2");
    sc_trace(mVcdFile, tmp_813_cast_fu_428_p1, "tmp_813_cast_fu_428_p1");
    sc_trace(mVcdFile, tmp_757_fu_437_p2, "tmp_757_fu_437_p2");
    sc_trace(mVcdFile, tmp_793_fu_447_p1, "tmp_793_fu_447_p1");
    sc_trace(mVcdFile, tmp_761_fu_451_p3, "tmp_761_fu_451_p3");
    sc_trace(mVcdFile, tmp_762_fu_459_p2, "tmp_762_fu_459_p2");
    sc_trace(mVcdFile, tmp_799_cast_fu_470_p4, "tmp_799_cast_fu_470_p4");
    sc_trace(mVcdFile, tmp_764_fu_485_p2, "tmp_764_fu_485_p2");
    sc_trace(mVcdFile, tmp_794_fu_515_p1, "tmp_794_fu_515_p1");
    sc_trace(mVcdFile, tmp_774_fu_519_p3, "tmp_774_fu_519_p3");
    sc_trace(mVcdFile, tmp_809_cast_fu_505_p4, "tmp_809_cast_fu_505_p4");
    sc_trace(mVcdFile, tmp_767_fu_557_p2, "tmp_767_fu_557_p2");
    sc_trace(mVcdFile, tmp_770_fu_567_p2, "tmp_770_fu_567_p2");
    sc_trace(mVcdFile, tmp_777_fu_585_p2, "tmp_777_fu_585_p2");
    sc_trace(mVcdFile, tmp_780_fu_599_p2, "tmp_780_fu_599_p2");
    sc_trace(mVcdFile, tmp_fu_609_p1, "tmp_fu_609_p1");
    sc_trace(mVcdFile, tmp_791_fu_623_p1, "tmp_791_fu_623_p1");
    sc_trace(mVcdFile, tmp_745_fu_627_p3, "tmp_745_fu_627_p3");
    sc_trace(mVcdFile, tmp_746_fu_635_p2, "tmp_746_fu_635_p2");
    sc_trace(mVcdFile, tmp_771_cast_fu_646_p4, "tmp_771_cast_fu_646_p4");
    sc_trace(mVcdFile, tmp_795_fu_701_p1, "tmp_795_fu_701_p1");
    sc_trace(mVcdFile, tmp_77_fu_705_p1, "tmp_77_fu_705_p1");
    sc_trace(mVcdFile, tmp_785_fu_709_p2, "tmp_785_fu_709_p2");
    sc_trace(mVcdFile, tmp_9_fu_720_p4, "tmp_9_fu_720_p4");
    sc_trace(mVcdFile, tmp_787_fu_730_p1, "tmp_787_fu_730_p1");
    sc_trace(mVcdFile, tmp_832_cast_fu_714_p2, "tmp_832_cast_fu_714_p2");
    sc_trace(mVcdFile, tmp_s_fu_753_p3, "tmp_s_fu_753_p3");
    sc_trace(mVcdFile, tmp_836_cast1_fu_741_p1, "tmp_836_cast1_fu_741_p1");
    sc_trace(mVcdFile, tmp_838_cast_fu_761_p1, "tmp_838_cast_fu_761_p1");
    sc_trace(mVcdFile, tmp_790_fu_765_p2, "tmp_790_fu_765_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

crypto_sign_ed25519_14::~crypto_sign_ed25519_14() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void crypto_sign_ed25519_14::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        carry_reg_281 = tmp_832_cast_fu_714_p2.read().range(2, 2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        carry_reg_281 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_1_reg_293 = i_56_reg_871.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_1_reg_293 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_269 = tmp_782_reg_785.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_269 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        carry_cast_reg_862 = carry_cast_fu_675_p1.read();
        i_56_reg_871 = i_56_fu_685_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_679_p2.read()))) {
        r_addr_13_reg_876 =  (sc_lv<7>) (tmp_784_fu_691_p1.read());
        r_addr_14_reg_881 =  (sc_lv<7>) (tmp_786_fu_696_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        reg_324 = s_v_q0.read().range(8, 6);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_0))) {
        tmp_749_reg_790 = tmp_749_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_751_reg_806 = tmp_751_fu_380_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_774_cast_reg_851 = s_v_q1.read().range(6, 4);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_775_reg_831 = tmp_775_fu_527_p2.read();
        tmp_804_cast_reg_826 = s_v_q0.read().range(6, 4);
        tmp_820_cast_reg_836 = s_v_q1.read().range(4, 2);
        tmp_825_cast_reg_841 = s_v_q1.read().range(7, 5);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_782_reg_785 = tmp_782_fu_338_p2.read();
    }
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sign_ed25519_14::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void crypto_sign_ed25519_14::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_carry_cast_fu_675_p1() {
    carry_cast_fu_675_p1 = esl_zext<8,1>(carry_reg_281.read());
}

void crypto_sign_ed25519_14::thread_exitcond1_fu_332_p2() {
    exitcond1_fu_332_p2 = (!i_reg_269.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_269.read() == ap_const_lv4_A);
}

void crypto_sign_ed25519_14::thread_exitcond_fu_679_p2() {
    exitcond_fu_679_p2 = (!i_1_reg_293.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_293.read() == ap_const_lv7_54);
}

void crypto_sign_ed25519_14::thread_grp_fu_304_p4() {
    grp_fu_304_p4 = s_v_q0.read().range(5, 3);
}

void crypto_sign_ed25519_14::thread_i_56_fu_685_p2() {
    i_56_fu_685_p2 = (!i_1_reg_293.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_1_reg_293.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void crypto_sign_ed25519_14::thread_i_cast_fu_328_p1() {
    i_cast_fu_328_p1 = esl_zext<7,4>(i_reg_269.read());
}

void crypto_sign_ed25519_14::thread_p_shl_cast_fu_352_p1() {
    p_shl_cast_fu_352_p1 = esl_zext<7,6>(p_shl_fu_344_p3.read());
}

void crypto_sign_ed25519_14::thread_p_shl_fu_344_p3() {
    p_shl_fu_344_p3 = esl_concat<4,2>(i_reg_269.read(), ap_const_lv2_0);
}

void crypto_sign_ed25519_14::thread_r_addr_4_reg_856() {
    r_addr_4_reg_856 =  (sc_lv<7>) (ap_const_lv64_54);
}

void crypto_sign_ed25519_14::thread_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_address0 = r_addr_4_reg_856.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_address0 = r_addr_14_reg_881.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_address0 =  (sc_lv<7>) (tmp_786_fu_696_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_address0 =  (sc_lv<7>) (ap_const_lv64_54);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address0 =  (sc_lv<7>) (ap_const_lv64_52);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address0 =  (sc_lv<7>) (ap_const_lv64_50);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address0 =  (sc_lv<7>) (tmp_778_fu_590_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address0 =  (sc_lv<7>) (tmp_768_fu_562_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_address0 =  (sc_lv<7>) (tmp_758_fu_442_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_address0 =  (sc_lv<7>) (tmp_752_fu_388_p1.read());
    } else {
        r_address0 = "XXXXXXX";
    }
}

void crypto_sign_ed25519_14::thread_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_address1 = r_addr_13_reg_876.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_679_p2.read()))) {
        r_address1 =  (sc_lv<7>) (ap_const_lv64_54);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_679_p2.read()))) {
        r_address1 =  (sc_lv<7>) (tmp_784_fu_691_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address1 =  (sc_lv<7>) (ap_const_lv64_53);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address1 =  (sc_lv<7>) (ap_const_lv64_51);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address1 =  (sc_lv<7>) (tmp_781_fu_604_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address1 =  (sc_lv<7>) (tmp_771_fu_572_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_address1 =  (sc_lv<7>) (tmp_765_fu_490_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_address1 =  (sc_lv<7>) (tmp_755_fu_404_p1.read());
    } else {
        r_address1 = "XXXXXXX";
    }
}

void crypto_sign_ed25519_14::thread_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        r_ce0 = ap_const_logic_1;
    } else {
        r_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_679_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_679_p2.read())))) {
        r_ce1 = ap_const_logic_1;
    } else {
        r_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_d0 = tmp_783_fu_776_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_d0 = tmp_788_fu_734_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_d0 = tmp_775_cast_fu_671_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d0 = tmp_769_cast_fu_641_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d0 = tmp_cast_fu_613_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_d0 = tmp_821_cast_fu_581_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d0 = tmp_805_cast_fu_553_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_d0 = tmp_797_cast_fu_465_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_d0 = tmp_779_cast_fu_375_p1.read();
    } else {
        r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign_ed25519_14::thread_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_d1 = tmp_839_cast_fu_771_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d1 = tmp_772_cast_fu_656_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d1 = tmp_762_cast_fu_618_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_d1 = tmp_826_cast_fu_595_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d1 = tmp_818_cast_fu_577_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_d1 = tmp_800_cast_fu_480_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_d1 = tmp_784_cast_fu_393_p1.read();
    } else {
        r_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void crypto_sign_ed25519_14::thread_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        r_we0 = ap_const_logic_1;
    } else {
        r_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        r_we1 = ap_const_logic_1;
    } else {
        r_we1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_s_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_v_address0 =  (sc_lv<5>) (tmp_760_fu_418_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_1))) {
        s_v_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_0))) {
        s_v_address0 =  (sc_lv<5>) (tmp_750_fu_366_p1.read());
    } else {
        s_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign_ed25519_14::thread_s_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_v_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_v_address1 =  (sc_lv<5>) (tmp_773_fu_432_p1.read());
    } else {
        s_v_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void crypto_sign_ed25519_14::thread_s_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_1)))) {
        s_v_ce0 = ap_const_logic_1;
    } else {
        s_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_s_v_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        s_v_ce1 = ap_const_logic_1;
    } else {
        s_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_14::thread_tmp_745_fu_627_p3() {
    tmp_745_fu_627_p3 = esl_concat<1,2>(tmp_791_fu_623_p1.read(), ap_const_lv2_0);
}

void crypto_sign_ed25519_14::thread_tmp_746_fu_635_p2() {
    tmp_746_fu_635_p2 = (tmp_745_fu_627_p3.read() ^ reg_324.read());
}

void crypto_sign_ed25519_14::thread_tmp_749_fu_356_p2() {
    tmp_749_fu_356_p2 = (!p_shl_cast_fu_352_p1.read().is_01() || !i_cast_fu_328_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl_cast_fu_352_p1.read()) - sc_biguint<7>(i_cast_fu_328_p1.read()));
}

void crypto_sign_ed25519_14::thread_tmp_750_fu_366_p1() {
    tmp_750_fu_366_p1 = esl_zext<64,32>(tmp_776_cast_fu_362_p1.read());
}

void crypto_sign_ed25519_14::thread_tmp_751_fu_380_p3() {
    tmp_751_fu_380_p3 = esl_concat<4,3>(i_reg_269.read(), ap_const_lv3_0);
}

void crypto_sign_ed25519_14::thread_tmp_752_fu_388_p1() {
    tmp_752_fu_388_p1 = esl_zext<64,7>(tmp_751_fu_380_p3.read());
}

void crypto_sign_ed25519_14::thread_tmp_754_fu_398_p2() {
    tmp_754_fu_398_p2 = (tmp_751_fu_380_p3.read() | ap_const_lv7_1);
}

void crypto_sign_ed25519_14::thread_tmp_755_fu_404_p1() {
    tmp_755_fu_404_p1 = esl_zext<64,7>(tmp_754_fu_398_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_757_fu_437_p2() {
    tmp_757_fu_437_p2 = (tmp_751_reg_806.read() | ap_const_lv7_2);
}

void crypto_sign_ed25519_14::thread_tmp_758_fu_442_p1() {
    tmp_758_fu_442_p1 = esl_zext<64,7>(tmp_757_fu_437_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_759_fu_409_p2() {
    tmp_759_fu_409_p2 = (!ap_const_lv7_1.is_01() || !tmp_749_reg_790.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(tmp_749_reg_790.read()));
}

void crypto_sign_ed25519_14::thread_tmp_760_fu_418_p1() {
    tmp_760_fu_418_p1 = esl_zext<64,32>(tmp_792_cast_fu_414_p1.read());
}

void crypto_sign_ed25519_14::thread_tmp_761_fu_451_p3() {
    tmp_761_fu_451_p3 = esl_concat<1,2>(tmp_793_fu_447_p1.read(), ap_const_lv2_0);
}

void crypto_sign_ed25519_14::thread_tmp_762_cast_fu_618_p1() {
    tmp_762_cast_fu_618_p1 = esl_zext<8,3>(grp_fu_304_p4.read());
}

void crypto_sign_ed25519_14::thread_tmp_762_fu_459_p2() {
    tmp_762_fu_459_p2 = (tmp_761_fu_451_p3.read() ^ reg_324.read());
}

void crypto_sign_ed25519_14::thread_tmp_764_fu_485_p2() {
    tmp_764_fu_485_p2 = (tmp_751_reg_806.read() | ap_const_lv7_3);
}

void crypto_sign_ed25519_14::thread_tmp_765_fu_490_p1() {
    tmp_765_fu_490_p1 = esl_zext<64,7>(tmp_764_fu_485_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_767_fu_557_p2() {
    tmp_767_fu_557_p2 = (tmp_751_reg_806.read() | ap_const_lv7_4);
}

void crypto_sign_ed25519_14::thread_tmp_768_fu_562_p1() {
    tmp_768_fu_562_p1 = esl_zext<64,7>(tmp_767_fu_557_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_769_cast_fu_641_p1() {
    tmp_769_cast_fu_641_p1 = esl_zext<8,3>(tmp_746_fu_635_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_770_fu_567_p2() {
    tmp_770_fu_567_p2 = (tmp_751_reg_806.read() | ap_const_lv7_5);
}

void crypto_sign_ed25519_14::thread_tmp_771_cast_fu_646_p4() {
    tmp_771_cast_fu_646_p4 = s_v_q1.read().range(3, 1);
}

void crypto_sign_ed25519_14::thread_tmp_771_fu_572_p1() {
    tmp_771_fu_572_p1 = esl_zext<64,7>(tmp_770_fu_567_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_772_cast_fu_656_p1() {
    tmp_772_cast_fu_656_p1 = esl_zext<8,3>(tmp_771_cast_fu_646_p4.read());
}

void crypto_sign_ed25519_14::thread_tmp_772_fu_423_p2() {
    tmp_772_fu_423_p2 = (!ap_const_lv7_2.is_01() || !tmp_749_reg_790.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_2) + sc_biguint<7>(tmp_749_reg_790.read()));
}

void crypto_sign_ed25519_14::thread_tmp_773_fu_432_p1() {
    tmp_773_fu_432_p1 = esl_zext<64,32>(tmp_813_cast_fu_428_p1.read());
}

void crypto_sign_ed25519_14::thread_tmp_774_fu_519_p3() {
    tmp_774_fu_519_p3 = esl_concat<2,1>(tmp_794_fu_515_p1.read(), ap_const_lv1_0);
}

void crypto_sign_ed25519_14::thread_tmp_775_cast_fu_671_p1() {
    tmp_775_cast_fu_671_p1 = esl_zext<8,3>(tmp_774_cast_reg_851.read());
}

void crypto_sign_ed25519_14::thread_tmp_775_fu_527_p2() {
    tmp_775_fu_527_p2 = (tmp_774_fu_519_p3.read() ^ tmp_809_cast_fu_505_p4.read());
}

void crypto_sign_ed25519_14::thread_tmp_776_cast_fu_362_p1() {
    tmp_776_cast_fu_362_p1 = esl_sext<32,7>(tmp_749_fu_356_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_777_fu_585_p2() {
    tmp_777_fu_585_p2 = (tmp_751_reg_806.read() | ap_const_lv7_6);
}

void crypto_sign_ed25519_14::thread_tmp_778_fu_590_p1() {
    tmp_778_fu_590_p1 = esl_zext<64,7>(tmp_777_fu_585_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_779_cast_fu_375_p1() {
    tmp_779_cast_fu_375_p1 = esl_zext<8,3>(tmp_792_fu_371_p1.read());
}

void crypto_sign_ed25519_14::thread_tmp_77_fu_705_p1() {
    tmp_77_fu_705_p1 = esl_zext<3,1>(carry_reg_281.read());
}

void crypto_sign_ed25519_14::thread_tmp_780_fu_599_p2() {
    tmp_780_fu_599_p2 = (tmp_751_reg_806.read() | ap_const_lv7_7);
}

void crypto_sign_ed25519_14::thread_tmp_781_fu_604_p1() {
    tmp_781_fu_604_p1 = esl_zext<64,7>(tmp_780_fu_599_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_782_fu_338_p2() {
    tmp_782_fu_338_p2 = (!i_reg_269.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_269.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void crypto_sign_ed25519_14::thread_tmp_783_fu_776_p2() {
    tmp_783_fu_776_p2 = (!r_q1.read().is_01() || !carry_cast_reg_862.read().is_01())? sc_lv<8>(): (sc_biguint<8>(r_q1.read()) + sc_biguint<8>(carry_cast_reg_862.read()));
}

void crypto_sign_ed25519_14::thread_tmp_784_cast_fu_393_p1() {
    tmp_784_cast_fu_393_p1 = esl_zext<8,3>(grp_fu_304_p4.read());
}

void crypto_sign_ed25519_14::thread_tmp_784_fu_691_p1() {
    tmp_784_fu_691_p1 = esl_zext<64,7>(i_1_reg_293.read());
}

void crypto_sign_ed25519_14::thread_tmp_785_fu_709_p2() {
    tmp_785_fu_709_p2 = (!carry_cast_reg_862.read().is_01() || !r_q1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(carry_cast_reg_862.read()) + sc_biguint<8>(r_q1.read()));
}

void crypto_sign_ed25519_14::thread_tmp_786_fu_696_p1() {
    tmp_786_fu_696_p1 = esl_zext<64,7>(i_56_fu_685_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_787_fu_730_p1() {
    tmp_787_fu_730_p1 = esl_sext<8,5>(tmp_9_fu_720_p4.read());
}

void crypto_sign_ed25519_14::thread_tmp_788_fu_734_p2() {
    tmp_788_fu_734_p2 = (!tmp_787_fu_730_p1.read().is_01() || !r_q0.read().is_01())? sc_lv<8>(): (sc_bigint<8>(tmp_787_fu_730_p1.read()) + sc_biguint<8>(r_q0.read()));
}

void crypto_sign_ed25519_14::thread_tmp_790_fu_765_p2() {
    tmp_790_fu_765_p2 = (!tmp_836_cast1_fu_741_p1.read().is_01() || !tmp_838_cast_fu_761_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_836_cast1_fu_741_p1.read()) - sc_biguint<5>(tmp_838_cast_fu_761_p1.read()));
}

void crypto_sign_ed25519_14::thread_tmp_791_fu_623_p1() {
    tmp_791_fu_623_p1 = s_v_q1.read().range(1-1, 0);
}

void crypto_sign_ed25519_14::thread_tmp_792_cast_fu_414_p1() {
    tmp_792_cast_fu_414_p1 = esl_sext<32,7>(tmp_759_fu_409_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_792_fu_371_p1() {
    tmp_792_fu_371_p1 = s_v_q0.read().range(3-1, 0);
}

void crypto_sign_ed25519_14::thread_tmp_793_fu_447_p1() {
    tmp_793_fu_447_p1 = s_v_q0.read().range(1-1, 0);
}

void crypto_sign_ed25519_14::thread_tmp_794_fu_515_p1() {
    tmp_794_fu_515_p1 = s_v_q1.read().range(2-1, 0);
}

void crypto_sign_ed25519_14::thread_tmp_795_fu_701_p1() {
    tmp_795_fu_701_p1 = r_q1.read().range(3-1, 0);
}

void crypto_sign_ed25519_14::thread_tmp_796_fu_745_p3() {
    tmp_796_fu_745_p3 = tmp_832_cast_fu_714_p2.read().range(2, 2);
}

void crypto_sign_ed25519_14::thread_tmp_797_cast_fu_465_p1() {
    tmp_797_cast_fu_465_p1 = esl_zext<8,3>(tmp_762_fu_459_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_799_cast_fu_470_p4() {
    tmp_799_cast_fu_470_p4 = s_v_q0.read().range(3, 1);
}

void crypto_sign_ed25519_14::thread_tmp_800_cast_fu_480_p1() {
    tmp_800_cast_fu_480_p1 = esl_zext<8,3>(tmp_799_cast_fu_470_p4.read());
}

void crypto_sign_ed25519_14::thread_tmp_805_cast_fu_553_p1() {
    tmp_805_cast_fu_553_p1 = esl_zext<8,3>(tmp_804_cast_reg_826.read());
}

void crypto_sign_ed25519_14::thread_tmp_809_cast_fu_505_p4() {
    tmp_809_cast_fu_505_p4 = s_v_q0.read().range(9, 7);
}

void crypto_sign_ed25519_14::thread_tmp_813_cast_fu_428_p1() {
    tmp_813_cast_fu_428_p1 = esl_sext<32,7>(tmp_772_fu_423_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_818_cast_fu_577_p1() {
    tmp_818_cast_fu_577_p1 = esl_zext<8,3>(tmp_775_reg_831.read());
}

void crypto_sign_ed25519_14::thread_tmp_821_cast_fu_581_p1() {
    tmp_821_cast_fu_581_p1 = esl_zext<8,3>(tmp_820_cast_reg_836.read());
}

void crypto_sign_ed25519_14::thread_tmp_826_cast_fu_595_p1() {
    tmp_826_cast_fu_595_p1 = esl_zext<8,3>(tmp_825_cast_reg_841.read());
}

void crypto_sign_ed25519_14::thread_tmp_832_cast_fu_714_p2() {
    tmp_832_cast_fu_714_p2 = (!tmp_795_fu_701_p1.read().is_01() || !tmp_77_fu_705_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_795_fu_701_p1.read()) + sc_biguint<3>(tmp_77_fu_705_p1.read()));
}

void crypto_sign_ed25519_14::thread_tmp_836_cast1_fu_741_p1() {
    tmp_836_cast1_fu_741_p1 = esl_zext<5,3>(tmp_832_cast_fu_714_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_838_cast_fu_761_p1() {
    tmp_838_cast_fu_761_p1 = esl_zext<5,4>(tmp_s_fu_753_p3.read());
}

void crypto_sign_ed25519_14::thread_tmp_839_cast_fu_771_p1() {
    tmp_839_cast_fu_771_p1 = esl_sext<8,5>(tmp_790_fu_765_p2.read());
}

void crypto_sign_ed25519_14::thread_tmp_9_fu_720_p4() {
    tmp_9_fu_720_p4 = tmp_785_fu_709_p2.read().range(7, 3);
}

void crypto_sign_ed25519_14::thread_tmp_cast_fu_613_p1() {
    tmp_cast_fu_613_p1 = esl_zext<8,3>(tmp_fu_609_p1.read());
}

void crypto_sign_ed25519_14::thread_tmp_fu_609_p1() {
    tmp_fu_609_p1 = s_v_q0.read().range(3-1, 0);
}

void crypto_sign_ed25519_14::thread_tmp_s_fu_753_p3() {
    tmp_s_fu_753_p3 = esl_concat<1,3>(tmp_796_fu_745_p3.read(), ap_const_lv3_0);
}

void crypto_sign_ed25519_14::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_679_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

