// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "freduce_degree.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic freduce_degree::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic freduce_degree::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> freduce_degree::ap_ST_fsm_state1 = "1";
const sc_lv<14> freduce_degree::ap_ST_fsm_state2 = "10";
const sc_lv<14> freduce_degree::ap_ST_fsm_state3 = "100";
const sc_lv<14> freduce_degree::ap_ST_fsm_state4 = "1000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state5 = "10000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state6 = "100000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> freduce_degree::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> freduce_degree::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> freduce_degree::ap_const_lv32_1 = "1";
const sc_lv<32> freduce_degree::ap_const_lv32_2 = "10";
const sc_lv<32> freduce_degree::ap_const_lv32_3 = "11";
const sc_lv<32> freduce_degree::ap_const_lv32_4 = "100";
const sc_lv<32> freduce_degree::ap_const_lv32_5 = "101";
const sc_lv<32> freduce_degree::ap_const_lv32_6 = "110";
const sc_lv<32> freduce_degree::ap_const_lv32_7 = "111";
const sc_lv<32> freduce_degree::ap_const_lv32_8 = "1000";
const sc_lv<32> freduce_degree::ap_const_lv32_9 = "1001";
const sc_lv<64> freduce_degree::ap_const_lv64_12 = "10010";
const sc_lv<64> freduce_degree::ap_const_lv64_8 = "1000";
const sc_lv<64> freduce_degree::ap_const_lv64_11 = "10001";
const sc_lv<64> freduce_degree::ap_const_lv64_7 = "111";
const sc_lv<64> freduce_degree::ap_const_lv64_10 = "10000";
const sc_lv<64> freduce_degree::ap_const_lv64_6 = "110";
const sc_lv<64> freduce_degree::ap_const_lv64_F = "1111";
const sc_lv<64> freduce_degree::ap_const_lv64_5 = "101";
const sc_lv<64> freduce_degree::ap_const_lv64_E = "1110";
const sc_lv<64> freduce_degree::ap_const_lv64_4 = "100";
const sc_lv<64> freduce_degree::ap_const_lv64_D = "1101";
const sc_lv<64> freduce_degree::ap_const_lv64_3 = "11";
const sc_lv<64> freduce_degree::ap_const_lv64_C = "1100";
const sc_lv<64> freduce_degree::ap_const_lv64_2 = "10";
const sc_lv<64> freduce_degree::ap_const_lv64_B = "1011";
const sc_lv<64> freduce_degree::ap_const_lv64_1 = "1";
const sc_lv<64> freduce_degree::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> freduce_degree::ap_const_lv64_A = "1010";
const sc_lv<32> freduce_degree::ap_const_lv32_A = "1010";
const sc_lv<32> freduce_degree::ap_const_lv32_B = "1011";
const sc_lv<32> freduce_degree::ap_const_lv32_C = "1100";
const sc_lv<32> freduce_degree::ap_const_lv32_D = "1101";
const bool freduce_degree::ap_const_boolean_1 = true;

freduce_degree::freduce_degree(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_207_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( output_r_q1 );

    SC_METHOD(thread_output_addr_57_reg_450);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_addr_61_reg_481);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_addr_65_reg_512);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_addr_69_reg_543);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_output_r_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( output_addr_57_reg_450 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_addr_61_reg_481 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( output_addr_65_reg_512 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_addr_69_reg_543 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_output_r_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( tmp_291_reg_440 );
    sensitive << ( tmp_293_reg_471 );
    sensitive << ( tmp_295_reg_502 );
    sensitive << ( tmp_296_reg_533 );
    sensitive << ( tmp_298_reg_564 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_output_r_d1);
    sensitive << ( tmp_292_reg_455 );
    sensitive << ( tmp_294_reg_486 );
    sensitive << ( tmp_s_reg_517 );
    sensitive << ( tmp_297_reg_554 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_output_r_we1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp10_fu_321_p2);
    sensitive << ( tmp_386_fu_309_p2 );
    sensitive << ( tmp_387_fu_315_p2 );

    SC_METHOD(thread_tmp12_fu_345_p2);
    sensitive << ( tmp_388_fu_333_p2 );
    sensitive << ( tmp_389_fu_339_p2 );

    SC_METHOD(thread_tmp14_fu_369_p2);
    sensitive << ( tmp_390_fu_357_p2 );
    sensitive << ( tmp_391_fu_363_p2 );

    SC_METHOD(thread_tmp16_fu_393_p2);
    sensitive << ( tmp_392_fu_381_p2 );
    sensitive << ( tmp_393_fu_387_p2 );

    SC_METHOD(thread_tmp18_fu_417_p2);
    sensitive << ( tmp_394_fu_405_p2 );
    sensitive << ( tmp_395_fu_411_p2 );

    SC_METHOD(thread_tmp2_fu_225_p2);
    sensitive << ( tmp_fu_213_p2 );
    sensitive << ( tmp_379_fu_219_p2 );

    SC_METHOD(thread_tmp4_fu_249_p2);
    sensitive << ( tmp_380_fu_237_p2 );
    sensitive << ( tmp_381_fu_243_p2 );

    SC_METHOD(thread_tmp6_fu_273_p2);
    sensitive << ( tmp_382_fu_261_p2 );
    sensitive << ( tmp_383_fu_267_p2 );

    SC_METHOD(thread_tmp8_fu_297_p2);
    sensitive << ( tmp_384_fu_285_p2 );
    sensitive << ( tmp_385_fu_291_p2 );

    SC_METHOD(thread_tmp_291_fu_231_p2);
    sensitive << ( tmp2_fu_225_p2 );
    sensitive << ( grp_fu_207_p2 );

    SC_METHOD(thread_tmp_292_fu_255_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp4_fu_249_p2 );

    SC_METHOD(thread_tmp_293_fu_279_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp6_fu_273_p2 );

    SC_METHOD(thread_tmp_294_fu_303_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp8_fu_297_p2 );

    SC_METHOD(thread_tmp_295_fu_327_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp10_fu_321_p2 );

    SC_METHOD(thread_tmp_296_fu_375_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp14_fu_369_p2 );

    SC_METHOD(thread_tmp_297_fu_399_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp16_fu_393_p2 );

    SC_METHOD(thread_tmp_298_fu_423_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp18_fu_417_p2 );

    SC_METHOD(thread_tmp_379_fu_219_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_380_fu_237_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_381_fu_243_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_382_fu_261_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_383_fu_267_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_384_fu_285_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_385_fu_291_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_386_fu_309_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_387_fu_315_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_388_fu_333_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_389_fu_339_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_390_fu_357_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_391_fu_363_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_392_fu_381_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_393_fu_387_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_394_fu_405_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_395_fu_411_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_fu_213_p2);
    sensitive << ( output_r_q0 );

    SC_METHOD(thread_tmp_s_fu_351_p2);
    sensitive << ( grp_fu_207_p2 );
    sensitive << ( tmp12_fu_345_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "freduce_degree_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
    sc_trace(mVcdFile, output_r_address1, "(port)output_r_address1");
    sc_trace(mVcdFile, output_r_ce1, "(port)output_r_ce1");
    sc_trace(mVcdFile, output_r_we1, "(port)output_r_we1");
    sc_trace(mVcdFile, output_r_d1, "(port)output_r_d1");
    sc_trace(mVcdFile, output_r_q1, "(port)output_r_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_291_fu_231_p2, "tmp_291_fu_231_p2");
    sc_trace(mVcdFile, tmp_291_reg_440, "tmp_291_reg_440");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, output_addr_57_reg_450, "output_addr_57_reg_450");
    sc_trace(mVcdFile, tmp_292_fu_255_p2, "tmp_292_fu_255_p2");
    sc_trace(mVcdFile, tmp_292_reg_455, "tmp_292_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_293_fu_279_p2, "tmp_293_fu_279_p2");
    sc_trace(mVcdFile, tmp_293_reg_471, "tmp_293_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_addr_61_reg_481, "output_addr_61_reg_481");
    sc_trace(mVcdFile, tmp_294_fu_303_p2, "tmp_294_fu_303_p2");
    sc_trace(mVcdFile, tmp_294_reg_486, "tmp_294_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_295_fu_327_p2, "tmp_295_fu_327_p2");
    sc_trace(mVcdFile, tmp_295_reg_502, "tmp_295_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, output_addr_65_reg_512, "output_addr_65_reg_512");
    sc_trace(mVcdFile, tmp_s_fu_351_p2, "tmp_s_fu_351_p2");
    sc_trace(mVcdFile, tmp_s_reg_517, "tmp_s_reg_517");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_296_fu_375_p2, "tmp_296_fu_375_p2");
    sc_trace(mVcdFile, tmp_296_reg_533, "tmp_296_reg_533");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, output_addr_69_reg_543, "output_addr_69_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_297_fu_399_p2, "tmp_297_fu_399_p2");
    sc_trace(mVcdFile, tmp_297_reg_554, "tmp_297_reg_554");
    sc_trace(mVcdFile, tmp_298_fu_423_p2, "tmp_298_fu_423_p2");
    sc_trace(mVcdFile, tmp_298_reg_564, "tmp_298_reg_564");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_fu_213_p2, "tmp_fu_213_p2");
    sc_trace(mVcdFile, tmp_379_fu_219_p2, "tmp_379_fu_219_p2");
    sc_trace(mVcdFile, tmp2_fu_225_p2, "tmp2_fu_225_p2");
    sc_trace(mVcdFile, grp_fu_207_p2, "grp_fu_207_p2");
    sc_trace(mVcdFile, tmp_380_fu_237_p2, "tmp_380_fu_237_p2");
    sc_trace(mVcdFile, tmp_381_fu_243_p2, "tmp_381_fu_243_p2");
    sc_trace(mVcdFile, tmp4_fu_249_p2, "tmp4_fu_249_p2");
    sc_trace(mVcdFile, tmp_382_fu_261_p2, "tmp_382_fu_261_p2");
    sc_trace(mVcdFile, tmp_383_fu_267_p2, "tmp_383_fu_267_p2");
    sc_trace(mVcdFile, tmp6_fu_273_p2, "tmp6_fu_273_p2");
    sc_trace(mVcdFile, tmp_384_fu_285_p2, "tmp_384_fu_285_p2");
    sc_trace(mVcdFile, tmp_385_fu_291_p2, "tmp_385_fu_291_p2");
    sc_trace(mVcdFile, tmp8_fu_297_p2, "tmp8_fu_297_p2");
    sc_trace(mVcdFile, tmp_386_fu_309_p2, "tmp_386_fu_309_p2");
    sc_trace(mVcdFile, tmp_387_fu_315_p2, "tmp_387_fu_315_p2");
    sc_trace(mVcdFile, tmp10_fu_321_p2, "tmp10_fu_321_p2");
    sc_trace(mVcdFile, tmp_388_fu_333_p2, "tmp_388_fu_333_p2");
    sc_trace(mVcdFile, tmp_389_fu_339_p2, "tmp_389_fu_339_p2");
    sc_trace(mVcdFile, tmp12_fu_345_p2, "tmp12_fu_345_p2");
    sc_trace(mVcdFile, tmp_390_fu_357_p2, "tmp_390_fu_357_p2");
    sc_trace(mVcdFile, tmp_391_fu_363_p2, "tmp_391_fu_363_p2");
    sc_trace(mVcdFile, tmp14_fu_369_p2, "tmp14_fu_369_p2");
    sc_trace(mVcdFile, tmp_392_fu_381_p2, "tmp_392_fu_381_p2");
    sc_trace(mVcdFile, tmp_393_fu_387_p2, "tmp_393_fu_387_p2");
    sc_trace(mVcdFile, tmp16_fu_393_p2, "tmp16_fu_393_p2");
    sc_trace(mVcdFile, tmp_394_fu_405_p2, "tmp_394_fu_405_p2");
    sc_trace(mVcdFile, tmp_395_fu_411_p2, "tmp_395_fu_411_p2");
    sc_trace(mVcdFile, tmp18_fu_417_p2, "tmp18_fu_417_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

freduce_degree::~freduce_degree() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void freduce_degree::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_291_reg_440 = tmp_291_fu_231_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_292_reg_455 = tmp_292_fu_255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_293_reg_471 = tmp_293_fu_279_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_294_reg_486 = tmp_294_fu_303_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_295_reg_502 = tmp_295_fu_327_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_296_reg_533 = tmp_296_fu_375_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_297_reg_554 = tmp_297_fu_399_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_298_reg_564 = tmp_298_fu_423_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_s_reg_517 = tmp_s_fu_351_p2.read();
    }
}

void freduce_degree::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void freduce_degree::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void freduce_degree::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void freduce_degree::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void freduce_degree::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void freduce_degree::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void freduce_degree::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void freduce_degree::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void freduce_degree::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void freduce_degree::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void freduce_degree::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void freduce_degree::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void freduce_degree::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void freduce_degree::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void freduce_degree::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void freduce_degree::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void freduce_degree::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void freduce_degree::thread_grp_fu_207_p2() {
    grp_fu_207_p2 = (!output_r_q1.read().is_01() || !output_r_q0.read().is_01())? sc_lv<64>(): (sc_biguint<64>(output_r_q1.read()) + sc_biguint<64>(output_r_q0.read()));
}

void freduce_degree::thread_output_addr_57_reg_450() {
    output_addr_57_reg_450 =  (sc_lv<5>) (ap_const_lv64_7);
}

void freduce_degree::thread_output_addr_61_reg_481() {
    output_addr_61_reg_481 =  (sc_lv<5>) (ap_const_lv64_5);
}

void freduce_degree::thread_output_addr_65_reg_512() {
    output_addr_65_reg_512 =  (sc_lv<5>) (ap_const_lv64_3);
}

void freduce_degree::thread_output_addr_69_reg_543() {
    output_addr_69_reg_543 =  (sc_lv<5>) (ap_const_lv64_1);
}

void freduce_degree::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_r_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else {
        output_r_address0 = "XXXXX";
    }
}

void freduce_degree::thread_output_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        output_r_address1 = output_addr_69_reg_543.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_address1 = output_addr_65_reg_512.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_r_address1 = output_addr_61_reg_481.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_address1 = output_addr_57_reg_450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_r_address1 =  (sc_lv<5>) (ap_const_lv64_8);
    } else {
        output_r_address1 = "XXXXX";
    }
}

void freduce_degree::thread_output_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void freduce_degree::thread_output_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        output_r_ce1 = ap_const_logic_1;
    } else {
        output_r_ce1 = ap_const_logic_0;
    }
}

void freduce_degree::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        output_r_d0 = tmp_298_reg_564.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        output_r_d0 = tmp_296_reg_533.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_d0 = tmp_295_reg_502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_r_d0 = tmp_293_reg_471.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_d0 = tmp_291_reg_440.read();
    } else {
        output_r_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void freduce_degree::thread_output_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        output_r_d1 = tmp_297_reg_554.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_d1 = tmp_s_reg_517.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_r_d1 = tmp_294_reg_486.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_d1 = tmp_292_reg_455.read();
    } else {
        output_r_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void freduce_degree::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void freduce_degree::thread_output_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        output_r_we1 = ap_const_logic_1;
    } else {
        output_r_we1 = ap_const_logic_0;
    }
}

void freduce_degree::thread_tmp10_fu_321_p2() {
    tmp10_fu_321_p2 = (!tmp_386_fu_309_p2.read().is_01() || !tmp_387_fu_315_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_386_fu_309_p2.read()) + sc_biguint<64>(tmp_387_fu_315_p2.read()));
}

void freduce_degree::thread_tmp12_fu_345_p2() {
    tmp12_fu_345_p2 = (!tmp_388_fu_333_p2.read().is_01() || !tmp_389_fu_339_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_388_fu_333_p2.read()) + sc_biguint<64>(tmp_389_fu_339_p2.read()));
}

void freduce_degree::thread_tmp14_fu_369_p2() {
    tmp14_fu_369_p2 = (!tmp_390_fu_357_p2.read().is_01() || !tmp_391_fu_363_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_390_fu_357_p2.read()) + sc_biguint<64>(tmp_391_fu_363_p2.read()));
}

void freduce_degree::thread_tmp16_fu_393_p2() {
    tmp16_fu_393_p2 = (!tmp_392_fu_381_p2.read().is_01() || !tmp_393_fu_387_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_392_fu_381_p2.read()) + sc_biguint<64>(tmp_393_fu_387_p2.read()));
}

void freduce_degree::thread_tmp18_fu_417_p2() {
    tmp18_fu_417_p2 = (!tmp_394_fu_405_p2.read().is_01() || !tmp_395_fu_411_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_394_fu_405_p2.read()) + sc_biguint<64>(tmp_395_fu_411_p2.read()));
}

void freduce_degree::thread_tmp2_fu_225_p2() {
    tmp2_fu_225_p2 = (!tmp_fu_213_p2.read().is_01() || !tmp_379_fu_219_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_fu_213_p2.read()) + sc_biguint<64>(tmp_379_fu_219_p2.read()));
}

void freduce_degree::thread_tmp4_fu_249_p2() {
    tmp4_fu_249_p2 = (!tmp_380_fu_237_p2.read().is_01() || !tmp_381_fu_243_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_380_fu_237_p2.read()) + sc_biguint<64>(tmp_381_fu_243_p2.read()));
}

void freduce_degree::thread_tmp6_fu_273_p2() {
    tmp6_fu_273_p2 = (!tmp_382_fu_261_p2.read().is_01() || !tmp_383_fu_267_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_382_fu_261_p2.read()) + sc_biguint<64>(tmp_383_fu_267_p2.read()));
}

void freduce_degree::thread_tmp8_fu_297_p2() {
    tmp8_fu_297_p2 = (!tmp_384_fu_285_p2.read().is_01() || !tmp_385_fu_291_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_384_fu_285_p2.read()) + sc_biguint<64>(tmp_385_fu_291_p2.read()));
}

void freduce_degree::thread_tmp_291_fu_231_p2() {
    tmp_291_fu_231_p2 = (!tmp2_fu_225_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp2_fu_225_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_292_fu_255_p2() {
    tmp_292_fu_255_p2 = (!tmp4_fu_249_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp4_fu_249_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_293_fu_279_p2() {
    tmp_293_fu_279_p2 = (!tmp6_fu_273_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp6_fu_273_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_294_fu_303_p2() {
    tmp_294_fu_303_p2 = (!tmp8_fu_297_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp8_fu_297_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_295_fu_327_p2() {
    tmp_295_fu_327_p2 = (!tmp10_fu_321_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp10_fu_321_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_296_fu_375_p2() {
    tmp_296_fu_375_p2 = (!tmp14_fu_369_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp14_fu_369_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_297_fu_399_p2() {
    tmp_297_fu_399_p2 = (!tmp16_fu_393_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp16_fu_393_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_298_fu_423_p2() {
    tmp_298_fu_423_p2 = (!tmp18_fu_417_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp18_fu_417_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_tmp_379_fu_219_p2() {
    tmp_379_fu_219_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_380_fu_237_p2() {
    tmp_380_fu_237_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_381_fu_243_p2() {
    tmp_381_fu_243_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_382_fu_261_p2() {
    tmp_382_fu_261_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_383_fu_267_p2() {
    tmp_383_fu_267_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_384_fu_285_p2() {
    tmp_384_fu_285_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_385_fu_291_p2() {
    tmp_385_fu_291_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_386_fu_309_p2() {
    tmp_386_fu_309_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_387_fu_315_p2() {
    tmp_387_fu_315_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_388_fu_333_p2() {
    tmp_388_fu_333_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_389_fu_339_p2() {
    tmp_389_fu_339_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_390_fu_357_p2() {
    tmp_390_fu_357_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_391_fu_363_p2() {
    tmp_391_fu_363_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_392_fu_381_p2() {
    tmp_392_fu_381_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_393_fu_387_p2() {
    tmp_393_fu_387_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_394_fu_405_p2() {
    tmp_394_fu_405_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_395_fu_411_p2() {
    tmp_395_fu_411_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void freduce_degree::thread_tmp_fu_213_p2() {
    tmp_fu_213_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): output_r_q0.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void freduce_degree::thread_tmp_s_fu_351_p2() {
    tmp_s_fu_351_p2 = (!tmp12_fu_345_p2.read().is_01() || !grp_fu_207_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp12_fu_345_p2.read()) + sc_biguint<64>(grp_fu_207_p2.read()));
}

void freduce_degree::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

