// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "choose_t.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic choose_t::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic choose_t::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<31> choose_t::ap_ST_fsm_state1 = "1";
const sc_lv<31> choose_t::ap_ST_fsm_state2 = "10";
const sc_lv<31> choose_t::ap_ST_fsm_state3 = "100";
const sc_lv<31> choose_t::ap_ST_fsm_state4 = "1000";
const sc_lv<31> choose_t::ap_ST_fsm_state5 = "10000";
const sc_lv<31> choose_t::ap_ST_fsm_state6 = "100000";
const sc_lv<31> choose_t::ap_ST_fsm_state7 = "1000000";
const sc_lv<31> choose_t::ap_ST_fsm_state8 = "10000000";
const sc_lv<31> choose_t::ap_ST_fsm_state9 = "100000000";
const sc_lv<31> choose_t::ap_ST_fsm_state10 = "1000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state11 = "10000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state12 = "100000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<31> choose_t::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> choose_t::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> choose_t::ap_const_lv32_1 = "1";
const sc_lv<32> choose_t::ap_const_lv32_2 = "10";
const sc_lv<32> choose_t::ap_const_lv32_3 = "11";
const sc_lv<32> choose_t::ap_const_lv32_4 = "100";
const sc_lv<32> choose_t::ap_const_lv32_5 = "101";
const sc_lv<32> choose_t::ap_const_lv32_6 = "110";
const sc_lv<32> choose_t::ap_const_lv32_7 = "111";
const sc_lv<32> choose_t::ap_const_lv32_8 = "1000";
const sc_lv<32> choose_t::ap_const_lv32_9 = "1001";
const sc_lv<32> choose_t::ap_const_lv32_A = "1010";
const sc_lv<32> choose_t::ap_const_lv32_B = "1011";
const sc_lv<32> choose_t::ap_const_lv32_C = "1100";
const sc_lv<32> choose_t::ap_const_lv32_D = "1101";
const sc_lv<32> choose_t::ap_const_lv32_E = "1110";
const sc_lv<32> choose_t::ap_const_lv32_F = "1111";
const sc_lv<32> choose_t::ap_const_lv32_11 = "10001";
const sc_lv<32> choose_t::ap_const_lv32_13 = "10011";
const sc_lv<32> choose_t::ap_const_lv32_15 = "10101";
const sc_lv<32> choose_t::ap_const_lv32_17 = "10111";
const sc_lv<32> choose_t::ap_const_lv32_19 = "11001";
const sc_lv<1> choose_t::ap_const_lv1_0 = "0";
const sc_lv<32> choose_t::ap_const_lv32_1B = "11011";
const sc_lv<1> choose_t::ap_const_lv1_1 = "1";
const sc_lv<32> choose_t::ap_const_lv32_1C = "11100";
const sc_lv<32> choose_t::ap_const_lv32_1D = "11101";
const sc_lv<6> choose_t::ap_const_lv6_0 = "000000";
const sc_lv<32> choose_t::ap_const_lv32_18 = "11000";
const sc_lv<32> choose_t::ap_const_lv32_1A = "11010";
const sc_lv<32> choose_t::ap_const_lv32_1E = "11110";
const sc_lv<32> choose_t::ap_const_lv32_12 = "10010";
const sc_lv<32> choose_t::ap_const_lv32_14 = "10100";
const sc_lv<32> choose_t::ap_const_lv32_16 = "10110";
const sc_lv<64> choose_t::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> choose_t::ap_const_lv64_1 = "1";
const sc_lv<64> choose_t::ap_const_lv64_2 = "10";
const sc_lv<64> choose_t::ap_const_lv64_3 = "11";
const sc_lv<64> choose_t::ap_const_lv64_4 = "100";
const sc_lv<64> choose_t::ap_const_lv64_5 = "101";
const sc_lv<64> choose_t::ap_const_lv64_6 = "110";
const sc_lv<64> choose_t::ap_const_lv64_7 = "111";
const sc_lv<64> choose_t::ap_const_lv64_8 = "1000";
const sc_lv<64> choose_t::ap_const_lv64_9 = "1001";
const sc_lv<64> choose_t::ap_const_lv64_A = "1010";
const sc_lv<64> choose_t::ap_const_lv64_B = "1011";
const sc_lv<64> choose_t::ap_const_lv64_C = "1100";
const sc_lv<64> choose_t::ap_const_lv64_D = "1101";
const sc_lv<64> choose_t::ap_const_lv64_E = "1110";
const sc_lv<64> choose_t::ap_const_lv64_F = "1111";
const sc_lv<64> choose_t::ap_const_lv64_10 = "10000";
const sc_lv<64> choose_t::ap_const_lv64_11 = "10001";
const sc_lv<64> choose_t::ap_const_lv64_12 = "10010";
const sc_lv<64> choose_t::ap_const_lv64_13 = "10011";
const sc_lv<64> choose_t::ap_const_lv64_14 = "10100";
const sc_lv<64> choose_t::ap_const_lv64_15 = "10101";
const sc_lv<64> choose_t::ap_const_lv64_16 = "10110";
const sc_lv<64> choose_t::ap_const_lv64_17 = "10111";
const sc_lv<64> choose_t::ap_const_lv64_18 = "11000";
const sc_lv<64> choose_t::ap_const_lv64_19 = "11001";
const sc_lv<64> choose_t::ap_const_lv64_1A = "11010";
const sc_lv<64> choose_t::ap_const_lv64_1B = "11011";
const sc_lv<64> choose_t::ap_const_lv64_1C = "11100";
const sc_lv<64> choose_t::ap_const_lv64_1D = "11101";
const sc_lv<64> choose_t::ap_const_lv64_1E = "11110";
const sc_lv<32> choose_t::ap_const_lv32_10 = "10000";
const sc_lv<64> choose_t::ap_const_lv64_1F = "11111";
const sc_lv<2> choose_t::ap_const_lv2_0 = "00";
const sc_lv<5> choose_t::ap_const_lv5_0 = "00000";
const sc_lv<14> choose_t::ap_const_lv14_1 = "1";
const sc_lv<50> choose_t::ap_const_lv50_0 = "00000000000000000000000000000000000000000000000000";
const sc_lv<14> choose_t::ap_const_lv14_2 = "10";
const sc_lv<14> choose_t::ap_const_lv14_3 = "11";
const sc_lv<14> choose_t::ap_const_lv14_4 = "100";
const sc_lv<14> choose_t::ap_const_lv14_5 = "101";
const sc_lv<14> choose_t::ap_const_lv14_6 = "110";
const sc_lv<14> choose_t::ap_const_lv14_7 = "111";
const sc_lv<14> choose_t::ap_const_lv14_8 = "1000";
const sc_lv<14> choose_t::ap_const_lv14_9 = "1001";
const sc_lv<14> choose_t::ap_const_lv14_A = "1010";
const sc_lv<14> choose_t::ap_const_lv14_B = "1011";
const sc_lv<14> choose_t::ap_const_lv14_C = "1100";
const sc_lv<14> choose_t::ap_const_lv14_D = "1101";
const sc_lv<14> choose_t::ap_const_lv14_E = "1110";
const sc_lv<14> choose_t::ap_const_lv14_F = "1111";
const sc_lv<14> choose_t::ap_const_lv14_10 = "10000";
const sc_lv<14> choose_t::ap_const_lv14_11 = "10001";
const sc_lv<14> choose_t::ap_const_lv14_12 = "10010";
const sc_lv<14> choose_t::ap_const_lv14_13 = "10011";
const sc_lv<14> choose_t::ap_const_lv14_14 = "10100";
const sc_lv<14> choose_t::ap_const_lv14_15 = "10101";
const sc_lv<14> choose_t::ap_const_lv14_16 = "10110";
const sc_lv<14> choose_t::ap_const_lv14_17 = "10111";
const sc_lv<14> choose_t::ap_const_lv14_18 = "11000";
const sc_lv<14> choose_t::ap_const_lv14_19 = "11001";
const sc_lv<14> choose_t::ap_const_lv14_1A = "11010";
const sc_lv<14> choose_t::ap_const_lv14_1B = "11011";
const sc_lv<14> choose_t::ap_const_lv14_1C = "11100";
const sc_lv<14> choose_t::ap_const_lv14_1D = "11101";
const sc_lv<14> choose_t::ap_const_lv14_1E = "11110";
const sc_lv<14> choose_t::ap_const_lv14_1F = "11111";
const sc_lv<9> choose_t::ap_const_lv9_1 = "1";
const sc_lv<8> choose_t::ap_const_lv8_1 = "1";
const sc_lv<9> choose_t::ap_const_lv9_1FF = "111111111";
const sc_lv<8> choose_t::ap_const_lv8_FF = "11111111";
const sc_lv<9> choose_t::ap_const_lv9_2 = "10";
const sc_lv<8> choose_t::ap_const_lv8_2 = "10";
const sc_lv<8> choose_t::ap_const_lv8_FE = "11111110";
const sc_lv<9> choose_t::ap_const_lv9_3 = "11";
const sc_lv<8> choose_t::ap_const_lv8_3 = "11";
const sc_lv<8> choose_t::ap_const_lv8_FD = "11111101";
const sc_lv<9> choose_t::ap_const_lv9_4 = "100";
const sc_lv<8> choose_t::ap_const_lv8_FC = "11111100";
const sc_lv<6> choose_t::ap_const_lv6_20 = "100000";
const sc_lv<6> choose_t::ap_const_lv6_1 = "1";
const sc_lv<32> choose_t::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const bool choose_t::ap_const_boolean_1 = true;

choose_t::choose_t(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ge25519_base_multipl_1_U = new choose_t_ge25519_qcK("ge25519_base_multipl_1_U");
    ge25519_base_multipl_1_U->clk(ap_clk);
    ge25519_base_multipl_1_U->reset(ap_rst);
    ge25519_base_multipl_1_U->address0(ge25519_base_multipl_1_address0);
    ge25519_base_multipl_1_U->ce0(ge25519_base_multipl_1_ce0);
    ge25519_base_multipl_1_U->q0(ge25519_base_multipl_1_q0);
    ge25519_base_multipl_1_U->address1(ge25519_base_multipl_1_address1);
    ge25519_base_multipl_1_U->ce1(ge25519_base_multipl_1_ce1);
    ge25519_base_multipl_1_U->q1(ge25519_base_multipl_1_q1);
    ge25519_base_multipl_U = new choose_t_ge25519_rcU("ge25519_base_multipl_U");
    ge25519_base_multipl_U->clk(ap_clk);
    ge25519_base_multipl_U->reset(ap_rst);
    ge25519_base_multipl_U->address0(ge25519_base_multipl_address0);
    ge25519_base_multipl_U->ce0(ge25519_base_multipl_ce0);
    ge25519_base_multipl_U->q0(ge25519_base_multipl_q0);
    ge25519_base_multipl_U->address1(ge25519_base_multipl_address1);
    ge25519_base_multipl_U->ce1(ge25519_base_multipl_ce1);
    ge25519_base_multipl_U->q1(ge25519_base_multipl_q1);
    t_v_U = new choose_t_t_v("t_v_U");
    t_v_U->clk(ap_clk);
    t_v_U->reset(ap_rst);
    t_v_U->address0(t_v_address0);
    t_v_U->ce0(t_v_ce0);
    t_v_U->we0(t_v_we0);
    t_v_U->d0(t_x_v_q0);
    t_v_U->q0(t_v_q0);
    v_v_U = new choose_t_v_v("v_v_U");
    v_v_U->clk(ap_clk);
    v_v_U->reset(ap_rst);
    v_v_U->address0(v_v_address0);
    v_v_U->ce0(v_v_ce0);
    v_v_U->we0(v_v_we0);
    v_v_U->d0(v_v_d0);
    v_v_U->q0(v_v_q0);
    v_v_U->address1(grp_crypto_sign_ed25519_7_fu_1424_r_v_address1);
    v_v_U->ce1(v_v_ce1);
    v_v_U->we1(v_v_we1);
    v_v_U->d1(grp_crypto_sign_ed25519_7_fu_1424_r_v_d1);
    v_v_U->q1(v_v_q1);
    grp_crypto_sign_ed25519_7_fu_1424 = new crypto_sign_ed25519_7("grp_crypto_sign_ed25519_7_fu_1424");
    grp_crypto_sign_ed25519_7_fu_1424->ap_clk(ap_clk);
    grp_crypto_sign_ed25519_7_fu_1424->ap_rst(ap_rst);
    grp_crypto_sign_ed25519_7_fu_1424->ap_start(grp_crypto_sign_ed25519_7_fu_1424_ap_start);
    grp_crypto_sign_ed25519_7_fu_1424->ap_done(grp_crypto_sign_ed25519_7_fu_1424_ap_done);
    grp_crypto_sign_ed25519_7_fu_1424->ap_idle(grp_crypto_sign_ed25519_7_fu_1424_ap_idle);
    grp_crypto_sign_ed25519_7_fu_1424->ap_ready(grp_crypto_sign_ed25519_7_fu_1424_ap_ready);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_address0(grp_crypto_sign_ed25519_7_fu_1424_r_v_address0);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_ce0(grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_we0(grp_crypto_sign_ed25519_7_fu_1424_r_v_we0);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_d0(grp_crypto_sign_ed25519_7_fu_1424_r_v_d0);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_q0(v_v_q0);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_address1(grp_crypto_sign_ed25519_7_fu_1424_r_v_address1);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_ce1(grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_we1(grp_crypto_sign_ed25519_7_fu_1424_r_v_we1);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_d1(grp_crypto_sign_ed25519_7_fu_1424_r_v_d1);
    grp_crypto_sign_ed25519_7_fu_1424->r_v_q1(v_v_q1);
    grp_crypto_sign_ed25519_7_fu_1424->y_v_address0(grp_crypto_sign_ed25519_7_fu_1424_y_v_address0);
    grp_crypto_sign_ed25519_7_fu_1424->y_v_ce0(grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0);
    grp_crypto_sign_ed25519_7_fu_1424->y_v_q0(t_v_q0);
    grp_cmov_aff_fu_1430 = new cmov_aff("grp_cmov_aff_fu_1430");
    grp_cmov_aff_fu_1430->ap_clk(ap_clk);
    grp_cmov_aff_fu_1430->ap_rst(ap_rst);
    grp_cmov_aff_fu_1430->ap_start(grp_cmov_aff_fu_1430_ap_start);
    grp_cmov_aff_fu_1430->ap_done(grp_cmov_aff_fu_1430_ap_done);
    grp_cmov_aff_fu_1430->ap_idle(grp_cmov_aff_fu_1430_ap_idle);
    grp_cmov_aff_fu_1430->ap_ready(grp_cmov_aff_fu_1430_ap_ready);
    grp_cmov_aff_fu_1430->r_x_v_address0(grp_cmov_aff_fu_1430_r_x_v_address0);
    grp_cmov_aff_fu_1430->r_x_v_ce0(grp_cmov_aff_fu_1430_r_x_v_ce0);
    grp_cmov_aff_fu_1430->r_x_v_we0(grp_cmov_aff_fu_1430_r_x_v_we0);
    grp_cmov_aff_fu_1430->r_x_v_d0(grp_cmov_aff_fu_1430_r_x_v_d0);
    grp_cmov_aff_fu_1430->r_x_v_q0(t_x_v_q0);
    grp_cmov_aff_fu_1430->r_y_v_address0(grp_cmov_aff_fu_1430_r_y_v_address0);
    grp_cmov_aff_fu_1430->r_y_v_ce0(grp_cmov_aff_fu_1430_r_y_v_ce0);
    grp_cmov_aff_fu_1430->r_y_v_we0(grp_cmov_aff_fu_1430_r_y_v_we0);
    grp_cmov_aff_fu_1430->r_y_v_d0(grp_cmov_aff_fu_1430_r_y_v_d0);
    grp_cmov_aff_fu_1430->r_y_v_q0(t_y_v_q0);
    grp_cmov_aff_fu_1430->p_x_v_address0(grp_cmov_aff_fu_1430_p_x_v_address0);
    grp_cmov_aff_fu_1430->p_x_v_ce0(grp_cmov_aff_fu_1430_p_x_v_ce0);
    grp_cmov_aff_fu_1430->p_x_v_q0(ge25519_base_multipl_1_q0);
    grp_cmov_aff_fu_1430->tmp_919(grp_cmov_aff_fu_1430_tmp_919);
    grp_cmov_aff_fu_1430->p_y_v_address0(grp_cmov_aff_fu_1430_p_y_v_address0);
    grp_cmov_aff_fu_1430->p_y_v_ce0(grp_cmov_aff_fu_1430_p_y_v_ce0);
    grp_cmov_aff_fu_1430->p_y_v_q0(ge25519_base_multipl_q0);
    grp_cmov_aff_fu_1430->tmp_9191(grp_cmov_aff_fu_1430_tmp_9191);
    grp_cmov_aff_fu_1430->b(grp_cmov_aff_fu_1430_b);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond_i5_fu_2204_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond_i5_fu_2204_p2 );

    SC_METHOD(thread_exitcond_i5_fu_2204_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( i_i5_reg_1413 );

    SC_METHOD(thread_exitcond_i_fu_2156_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( i_i_reg_1391 );

    SC_METHOD(thread_exitcond_i_i_fu_2173_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_i_i_reg_1402 );

    SC_METHOD(thread_ge25519_base_multipl_1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_p_x_v_address0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_793_fu_1471_p1 );
    sensitive << ( tmp_797_fu_1498_p3 );
    sensitive << ( tmp_801_fu_1528_p3 );
    sensitive << ( tmp_805_fu_1558_p3 );
    sensitive << ( tmp_809_fu_1588_p3 );
    sensitive << ( tmp_813_fu_1618_p3 );
    sensitive << ( tmp_817_fu_1648_p3 );
    sensitive << ( tmp_821_fu_1678_p3 );
    sensitive << ( tmp_825_fu_1708_p3 );
    sensitive << ( tmp_829_fu_1738_p3 );
    sensitive << ( tmp_833_fu_1768_p3 );
    sensitive << ( tmp_837_fu_1798_p3 );
    sensitive << ( tmp_841_fu_1828_p3 );
    sensitive << ( tmp_845_fu_1858_p3 );
    sensitive << ( tmp_849_fu_1888_p3 );
    sensitive << ( tmp_853_fu_1918_p3 );

    SC_METHOD(thread_ge25519_base_multipl_1_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_795_fu_1483_p3 );
    sensitive << ( tmp_799_fu_1513_p3 );
    sensitive << ( tmp_803_fu_1543_p3 );
    sensitive << ( tmp_807_fu_1573_p3 );
    sensitive << ( tmp_811_fu_1603_p3 );
    sensitive << ( tmp_815_fu_1633_p3 );
    sensitive << ( tmp_819_fu_1663_p3 );
    sensitive << ( tmp_823_fu_1693_p3 );
    sensitive << ( tmp_827_fu_1723_p3 );
    sensitive << ( tmp_831_fu_1753_p3 );
    sensitive << ( tmp_835_fu_1783_p3 );
    sensitive << ( tmp_839_fu_1813_p3 );
    sensitive << ( tmp_843_fu_1843_p3 );
    sensitive << ( tmp_847_fu_1873_p3 );
    sensitive << ( tmp_851_fu_1903_p3 );
    sensitive << ( tmp_855_fu_1933_p3 );

    SC_METHOD(thread_ge25519_base_multipl_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_p_x_v_ce0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ge25519_base_multipl_1_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ge25519_base_multipl_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_p_y_v_address0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_793_fu_1471_p1 );
    sensitive << ( tmp_797_fu_1498_p3 );
    sensitive << ( tmp_801_fu_1528_p3 );
    sensitive << ( tmp_805_fu_1558_p3 );
    sensitive << ( tmp_809_fu_1588_p3 );
    sensitive << ( tmp_813_fu_1618_p3 );
    sensitive << ( tmp_817_fu_1648_p3 );
    sensitive << ( tmp_821_fu_1678_p3 );
    sensitive << ( tmp_825_fu_1708_p3 );
    sensitive << ( tmp_829_fu_1738_p3 );
    sensitive << ( tmp_833_fu_1768_p3 );
    sensitive << ( tmp_837_fu_1798_p3 );
    sensitive << ( tmp_841_fu_1828_p3 );
    sensitive << ( tmp_845_fu_1858_p3 );
    sensitive << ( tmp_849_fu_1888_p3 );
    sensitive << ( tmp_853_fu_1918_p3 );

    SC_METHOD(thread_ge25519_base_multipl_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_795_fu_1483_p3 );
    sensitive << ( tmp_799_fu_1513_p3 );
    sensitive << ( tmp_803_fu_1543_p3 );
    sensitive << ( tmp_807_fu_1573_p3 );
    sensitive << ( tmp_811_fu_1603_p3 );
    sensitive << ( tmp_815_fu_1633_p3 );
    sensitive << ( tmp_819_fu_1663_p3 );
    sensitive << ( tmp_823_fu_1693_p3 );
    sensitive << ( tmp_827_fu_1723_p3 );
    sensitive << ( tmp_831_fu_1753_p3 );
    sensitive << ( tmp_835_fu_1783_p3 );
    sensitive << ( tmp_839_fu_1813_p3 );
    sensitive << ( tmp_843_fu_1843_p3 );
    sensitive << ( tmp_847_fu_1873_p3 );
    sensitive << ( tmp_851_fu_1903_p3 );
    sensitive << ( tmp_855_fu_1933_p3 );

    SC_METHOD(thread_ge25519_base_multipl_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_p_y_v_ce0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ge25519_base_multipl_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_cmov_aff_fu_1430_ap_start);
    sensitive << ( ap_reg_grp_cmov_aff_fu_1430_ap_start );

    SC_METHOD(thread_grp_cmov_aff_fu_1430_b);
    sensitive << ( tmp_856_reg_2618 );
    sensitive << ( tmp_858_reg_2629 );
    sensitive << ( tmp_860_reg_2640 );
    sensitive << ( tmp_868_reg_2651 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_cmov_aff_fu_1430_tmp_919);
    sensitive << ( tmp_s_reg_2612 );
    sensitive << ( tmp_857_reg_2623 );
    sensitive << ( tmp_859_reg_2634 );
    sensitive << ( tmp_861_reg_2645 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_cmov_aff_fu_1430_tmp_9191);
    sensitive << ( tmp_s_reg_2612 );
    sensitive << ( tmp_857_reg_2623 );
    sensitive << ( tmp_859_reg_2634 );
    sensitive << ( tmp_861_reg_2645 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_crypto_sign_ed25519_7_fu_1424_ap_start);
    sensitive << ( ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start );

    SC_METHOD(thread_i_82_fu_2179_p2);
    sensitive << ( i_i_i_reg_1402 );

    SC_METHOD(thread_i_83_fu_2210_p2);
    sensitive << ( i_i5_reg_1413 );

    SC_METHOD(thread_i_fu_2162_p2);
    sensitive << ( i_i_reg_1391 );

    SC_METHOD(thread_mask_fu_2197_p3);
    sensitive << ( tmp_869_reg_2682 );

    SC_METHOD(thread_p_shl_fu_1449_p3);
    sensitive << ( pos_r );

    SC_METHOD(thread_pos_cast4_fu_1445_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_t_v_address0);
    sensitive << ( tmp_i1_reg_2664 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_y_v_address0 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_t_v_ce0);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_t_v_we0);
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_t_x_v_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_i1_fu_2168_p1 );
    sensitive << ( t_x_v_addr_33_reg_2705 );
    sensitive << ( grp_cmov_aff_fu_1430_r_x_v_address0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_x_v_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_i_fu_2216_p1 );

    SC_METHOD(thread_t_x_v_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( grp_cmov_aff_fu_1430_r_x_v_ce0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_x_v_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_x_v_d0);
    sensitive << ( ge25519_base_multipl_1_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_r_x_v_d0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_896_i_fu_2233_p2 );

    SC_METHOD(thread_t_x_v_d1);
    sensitive << ( ge25519_base_multipl_1_q1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_x_v_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_r_x_v_we0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_x_v_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_r_y_v_address0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_r_y_v_ce0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_d0);
    sensitive << ( ge25519_base_multipl_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_r_y_v_d0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_d1);
    sensitive << ( ge25519_base_multipl_q1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_cmov_aff_fu_1430_r_y_v_we0 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_y_v_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_tmp_792_fu_1463_p3);
    sensitive << ( tmp_fu_1457_p2 );

    SC_METHOD(thread_tmp_793_fu_1471_p1);
    sensitive << ( tmp_792_fu_1463_p3 );

    SC_METHOD(thread_tmp_794_fu_1477_p2);
    sensitive << ( tmp_792_fu_1463_p3 );

    SC_METHOD(thread_tmp_795_fu_1483_p3);
    sensitive << ( tmp_794_fu_1477_p2 );

    SC_METHOD(thread_tmp_796_fu_1493_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_797_fu_1498_p3);
    sensitive << ( tmp_796_fu_1493_p2 );

    SC_METHOD(thread_tmp_798_fu_1508_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_799_fu_1513_p3);
    sensitive << ( tmp_798_fu_1508_p2 );

    SC_METHOD(thread_tmp_800_fu_1523_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_801_fu_1528_p3);
    sensitive << ( tmp_800_fu_1523_p2 );

    SC_METHOD(thread_tmp_802_fu_1538_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_803_fu_1543_p3);
    sensitive << ( tmp_802_fu_1538_p2 );

    SC_METHOD(thread_tmp_804_fu_1553_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_805_fu_1558_p3);
    sensitive << ( tmp_804_fu_1553_p2 );

    SC_METHOD(thread_tmp_806_fu_1568_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_807_fu_1573_p3);
    sensitive << ( tmp_806_fu_1568_p2 );

    SC_METHOD(thread_tmp_808_fu_1583_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_809_fu_1588_p3);
    sensitive << ( tmp_808_fu_1583_p2 );

    SC_METHOD(thread_tmp_810_fu_1598_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_811_fu_1603_p3);
    sensitive << ( tmp_810_fu_1598_p2 );

    SC_METHOD(thread_tmp_812_fu_1613_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_813_fu_1618_p3);
    sensitive << ( tmp_812_fu_1613_p2 );

    SC_METHOD(thread_tmp_814_fu_1628_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_815_fu_1633_p3);
    sensitive << ( tmp_814_fu_1628_p2 );

    SC_METHOD(thread_tmp_816_fu_1643_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_817_fu_1648_p3);
    sensitive << ( tmp_816_fu_1643_p2 );

    SC_METHOD(thread_tmp_818_fu_1658_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_819_fu_1663_p3);
    sensitive << ( tmp_818_fu_1658_p2 );

    SC_METHOD(thread_tmp_820_fu_1673_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_821_fu_1678_p3);
    sensitive << ( tmp_820_fu_1673_p2 );

    SC_METHOD(thread_tmp_822_fu_1688_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_823_fu_1693_p3);
    sensitive << ( tmp_822_fu_1688_p2 );

    SC_METHOD(thread_tmp_824_fu_1703_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_825_fu_1708_p3);
    sensitive << ( tmp_824_fu_1703_p2 );

    SC_METHOD(thread_tmp_826_fu_1718_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_827_fu_1723_p3);
    sensitive << ( tmp_826_fu_1718_p2 );

    SC_METHOD(thread_tmp_828_fu_1733_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_829_fu_1738_p3);
    sensitive << ( tmp_828_fu_1733_p2 );

    SC_METHOD(thread_tmp_830_fu_1748_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_831_fu_1753_p3);
    sensitive << ( tmp_830_fu_1748_p2 );

    SC_METHOD(thread_tmp_832_fu_1763_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_833_fu_1768_p3);
    sensitive << ( tmp_832_fu_1763_p2 );

    SC_METHOD(thread_tmp_834_fu_1778_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_835_fu_1783_p3);
    sensitive << ( tmp_834_fu_1778_p2 );

    SC_METHOD(thread_tmp_836_fu_1793_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_837_fu_1798_p3);
    sensitive << ( tmp_836_fu_1793_p2 );

    SC_METHOD(thread_tmp_838_fu_1808_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_839_fu_1813_p3);
    sensitive << ( tmp_838_fu_1808_p2 );

    SC_METHOD(thread_tmp_840_fu_1823_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_841_fu_1828_p3);
    sensitive << ( tmp_840_fu_1823_p2 );

    SC_METHOD(thread_tmp_842_fu_1838_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_843_fu_1843_p3);
    sensitive << ( tmp_842_fu_1838_p2 );

    SC_METHOD(thread_tmp_844_fu_1853_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_845_fu_1858_p3);
    sensitive << ( tmp_844_fu_1853_p2 );

    SC_METHOD(thread_tmp_846_fu_1868_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_847_fu_1873_p3);
    sensitive << ( tmp_846_fu_1868_p2 );

    SC_METHOD(thread_tmp_848_fu_1883_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_849_fu_1888_p3);
    sensitive << ( tmp_848_fu_1883_p2 );

    SC_METHOD(thread_tmp_850_fu_1898_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_851_fu_1903_p3);
    sensitive << ( tmp_850_fu_1898_p2 );

    SC_METHOD(thread_tmp_852_fu_1913_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_853_fu_1918_p3);
    sensitive << ( tmp_852_fu_1913_p2 );

    SC_METHOD(thread_tmp_854_fu_1928_p2);
    sensitive << ( tmp_792_reg_2248 );

    SC_METHOD(thread_tmp_855_fu_1933_p3);
    sensitive << ( tmp_854_fu_1928_p2 );

    SC_METHOD(thread_tmp_856_fu_1998_p2);
    sensitive << ( tmp_863_fu_1990_p3 );
    sensitive << ( tmp_862_fu_1966_p3 );

    SC_METHOD(thread_tmp_857_fu_2005_p2);
    sensitive << ( tmp_reg_2240 );

    SC_METHOD(thread_tmp_858_fu_2058_p2);
    sensitive << ( tmp_865_fu_2050_p3 );
    sensitive << ( tmp_864_fu_2027_p3 );

    SC_METHOD(thread_tmp_859_fu_2065_p2);
    sensitive << ( tmp_reg_2240 );

    SC_METHOD(thread_tmp_860_fu_2118_p2);
    sensitive << ( tmp_867_fu_2110_p3 );
    sensitive << ( tmp_866_fu_2087_p3 );

    SC_METHOD(thread_tmp_861_fu_2125_p2);
    sensitive << ( tmp_reg_2240 );

    SC_METHOD(thread_tmp_862_fu_1966_p3);
    sensitive << ( y_fu_1960_p2 );

    SC_METHOD(thread_tmp_863_fu_1990_p3);
    sensitive << ( y_1_fu_1984_p2 );

    SC_METHOD(thread_tmp_864_fu_2027_p3);
    sensitive << ( y_2_fu_2021_p2 );

    SC_METHOD(thread_tmp_865_fu_2050_p3);
    sensitive << ( y_3_fu_2044_p2 );

    SC_METHOD(thread_tmp_866_fu_2087_p3);
    sensitive << ( y_4_fu_2081_p2 );

    SC_METHOD(thread_tmp_867_fu_2110_p3);
    sensitive << ( y_5_fu_2104_p2 );

    SC_METHOD(thread_tmp_894_i_fu_2222_p2);
    sensitive << ( t_x_v_q1 );
    sensitive << ( v_v_q0 );

    SC_METHOD(thread_tmp_895_i_fu_2228_p2);
    sensitive << ( mask_reg_2687 );
    sensitive << ( tmp_894_i_fu_2222_p2 );

    SC_METHOD(thread_tmp_896_i_fu_2233_p2);
    sensitive << ( t_x_v_q1 );
    sensitive << ( tmp_895_i_fu_2228_p2 );

    SC_METHOD(thread_tmp_fu_1457_p2);
    sensitive << ( p_shl_fu_1449_p3 );
    sensitive << ( pos_cast4_fu_1445_p1 );

    SC_METHOD(thread_tmp_i1_fu_2168_p1);
    sensitive << ( i_i_reg_1391 );

    SC_METHOD(thread_tmp_i_fu_2216_p1);
    sensitive << ( i_i5_reg_1413 );

    SC_METHOD(thread_tmp_i_i_fu_2185_p1);
    sensitive << ( i_i_i_reg_1402 );

    SC_METHOD(thread_tmp_s_fu_1943_p2);
    sensitive << ( tmp_reg_2240 );

    SC_METHOD(thread_v_v_address0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_i_i_fu_2173_p2 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_r_v_address0 );
    sensitive << ( tmp_i_i_fu_2185_p1 );
    sensitive << ( tmp_i_fu_2216_p1 );

    SC_METHOD(thread_v_v_ce0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_i_i_fu_2173_p2 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0 );

    SC_METHOD(thread_v_v_ce1);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1 );

    SC_METHOD(thread_v_v_d0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_i_i_fu_2173_p2 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_r_v_d0 );

    SC_METHOD(thread_v_v_we0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_i_i_fu_2173_p2 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_r_v_we0 );

    SC_METHOD(thread_v_v_we1);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_r_v_we1 );

    SC_METHOD(thread_x_10_fu_2035_p2);
    sensitive << ( b );

    SC_METHOD(thread_x_11_fu_2072_p2);
    sensitive << ( b );

    SC_METHOD(thread_x_12_fu_2095_p2);
    sensitive << ( b );

    SC_METHOD(thread_x_13_fu_2132_p2);
    sensitive << ( b );

    SC_METHOD(thread_x_8_fu_1974_p2);
    sensitive << ( b );

    SC_METHOD(thread_x_9_fu_2012_p2);
    sensitive << ( b );

    SC_METHOD(thread_x_fu_1950_p2);
    sensitive << ( b );

    SC_METHOD(thread_y_12_cast_fu_2077_p1);
    sensitive << ( x_11_fu_2072_p2 );

    SC_METHOD(thread_y_15_cast_fu_2100_p1);
    sensitive << ( x_12_fu_2095_p2 );

    SC_METHOD(thread_y_18_cast_fu_2137_p1);
    sensitive << ( x_13_fu_2132_p2 );

    SC_METHOD(thread_y_1_fu_1984_p2);
    sensitive << ( y_3_cast_fu_1980_p1 );

    SC_METHOD(thread_y_2_fu_2021_p2);
    sensitive << ( y_6_cast_fu_2017_p1 );

    SC_METHOD(thread_y_3_cast_fu_1980_p1);
    sensitive << ( x_8_fu_1974_p2 );

    SC_METHOD(thread_y_3_fu_2044_p2);
    sensitive << ( y_9_cast_fu_2040_p1 );

    SC_METHOD(thread_y_4_fu_2081_p2);
    sensitive << ( y_12_cast_fu_2077_p1 );

    SC_METHOD(thread_y_5_fu_2104_p2);
    sensitive << ( y_15_cast_fu_2100_p1 );

    SC_METHOD(thread_y_6_cast_fu_2017_p1);
    sensitive << ( x_9_fu_2012_p2 );

    SC_METHOD(thread_y_6_fu_2141_p2);
    sensitive << ( y_18_cast_fu_2137_p1 );

    SC_METHOD(thread_y_9_cast_fu_2040_p1);
    sensitive << ( x_10_fu_2035_p2 );

    SC_METHOD(thread_y_cast_fu_1956_p1);
    sensitive << ( x_fu_1950_p2 );

    SC_METHOD(thread_y_fu_1960_p2);
    sensitive << ( y_cast_fu_1956_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( exitcond_i_fu_2156_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_i_i_fu_2173_p2 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_crypto_sign_ed25519_7_fu_1424_ap_done );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond_i5_fu_2204_p2 );
    sensitive << ( grp_cmov_aff_fu_1430_ap_done );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );

    ap_CS_fsm = "0000000000000000000000000000001";
    ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start = SC_LOGIC_0;
    ap_reg_grp_cmov_aff_fu_1430_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "choose_t_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, t_x_v_address0, "(port)t_x_v_address0");
    sc_trace(mVcdFile, t_x_v_ce0, "(port)t_x_v_ce0");
    sc_trace(mVcdFile, t_x_v_we0, "(port)t_x_v_we0");
    sc_trace(mVcdFile, t_x_v_d0, "(port)t_x_v_d0");
    sc_trace(mVcdFile, t_x_v_q0, "(port)t_x_v_q0");
    sc_trace(mVcdFile, t_x_v_address1, "(port)t_x_v_address1");
    sc_trace(mVcdFile, t_x_v_ce1, "(port)t_x_v_ce1");
    sc_trace(mVcdFile, t_x_v_we1, "(port)t_x_v_we1");
    sc_trace(mVcdFile, t_x_v_d1, "(port)t_x_v_d1");
    sc_trace(mVcdFile, t_x_v_q1, "(port)t_x_v_q1");
    sc_trace(mVcdFile, t_y_v_address0, "(port)t_y_v_address0");
    sc_trace(mVcdFile, t_y_v_ce0, "(port)t_y_v_ce0");
    sc_trace(mVcdFile, t_y_v_we0, "(port)t_y_v_we0");
    sc_trace(mVcdFile, t_y_v_d0, "(port)t_y_v_d0");
    sc_trace(mVcdFile, t_y_v_q0, "(port)t_y_v_q0");
    sc_trace(mVcdFile, t_y_v_address1, "(port)t_y_v_address1");
    sc_trace(mVcdFile, t_y_v_ce1, "(port)t_y_v_ce1");
    sc_trace(mVcdFile, t_y_v_we1, "(port)t_y_v_we1");
    sc_trace(mVcdFile, t_y_v_d1, "(port)t_y_v_d1");
    sc_trace(mVcdFile, pos_r, "(port)pos_r");
    sc_trace(mVcdFile, b, "(port)b");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ge25519_base_multipl_1_address0, "ge25519_base_multipl_1_address0");
    sc_trace(mVcdFile, ge25519_base_multipl_1_ce0, "ge25519_base_multipl_1_ce0");
    sc_trace(mVcdFile, ge25519_base_multipl_1_q0, "ge25519_base_multipl_1_q0");
    sc_trace(mVcdFile, ge25519_base_multipl_1_address1, "ge25519_base_multipl_1_address1");
    sc_trace(mVcdFile, ge25519_base_multipl_1_ce1, "ge25519_base_multipl_1_ce1");
    sc_trace(mVcdFile, ge25519_base_multipl_1_q1, "ge25519_base_multipl_1_q1");
    sc_trace(mVcdFile, ge25519_base_multipl_address0, "ge25519_base_multipl_address0");
    sc_trace(mVcdFile, ge25519_base_multipl_ce0, "ge25519_base_multipl_ce0");
    sc_trace(mVcdFile, ge25519_base_multipl_q0, "ge25519_base_multipl_q0");
    sc_trace(mVcdFile, ge25519_base_multipl_address1, "ge25519_base_multipl_address1");
    sc_trace(mVcdFile, ge25519_base_multipl_ce1, "ge25519_base_multipl_ce1");
    sc_trace(mVcdFile, ge25519_base_multipl_q1, "ge25519_base_multipl_q1");
    sc_trace(mVcdFile, tmp_fu_1457_p2, "tmp_fu_1457_p2");
    sc_trace(mVcdFile, tmp_reg_2240, "tmp_reg_2240");
    sc_trace(mVcdFile, tmp_792_fu_1463_p3, "tmp_792_fu_1463_p3");
    sc_trace(mVcdFile, tmp_792_reg_2248, "tmp_792_reg_2248");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_s_fu_1943_p2, "tmp_s_fu_1943_p2");
    sc_trace(mVcdFile, tmp_s_reg_2612, "tmp_s_reg_2612");
    sc_trace(mVcdFile, tmp_856_fu_1998_p2, "tmp_856_fu_1998_p2");
    sc_trace(mVcdFile, tmp_856_reg_2618, "tmp_856_reg_2618");
    sc_trace(mVcdFile, tmp_857_fu_2005_p2, "tmp_857_fu_2005_p2");
    sc_trace(mVcdFile, tmp_857_reg_2623, "tmp_857_reg_2623");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_858_fu_2058_p2, "tmp_858_fu_2058_p2");
    sc_trace(mVcdFile, tmp_858_reg_2629, "tmp_858_reg_2629");
    sc_trace(mVcdFile, tmp_859_fu_2065_p2, "tmp_859_fu_2065_p2");
    sc_trace(mVcdFile, tmp_859_reg_2634, "tmp_859_reg_2634");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_860_fu_2118_p2, "tmp_860_fu_2118_p2");
    sc_trace(mVcdFile, tmp_860_reg_2640, "tmp_860_reg_2640");
    sc_trace(mVcdFile, tmp_861_fu_2125_p2, "tmp_861_fu_2125_p2");
    sc_trace(mVcdFile, tmp_861_reg_2645, "tmp_861_reg_2645");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_868_reg_2651, "tmp_868_reg_2651");
    sc_trace(mVcdFile, i_fu_2162_p2, "i_fu_2162_p2");
    sc_trace(mVcdFile, i_reg_2659, "i_reg_2659");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_i1_fu_2168_p1, "tmp_i1_fu_2168_p1");
    sc_trace(mVcdFile, tmp_i1_reg_2664, "tmp_i1_reg_2664");
    sc_trace(mVcdFile, exitcond_i_fu_2156_p2, "exitcond_i_fu_2156_p2");
    sc_trace(mVcdFile, i_82_fu_2179_p2, "i_82_fu_2179_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_869_reg_2682, "tmp_869_reg_2682");
    sc_trace(mVcdFile, exitcond_i_i_fu_2173_p2, "exitcond_i_i_fu_2173_p2");
    sc_trace(mVcdFile, mask_fu_2197_p3, "mask_fu_2197_p3");
    sc_trace(mVcdFile, mask_reg_2687, "mask_reg_2687");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_ap_done, "grp_crypto_sign_ed25519_7_fu_1424_ap_done");
    sc_trace(mVcdFile, i_83_fu_2210_p2, "i_83_fu_2210_p2");
    sc_trace(mVcdFile, i_83_reg_2695, "i_83_reg_2695");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, exitcond_i5_fu_2204_p2, "exitcond_i5_fu_2204_p2");
    sc_trace(mVcdFile, t_x_v_addr_33_reg_2705, "t_x_v_addr_33_reg_2705");
    sc_trace(mVcdFile, t_v_address0, "t_v_address0");
    sc_trace(mVcdFile, t_v_ce0, "t_v_ce0");
    sc_trace(mVcdFile, t_v_we0, "t_v_we0");
    sc_trace(mVcdFile, t_v_q0, "t_v_q0");
    sc_trace(mVcdFile, v_v_address0, "v_v_address0");
    sc_trace(mVcdFile, v_v_ce0, "v_v_ce0");
    sc_trace(mVcdFile, v_v_we0, "v_v_we0");
    sc_trace(mVcdFile, v_v_d0, "v_v_d0");
    sc_trace(mVcdFile, v_v_q0, "v_v_q0");
    sc_trace(mVcdFile, v_v_ce1, "v_v_ce1");
    sc_trace(mVcdFile, v_v_we1, "v_v_we1");
    sc_trace(mVcdFile, v_v_q1, "v_v_q1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_ap_start, "grp_crypto_sign_ed25519_7_fu_1424_ap_start");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_ap_idle, "grp_crypto_sign_ed25519_7_fu_1424_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_ap_ready, "grp_crypto_sign_ed25519_7_fu_1424_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_address0, "grp_crypto_sign_ed25519_7_fu_1424_r_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0, "grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_we0, "grp_crypto_sign_ed25519_7_fu_1424_r_v_we0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_d0, "grp_crypto_sign_ed25519_7_fu_1424_r_v_d0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_address1, "grp_crypto_sign_ed25519_7_fu_1424_r_v_address1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1, "grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_we1, "grp_crypto_sign_ed25519_7_fu_1424_r_v_we1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_r_v_d1, "grp_crypto_sign_ed25519_7_fu_1424_r_v_d1");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_y_v_address0, "grp_crypto_sign_ed25519_7_fu_1424_y_v_address0");
    sc_trace(mVcdFile, grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0, "grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_ap_start, "grp_cmov_aff_fu_1430_ap_start");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_ap_done, "grp_cmov_aff_fu_1430_ap_done");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_ap_idle, "grp_cmov_aff_fu_1430_ap_idle");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_ap_ready, "grp_cmov_aff_fu_1430_ap_ready");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_x_v_address0, "grp_cmov_aff_fu_1430_r_x_v_address0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_x_v_ce0, "grp_cmov_aff_fu_1430_r_x_v_ce0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_x_v_we0, "grp_cmov_aff_fu_1430_r_x_v_we0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_x_v_d0, "grp_cmov_aff_fu_1430_r_x_v_d0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_y_v_address0, "grp_cmov_aff_fu_1430_r_y_v_address0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_y_v_ce0, "grp_cmov_aff_fu_1430_r_y_v_ce0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_y_v_we0, "grp_cmov_aff_fu_1430_r_y_v_we0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_r_y_v_d0, "grp_cmov_aff_fu_1430_r_y_v_d0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_p_x_v_address0, "grp_cmov_aff_fu_1430_p_x_v_address0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_p_x_v_ce0, "grp_cmov_aff_fu_1430_p_x_v_ce0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_tmp_919, "grp_cmov_aff_fu_1430_tmp_919");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_p_y_v_address0, "grp_cmov_aff_fu_1430_p_y_v_address0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_p_y_v_ce0, "grp_cmov_aff_fu_1430_p_y_v_ce0");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_tmp_9191, "grp_cmov_aff_fu_1430_tmp_9191");
    sc_trace(mVcdFile, grp_cmov_aff_fu_1430_b, "grp_cmov_aff_fu_1430_b");
    sc_trace(mVcdFile, i_i_reg_1391, "i_i_reg_1391");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_i_i_reg_1402, "i_i_i_reg_1402");
    sc_trace(mVcdFile, i_i5_reg_1413, "i_i5_reg_1413");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start, "ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_cmov_aff_fu_1430_ap_start, "ap_reg_grp_cmov_aff_fu_1430_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_793_fu_1471_p1, "tmp_793_fu_1471_p1");
    sc_trace(mVcdFile, tmp_795_fu_1483_p3, "tmp_795_fu_1483_p3");
    sc_trace(mVcdFile, tmp_797_fu_1498_p3, "tmp_797_fu_1498_p3");
    sc_trace(mVcdFile, tmp_799_fu_1513_p3, "tmp_799_fu_1513_p3");
    sc_trace(mVcdFile, tmp_801_fu_1528_p3, "tmp_801_fu_1528_p3");
    sc_trace(mVcdFile, tmp_803_fu_1543_p3, "tmp_803_fu_1543_p3");
    sc_trace(mVcdFile, tmp_805_fu_1558_p3, "tmp_805_fu_1558_p3");
    sc_trace(mVcdFile, tmp_807_fu_1573_p3, "tmp_807_fu_1573_p3");
    sc_trace(mVcdFile, tmp_809_fu_1588_p3, "tmp_809_fu_1588_p3");
    sc_trace(mVcdFile, tmp_811_fu_1603_p3, "tmp_811_fu_1603_p3");
    sc_trace(mVcdFile, tmp_813_fu_1618_p3, "tmp_813_fu_1618_p3");
    sc_trace(mVcdFile, tmp_815_fu_1633_p3, "tmp_815_fu_1633_p3");
    sc_trace(mVcdFile, tmp_817_fu_1648_p3, "tmp_817_fu_1648_p3");
    sc_trace(mVcdFile, tmp_819_fu_1663_p3, "tmp_819_fu_1663_p3");
    sc_trace(mVcdFile, tmp_821_fu_1678_p3, "tmp_821_fu_1678_p3");
    sc_trace(mVcdFile, tmp_823_fu_1693_p3, "tmp_823_fu_1693_p3");
    sc_trace(mVcdFile, tmp_825_fu_1708_p3, "tmp_825_fu_1708_p3");
    sc_trace(mVcdFile, tmp_827_fu_1723_p3, "tmp_827_fu_1723_p3");
    sc_trace(mVcdFile, tmp_829_fu_1738_p3, "tmp_829_fu_1738_p3");
    sc_trace(mVcdFile, tmp_831_fu_1753_p3, "tmp_831_fu_1753_p3");
    sc_trace(mVcdFile, tmp_833_fu_1768_p3, "tmp_833_fu_1768_p3");
    sc_trace(mVcdFile, tmp_835_fu_1783_p3, "tmp_835_fu_1783_p3");
    sc_trace(mVcdFile, tmp_837_fu_1798_p3, "tmp_837_fu_1798_p3");
    sc_trace(mVcdFile, tmp_839_fu_1813_p3, "tmp_839_fu_1813_p3");
    sc_trace(mVcdFile, tmp_841_fu_1828_p3, "tmp_841_fu_1828_p3");
    sc_trace(mVcdFile, tmp_843_fu_1843_p3, "tmp_843_fu_1843_p3");
    sc_trace(mVcdFile, tmp_845_fu_1858_p3, "tmp_845_fu_1858_p3");
    sc_trace(mVcdFile, tmp_847_fu_1873_p3, "tmp_847_fu_1873_p3");
    sc_trace(mVcdFile, tmp_849_fu_1888_p3, "tmp_849_fu_1888_p3");
    sc_trace(mVcdFile, tmp_851_fu_1903_p3, "tmp_851_fu_1903_p3");
    sc_trace(mVcdFile, tmp_853_fu_1918_p3, "tmp_853_fu_1918_p3");
    sc_trace(mVcdFile, tmp_855_fu_1933_p3, "tmp_855_fu_1933_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_i_i_fu_2185_p1, "tmp_i_i_fu_2185_p1");
    sc_trace(mVcdFile, tmp_i_fu_2216_p1, "tmp_i_fu_2216_p1");
    sc_trace(mVcdFile, tmp_896_i_fu_2233_p2, "tmp_896_i_fu_2233_p2");
    sc_trace(mVcdFile, p_shl_fu_1449_p3, "p_shl_fu_1449_p3");
    sc_trace(mVcdFile, pos_cast4_fu_1445_p1, "pos_cast4_fu_1445_p1");
    sc_trace(mVcdFile, tmp_794_fu_1477_p2, "tmp_794_fu_1477_p2");
    sc_trace(mVcdFile, tmp_796_fu_1493_p2, "tmp_796_fu_1493_p2");
    sc_trace(mVcdFile, tmp_798_fu_1508_p2, "tmp_798_fu_1508_p2");
    sc_trace(mVcdFile, tmp_800_fu_1523_p2, "tmp_800_fu_1523_p2");
    sc_trace(mVcdFile, tmp_802_fu_1538_p2, "tmp_802_fu_1538_p2");
    sc_trace(mVcdFile, tmp_804_fu_1553_p2, "tmp_804_fu_1553_p2");
    sc_trace(mVcdFile, tmp_806_fu_1568_p2, "tmp_806_fu_1568_p2");
    sc_trace(mVcdFile, tmp_808_fu_1583_p2, "tmp_808_fu_1583_p2");
    sc_trace(mVcdFile, tmp_810_fu_1598_p2, "tmp_810_fu_1598_p2");
    sc_trace(mVcdFile, tmp_812_fu_1613_p2, "tmp_812_fu_1613_p2");
    sc_trace(mVcdFile, tmp_814_fu_1628_p2, "tmp_814_fu_1628_p2");
    sc_trace(mVcdFile, tmp_816_fu_1643_p2, "tmp_816_fu_1643_p2");
    sc_trace(mVcdFile, tmp_818_fu_1658_p2, "tmp_818_fu_1658_p2");
    sc_trace(mVcdFile, tmp_820_fu_1673_p2, "tmp_820_fu_1673_p2");
    sc_trace(mVcdFile, tmp_822_fu_1688_p2, "tmp_822_fu_1688_p2");
    sc_trace(mVcdFile, tmp_824_fu_1703_p2, "tmp_824_fu_1703_p2");
    sc_trace(mVcdFile, tmp_826_fu_1718_p2, "tmp_826_fu_1718_p2");
    sc_trace(mVcdFile, tmp_828_fu_1733_p2, "tmp_828_fu_1733_p2");
    sc_trace(mVcdFile, tmp_830_fu_1748_p2, "tmp_830_fu_1748_p2");
    sc_trace(mVcdFile, tmp_832_fu_1763_p2, "tmp_832_fu_1763_p2");
    sc_trace(mVcdFile, tmp_834_fu_1778_p2, "tmp_834_fu_1778_p2");
    sc_trace(mVcdFile, tmp_836_fu_1793_p2, "tmp_836_fu_1793_p2");
    sc_trace(mVcdFile, tmp_838_fu_1808_p2, "tmp_838_fu_1808_p2");
    sc_trace(mVcdFile, tmp_840_fu_1823_p2, "tmp_840_fu_1823_p2");
    sc_trace(mVcdFile, tmp_842_fu_1838_p2, "tmp_842_fu_1838_p2");
    sc_trace(mVcdFile, tmp_844_fu_1853_p2, "tmp_844_fu_1853_p2");
    sc_trace(mVcdFile, tmp_846_fu_1868_p2, "tmp_846_fu_1868_p2");
    sc_trace(mVcdFile, tmp_848_fu_1883_p2, "tmp_848_fu_1883_p2");
    sc_trace(mVcdFile, tmp_850_fu_1898_p2, "tmp_850_fu_1898_p2");
    sc_trace(mVcdFile, tmp_852_fu_1913_p2, "tmp_852_fu_1913_p2");
    sc_trace(mVcdFile, tmp_854_fu_1928_p2, "tmp_854_fu_1928_p2");
    sc_trace(mVcdFile, x_fu_1950_p2, "x_fu_1950_p2");
    sc_trace(mVcdFile, y_cast_fu_1956_p1, "y_cast_fu_1956_p1");
    sc_trace(mVcdFile, y_fu_1960_p2, "y_fu_1960_p2");
    sc_trace(mVcdFile, x_8_fu_1974_p2, "x_8_fu_1974_p2");
    sc_trace(mVcdFile, y_3_cast_fu_1980_p1, "y_3_cast_fu_1980_p1");
    sc_trace(mVcdFile, y_1_fu_1984_p2, "y_1_fu_1984_p2");
    sc_trace(mVcdFile, tmp_863_fu_1990_p3, "tmp_863_fu_1990_p3");
    sc_trace(mVcdFile, tmp_862_fu_1966_p3, "tmp_862_fu_1966_p3");
    sc_trace(mVcdFile, x_9_fu_2012_p2, "x_9_fu_2012_p2");
    sc_trace(mVcdFile, y_6_cast_fu_2017_p1, "y_6_cast_fu_2017_p1");
    sc_trace(mVcdFile, y_2_fu_2021_p2, "y_2_fu_2021_p2");
    sc_trace(mVcdFile, x_10_fu_2035_p2, "x_10_fu_2035_p2");
    sc_trace(mVcdFile, y_9_cast_fu_2040_p1, "y_9_cast_fu_2040_p1");
    sc_trace(mVcdFile, y_3_fu_2044_p2, "y_3_fu_2044_p2");
    sc_trace(mVcdFile, tmp_865_fu_2050_p3, "tmp_865_fu_2050_p3");
    sc_trace(mVcdFile, tmp_864_fu_2027_p3, "tmp_864_fu_2027_p3");
    sc_trace(mVcdFile, x_11_fu_2072_p2, "x_11_fu_2072_p2");
    sc_trace(mVcdFile, y_12_cast_fu_2077_p1, "y_12_cast_fu_2077_p1");
    sc_trace(mVcdFile, y_4_fu_2081_p2, "y_4_fu_2081_p2");
    sc_trace(mVcdFile, x_12_fu_2095_p2, "x_12_fu_2095_p2");
    sc_trace(mVcdFile, y_15_cast_fu_2100_p1, "y_15_cast_fu_2100_p1");
    sc_trace(mVcdFile, y_5_fu_2104_p2, "y_5_fu_2104_p2");
    sc_trace(mVcdFile, tmp_867_fu_2110_p3, "tmp_867_fu_2110_p3");
    sc_trace(mVcdFile, tmp_866_fu_2087_p3, "tmp_866_fu_2087_p3");
    sc_trace(mVcdFile, x_13_fu_2132_p2, "x_13_fu_2132_p2");
    sc_trace(mVcdFile, y_18_cast_fu_2137_p1, "y_18_cast_fu_2137_p1");
    sc_trace(mVcdFile, y_6_fu_2141_p2, "y_6_fu_2141_p2");
    sc_trace(mVcdFile, tmp_894_i_fu_2222_p2, "tmp_894_i_fu_2222_p2");
    sc_trace(mVcdFile, tmp_895_i_fu_2228_p2, "tmp_895_i_fu_2228_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

choose_t::~choose_t() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ge25519_base_multipl_1_U;
    delete ge25519_base_multipl_U;
    delete t_v_U;
    delete v_v_U;
    delete grp_crypto_sign_ed25519_7_fu_1424;
    delete grp_cmov_aff_fu_1430;
}

void choose_t::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_cmov_aff_fu_1430_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
            ap_reg_grp_cmov_aff_fu_1430_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_cmov_aff_fu_1430_ap_ready.read())) {
            ap_reg_grp_cmov_aff_fu_1430_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
             esl_seteq<1,1,1>(exitcond_i_i_fu_2173_p2.read(), ap_const_lv1_1))) {
            ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sign_ed25519_7_fu_1424_ap_ready.read())) {
            ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        i_i5_reg_1413 = i_83_reg_2695.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
                esl_seteq<1,1,1>(grp_crypto_sign_ed25519_7_fu_1424_ap_done.read(), ap_const_logic_1))) {
        i_i5_reg_1413 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_2156_p2.read(), ap_const_lv1_1))) {
        i_i_i_reg_1402 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_2173_p2.read()))) {
        i_i_i_reg_1402 = i_82_fu_2179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i_i_reg_1391 = i_reg_2659.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                esl_seteq<1,1,1>(grp_cmov_aff_fu_1430_ap_done.read(), ap_const_logic_1))) {
        i_i_reg_1391 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        i_83_reg_2695 = i_83_fu_2210_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        i_reg_2659 = i_fu_2162_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_7_fu_1424_ap_done.read(), ap_const_logic_1))) {
        mask_reg_2687 = mask_fu_2197_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i5_fu_2204_p2.read()))) {
        t_x_v_addr_33_reg_2705 =  (sc_lv<5>) (tmp_i_fu_2216_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_792_reg_2248 = tmp_792_fu_1463_p3.read();
        tmp_reg_2240 = tmp_fu_1457_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_856_reg_2618 = tmp_856_fu_1998_p2.read();
        tmp_s_reg_2612 = tmp_s_fu_1943_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_857_reg_2623 = tmp_857_fu_2005_p2.read();
        tmp_858_reg_2629 = tmp_858_fu_2058_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_859_reg_2634 = tmp_859_fu_2065_p2.read();
        tmp_860_reg_2640 = tmp_860_fu_2118_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tmp_861_reg_2645 = tmp_861_fu_2125_p2.read();
        tmp_868_reg_2651 = y_6_fu_2141_p2.read().range(8, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(exitcond_i_i_fu_2173_p2.read(), ap_const_lv1_1))) {
        tmp_869_reg_2682 = b.read().range(7, 7);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(exitcond_i_fu_2156_p2.read(), ap_const_lv1_0))) {
        tmp_i1_reg_2664 = tmp_i1_fu_2168_p1.read();
    }
}

void choose_t::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void choose_t::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void choose_t::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void choose_t::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void choose_t::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void choose_t::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void choose_t::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void choose_t::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void choose_t::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void choose_t::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void choose_t::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void choose_t::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void choose_t::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void choose_t::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void choose_t::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void choose_t::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void choose_t::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void choose_t::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void choose_t::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void choose_t::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void choose_t::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void choose_t::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void choose_t::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void choose_t::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void choose_t::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void choose_t::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void choose_t::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void choose_t::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void choose_t::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void choose_t::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void choose_t::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void choose_t::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i5_fu_2204_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void choose_t::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void choose_t::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i5_fu_2204_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void choose_t::thread_exitcond_i5_fu_2204_p2() {
    exitcond_i5_fu_2204_p2 = (!i_i5_reg_1413.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i5_reg_1413.read() == ap_const_lv6_20);
}

void choose_t::thread_exitcond_i_fu_2156_p2() {
    exitcond_i_fu_2156_p2 = (!i_i_reg_1391.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_1391.read() == ap_const_lv6_20);
}

void choose_t::thread_exitcond_i_i_fu_2173_p2() {
    exitcond_i_i_fu_2173_p2 = (!i_i_i_reg_1402.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_i_reg_1402.read() == ap_const_lv6_20);
}

void choose_t::thread_ge25519_base_multipl_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_853_fu_1918_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_849_fu_1888_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_845_fu_1858_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_841_fu_1828_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_837_fu_1798_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_833_fu_1768_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_829_fu_1738_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_825_fu_1708_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_821_fu_1678_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_817_fu_1648_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_813_fu_1618_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_809_fu_1588_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_805_fu_1558_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_801_fu_1528_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_797_fu_1498_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ge25519_base_multipl_1_address0 =  (sc_lv<14>) (tmp_793_fu_1471_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ge25519_base_multipl_1_address0 = grp_cmov_aff_fu_1430_p_x_v_address0.read();
    } else {
        ge25519_base_multipl_1_address0 = "XXXXXXXXXXXXXX";
    }
}

void choose_t::thread_ge25519_base_multipl_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_855_fu_1933_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_851_fu_1903_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_847_fu_1873_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_843_fu_1843_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_839_fu_1813_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_835_fu_1783_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_831_fu_1753_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_827_fu_1723_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_823_fu_1693_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_819_fu_1663_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_815_fu_1633_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_811_fu_1603_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_807_fu_1573_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_803_fu_1543_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_799_fu_1513_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ge25519_base_multipl_1_address1 =  (sc_lv<14>) (tmp_795_fu_1483_p3.read());
    } else {
        ge25519_base_multipl_1_address1 = "XXXXXXXXXXXXXX";
    }
}

void choose_t::thread_ge25519_base_multipl_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        ge25519_base_multipl_1_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ge25519_base_multipl_1_ce0 = grp_cmov_aff_fu_1430_p_x_v_ce0.read();
    } else {
        ge25519_base_multipl_1_ce0 = ap_const_logic_0;
    }
}

void choose_t::thread_ge25519_base_multipl_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        ge25519_base_multipl_1_ce1 = ap_const_logic_1;
    } else {
        ge25519_base_multipl_1_ce1 = ap_const_logic_0;
    }
}

void choose_t::thread_ge25519_base_multipl_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_853_fu_1918_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_849_fu_1888_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_845_fu_1858_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_841_fu_1828_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_837_fu_1798_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_833_fu_1768_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_829_fu_1738_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_825_fu_1708_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_821_fu_1678_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_817_fu_1648_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_813_fu_1618_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_809_fu_1588_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_805_fu_1558_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_801_fu_1528_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_797_fu_1498_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ge25519_base_multipl_address0 =  (sc_lv<14>) (tmp_793_fu_1471_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ge25519_base_multipl_address0 = grp_cmov_aff_fu_1430_p_y_v_address0.read();
    } else {
        ge25519_base_multipl_address0 = "XXXXXXXXXXXXXX";
    }
}

void choose_t::thread_ge25519_base_multipl_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_855_fu_1933_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_851_fu_1903_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_847_fu_1873_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_843_fu_1843_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_839_fu_1813_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_835_fu_1783_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_831_fu_1753_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_827_fu_1723_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_823_fu_1693_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_819_fu_1663_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_815_fu_1633_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_811_fu_1603_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_807_fu_1573_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_803_fu_1543_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_799_fu_1513_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ge25519_base_multipl_address1 =  (sc_lv<14>) (tmp_795_fu_1483_p3.read());
    } else {
        ge25519_base_multipl_address1 = "XXXXXXXXXXXXXX";
    }
}

void choose_t::thread_ge25519_base_multipl_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        ge25519_base_multipl_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ge25519_base_multipl_ce0 = grp_cmov_aff_fu_1430_p_y_v_ce0.read();
    } else {
        ge25519_base_multipl_ce0 = ap_const_logic_0;
    }
}

void choose_t::thread_ge25519_base_multipl_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        ge25519_base_multipl_ce1 = ap_const_logic_1;
    } else {
        ge25519_base_multipl_ce1 = ap_const_logic_0;
    }
}

void choose_t::thread_grp_cmov_aff_fu_1430_ap_start() {
    grp_cmov_aff_fu_1430_ap_start = ap_reg_grp_cmov_aff_fu_1430_ap_start.read();
}

void choose_t::thread_grp_cmov_aff_fu_1430_b() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_cmov_aff_fu_1430_b = tmp_868_reg_2651.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_cmov_aff_fu_1430_b = tmp_860_reg_2640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_cmov_aff_fu_1430_b = tmp_858_reg_2629.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_cmov_aff_fu_1430_b = tmp_856_reg_2618.read();
    } else {
        grp_cmov_aff_fu_1430_b =  (sc_lv<1>) ("X");
    }
}

void choose_t::thread_grp_cmov_aff_fu_1430_tmp_919() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_cmov_aff_fu_1430_tmp_919 = tmp_861_reg_2645.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_cmov_aff_fu_1430_tmp_919 = tmp_859_reg_2634.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_cmov_aff_fu_1430_tmp_919 = tmp_857_reg_2623.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_cmov_aff_fu_1430_tmp_919 = tmp_s_reg_2612.read();
    } else {
        grp_cmov_aff_fu_1430_tmp_919 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void choose_t::thread_grp_cmov_aff_fu_1430_tmp_9191() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_861_reg_2645.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_859_reg_2634.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_857_reg_2623.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_cmov_aff_fu_1430_tmp_9191 = tmp_s_reg_2612.read();
    } else {
        grp_cmov_aff_fu_1430_tmp_9191 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void choose_t::thread_grp_crypto_sign_ed25519_7_fu_1424_ap_start() {
    grp_crypto_sign_ed25519_7_fu_1424_ap_start = ap_reg_grp_crypto_sign_ed25519_7_fu_1424_ap_start.read();
}

void choose_t::thread_i_82_fu_2179_p2() {
    i_82_fu_2179_p2 = (!i_i_i_reg_1402.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_i_reg_1402.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void choose_t::thread_i_83_fu_2210_p2() {
    i_83_fu_2210_p2 = (!i_i5_reg_1413.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i5_reg_1413.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void choose_t::thread_i_fu_2162_p2() {
    i_fu_2162_p2 = (!i_i_reg_1391.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_reg_1391.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void choose_t::thread_mask_fu_2197_p3() {
    mask_fu_2197_p3 = (!tmp_869_reg_2682.read()[0].is_01())? sc_lv<32>(): ((tmp_869_reg_2682.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void choose_t::thread_p_shl_fu_1449_p3() {
    p_shl_fu_1449_p3 = esl_concat<7,2>(pos_r.read(), ap_const_lv2_0);
}

void choose_t::thread_pos_cast4_fu_1445_p1() {
    pos_cast4_fu_1445_p1 = esl_zext<9,7>(pos_r.read());
}

void choose_t::thread_t_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        t_v_address0 =  (sc_lv<5>) (tmp_i1_reg_2664.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_v_address0 = grp_crypto_sign_ed25519_7_fu_1424_y_v_address0.read();
    } else {
        t_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void choose_t::thread_t_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        t_v_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_v_ce0 = grp_crypto_sign_ed25519_7_fu_1424_y_v_ce0.read();
    } else {
        t_v_ce0 = ap_const_logic_0;
    }
}

void choose_t::thread_t_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        t_v_we0 = ap_const_logic_1;
    } else {
        t_v_we0 = ap_const_logic_0;
    }
}

void choose_t::thread_t_x_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        t_x_v_address0 = t_x_v_addr_33_reg_2705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        t_x_v_address0 =  (sc_lv<5>) (tmp_i1_fu_2168_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_x_v_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_x_v_address0 = grp_cmov_aff_fu_1430_r_x_v_address0.read();
    } else {
        t_x_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void choose_t::thread_t_x_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        t_x_v_address1 =  (sc_lv<5>) (tmp_i_fu_2216_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_x_v_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else {
        t_x_v_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void choose_t::thread_t_x_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_x_v_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_x_v_ce0 = grp_cmov_aff_fu_1430_r_x_v_ce0.read();
    } else {
        t_x_v_ce0 = ap_const_logic_0;
    }
}

void choose_t::thread_t_x_v_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_x_v_ce1 = ap_const_logic_1;
    } else {
        t_x_v_ce1 = ap_const_logic_0;
    }
}

void choose_t::thread_t_x_v_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        t_x_v_d0 = tmp_896_i_fu_2233_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_x_v_d0 = ge25519_base_multipl_1_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_x_v_d0 = grp_cmov_aff_fu_1430_r_x_v_d0.read();
    } else {
        t_x_v_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void choose_t::thread_t_x_v_d1() {
    t_x_v_d1 = ge25519_base_multipl_1_q1.read();
}

void choose_t::thread_t_x_v_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_x_v_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_x_v_we0 = grp_cmov_aff_fu_1430_r_x_v_we0.read();
    } else {
        t_x_v_we0 = ap_const_logic_0;
    }
}

void choose_t::thread_t_x_v_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_x_v_we1 = ap_const_logic_1;
    } else {
        t_x_v_we1 = ap_const_logic_0;
    }
}

void choose_t::thread_t_y_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_y_v_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_y_v_address0 = grp_cmov_aff_fu_1430_r_y_v_address0.read();
    } else {
        t_y_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void choose_t::thread_t_y_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_y_v_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else {
        t_y_v_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void choose_t::thread_t_y_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_y_v_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_y_v_ce0 = grp_cmov_aff_fu_1430_r_y_v_ce0.read();
    } else {
        t_y_v_ce0 = ap_const_logic_0;
    }
}

void choose_t::thread_t_y_v_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_y_v_ce1 = ap_const_logic_1;
    } else {
        t_y_v_ce1 = ap_const_logic_0;
    }
}

void choose_t::thread_t_y_v_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_y_v_d0 = ge25519_base_multipl_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_y_v_d0 = grp_cmov_aff_fu_1430_r_y_v_d0.read();
    } else {
        t_y_v_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void choose_t::thread_t_y_v_d1() {
    t_y_v_d1 = ge25519_base_multipl_q1.read();
}

void choose_t::thread_t_y_v_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_y_v_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        t_y_v_we0 = grp_cmov_aff_fu_1430_r_y_v_we0.read();
    } else {
        t_y_v_we0 = ap_const_logic_0;
    }
}

void choose_t::thread_t_y_v_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        t_y_v_we1 = ap_const_logic_1;
    } else {
        t_y_v_we1 = ap_const_logic_0;
    }
}

void choose_t::thread_tmp_792_fu_1463_p3() {
    tmp_792_fu_1463_p3 = esl_concat<9,5>(tmp_fu_1457_p2.read(), ap_const_lv5_0);
}

void choose_t::thread_tmp_793_fu_1471_p1() {
    tmp_793_fu_1471_p1 = esl_zext<64,14>(tmp_792_fu_1463_p3.read());
}

void choose_t::thread_tmp_794_fu_1477_p2() {
    tmp_794_fu_1477_p2 = (tmp_792_fu_1463_p3.read() | ap_const_lv14_1);
}

void choose_t::thread_tmp_795_fu_1483_p3() {
    tmp_795_fu_1483_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_794_fu_1477_p2.read());
}

void choose_t::thread_tmp_796_fu_1493_p2() {
    tmp_796_fu_1493_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_2);
}

void choose_t::thread_tmp_797_fu_1498_p3() {
    tmp_797_fu_1498_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_796_fu_1493_p2.read());
}

void choose_t::thread_tmp_798_fu_1508_p2() {
    tmp_798_fu_1508_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_3);
}

void choose_t::thread_tmp_799_fu_1513_p3() {
    tmp_799_fu_1513_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_798_fu_1508_p2.read());
}

void choose_t::thread_tmp_800_fu_1523_p2() {
    tmp_800_fu_1523_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_4);
}

void choose_t::thread_tmp_801_fu_1528_p3() {
    tmp_801_fu_1528_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_800_fu_1523_p2.read());
}

void choose_t::thread_tmp_802_fu_1538_p2() {
    tmp_802_fu_1538_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_5);
}

void choose_t::thread_tmp_803_fu_1543_p3() {
    tmp_803_fu_1543_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_802_fu_1538_p2.read());
}

void choose_t::thread_tmp_804_fu_1553_p2() {
    tmp_804_fu_1553_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_6);
}

void choose_t::thread_tmp_805_fu_1558_p3() {
    tmp_805_fu_1558_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_804_fu_1553_p2.read());
}

void choose_t::thread_tmp_806_fu_1568_p2() {
    tmp_806_fu_1568_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_7);
}

void choose_t::thread_tmp_807_fu_1573_p3() {
    tmp_807_fu_1573_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_806_fu_1568_p2.read());
}

void choose_t::thread_tmp_808_fu_1583_p2() {
    tmp_808_fu_1583_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_8);
}

void choose_t::thread_tmp_809_fu_1588_p3() {
    tmp_809_fu_1588_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_808_fu_1583_p2.read());
}

void choose_t::thread_tmp_810_fu_1598_p2() {
    tmp_810_fu_1598_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_9);
}

void choose_t::thread_tmp_811_fu_1603_p3() {
    tmp_811_fu_1603_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_810_fu_1598_p2.read());
}

void choose_t::thread_tmp_812_fu_1613_p2() {
    tmp_812_fu_1613_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_A);
}

void choose_t::thread_tmp_813_fu_1618_p3() {
    tmp_813_fu_1618_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_812_fu_1613_p2.read());
}

void choose_t::thread_tmp_814_fu_1628_p2() {
    tmp_814_fu_1628_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_B);
}

void choose_t::thread_tmp_815_fu_1633_p3() {
    tmp_815_fu_1633_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_814_fu_1628_p2.read());
}

void choose_t::thread_tmp_816_fu_1643_p2() {
    tmp_816_fu_1643_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_C);
}

void choose_t::thread_tmp_817_fu_1648_p3() {
    tmp_817_fu_1648_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_816_fu_1643_p2.read());
}

void choose_t::thread_tmp_818_fu_1658_p2() {
    tmp_818_fu_1658_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_D);
}

void choose_t::thread_tmp_819_fu_1663_p3() {
    tmp_819_fu_1663_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_818_fu_1658_p2.read());
}

void choose_t::thread_tmp_820_fu_1673_p2() {
    tmp_820_fu_1673_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_E);
}

void choose_t::thread_tmp_821_fu_1678_p3() {
    tmp_821_fu_1678_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_820_fu_1673_p2.read());
}

void choose_t::thread_tmp_822_fu_1688_p2() {
    tmp_822_fu_1688_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_F);
}

void choose_t::thread_tmp_823_fu_1693_p3() {
    tmp_823_fu_1693_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_822_fu_1688_p2.read());
}

void choose_t::thread_tmp_824_fu_1703_p2() {
    tmp_824_fu_1703_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_10);
}

void choose_t::thread_tmp_825_fu_1708_p3() {
    tmp_825_fu_1708_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_824_fu_1703_p2.read());
}

void choose_t::thread_tmp_826_fu_1718_p2() {
    tmp_826_fu_1718_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_11);
}

void choose_t::thread_tmp_827_fu_1723_p3() {
    tmp_827_fu_1723_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_826_fu_1718_p2.read());
}

void choose_t::thread_tmp_828_fu_1733_p2() {
    tmp_828_fu_1733_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_12);
}

void choose_t::thread_tmp_829_fu_1738_p3() {
    tmp_829_fu_1738_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_828_fu_1733_p2.read());
}

void choose_t::thread_tmp_830_fu_1748_p2() {
    tmp_830_fu_1748_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_13);
}

void choose_t::thread_tmp_831_fu_1753_p3() {
    tmp_831_fu_1753_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_830_fu_1748_p2.read());
}

void choose_t::thread_tmp_832_fu_1763_p2() {
    tmp_832_fu_1763_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_14);
}

void choose_t::thread_tmp_833_fu_1768_p3() {
    tmp_833_fu_1768_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_832_fu_1763_p2.read());
}

void choose_t::thread_tmp_834_fu_1778_p2() {
    tmp_834_fu_1778_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_15);
}

void choose_t::thread_tmp_835_fu_1783_p3() {
    tmp_835_fu_1783_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_834_fu_1778_p2.read());
}

void choose_t::thread_tmp_836_fu_1793_p2() {
    tmp_836_fu_1793_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_16);
}

void choose_t::thread_tmp_837_fu_1798_p3() {
    tmp_837_fu_1798_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_836_fu_1793_p2.read());
}

void choose_t::thread_tmp_838_fu_1808_p2() {
    tmp_838_fu_1808_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_17);
}

void choose_t::thread_tmp_839_fu_1813_p3() {
    tmp_839_fu_1813_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_838_fu_1808_p2.read());
}

void choose_t::thread_tmp_840_fu_1823_p2() {
    tmp_840_fu_1823_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_18);
}

void choose_t::thread_tmp_841_fu_1828_p3() {
    tmp_841_fu_1828_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_840_fu_1823_p2.read());
}

void choose_t::thread_tmp_842_fu_1838_p2() {
    tmp_842_fu_1838_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_19);
}

void choose_t::thread_tmp_843_fu_1843_p3() {
    tmp_843_fu_1843_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_842_fu_1838_p2.read());
}

void choose_t::thread_tmp_844_fu_1853_p2() {
    tmp_844_fu_1853_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_1A);
}

void choose_t::thread_tmp_845_fu_1858_p3() {
    tmp_845_fu_1858_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_844_fu_1853_p2.read());
}

void choose_t::thread_tmp_846_fu_1868_p2() {
    tmp_846_fu_1868_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_1B);
}

void choose_t::thread_tmp_847_fu_1873_p3() {
    tmp_847_fu_1873_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_846_fu_1868_p2.read());
}

void choose_t::thread_tmp_848_fu_1883_p2() {
    tmp_848_fu_1883_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_1C);
}

void choose_t::thread_tmp_849_fu_1888_p3() {
    tmp_849_fu_1888_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_848_fu_1883_p2.read());
}

void choose_t::thread_tmp_850_fu_1898_p2() {
    tmp_850_fu_1898_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_1D);
}

void choose_t::thread_tmp_851_fu_1903_p3() {
    tmp_851_fu_1903_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_850_fu_1898_p2.read());
}

void choose_t::thread_tmp_852_fu_1913_p2() {
    tmp_852_fu_1913_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_1E);
}

void choose_t::thread_tmp_853_fu_1918_p3() {
    tmp_853_fu_1918_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_852_fu_1913_p2.read());
}

void choose_t::thread_tmp_854_fu_1928_p2() {
    tmp_854_fu_1928_p2 = (tmp_792_reg_2248.read() | ap_const_lv14_1F);
}

void choose_t::thread_tmp_855_fu_1933_p3() {
    tmp_855_fu_1933_p3 = esl_concat<50,14>(ap_const_lv50_0, tmp_854_fu_1928_p2.read());
}

void choose_t::thread_tmp_856_fu_1998_p2() {
    tmp_856_fu_1998_p2 = (tmp_863_fu_1990_p3.read() | tmp_862_fu_1966_p3.read());
}

void choose_t::thread_tmp_857_fu_2005_p2() {
    tmp_857_fu_2005_p2 = (!tmp_reg_2240.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_reg_2240.read()) + sc_biguint<9>(ap_const_lv9_2));
}

void choose_t::thread_tmp_858_fu_2058_p2() {
    tmp_858_fu_2058_p2 = (tmp_865_fu_2050_p3.read() | tmp_864_fu_2027_p3.read());
}

void choose_t::thread_tmp_859_fu_2065_p2() {
    tmp_859_fu_2065_p2 = (!tmp_reg_2240.read().is_01() || !ap_const_lv9_3.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_reg_2240.read()) + sc_biguint<9>(ap_const_lv9_3));
}

void choose_t::thread_tmp_860_fu_2118_p2() {
    tmp_860_fu_2118_p2 = (tmp_867_fu_2110_p3.read() | tmp_866_fu_2087_p3.read());
}

void choose_t::thread_tmp_861_fu_2125_p2() {
    tmp_861_fu_2125_p2 = (!tmp_reg_2240.read().is_01() || !ap_const_lv9_4.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_reg_2240.read()) + sc_biguint<9>(ap_const_lv9_4));
}

void choose_t::thread_tmp_862_fu_1966_p3() {
    tmp_862_fu_1966_p3 = y_fu_1960_p2.read().range(8, 8);
}

void choose_t::thread_tmp_863_fu_1990_p3() {
    tmp_863_fu_1990_p3 = y_1_fu_1984_p2.read().range(8, 8);
}

void choose_t::thread_tmp_864_fu_2027_p3() {
    tmp_864_fu_2027_p3 = y_2_fu_2021_p2.read().range(8, 8);
}

void choose_t::thread_tmp_865_fu_2050_p3() {
    tmp_865_fu_2050_p3 = y_3_fu_2044_p2.read().range(8, 8);
}

void choose_t::thread_tmp_866_fu_2087_p3() {
    tmp_866_fu_2087_p3 = y_4_fu_2081_p2.read().range(8, 8);
}

void choose_t::thread_tmp_867_fu_2110_p3() {
    tmp_867_fu_2110_p3 = y_5_fu_2104_p2.read().range(8, 8);
}

void choose_t::thread_tmp_894_i_fu_2222_p2() {
    tmp_894_i_fu_2222_p2 = (t_x_v_q1.read() ^ v_v_q0.read());
}

void choose_t::thread_tmp_895_i_fu_2228_p2() {
    tmp_895_i_fu_2228_p2 = (tmp_894_i_fu_2222_p2.read() & mask_reg_2687.read());
}

void choose_t::thread_tmp_896_i_fu_2233_p2() {
    tmp_896_i_fu_2233_p2 = (t_x_v_q1.read() ^ tmp_895_i_fu_2228_p2.read());
}

void choose_t::thread_tmp_fu_1457_p2() {
    tmp_fu_1457_p2 = (!p_shl_fu_1449_p3.read().is_01() || !pos_cast4_fu_1445_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_fu_1449_p3.read()) + sc_biguint<9>(pos_cast4_fu_1445_p1.read()));
}

void choose_t::thread_tmp_i1_fu_2168_p1() {
    tmp_i1_fu_2168_p1 = esl_zext<64,6>(i_i_reg_1391.read());
}

void choose_t::thread_tmp_i_fu_2216_p1() {
    tmp_i_fu_2216_p1 = esl_zext<64,6>(i_i5_reg_1413.read());
}

void choose_t::thread_tmp_i_i_fu_2185_p1() {
    tmp_i_i_fu_2185_p1 = esl_zext<64,6>(i_i_i_reg_1402.read());
}

void choose_t::thread_tmp_s_fu_1943_p2() {
    tmp_s_fu_1943_p2 = (!tmp_reg_2240.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_reg_2240.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void choose_t::thread_v_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        v_v_address0 =  (sc_lv<5>) (tmp_i_fu_2216_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_2173_p2.read()))) {
        v_v_address0 =  (sc_lv<5>) (tmp_i_i_fu_2185_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v_v_address0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_address0.read();
    } else {
        v_v_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void choose_t::thread_v_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_2173_p2.read())))) {
        v_v_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v_v_ce0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_ce0.read();
    } else {
        v_v_ce0 = ap_const_logic_0;
    }
}

void choose_t::thread_v_v_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v_v_ce1 = grp_crypto_sign_ed25519_7_fu_1424_r_v_ce1.read();
    } else {
        v_v_ce1 = ap_const_logic_0;
    }
}

void choose_t::thread_v_v_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_2173_p2.read()))) {
        v_v_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v_v_d0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_d0.read();
    } else {
        v_v_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void choose_t::thread_v_v_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_2173_p2.read()))) {
        v_v_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v_v_we0 = grp_crypto_sign_ed25519_7_fu_1424_r_v_we0.read();
    } else {
        v_v_we0 = ap_const_logic_0;
    }
}

void choose_t::thread_v_v_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v_v_we1 = grp_crypto_sign_ed25519_7_fu_1424_r_v_we1.read();
    } else {
        v_v_we1 = ap_const_logic_0;
    }
}

void choose_t::thread_x_10_fu_2035_p2() {
    x_10_fu_2035_p2 = (b.read() ^ ap_const_lv8_FE);
}

void choose_t::thread_x_11_fu_2072_p2() {
    x_11_fu_2072_p2 = (b.read() ^ ap_const_lv8_3);
}

void choose_t::thread_x_12_fu_2095_p2() {
    x_12_fu_2095_p2 = (b.read() ^ ap_const_lv8_FD);
}

void choose_t::thread_x_13_fu_2132_p2() {
    x_13_fu_2132_p2 = (b.read() ^ ap_const_lv8_FC);
}

void choose_t::thread_x_8_fu_1974_p2() {
    x_8_fu_1974_p2 = (b.read() ^ ap_const_lv8_FF);
}

void choose_t::thread_x_9_fu_2012_p2() {
    x_9_fu_2012_p2 = (b.read() ^ ap_const_lv8_2);
}

void choose_t::thread_x_fu_1950_p2() {
    x_fu_1950_p2 = (b.read() ^ ap_const_lv8_1);
}

void choose_t::thread_y_12_cast_fu_2077_p1() {
    y_12_cast_fu_2077_p1 = esl_zext<9,8>(x_11_fu_2072_p2.read());
}

void choose_t::thread_y_15_cast_fu_2100_p1() {
    y_15_cast_fu_2100_p1 = esl_zext<9,8>(x_12_fu_2095_p2.read());
}

void choose_t::thread_y_18_cast_fu_2137_p1() {
    y_18_cast_fu_2137_p1 = esl_zext<9,8>(x_13_fu_2132_p2.read());
}

void choose_t::thread_y_1_fu_1984_p2() {
    y_1_fu_1984_p2 = (!y_3_cast_fu_1980_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_3_cast_fu_1980_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_y_2_fu_2021_p2() {
    y_2_fu_2021_p2 = (!y_6_cast_fu_2017_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_6_cast_fu_2017_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_y_3_cast_fu_1980_p1() {
    y_3_cast_fu_1980_p1 = esl_zext<9,8>(x_8_fu_1974_p2.read());
}

void choose_t::thread_y_3_fu_2044_p2() {
    y_3_fu_2044_p2 = (!y_9_cast_fu_2040_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_9_cast_fu_2040_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_y_4_fu_2081_p2() {
    y_4_fu_2081_p2 = (!y_12_cast_fu_2077_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_12_cast_fu_2077_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_y_5_fu_2104_p2() {
    y_5_fu_2104_p2 = (!y_15_cast_fu_2100_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_15_cast_fu_2100_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_y_6_cast_fu_2017_p1() {
    y_6_cast_fu_2017_p1 = esl_zext<9,8>(x_9_fu_2012_p2.read());
}

void choose_t::thread_y_6_fu_2141_p2() {
    y_6_fu_2141_p2 = (!y_18_cast_fu_2137_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_18_cast_fu_2137_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_y_9_cast_fu_2040_p1() {
    y_9_cast_fu_2040_p1 = esl_zext<9,8>(x_10_fu_2035_p2.read());
}

void choose_t::thread_y_cast_fu_1956_p1() {
    y_cast_fu_1956_p1 = esl_zext<9,8>(x_fu_1950_p2.read());
}

void choose_t::thread_y_fu_1960_p2() {
    y_fu_1960_p2 = (!y_cast_fu_1956_p1.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(y_cast_fu_1956_p1.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void choose_t::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(grp_cmov_aff_fu_1430_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(grp_cmov_aff_fu_1430_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(grp_cmov_aff_fu_1430_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(grp_cmov_aff_fu_1430_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(exitcond_i_fu_2156_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_2173_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(grp_crypto_sign_ed25519_7_fu_1424_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i5_fu_2204_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

