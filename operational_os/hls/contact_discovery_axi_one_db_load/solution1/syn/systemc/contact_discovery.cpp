// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "contact_discovery.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic contact_discovery::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic contact_discovery::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> contact_discovery::ap_ST_fsm_state1 = "1";
const sc_lv<17> contact_discovery::ap_ST_fsm_state2 = "10";
const sc_lv<17> contact_discovery::ap_ST_fsm_state3 = "100";
const sc_lv<17> contact_discovery::ap_ST_fsm_state4 = "1000";
const sc_lv<17> contact_discovery::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state7 = "100000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state8 = "1000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state9 = "10000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state10 = "100000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state11 = "1000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state12 = "10000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state13 = "100000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state14 = "1000000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state16 = "100000000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state17 = "1000000000000000";
const sc_lv<17> contact_discovery::ap_ST_fsm_state18 = "10000000000000000";
const sc_lv<32> contact_discovery::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool contact_discovery::ap_const_boolean_1 = true;
const int contact_discovery::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> contact_discovery::ap_const_lv32_1 = "1";
const sc_lv<1> contact_discovery::ap_const_lv1_0 = "0";
const sc_lv<32> contact_discovery::ap_const_lv32_2 = "10";
const sc_lv<32> contact_discovery::ap_const_lv32_4 = "100";
const bool contact_discovery::ap_const_boolean_0 = false;
const sc_lv<32> contact_discovery::ap_const_lv32_7 = "111";
const sc_lv<1> contact_discovery::ap_const_lv1_1 = "1";
const sc_lv<32> contact_discovery::ap_const_lv32_C = "1100";
const sc_lv<15> contact_discovery::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> contact_discovery::ap_const_lv32_3 = "11";
const sc_lv<7> contact_discovery::ap_const_lv7_0 = "0000000";
const sc_lv<32> contact_discovery::ap_const_lv32_8 = "1000";
const sc_lv<32> contact_discovery::ap_const_lv32_9 = "1001";
const sc_lv<32> contact_discovery::ap_const_lv32_D = "1101";
const sc_lv<32> contact_discovery::ap_const_lv32_E = "1110";
const sc_lv<32> contact_discovery::ap_const_lv32_5 = "101";
const sc_lv<32> contact_discovery::ap_const_lv32_F = "1111";
const sc_lv<32> contact_discovery::ap_const_lv32_A = "1010";
const sc_lv<32> contact_discovery::ap_const_lv32_752F = "111010100101111";
const sc_lv<6> contact_discovery::ap_const_lv6_0 = "000000";
const sc_lv<32> contact_discovery::ap_const_lv32_1F = "11111";
const sc_lv<25> contact_discovery::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<15> contact_discovery::ap_const_lv15_7530 = "111010100110000";
const sc_lv<15> contact_discovery::ap_const_lv15_1 = "1";
const sc_lv<7> contact_discovery::ap_const_lv7_40 = "1000000";
const sc_lv<7> contact_discovery::ap_const_lv7_1 = "1";
const sc_lv<32> contact_discovery::ap_const_lv32_6 = "110";

contact_discovery::contact_discovery(sc_module_name name) : sc_module(name), mVcdFile(0) {
    contacts_U = new contact_discoverybkb("contacts_U");
    contacts_U->clk(ap_clk);
    contacts_U->reset(ap_rst_n_inv);
    contacts_U->address0(contacts_address0);
    contacts_U->ce0(contacts_ce0);
    contacts_U->we0(contacts_we0);
    contacts_U->d0(contact_in_q0);
    contacts_U->q0(contacts_q0);
    contacts_U->address1(grp_match_db_contact_fu_302_contacts_address1);
    contacts_U->ce1(contacts_ce1);
    contacts_U->q1(contacts_q1);
    database_U = new contact_discoverycud("database_U");
    database_U->clk(ap_clk);
    database_U->reset(ap_rst_n_inv);
    database_U->address0(database_address0);
    database_U->ce0(database_ce0);
    database_U->we0(database_we0);
    database_U->d0(database_in_q0);
    database_U->q0(database_q0);
    database_U->address1(grp_match_db_contact_fu_302_database_address1);
    database_U->ce1(database_ce1);
    database_U->q1(database_q1);
    results_U = new contact_discoverydEe("results_U");
    results_U->clk(ap_clk);
    results_U->reset(ap_rst_n_inv);
    results_U->address0(results_address0);
    results_U->ce0(results_ce0);
    results_U->we0(results_we0);
    results_U->d0(grp_match_db_contact_fu_302_results_d0);
    results_U->q0(results_q0);
    contact_discovery_AXILiteS_s_axi_U = new contact_discovery_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("contact_discovery_AXILiteS_s_axi_U");
    contact_discovery_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    contact_discovery_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    contact_discovery_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    contact_discovery_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    contact_discovery_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    contact_discovery_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    contact_discovery_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    contact_discovery_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    contact_discovery_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    contact_discovery_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    contact_discovery_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    contact_discovery_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    contact_discovery_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    contact_discovery_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    contact_discovery_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    contact_discovery_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    contact_discovery_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    contact_discovery_AXILiteS_s_axi_U->ACLK(ap_clk);
    contact_discovery_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    contact_discovery_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    contact_discovery_AXILiteS_s_axi_U->ap_start(ap_start);
    contact_discovery_AXILiteS_s_axi_U->interrupt(interrupt);
    contact_discovery_AXILiteS_s_axi_U->ap_ready(ap_ready);
    contact_discovery_AXILiteS_s_axi_U->ap_done(ap_done);
    contact_discovery_AXILiteS_s_axi_U->ap_idle(ap_idle);
    contact_discovery_AXILiteS_s_axi_U->operation(operation);
    contact_discovery_AXILiteS_s_axi_U->operation_ap_vld(operation_ap_vld);
    contact_discovery_AXILiteS_s_axi_U->contact_in_address0(contact_in_address0);
    contact_discovery_AXILiteS_s_axi_U->contact_in_ce0(contact_in_ce0);
    contact_discovery_AXILiteS_s_axi_U->contact_in_q0(contact_in_q0);
    contact_discovery_AXILiteS_s_axi_U->database_in_address0(database_in_address0);
    contact_discovery_AXILiteS_s_axi_U->database_in_ce0(database_in_ce0);
    contact_discovery_AXILiteS_s_axi_U->database_in_q0(database_in_q0);
    contact_discovery_AXILiteS_s_axi_U->matched_out_address0(matched_out_address0);
    contact_discovery_AXILiteS_s_axi_U->matched_out_ce0(matched_out_ce0);
    contact_discovery_AXILiteS_s_axi_U->matched_out_we0(matched_out_we0);
    contact_discovery_AXILiteS_s_axi_U->matched_out_d0(results_q0);
    contact_discovery_AXILiteS_s_axi_U->matched_finished(matched_finished_1_data_reg);
    contact_discovery_AXILiteS_s_axi_U->error_out(error_out_1_data_reg);
    contact_discovery_AXILiteS_s_axi_U->database_size_out(database_size_out_1_data_reg);
    contact_discovery_AXILiteS_s_axi_U->contacts_size_out(contacts_size_out_1_data_reg);
    grp_match_db_contact_fu_302 = new match_db_contact("grp_match_db_contact_fu_302");
    grp_match_db_contact_fu_302->ap_clk(ap_clk);
    grp_match_db_contact_fu_302->ap_rst(ap_rst_n_inv);
    grp_match_db_contact_fu_302->ap_start(grp_match_db_contact_fu_302_ap_start);
    grp_match_db_contact_fu_302->ap_done(grp_match_db_contact_fu_302_ap_done);
    grp_match_db_contact_fu_302->ap_idle(grp_match_db_contact_fu_302_ap_idle);
    grp_match_db_contact_fu_302->ap_ready(grp_match_db_contact_fu_302_ap_ready);
    grp_match_db_contact_fu_302->database_index(database_index_reg_233);
    grp_match_db_contact_fu_302->contacts_address0(grp_match_db_contact_fu_302_contacts_address0);
    grp_match_db_contact_fu_302->contacts_ce0(grp_match_db_contact_fu_302_contacts_ce0);
    grp_match_db_contact_fu_302->contacts_q0(contacts_q0);
    grp_match_db_contact_fu_302->contacts_address1(grp_match_db_contact_fu_302_contacts_address1);
    grp_match_db_contact_fu_302->contacts_ce1(grp_match_db_contact_fu_302_contacts_ce1);
    grp_match_db_contact_fu_302->contacts_q1(contacts_q1);
    grp_match_db_contact_fu_302->database_address0(grp_match_db_contact_fu_302_database_address0);
    grp_match_db_contact_fu_302->database_ce0(grp_match_db_contact_fu_302_database_ce0);
    grp_match_db_contact_fu_302->database_q0(database_q0);
    grp_match_db_contact_fu_302->database_address1(grp_match_db_contact_fu_302_database_address1);
    grp_match_db_contact_fu_302->database_ce1(grp_match_db_contact_fu_302_database_ce1);
    grp_match_db_contact_fu_302->database_q1(database_q1);
    grp_match_db_contact_fu_302->results_address0(grp_match_db_contact_fu_302_results_address0);
    grp_match_db_contact_fu_302->results_ce0(grp_match_db_contact_fu_302_results_ce0);
    grp_match_db_contact_fu_302->results_we0(grp_match_db_contact_fu_302_results_we0);
    grp_match_db_contact_fu_302->results_d0(grp_match_db_contact_fu_302_results_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( operation_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( matched_finished_1_ack_in );
    sensitive << ( error_out_1_ack_in );
    sensitive << ( database_size_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state5);
    sensitive << ( exitcond_fu_390_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( matched_finished_1_ack_in );
    sensitive << ( error_out_1_ack_in );
    sensitive << ( database_size_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( matched_finished_1_ack_in );
    sensitive << ( error_out_1_ack_in );
    sensitive << ( database_size_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_contact_in_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_i_fu_460_p1 );

    SC_METHOD(thread_contact_in_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_contacts_address0);
    sensitive << ( grp_match_db_contact_fu_302_contacts_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sum_i_cast_fu_485_p1 );

    SC_METHOD(thread_contacts_ce0);
    sensitive << ( grp_match_db_contact_fu_302_contacts_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_contacts_ce1);
    sensitive << ( grp_match_db_contact_fu_302_contacts_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_contacts_size_out_1_ack_in);
    sensitive << ( contacts_size_out_1_vld_reg );

    SC_METHOD(thread_contacts_size_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( contacts_size );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( storemerge1_reg_290 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_contacts_size_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_contacts_we0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_database_address0);
    sensitive << ( grp_match_db_contact_fu_302_database_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_i9_cast_fu_444_p1 );

    SC_METHOD(thread_database_ce0);
    sensitive << ( grp_match_db_contact_fu_302_database_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_database_ce1);
    sensitive << ( grp_match_db_contact_fu_302_database_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_database_in_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_i6_fu_419_p1 );

    SC_METHOD(thread_database_in_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_database_index_1_fu_384_p2);
    sensitive << ( database_index_reg_233 );

    SC_METHOD(thread_database_size_out_1_ack_in);
    sensitive << ( database_size_out_1_vld_reg );

    SC_METHOD(thread_database_size_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( database_size );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( storemerge_reg_267 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_database_size_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_database_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_error_out_1_ack_in);
    sensitive << ( error_out_1_vld_reg );

    SC_METHOD(thread_error_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_fu_336_p2 );
    sensitive << ( icmp_fu_361_p2 );

    SC_METHOD(thread_error_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_fu_336_p2 );
    sensitive << ( icmp_fu_361_p2 );

    SC_METHOD(thread_exitcond2_fu_378_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( database_index_reg_233 );

    SC_METHOD(thread_exitcond_fu_390_p2);
    sensitive << ( i_reg_245 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i5_fu_407_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_i4_reg_256 );

    SC_METHOD(thread_exitcond_i_fu_448_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_i_reg_279 );

    SC_METHOD(thread_grp_match_db_contact_fu_302_ap_start);
    sensitive << ( ap_reg_grp_match_db_contact_fu_302_ap_start );

    SC_METHOD(thread_i_1_fu_396_p2);
    sensitive << ( i_reg_245 );

    SC_METHOD(thread_i_2_fu_454_p2);
    sensitive << ( i_i_reg_279 );

    SC_METHOD(thread_i_3_fu_413_p2);
    sensitive << ( i_i4_reg_256 );

    SC_METHOD(thread_icmp_fu_361_p2);
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_352_p4 );

    SC_METHOD(thread_matched_finished_1_ack_in);
    sensitive << ( matched_finished_1_vld_reg );

    SC_METHOD(thread_matched_finished_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_matched_finished_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_matched_out_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_4_reg_545 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_matched_out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_matched_out_we0);
    sensitive << ( exitcond_reg_536 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_operation_ap_vld_in_sig);
    sensitive << ( operation_ap_vld );
    sensitive << ( operation_ap_vld_preg );

    SC_METHOD(thread_operation_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld );

    SC_METHOD(thread_operation_in_sig);
    sensitive << ( operation );
    sensitive << ( operation_preg );
    sensitive << ( operation_ap_vld );

    SC_METHOD(thread_operation_read_read_fu_116_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_in_sig );
    sensitive << ( operation_ap_vld_in_sig );

    SC_METHOD(thread_results_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_fu_402_p1 );
    sensitive << ( grp_match_db_contact_fu_302_results_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_results_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_match_db_contact_fu_302_results_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_results_we0);
    sensitive << ( grp_match_db_contact_fu_302_results_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sum_i9_cast_fu_444_p1);
    sensitive << ( sum_i9_reg_568 );

    SC_METHOD(thread_sum_i9_fu_428_p2);
    sensitive << ( tmp_2_cast_reg_514 );
    sensitive << ( tmp_i6_cast_fu_424_p1 );

    SC_METHOD(thread_sum_i_cast_fu_485_p1);
    sensitive << ( sum_i_reg_591 );

    SC_METHOD(thread_sum_i_fu_469_p2);
    sensitive << ( tmp_9_cast_reg_522 );
    sensitive << ( tmp_i_cast_fu_465_p1 );

    SC_METHOD(thread_tmp_127_fu_367_p1);
    sensitive << ( contacts_size_load_reg_493 );

    SC_METHOD(thread_tmp_128_fu_341_p1);
    sensitive << ( database_size_load_reg_502 );

    SC_METHOD(thread_tmp_2_cast_fu_344_p3);
    sensitive << ( tmp_128_fu_341_p1 );

    SC_METHOD(thread_tmp_3_fu_433_p2);
    sensitive << ( database_size_load_reg_502 );

    SC_METHOD(thread_tmp_4_fu_402_p1);
    sensitive << ( i_reg_245 );

    SC_METHOD(thread_tmp_7_fu_336_p2);
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( database_size_load_reg_502 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_9_cast_fu_370_p3);
    sensitive << ( tmp_127_fu_367_p1 );

    SC_METHOD(thread_tmp_fu_352_p4);
    sensitive << ( contacts_size_load_reg_493 );

    SC_METHOD(thread_tmp_i6_cast_fu_424_p1);
    sensitive << ( i_i4_reg_256 );

    SC_METHOD(thread_tmp_i6_fu_419_p1);
    sensitive << ( i_i4_reg_256 );

    SC_METHOD(thread_tmp_i_cast_fu_465_p1);
    sensitive << ( i_i_reg_279 );

    SC_METHOD(thread_tmp_i_fu_460_p1);
    sensitive << ( i_i_reg_279 );

    SC_METHOD(thread_tmp_s_fu_474_p2);
    sensitive << ( contacts_size_load_reg_493 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( matched_finished_1_ack_in );
    sensitive << ( error_out_1_ack_in );
    sensitive << ( database_size_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( operation_read_read_fu_116_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_fu_336_p2 );
    sensitive << ( icmp_fu_361_p2 );
    sensitive << ( exitcond2_fu_378_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_390_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i5_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_i_fu_448_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( grp_match_db_contact_fu_302_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    operation_preg = "00000000000000000000000000000000";
    operation_ap_vld_preg = SC_LOGIC_0;
    matched_finished_1_data_reg = "00000000000000000000000000000000";
    matched_finished_1_vld_reg = SC_LOGIC_0;
    error_out_1_data_reg = "00000000000000000000000000000000";
    error_out_1_vld_reg = SC_LOGIC_0;
    database_size_out_1_data_reg = "00000000000000000000000000000000";
    database_size_out_1_vld_reg = SC_LOGIC_0;
    contacts_size_out_1_data_reg = "00000000000000000000000000000000";
    contacts_size_out_1_vld_reg = SC_LOGIC_0;
    contacts_size = "00000000000000000000000000000000";
    database_size = "00000000000000000000000000000000";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_reg_grp_match_db_contact_fu_302_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "contact_discovery_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, operation, "operation");
    sc_trace(mVcdFile, operation_preg, "operation_preg");
    sc_trace(mVcdFile, operation_ap_vld, "operation_ap_vld");
    sc_trace(mVcdFile, operation_in_sig, "operation_in_sig");
    sc_trace(mVcdFile, operation_ap_vld_preg, "operation_ap_vld_preg");
    sc_trace(mVcdFile, operation_ap_vld_in_sig, "operation_ap_vld_in_sig");
    sc_trace(mVcdFile, contact_in_address0, "contact_in_address0");
    sc_trace(mVcdFile, contact_in_ce0, "contact_in_ce0");
    sc_trace(mVcdFile, contact_in_q0, "contact_in_q0");
    sc_trace(mVcdFile, database_in_address0, "database_in_address0");
    sc_trace(mVcdFile, database_in_ce0, "database_in_ce0");
    sc_trace(mVcdFile, database_in_q0, "database_in_q0");
    sc_trace(mVcdFile, matched_out_address0, "matched_out_address0");
    sc_trace(mVcdFile, matched_out_ce0, "matched_out_ce0");
    sc_trace(mVcdFile, matched_out_we0, "matched_out_we0");
    sc_trace(mVcdFile, matched_finished_1_data_reg, "matched_finished_1_data_reg");
    sc_trace(mVcdFile, matched_finished_1_data_in, "matched_finished_1_data_in");
    sc_trace(mVcdFile, matched_finished_1_vld_reg, "matched_finished_1_vld_reg");
    sc_trace(mVcdFile, matched_finished_1_vld_in, "matched_finished_1_vld_in");
    sc_trace(mVcdFile, matched_finished_1_ack_in, "matched_finished_1_ack_in");
    sc_trace(mVcdFile, error_out_1_data_reg, "error_out_1_data_reg");
    sc_trace(mVcdFile, error_out_1_data_in, "error_out_1_data_in");
    sc_trace(mVcdFile, error_out_1_vld_reg, "error_out_1_vld_reg");
    sc_trace(mVcdFile, error_out_1_vld_in, "error_out_1_vld_in");
    sc_trace(mVcdFile, error_out_1_ack_in, "error_out_1_ack_in");
    sc_trace(mVcdFile, database_size_out_1_data_reg, "database_size_out_1_data_reg");
    sc_trace(mVcdFile, database_size_out_1_data_in, "database_size_out_1_data_in");
    sc_trace(mVcdFile, database_size_out_1_vld_reg, "database_size_out_1_vld_reg");
    sc_trace(mVcdFile, database_size_out_1_vld_in, "database_size_out_1_vld_in");
    sc_trace(mVcdFile, database_size_out_1_ack_in, "database_size_out_1_ack_in");
    sc_trace(mVcdFile, contacts_size_out_1_data_reg, "contacts_size_out_1_data_reg");
    sc_trace(mVcdFile, contacts_size_out_1_data_in, "contacts_size_out_1_data_in");
    sc_trace(mVcdFile, contacts_size_out_1_vld_reg, "contacts_size_out_1_vld_reg");
    sc_trace(mVcdFile, contacts_size_out_1_vld_in, "contacts_size_out_1_vld_in");
    sc_trace(mVcdFile, contacts_size_out_1_ack_in, "contacts_size_out_1_ack_in");
    sc_trace(mVcdFile, contacts_size, "contacts_size");
    sc_trace(mVcdFile, database_size, "database_size");
    sc_trace(mVcdFile, contacts_address0, "contacts_address0");
    sc_trace(mVcdFile, contacts_ce0, "contacts_ce0");
    sc_trace(mVcdFile, contacts_we0, "contacts_we0");
    sc_trace(mVcdFile, contacts_q0, "contacts_q0");
    sc_trace(mVcdFile, contacts_ce1, "contacts_ce1");
    sc_trace(mVcdFile, contacts_q1, "contacts_q1");
    sc_trace(mVcdFile, database_address0, "database_address0");
    sc_trace(mVcdFile, database_ce0, "database_ce0");
    sc_trace(mVcdFile, database_we0, "database_we0");
    sc_trace(mVcdFile, database_q0, "database_q0");
    sc_trace(mVcdFile, database_ce1, "database_ce1");
    sc_trace(mVcdFile, database_q1, "database_q1");
    sc_trace(mVcdFile, results_address0, "results_address0");
    sc_trace(mVcdFile, results_ce0, "results_ce0");
    sc_trace(mVcdFile, results_we0, "results_we0");
    sc_trace(mVcdFile, results_q0, "results_q0");
    sc_trace(mVcdFile, operation_blk_n, "operation_blk_n");
    sc_trace(mVcdFile, i_reg_245, "i_reg_245");
    sc_trace(mVcdFile, operation_read_read_fu_116_p2, "operation_read_read_fu_116_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, contacts_size_load_reg_493, "contacts_size_load_reg_493");
    sc_trace(mVcdFile, database_size_load_reg_502, "database_size_load_reg_502");
    sc_trace(mVcdFile, tmp_2_cast_fu_344_p3, "tmp_2_cast_fu_344_p3");
    sc_trace(mVcdFile, tmp_2_cast_reg_514, "tmp_2_cast_reg_514");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_7_fu_336_p2, "tmp_7_fu_336_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_370_p3, "tmp_9_cast_fu_370_p3");
    sc_trace(mVcdFile, tmp_9_cast_reg_522, "tmp_9_cast_reg_522");
    sc_trace(mVcdFile, icmp_fu_361_p2, "icmp_fu_361_p2");
    sc_trace(mVcdFile, exitcond2_fu_378_p2, "exitcond2_fu_378_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, database_index_1_fu_384_p2, "database_index_1_fu_384_p2");
    sc_trace(mVcdFile, database_index_1_reg_531, "database_index_1_reg_531");
    sc_trace(mVcdFile, exitcond_fu_390_p2, "exitcond_fu_390_p2");
    sc_trace(mVcdFile, exitcond_reg_536, "exitcond_reg_536");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, i_1_fu_396_p2, "i_1_fu_396_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_4_fu_402_p1, "tmp_4_fu_402_p1");
    sc_trace(mVcdFile, tmp_4_reg_545, "tmp_4_reg_545");
    sc_trace(mVcdFile, i_3_fu_413_p2, "i_3_fu_413_p2");
    sc_trace(mVcdFile, i_3_reg_558, "i_3_reg_558");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond_i5_fu_407_p2, "exitcond_i5_fu_407_p2");
    sc_trace(mVcdFile, sum_i9_fu_428_p2, "sum_i9_fu_428_p2");
    sc_trace(mVcdFile, sum_i9_reg_568, "sum_i9_reg_568");
    sc_trace(mVcdFile, tmp_3_fu_433_p2, "tmp_3_fu_433_p2");
    sc_trace(mVcdFile, i_2_fu_454_p2, "i_2_fu_454_p2");
    sc_trace(mVcdFile, i_2_reg_581, "i_2_reg_581");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, exitcond_i_fu_448_p2, "exitcond_i_fu_448_p2");
    sc_trace(mVcdFile, sum_i_fu_469_p2, "sum_i_fu_469_p2");
    sc_trace(mVcdFile, sum_i_reg_591, "sum_i_reg_591");
    sc_trace(mVcdFile, tmp_s_fu_474_p2, "tmp_s_fu_474_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state5, "ap_condition_pp0_exit_iter0_state5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_ap_start, "grp_match_db_contact_fu_302_ap_start");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_ap_done, "grp_match_db_contact_fu_302_ap_done");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_ap_idle, "grp_match_db_contact_fu_302_ap_idle");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_ap_ready, "grp_match_db_contact_fu_302_ap_ready");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_contacts_address0, "grp_match_db_contact_fu_302_contacts_address0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_contacts_ce0, "grp_match_db_contact_fu_302_contacts_ce0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_contacts_address1, "grp_match_db_contact_fu_302_contacts_address1");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_contacts_ce1, "grp_match_db_contact_fu_302_contacts_ce1");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_database_address0, "grp_match_db_contact_fu_302_database_address0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_database_ce0, "grp_match_db_contact_fu_302_database_ce0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_database_address1, "grp_match_db_contact_fu_302_database_address1");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_database_ce1, "grp_match_db_contact_fu_302_database_ce1");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_results_address0, "grp_match_db_contact_fu_302_results_address0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_results_ce0, "grp_match_db_contact_fu_302_results_ce0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_results_we0, "grp_match_db_contact_fu_302_results_we0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_302_results_d0, "grp_match_db_contact_fu_302_results_d0");
    sc_trace(mVcdFile, database_index_reg_233, "database_index_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_i4_reg_256, "i_i4_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, storemerge_reg_267, "storemerge_reg_267");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_i_reg_279, "i_i_reg_279");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, storemerge1_reg_290, "storemerge1_reg_290");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_reg_grp_match_db_contact_fu_302_ap_start, "ap_reg_grp_match_db_contact_fu_302_ap_start");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, tmp_i6_fu_419_p1, "tmp_i6_fu_419_p1");
    sc_trace(mVcdFile, sum_i9_cast_fu_444_p1, "sum_i9_cast_fu_444_p1");
    sc_trace(mVcdFile, tmp_i_fu_460_p1, "tmp_i_fu_460_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_485_p1, "sum_i_cast_fu_485_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_128_fu_341_p1, "tmp_128_fu_341_p1");
    sc_trace(mVcdFile, tmp_fu_352_p4, "tmp_fu_352_p4");
    sc_trace(mVcdFile, tmp_127_fu_367_p1, "tmp_127_fu_367_p1");
    sc_trace(mVcdFile, tmp_i6_cast_fu_424_p1, "tmp_i6_cast_fu_424_p1");
    sc_trace(mVcdFile, tmp_i_cast_fu_465_p1, "tmp_i_cast_fu_465_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("contact_discovery.hdltvin.dat");
    mHdltvoutHandle.open("contact_discovery.hdltvout.dat");
}

contact_discovery::~contact_discovery() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete contacts_U;
    delete database_U;
    delete results_U;
    delete contact_discovery_AXILiteS_s_axi_U;
    delete grp_match_db_contact_fu_302;
}

void contact_discovery::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void contact_discovery::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(exitcond2_fu_378_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(exitcond2_fu_378_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_match_db_contact_fu_302_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_378_p2.read()))) {
            ap_reg_grp_match_db_contact_fu_302_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_match_db_contact_fu_302_ap_ready.read())) {
            ap_reg_grp_match_db_contact_fu_302_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_448_p2.read()))) {
        contacts_size = tmp_s_fu_474_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4))) {
        contacts_size = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_match_db_contact_fu_302_ap_done.read(), ap_const_logic_1))) {
        database_index_reg_233 = database_index_1_reg_531.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2))) {
        database_index_reg_233 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(exitcond_i5_fu_407_p2.read(), ap_const_lv1_1))) {
        database_size = tmp_3_fu_433_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3))) {
        database_size = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_i4_reg_256 = i_3_reg_558.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
                esl_seteq<1,1,1>(tmp_7_fu_336_p2.read(), ap_const_lv1_0))) {
        i_i4_reg_256 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_i_reg_279 = i_2_reg_581.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_361_p2.read()))) {
        i_i_reg_279 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_378_p2.read(), ap_const_lv1_1))) {
        i_reg_245 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_390_p2.read()))) {
        i_reg_245 = i_1_fu_396_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        operation_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
            operation_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            operation_ap_vld_preg = operation_ap_vld.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        operation_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            operation_preg = operation.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        storemerge1_reg_290 = contacts_size_load_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_448_p2.read()))) {
        storemerge1_reg_290 = tmp_s_fu_474_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        storemerge_reg_267 = database_size_load_reg_502.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(exitcond_i5_fu_407_p2.read(), ap_const_lv1_1))) {
        storemerge_reg_267 = tmp_3_fu_433_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())))) {
        contacts_size_load_reg_493 = contacts_size.read();
        database_size_load_reg_502 = database_size.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        contacts_size_out_1_data_reg = contacts_size_out_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        database_index_1_reg_531 = database_index_1_fu_384_p2.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, database_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, database_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, database_size_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        database_size_out_1_data_reg = database_size_out_1_data_in.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        error_out_1_data_reg = error_out_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        exitcond_reg_536 = exitcond_fu_390_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_2_reg_581 = i_2_fu_454_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_3_reg_558 = i_3_fu_413_p2.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, matched_finished_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, matched_finished_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, matched_finished_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        matched_finished_1_data_reg = matched_finished_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i5_fu_407_p2.read()))) {
        sum_i9_reg_568 = sum_i9_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_448_p2.read()))) {
        sum_i_reg_591 = sum_i_fu_469_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && esl_seteq<1,1,1>(tmp_7_fu_336_p2.read(), ap_const_lv1_0))) {
        tmp_2_cast_reg_514 = tmp_2_cast_fu_344_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_390_p2.read()))) {
        tmp_4_reg_545 = tmp_4_fu_402_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_361_p2.read()))) {
        tmp_9_cast_reg_522 = tmp_9_cast_fu_370_p3.read();
    }
}

void contact_discovery::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void contact_discovery::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void contact_discovery::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[8];
}

void contact_discovery::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void contact_discovery::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[10];
}

void contact_discovery::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[12];
}

void contact_discovery::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void contact_discovery::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[14];
}

void contact_discovery::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[15];
}

void contact_discovery::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void contact_discovery::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void contact_discovery::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void contact_discovery::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void contact_discovery::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void contact_discovery::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void contact_discovery::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void contact_discovery::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void contact_discovery::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void contact_discovery::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read()));
}

void contact_discovery::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void contact_discovery::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void contact_discovery::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read()));
}

void contact_discovery::thread_ap_condition_pp0_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(exitcond_fu_390_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void contact_discovery::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void contact_discovery::thread_contact_in_address0() {
    contact_in_address0 =  (sc_lv<6>) (tmp_i_fu_460_p1.read());
}

void contact_discovery::thread_contact_in_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        contact_in_ce0 = ap_const_logic_1;
    } else {
        contact_in_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        contacts_address0 =  (sc_lv<13>) (sum_i_cast_fu_485_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        contacts_address0 = grp_match_db_contact_fu_302_contacts_address0.read();
    } else {
        contacts_address0 = "XXXXXXXXXXXXX";
    }
}

void contact_discovery::thread_contacts_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        contacts_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        contacts_ce0 = grp_match_db_contact_fu_302_contacts_ce0.read();
    } else {
        contacts_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        contacts_ce1 = grp_match_db_contact_fu_302_contacts_ce1.read();
    } else {
        contacts_ce1 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_size_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        contacts_size_out_1_ack_in = ap_const_logic_1;
    } else {
        contacts_size_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_size_out_1_data_in() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        contacts_size_out_1_data_in = storemerge1_reg_290.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2)))) {
        contacts_size_out_1_data_in = contacts_size.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4))) {
        contacts_size_out_1_data_in = ap_const_lv32_0;
    } else {
        contacts_size_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_contacts_size_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        contacts_size_out_1_vld_in = ap_const_logic_1;
    } else {
        contacts_size_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        contacts_we0 = ap_const_logic_1;
    } else {
        contacts_we0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        database_address0 =  (sc_lv<21>) (sum_i9_cast_fu_444_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        database_address0 = grp_match_db_contact_fu_302_database_address0.read();
    } else {
        database_address0 =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_database_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        database_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        database_ce0 = grp_match_db_contact_fu_302_database_ce0.read();
    } else {
        database_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        database_ce1 = grp_match_db_contact_fu_302_database_ce1.read();
    } else {
        database_ce1 = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_in_address0() {
    database_in_address0 =  (sc_lv<6>) (tmp_i6_fu_419_p1.read());
}

void contact_discovery::thread_database_in_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        database_in_ce0 = ap_const_logic_1;
    } else {
        database_in_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_index_1_fu_384_p2() {
    database_index_1_fu_384_p2 = (!database_index_reg_233.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(database_index_reg_233.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void contact_discovery::thread_database_size_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, database_size_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        database_size_out_1_ack_in = ap_const_logic_1;
    } else {
        database_size_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_size_out_1_data_in() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        database_size_out_1_data_in = storemerge_reg_267.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3))) {
        database_size_out_1_data_in = ap_const_lv32_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2)))) {
        database_size_out_1_data_in = database_size.read();
    } else {
        database_size_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_database_size_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        database_size_out_1_vld_in = ap_const_logic_1;
    } else {
        database_size_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        database_we0 = ap_const_logic_1;
    } else {
        database_we0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_error_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        error_out_1_ack_in = ap_const_logic_1;
    } else {
        error_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_error_out_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
         esl_seteq<1,1,1>(icmp_fu_361_p2.read(), ap_const_lv1_1))) {
        error_out_1_data_in = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
                esl_seteq<1,1,1>(tmp_7_fu_336_p2.read(), ap_const_lv1_1))) {
        error_out_1_data_in = ap_const_lv32_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4))) {
        error_out_1_data_in = ap_const_lv32_3;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2)))) {
        error_out_1_data_in = ap_const_lv32_0;
    } else {
        error_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_error_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
          esl_seteq<1,1,1>(tmp_7_fu_336_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
          esl_seteq<1,1,1>(icmp_fu_361_p2.read(), ap_const_lv1_1)))) {
        error_out_1_vld_in = ap_const_logic_1;
    } else {
        error_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_exitcond2_fu_378_p2() {
    exitcond2_fu_378_p2 = (!database_index_reg_233.read().is_01() || !ap_const_lv15_7530.is_01())? sc_lv<1>(): sc_lv<1>(database_index_reg_233.read() == ap_const_lv15_7530);
}

void contact_discovery::thread_exitcond_fu_390_p2() {
    exitcond_fu_390_p2 = (!i_reg_245.read().is_01() || !ap_const_lv15_7530.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_245.read() == ap_const_lv15_7530);
}

void contact_discovery::thread_exitcond_i5_fu_407_p2() {
    exitcond_i5_fu_407_p2 = (!i_i4_reg_256.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i4_reg_256.read() == ap_const_lv7_40);
}

void contact_discovery::thread_exitcond_i_fu_448_p2() {
    exitcond_i_fu_448_p2 = (!i_i_reg_279.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_279.read() == ap_const_lv7_40);
}

void contact_discovery::thread_grp_match_db_contact_fu_302_ap_start() {
    grp_match_db_contact_fu_302_ap_start = ap_reg_grp_match_db_contact_fu_302_ap_start.read();
}

void contact_discovery::thread_i_1_fu_396_p2() {
    i_1_fu_396_p2 = (!i_reg_245.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i_reg_245.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void contact_discovery::thread_i_2_fu_454_p2() {
    i_2_fu_454_p2 = (!i_i_reg_279.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i_reg_279.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void contact_discovery::thread_i_3_fu_413_p2() {
    i_3_fu_413_p2 = (!i_i4_reg_256.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i4_reg_256.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void contact_discovery::thread_icmp_fu_361_p2() {
    icmp_fu_361_p2 = (!tmp_fu_352_p4.read().is_01() || !ap_const_lv25_0.is_01())? sc_lv<1>(): (sc_bigint<25>(tmp_fu_352_p4.read()) > sc_bigint<25>(ap_const_lv25_0));
}

void contact_discovery::thread_matched_finished_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, matched_finished_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        matched_finished_1_ack_in = ap_const_logic_1;
    } else {
        matched_finished_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_matched_finished_1_data_in() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        matched_finished_1_data_in = ap_const_lv32_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)))) {
        matched_finished_1_data_in = ap_const_lv32_0;
    } else {
        matched_finished_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_matched_finished_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_4)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        matched_finished_1_vld_in = ap_const_logic_1;
    } else {
        matched_finished_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_matched_out_address0() {
    matched_out_address0 =  (sc_lv<15>) (tmp_4_reg_545.read());
}

void contact_discovery::thread_matched_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        matched_out_ce0 = ap_const_logic_1;
    } else {
        matched_out_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_matched_out_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_536.read()))) {
        matched_out_we0 = ap_const_logic_1;
    } else {
        matched_out_we0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_operation_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read())) {
        operation_ap_vld_in_sig = operation_ap_vld.read();
    } else {
        operation_ap_vld_in_sig = operation_ap_vld_preg.read();
    }
}

void contact_discovery::thread_operation_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        operation_blk_n = operation_ap_vld.read();
    } else {
        operation_blk_n = ap_const_logic_1;
    }
}

void contact_discovery::thread_operation_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read())) {
        operation_in_sig = operation.read();
    } else {
        operation_in_sig = operation_preg.read();
    }
}

void contact_discovery::thread_operation_read_read_fu_116_p2() {
    operation_read_read_fu_116_p2 = operation_in_sig.read();
}

void contact_discovery::thread_results_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        results_address0 =  (sc_lv<15>) (tmp_4_fu_402_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        results_address0 = grp_match_db_contact_fu_302_results_address0.read();
    } else {
        results_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_results_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        results_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        results_ce0 = grp_match_db_contact_fu_302_results_ce0.read();
    } else {
        results_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_results_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        results_we0 = grp_match_db_contact_fu_302_results_we0.read();
    } else {
        results_we0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_sum_i9_cast_fu_444_p1() {
    sum_i9_cast_fu_444_p1 = esl_sext<64,22>(sum_i9_reg_568.read());
}

void contact_discovery::thread_sum_i9_fu_428_p2() {
    sum_i9_fu_428_p2 = (!tmp_i6_cast_fu_424_p1.read().is_01() || !tmp_2_cast_reg_514.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_i6_cast_fu_424_p1.read()) + sc_biguint<22>(tmp_2_cast_reg_514.read()));
}

void contact_discovery::thread_sum_i_cast_fu_485_p1() {
    sum_i_cast_fu_485_p1 = esl_sext<64,15>(sum_i_reg_591.read());
}

void contact_discovery::thread_sum_i_fu_469_p2() {
    sum_i_fu_469_p2 = (!tmp_i_cast_fu_465_p1.read().is_01() || !tmp_9_cast_reg_522.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_i_cast_fu_465_p1.read()) + sc_biguint<15>(tmp_9_cast_reg_522.read()));
}

void contact_discovery::thread_tmp_127_fu_367_p1() {
    tmp_127_fu_367_p1 = contacts_size_load_reg_493.read().range(9-1, 0);
}

void contact_discovery::thread_tmp_128_fu_341_p1() {
    tmp_128_fu_341_p1 = database_size_load_reg_502.read().range(16-1, 0);
}

void contact_discovery::thread_tmp_2_cast_fu_344_p3() {
    tmp_2_cast_fu_344_p3 = esl_concat<16,6>(tmp_128_fu_341_p1.read(), ap_const_lv6_0);
}

void contact_discovery::thread_tmp_3_fu_433_p2() {
    tmp_3_fu_433_p2 = (!database_size_load_reg_502.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(database_size_load_reg_502.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void contact_discovery::thread_tmp_4_fu_402_p1() {
    tmp_4_fu_402_p1 = esl_zext<64,15>(i_reg_245.read());
}

void contact_discovery::thread_tmp_7_fu_336_p2() {
    tmp_7_fu_336_p2 = (!database_size_load_reg_502.read().is_01() || !ap_const_lv32_752F.is_01())? sc_lv<1>(): (sc_bigint<32>(database_size_load_reg_502.read()) > sc_bigint<32>(ap_const_lv32_752F));
}

void contact_discovery::thread_tmp_9_cast_fu_370_p3() {
    tmp_9_cast_fu_370_p3 = esl_concat<9,6>(tmp_127_fu_367_p1.read(), ap_const_lv6_0);
}

void contact_discovery::thread_tmp_fu_352_p4() {
    tmp_fu_352_p4 = contacts_size_load_reg_493.read().range(31, 7);
}

void contact_discovery::thread_tmp_i6_cast_fu_424_p1() {
    tmp_i6_cast_fu_424_p1 = esl_zext<22,7>(i_i4_reg_256.read());
}

void contact_discovery::thread_tmp_i6_fu_419_p1() {
    tmp_i6_fu_419_p1 = esl_zext<64,7>(i_i4_reg_256.read());
}

void contact_discovery::thread_tmp_i_cast_fu_465_p1() {
    tmp_i_cast_fu_465_p1 = esl_zext<15,7>(i_i_reg_279.read());
}

void contact_discovery::thread_tmp_i_fu_460_p1() {
    tmp_i_fu_460_p1 = esl_zext<64,7>(i_i_reg_279.read());
}

void contact_discovery::thread_tmp_s_fu_474_p2() {
    tmp_s_fu_474_p2 = (!contacts_size_load_reg_493.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(contacts_size_load_reg_493.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void contact_discovery::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_361_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_116_p2.read()) && esl_seteq<1,1,1>(icmp_fu_361_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && esl_seteq<1,1,1>(tmp_7_fu_336_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_1) && esl_seteq<1,1,1>(tmp_7_fu_336_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(operation_read_read_fu_116_p2.read(), ap_const_lv32_2))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_378_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_match_db_contact_fu_302_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_390_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_390_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, matched_finished_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, database_size_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond_i5_fu_407_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_448_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void contact_discovery::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

