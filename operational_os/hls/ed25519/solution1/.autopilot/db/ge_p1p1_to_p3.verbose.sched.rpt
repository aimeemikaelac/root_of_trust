

================================================================
== Vivado HLS Report for 'ge_p1p1_to_p3'
================================================================
* Date:           Fri Jun  2 12:27:18 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        ed25519
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.56|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  800|  800|  800|  800|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
* FSM state operations: 

 <State 1>: 7.56ns
ST_1: p_read_29 (49)  [1/1] 0.00ns
:8  %p_read_29 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read39)

ST_1: p_read_30 (50)  [1/1] 0.00ns
:9  %p_read_30 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read38)

ST_1: p_read_31 (51)  [1/1] 0.00ns
:10  %p_read_31 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read37)

ST_1: p_read_32 (52)  [1/1] 0.00ns
:11  %p_read_32 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read36)

ST_1: p_read_33 (53)  [1/1] 0.00ns
:12  %p_read_33 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read35)

ST_1: p_read_34 (54)  [1/1] 0.00ns
:13  %p_read_34 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read34)

ST_1: p_read_35 (55)  [1/1] 0.00ns
:14  %p_read_35 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read33)

ST_1: p_read_36 (56)  [1/1] 0.00ns
:15  %p_read_36 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read32)

ST_1: p_read_37 (57)  [1/1] 0.00ns
:16  %p_read_37 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read31)

ST_1: p_read_38 (58)  [1/1] 0.00ns
:17  %p_read_38 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read30)

ST_1: p_read949 (79)  [1/1] 0.00ns
:38  %p_read949 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read9)

ST_1: p_read848 (80)  [1/1] 0.00ns
:39  %p_read848 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read8)

ST_1: p_read747 (81)  [1/1] 0.00ns
:40  %p_read747 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read7)

ST_1: p_read646 (82)  [1/1] 0.00ns
:41  %p_read646 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read6)

ST_1: p_read545 (83)  [1/1] 0.00ns
:42  %p_read545 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read5)

ST_1: p_read444 (84)  [1/1] 0.00ns
:43  %p_read444 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read4)

ST_1: p_read343 (85)  [1/1] 0.00ns
:44  %p_read343 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read3)

ST_1: p_read242 (86)  [1/1] 0.00ns
:45  %p_read242 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read2)

ST_1: p_read141 (87)  [1/1] 0.00ns
:46  %p_read141 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read1)

ST_1: p_read_58 (88)  [1/1] 0.00ns
:47  %p_read_58 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read)

ST_1: fe_mul_ret (89)  [2/2] 7.56ns
:48  %fe_mul_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read_58, i32 %p_read141, i32 %p_read242, i32 %p_read343, i32 %p_read444, i32 %p_read545, i32 %p_read646, i32 %p_read747, i32 %p_read848, i32 %p_read949, i32 %p_read_38, i32 %p_read_37, i32 %p_read_36, i32 %p_read_35, i32 %p_read_34, i32 %p_read_33, i32 %p_read_32, i32 %p_read_31, i32 %p_read_30, i32 %p_read_29)


 <State 2>: 7.56ns
ST_2: p_read_39 (59)  [1/1] 0.00ns
:18  %p_read_39 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read29)

ST_2: p_read_40 (60)  [1/1] 0.00ns
:19  %p_read_40 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read28)

ST_2: p_read_41 (61)  [1/1] 0.00ns
:20  %p_read_41 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read27)

ST_2: p_read_42 (62)  [1/1] 0.00ns
:21  %p_read_42 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read26)

ST_2: p_read_43 (63)  [1/1] 0.00ns
:22  %p_read_43 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read25)

ST_2: p_read_44 (64)  [1/1] 0.00ns
:23  %p_read_44 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read24)

ST_2: p_read_45 (65)  [1/1] 0.00ns
:24  %p_read_45 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read23)

ST_2: p_read_46 (66)  [1/1] 0.00ns
:25  %p_read_46 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read22)

ST_2: p_read_47 (67)  [1/1] 0.00ns
:26  %p_read_47 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read21)

ST_2: p_read_48 (68)  [1/1] 0.00ns
:27  %p_read_48 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read20)

ST_2: p_read_49 (69)  [1/1] 0.00ns
:28  %p_read_49 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read19)

ST_2: p_read_50 (70)  [1/1] 0.00ns
:29  %p_read_50 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read18)

ST_2: p_read_51 (71)  [1/1] 0.00ns
:30  %p_read_51 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read17)

ST_2: p_read_52 (72)  [1/1] 0.00ns
:31  %p_read_52 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read16)

ST_2: p_read_53 (73)  [1/1] 0.00ns
:32  %p_read_53 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read15)

ST_2: p_read_54 (74)  [1/1] 0.00ns
:33  %p_read_54 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read14)

ST_2: p_read_55 (75)  [1/1] 0.00ns
:34  %p_read_55 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read13)

ST_2: p_read_56 (76)  [1/1] 0.00ns
:35  %p_read_56 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read12)

ST_2: p_read_57 (77)  [1/1] 0.00ns
:36  %p_read_57 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read11)

ST_2: p_read1050 (78)  [1/1] 0.00ns
:37  %p_read1050 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read10)

ST_2: fe_mul_ret (89)  [1/2] 1.34ns
:48  %fe_mul_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read_58, i32 %p_read141, i32 %p_read242, i32 %p_read343, i32 %p_read444, i32 %p_read545, i32 %p_read646, i32 %p_read747, i32 %p_read848, i32 %p_read949, i32 %p_read_38, i32 %p_read_37, i32 %p_read_36, i32 %p_read_35, i32 %p_read_34, i32 %p_read_33, i32 %p_read_32, i32 %p_read_31, i32 %p_read_30, i32 %p_read_29)

ST_2: r_X (90)  [1/1] 0.00ns
:49  %r_X = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 0

ST_2: r_X_1 (91)  [1/1] 0.00ns
:50  %r_X_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 1

ST_2: r_X_2 (92)  [1/1] 0.00ns
:51  %r_X_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 2

ST_2: r_X_3 (93)  [1/1] 0.00ns
:52  %r_X_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 3

ST_2: r_X_4 (94)  [1/1] 0.00ns
:53  %r_X_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 4

ST_2: r_X_5 (95)  [1/1] 0.00ns
:54  %r_X_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 5

ST_2: r_X_6 (96)  [1/1] 0.00ns
:55  %r_X_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 6

ST_2: r_X_7 (97)  [1/1] 0.00ns
:56  %r_X_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 7

ST_2: r_X_8 (98)  [1/1] 0.00ns
:57  %r_X_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 8

ST_2: r_X_9 (99)  [1/1] 0.00ns
:58  %r_X_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret, 9

ST_2: fe_mul_ret2 (100)  [2/2] 7.56ns
:59  %fe_mul_ret2 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read1050, i32 %p_read_57, i32 %p_read_56, i32 %p_read_55, i32 %p_read_54, i32 %p_read_53, i32 %p_read_52, i32 %p_read_51, i32 %p_read_50, i32 %p_read_49, i32 %p_read_48, i32 %p_read_47, i32 %p_read_46, i32 %p_read_45, i32 %p_read_44, i32 %p_read_43, i32 %p_read_42, i32 %p_read_41, i32 %p_read_40, i32 %p_read_39)


 <State 3>: 7.56ns
ST_3: fe_mul_ret2 (100)  [1/2] 1.34ns
:59  %fe_mul_ret2 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read1050, i32 %p_read_57, i32 %p_read_56, i32 %p_read_55, i32 %p_read_54, i32 %p_read_53, i32 %p_read_52, i32 %p_read_51, i32 %p_read_50, i32 %p_read_49, i32 %p_read_48, i32 %p_read_47, i32 %p_read_46, i32 %p_read_45, i32 %p_read_44, i32 %p_read_43, i32 %p_read_42, i32 %p_read_41, i32 %p_read_40, i32 %p_read_39)

ST_3: r_Y (101)  [1/1] 0.00ns
:60  %r_Y = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 0

ST_3: r_Y_1 (102)  [1/1] 0.00ns
:61  %r_Y_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 1

ST_3: r_Y_2 (103)  [1/1] 0.00ns
:62  %r_Y_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 2

ST_3: r_Y_3 (104)  [1/1] 0.00ns
:63  %r_Y_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 3

ST_3: r_Y_4 (105)  [1/1] 0.00ns
:64  %r_Y_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 4

ST_3: r_Y_5 (106)  [1/1] 0.00ns
:65  %r_Y_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 5

ST_3: r_Y_6 (107)  [1/1] 0.00ns
:66  %r_Y_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 6

ST_3: r_Y_7 (108)  [1/1] 0.00ns
:67  %r_Y_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 7

ST_3: r_Y_8 (109)  [1/1] 0.00ns
:68  %r_Y_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 8

ST_3: r_Y_9 (110)  [1/1] 0.00ns
:69  %r_Y_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret2, 9

ST_3: fe_mul_ret3 (111)  [2/2] 7.56ns
:70  %fe_mul_ret3 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read_48, i32 %p_read_47, i32 %p_read_46, i32 %p_read_45, i32 %p_read_44, i32 %p_read_43, i32 %p_read_42, i32 %p_read_41, i32 %p_read_40, i32 %p_read_39, i32 %p_read_38, i32 %p_read_37, i32 %p_read_36, i32 %p_read_35, i32 %p_read_34, i32 %p_read_33, i32 %p_read_32, i32 %p_read_31, i32 %p_read_30, i32 %p_read_29)


 <State 4>: 7.56ns
ST_4: fe_mul_ret3 (111)  [1/2] 1.34ns
:70  %fe_mul_ret3 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read_48, i32 %p_read_47, i32 %p_read_46, i32 %p_read_45, i32 %p_read_44, i32 %p_read_43, i32 %p_read_42, i32 %p_read_41, i32 %p_read_40, i32 %p_read_39, i32 %p_read_38, i32 %p_read_37, i32 %p_read_36, i32 %p_read_35, i32 %p_read_34, i32 %p_read_33, i32 %p_read_32, i32 %p_read_31, i32 %p_read_30, i32 %p_read_29)

ST_4: r_Z (112)  [1/1] 0.00ns
:71  %r_Z = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 0

ST_4: r_Z_1 (113)  [1/1] 0.00ns
:72  %r_Z_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 1

ST_4: r_Z_2 (114)  [1/1] 0.00ns
:73  %r_Z_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 2

ST_4: r_Z_3 (115)  [1/1] 0.00ns
:74  %r_Z_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 3

ST_4: r_Z_4 (116)  [1/1] 0.00ns
:75  %r_Z_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 4

ST_4: r_Z_5 (117)  [1/1] 0.00ns
:76  %r_Z_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 5

ST_4: r_Z_6 (118)  [1/1] 0.00ns
:77  %r_Z_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 6

ST_4: r_Z_7 (119)  [1/1] 0.00ns
:78  %r_Z_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 7

ST_4: r_Z_8 (120)  [1/1] 0.00ns
:79  %r_Z_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 8

ST_4: r_Z_9 (121)  [1/1] 0.00ns
:80  %r_Z_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret3, 9

ST_4: fe_mul_ret4 (122)  [2/2] 7.56ns
:81  %fe_mul_ret4 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read_58, i32 %p_read141, i32 %p_read242, i32 %p_read343, i32 %p_read444, i32 %p_read545, i32 %p_read646, i32 %p_read747, i32 %p_read848, i32 %p_read949, i32 %p_read1050, i32 %p_read_57, i32 %p_read_56, i32 %p_read_55, i32 %p_read_54, i32 %p_read_53, i32 %p_read_52, i32 %p_read_51, i32 %p_read_50, i32 %p_read_49)


 <State 5>: 1.34ns
ST_5: StgValue_83 (41)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:309
:0  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str10, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_84 (42)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:310
:1  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str212, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_85 (43)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:311
:2  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str313, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_86 (44)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:312
:3  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str414, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_87 (45)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:313
:4  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str515, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_88 (46)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:314
:5  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @p_str616, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_89 (47)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:315
:6  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @p_str717, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind

ST_5: StgValue_90 (48)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:316
:7  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [7 x i8]* @p_str818, [1 x i8]* @p_str111) nounwind

ST_5: fe_mul_ret4 (122)  [1/2] 1.34ns
:81  %fe_mul_ret4 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @fe_mul(i32 %p_read_58, i32 %p_read141, i32 %p_read242, i32 %p_read343, i32 %p_read444, i32 %p_read545, i32 %p_read646, i32 %p_read747, i32 %p_read848, i32 %p_read949, i32 %p_read1050, i32 %p_read_57, i32 %p_read_56, i32 %p_read_55, i32 %p_read_54, i32 %p_read_53, i32 %p_read_52, i32 %p_read_51, i32 %p_read_50, i32 %p_read_49)

ST_5: r_T (123)  [1/1] 0.00ns
:82  %r_T = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 0

ST_5: r_T_1 (124)  [1/1] 0.00ns
:83  %r_T_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 1

ST_5: r_T_2 (125)  [1/1] 0.00ns
:84  %r_T_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 2

ST_5: r_T_3 (126)  [1/1] 0.00ns
:85  %r_T_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 3

ST_5: r_T_4 (127)  [1/1] 0.00ns
:86  %r_T_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 4

ST_5: r_T_5 (128)  [1/1] 0.00ns
:87  %r_T_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 5

ST_5: r_T_6 (129)  [1/1] 0.00ns
:88  %r_T_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 6

ST_5: r_T_7 (130)  [1/1] 0.00ns
:89  %r_T_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 7

ST_5: r_T_8 (131)  [1/1] 0.00ns
:90  %r_T_8 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 8

ST_5: r_T_9 (132)  [1/1] 0.00ns
:91  %r_T_9 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %fe_mul_ret4, 9

ST_5: mrv (133)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:92  %mrv = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } undef, i32 %r_X, 0

ST_5: mrv_1 (134)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:93  %mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv, i32 %r_X_1, 1

ST_5: mrv_2 (135)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:94  %mrv_2 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %r_X_2, 2

ST_5: mrv_3 (136)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:95  %mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_2, i32 %r_X_3, 3

ST_5: mrv_4 (137)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:96  %mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %r_X_4, 4

ST_5: mrv_5 (138)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:97  %mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %r_X_5, 5

ST_5: mrv_6 (139)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:98  %mrv_6 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_5, i32 %r_X_6, 6

ST_5: mrv_7 (140)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:99  %mrv_7 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_6, i32 %r_X_7, 7

ST_5: mrv_8 (141)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:100  %mrv_8 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_7, i32 %r_X_8, 8

ST_5: mrv_9 (142)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:101  %mrv_9 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_8, i32 %r_X_9, 9

ST_5: mrv_10 (143)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:102  %mrv_10 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_9, i32 %r_Y, 10

ST_5: mrv_11 (144)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:103  %mrv_11 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_10, i32 %r_Y_1, 11

ST_5: mrv_12 (145)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:104  %mrv_12 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_11, i32 %r_Y_2, 12

ST_5: mrv_13 (146)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:105  %mrv_13 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_12, i32 %r_Y_3, 13

ST_5: mrv_14 (147)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:106  %mrv_14 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_13, i32 %r_Y_4, 14

ST_5: mrv_15 (148)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:107  %mrv_15 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_14, i32 %r_Y_5, 15

ST_5: mrv_16 (149)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:108  %mrv_16 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_15, i32 %r_Y_6, 16

ST_5: mrv_17 (150)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:109  %mrv_17 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_16, i32 %r_Y_7, 17

ST_5: mrv_18 (151)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:110  %mrv_18 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_17, i32 %r_Y_8, 18

ST_5: mrv_19 (152)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:111  %mrv_19 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_18, i32 %r_Y_9, 19

ST_5: mrv_20 (153)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:112  %mrv_20 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_19, i32 %r_Z, 20

ST_5: mrv_21 (154)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:113  %mrv_21 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_20, i32 %r_Z_1, 21

ST_5: mrv_22 (155)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:114  %mrv_22 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_21, i32 %r_Z_2, 22

ST_5: mrv_23 (156)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:115  %mrv_23 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_22, i32 %r_Z_3, 23

ST_5: mrv_24 (157)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:116  %mrv_24 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_23, i32 %r_Z_4, 24

ST_5: mrv_25 (158)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:117  %mrv_25 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_24, i32 %r_Z_5, 25

ST_5: mrv_26 (159)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:118  %mrv_26 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_25, i32 %r_Z_6, 26

ST_5: mrv_27 (160)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:119  %mrv_27 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_26, i32 %r_Z_7, 27

ST_5: mrv_28 (161)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:120  %mrv_28 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_27, i32 %r_Z_8, 28

ST_5: mrv_29 (162)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:121  %mrv_29 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_28, i32 %r_Z_9, 29

ST_5: mrv_30 (163)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:122  %mrv_30 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_29, i32 %r_T, 30

ST_5: mrv_31 (164)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:123  %mrv_31 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_30, i32 %r_T_1, 31

ST_5: mrv_32 (165)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:124  %mrv_32 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_31, i32 %r_T_2, 32

ST_5: mrv_33 (166)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:125  %mrv_33 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_32, i32 %r_T_3, 33

ST_5: mrv_34 (167)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:126  %mrv_34 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_33, i32 %r_T_4, 34

ST_5: mrv_35 (168)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:127  %mrv_35 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_34, i32 %r_T_5, 35

ST_5: mrv_36 (169)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:128  %mrv_36 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_35, i32 %r_T_6, 36

ST_5: mrv_37 (170)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:129  %mrv_37 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_36, i32 %r_T_7, 37

ST_5: mrv_38 (171)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:130  %mrv_38 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_37, i32 %r_T_8, 38

ST_5: mrv_39 (172)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:131  %mrv_39 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_38, i32 %r_T_9, 39

ST_5: StgValue_142 (173)  [1/1] 0.00ns  loc: ed25519/src/ge.cpp:321
:132  ret { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_39



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.56ns
The critical path consists of the following:
	wire read on port 'p_read39' [49]  (0 ns)
	'call' operation ('fe_mul_ret') to 'fe_mul' [89]  (7.56 ns)

 <State 2>: 7.56ns
The critical path consists of the following:
	wire read on port 'p_read29' [59]  (0 ns)
	'call' operation ('fe_mul_ret2') to 'fe_mul' [100]  (7.56 ns)

 <State 3>: 7.56ns
The critical path consists of the following:
	'call' operation ('fe_mul_ret3') to 'fe_mul' [111]  (7.56 ns)

 <State 4>: 7.56ns
The critical path consists of the following:
	'call' operation ('fe_mul_ret4') to 'fe_mul' [122]  (7.56 ns)

 <State 5>: 1.34ns
The critical path consists of the following:
	'call' operation ('fe_mul_ret4') to 'fe_mul' [122]  (1.34 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
