; ModuleID = '/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/a.o.2.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@mu = internal unnamed_addr constant [33 x i8] c"\1B\13,\0A\A3\E5\9C\ED\A7)c\08]!\06!\EB\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\0F" ; [#uses=1 type=[33 x i8]*]
@memset_signature.str = internal unnamed_addr constant [17 x i8] c"memset_signature\00" ; [#uses=1 type=[17 x i8]*]
@m = internal unnamed_addr constant [32 x i8] c"\ED\D3\F5\5C\1Ac\12X\D6\9C\F7\A2\DE\F9\DE\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10" ; [#uses=3 type=[32 x i8]*]
@ge25519_ec2d.v = internal constant [32 x i32] [i32 89, i32 241, i32 178, i32 38, i32 148, i32 155, i32 214, i32 235, i32 86, i32 177, i32 131, i32 130, i32 154, i32 20, i32 224, i32 0, i32 48, i32 209, i32 243, i32 238, i32 242, i32 128, i32 142, i32 25, i32 231, i32 252, i32 223, i32 86, i32 220, i32 217, i32 6, i32 36] ; [#uses=1 type=[32 x i32]*]
@ge25519_base_multiples_affine.y.v = internal constant [425 x [32 x i32]] [[32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 88, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102], [32 x i32] [i32 201, i32 163, i32 248, i32 106, i32 174, i32 70, i32 95, i32 14, i32 86, i32 81, i32 56, i32 100, i32 81, i32 15, i32 57, i32 151, i32 86, i32 31, i32 162, i32 201, i32 232, i32 94, i32 162, i32 29, i32 194, i32 41, i32 35, i32 9, i32 243, i32 205, i32 96, i32 34], [32 x i32] [i32 212, i32 180, i32 245, i32 120, i32 72, i32 104, i32 195, i32 2, i32 4, i32 3, i32 36, i32 103, i32 23, i32 236, i32 22, i32 159, i32 247, i32 158, i32 38, i32 96, i32 142, i32 161, i32 38, i32 161, i32 171, i32 105, i32 238, i32 119, i32 209, i32 177, i32 103, i32 18], [32 x i32] [i32 47, i32 17, i32 50, i32 202, i32 97, i32 171, i32 56, i32 223, i32 240, i32 15, i32 47, i32 234, i32 50, i32 40, i32 242, i32 76, i32 108, i32 113, i32 213, i32 128, i32 133, i32 184, i32 14, i32 71, i32 225, i32 149, i32 21, i32 203, i32 39, i32 232, i32 208, i32 71], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 180, i32 185, i32 55, i32 252, i32 169, i32 91, i32 47, i32 30, i32 147, i32 228, i32 30, i32 98, i32 252, i32 60, i32 120, i32 129, i32 143, i32 243, i32 138, i32 102, i32 9, i32 111, i32 173, i32 110, i32 121, i32 115, i32 229, i32 201, i32 0, i32 6, i32 211, i32 33], [32 x i32] [i32 235, i32 39, i32 103, i32 193, i32 55, i32 171, i32 122, i32 216, i32 39, i32 156, i32 7, i32 142, i32 255, i32 17, i32 106, i32 176, i32 120, i32 110, i32 173, i32 58, i32 46, i32 15, i32 152, i32 159, i32 114, i32 195, i32 127, i32 130, i32 242, i32 150, i32 150, i32 112], [32 x i32] [i32 241, i32 121, i32 123, i32 237, i32 79, i32 68, i32 178, i32 231, i32 8, i32 13, i32 194, i32 8, i32 18, i32 210, i32 159, i32 223, i32 205, i32 147, i32 32, i32 138, i32 207, i32 51, i32 202, i32 109, i32 137, i32 185, i32 119, i32 200, i32 147, i32 27, i32 78, i32 96], [32 x i32] [i32 105, i32 210, i32 6, i32 58, i32 79, i32 57, i32 45, i32 249, i32 56, i32 64, i32 140, i32 76, i32 231, i32 5, i32 18, i32 180, i32 120, i32 139, i32 248, i32 192, i32 236, i32 147, i32 222, i32 122, i32 107, i32 206, i32 44, i32 225, i32 14, i32 169, i32 52, i32 68], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 38, i32 9, i32 218, i32 23, i32 175, i32 149, i32 214, i32 251, i32 106, i32 25, i32 13, i32 110, i32 94, i32 18, i32 241, i32 153, i32 76, i32 170, i32 168, i32 111, i32 121, i32 134, i32 244, i32 114, i32 40, i32 0, i32 38, i32 249, i32 234, i32 158, i32 25, i32 61], [32 x i32] [i32 252, i32 134, i32 75, i32 8, i32 238, i32 231, i32 160, i32 253, i32 33, i32 69, i32 9, i32 52, i32 193, i32 97, i32 50, i32 35, i32 252, i32 155, i32 85, i32 72, i32 83, i32 153, i32 247, i32 99, i32 208, i32 153, i32 206, i32 1, i32 224, i32 159, i32 235, i32 40], [32 x i32] [i32 28, i32 89, i32 28, i32 101, i32 93, i32 52, i32 164, i32 9, i32 205, i32 19, i32 156, i32 112, i32 125, i32 177, i32 42, i32 197, i32 136, i32 175, i32 11, i32 96, i32 199, i32 159, i32 52, i32 141, i32 214, i32 183, i32 127, i32 234, i32 120, i32 101, i32 141, i32 119], [32 x i32] [i32 199, i32 246, i32 108, i32 86, i32 49, i32 32, i32 20, i32 14, i32 168, i32 217, i32 39, i32 193, i32 154, i32 61, i32 27, i32 125, i32 14, i32 38, i32 211, i32 129, i32 170, i32 235, i32 245, i32 107, i32 121, i32 2, i32 241, i32 81, i32 92, i32 117, i32 85, i32 15], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 232, i32 147, i32 139, i32 0, i32 100, i32 247, i32 156, i32 184, i32 116, i32 224, i32 230, i32 73, i32 72, i32 77, i32 77, i32 72, i32 182, i32 25, i32 161, i32 64, i32 183, i32 217, i32 50, i32 65, i32 124, i32 130, i32 55, i32 161, i32 45, i32 220, i32 210, i32 84], [32 x i32] [i32 61, i32 193, i32 39, i32 243, i32 89, i32 67, i32 149, i32 144, i32 197, i32 150, i32 121, i32 245, i32 244, i32 149, i32 101, i32 41, i32 6, i32 156, i32 81, i32 5, i32 24, i32 218, i32 184, i32 46, i32 121, i32 126, i32 105, i32 89, i32 113, i32 1, i32 235, i32 26], [32 x i32] [i32 188, i32 88, i32 230, i32 192, i32 149, i32 42, i32 42, i32 129, i32 154, i32 122, i32 243, i32 210, i32 6, i32 190, i32 72, i32 188, i32 12, i32 197, i32 70, i32 224, i32 106, i32 212, i32 172, i32 15, i32 217, i32 204, i32 130, i32 52, i32 44, i32 175, i32 219, i32 31], [32 x i32] [i32 78, i32 54, i32 17, i32 7, i32 162, i32 21, i32 32, i32 81, i32 196, i32 42, i32 195, i32 98, i32 139, i32 94, i32 127, i32 166, i32 15, i32 249, i32 69, i32 133, i32 108, i32 17, i32 134, i32 183, i32 126, i32 229, i32 215, i32 249, i32 195, i32 145, i32 28, i32 5], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 213, i32 32, i32 91, i32 128, i32 166, i32 128, i32 32, i32 149, i32 195, i32 233, i32 159, i32 142, i32 135, i32 158, i32 30, i32 158, i32 122, i32 199, i32 204, i32 117, i32 108, i32 165, i32 241, i32 145, i32 26, i32 168, i32 1, i32 44, i32 171, i32 118, i32 169, i32 89], [32 x i32] [i32 137, i32 175, i32 246, i32 164, i32 100, i32 213, i32 16, i32 224, i32 29, i32 173, i32 239, i32 68, i32 189, i32 218, i32 131, i32 172, i32 122, i32 168, i32 240, i32 28, i32 7, i32 249, i32 195, i32 67, i32 108, i32 63, i32 183, i32 211, i32 135, i32 34, i32 2, i32 115], [32 x i32] [i32 34, i32 245, i32 95, i32 77, i32 21, i32 239, i32 252, i32 78, i32 87, i32 3, i32 54, i32 137, i32 240, i32 235, i32 91, i32 145, i32 214, i32 226, i32 202, i32 1, i32 165, i32 238, i32 82, i32 236, i32 160, i32 60, i32 143, i32 51, i32 144, i32 90, i32 148, i32 114], [32 x i32] [i32 1, i32 137, i32 40, i32 34, i32 106, i32 120, i32 170, i32 41, i32 3, i32 200, i32 116, i32 149, i32 3, i32 62, i32 220, i32 189, i32 7, i32 19, i32 168, i32 162, i32 32, i32 45, i32 179, i32 24, i32 112, i32 66, i32 253, i32 122, i32 196, i32 215, i32 73, i32 114], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 70, i32 141, i32 176, i32 51, i32 84, i32 38, i32 91, i32 104, i32 223, i32 187, i32 197, i32 236, i32 194, i32 249, i32 60, i32 90, i32 55, i32 193, i32 142, i32 39, i32 71, i32 170, i32 73, i32 90, i32 248, i32 251, i32 104, i32 4, i32 35, i32 209, i32 235, i32 64], [32 x i32] [i32 54, i32 236, i32 84, i32 248, i32 206, i32 228, i32 133, i32 223, i32 246, i32 111, i32 29, i32 144, i32 8, i32 188, i32 232, i32 192, i32 146, i32 45, i32 67, i32 107, i32 146, i32 169, i32 142, i32 171, i32 10, i32 46, i32 28, i32 30, i32 100, i32 35, i32 159, i32 44], [32 x i32] [i32 96, i32 214, i32 221, i32 120, i32 230, i32 212, i32 34, i32 66, i32 31, i32 0, i32 249, i32 177, i32 106, i32 99, i32 226, i32 146, i32 89, i32 209, i32 26, i32 183, i32 0, i32 84, i32 41, i32 201, i32 193, i32 246, i32 111, i32 122, i32 197, i32 60, i32 95, i32 101], [32 x i32] [i32 241, i32 37, i32 78, i32 17, i32 150, i32 103, i32 230, i32 28, i32 194, i32 178, i32 83, i32 226, i32 218, i32 133, i32 238, i32 178, i32 159, i32 89, i32 243, i32 186, i32 189, i32 250, i32 207, i32 110, i32 249, i32 218, i32 164, i32 179, i32 2, i32 143, i32 100, i32 8], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 113, i32 214, i32 22, i32 118, i32 178, i32 6, i32 234, i32 121, i32 245, i32 196, i32 195, i32 82, i32 126, i32 97, i32 209, i32 225, i32 173, i32 112, i32 120, i32 29, i32 22, i32 17, i32 248, i32 124, i32 43, i32 252, i32 85, i32 159, i32 82, i32 248, i32 245, i32 22], [32 x i32] [i32 246, i32 226, i32 76, i32 31, i32 91, i32 178, i32 175, i32 130, i32 165, i32 207, i32 129, i32 16, i32 4, i32 239, i32 219, i32 162, i32 204, i32 36, i32 178, i32 126, i32 11, i32 122, i32 235, i32 1, i32 216, i32 82, i32 244, i32 81, i32 137, i32 41, i32 121, i32 55], [32 x i32] [i32 2, i32 204, i32 34, i32 116, i32 77, i32 25, i32 7, i32 192, i32 218, i32 181, i32 118, i32 81, i32 42, i32 170, i32 166, i32 10, i32 95, i32 38, i32 212, i32 188, i32 175, i32 72, i32 136, i32 127, i32 2, i32 188, i32 242, i32 225, i32 207, i32 233, i32 221, i32 21], [32 x i32] [i32 248, i32 100, i32 139, i32 96, i32 144, i32 233, i32 222, i32 68, i32 119, i32 185, i32 7, i32 54, i32 50, i32 194, i32 80, i32 245, i32 101, i32 223, i32 72, i32 76, i32 55, i32 170, i32 104, i32 171, i32 154, i32 31, i32 62, i32 255, i32 137, i32 146, i32 160, i32 7], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 75, i32 176, i32 78, i32 110, i32 17, i32 59, i32 81, i32 189, i32 106, i32 253, i32 228, i32 37, i32 165, i32 95, i32 17, i32 63, i32 152, i32 146, i32 81, i32 20, i32 198, i32 95, i32 60, i32 11, i32 168, i32 247, i32 194, i32 129, i32 67, i32 222, i32 145, i32 115], [32 x i32] [i32 121, i32 81, i32 129, i32 1, i32 220, i32 115, i32 83, i32 224, i32 110, i32 155, i32 234, i32 104, i32 63, i32 92, i32 20, i32 132, i32 83, i32 141, i32 75, i32 192, i32 159, i32 159, i32 137, i32 43, i32 140, i32 186, i32 134, i32 250, i32 242, i32 205, i32 227, i32 45], [32 x i32] [i32 46, i32 105, i32 152, i32 253, i32 198, i32 189, i32 204, i32 202, i32 223, i32 154, i32 68, i32 126, i32 157, i32 202, i32 137, i32 109, i32 191, i32 39, i32 194, i32 248, i32 205, i32 70, i32 0, i32 43, i32 181, i32 88, i32 78, i32 183, i32 137, i32 9, i32 233, i32 45], [32 x i32] [i32 64, i32 123, i32 119, i32 87, i32 73, i32 158, i32 128, i32 57, i32 35, i32 238, i32 129, i32 11, i32 34, i32 207, i32 219, i32 122, i32 47, i32 20, i32 184, i32 87, i32 143, i32 161, i32 57, i32 30, i32 119, i32 252, i32 11, i32 166, i32 191, i32 138, i32 12, i32 108], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 197, i32 8, i32 164, i32 43, i32 47, i32 189, i32 49, i32 129, i32 42, i32 166, i32 182, i32 228, i32 0, i32 145, i32 218, i32 61, i32 178, i32 176, i32 150, i32 206, i32 138, i32 210, i32 141, i32 112, i32 179, i32 211, i32 52, i32 1, i32 144, i32 141, i32 16, i32 33], [32 x i32] [i32 2, i32 12, i32 194, i32 175, i32 150, i32 54, i32 254, i32 74, i32 226, i32 84, i32 32, i32 106, i32 235, i32 178, i32 159, i32 98, i32 215, i32 206, i32 162, i32 63, i32 32, i32 17, i32 52, i32 55, i32 224, i32 66, i32 237, i32 111, i32 249, i32 26, i32 200, i32 125], [32 x i32] [i32 97, i32 54, i32 214, i32 8, i32 144, i32 191, i32 167, i32 122, i32 151, i32 108, i32 15, i32 132, i32 213, i32 51, i32 45, i32 55, i32 201, i32 106, i32 128, i32 144, i32 61, i32 10, i32 162, i32 170, i32 225, i32 184, i32 132, i32 186, i32 97, i32 54, i32 221, i32 105], [32 x i32] [i32 150, i32 243, i32 58, i32 9, i32 86, i32 176, i32 111, i32 124, i32 81, i32 30, i32 27, i32 57, i32 72, i32 234, i32 201, i32 12, i32 37, i32 162, i32 122, i32 202, i32 231, i32 146, i32 252, i32 89, i32 48, i32 163, i32 137, i32 133, i32 223, i32 111, i32 67, i32 56], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 5, i32 144, i32 80, i32 175, i32 99, i32 95, i32 157, i32 158, i32 225, i32 157, i32 56, i32 151, i32 31, i32 108, i32 172, i32 48, i32 70, i32 178, i32 106, i32 25, i32 209, i32 75, i32 219, i32 187, i32 140, i32 218, i32 46, i32 171, i32 200, i32 90, i32 119, i32 108], [32 x i32] [i32 118, i32 10, i32 218, i32 141, i32 44, i32 7, i32 63, i32 137, i32 125, i32 4, i32 173, i32 67, i32 80, i32 110, i32 210, i32 71, i32 203, i32 138, i32 230, i32 133, i32 26, i32 36, i32 243, i32 210, i32 96, i32 253, i32 223, i32 115, i32 164, i32 13, i32 115, i32 14], [32 x i32] [i32 93, i32 4, i32 179, i32 64, i32 40, i32 149, i32 45, i32 48, i32 131, i32 236, i32 94, i32 228, i32 255, i32 117, i32 254, i32 121, i32 38, i32 157, i32 29, i32 54, i32 205, i32 10, i32 21, i32 210, i32 36, i32 20, i32 119, i32 113, i32 215, i32 138, i32 27, i32 4], [32 x i32] [i32 13, i32 130, i32 185, i32 254, i32 33, i32 205, i32 196, i32 245, i32 152, i32 12, i32 78, i32 114, i32 238, i32 135, i32 73, i32 248, i32 161, i32 149, i32 223, i32 143, i32 45, i32 189, i32 33, i32 6, i32 124, i32 21, i32 232, i32 18, i32 109, i32 147, i32 214, i32 56], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 96, i32 213, i32 34, i32 131, i32 8, i32 47, i32 255, i32 153, i32 62, i32 105, i32 109, i32 136, i32 218, i32 231, i32 91, i32 82, i32 38, i32 49, i32 42, i32 229, i32 137, i32 222, i32 104, i32 144, i32 182, i32 34, i32 90, i32 189, i32 211, i32 133, i32 83, i32 49], [32 x i32] [i32 130, i32 231, i32 246, i32 186, i32 83, i32 132, i32 10, i32 163, i32 52, i32 255, i32 60, i32 163, i32 106, i32 161, i32 55, i32 234, i32 221, i32 182, i32 149, i32 179, i32 120, i32 25, i32 118, i32 30, i32 85, i32 47, i32 119, i32 46, i32 127, i32 193, i32 234, i32 94], [32 x i32] [i32 186, i32 56, i32 2, i32 247, i32 129, i32 67, i32 131, i32 163, i32 32, i32 79, i32 1, i32 59, i32 138, i32 4, i32 56, i32 49, i32 198, i32 15, i32 200, i32 223, i32 215, i32 250, i32 47, i32 136, i32 63, i32 252, i32 12, i32 118, i32 196, i32 166, i32 69, i32 114], [32 x i32] [i32 26, i32 185, i32 201, i32 16, i32 251, i32 30, i32 78, i32 244, i32 132, i32 75, i32 138, i32 94, i32 123, i32 75, i32 232, i32 67, i32 140, i32 143, i32 0, i32 181, i32 84, i32 19, i32 197, i32 92, i32 182, i32 53, i32 78, i32 157, i32 228, i32 91, i32 65, i32 109], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 203, i32 119, i32 154, i32 32, i32 222, i32 184, i32 35, i32 217, i32 160, i32 15, i32 140, i32 123, i32 165, i32 203, i32 174, i32 182, i32 236, i32 66, i32 103, i32 14, i32 88, i32 164, i32 117, i32 152, i32 33, i32 113, i32 132, i32 179, i32 224, i32 118, i32 148, i32 115], [32 x i32] [i32 217, i32 129, i32 218, i32 178, i32 79, i32 130, i32 157, i32 67, i32 129, i32 9, i32 241, i32 210, i32 1, i32 239, i32 172, i32 244, i32 45, i32 125, i32 1, i32 9, i32 241, i32 255, i32 165, i32 159, i32 229, i32 202, i32 39, i32 99, i32 219, i32 32, i32 177, i32 83], [32 x i32] [i32 50, i32 251, i32 134, i32 236, i32 51, i32 107, i32 46, i32 81, i32 43, i32 200, i32 250, i32 108, i32 112, i32 71, i32 126, i32 206, i32 5, i32 12, i32 113, i32 243, i32 180, i32 86, i32 166, i32 220, i32 204, i32 120, i32 7, i32 117, i32 208, i32 221, i32 178, i32 106], [32 x i32] [i32 69, i32 98, i32 29, i32 46, i32 255, i32 42, i32 28, i32 33, i32 164, i32 37, i32 123, i32 13, i32 140, i32 21, i32 57, i32 252, i32 143, i32 124, i32 165, i32 125, i32 30, i32 37, i32 163, i32 69, i32 214, i32 171, i32 189, i32 203, i32 197, i32 94, i32 120, i32 119], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 210, i32 12, i32 136, i32 197, i32 72, i32 77, i32 234, i32 13, i32 74, i32 201, i32 82, i32 106, i32 97, i32 121, i32 233, i32 118, i32 243, i32 133, i32 82, i32 92, i32 27, i32 44, i32 225, i32 214, i32 196, i32 15, i32 24, i32 14, i32 78, i32 246, i32 28, i32 127], [32 x i32] [i32 232, i32 104, i32 202, i32 68, i32 200, i32 56, i32 56, i32 204, i32 83, i32 10, i32 50, i32 53, i32 204, i32 82, i32 203, i32 14, i32 247, i32 197, i32 231, i32 236, i32 61, i32 133, i32 204, i32 88, i32 226, i32 23, i32 71, i32 255, i32 159, i32 165, i32 48, i32 23], [32 x i32] [i32 76, i32 230, i32 176, i32 193, i32 165, i32 42, i32 130, i32 9, i32 8, i32 173, i32 121, i32 156, i32 86, i32 246, i32 249, i32 193, i32 215, i32 124, i32 57, i32 127, i32 147, i32 202, i32 17, i32 85, i32 191, i32 7, i32 27, i32 130, i32 41, i32 105, i32 149, i32 92], [32 x i32] [i32 115, i32 76, i32 182, i32 197, i32 196, i32 233, i32 108, i32 133, i32 72, i32 74, i32 90, i32 172, i32 217, i32 31, i32 67, i32 248, i32 98, i32 91, i32 238, i32 152, i32 42, i32 51, i32 142, i32 121, i32 206, i32 97, i32 6, i32 53, i32 216, i32 215, i32 202, i32 113], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 123, i32 110, i32 42, i32 210, i32 135, i32 72, i32 255, i32 161, i32 202, i32 233, i32 21, i32 133, i32 220, i32 219, i32 44, i32 57, i32 18, i32 145, i32 169, i32 32, i32 170, i32 79, i32 41, i32 244, i32 21, i32 122, i32 210, i32 245, i32 50, i32 204, i32 96, i32 4], [32 x i32] [i32 90, i32 99, i32 103, i32 225, i32 155, i32 71, i32 120, i32 159, i32 56, i32 121, i32 172, i32 151, i32 102, i32 29, i32 94, i32 81, i32 238, i32 36, i32 66, i32 232, i32 88, i32 75, i32 138, i32 3, i32 117, i32 134, i32 55, i32 134, i32 226, i32 151, i32 78, i32 61], [32 x i32] [i32 187, i32 64, i32 94, i32 188, i32 22, i32 146, i32 5, i32 196, i32 192, i32 78, i32 114, i32 144, i32 14, i32 171, i32 207, i32 138, i32 237, i32 239, i32 185, i32 45, i32 59, i32 248, i32 67, i32 91, i32 186, i32 45, i32 235, i32 47, i32 82, i32 210, i32 209, i32 90], [32 x i32] [i32 84, i32 220, i32 22, i32 13, i32 24, i32 190, i32 53, i32 100, i32 97, i32 82, i32 2, i32 128, i32 175, i32 5, i32 247, i32 166, i32 66, i32 211, i32 143, i32 46, i32 121, i32 38, i32 168, i32 187, i32 178, i32 23, i32 72, i32 178, i32 122, i32 10, i32 137, i32 20], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 51, i32 124, i32 231, i32 38, i32 186, i32 77, i32 50, i32 254, i32 83, i32 244, i32 250, i32 131, i32 227, i32 165, i32 121, i32 102, i32 115, i32 239, i32 128, i32 35, i32 104, i32 194, i32 96, i32 221, i32 169, i32 51, i32 220, i32 3, i32 122, i32 224, i32 224, i32 62], [32 x i32] [i32 185, i32 232, i32 197, i32 18, i32 151, i32 31, i32 131, i32 254, i32 62, i32 148, i32 153, i32 212, i32 45, i32 249, i32 82, i32 89, i32 92, i32 130, i32 166, i32 240, i32 117, i32 126, i32 232, i32 236, i32 204, i32 172, i32 24, i32 33, i32 9, i32 103, i32 102, i32 103], [32 x i32] [i32 110, i32 68, i32 163, i32 249, i32 100, i32 175, i32 231, i32 109, i32 125, i32 223, i32 30, i32 172, i32 4, i32 234, i32 59, i32 95, i32 155, i32 232, i32 36, i32 157, i32 14, i32 229, i32 46, i32 62, i32 223, i32 169, i32 247, i32 212, i32 80, i32 113, i32 240, i32 120], [32 x i32] [i32 195, i32 241, i32 167, i32 109, i32 179, i32 95, i32 146, i32 111, i32 204, i32 145, i32 184, i32 149, i32 5, i32 223, i32 60, i32 100, i32 87, i32 57, i32 97, i32 81, i32 173, i32 140, i32 56, i32 123, i32 200, i32 222, i32 0, i32 52, i32 190, i32 161, i32 176, i32 126], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 78, i32 238, i32 28, i32 145, i32 230, i32 17, i32 189, i32 142, i32 85, i32 26, i32 24, i32 117, i32 102, i32 175, i32 77, i32 123, i32 15, i32 174, i32 109, i32 133, i32 202, i32 130, i32 88, i32 33, i32 156, i32 24, i32 224, i32 237, i32 236, i32 34, i32 128, i32 47], [32 x i32] [i32 36, i32 246, i32 90, i32 68, i32 241, i32 85, i32 44, i32 219, i32 234, i32 124, i32 132, i32 124, i32 1, i32 172, i32 227, i32 253, i32 201, i32 39, i32 193, i32 90, i32 185, i32 222, i32 79, i32 90, i32 144, i32 221, i32 198, i32 103, i32 170, i32 111, i32 138, i32 58], [32 x i32] [i32 161, i32 12, i32 243, i32 8, i32 67, i32 217, i32 36, i32 30, i32 131, i32 167, i32 223, i32 145, i32 202, i32 189, i32 105, i32 71, i32 141, i32 27, i32 226, i32 185, i32 78, i32 181, i32 225, i32 118, i32 179, i32 28, i32 147, i32 3, i32 206, i32 95, i32 179, i32 90], [32 x i32] [i32 206, i32 114, i32 14, i32 41, i32 132, i32 178, i32 125, i32 210, i32 69, i32 190, i32 87, i32 6, i32 237, i32 127, i32 207, i32 237, i32 205, i32 239, i32 25, i32 214, i32 188, i32 21, i32 121, i32 100, i32 210, i32 24, i32 227, i32 32, i32 103, i32 58, i32 84, i32 11], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 150, i32 17, i32 65, i32 138, i32 71, i32 145, i32 254, i32 182, i32 218, i32 122, i32 84, i32 99, i32 209, i32 20, i32 53, i32 5, i32 134, i32 140, i32 169, i32 54, i32 63, i32 242, i32 133, i32 84, i32 78, i32 146, i32 216, i32 133, i32 1, i32 70, i32 214, i32 80], [32 x i32] [i32 112, i32 131, i32 71, i32 192, i32 219, i32 85, i32 8, i32 168, i32 123, i32 24, i32 109, i32 245, i32 4, i32 90, i32 32, i32 12, i32 74, i32 140, i32 96, i32 174, i32 174, i32 15, i32 100, i32 85, i32 85, i32 46, i32 213, i32 29, i32 83, i32 49, i32 66, i32 65], [32 x i32] [i32 147, i32 28, i32 6, i32 45, i32 102, i32 101, i32 2, i32 164, i32 151, i32 24, i32 253, i32 0, i32 231, i32 171, i32 3, i32 236, i32 206, i32 193, i32 191, i32 55, i32 248, i32 19, i32 83, i32 165, i32 229, i32 12, i32 58, i32 168, i32 85, i32 185, i32 255, i32 104], [32 x i32] [i32 226, i32 60, i32 118, i32 134, i32 56, i32 242, i32 123, i32 44, i32 22, i32 120, i32 141, i32 245, i32 164, i32 21, i32 218, i32 219, i32 38, i32 133, i32 160, i32 86, i32 221, i32 29, i32 227, i32 179, i32 253, i32 64, i32 239, i32 242, i32 217, i32 161, i32 179, i32 4], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 169, i32 234, i32 109, i32 22, i32 22, i32 96, i32 244, i32 96, i32 135, i32 25, i32 68, i32 140, i32 74, i32 139, i32 62, i32 251, i32 22, i32 0, i32 0, i32 84, i32 166, i32 158, i32 159, i32 239, i32 207, i32 217, i32 210, i32 76, i32 116, i32 49, i32 208, i32 52], [32 x i32] [i32 229, i32 103, i32 12, i32 241, i32 58, i32 154, i32 234, i32 9, i32 57, i32 239, i32 209, i32 48, i32 188, i32 51, i32 186, i32 177, i32 106, i32 197, i32 39, i32 8, i32 127, i32 84, i32 128, i32 61, i32 171, i32 246, i32 21, i32 122, i32 194, i32 64, i32 115, i32 114], [32 x i32] [i32 176, i32 139, i32 170, i32 30, i32 236, i32 199, i32 165, i32 143, i32 31, i32 146, i32 4, i32 198, i32 5, i32 246, i32 223, i32 161, i32 204, i32 31, i32 129, i32 245, i32 14, i32 156, i32 87, i32 220, i32 227, i32 187, i32 6, i32 135, i32 30, i32 254, i32 35, i32 108], [32 x i32] [i32 204, i32 25, i32 218, i32 155, i32 59, i32 67, i32 72, i32 33, i32 46, i32 35, i32 77, i32 61, i32 174, i32 248, i32 140, i32 252, i32 221, i32 166, i32 116, i32 55, i32 101, i32 202, i32 238, i32 26, i32 25, i32 142, i32 159, i32 100, i32 111, i32 12, i32 139, i32 90], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 248, i32 171, i32 147, i32 188, i32 68, i32 186, i32 27, i32 117, i32 75, i32 73, i32 111, i32 208, i32 84, i32 46, i32 99, i32 186, i32 181, i32 234, i32 237, i32 50, i32 20, i32 201, i32 148, i32 216, i32 197, i32 206, i32 244, i32 16, i32 104, i32 224, i32 56, i32 39], [32 x i32] [i32 245, i32 118, i32 253, i32 228, i32 175, i32 185, i32 3, i32 89, i32 206, i32 99, i32 210, i32 59, i32 31, i32 205, i32 33, i32 12, i32 173, i32 68, i32 165, i32 151, i32 172, i32 128, i32 17, i32 2, i32 155, i32 12, i32 229, i32 139, i32 205, i32 251, i32 121, i32 119], [32 x i32] [i32 108, i32 186, i32 20, i32 197, i32 234, i32 18, i32 158, i32 46, i32 130, i32 99, i32 206, i32 155, i32 74, i32 231, i32 29, i32 236, i32 241, i32 46, i32 81, i32 28, i32 244, i32 208, i32 105, i32 21, i32 66, i32 157, i32 163, i32 63, i32 14, i32 191, i32 233, i32 92], [32 x i32] [i32 17, i32 164, i32 136, i32 159, i32 62, i32 83, i32 105, i32 59, i32 27, i32 224, i32 247, i32 186, i32 155, i32 173, i32 78, i32 129, i32 95, i32 181, i32 92, i32 174, i32 190, i32 103, i32 134, i32 55, i32 52, i32 142, i32 7, i32 50, i32 69, i32 74, i32 103, i32 57], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 129, i32 252, i32 85, i32 92, i32 191, i32 167, i32 196, i32 189, i32 226, i32 240, i32 75, i32 143, i32 233, i32 125, i32 153, i32 250, i32 211, i32 171, i32 188, i32 199, i32 131, i32 43, i32 4, i32 127, i32 12, i32 25, i32 67, i32 3, i32 61, i32 7, i32 202, i32 64], [32 x i32] [i32 7, i32 181, i32 46, i32 44, i32 103, i32 21, i32 155, i32 251, i32 131, i32 105, i32 30, i32 15, i32 218, i32 214, i32 41, i32 177, i32 96, i32 224, i32 178, i32 186, i32 105, i32 162, i32 158, i32 189, i32 189, i32 224, i32 28, i32 189, i32 205, i32 6, i32 100, i32 112], [32 x i32] [i32 23, i32 98, i32 107, i32 20, i32 161, i32 124, i32 208, i32 121, i32 110, i32 216, i32 138, i32 165, i32 109, i32 140, i32 147, i32 210, i32 63, i32 236, i32 68, i32 141, i32 110, i32 145, i32 1, i32 140, i32 143, i32 238, i32 1, i32 143, i32 192, i32 180, i32 133, i32 14], [32 x i32] [i32 127, i32 0, i32 156, i32 38, i32 13, i32 111, i32 72, i32 127, i32 58, i32 1, i32 237, i32 197, i32 150, i32 176, i32 31, i32 79, i32 168, i32 2, i32 98, i32 39, i32 138, i32 80, i32 141, i32 154, i32 139, i32 82, i32 15, i32 30, i32 207, i32 65, i32 56, i32 25], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 52, i32 31, i32 46, i32 172, i32 209, i32 199, i32 4, i32 82, i32 50, i32 102, i32 178, i32 51, i32 115, i32 33, i32 52, i32 84, i32 247, i32 113, i32 237, i32 6, i32 176, i32 255, i32 166, i32 89, i32 111, i32 138, i32 78, i32 251, i32 2, i32 176, i32 69, i32 107], [32 x i32] [i32 170, i32 53, i32 135, i32 68, i32 99, i32 102, i32 151, i32 248, i32 110, i32 85, i32 12, i32 4, i32 62, i32 53, i32 80, i32 191, i32 147, i32 105, i32 210, i32 139, i32 5, i32 85, i32 153, i32 190, i32 226, i32 83, i32 97, i32 236, i32 232, i32 8, i32 11, i32 50], [32 x i32] [i32 221, i32 181, i32 125, i32 171, i32 90, i32 33, i32 65, i32 83, i32 187, i32 23, i32 121, i32 13, i32 209, i32 168, i32 12, i32 12, i32 32, i32 136, i32 9, i32 233, i32 132, i32 232, i32 37, i32 17, i32 103, i32 122, i32 139, i32 26, i32 228, i32 93, i32 225, i32 93], [32 x i32] [i32 224, i32 181, i32 0, i32 29, i32 42, i32 111, i32 175, i32 121, i32 134, i32 47, i32 166, i32 90, i32 147, i32 209, i32 254, i32 174, i32 58, i32 238, i32 219, i32 124, i32 97, i32 190, i32 124, i32 1, i32 249, i32 254, i32 82, i32 220, i32 216, i32 82, i32 163, i32 66], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 137, i32 249, i32 128, i32 7, i32 207, i32 63, i32 179, i32 233, i32 231, i32 69, i32 68, i32 61, i32 42, i32 124, i32 233, i32 228, i32 22, i32 92, i32 94, i32 101, i32 28, i32 199, i32 125, i32 198, i32 122, i32 251, i32 67, i32 238, i32 37, i32 118, i32 70, i32 114], [32 x i32] [i32 19, i32 83, i32 228, i32 130, i32 87, i32 250, i32 30, i32 143, i32 6, i32 43, i32 144, i32 186, i32 8, i32 182, i32 16, i32 84, i32 79, i32 124, i32 27, i32 38, i32 237, i32 218, i32 107, i32 221, i32 37, i32 208, i32 78, i32 234, i32 66, i32 187, i32 37, i32 3], [32 x i32] [i32 13, i32 172, i32 102, i32 109, i32 195, i32 139, i32 186, i32 22, i32 181, i32 226, i32 160, i32 13, i32 12, i32 189, i32 164, i32 142, i32 24, i32 108, i32 242, i32 220, i32 249, i32 220, i32 74, i32 134, i32 37, i32 149, i32 20, i32 203, i32 216, i32 26, i32 4, i32 15], [32 x i32] [i32 238, i32 201, i32 41, i32 15, i32 223, i32 17, i32 133, i32 237, i32 206, i32 13, i32 98, i32 44, i32 143, i32 75, i32 249, i32 4, i32 233, i32 6, i32 114, i32 29, i32 55, i32 32, i32 80, i32 201, i32 20, i32 235, i32 236, i32 57, i32 167, i32 151, i32 43, i32 77], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 23, i32 164, i32 25, i32 82, i32 17, i32 71, i32 179, i32 92, i32 91, i32 169, i32 46, i32 34, i32 180, i32 0, i32 82, i32 249, i32 87, i32 24, i32 184, i32 190, i32 90, i32 227, i32 171, i32 131, i32 200, i32 135, i32 10, i32 42, i32 216, i32 140, i32 187, i32 84], [32 x i32] [i32 197, i32 150, i32 202, i32 200, i32 34, i32 26, i32 238, i32 95, i32 231, i32 49, i32 96, i32 34, i32 131, i32 8, i32 99, i32 206, i32 185, i32 50, i32 68, i32 88, i32 93, i32 58, i32 155, i32 228, i32 4, i32 213, i32 239, i32 56, i32 239, i32 75, i32 221, i32 25], [32 x i32] [i32 32, i32 214, i32 216, i32 145, i32 84, i32 167, i32 243, i32 32, i32 75, i32 52, i32 6, i32 250, i32 48, i32 200, i32 111, i32 20, i32 16, i32 101, i32 116, i32 19, i32 78, i32 240, i32 105, i32 38, i32 206, i32 207, i32 144, i32 244, i32 208, i32 197, i32 200, i32 100], [32 x i32] [i32 37, i32 207, i32 116, i32 85, i32 27, i32 170, i32 169, i32 56, i32 65, i32 64, i32 213, i32 149, i32 149, i32 171, i32 28, i32 94, i32 188, i32 65, i32 126, i32 20, i32 48, i32 190, i32 19, i32 137, i32 244, i32 229, i32 235, i32 40, i32 192, i32 194, i32 150, i32 58], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 132, i32 173, i32 12, i32 24, i32 56, i32 90, i32 186, i32 208, i32 152, i32 89, i32 191, i32 55, i32 176, i32 79, i32 151, i32 96, i32 32, i32 179, i32 155, i32 151, i32 246, i32 8, i32 108, i32 164, i32 255, i32 251, i32 183, i32 250, i32 149, i32 178, i32 81, i32 121], [32 x i32] [i32 213, i32 197, i32 195, i32 154, i32 10, i32 208, i32 49, i32 62, i32 7, i32 54, i32 142, i32 192, i32 138, i32 98, i32 177, i32 202, i32 214, i32 14, i32 30, i32 157, i32 239, i32 171, i32 152, i32 77, i32 187, i32 108, i32 5, i32 224, i32 228, i32 93, i32 189, i32 87], [32 x i32] [i32 169, i32 133, i32 244, i32 231, i32 176, i32 21, i32 51, i32 132, i32 27, i32 20, i32 26, i32 2, i32 217, i32 59, i32 173, i32 15, i32 67, i32 108, i32 234, i32 62, i32 15, i32 126, i32 218, i32 221, i32 107, i32 76, i32 127, i32 110, i32 212, i32 107, i32 191, i32 15], [32 x i32] [i32 45, i32 45, i32 240, i32 27, i32 126, i32 42, i32 108, i32 248, i32 169, i32 106, i32 225, i32 240, i32 153, i32 161, i32 103, i32 154, i32 212, i32 19, i32 202, i32 202, i32 186, i32 39, i32 146, i32 170, i32 161, i32 93, i32 80, i32 222, i32 204, i32 64, i32 38, i32 10], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 25, i32 94, i32 96, i32 105, i32 88, i32 134, i32 160, i32 49, i32 189, i32 50, i32 233, i32 44, i32 92, i32 210, i32 133, i32 186, i32 64, i32 100, i32 168, i32 116, i32 248, i32 14, i32 28, i32 179, i32 169, i32 105, i32 232, i32 30, i32 64, i32 100, i32 153, i32 119], [32 x i32] [i32 198, i32 54, i32 110, i32 108, i32 140, i32 36, i32 9, i32 96, i32 190, i32 38, i32 210, i32 76, i32 94, i32 23, i32 202, i32 95, i32 29, i32 204, i32 135, i32 232, i32 66, i32 106, i32 203, i32 203, i32 125, i32 146, i32 5, i32 53, i32 129, i32 19, i32 96, i32 107], [32 x i32] [i32 202, i32 89, i32 116, i32 26, i32 17, i32 239, i32 109, i32 247, i32 57, i32 92, i32 59, i32 31, i32 250, i32 227, i32 64, i32 65, i32 35, i32 158, i32 246, i32 209, i32 33, i32 162, i32 191, i32 173, i32 101, i32 66, i32 107, i32 89, i32 138, i32 232, i32 197, i32 127], [32 x i32] [i32 123, i32 47, i32 58, i32 206, i32 200, i32 161, i32 121, i32 60, i32 48, i32 18, i32 68, i32 40, i32 246, i32 188, i32 255, i32 253, i32 244, i32 192, i32 151, i32 176, i32 204, i32 195, i32 19, i32 122, i32 185, i32 154, i32 22, i32 228, i32 203, i32 76, i32 52, i32 99], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 36, i32 137, i32 122, i32 143, i32 181, i32 155, i32 240, i32 194, i32 3, i32 100, i32 208, i32 30, i32 245, i32 164, i32 178, i32 243, i32 116, i32 233, i32 26, i32 22, i32 253, i32 203, i32 21, i32 234, i32 235, i32 16, i32 108, i32 53, i32 209, i32 193, i32 166, i32 40], [32 x i32] [i32 187, i32 168, i32 225, i32 137, i32 112, i32 87, i32 24, i32 84, i32 60, i32 246, i32 13, i32 130, i32 18, i32 5, i32 135, i32 150, i32 6, i32 57, i32 227, i32 248, i32 179, i32 149, i32 229, i32 215, i32 38, i32 191, i32 9, i32 90, i32 148, i32 249, i32 28, i32 99], [32 x i32] [i32 25, i32 166, i32 90, i32 101, i32 147, i32 195, i32 181, i32 49, i32 34, i32 79, i32 243, i32 246, i32 15, i32 235, i32 40, i32 195, i32 124, i32 235, i32 206, i32 134, i32 236, i32 103, i32 118, i32 110, i32 53, i32 69, i32 123, i32 216, i32 107, i32 146, i32 1, i32 101], [32 x i32] [i32 197, i32 189, i32 200, i32 20, i32 213, i32 13, i32 235, i32 225, i32 165, i32 230, i32 131, i32 17, i32 9, i32 0, i32 29, i32 85, i32 131, i32 81, i32 126, i32 117, i32 0, i32 129, i32 185, i32 203, i32 216, i32 197, i32 229, i32 161, i32 217, i32 23, i32 109, i32 31], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 58, i32 187, i32 57, i32 237, i32 50, i32 2, i32 231, i32 67, i32 122, i32 56, i32 20, i32 132, i32 227, i32 68, i32 210, i32 94, i32 148, i32 221, i32 120, i32 137, i32 85, i32 76, i32 115, i32 158, i32 225, i32 228, i32 62, i32 67, i32 208, i32 74, i32 222, i32 27], [32 x i32] [i32 36, i32 123, i32 147, i32 52, i32 181, i32 226, i32 116, i32 72, i32 205, i32 160, i32 11, i32 146, i32 151, i32 102, i32 57, i32 244, i32 176, i32 226, i32 93, i32 57, i32 106, i32 91, i32 69, i32 23, i32 120, i32 30, i32 219, i32 145, i32 129, i32 28, i32 249, i32 22], [32 x i32] [i32 70, i32 218, i32 158, i32 81, i32 58, i32 230, i32 209, i32 166, i32 187, i32 77, i32 123, i32 8, i32 190, i32 140, i32 213, i32 243, i32 63, i32 253, i32 247, i32 68, i32 128, i32 45, i32 83, i32 75, i32 208, i32 135, i32 104, i32 193, i32 181, i32 216, i32 247, i32 7], [32 x i32] [i32 250, i32 68, i32 113, i32 246, i32 65, i32 216, i32 198, i32 88, i32 19, i32 55, i32 235, i32 132, i32 15, i32 150, i32 199, i32 220, i32 200, i32 169, i32 122, i32 131, i32 178, i32 47, i32 49, i32 177, i32 26, i32 216, i32 152, i32 63, i32 17, i32 208, i32 49, i32 59], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 26, i32 207, i32 66, i32 174, i32 204, i32 181, i32 119, i32 57, i32 196, i32 91, i32 91, i32 208, i32 38, i32 89, i32 39, i32 208, i32 85, i32 113, i32 18, i32 157, i32 136, i32 61, i32 156, i32 234, i32 65, i32 106, i32 240, i32 80, i32 147, i32 147, i32 221, i32 71], [32 x i32] [i32 220, i32 57, i32 50, i32 243, i32 161, i32 68, i32 233, i32 197, i32 195, i32 120, i32 251, i32 149, i32 71, i32 52, i32 53, i32 52, i32 232, i32 37, i32 222, i32 147, i32 198, i32 180, i32 118, i32 109, i32 134, i32 19, i32 198, i32 233, i32 104, i32 181, i32 1, i32 99], [32 x i32] [i32 19, i32 168, i32 130, i32 62, i32 233, i32 19, i32 173, i32 235, i32 1, i32 202, i32 207, i32 218, i32 205, i32 247, i32 108, i32 199, i32 122, i32 220, i32 30, i32 110, i32 200, i32 78, i32 85, i32 98, i32 128, i32 234, i32 120, i32 12, i32 134, i32 185, i32 64, i32 81], [32 x i32] [i32 195, i32 186, i32 18, i32 83, i32 42, i32 170, i32 119, i32 173, i32 25, i32 120, i32 85, i32 138, i32 46, i32 96, i32 135, i32 194, i32 110, i32 145, i32 56, i32 145, i32 63, i32 122, i32 197, i32 36, i32 143, i32 81, i32 197, i32 222, i32 176, i32 83, i32 48, i32 86], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 30, i32 100, i32 193, i32 125, i32 82, i32 220, i32 19, i32 90, i32 161, i32 156, i32 78, i32 238, i32 153, i32 40, i32 187, i32 76, i32 238, i32 172, i32 169, i32 27, i32 137, i32 162, i32 56, i32 57, i32 123, i32 196, i32 15, i32 66, i32 230, i32 137, i32 237, i32 15], [32 x i32] [i32 98, i32 238, i32 117, i32 72, i32 146, i32 51, i32 242, i32 244, i32 173, i32 21, i32 122, i32 161, i32 1, i32 70, i32 169, i32 50, i32 6, i32 136, i32 182, i32 54, i32 71, i32 53, i32 185, i32 180, i32 66, i32 133, i32 118, i32 240, i32 72, i32 0, i32 144, i32 56], [32 x i32] [i32 231, i32 41, i32 249, i32 55, i32 217, i32 70, i32 90, i32 205, i32 112, i32 254, i32 77, i32 91, i32 191, i32 165, i32 207, i32 145, i32 244, i32 239, i32 238, i32 138, i32 41, i32 208, i32 231, i32 196, i32 37, i32 146, i32 138, i32 255, i32 54, i32 252, i32 228, i32 73], [32 x i32] [i32 143, i32 161, i32 206, i32 203, i32 96, i32 218, i32 18, i32 2, i32 30, i32 41, i32 57, i32 42, i32 3, i32 183, i32 235, i32 119, i32 64, i32 234, i32 201, i32 43, i32 44, i32 213, i32 125, i32 126, i32 44, i32 199, i32 90, i32 253, i32 255, i32 196, i32 209, i32 98], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 47, i32 97, i32 159, i32 215, i32 168, i32 63, i32 131, i32 140, i32 16, i32 105, i32 144, i32 230, i32 207, i32 210, i32 99, i32 163, i32 228, i32 84, i32 126, i32 229, i32 105, i32 19, i32 28, i32 144, i32 87, i32 170, i32 233, i32 83, i32 34, i32 67, i32 41, i32 35], [32 x i32] [i32 142, i32 78, i32 159, i32 37, i32 248, i32 129, i32 84, i32 45, i32 14, i32 213, i32 84, i32 129, i32 155, i32 166, i32 146, i32 206, i32 75, i32 233, i32 143, i32 36, i32 59, i32 202, i32 224, i32 68, i32 171, i32 54, i32 254, i32 251, i32 135, i32 212, i32 38, i32 62], [32 x i32] [i32 245, i32 255, i32 204, i32 240, i32 180, i32 18, i32 3, i32 95, i32 201, i32 132, i32 203, i32 29, i32 23, i32 224, i32 188, i32 204, i32 3, i32 98, i32 169, i32 139, i32 148, i32 166, i32 170, i32 24, i32 203, i32 39, i32 141, i32 73, i32 166, i32 23, i32 21, i32 7], [32 x i32] [i32 59, i32 191, i32 85, i32 53, i32 97, i32 139, i32 68, i32 151, i32 232, i32 58, i32 85, i32 193, i32 200, i32 59, i32 253, i32 149, i32 41, i32 17, i32 96, i32 150, i32 30, i32 203, i32 17, i32 157, i32 194, i32 3, i32 138, i32 27, i32 198, i32 214, i32 69, i32 61], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 200, i32 177, i32 27, i32 111, i32 115, i32 97, i32 61, i32 39, i32 13, i32 125, i32 122, i32 37, i32 95, i32 115, i32 14, i32 47, i32 147, i32 246, i32 36, i32 216, i32 79, i32 144, i32 172, i32 162, i32 98, i32 10, i32 240, i32 97, i32 217, i32 8, i32 89, i32 106], [32 x i32] [i32 211, i32 118, i32 105, i32 51, i32 123, i32 185, i32 64, i32 112, i32 238, i32 166, i32 41, i32 107, i32 221, i32 208, i32 93, i32 141, i32 193, i32 62, i32 74, i32 234, i32 55, i32 177, i32 3, i32 2, i32 3, i32 53, i32 241, i32 40, i32 157, i32 255, i32 0, i32 19], [32 x i32] [i32 141, i32 166, i32 213, i32 172, i32 157, i32 204, i32 104, i32 117, i32 127, i32 195, i32 77, i32 75, i32 221, i32 108, i32 187, i32 17, i32 90, i32 96, i32 229, i32 189, i32 125, i32 39, i32 139, i32 218, i32 180, i32 149, i32 246, i32 3, i32 39, i32 164, i32 146, i32 63], [32 x i32] [i32 121, i32 252, i32 166, i32 180, i32 11, i32 53, i32 32, i32 201, i32 77, i32 34, i32 132, i32 196, i32 169, i32 32, i32 236, i32 137, i32 148, i32 186, i32 102, i32 86, i32 72, i32 185, i32 135, i32 127, i32 202, i32 30, i32 6, i32 237, i32 165, i32 85, i32 89, i32 41], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 31, i32 104, i32 118, i32 1, i32 22, i32 56, i32 43, i32 15, i32 119, i32 151, i32 146, i32 103, i32 78, i32 134, i32 106, i32 139, i32 229, i32 232, i32 12, i32 247, i32 54, i32 57, i32 181, i32 51, i32 230, i32 207, i32 94, i32 189, i32 24, i32 251, i32 16, i32 31], [32 x i32] [i32 51, i32 21, i32 215, i32 127, i32 26, i32 213, i32 33, i32 88, i32 196, i32 24, i32 165, i32 240, i32 204, i32 115, i32 168, i32 253, i32 250, i32 24, i32 209, i32 3, i32 145, i32 141, i32 82, i32 210, i32 163, i32 164, i32 211, i32 177, i32 234, i32 29, i32 15, i32 0], [32 x i32] [i32 245, i32 26, i32 97, i32 247, i32 55, i32 157, i32 0, i32 244, i32 242, i32 105, i32 111, i32 75, i32 1, i32 133, i32 25, i32 69, i32 77, i32 127, i32 2, i32 124, i32 106, i32 5, i32 71, i32 108, i32 31, i32 129, i32 32, i32 212, i32 232, i32 80, i32 39, i32 114], [32 x i32] [i32 7, i32 104, i32 33, i32 101, i32 233, i32 8, i32 160, i32 11, i32 106, i32 74, i32 186, i32 181, i32 128, i32 175, i32 208, i32 27, i32 197, i32 245, i32 75, i32 115, i32 80, i32 96, i32 45, i32 113, i32 105, i32 97, i32 14, i32 192, i32 32, i32 64, i32 48, i32 25], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 193, i32 58, i32 134, i32 215, i32 176, i32 6, i32 132, i32 127, i32 27, i32 189, i32 212, i32 7, i32 120, i32 128, i32 46, i32 177, i32 180, i32 238, i32 82, i32 56, i32 238, i32 154, i32 249, i32 246, i32 243, i32 65, i32 110, i32 212, i32 136, i32 149, i32 172, i32 53], [32 x i32] [i32 232, i32 57, i32 48, i32 119, i32 35, i32 177, i32 253, i32 27, i32 61, i32 62, i32 116, i32 77, i32 127, i32 174, i32 91, i32 58, i32 180, i32 101, i32 14, i32 58, i32 67, i32 220, i32 220, i32 65, i32 71, i32 230, i32 232, i32 146, i32 9, i32 34, i32 72, i32 76], [32 x i32] [i32 52, i32 233, i32 89, i32 147, i32 157, i32 38, i32 128, i32 84, i32 242, i32 204, i32 60, i32 194, i32 37, i32 133, i32 227, i32 106, i32 193, i32 98, i32 4, i32 167, i32 8, i32 50, i32 109, i32 161, i32 57, i32 132, i32 138, i32 59, i32 135, i32 95, i32 17, i32 19], [32 x i32] [i32 197, i32 55, i32 105, i32 91, i32 168, i32 198, i32 157, i32 164, i32 252, i32 97, i32 110, i32 104, i32 70, i32 234, i32 215, i32 28, i32 103, i32 210, i32 125, i32 250, i32 241, i32 204, i32 84, i32 141, i32 54, i32 53, i32 201, i32 0, i32 223, i32 108, i32 103, i32 80], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 147, i32 51, i32 7, i32 200, i32 74, i32 202, i32 208, i32 177, i32 171, i32 189, i32 221, i32 167, i32 124, i32 172, i32 62, i32 69, i32 203, i32 204, i32 7, i32 145, i32 191, i32 53, i32 157, i32 203, i32 125, i32 18, i32 60, i32 17, i32 89, i32 19, i32 207, i32 92], [32 x i32] [i32 220, i32 142, i32 235, i32 198, i32 191, i32 221, i32 17, i32 123, i32 231, i32 71, i32 230, i32 206, i32 231, i32 182, i32 197, i32 232, i32 138, i32 220, i32 75, i32 87, i32 21, i32 59, i32 102, i32 202, i32 137, i32 163, i32 253, i32 172, i32 13, i32 225, i32 29, i32 122], [32 x i32] [i32 139, i32 164, i32 214, i32 80, i32 180, i32 170, i32 93, i32 100, i32 100, i32 118, i32 46, i32 161, i32 166, i32 179, i32 184, i32 124, i32 122, i32 86, i32 245, i32 92, i32 78, i32 132, i32 92, i32 251, i32 221, i32 202, i32 72, i32 139, i32 72, i32 185, i32 186, i32 52], [32 x i32] [i32 149, i32 176, i32 189, i32 140, i32 188, i32 167, i32 79, i32 126, i32 253, i32 78, i32 58, i32 191, i32 95, i32 4, i32 121, i32 128, i32 43, i32 90, i32 159, i32 79, i32 104, i32 33, i32 25, i32 113, i32 198, i32 32, i32 1, i32 66, i32 170, i32 223, i32 174, i32 44], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 137, i32 102, i32 62, i32 29, i32 76, i32 95, i32 254, i32 192, i32 4, i32 67, i32 214, i32 68, i32 25, i32 181, i32 173, i32 199, i32 34, i32 220, i32 113, i32 40, i32 100, i32 222, i32 65, i32 56, i32 39, i32 143, i32 44, i32 107, i32 8, i32 184, i32 184, i32 123], [32 x i32] [i32 218, i32 44, i32 164, i32 209, i32 161, i32 195, i32 92, i32 110, i32 50, i32 7, i32 31, i32 184, i32 14, i32 25, i32 158, i32 153, i32 41, i32 51, i32 154, i32 174, i32 122, i32 237, i32 104, i32 66, i32 105, i32 124, i32 7, i32 179, i32 56, i32 44, i32 246, i32 61], [32 x i32] [i32 66, i32 163, i32 241, i32 197, i32 180, i32 15, i32 216, i32 200, i32 141, i32 21, i32 49, i32 189, i32 248, i32 7, i32 139, i32 205, i32 8, i32 138, i32 251, i32 24, i32 7, i32 254, i32 142, i32 82, i32 134, i32 239, i32 190, i32 236, i32 73, i32 82, i32 153, i32 8], [32 x i32] [i32 222, i32 33, i32 240, i32 218, i32 138, i32 251, i32 177, i32 184, i32 205, i32 200, i32 106, i32 130, i32 25, i32 115, i32 219, i32 199, i32 207, i32 136, i32 235, i32 150, i32 238, i32 111, i32 251, i32 6, i32 210, i32 205, i32 125, i32 123, i32 18, i32 40, i32 142, i32 12], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 61, i32 22, i32 53, i32 243, i32 70, i32 188, i32 179, i32 244, i32 198, i32 182, i32 79, i32 250, i32 244, i32 160, i32 19, i32 230, i32 87, i32 69, i32 147, i32 185, i32 188, i32 214, i32 89, i32 231, i32 119, i32 148, i32 108, i32 171, i32 150, i32 59, i32 79, i32 9], [32 x i32] [i32 38, i32 217, i32 31, i32 92, i32 88, i32 172, i32 139, i32 3, i32 210, i32 195, i32 133, i32 15, i32 58, i32 195, i32 127, i32 109, i32 142, i32 134, i32 205, i32 82, i32 116, i32 143, i32 85, i32 119, i32 23, i32 183, i32 142, i32 183, i32 136, i32 234, i32 218, i32 27], [32 x i32] [i32 207, i32 232, i32 14, i32 107, i32 150, i32 125, i32 237, i32 39, i32 209, i32 60, i32 169, i32 217, i32 80, i32 169, i32 152, i32 132, i32 94, i32 134, i32 239, i32 214, i32 240, i32 248, i32 14, i32 137, i32 5, i32 47, i32 217, i32 95, i32 21, i32 95, i32 115, i32 121], [32 x i32] [i32 101, i32 56, i32 160, i32 21, i32 250, i32 167, i32 180, i32 143, i32 235, i32 196, i32 134, i32 155, i32 48, i32 165, i32 94, i32 77, i32 234, i32 138, i32 154, i32 159, i32 26, i32 216, i32 91, i32 83, i32 20, i32 25, i32 37, i32 99, i32 180, i32 111, i32 31, i32 93], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 168, i32 80, i32 225, i32 97, i32 107, i32 87, i32 53, i32 235, i32 68, i32 11, i32 12, i32 110, i32 249, i32 37, i32 128, i32 116, i32 242, i32 143, i32 111, i32 122, i32 62, i32 127, i32 45, i32 243, i32 78, i32 9, i32 101, i32 16, i32 94, i32 3, i32 37, i32 50], [32 x i32] [i32 150, i32 25, i32 18, i32 107, i32 106, i32 183, i32 227, i32 220, i32 69, i32 155, i32 219, i32 180, i32 168, i32 174, i32 220, i32 168, i32 20, i32 68, i32 101, i32 98, i32 206, i32 52, i32 154, i32 132, i32 24, i32 18, i32 1, i32 241, i32 226, i32 123, i32 206, i32 80], [32 x i32] [i32 151, i32 103, i32 158, i32 235, i32 106, i32 249, i32 110, i32 214, i32 115, i32 232, i32 107, i32 41, i32 236, i32 99, i32 130, i32 0, i32 168, i32 153, i32 28, i32 29, i32 48, i32 200, i32 144, i32 82, i32 144, i32 182, i32 106, i32 128, i32 78, i32 255, i32 75, i32 81], [32 x i32] [i32 199, i32 140, i32 191, i32 100, i32 40, i32 173, i32 248, i32 165, i32 90, i32 111, i32 201, i32 186, i32 213, i32 127, i32 213, i32 214, i32 189, i32 102, i32 47, i32 61, i32 170, i32 84, i32 246, i32 186, i32 50, i32 34, i32 154, i32 30, i32 82, i32 5, i32 244, i32 29], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 78, i32 102, i32 207, i32 78, i32 52, i32 206, i32 12, i32 217, i32 166, i32 80, i32 214, i32 94, i32 149, i32 175, i32 233, i32 88, i32 250, i32 238, i32 155, i32 184, i32 165, i32 15, i32 53, i32 224, i32 67, i32 130, i32 109, i32 101, i32 230, i32 217, i32 0, i32 15], [32 x i32] [i32 14, i32 75, i32 163, i32 99, i32 138, i32 254, i32 165, i32 88, i32 241, i32 19, i32 189, i32 157, i32 170, i32 127, i32 118, i32 64, i32 112, i32 129, i32 16, i32 117, i32 153, i32 187, i32 190, i32 11, i32 22, i32 233, i32 186, i32 98, i32 52, i32 204, i32 7, i32 109], [32 x i32] [i32 153, i32 235, i32 124, i32 49, i32 115, i32 100, i32 103, i32 127, i32 12, i32 102, i32 170, i32 140, i32 105, i32 145, i32 226, i32 38, i32 211, i32 35, i32 226, i32 118, i32 93, i32 50, i32 82, i32 223, i32 93, i32 197, i32 143, i32 183, i32 124, i32 132, i32 179, i32 112], [32 x i32] [i32 101, i32 239, i32 184, i32 159, i32 200, i32 75, i32 167, i32 253, i32 33, i32 73, i32 155, i32 146, i32 53, i32 130, i32 214, i32 10, i32 155, i32 242, i32 121, i32 241, i32 71, i32 47, i32 106, i32 126, i32 159, i32 207, i32 24, i32 2, i32 60, i32 251, i32 27, i32 62], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 140, i32 133, i32 43, i32 196, i32 252, i32 241, i32 171, i32 232, i32 121, i32 34, i32 196, i32 132, i32 23, i32 58, i32 250, i32 134, i32 166, i32 125, i32 249, i32 243, i32 111, i32 3, i32 87, i32 32, i32 77, i32 121, i32 249, i32 110, i32 113, i32 84, i32 56, i32 9], [32 x i32] [i32 198, i32 32, i32 71, i32 108, i32 164, i32 125, i32 203, i32 99, i32 234, i32 91, i32 3, i32 223, i32 62, i32 136, i32 129, i32 109, i32 206, i32 7, i32 66, i32 24, i32 96, i32 126, i32 123, i32 85, i32 254, i32 106, i32 243, i32 218, i32 92, i32 139, i32 149, i32 16], [32 x i32] [i32 87, i32 130, i32 28, i32 171, i32 191, i32 98, i32 112, i32 232, i32 196, i32 207, i32 240, i32 40, i32 110, i32 22, i32 60, i32 8, i32 120, i32 137, i32 133, i32 70, i32 15, i32 246, i32 127, i32 207, i32 203, i32 126, i32 184, i32 37, i32 233, i32 90, i32 250, i32 3], [32 x i32] [i32 54, i32 10, i32 194, i32 182, i32 75, i32 165, i32 93, i32 7, i32 23, i32 65, i32 49, i32 95, i32 98, i32 70, i32 248, i32 146, i32 249, i32 102, i32 72, i32 115, i32 166, i32 151, i32 13, i32 125, i32 136, i32 238, i32 98, i32 177, i32 3, i32 168, i32 63, i32 44], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 139, i32 157, i32 182, i32 204, i32 96, i32 180, i32 114, i32 79, i32 23, i32 105, i32 90, i32 74, i32 104, i32 52, i32 171, i32 161, i32 69, i32 50, i32 60, i32 131, i32 135, i32 114, i32 48, i32 84, i32 119, i32 104, i32 174, i32 251, i32 181, i32 139, i32 34, i32 94], [32 x i32] [i32 102, i32 158, i32 198, i32 36, i32 192, i32 237, i32 165, i32 93, i32 136, i32 212, i32 240, i32 115, i32 151, i32 123, i32 234, i32 127, i32 66, i32 255, i32 33, i32 160, i32 155, i32 47, i32 154, i32 253, i32 83, i32 87, i32 7, i32 132, i32 72, i32 136, i32 157, i32 82], [32 x i32] [i32 50, i32 101, i32 3, i32 229, i32 137, i32 166, i32 110, i32 179, i32 91, i32 142, i32 202, i32 235, i32 254, i32 34, i32 86, i32 139, i32 93, i32 20, i32 75, i32 77, i32 249, i32 190, i32 181, i32 245, i32 230, i32 92, i32 123, i32 139, i32 244, i32 19, i32 17, i32 52], [32 x i32] [i32 232, i32 226, i32 0, i32 126, i32 242, i32 158, i32 30, i32 153, i32 57, i32 149, i32 4, i32 189, i32 30, i32 103, i32 123, i32 178, i32 38, i32 172, i32 230, i32 170, i32 226, i32 70, i32 213, i32 228, i32 232, i32 134, i32 189, i32 171, i32 124, i32 85, i32 89, i32 111], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 101, i32 110, i32 10, i32 164, i32 89, i32 7, i32 23, i32 242, i32 107, i32 74, i32 31, i32 110, i32 246, i32 181, i32 188, i32 98, i32 228, i32 182, i32 218, i32 162, i32 147, i32 188, i32 41, i32 5, i32 210, i32 210, i32 115, i32 70, i32 3, i32 22, i32 64, i32 49], [32 x i32] [i32 180, i32 205, i32 8, i32 111, i32 21, i32 35, i32 26, i32 11, i32 34, i32 237, i32 209, i32 241, i32 167, i32 199, i32 115, i32 69, i32 243, i32 158, i32 206, i32 118, i32 183, i32 246, i32 57, i32 182, i32 142, i32 121, i32 190, i32 233, i32 155, i32 207, i32 125, i32 98], [32 x i32] [i32 134, i32 23, i32 144, i32 231, i32 201, i32 31, i32 16, i32 165, i32 106, i32 45, i32 57, i32 208, i32 59, i32 196, i32 166, i32 233, i32 89, i32 19, i32 218, i32 26, i32 230, i32 160, i32 185, i32 60, i32 80, i32 184, i32 64, i32 124, i32 21, i32 54, i32 90, i32 66], [32 x i32] [i32 252, i32 90, i32 30, i32 29, i32 116, i32 88, i32 149, i32 166, i32 143, i32 123, i32 151, i32 62, i32 23, i32 59, i32 121, i32 45, i32 166, i32 87, i32 239, i32 69, i32 2, i32 11, i32 77, i32 110, i32 158, i32 147, i32 141, i32 47, i32 217, i32 157, i32 219, i32 4], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 22, i32 174, i32 139, i32 224, i32 155, i32 36, i32 104, i32 92, i32 68, i32 194, i32 208, i32 8, i32 183, i32 123, i32 98, i32 253, i32 127, i32 216, i32 212, i32 183, i32 80, i32 253, i32 44, i32 27, i32 191, i32 65, i32 149, i32 217, i32 142, i32 216, i32 23, i32 27], [32 x i32] [i32 234, i32 218, i32 153, i32 158, i32 25, i32 131, i32 102, i32 109, i32 233, i32 118, i32 135, i32 80, i32 209, i32 253, i32 60, i32 96, i32 135, i32 198, i32 65, i32 217, i32 142, i32 219, i32 94, i32 222, i32 170, i32 154, i32 211, i32 40, i32 218, i32 149, i32 234, i32 71], [32 x i32] [i32 2, i32 251, i32 84, i32 184, i32 5, i32 243, i32 129, i32 82, i32 105, i32 52, i32 70, i32 157, i32 134, i32 118, i32 143, i32 215, i32 248, i32 106, i32 102, i32 255, i32 230, i32 167, i32 144, i32 247, i32 94, i32 205, i32 106, i32 155, i32 85, i32 252, i32 157, i32 72], [32 x i32] [i32 122, i32 108, i32 69, i32 39, i32 196, i32 147, i32 127, i32 125, i32 124, i32 98, i32 80, i32 56, i32 58, i32 107, i32 181, i32 136, i32 198, i32 217, i32 241, i32 120, i32 25, i32 185, i32 57, i32 147, i32 61, i32 201, i32 224, i32 156, i32 60, i32 206, i32 245, i32 114], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 72, i32 95, i32 39, i32 144, i32 92, i32 2, i32 66, i32 173, i32 120, i32 71, i32 92, i32 181, i32 126, i32 8, i32 133, i32 0, i32 250, i32 127, i32 253, i32 253, i32 231, i32 9, i32 17, i32 242, i32 126, i32 27, i32 56, i32 108, i32 53, i32 109, i32 51, i32 102], [32 x i32] [i32 97, i32 46, i32 194, i32 221, i32 149, i32 87, i32 209, i32 171, i32 128, i32 232, i32 99, i32 23, i32 181, i32 72, i32 228, i32 138, i32 17, i32 158, i32 114, i32 190, i32 133, i32 141, i32 81, i32 10, i32 242, i32 159, i32 224, i32 28, i32 169, i32 7, i32 40, i32 123], [32 x i32] [i32 78, i32 59, i32 105, i32 200, i32 67, i32 117, i32 81, i32 108, i32 121, i32 86, i32 228, i32 203, i32 247, i32 166, i32 81, i32 194, i32 44, i32 66, i32 11, i32 212, i32 130, i32 32, i32 28, i32 1, i32 8, i32 102, i32 215, i32 191, i32 4, i32 86, i32 252, i32 2], [32 x i32] [i32 107, i32 166, i32 245, i32 75, i32 17, i32 189, i32 186, i32 91, i32 158, i32 196, i32 164, i32 81, i32 30, i32 190, i32 208, i32 144, i32 58, i32 156, i32 194, i32 38, i32 182, i32 30, i32 241, i32 149, i32 125, i32 200, i32 109, i32 82, i32 230, i32 153, i32 44, i32 95], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 54, i32 39, i32 62, i32 198, i32 18, i32 7, i32 171, i32 78, i32 190, i32 105, i32 157, i32 179, i32 190, i32 8, i32 124, i32 42, i32 71, i32 8, i32 253, i32 212, i32 205, i32 14, i32 39, i32 52, i32 91, i32 152, i32 52, i32 47, i32 119, i32 95, i32 58, i32 101], [32 x i32] [i32 0, i32 23, i32 144, i32 48, i32 233, i32 211, i32 96, i32 48, i32 49, i32 194, i32 114, i32 137, i32 122, i32 54, i32 165, i32 189, i32 57, i32 131, i32 133, i32 80, i32 161, i32 93, i32 108, i32 65, i32 29, i32 181, i32 44, i32 7, i32 64, i32 119, i32 11, i32 80], [32 x i32] [i32 119, i32 91, i32 226, i32 55, i32 199, i32 225, i32 124, i32 19, i32 140, i32 159, i32 123, i32 123, i32 42, i32 206, i32 66, i32 163, i32 185, i32 42, i32 153, i32 168, i32 192, i32 216, i32 60, i32 134, i32 176, i32 251, i32 233, i32 118, i32 119, i32 247, i32 245, i32 86], [32 x i32] [i32 70, i32 2, i32 245, i32 165, i32 175, i32 197, i32 117, i32 109, i32 186, i32 69, i32 53, i32 10, i32 254, i32 201, i32 172, i32 34, i32 145, i32 141, i32 33, i32 149, i32 51, i32 3, i32 192, i32 138, i32 22, i32 243, i32 57, i32 224, i32 1, i32 15, i32 83, i32 60], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 89, i32 213, i32 155, i32 90, i32 162, i32 144, i32 211, i32 184, i32 55, i32 76, i32 85, i32 130, i32 40, i32 8, i32 15, i32 127, i32 170, i32 129, i32 101, i32 224, i32 12, i32 82, i32 201, i32 163, i32 50, i32 39, i32 100, i32 218, i32 253, i32 52, i32 35, i32 90], [32 x i32] [i32 75, i32 65, i32 19, i32 84, i32 35, i32 26, i32 164, i32 78, i32 169, i32 139, i32 30, i32 75, i32 252, i32 21, i32 36, i32 187, i32 126, i32 203, i32 182, i32 30, i32 27, i32 245, i32 242, i32 200, i32 86, i32 236, i32 50, i32 162, i32 96, i32 91, i32 160, i32 42], [32 x i32] [i32 29, i32 41, i32 122, i32 161, i32 236, i32 142, i32 181, i32 173, i32 234, i32 2, i32 104, i32 96, i32 116, i32 41, i32 28, i32 165, i32 207, i32 200, i32 59, i32 125, i32 139, i32 43, i32 124, i32 173, i32 164, i32 64, i32 23, i32 81, i32 89, i32 124, i32 46, i32 93], [32 x i32] [i32 229, i32 176, i32 39, i32 173, i32 190, i32 155, i32 242, i32 181, i32 99, i32 222, i32 58, i32 35, i32 149, i32 183, i32 10, i32 126, i32 243, i32 158, i32 69, i32 111, i32 25, i32 57, i32 117, i32 143, i32 57, i32 61, i32 15, i32 192, i32 159, i32 241, i32 233, i32 81], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 246, i32 116, i32 61, i32 242, i32 175, i32 208, i32 30, i32 3, i32 124, i32 35, i32 107, i32 201, i32 252, i32 37, i32 112, i32 144, i32 220, i32 154, i32 164, i32 251, i32 73, i32 252, i32 61, i32 10, i32 53, i32 56, i32 111, i32 228, i32 126, i32 80, i32 1, i32 42], [32 x i32] [i32 133, i32 12, i32 175, i32 248, i32 131, i32 68, i32 73, i32 217, i32 69, i32 207, i32 247, i32 72, i32 217, i32 83, i32 180, i32 241, i32 101, i32 160, i32 225, i32 195, i32 179, i32 21, i32 237, i32 137, i32 155, i32 79, i32 98, i32 179, i32 87, i32 165, i32 69, i32 28], [32 x i32] [i32 132, i32 124, i32 194, i32 166, i32 145, i32 35, i32 206, i32 189, i32 220, i32 249, i32 206, i32 213, i32 117, i32 48, i32 34, i32 230, i32 249, i32 67, i32 98, i32 13, i32 247, i32 117, i32 157, i32 127, i32 140, i32 255, i32 125, i32 228, i32 114, i32 172, i32 159, i32 28], [32 x i32] [i32 46, i32 104, i32 161, i32 35, i32 125, i32 155, i32 64, i32 105, i32 133, i32 123, i32 66, i32 191, i32 144, i32 75, i32 214, i32 64, i32 47, i32 215, i32 82, i32 82, i32 178, i32 33, i32 222, i32 100, i32 189, i32 136, i32 195, i32 109, i32 165, i32 250, i32 129, i32 63], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 85, i32 71, i32 228, i32 168, i32 61, i32 85, i32 33, i32 52, i32 171, i32 29, i32 174, i32 224, i32 244, i32 234, i32 219, i32 197, i32 185, i32 88, i32 191, i32 196, i32 42, i32 137, i32 49, i32 26, i32 244, i32 45, i32 225, i32 202, i32 55, i32 153, i32 71, i32 89], [32 x i32] [i32 70, i32 250, i32 34, i32 75, i32 250, i32 225, i32 254, i32 150, i32 252, i32 103, i32 186, i32 103, i32 151, i32 196, i32 231, i32 27, i32 134, i32 144, i32 95, i32 238, i32 244, i32 91, i32 17, i32 178, i32 205, i32 173, i32 238, i32 194, i32 72, i32 108, i32 43, i32 27], [32 x i32] [i32 41, i32 172, i32 255, i32 39, i32 224, i32 89, i32 190, i32 57, i32 156, i32 13, i32 131, i32 215, i32 16, i32 11, i32 21, i32 183, i32 225, i32 194, i32 44, i32 48, i32 115, i32 128, i32 58, i32 125, i32 93, i32 171, i32 88, i32 107, i32 193, i32 240, i32 244, i32 34], [32 x i32] [i32 245, i32 251, i32 144, i32 45, i32 129, i32 25, i32 158, i32 47, i32 109, i32 133, i32 136, i32 140, i32 64, i32 92, i32 119, i32 65, i32 77, i32 1, i32 25, i32 118, i32 96, i32 232, i32 76, i32 72, i32 228, i32 51, i32 131, i32 50, i32 108, i32 180, i32 65, i32 3], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 246, i32 150, i32 202, i32 47, i32 218, i32 56, i32 167, i32 27, i32 252, i32 202, i32 125, i32 254, i32 8, i32 137, i32 226, i32 71, i32 43, i32 106, i32 93, i32 75, i32 250, i32 161, i32 180, i32 222, i32 182, i32 194, i32 49, i32 81, i32 245, i32 224, i32 164, i32 11], [32 x i32] [i32 80, i32 252, i32 219, i32 162, i32 89, i32 33, i32 141, i32 189, i32 126, i32 51, i32 174, i32 47, i32 135, i32 26, i32 208, i32 151, i32 199, i32 13, i32 77, i32 99, i32 1, i32 239, i32 5, i32 132, i32 236, i32 64, i32 221, i32 168, i32 10, i32 79, i32 112, i32 11], [32 x i32] [i32 12, i32 14, i32 243, i32 186, i32 240, i32 229, i32 186, i32 178, i32 87, i32 119, i32 198, i32 32, i32 155, i32 137, i32 36, i32 190, i32 242, i32 156, i32 138, i32 186, i32 105, i32 193, i32 241, i32 176, i32 79, i32 42, i32 5, i32 154, i32 238, i32 16, i32 126, i32 54], [32 x i32] [i32 127, i32 193, i32 220, i32 185, i32 199, i32 188, i32 134, i32 61, i32 85, i32 75, i32 40, i32 122, i32 251, i32 77, i32 199, i32 248, i32 188, i32 103, i32 42, i32 96, i32 77, i32 143, i32 7, i32 11, i32 26, i32 23, i32 191, i32 250, i32 172, i32 167, i32 61, i32 26], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 111, i32 77, i32 23, i32 215, i32 225, i32 132, i32 217, i32 120, i32 177, i32 144, i32 253, i32 46, i32 179, i32 181, i32 25, i32 63, i32 27, i32 250, i32 192, i32 104, i32 179, i32 221, i32 0, i32 46, i32 137, i32 189, i32 126, i32 128, i32 50, i32 19, i32 160, i32 123], [32 x i32] [i32 176, i32 59, i32 44, i32 243, i32 254, i32 50, i32 113, i32 7, i32 63, i32 170, i32 186, i32 69, i32 96, i32 168, i32 141, i32 234, i32 84, i32 203, i32 57, i32 16, i32 180, i32 242, i32 139, i32 210, i32 20, i32 130, i32 66, i32 7, i32 142, i32 233, i32 124, i32 83], [32 x i32] [i32 1, i32 184, i32 214, i32 22, i32 103, i32 160, i32 21, i32 185, i32 225, i32 88, i32 164, i32 167, i32 49, i32 55, i32 119, i32 47, i32 139, i32 18, i32 159, i32 244, i32 63, i32 199, i32 54, i32 102, i32 210, i32 168, i32 86, i32 247, i32 127, i32 116, i32 198, i32 65], [32 x i32] [i32 25, i32 212, i32 141, i32 71, i32 41, i32 18, i32 101, i32 176, i32 17, i32 120, i32 71, i32 181, i32 203, i32 163, i32 165, i32 250, i32 5, i32 133, i32 84, i32 169, i32 51, i32 151, i32 141, i32 43, i32 194, i32 254, i32 153, i32 53, i32 40, i32 229, i32 235, i32 99], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 68, i32 31, i32 184, i32 194, i32 1, i32 193, i32 48, i32 25, i32 85, i32 5, i32 96, i32 16, i32 164, i32 108, i32 45, i32 103, i32 112, i32 229, i32 37, i32 27, i32 242, i32 191, i32 221, i32 251, i32 112, i32 43, i32 161, i32 140, i32 156, i32 148, i32 132, i32 8], [32 x i32] [i32 94, i32 223, i32 21, i32 83, i32 59, i32 134, i32 128, i32 176, i32 241, i32 112, i32 104, i32 143, i32 102, i32 124, i32 14, i32 73, i32 26, i32 216, i32 107, i32 254, i32 78, i32 239, i32 202, i32 71, i32 212, i32 3, i32 193, i32 55, i32 80, i32 156, i32 193, i32 22], [32 x i32] [i32 220, i32 255, i32 21, i32 97, i32 47, i32 74, i32 47, i32 98, i32 242, i32 4, i32 47, i32 181, i32 12, i32 183, i32 30, i32 63, i32 116, i32 26, i32 15, i32 215, i32 234, i32 205, i32 217, i32 125, i32 246, i32 18, i32 14, i32 47, i32 219, i32 90, i32 59, i32 22], [32 x i32] [i32 105, i32 50, i32 161, i32 5, i32 17, i32 66, i32 0, i32 210, i32 89, i32 172, i32 77, i32 98, i32 139, i32 19, i32 226, i32 80, i32 93, i32 160, i32 157, i32 155, i32 253, i32 187, i32 18, i32 65, i32 117, i32 65, i32 158, i32 204, i32 220, i32 199, i32 220, i32 93], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 98, i32 18, i32 55, i32 106, i32 48, i32 246, i32 30, i32 251, i32 20, i32 92, i32 13, i32 14, i32 183, i32 129, i32 106, i32 231, i32 8, i32 5, i32 172, i32 170, i32 56, i32 70, i32 226, i32 115, i32 234, i32 75, i32 7, i32 129, i32 67, i32 124, i32 158, i32 94], [32 x i32] [i32 63, i32 171, i32 211, i32 244, i32 138, i32 118, i32 161, i32 60, i32 202, i32 45, i32 73, i32 195, i32 234, i32 8, i32 11, i32 133, i32 23, i32 42, i32 195, i32 108, i32 8, i32 253, i32 87, i32 159, i32 61, i32 95, i32 223, i32 103, i32 104, i32 66, i32 0, i32 50], [32 x i32] [i32 229, i32 68, i32 236, i32 6, i32 157, i32 144, i32 121, i32 159, i32 211, i32 224, i32 121, i32 175, i32 143, i32 16, i32 253, i32 221, i32 4, i32 174, i32 39, i32 151, i32 70, i32 51, i32 121, i32 234, i32 184, i32 78, i32 202, i32 90, i32 89, i32 87, i32 225, i32 14], [32 x i32] [i32 227, i32 219, i32 96, i32 205, i32 92, i32 74, i32 24, i32 15, i32 239, i32 115, i32 54, i32 113, i32 140, i32 246, i32 17, i32 180, i32 216, i32 206, i32 23, i32 94, i32 79, i32 38, i32 119, i32 151, i32 95, i32 203, i32 239, i32 145, i32 235, i32 106, i32 98, i32 122], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 59, i32 185, i32 184, i32 6, i32 90, i32 46, i32 254, i32 195, i32 130, i32 55, i32 156, i32 163, i32 17, i32 31, i32 156, i32 166, i32 218, i32 99, i32 72, i32 155, i32 173, i32 222, i32 45, i32 166, i32 188, i32 110, i32 50, i32 218, i32 39, i32 101, i32 221, i32 87], [32 x i32] [i32 59, i32 178, i32 148, i32 109, i32 57, i32 96, i32 172, i32 238, i32 231, i32 129, i32 26, i32 59, i32 118, i32 135, i32 92, i32 5, i32 148, i32 42, i32 69, i32 185, i32 128, i32 233, i32 34, i32 177, i32 7, i32 203, i32 64, i32 158, i32 112, i32 73, i32 109, i32 18], [32 x i32] [i32 164, i32 75, i32 98, i32 76, i32 230, i32 253, i32 114, i32 7, i32 242, i32 129, i32 252, i32 242, i32 189, i32 18, i32 124, i32 104, i32 118, i32 42, i32 186, i32 245, i32 101, i32 177, i32 31, i32 23, i32 10, i32 56, i32 176, i32 191, i32 192, i32 248, i32 244, i32 42], [32 x i32] [i32 247, i32 24, i32 122, i32 150, i32 126, i32 67, i32 87, i32 169, i32 85, i32 252, i32 78, i32 182, i32 114, i32 0, i32 242, i32 228, i32 215, i32 82, i32 211, i32 211, i32 182, i32 133, i32 246, i32 113, i32 199, i32 68, i32 63, i32 127, i32 215, i32 179, i32 242, i32 121], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 144, i32 215, i32 197, i32 38, i32 8, i32 189, i32 176, i32 83, i32 99, i32 88, i32 195, i32 49, i32 94, i32 117, i32 70, i32 21, i32 145, i32 166, i32 248, i32 47, i32 26, i32 8, i32 101, i32 136, i32 47, i32 152, i32 4, i32 241, i32 124, i32 110, i32 0, i32 119], [32 x i32] [i32 137, i32 143, i32 192, i32 190, i32 93, i32 214, i32 159, i32 160, i32 240, i32 157, i32 129, i32 206, i32 58, i32 123, i32 152, i32 88, i32 187, i32 215, i32 120, i32 200, i32 63, i32 19, i32 241, i32 116, i32 25, i32 223, i32 248, i32 152, i32 137, i32 93, i32 250, i32 95], [32 x i32] [i32 104, i32 14, i32 111, i32 151, i32 186, i32 112, i32 187, i32 163, i32 14, i32 229, i32 11, i32 18, i32 244, i32 162, i32 220, i32 71, i32 248, i32 230, i32 208, i32 35, i32 108, i32 51, i32 168, i32 153, i32 70, i32 110, i32 15, i32 68, i32 186, i32 118, i32 72, i32 15], [32 x i32] [i32 44, i32 25, i32 51, i32 221, i32 27, i32 171, i32 236, i32 1, i32 176, i32 35, i32 248, i32 66, i32 43, i32 6, i32 136, i32 234, i32 61, i32 45, i32 0, i32 42, i32 120, i32 69, i32 77, i32 56, i32 237, i32 46, i32 46, i32 68, i32 73, i32 237, i32 203, i32 51], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 63, i32 96, i32 193, i32 130, i32 45, i32 163, i32 40, i32 88, i32 36, i32 158, i32 159, i32 227, i32 112, i32 204, i32 9, i32 78, i32 26, i32 63, i32 17, i32 17, i32 21, i32 7, i32 60, i32 164, i32 65, i32 224, i32 101, i32 163, i32 10, i32 65, i32 109, i32 17], [32 x i32] [i32 32, i32 239, i32 89, i32 222, i32 164, i32 43, i32 147, i32 110, i32 46, i32 236, i32 66, i32 154, i32 212, i32 45, i32 244, i32 70, i32 88, i32 39, i32 43, i32 24, i32 143, i32 131, i32 61, i32 105, i32 158, i32 212, i32 62, i32 182, i32 197, i32 253, i32 88, i32 3], [32 x i32] [i32 50, i32 180, i32 24, i32 71, i32 121, i32 203, i32 212, i32 90, i32 7, i32 20, i32 15, i32 160, i32 213, i32 172, i32 208, i32 65, i32 64, i32 171, i32 97, i32 35, i32 229, i32 42, i32 42, i32 111, i32 247, i32 168, i32 212, i32 118, i32 239, i32 231, i32 69, i32 108], [32 x i32] [i32 119, i32 56, i32 222, i32 215, i32 96, i32 72, i32 7, i32 240, i32 116, i32 168, i32 255, i32 84, i32 229, i32 48, i32 67, i32 255, i32 119, i32 251, i32 33, i32 7, i32 255, i32 178, i32 7, i32 107, i32 228, i32 229, i32 48, i32 252, i32 25, i32 108, i32 163, i32 1], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 30, i32 127, i32 180, i32 116, i32 126, i32 177, i32 137, i32 79, i32 24, i32 90, i32 171, i32 100, i32 6, i32 223, i32 69, i32 135, i32 224, i32 106, i32 198, i32 240, i32 14, i32 201, i32 36, i32 53, i32 56, i32 234, i32 48, i32 84, i32 180, i32 196, i32 82, i32 84], [32 x i32] [i32 139, i32 25, i32 117, i32 110, i32 3, i32 6, i32 94, i32 106, i32 111, i32 26, i32 140, i32 227, i32 211, i32 40, i32 242, i32 224, i32 185, i32 122, i32 67, i32 105, i32 230, i32 211, i32 192, i32 254, i32 126, i32 151, i32 171, i32 108, i32 123, i32 142, i32 19, i32 66], [32 x i32] [i32 50, i32 173, i32 174, i32 133, i32 88, i32 67, i32 184, i32 177, i32 230, i32 62, i32 0, i32 156, i32 120, i32 136, i32 86, i32 219, i32 156, i32 252, i32 121, i32 246, i32 249, i32 65, i32 95, i32 183, i32 188, i32 17, i32 249, i32 32, i32 54, i32 28, i32 83, i32 43], [32 x i32] [i32 214, i32 27, i32 154, i32 108, i32 229, i32 70, i32 234, i32 112, i32 150, i32 141, i32 78, i32 42, i32 82, i32 33, i32 38, i32 75, i32 177, i32 187, i32 15, i32 124, i32 169, i32 155, i32 4, i32 187, i32 81, i32 8, i32 241, i32 154, i32 164, i32 118, i32 124, i32 24], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 44, i32 179, i32 218, i32 122, i32 216, i32 61, i32 153, i32 202, i32 210, i32 244, i32 218, i32 153, i32 142, i32 79, i32 152, i32 183, i32 244, i32 174, i32 62, i32 159, i32 142, i32 53, i32 96, i32 164, i32 51, i32 117, i32 164, i32 4, i32 147, i32 177, i32 107, i32 77], [32 x i32] [i32 237, i32 183, i32 132, i32 44, i32 246, i32 211, i32 161, i32 107, i32 36, i32 109, i32 135, i32 86, i32 151, i32 89, i32 121, i32 98, i32 159, i32 172, i32 237, i32 243, i32 201, i32 137, i32 33, i32 46, i32 4, i32 179, i32 204, i32 47, i32 190, i32 214, i32 10, i32 75], [32 x i32] [i32 83, i32 207, i32 194, i32 161, i32 173, i32 106, i32 243, i32 205, i32 143, i32 201, i32 222, i32 28, i32 248, i32 108, i32 143, i32 248, i32 118, i32 66, i32 231, i32 254, i32 178, i32 114, i32 33, i32 10, i32 102, i32 116, i32 143, i32 183, i32 235, i32 228, i32 111, i32 1], [32 x i32] [i32 83, i32 136, i32 119, i32 2, i32 202, i32 39, i32 168, i32 229, i32 69, i32 226, i32 168, i32 72, i32 42, i32 171, i32 24, i32 202, i32 234, i32 45, i32 42, i32 84, i32 23, i32 55, i32 50, i32 9, i32 220, i32 224, i32 74, i32 183, i32 125, i32 130, i32 16, i32 125], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 218, i32 140, i32 194, i32 208, i32 172, i32 24, i32 232, i32 82, i32 54, i32 212, i32 33, i32 163, i32 221, i32 87, i32 34, i32 121, i32 183, i32 248, i32 113, i32 157, i32 198, i32 145, i32 112, i32 134, i32 86, i32 191, i32 161, i32 17, i32 139, i32 25, i32 225, i32 15], [32 x i32] [i32 185, i32 177, i32 231, i32 93, i32 78, i32 188, i32 238, i32 187, i32 64, i32 129, i32 119, i32 130, i32 25, i32 171, i32 181, i32 198, i32 238, i32 171, i32 91, i32 107, i32 99, i32 146, i32 138, i32 52, i32 141, i32 205, i32 238, i32 79, i32 73, i32 229, i32 201, i32 126], [32 x i32] [i32 98, i32 79, i32 208, i32 117, i32 119, i32 186, i32 118, i32 119, i32 215, i32 184, i32 216, i32 146, i32 111, i32 152, i32 52, i32 61, i32 214, i32 78, i32 28, i32 15, i32 240, i32 143, i32 46, i32 241, i32 179, i32 189, i32 177, i32 185, i32 236, i32 153, i32 180, i32 7], [32 x i32] [i32 139, i32 44, i32 0, i32 72, i32 74, i32 249, i32 91, i32 135, i32 105, i32 82, i32 229, i32 91, i32 209, i32 177, i32 229, i32 37, i32 37, i32 224, i32 156, i32 194, i32 19, i32 68, i32 232, i32 185, i32 10, i32 112, i32 173, i32 189, i32 15, i32 81, i32 148, i32 105], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 194, i32 254, i32 27, i32 12, i32 103, i32 205, i32 214, i32 224, i32 81, i32 142, i32 44, i32 224, i32 121, i32 136, i32 240, i32 207, i32 65, i32 74, i32 173, i32 35, i32 212, i32 70, i32 202, i32 148, i32 161, i32 195, i32 235, i32 40, i32 6, i32 250, i32 23, i32 20], [32 x i32] [i32 204, i32 183, i32 50, i32 137, i32 87, i32 208, i32 152, i32 117, i32 228, i32 55, i32 153, i32 169, i32 232, i32 186, i32 237, i32 186, i32 235, i32 199, i32 79, i32 21, i32 118, i32 7, i32 12, i32 76, i32 239, i32 159, i32 82, i32 252, i32 4, i32 93, i32 88, i32 16], [32 x i32] [i32 100, i32 233, i32 40, i32 199, i32 164, i32 207, i32 42, i32 249, i32 144, i32 100, i32 114, i32 44, i32 139, i32 235, i32 236, i32 160, i32 242, i32 125, i32 53, i32 181, i32 144, i32 77, i32 127, i32 91, i32 74, i32 73, i32 228, i32 184, i32 59, i32 200, i32 161, i32 47], [32 x i32] [i32 249, i32 126, i32 62, i32 102, i32 238, i32 249, i32 153, i32 40, i32 255, i32 173, i32 17, i32 216, i32 226, i32 102, i32 197, i32 205, i32 15, i32 13, i32 11, i32 106, i32 252, i32 124, i32 36, i32 168, i32 79, i32 168, i32 94, i32 128, i32 69, i32 139, i32 108, i32 65], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 146, i32 248, i32 214, i32 75, i32 239, i32 66, i32 19, i32 178, i32 74, i32 196, i32 46, i32 114, i32 63, i32 201, i32 17, i32 189, i32 116, i32 2, i32 14, i32 245, i32 19, i32 157, i32 131, i32 26, i32 27, i32 213, i32 84, i32 222, i32 196, i32 30, i32 22, i32 108], [32 x i32] [i32 234, i32 167, i32 35, i32 239, i32 4, i32 97, i32 128, i32 80, i32 201, i32 110, i32 165, i32 150, i32 209, i32 209, i32 200, i32 195, i32 24, i32 215, i32 45, i32 253, i32 38, i32 189, i32 203, i32 123, i32 146, i32 81, i32 14, i32 74, i32 101, i32 87, i32 184, i32 73], [32 x i32] [i32 122, i32 141, i32 161, i32 93, i32 112, i32 93, i32 81, i32 39, i32 238, i32 48, i32 101, i32 86, i32 149, i32 70, i32 222, i32 189, i32 3, i32 117, i32 180, i32 87, i32 89, i32 137, i32 235, i32 2, i32 158, i32 204, i32 137, i32 25, i32 167, i32 203, i32 23, i32 103], [32 x i32] [i32 48, i32 49, i32 84, i32 26, i32 70, i32 202, i32 230, i32 198, i32 203, i32 226, i32 195, i32 193, i32 139, i32 117, i32 129, i32 190, i32 238, i32 248, i32 163, i32 17, i32 28, i32 37, i32 163, i32 167, i32 53, i32 81, i32 85, i32 226, i32 37, i32 170, i32 226, i32 58], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 212, i32 177, i32 108, i32 8, i32 199, i32 64, i32 56, i32 115, i32 95, i32 11, i32 243, i32 118, i32 93, i32 178, i32 165, i32 47, i32 87, i32 87, i32 7, i32 237, i32 8, i32 162, i32 108, i32 79, i32 8, i32 2, i32 181, i32 14, i32 238, i32 68, i32 250, i32 34], [32 x i32] [i32 126, i32 19, i32 51, i32 205, i32 168, i32 132, i32 86, i32 30, i32 103, i32 175, i32 107, i32 67, i32 172, i32 23, i32 175, i32 22, i32 192, i32 82, i32 153, i32 73, i32 91, i32 135, i32 115, i32 126, i32 181, i32 67, i32 218, i32 107, i32 29, i32 15, i32 45, i32 85], [32 x i32] [i32 255, i32 118, i32 3, i32 197, i32 75, i32 137, i32 153, i32 112, i32 0, i32 89, i32 112, i32 156, i32 213, i32 217, i32 17, i32 137, i32 90, i32 70, i32 254, i32 239, i32 220, i32 217, i32 85, i32 43, i32 69, i32 167, i32 176, i32 45, i32 251, i32 36, i32 194, i32 41], [32 x i32] [i32 142, i32 180, i32 238, i32 184, i32 212, i32 63, i32 178, i32 27, i32 224, i32 10, i32 61, i32 117, i32 52, i32 40, i32 162, i32 142, i32 196, i32 146, i32 123, i32 254, i32 96, i32 110, i32 109, i32 184, i32 49, i32 29, i32 98, i32 13, i32 120, i32 20, i32 66, i32 17], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 77, i32 227, i32 126, i32 56, i32 98, i32 94, i32 100, i32 187, i32 43, i32 83, i32 181, i32 3, i32 104, i32 196, i32 242, i32 43, i32 90, i32 3, i32 50, i32 153, i32 74, i32 65, i32 154, i32 225, i32 26, i32 174, i32 140, i32 72, i32 243, i32 36, i32 50, i32 101], [32 x i32] [i32 200, i32 9, i32 59, i32 96, i32 201, i32 38, i32 77, i32 124, i32 242, i32 156, i32 212, i32 161, i32 59, i32 38, i32 194, i32 4, i32 51, i32 68, i32 118, i32 60, i32 2, i32 187, i32 17, i32 66, i32 12, i32 34, i32 183, i32 198, i32 225, i32 172, i32 180, i32 14], [32 x i32] [i32 124, i32 49, i32 51, i32 204, i32 228, i32 207, i32 108, i32 255, i32 128, i32 71, i32 119, i32 209, i32 216, i32 233, i32 105, i32 151, i32 152, i32 127, i32 32, i32 87, i32 29, i32 29, i32 79, i32 8, i32 39, i32 200, i32 53, i32 87, i32 64, i32 198, i32 33, i32 12], [32 x i32] [i32 193, i32 88, i32 124, i32 13, i32 32, i32 221, i32 17, i32 38, i32 95, i32 137, i32 59, i32 151, i32 88, i32 248, i32 139, i32 227, i32 223, i32 50, i32 226, i32 252, i32 216, i32 103, i32 242, i32 165, i32 55, i32 30, i32 109, i32 236, i32 124, i32 39, i32 32, i32 121], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 206, i32 127, i32 220, i32 10, i32 204, i32 130, i32 28, i32 10, i32 120, i32 113, i32 232, i32 116, i32 141, i32 1, i32 48, i32 15, i32 167, i32 17, i32 76, i32 223, i32 56, i32 215, i32 167, i32 13, i32 248, i32 72, i32 82, i32 0, i32 128, i32 123, i32 95, i32 14], [32 x i32] [i32 27, i32 3, i32 13, i32 139, i32 90, i32 27, i32 151, i32 75, i32 242, i32 22, i32 49, i32 61, i32 31, i32 51, i32 160, i32 80, i32 58, i32 24, i32 190, i32 19, i32 161, i32 118, i32 193, i32 186, i32 27, i32 241, i32 5, i32 123, i32 51, i32 168, i32 130, i32 59], [32 x i32] [i32 80, i32 91, i32 255, i32 169, i32 178, i32 241, i32 241, i32 120, i32 207, i32 20, i32 164, i32 169, i32 252, i32 9, i32 70, i32 148, i32 84, i32 101, i32 13, i32 156, i32 95, i32 114, i32 33, i32 226, i32 151, i32 165, i32 45, i32 129, i32 206, i32 74, i32 95, i32 121], [32 x i32] [i32 254, i32 122, i32 116, i32 207, i32 212, i32 210, i32 229, i32 25, i32 222, i32 208, i32 219, i32 112, i32 35, i32 105, i32 230, i32 109, i32 236, i32 236, i32 204, i32 9, i32 51, i32 106, i32 119, i32 220, i32 107, i32 34, i32 118, i32 93, i32 146, i32 9, i32 172, i32 45], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 17, i32 206, i32 191, i32 182, i32 119, i32 45, i32 72, i32 34, i32 24, i32 79, i32 163, i32 93, i32 74, i32 176, i32 112, i32 18, i32 62, i32 84, i32 215, i32 216, i32 14, i32 43, i32 39, i32 220, i32 83, i32 255, i32 202, i32 140, i32 89, i32 179, i32 78, i32 68], [32 x i32] [i32 221, i32 249, i32 218, i32 132, i32 195, i32 230, i32 138, i32 159, i32 36, i32 210, i32 150, i32 93, i32 57, i32 111, i32 88, i32 140, i32 193, i32 86, i32 147, i32 171, i32 181, i32 121, i32 59, i32 210, i32 168, i32 115, i32 22, i32 237, i32 250, i32 180, i32 47, i32 115], [32 x i32] [i32 13, i32 22, i32 172, i32 60, i32 74, i32 88, i32 134, i32 58, i32 70, i32 127, i32 108, i32 163, i32 82, i32 110, i32 55, i32 228, i32 150, i32 156, i32 233, i32 92, i32 102, i32 65, i32 103, i32 228, i32 251, i32 121, i32 12, i32 5, i32 246, i32 100, i32 213, i32 124], [32 x i32] [i32 247, i32 213, i32 233, i32 116, i32 93, i32 184, i32 37, i32 22, i32 181, i32 48, i32 188, i32 132, i32 197, i32 240, i32 173, i32 202, i32 18, i32 40, i32 188, i32 157, i32 212, i32 250, i32 130, i32 230, i32 227, i32 191, i32 162, i32 21, i32 44, i32 212, i32 52, i32 16], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 211, i32 176, i32 58, i32 102, i32 96, i32 27, i32 67, i32 241, i32 38, i32 88, i32 153, i32 9, i32 143, i32 45, i32 163, i32 20, i32 113, i32 133, i32 219, i32 237, i32 246, i32 38, i32 213, i32 97, i32 154, i32 115, i32 172, i32 14, i32 234, i32 172, i32 183, i32 12], [32 x i32] [i32 45, i32 186, i32 22, i32 7, i32 146, i32 148, i32 220, i32 189, i32 80, i32 43, i32 201, i32 127, i32 66, i32 0, i32 186, i32 97, i32 237, i32 248, i32 67, i32 237, i32 245, i32 249, i32 64, i32 96, i32 178, i32 176, i32 130, i32 203, i32 237, i32 117, i32 199, i32 101], [32 x i32] [i32 232, i32 193, i32 169, i32 194, i32 123, i32 89, i32 33, i32 51, i32 226, i32 67, i32 115, i32 43, i32 172, i32 45, i32 193, i32 137, i32 59, i32 21, i32 226, i32 213, i32 192, i32 151, i32 138, i32 253, i32 111, i32 54, i32 51, i32 183, i32 185, i32 195, i32 136, i32 9], [32 x i32] [i32 253, i32 47, i32 224, i32 155, i32 30, i32 140, i32 197, i32 24, i32 169, i32 202, i32 212, i32 43, i32 53, i32 182, i32 149, i32 10, i32 159, i32 126, i32 251, i32 196, i32 239, i32 136, i32 123, i32 35, i32 67, i32 236, i32 47, i32 13, i32 15, i32 122, i32 252, i32 92], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 51, i32 72, i32 49, i32 0, i32 89, i32 246, i32 242, i32 202, i32 15, i32 39, i32 27, i32 99, i32 18, i32 126, i32 2, i32 29, i32 73, i32 192, i32 93, i32 121, i32 135, i32 239, i32 94, i32 122, i32 47, i32 31, i32 102, i32 85, i32 216, i32 9, i32 217, i32 97], [32 x i32] [i32 101, i32 192, i32 163, i32 136, i32 81, i32 149, i32 252, i32 150, i32 148, i32 120, i32 232, i32 13, i32 139, i32 65, i32 201, i32 194, i32 88, i32 72, i32 117, i32 16, i32 47, i32 205, i32 42, i32 201, i32 160, i32 109, i32 15, i32 221, i32 156, i32 152, i32 38, i32 61], [32 x i32] [i32 161, i32 76, i32 112, i32 75, i32 14, i32 160, i32 131, i32 112, i32 19, i32 164, i32 175, i32 184, i32 56, i32 25, i32 34, i32 101, i32 9, i32 180, i32 2, i32 79, i32 6, i32 248, i32 23, i32 206, i32 70, i32 69, i32 218, i32 80, i32 124, i32 138, i32 209, i32 78], [32 x i32] [i32 38, i32 217, i32 94, i32 163, i32 15, i32 235, i32 162, i32 243, i32 32, i32 59, i32 55, i32 212, i32 228, i32 158, i32 206, i32 6, i32 61, i32 83, i32 237, i32 174, i32 43, i32 235, i32 182, i32 36, i32 10, i32 17, i32 163, i32 15, i32 214, i32 127, i32 164, i32 58], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 151, i32 135, i32 199, i32 4, i32 28, i32 56, i32 1, i32 57, i32 88, i32 199, i32 133, i32 163, i32 252, i32 100, i32 0, i32 100, i32 37, i32 162, i32 191, i32 80, i32 148, i32 202, i32 38, i32 49, i32 69, i32 10, i32 36, i32 210, i32 81, i32 41, i32 81, i32 22], [32 x i32] [i32 203, i32 120, i32 148, i32 144, i32 228, i32 69, i32 179, i32 246, i32 217, i32 246, i32 87, i32 116, i32 213, i32 248, i32 131, i32 79, i32 57, i32 201, i32 189, i32 136, i32 194, i32 87, i32 33, i32 31, i32 36, i32 50, i32 104, i32 248, i32 199, i32 33, i32 95, i32 11], [32 x i32] [i32 149, i32 33, i32 1, i32 206, i32 149, i32 91, i32 14, i32 87, i32 199, i32 185, i32 98, i32 181, i32 40, i32 202, i32 17, i32 236, i32 180, i32 70, i32 6, i32 115, i32 38, i32 255, i32 251, i32 102, i32 125, i32 238, i32 95, i32 178, i32 86, i32 253, i32 42, i32 8], [32 x i32] [i32 246, i32 72, i32 149, i32 161, i32 111, i32 95, i32 183, i32 165, i32 187, i32 48, i32 0, i32 28, i32 210, i32 138, i32 214, i32 37, i32 38, i32 27, i32 178, i32 13, i32 55, i32 106, i32 5, i32 244, i32 157, i32 62, i32 23, i32 42, i32 67, i32 210, i32 58, i32 6], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 185, i32 75, i32 164, i32 173, i32 208, i32 109, i32 97, i32 35, i32 180, i32 175, i32 52, i32 169, i32 170, i32 101, i32 236, i32 217, i32 105, i32 227, i32 133, i32 205, i32 204, i32 231, i32 176, i32 155, i32 65, i32 193, i32 28, i32 249, i32 160, i32 250, i32 183, i32 19], [32 x i32] [i32 101, i32 10, i32 190, i32 81, i32 87, i32 173, i32 80, i32 121, i32 8, i32 113, i32 155, i32 7, i32 149, i32 143, i32 251, i32 174, i32 75, i32 56, i32 186, i32 207, i32 83, i32 42, i32 134, i32 30, i32 192, i32 80, i32 92, i32 103, i32 27, i32 246, i32 135, i32 108], [32 x i32] [i32 253, i32 78, i32 42, i32 193, i32 58, i32 202, i32 143, i32 0, i32 216, i32 236, i32 116, i32 103, i32 239, i32 97, i32 224, i32 40, i32 208, i32 150, i32 244, i32 72, i32 222, i32 129, i32 227, i32 239, i32 220, i32 170, i32 125, i32 243, i32 182, i32 85, i32 166, i32 101], [32 x i32] [i32 171, i32 27, i32 181, i32 229, i32 43, i32 195, i32 14, i32 41, i32 176, i32 208, i32 115, i32 230, i32 79, i32 100, i32 242, i32 188, i32 228, i32 228, i32 225, i32 154, i32 82, i32 51, i32 47, i32 189, i32 204, i32 3, i32 238, i32 138, i32 250, i32 0, i32 95, i32 80], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 139, i32 0, i32 84, i32 251, i32 77, i32 220, i32 203, i32 23, i32 53, i32 64, i32 255, i32 183, i32 140, i32 254, i32 74, i32 228, i32 78, i32 153, i32 78, i32 168, i32 116, i32 84, i32 93, i32 92, i32 150, i32 163, i32 18, i32 85, i32 54, i32 49, i32 23, i32 92], [32 x i32] [i32 37, i32 234, i32 134, i32 194, i32 209, i32 79, i32 183, i32 62, i32 168, i32 92, i32 141, i32 102, i32 129, i32 37, i32 237, i32 197, i32 76, i32 5, i32 185, i32 216, i32 214, i32 112, i32 190, i32 115, i32 130, i32 232, i32 161, i32 229, i32 30, i32 113, i32 213, i32 38], [32 x i32] [i32 140, i32 68, i32 9, i32 40, i32 213, i32 35, i32 201, i32 143, i32 243, i32 132, i32 69, i32 198, i32 154, i32 94, i32 255, i32 210, i32 199, i32 87, i32 147, i32 163, i32 193, i32 105, i32 221, i32 98, i32 15, i32 218, i32 92, i32 48, i32 89, i32 93, i32 233, i32 76], [32 x i32] [i32 226, i32 169, i32 101, i32 136, i32 196, i32 80, i32 250, i32 187, i32 59, i32 110, i32 95, i32 68, i32 1, i32 202, i32 151, i32 212, i32 221, i32 246, i32 205, i32 63, i32 63, i32 229, i32 151, i32 103, i32 43, i32 140, i32 102, i32 15, i32 53, i32 155, i32 245, i32 7], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 224, i32 219, i32 34, i32 40, i32 230, i32 255, i32 97, i32 157, i32 65, i32 20, i32 45, i32 59, i32 38, i32 34, i32 223, i32 241, i32 52, i32 129, i32 233, i32 69, i32 238, i32 15, i32 152, i32 139, i32 166, i32 63, i32 239, i32 247, i32 67, i32 25, i32 241, i32 67], [32 x i32] [i32 203, i32 125, i32 79, i32 255, i32 48, i32 216, i32 18, i32 59, i32 57, i32 28, i32 6, i32 249, i32 76, i32 52, i32 53, i32 113, i32 181, i32 22, i32 148, i32 103, i32 223, i32 238, i32 17, i32 222, i32 164, i32 29, i32 136, i32 147, i32 53, i32 169, i32 50, i32 16], [32 x i32] [i32 96, i32 188, i32 69, i32 31, i32 35, i32 162, i32 59, i32 112, i32 118, i32 230, i32 151, i32 153, i32 79, i32 119, i32 84, i32 103, i32 48, i32 154, i32 231, i32 102, i32 214, i32 205, i32 46, i32 81, i32 36, i32 44, i32 66, i32 74, i32 17, i32 254, i32 111, i32 126], [32 x i32] [i32 123, i32 239, i32 33, i32 229, i32 64, i32 204, i32 30, i32 220, i32 214, i32 189, i32 151, i32 122, i32 124, i32 117, i32 134, i32 122, i32 37, i32 90, i32 110, i32 124, i32 229, i32 81, i32 60, i32 27, i32 91, i32 130, i32 154, i32 7, i32 96, i32 161, i32 25, i32 4], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 92, i32 130, i32 179, i32 189, i32 85, i32 37, i32 246, i32 106, i32 147, i32 164, i32 2, i32 198, i32 125, i32 92, i32 177, i32 43, i32 91, i32 255, i32 251, i32 86, i32 248, i32 1, i32 65, i32 144, i32 198, i32 182, i32 172, i32 79, i32 254, i32 167, i32 65, i32 112], [32 x i32] [i32 57, i32 192, i32 250, i32 250, i32 205, i32 51, i32 67, i32 199, i32 151, i32 118, i32 155, i32 147, i32 145, i32 114, i32 235, i32 197, i32 24, i32 103, i32 76, i32 17, i32 240, i32 244, i32 229, i32 115, i32 178, i32 92, i32 27, i32 194, i32 38, i32 63, i32 191, i32 43], [32 x i32] [i32 23, i32 15, i32 134, i32 82, i32 215, i32 157, i32 195, i32 68, i32 81, i32 118, i32 50, i32 101, i32 180, i32 55, i32 129, i32 153, i32 70, i32 55, i32 98, i32 237, i32 207, i32 100, i32 157, i32 114, i32 64, i32 122, i32 76, i32 11, i32 118, i32 42, i32 251, i32 86], [32 x i32] [i32 172, i32 204, i32 107, i32 124, i32 249, i32 184, i32 139, i32 8, i32 92, i32 208, i32 125, i32 143, i32 115, i32 234, i32 32, i32 218, i32 134, i32 202, i32 0, i32 199, i32 173, i32 115, i32 77, i32 233, i32 232, i32 169, i32 218, i32 31, i32 3, i32 6, i32 221, i32 36], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 47, i32 189, i32 132, i32 99, i32 13, i32 181, i32 160, i32 240, i32 75, i32 158, i32 147, i32 198, i32 52, i32 154, i32 52, i32 255, i32 115, i32 25, i32 47, i32 110, i32 84, i32 69, i32 44, i32 146, i32 49, i32 118, i32 52, i32 241, i32 178, i32 38, i32 232, i32 116], [32 x i32] [i32 5, i32 251, i32 117, i32 245, i32 1, i32 175, i32 56, i32 114, i32 88, i32 252, i32 4, i32 41, i32 52, i32 122, i32 103, i32 162, i32 8, i32 80, i32 110, i32 208, i32 43, i32 115, i32 213, i32 184, i32 228, i32 48, i32 150, i32 173, i32 69, i32 223, i32 166, i32 92], [32 x i32] [i32 135, i32 200, i32 160, i32 110, i32 225, i32 176, i32 173, i32 106, i32 74, i32 52, i32 113, i32 237, i32 124, i32 214, i32 68, i32 3, i32 101, i32 74, i32 92, i32 92, i32 4, i32 245, i32 36, i32 63, i32 176, i32 22, i32 94, i32 140, i32 178, i32 210, i32 197, i32 32], [32 x i32] [i32 33, i32 19, i32 145, i32 191, i32 119, i32 122, i32 51, i32 188, i32 233, i32 7, i32 57, i32 10, i32 221, i32 125, i32 6, i32 16, i32 154, i32 238, i32 71, i32 115, i32 27, i32 21, i32 90, i32 251, i32 205, i32 77, i32 208, i32 210, i32 58, i32 1, i32 186, i32 84], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 66, i32 201, i32 202, i32 41, i32 76, i32 118, i32 55, i32 218, i32 138, i32 45, i32 124, i32 58, i32 88, i32 242, i32 3, i32 180, i32 181, i32 185, i32 26, i32 19, i32 45, i32 222, i32 95, i32 107, i32 157, i32 186, i32 82, i32 201, i32 93, i32 179, i32 243, i32 48], [32 x i32] [i32 74, i32 136, i32 218, i32 193, i32 152, i32 68, i32 60, i32 83, i32 78, i32 219, i32 75, i32 185, i32 18, i32 95, i32 205, i32 8, i32 4, i32 239, i32 117, i32 231, i32 177, i32 58, i32 229, i32 7, i32 250, i32 202, i32 101, i32 123, i32 114, i32 16, i32 100, i32 127], [32 x i32] [i32 228, i32 231, i32 67, i32 75, i32 160, i32 63, i32 43, i32 6, i32 186, i32 23, i32 174, i32 61, i32 230, i32 206, i32 189, i32 184, i32 237, i32 116, i32 17, i32 53, i32 236, i32 150, i32 254, i32 49, i32 227, i32 14, i32 122, i32 78, i32 201, i32 29, i32 203, i32 32], [32 x i32] [i32 129, i32 159, i32 199, i32 222, i32 107, i32 65, i32 34, i32 53, i32 20, i32 103, i32 119, i32 62, i32 144, i32 129, i32 176, i32 217, i32 133, i32 76, i32 202, i32 155, i32 63, i32 4, i32 89, i32 214, i32 170, i32 23, i32 195, i32 136, i32 52, i32 55, i32 186, i32 67], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 34, i32 176, i32 213, i32 230, i32 199, i32 239, i32 177, i32 167, i32 19, i32 218, i32 96, i32 180, i32 128, i32 193, i32 66, i32 125, i32 16, i32 112, i32 151, i32 4, i32 77, i32 218, i32 35, i32 137, i32 194, i32 14, i32 104, i32 203, i32 222, i32 224, i32 155, i32 41], [32 x i32] [i32 120, i32 150, i32 156, i32 167, i32 202, i32 128, i32 174, i32 2, i32 133, i32 177, i32 124, i32 4, i32 92, i32 193, i32 91, i32 38, i32 193, i32 186, i32 237, i32 165, i32 89, i32 112, i32 133, i32 140, i32 140, i32 232, i32 135, i32 172, i32 106, i32 40, i32 153, i32 53], [32 x i32] [i32 160, i32 32, i32 153, i32 105, i32 10, i32 174, i32 163, i32 112, i32 78, i32 100, i32 128, i32 183, i32 133, i32 156, i32 135, i32 84, i32 67, i32 67, i32 85, i32 128, i32 109, i32 141, i32 124, i32 169, i32 100, i32 202, i32 108, i32 46, i32 33, i32 216, i32 200, i32 108], [32 x i32] [i32 54, i32 136, i32 250, i32 253, i32 240, i32 54, i32 111, i32 7, i32 116, i32 136, i32 80, i32 208, i32 149, i32 56, i32 74, i32 72, i32 46, i32 7, i32 100, i32 151, i32 17, i32 118, i32 1, i32 26, i32 39, i32 77, i32 142, i32 37, i32 154, i32 155, i32 28, i32 34], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 48, i32 107, i32 212, i32 167, i32 81, i32 41, i32 227, i32 249, i32 122, i32 117, i32 42, i32 130, i32 47, i32 214, i32 29, i32 153, i32 43, i32 128, i32 213, i32 103, i32 30, i32 21, i32 157, i32 202, i32 253, i32 235, i32 172, i32 151, i32 53, i32 9, i32 127, i32 63], [32 x i32] [i32 71, i32 57, i32 55, i32 118, i32 13, i32 29, i32 12, i32 245, i32 90, i32 109, i32 67, i32 136, i32 153, i32 21, i32 180, i32 82, i32 15, i32 42, i32 179, i32 176, i32 63, i32 166, i32 179, i32 38, i32 179, i32 199, i32 69, i32 245, i32 146, i32 95, i32 155, i32 23], [32 x i32] [i32 173, i32 160, i32 65, i32 236, i32 200, i32 77, i32 185, i32 210, i32 110, i32 150, i32 78, i32 91, i32 197, i32 194, i32 160, i32 27, i32 207, i32 12, i32 191, i32 23, i32 102, i32 87, i32 193, i32 23, i32 144, i32 69, i32 113, i32 194, i32 225, i32 36, i32 235, i32 39], [32 x i32] [i32 117, i32 120, i32 56, i32 134, i32 87, i32 221, i32 159, i32 238, i32 84, i32 112, i32 101, i32 191, i32 241, i32 44, i32 224, i32 57, i32 13, i32 227, i32 137, i32 253, i32 142, i32 147, i32 79, i32 67, i32 220, i32 213, i32 91, i32 222, i32 249, i32 152, i32 229, i32 123], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 174, i32 6, i32 78, i32 44, i32 82, i32 27, i32 188, i32 90, i32 90, i32 165, i32 190, i32 39, i32 189, i32 235, i32 225, i32 20, i32 23, i32 104, i32 38, i32 7, i32 3, i32 209, i32 24, i32 11, i32 223, i32 241, i32 6, i32 92, i32 166, i32 27, i32 185, i32 36], [32 x i32] [i32 212, i32 105, i32 130, i32 188, i32 141, i32 248, i32 52, i32 54, i32 117, i32 85, i32 24, i32 85, i32 88, i32 60, i32 121, i32 175, i32 38, i32 128, i32 171, i32 155, i32 149, i32 0, i32 241, i32 203, i32 218, i32 193, i32 159, i32 246, i32 47, i32 162, i32 244, i32 69], [32 x i32] [i32 141, i32 189, i32 163, i32 196, i32 6, i32 155, i32 31, i32 144, i32 88, i32 96, i32 116, i32 178, i32 0, i32 59, i32 60, i32 210, i32 218, i32 130, i32 187, i32 16, i32 144, i32 105, i32 146, i32 169, i32 180, i32 48, i32 129, i32 227, i32 124, i32 168, i32 137, i32 69], [32 x i32] [i32 45, i32 171, i32 53, i32 78, i32 135, i32 196, i32 101, i32 151, i32 103, i32 36, i32 164, i32 71, i32 173, i32 63, i32 142, i32 243, i32 203, i32 49, i32 23, i32 119, i32 197, i32 226, i32 215, i32 143, i32 60, i32 193, i32 205, i32 86, i32 72, i32 193, i32 108, i32 105], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 142, i32 189, i32 112, i32 143, i32 2, i32 163, i32 36, i32 77, i32 90, i32 103, i32 196, i32 218, i32 247, i32 32, i32 15, i32 129, i32 91, i32 122, i32 5, i32 36, i32 103, i32 131, i32 11, i32 42, i32 128, i32 231, i32 253, i32 116, i32 75, i32 158, i32 92, i32 13], [32 x i32] [i32 54, i32 79, i32 241, i32 94, i32 116, i32 53, i32 19, i32 40, i32 215, i32 17, i32 207, i32 184, i32 222, i32 147, i32 179, i32 5, i32 184, i32 181, i32 115, i32 233, i32 235, i32 173, i32 25, i32 30, i32 137, i32 15, i32 139, i32 21, i32 213, i32 140, i32 227, i32 35], [32 x i32] [i32 151, i32 41, i32 108, i32 196, i32 66, i32 11, i32 221, i32 192, i32 41, i32 92, i32 155, i32 52, i32 151, i32 208, i32 199, i32 121, i32 128, i32 99, i32 116, i32 228, i32 142, i32 55, i32 176, i32 43, i32 124, i32 232, i32 104, i32 108, i32 195, i32 130, i32 151, i32 87], [32 x i32] [i32 132, i32 240, i32 74, i32 19, i32 166, i32 214, i32 250, i32 147, i32 70, i32 7, i32 246, i32 126, i32 92, i32 109, i32 94, i32 246, i32 166, i32 231, i32 72, i32 240, i32 6, i32 234, i32 255, i32 144, i32 193, i32 204, i32 76, i32 25, i32 156, i32 60, i32 78, i32 83], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 106, i32 79, i32 27, i32 190, i32 107, i32 48, i32 207, i32 117, i32 70, i32 227, i32 123, i32 157, i32 252, i32 205, i32 216, i32 92, i32 31, i32 180, i32 200, i32 226, i32 36, i32 236, i32 26, i32 40, i32 5, i32 50, i32 87, i32 253, i32 60, i32 90, i32 152, i32 16], [32 x i32] [i32 42, i32 147, i32 210, i32 133, i32 27, i32 106, i32 93, i32 166, i32 238, i32 209, i32 209, i32 51, i32 189, i32 106, i32 54, i32 115, i32 55, i32 58, i32 68, i32 180, i32 236, i32 169, i32 122, i32 222, i32 131, i32 64, i32 215, i32 223, i32 40, i32 186, i32 162, i32 48], [32 x i32] [i32 155, i32 53, i32 226, i32 169, i32 61, i32 50, i32 30, i32 187, i32 22, i32 40, i32 112, i32 233, i32 69, i32 47, i32 143, i32 112, i32 127, i32 8, i32 126, i32 83, i32 196, i32 122, i32 191, i32 247, i32 225, i32 164, i32 106, i32 216, i32 172, i32 100, i32 27, i32 17], [32 x i32] [i32 160, i32 190, i32 114, i32 58, i32 80, i32 75, i32 116, i32 171, i32 1, i32 200, i32 147, i32 197, i32 228, i32 199, i32 8, i32 108, i32 180, i32 202, i32 238, i32 235, i32 142, i32 215, i32 78, i32 38, i32 198, i32 29, i32 226, i32 113, i32 175, i32 137, i32 160, i32 42], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 244, i32 41, i32 116, i32 46, i32 128, i32 167, i32 26, i32 143, i32 246, i32 189, i32 214, i32 142, i32 191, i32 193, i32 149, i32 42, i32 235, i32 160, i32 127, i32 69, i32 160, i32 80, i32 20, i32 5, i32 177, i32 87, i32 76, i32 116, i32 183, i32 226, i32 137, i32 125], [32 x i32] [i32 213, i32 252, i32 134, i32 163, i32 59, i32 163, i32 62, i32 10, i32 251, i32 11, i32 247, i32 54, i32 177, i32 91, i32 218, i32 112, i32 183, i32 0, i32 167, i32 218, i32 136, i32 143, i32 132, i32 168, i32 188, i32 28, i32 57, i32 184, i32 101, i32 243, i32 77, i32 96], [32 x i32] [i32 41, i32 216, i32 242, i32 170, i32 233, i32 14, i32 247, i32 46, i32 95, i32 157, i32 138, i32 91, i32 9, i32 237, i32 201, i32 36, i32 34, i32 244, i32 15, i32 37, i32 143, i32 28, i32 132, i32 110, i32 52, i32 20, i32 108, i32 234, i32 179, i32 134, i32 93, i32 4], [32 x i32] [i32 3, i32 27, i32 121, i32 83, i32 110, i32 36, i32 174, i32 87, i32 217, i32 88, i32 9, i32 133, i32 72, i32 162, i32 211, i32 181, i32 226, i32 77, i32 17, i32 130, i32 230, i32 134, i32 60, i32 233, i32 177, i32 0, i32 25, i32 194, i32 87, i32 247, i32 102, i32 122], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 139, i32 216, i32 83, i32 134, i32 36, i32 134, i32 41, i32 82, i32 1, i32 250, i32 32, i32 195, i32 78, i32 149, i32 203, i32 173, i32 123, i32 52, i32 148, i32 48, i32 183, i32 122, i32 250, i32 150, i32 65, i32 96, i32 43, i32 203, i32 89, i32 185, i32 202, i32 80], [32 x i32] [i32 176, i32 230, i32 47, i32 129, i32 112, i32 161, i32 46, i32 57, i32 4, i32 124, i32 196, i32 44, i32 135, i32 69, i32 74, i32 91, i32 105, i32 151, i32 172, i32 109, i32 44, i32 16, i32 66, i32 124, i32 59, i32 21, i32 112, i32 96, i32 14, i32 17, i32 109, i32 58], [32 x i32] [i32 25, i32 249, i32 53, i32 170, i32 89, i32 26, i32 12, i32 92, i32 6, i32 252, i32 106, i32 11, i32 151, i32 83, i32 54, i32 252, i32 42, i32 165, i32 90, i32 155, i32 48, i32 239, i32 35, i32 175, i32 57, i32 93, i32 154, i32 107, i32 117, i32 87, i32 72, i32 11], [32 x i32] [i32 254, i32 130, i32 177, i32 116, i32 49, i32 138, i32 167, i32 111, i32 86, i32 189, i32 141, i32 244, i32 224, i32 148, i32 81, i32 89, i32 222, i32 44, i32 90, i32 244, i32 132, i32 107, i32 74, i32 136, i32 147, i32 192, i32 12, i32 154, i32 172, i32 167, i32 160, i32 104], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 101, i32 156, i32 93, i32 240, i32 55, i32 4, i32 240, i32 52, i32 105, i32 42, i32 240, i32 165, i32 100, i32 202, i32 222, i32 43, i32 91, i32 21, i32 16, i32 210, i32 171, i32 6, i32 221, i32 196, i32 176, i32 182, i32 91, i32 193, i32 23, i32 223, i32 143, i32 2], [32 x i32] [i32 93, i32 147, i32 85, i32 223, i32 155, i32 18, i32 25, i32 236, i32 147, i32 133, i32 66, i32 158, i32 102, i32 15, i32 157, i32 175, i32 153, i32 175, i32 38, i32 137, i32 188, i32 97, i32 253, i32 255, i32 206, i32 75, i32 244, i32 51, i32 149, i32 201, i32 53, i32 88], [32 x i32] [i32 0, i32 169, i32 76, i32 178, i32 18, i32 248, i32 50, i32 168, i32 122, i32 0, i32 75, i32 73, i32 50, i32 186, i32 31, i32 93, i32 68, i32 142, i32 68, i32 122, i32 220, i32 17, i32 251, i32 57, i32 8, i32 87, i32 135, i32 165, i32 18, i32 66, i32 147, i32 14], [32 x i32] [i32 109, i32 124, i32 130, i32 50, i32 56, i32 85, i32 87, i32 116, i32 91, i32 125, i32 195, i32 196, i32 251, i32 6, i32 41, i32 240, i32 19, i32 85, i32 84, i32 198, i32 167, i32 220, i32 76, i32 159, i32 152, i32 73, i32 32, i32 168, i32 195, i32 141, i32 250, i32 72], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 252, i32 187, i32 213, i32 120, i32 109, i32 29, i32 212, i32 153, i32 180, i32 170, i32 68, i32 68, i32 122, i32 27, i32 216, i32 254, i32 180, i32 153, i32 185, i32 204, i32 231, i32 196, i32 211, i32 58, i32 115, i32 131, i32 65, i32 92, i32 64, i32 215, i32 45, i32 85], [32 x i32] [i32 211, i32 17, i32 61, i32 171, i32 239, i32 44, i32 237, i32 177, i32 61, i32 124, i32 50, i32 129, i32 107, i32 254, i32 248, i32 28, i32 60, i32 123, i32 192, i32 97, i32 223, i32 184, i32 117, i32 118, i32 127, i32 170, i32 216, i32 147, i32 175, i32 61, i32 232, i32 61], [32 x i32] [i32 192, i32 97, i32 72, i32 72, i32 23, i32 244, i32 158, i32 24, i32 81, i32 45, i32 234, i32 47, i32 242, i32 242, i32 224, i32 163, i32 20, i32 183, i32 139, i32 58, i32 48, i32 245, i32 129, i32 193, i32 93, i32 113, i32 57, i32 98, i32 85, i32 31, i32 96, i32 90], [32 x i32] [i32 206, i32 96, i32 9, i32 108, i32 245, i32 118, i32 23, i32 36, i32 128, i32 58, i32 150, i32 199, i32 148, i32 46, i32 247, i32 107, i32 239, i32 181, i32 5, i32 150, i32 239, i32 211, i32 123, i32 81, i32 218, i32 5, i32 68, i32 103, i32 188, i32 7, i32 33, i32 78], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 248, i32 173, i32 67, i32 194, i32 23, i32 6, i32 226, i32 228, i32 169, i32 134, i32 205, i32 24, i32 215, i32 120, i32 200, i32 116, i32 102, i32 210, i32 9, i32 24, i32 165, i32 241, i32 202, i32 166, i32 98, i32 146, i32 193, i32 203, i32 0, i32 235, i32 66, i32 46], [32 x i32] [i32 32, i32 11, i32 161, i32 8, i32 25, i32 173, i32 57, i32 84, i32 234, i32 62, i32 35, i32 9, i32 182, i32 226, i32 210, i32 188, i32 77, i32 252, i32 156, i32 240, i32 19, i32 22, i32 34, i32 63, i32 185, i32 210, i32 17, i32 134, i32 144, i32 85, i32 206, i32 60], [32 x i32] [i32 163, i32 100, i32 23, i32 155, i32 139, i32 200, i32 58, i32 97, i32 230, i32 157, i32 198, i32 237, i32 123, i32 3, i32 82, i32 38, i32 157, i32 58, i32 179, i32 19, i32 204, i32 138, i32 253, i32 44, i32 26, i32 29, i32 237, i32 19, i32 208, i32 85, i32 87, i32 14], [32 x i32] [i32 44, i32 40, i32 244, i32 58, i32 246, i32 222, i32 10, i32 224, i32 65, i32 68, i32 35, i32 248, i32 63, i32 3, i32 100, i32 159, i32 195, i32 85, i32 76, i32 198, i32 193, i32 148, i32 28, i32 36, i32 93, i32 95, i32 146, i32 69, i32 150, i32 87, i32 55, i32 20], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 53, i32 176, i32 230, i32 115, i32 6, i32 183, i32 55, i32 224, i32 248, i32 176, i32 34, i32 232, i32 210, i32 237, i32 11, i32 239, i32 230, i32 198, i32 90, i32 153, i32 158, i32 26, i32 159, i32 4, i32 151, i32 228, i32 77, i32 11, i32 190, i32 186, i32 68, i32 64], [32 x i32] [i32 53, i32 163, i32 120, i32 209, i32 17, i32 15, i32 117, i32 211, i32 112, i32 70, i32 219, i32 32, i32 81, i32 203, i32 146, i32 128, i32 84, i32 16, i32 116, i32 54, i32 134, i32 169, i32 215, i32 163, i32 8, i32 120, i32 241, i32 1, i32 41, i32 248, i32 128, i32 59], [32 x i32] [i32 167, i32 187, i32 246, i32 142, i32 173, i32 221, i32 247, i32 144, i32 221, i32 95, i32 147, i32 137, i32 174, i32 4, i32 55, i32 230, i32 154, i32 183, i32 232, i32 192, i32 223, i32 22, i32 42, i32 191, i32 196, i32 58, i32 60, i32 65, i32 213, i32 137, i32 114, i32 90], [32 x i32] [i32 30, i32 212, i32 147, i32 87, i32 226, i32 23, i32 231, i32 157, i32 171, i32 60, i32 85, i32 3, i32 130, i32 47, i32 43, i32 219, i32 86, i32 30, i32 48, i32 46, i32 36, i32 71, i32 110, i32 230, i32 255, i32 51, i32 36, i32 44, i32 117, i32 81, i32 212, i32 103], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 105, i32 251, i32 161, i32 156, i32 166, i32 117, i32 73, i32 125, i32 96, i32 115, i32 64, i32 66, i32 196, i32 19, i32 10, i32 149, i32 121, i32 30, i32 4, i32 131, i32 148, i32 153, i32 155, i32 30, i32 12, i32 232, i32 31, i32 84, i32 239, i32 203, i32 192, i32 82], [32 x i32] [i32 233, i32 221, i32 94, i32 85, i32 176, i32 10, i32 222, i32 33, i32 76, i32 90, i32 46, i32 212, i32 128, i32 58, i32 87, i32 146, i32 122, i32 241, i32 196, i32 44, i32 64, i32 175, i32 47, i32 201, i32 146, i32 3, i32 229, i32 90, i32 188, i32 220, i32 244, i32 9], [32 x i32] [i32 157, i32 69, i32 214, i32 128, i32 230, i32 69, i32 170, i32 244, i32 21, i32 170, i32 92, i32 52, i32 135, i32 153, i32 162, i32 140, i32 38, i32 132, i32 98, i32 125, i32 182, i32 41, i32 192, i32 82, i32 234, i32 245, i32 129, i32 24, i32 15, i32 53, i32 169, i32 14], [32 x i32] [i32 21, i32 85, i32 55, i32 198, i32 28, i32 39, i32 28, i32 109, i32 20, i32 79, i32 202, i32 164, i32 196, i32 136, i32 37, i32 70, i32 57, i32 252, i32 90, i32 229, i32 254, i32 41, i32 17, i32 105, i32 245, i32 114, i32 132, i32 77, i32 120, i32 159, i32 148, i32 21], [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [32 x i32] [i32 184, i32 66, i32 28, i32 3, i32 173, i32 44, i32 3, i32 142, i32 172, i32 215, i32 152, i32 41, i32 19, i32 198, i32 2, i32 41, i32 181, i32 212, i32 231, i32 207, i32 204, i32 139, i32 131, i32 236, i32 53, i32 199, i32 156, i32 116, i32 183, i32 173, i32 133, i32 95], [32 x i32] [i32 44, i32 108, i32 247, i32 102, i32 164, i32 98, i32 107, i32 57, i32 179, i32 186, i32 101, i32 211, i32 28, i32 248, i32 17, i32 170, i32 190, i32 220, i32 128, i32 89, i32 135, i32 245, i32 123, i32 229, i32 227, i32 179, i32 62, i32 57, i32 218, i32 190, i32 136, i32 9], [32 x i32] [i32 218, i32 124, i32 164, i32 12, i32 244, i32 186, i32 110, i32 225, i32 137, i32 181, i32 89, i32 202, i32 241, i32 192, i32 41, i32 54, i32 9, i32 68, i32 226, i32 127, i32 209, i32 99, i32 21, i32 153, i32 234, i32 37, i32 207, i32 12, i32 157, i32 192, i32 68, i32 111], [32 x i32] [i32 105, i32 62, i32 71, i32 151, i32 44, i32 175, i32 82, i32 124, i32 120, i32 131, i32 173, i32 27, i32 57, i32 130, i32 47, i32 2, i32 111, i32 71, i32 219, i32 42, i32 176, i32 225, i32 145, i32 153, i32 85, i32 184, i32 153, i32 58, i32 160, i32 68, i32 17, i32 81]] ; [#uses=36 type=[425 x [32 x i32]]*]
@ge25519_base_multiples_affine.x.v = internal constant [425 x [32 x i32]] [[32 x i32] zeroinitializer, [32 x i32] [i32 26, i32 213, i32 37, i32 143, i32 96, i32 45, i32 86, i32 201, i32 178, i32 167, i32 37, i32 149, i32 96, i32 199, i32 44, i32 105, i32 92, i32 220, i32 214, i32 253, i32 49, i32 226, i32 164, i32 192, i32 254, i32 83, i32 110, i32 205, i32 211, i32 54, i32 105, i32 33], [32 x i32] [i32 14, i32 206, i32 67, i32 40, i32 78, i32 161, i32 197, i32 131, i32 95, i32 164, i32 215, i32 21, i32 69, i32 142, i32 13, i32 8, i32 172, i32 231, i32 51, i32 24, i32 125, i32 59, i32 4, i32 61, i32 108, i32 4, i32 90, i32 159, i32 76, i32 56, i32 171, i32 54], [32 x i32] [i32 92, i32 226, i32 248, i32 211, i32 95, i32 72, i32 98, i32 172, i32 134, i32 72, i32 98, i32 129, i32 25, i32 152, i32 67, i32 99, i32 58, i32 200, i32 218, i32 62, i32 116, i32 174, i32 244, i32 31, i32 73, i32 143, i32 146, i32 34, i32 74, i32 156, i32 174, i32 103], [32 x i32] [i32 112, i32 248, i32 201, i32 196, i32 87, i32 166, i32 58, i32 73, i32 71, i32 21, i32 206, i32 147, i32 193, i32 158, i32 115, i32 26, i32 249, i32 32, i32 53, i32 122, i32 184, i32 212, i32 37, i32 131, i32 70, i32 241, i32 207, i32 86, i32 219, i32 168, i32 61, i32 32], [32 x i32] zeroinitializer, [32 x i32] [i32 200, i32 132, i32 165, i32 8, i32 188, i32 253, i32 135, i32 59, i32 153, i32 139, i32 105, i32 128, i32 123, i32 198, i32 58, i32 235, i32 147, i32 207, i32 78, i32 248, i32 92, i32 45, i32 134, i32 66, i32 182, i32 113, i32 215, i32 151, i32 95, i32 225, i32 66, i32 103], [32 x i32] [i32 248, i32 249, i32 40, i32 108, i32 109, i32 89, i32 178, i32 89, i32 116, i32 35, i32 191, i32 231, i32 51, i32 141, i32 87, i32 9, i32 145, i32 156, i32 36, i32 8, i32 21, i32 43, i32 226, i32 184, i32 238, i32 58, i32 229, i32 39, i32 6, i32 134, i32 164, i32 35], [32 x i32] [i32 129, i32 107, i32 136, i32 232, i32 30, i32 199, i32 119, i32 150, i32 14, i32 161, i32 169, i32 82, i32 224, i32 216, i32 14, i32 97, i32 158, i32 121, i32 45, i32 149, i32 156, i32 141, i32 150, i32 224, i32 6, i32 64, i32 93, i32 135, i32 40, i32 95, i32 152, i32 112], [32 x i32] [i32 38, i32 79, i32 126, i32 151, i32 246, i32 64, i32 221, i32 79, i32 252, i32 82, i32 120, i32 249, i32 144, i32 49, i32 3, i32 230, i32 125, i32 86, i32 57, i32 11, i32 29, i32 86, i32 130, i32 133, i32 249, i32 26, i32 66, i32 23, i32 105, i32 108, i32 207, i32 57], [32 x i32] zeroinitializer, [32 x i32] [i32 11, i32 164, i32 60, i32 176, i32 15, i32 122, i32 81, i32 241, i32 120, i32 214, i32 217, i32 106, i32 253, i32 70, i32 232, i32 184, i32 168, i32 121, i32 29, i32 135, i32 249, i32 144, i32 242, i32 156, i32 19, i32 41, i32 248, i32 11, i32 32, i32 100, i32 250, i32 5], [32 x i32] [i32 135, i32 221, i32 207, i32 240, i32 91, i32 73, i32 162, i32 93, i32 64, i32 122, i32 35, i32 38, i32 164, i32 122, i32 131, i32 138, i32 183, i32 139, i32 210, i32 26, i32 191, i32 234, i32 2, i32 36, i32 8, i32 95, i32 123, i32 169, i32 177, i32 190, i32 157, i32 55], [32 x i32] [i32 71, i32 252, i32 171, i32 90, i32 23, i32 240, i32 133, i32 86, i32 58, i32 48, i32 134, i32 32, i32 40, i32 75, i32 142, i32 68, i32 116, i32 58, i32 110, i32 2, i32 241, i32 50, i32 143, i32 159, i32 63, i32 8, i32 53, i32 233, i32 202, i32 22, i32 95, i32 110], [32 x i32] [i32 86, i32 165, i32 194, i32 12, i32 221, i32 188, i32 184, i32 32, i32 109, i32 87, i32 97, i32 181, i32 251, i32 120, i32 181, i32 212, i32 73, i32 84, i32 144, i32 38, i32 193, i32 203, i32 233, i32 230, i32 191, i32 236, i32 29, i32 78, i32 237, i32 7, i32 126, i32 94], [32 x i32] zeroinitializer, [32 x i32] [i32 10, i32 52, i32 205, i32 130, i32 60, i32 51, i32 9, i32 84, i32 210, i32 97, i32 57, i32 48, i32 155, i32 253, i32 239, i32 33, i32 38, i32 212, i32 112, i32 250, i32 238, i32 249, i32 49, i32 51, i32 115, i32 132, i32 208, i32 179, i32 129, i32 191, i32 236, i32 46], [32 x i32] [i32 104, i32 43, i32 74, i32 91, i32 213, i32 199, i32 81, i32 145, i32 29, i32 225, i32 42, i32 75, i32 196, i32 71, i32 241, i32 188, i32 122, i32 179, i32 203, i32 200, i32 182, i32 124, i32 172, i32 144, i32 5, i32 253, i32 243, i32 249, i32 82, i32 58, i32 17, i32 107], [32 x i32] [i32 21, i32 6, i32 73, i32 182, i32 138, i32 60, i32 234, i32 47, i32 52, i32 32, i32 20, i32 195, i32 170, i32 214, i32 175, i32 44, i32 62, i32 189, i32 101, i32 32, i32 226, i32 77, i32 75, i32 59, i32 235, i32 159, i32 74, i32 195, i32 173, i32 164, i32 59, i32 96], [32 x i32] [i32 247, i32 23, i32 19, i32 189, i32 251, i32 188, i32 210, i32 236, i32 69, i32 179, i32 21, i32 49, i32 233, i32 175, i32 130, i32 132, i32 61, i32 40, i32 198, i32 252, i32 17, i32 245, i32 65, i32 181, i32 139, i32 211, i32 18, i32 118, i32 82, i32 231, i32 26, i32 60], [32 x i32] zeroinitializer, [32 x i32] [i32 234, i32 214, i32 222, i32 41, i32 58, i32 0, i32 185, i32 2, i32 89, i32 203, i32 38, i32 196, i32 186, i32 153, i32 177, i32 151, i32 47, i32 142, i32 0, i32 146, i32 38, i32 79, i32 82, i32 235, i32 71, i32 27, i32 137, i32 139, i32 36, i32 192, i32 19, i32 125], [32 x i32] [i32 222, i32 201, i32 177, i32 49, i32 16, i32 22, i32 170, i32 53, i32 20, i32 106, i32 212, i32 181, i32 52, i32 130, i32 113, i32 210, i32 74, i32 93, i32 154, i32 31, i32 83, i32 38, i32 60, i32 229, i32 142, i32 141, i32 51, i32 127, i32 255, i32 169, i32 213, i32 23], [32 x i32] [i32 100, i32 29, i32 73, i32 19, i32 47, i32 113, i32 236, i32 105, i32 135, i32 208, i32 66, i32 238, i32 19, i32 236, i32 227, i32 237, i32 86, i32 123, i32 191, i32 189, i32 140, i32 47, i32 125, i32 123, i32 157, i32 40, i32 236, i32 142, i32 118, i32 47, i32 111, i32 8], [32 x i32] [i32 138, i32 75, i32 231, i32 56, i32 188, i32 218, i32 194, i32 176, i32 133, i32 225, i32 74, i32 254, i32 45, i32 68, i32 132, i32 203, i32 32, i32 107, i32 45, i32 191, i32 17, i32 156, i32 215, i32 190, i32 211, i32 62, i32 95, i32 191, i32 104, i32 188, i32 168, i32 7], [32 x i32] zeroinitializer, [32 x i32] [i32 2, i32 255, i32 50, i32 43, i32 92, i32 147, i32 84, i32 50, i32 232, i32 87, i32 84, i32 26, i32 139, i32 51, i32 96, i32 101, i32 211, i32 103, i32 164, i32 193, i32 38, i32 196, i32 164, i32 52, i32 31, i32 155, i32 167, i32 169, i32 244, i32 217, i32 79, i32 91], [32 x i32] [i32 101, i32 165, i32 17, i32 132, i32 138, i32 103, i32 157, i32 158, i32 209, i32 68, i32 104, i32 122, i32 52, i32 225, i32 159, i32 163, i32 84, i32 205, i32 7, i32 202, i32 121, i32 31, i32 84, i32 47, i32 19, i32 112, i32 78, i32 238, i32 162, i32 250, i32 231, i32 93], [32 x i32] [i32 167, i32 214, i32 46, i32 213, i32 204, i32 212, i32 203, i32 90, i32 59, i32 167, i32 249, i32 70, i32 3, i32 29, i32 173, i32 43, i32 52, i32 49, i32 144, i32 0, i32 70, i32 8, i32 130, i32 20, i32 196, i32 224, i32 156, i32 240, i32 227, i32 85, i32 67, i32 49], [32 x i32] [i32 39, i32 79, i32 208, i32 114, i32 177, i32 17, i32 20, i32 39, i32 21, i32 148, i32 72, i32 129, i32 126, i32 116, i32 216, i32 50, i32 213, i32 209, i32 17, i32 40, i32 96, i32 99, i32 54, i32 50, i32 55, i32 181, i32 19, i32 28, i32 160, i32 55, i32 227, i32 116], [32 x i32] zeroinitializer, [32 x i32] [i32 52, i32 148, i32 242, i32 100, i32 84, i32 71, i32 55, i32 7, i32 64, i32 138, i32 32, i32 186, i32 74, i32 85, i32 215, i32 63, i32 71, i32 186, i32 37, i32 35, i32 20, i32 176, i32 44, i32 232, i32 85, i32 168, i32 166, i32 239, i32 81, i32 189, i32 111, i32 106], [32 x i32] [i32 52, i32 150, i32 154, i32 246, i32 197, i32 224, i32 20, i32 3, i32 36, i32 14, i32 76, i32 173, i32 158, i32 154, i32 112, i32 35, i32 150, i32 178, i32 241, i32 46, i32 157, i32 195, i32 50, i32 155, i32 84, i32 165, i32 115, i32 222, i32 136, i32 177, i32 62, i32 36], [32 x i32] [i32 116, i32 222, i32 18, i32 243, i32 104, i32 183, i32 102, i32 195, i32 238, i32 104, i32 220, i32 129, i32 181, i32 85, i32 153, i32 171, i32 217, i32 40, i32 99, i32 109, i32 139, i32 64, i32 105, i32 117, i32 108, i32 205, i32 92, i32 42, i32 126, i32 50, i32 123, i32 41], [32 x i32] [i32 237, i32 181, i32 154, i32 140, i32 154, i32 221, i32 39, i32 244, i32 127, i32 71, i32 217, i32 82, i32 167, i32 205, i32 101, i32 165, i32 49, i32 34, i32 237, i32 166, i32 99, i32 91, i32 128, i32 74, i32 173, i32 77, i32 237, i32 191, i32 238, i32 73, i32 179, i32 6], [32 x i32] zeroinitializer, [32 x i32] [i32 125, i32 79, i32 156, i32 25, i32 192, i32 74, i32 49, i32 236, i32 249, i32 170, i32 235, i32 178, i32 22, i32 156, i32 163, i32 102, i32 95, i32 209, i32 212, i32 237, i32 184, i32 146, i32 28, i32 171, i32 218, i32 234, i32 217, i32 87, i32 223, i32 76, i32 42, i32 72], [32 x i32] [i32 60, i32 143, i32 159, i32 51, i32 42, i32 31, i32 67, i32 51, i32 143, i32 104, i32 255, i32 31, i32 61, i32 115, i32 107, i32 191, i32 104, i32 204, i32 125, i32 19, i32 108, i32 36, i32 75, i32 204, i32 77, i32 36, i32 13, i32 254, i32 222, i32 134, i32 173, i32 59], [32 x i32] [i32 6, i32 249, i32 41, i32 90, i32 219, i32 61, i32 132, i32 82, i32 171, i32 204, i32 107, i32 96, i32 157, i32 183, i32 74, i32 14, i32 54, i32 99, i32 145, i32 173, i32 160, i32 149, i32 176, i32 151, i32 137, i32 78, i32 207, i32 125, i32 60, i32 229, i32 124, i32 40], [32 x i32] [i32 84, i32 190, i32 117, i32 203, i32 5, i32 176, i32 84, i32 183, i32 231, i32 38, i32 134, i32 74, i32 252, i32 25, i32 207, i32 39, i32 70, i32 212, i32 34, i32 150, i32 90, i32 17, i32 232, i32 213, i32 27, i32 237, i32 113, i32 197, i32 93, i32 200, i32 175, i32 69], [32 x i32] zeroinitializer, [32 x i32] [i32 119, i32 58, i32 212, i32 216, i32 39, i32 207, i32 232, i32 161, i32 114, i32 157, i32 202, i32 221, i32 13, i32 150, i32 218, i32 121, i32 237, i32 86, i32 66, i32 21, i32 96, i32 199, i32 28, i32 107, i32 38, i32 48, i32 246, i32 106, i32 149, i32 103, i32 243, i32 10], [32 x i32] [i32 51, i32 13, i32 231, i32 186, i32 79, i32 7, i32 223, i32 141, i32 234, i32 125, i32 160, i32 197, i32 214, i32 177, i32 176, i32 229, i32 87, i32 27, i32 91, i32 245, i32 69, i32 19, i32 20, i32 100, i32 90, i32 235, i32 92, i32 252, i32 84, i32 1, i32 118, i32 43], [32 x i32] [i32 216, i32 185, i32 17, i32 232, i32 54, i32 63, i32 66, i32 193, i32 202, i32 220, i32 211, i32 241, i32 200, i32 35, i32 61, i32 79, i32 81, i32 123, i32 157, i32 141, i32 216, i32 228, i32 160, i32 170, i32 243, i32 4, i32 214, i32 17, i32 147, i32 200, i32 53, i32 69], [32 x i32] [i32 107, i32 219, i32 91, i32 156, i32 198, i32 146, i32 188, i32 35, i32 175, i32 197, i32 184, i32 117, i32 248, i32 66, i32 250, i32 214, i32 182, i32 132, i32 148, i32 99, i32 152, i32 147, i32 72, i32 120, i32 56, i32 205, i32 187, i32 24, i32 52, i32 195, i32 219, i32 103], [32 x i32] zeroinitializer, [32 x i32] [i32 121, i32 132, i32 68, i32 25, i32 189, i32 233, i32 84, i32 196, i32 192, i32 110, i32 42, i32 168, i32 168, i32 155, i32 67, i32 213, i32 113, i32 34, i32 95, i32 220, i32 1, i32 250, i32 223, i32 179, i32 184, i32 71, i32 75, i32 10, i32 165, i32 68, i32 234, i32 41], [32 x i32] [i32 43, i32 190, i32 175, i32 161, i32 109, i32 47, i32 11, i32 177, i32 143, i32 227, i32 224, i32 56, i32 205, i32 11, i32 65, i32 27, i32 74, i32 21, i32 7, i32 243, i32 111, i32 220, i32 184, i32 233, i32 222, i32 178, i32 163, i32 64, i32 1, i32 166, i32 69, i32 30], [32 x i32] [i32 253, i32 103, i32 107, i32 113, i32 155, i32 129, i32 83, i32 57, i32 57, i32 244, i32 184, i32 213, i32 195, i32 48, i32 155, i32 59, i32 124, i32 163, i32 240, i32 208, i32 132, i32 33, i32 214, i32 191, i32 183, i32 76, i32 135, i32 19, i32 69, i32 45, i32 167, i32 85], [32 x i32] [i32 93, i32 147, i32 201, i32 190, i32 170, i32 144, i32 205, i32 155, i32 251, i32 115, i32 126, i32 176, i32 100, i32 152, i32 87, i32 68, i32 66, i32 65, i32 177, i32 175, i32 234, i32 193, i32 195, i32 34, i32 255, i32 96, i32 70, i32 203, i32 97, i32 129, i32 112, i32 97], [32 x i32] zeroinitializer, [32 x i32] [i32 145, i32 247, i32 81, i32 217, i32 239, i32 125, i32 66, i32 1, i32 19, i32 233, i32 184, i32 127, i32 166, i32 73, i32 23, i32 100, i32 33, i32 128, i32 131, i32 44, i32 99, i32 76, i32 96, i32 9, i32 89, i32 145, i32 146, i32 119, i32 57, i32 81, i32 244, i32 72], [32 x i32] [i32 216, i32 206, i32 220, i32 249, i32 60, i32 75, i32 162, i32 29, i32 44, i32 47, i32 54, i32 190, i32 122, i32 252, i32 205, i32 188, i32 220, i32 249, i32 48, i32 189, i32 255, i32 5, i32 199, i32 228, i32 142, i32 23, i32 98, i32 248, i32 77, i32 160, i32 86, i32 121], [32 x i32] [i32 131, i32 225, i32 110, i32 169, i32 7, i32 51, i32 62, i32 131, i32 255, i32 203, i32 28, i32 159, i32 177, i32 163, i32 180, i32 201, i32 225, i32 7, i32 151, i32 255, i32 248, i32 35, i32 143, i32 206, i32 64, i32 253, i32 46, i32 94, i32 219, i32 22, i32 67, i32 45], [32 x i32] [i32 187, i32 12, i32 188, i32 106, i32 164, i32 151, i32 23, i32 147, i32 45, i32 111, i32 222, i32 114, i32 16, i32 28, i32 8, i32 44, i32 15, i32 128, i32 50, i32 104, i32 39, i32 212, i32 171, i32 221, i32 197, i32 88, i32 97, i32 19, i32 109, i32 17, i32 30, i32 77], [32 x i32] zeroinitializer, [32 x i32] [i32 21, i32 125, i32 18, i32 72, i32 130, i32 20, i32 66, i32 205, i32 50, i32 212, i32 75, i32 193, i32 114, i32 97, i32 42, i32 140, i32 236, i32 226, i32 248, i32 36, i32 69, i32 148, i32 227, i32 190, i32 221, i32 103, i32 168, i32 119, i32 90, i32 174, i32 91, i32 75], [32 x i32] [i32 223, i32 252, i32 105, i32 40, i32 35, i32 63, i32 91, i32 248, i32 59, i32 36, i32 55, i32 243, i32 29, i32 213, i32 34, i32 107, i32 208, i32 152, i32 168, i32 108, i32 207, i32 255, i32 6, i32 225, i32 19, i32 223, i32 185, i32 193, i32 12, i32 169, i32 191, i32 51], [32 x i32] [i32 103, i32 2, i32 232, i32 173, i32 169, i32 52, i32 212, i32 240, i32 21, i32 129, i32 170, i32 199, i32 77, i32 135, i32 148, i32 234, i32 117, i32 231, i32 76, i32 148, i32 4, i32 14, i32 105, i32 135, i32 231, i32 81, i32 145, i32 16, i32 3, i32 199, i32 190, i32 86], [32 x i32] [i32 198, i32 239, i32 185, i32 192, i32 43, i32 34, i32 8, i32 30, i32 113, i32 112, i32 179, i32 53, i32 156, i32 122, i32 1, i32 146, i32 68, i32 154, i32 246, i32 176, i32 88, i32 149, i32 193, i32 155, i32 2, i32 237, i32 45, i32 124, i32 52, i32 41, i32 73, i32 68], [32 x i32] zeroinitializer, [32 x i32] [i32 208, i32 211, i32 66, i32 237, i32 29, i32 0, i32 60, i32 21, i32 44, i32 156, i32 119, i32 129, i32 210, i32 115, i32 209, i32 6, i32 213, i32 196, i32 127, i32 148, i32 187, i32 146, i32 45, i32 44, i32 75, i32 69, i32 75, i32 233, i32 42, i32 137, i32 107, i32 43], [32 x i32] [i32 180, i32 4, i32 46, i32 66, i32 203, i32 31, i32 43, i32 17, i32 81, i32 123, i32 8, i32 172, i32 170, i32 62, i32 158, i32 82, i32 96, i32 183, i32 194, i32 97, i32 87, i32 140, i32 132, i32 213, i32 24, i32 166, i32 25, i32 252, i32 183, i32 117, i32 145, i32 27], [32 x i32] [i32 227, i32 174, i32 200, i32 193, i32 113, i32 117, i32 49, i32 0, i32 55, i32 65, i32 92, i32 14, i32 57, i32 218, i32 115, i32 160, i32 199, i32 151, i32 54, i32 108, i32 91, i32 242, i32 238, i32 100, i32 10, i32 61, i32 137, i32 30, i32 29, i32 73, i32 140, i32 55], [32 x i32] [i32 135, i32 238, i32 166, i32 86, i32 158, i32 194, i32 154, i32 86, i32 36, i32 66, i32 133, i32 77, i32 152, i32 49, i32 30, i32 96, i32 77, i32 135, i32 133, i32 4, i32 174, i32 70, i32 18, i32 249, i32 142, i32 127, i32 228, i32 127, i32 246, i32 28, i32 55, i32 1], [32 x i32] zeroinitializer, [32 x i32] [i32 114, i32 211, i32 174, i32 166, i32 202, i32 143, i32 205, i32 204, i32 120, i32 142, i32 25, i32 77, i32 167, i32 210, i32 39, i32 233, i32 164, i32 60, i32 22, i32 91, i32 132, i32 128, i32 249, i32 208, i32 204, i32 106, i32 30, i32 202, i32 30, i32 103, i32 189, i32 99], [32 x i32] [i32 229, i32 16, i32 71, i32 59, i32 250, i32 144, i32 252, i32 48, i32 181, i32 234, i32 111, i32 86, i32 143, i32 251, i32 14, i32 167, i32 59, i32 200, i32 178, i32 255, i32 2, i32 122, i32 51, i32 148, i32 147, i32 42, i32 3, i32 224, i32 150, i32 58, i32 108, i32 15], [32 x i32] [i32 63, i32 117, i32 142, i32 180, i32 255, i32 216, i32 221, i32 214, i32 55, i32 87, i32 157, i32 109, i32 59, i32 189, i32 213, i32 96, i32 136, i32 101, i32 154, i32 185, i32 74, i32 104, i32 132, i32 162, i32 103, i32 221, i32 23, i32 37, i32 151, i32 4, i32 139, i32 94], [32 x i32] [i32 64, i32 180, i32 171, i32 230, i32 173, i32 159, i32 70, i32 105, i32 74, i32 179, i32 142, i32 170, i32 234, i32 156, i32 138, i32 32, i32 22, i32 93, i32 140, i32 19, i32 189, i32 246, i32 29, i32 197, i32 36, i32 189, i32 144, i32 42, i32 28, i32 199, i32 19, i32 59], [32 x i32] zeroinitializer, [32 x i32] [i32 32, i32 168, i32 136, i32 227, i32 145, i32 192, i32 110, i32 187, i32 138, i32 39, i32 130, i32 81, i32 131, i32 178, i32 40, i32 169, i32 131, i32 235, i32 166, i32 169, i32 77, i32 23, i32 89, i32 34, i32 84, i32 0, i32 80, i32 69, i32 203, i32 72, i32 75, i32 24], [32 x i32] [i32 52, i32 92, i32 19, i32 251, i32 192, i32 227, i32 120, i32 43, i32 84, i32 88, i32 34, i32 155, i32 118, i32 129, i32 127, i32 147, i32 156, i32 37, i32 60, i32 210, i32 233, i32 150, i32 33, i32 38, i32 8, i32 245, i32 237, i32 149, i32 17, i32 174, i32 4, i32 90], [32 x i32] [i32 179, i32 64, i32 41, i32 209, i32 203, i32 27, i32 8, i32 158, i32 156, i32 183, i32 83, i32 185, i32 59, i32 113, i32 8, i32 149, i32 18, i32 26, i32 88, i32 175, i32 126, i32 130, i32 82, i32 67, i32 79, i32 17, i32 57, i32 244, i32 147, i32 26, i32 38, i32 5], [32 x i32] [i32 62, i32 168, i32 56, i32 194, i32 87, i32 86, i32 66, i32 154, i32 177, i32 226, i32 248, i32 69, i32 170, i32 17, i32 72, i32 95, i32 23, i32 196, i32 84, i32 39, i32 220, i32 93, i32 170, i32 221, i32 65, i32 188, i32 223, i32 129, i32 185, i32 83, i32 238, i32 82], [32 x i32] zeroinitializer, [32 x i32] [i32 37, i32 36, i32 29, i32 138, i32 103, i32 32, i32 238, i32 66, i32 235, i32 56, i32 237, i32 11, i32 139, i32 205, i32 70, i32 157, i32 94, i32 107, i32 30, i32 36, i32 157, i32 18, i32 5, i32 26, i32 204, i32 5, i32 78, i32 146, i32 56, i32 225, i32 31, i32 80], [32 x i32] [i32 104, i32 59, i32 10, i32 57, i32 29, i32 106, i32 21, i32 87, i32 252, i32 240, i32 99, i32 84, i32 219, i32 57, i32 219, i32 232, i32 92, i32 100, i32 255, i32 160, i32 9, i32 79, i32 59, i32 183, i32 50, i32 96, i32 153, i32 148, i32 253, i32 148, i32 130, i32 45], [32 x i32] [i32 120, i32 82, i32 135, i32 201, i32 151, i32 99, i32 177, i32 221, i32 84, i32 95, i32 193, i32 248, i32 241, i32 6, i32 166, i32 168, i32 163, i32 136, i32 130, i32 212, i32 203, i32 166, i32 25, i32 221, i32 209, i32 17, i32 135, i32 8, i32 23, i32 76, i32 55, i32 42], [32 x i32] [i32 29, i32 218, i32 228, i32 97, i32 3, i32 80, i32 169, i32 139, i32 104, i32 24, i32 239, i32 178, i32 28, i32 132, i32 59, i32 162, i32 68, i32 149, i32 163, i32 4, i32 59, i32 214, i32 153, i32 0, i32 175, i32 118, i32 66, i32 103, i32 2, i32 125, i32 133, i32 86], [32 x i32] zeroinitializer, [32 x i32] [i32 82, i32 253, i32 4, i32 197, i32 251, i32 153, i32 231, i32 232, i32 251, i32 140, i32 225, i32 66, i32 3, i32 239, i32 157, i32 217, i32 158, i32 77, i32 247, i32 128, i32 207, i32 46, i32 204, i32 155, i32 69, i32 201, i32 123, i32 122, i32 188, i32 55, i32 168, i32 82], [32 x i32] [i32 83, i32 205, i32 243, i32 134, i32 64, i32 230, i32 57, i32 66, i32 149, i32 214, i32 203, i32 69, i32 26, i32 32, i32 200, i32 69, i32 75, i32 50, i32 105, i32 4, i32 177, i32 175, i32 32, i32 70, i32 199, i32 107, i32 35, i32 91, i32 105, i32 238, i32 48, i32 63], [32 x i32] [i32 202, i32 252, i32 136, i32 107, i32 150, i32 120, i32 10, i32 139, i32 131, i32 220, i32 188, i32 175, i32 64, i32 182, i32 141, i32 127, i32 239, i32 180, i32 209, i32 63, i32 204, i32 162, i32 116, i32 201, i32 194, i32 146, i32 85, i32 0, i32 171, i32 219, i32 191, i32 79], [32 x i32] [i32 228, i32 230, i32 109, i32 48, i32 125, i32 48, i32 53, i32 194, i32 120, i32 135, i32 249, i32 252, i32 107, i32 90, i32 195, i32 183, i32 101, i32 216, i32 46, i32 199, i32 165, i32 12, i32 198, i32 220, i32 18, i32 170, i32 214, i32 79, i32 197, i32 56, i32 188, i32 14], [32 x i32] zeroinitializer, [32 x i32] [i32 219, i32 73, i32 14, i32 230, i32 88, i32 16, i32 122, i32 82, i32 218, i32 181, i32 125, i32 55, i32 106, i32 62, i32 161, i32 120, i32 206, i32 199, i32 28, i32 36, i32 35, i32 219, i32 125, i32 251, i32 140, i32 141, i32 220, i32 48, i32 103, i32 105, i32 117, i32 59], [32 x i32] [i32 164, i32 235, i32 4, i32 164, i32 140, i32 143, i32 113, i32 39, i32 149, i32 133, i32 93, i32 85, i32 75, i32 177, i32 38, i32 38, i32 200, i32 174, i32 106, i32 125, i32 162, i32 33, i32 202, i32 206, i32 56, i32 171, i32 15, i32 208, i32 213, i32 43, i32 107, i32 0], [32 x i32] [i32 132, i32 86, i32 130, i32 182, i32 18, i32 112, i32 127, i32 247, i32 240, i32 189, i32 91, i32 169, i32 213, i32 197, i32 95, i32 89, i32 191, i32 127, i32 179, i32 85, i32 34, i32 2, i32 201, i32 68, i32 85, i32 135, i32 143, i32 150, i32 152, i32 100, i32 109, i32 21], [32 x i32] [i32 216, i32 43, i32 91, i32 22, i32 234, i32 32, i32 241, i32 211, i32 104, i32 143, i32 174, i32 91, i32 208, i32 169, i32 26, i32 25, i32 168, i32 54, i32 251, i32 43, i32 87, i32 136, i32 125, i32 144, i32 213, i32 166, i32 243, i32 220, i32 56, i32 137, i32 78, i32 31], [32 x i32] zeroinitializer, [32 x i32] [i32 37, i32 185, i32 194, i32 240, i32 114, i32 184, i32 21, i32 22, i32 204, i32 141, i32 60, i32 111, i32 37, i32 237, i32 244, i32 70, i32 46, i32 12, i32 96, i32 15, i32 226, i32 132, i32 52, i32 85, i32 137, i32 89, i32 52, i32 27, i32 245, i32 141, i32 254, i32 8], [32 x i32] [i32 116, i32 28, i32 20, i32 155, i32 212, i32 100, i32 97, i32 113, i32 90, i32 182, i32 33, i32 51, i32 79, i32 247, i32 142, i32 186, i32 165, i32 72, i32 154, i32 199, i32 250, i32 154, i32 240, i32 180, i32 98, i32 173, i32 242, i32 94, i32 204, i32 3, i32 36, i32 26], [32 x i32] [i32 21, i32 190, i32 154, i32 13, i32 186, i32 56, i32 114, i32 32, i32 138, i32 245, i32 190, i32 89, i32 147, i32 121, i32 183, i32 246, i32 106, i32 12, i32 56, i32 39, i32 26, i32 96, i32 244, i32 134, i32 59, i32 171, i32 90, i32 0, i32 160, i32 206, i32 33, i32 125], [32 x i32] [i32 228, i32 13, i32 244, i32 189, i32 238, i32 49, i32 16, i32 237, i32 203, i32 18, i32 134, i32 173, i32 212, i32 47, i32 144, i32 55, i32 50, i32 195, i32 11, i32 115, i32 236, i32 151, i32 133, i32 164, i32 1, i32 28, i32 118, i32 53, i32 254, i32 117, i32 221, i32 113], [32 x i32] zeroinitializer, [32 x i32] [i32 144, i32 112, i32 88, i32 32, i32 3, i32 30, i32 103, i32 178, i32 200, i32 155, i32 88, i32 197, i32 177, i32 235, i32 45, i32 74, i32 222, i32 130, i32 140, i32 242, i32 210, i32 20, i32 184, i32 112, i32 97, i32 78, i32 115, i32 214, i32 11, i32 107, i32 13, i32 48], [32 x i32] [i32 249, i32 200, i32 190, i32 140, i32 22, i32 129, i32 57, i32 150, i32 246, i32 23, i32 88, i32 200, i32 48, i32 88, i32 251, i32 194, i32 3, i32 69, i32 210, i32 82, i32 118, i32 224, i32 106, i32 38, i32 40, i32 92, i32 136, i32 89, i32 106, i32 90, i32 84, i32 66], [32 x i32] [i32 65, i32 250, i32 140, i32 225, i32 137, i32 143, i32 39, i32 200, i32 37, i32 143, i32 111, i32 95, i32 85, i32 248, i32 222, i32 149, i32 109, i32 47, i32 117, i32 22, i32 43, i32 78, i32 68, i32 253, i32 134, i32 110, i32 233, i32 112, i32 57, i32 118, i32 151, i32 126], [32 x i32] [i32 2, i32 58, i32 112, i32 65, i32 228, i32 17, i32 87, i32 35, i32 172, i32 230, i32 252, i32 84, i32 126, i32 205, i32 215, i32 34, i32 203, i32 118, i32 159, i32 32, i32 206, i32 160, i32 115, i32 118, i32 81, i32 59, i32 164, i32 248, i32 227, i32 98, i32 18, i32 108], [32 x i32] zeroinitializer, [32 x i32] [i32 245, i32 108, i32 212, i32 47, i32 15, i32 105, i32 15, i32 135, i32 63, i32 97, i32 101, i32 30, i32 53, i32 52, i32 133, i32 186, i32 2, i32 48, i32 172, i32 37, i32 61, i32 226, i32 98, i32 241, i32 204, i32 233, i32 27, i32 194, i32 239, i32 106, i32 66, i32 87], [32 x i32] [i32 245, i32 72, i32 11, i32 3, i32 197, i32 34, i32 125, i32 128, i32 8, i32 83, i32 254, i32 50, i32 177, i32 161, i32 138, i32 116, i32 111, i32 189, i32 63, i32 133, i32 244, i32 207, i32 245, i32 96, i32 175, i32 65, i32 126, i32 62, i32 70, i32 163, i32 90, i32 32], [32 x i32] [i32 179, i32 16, i32 69, i32 2, i32 105, i32 89, i32 46, i32 151, i32 217, i32 100, i32 248, i32 219, i32 37, i32 128, i32 220, i32 196, i32 213, i32 98, i32 60, i32 237, i32 101, i32 145, i32 173, i32 209, i32 87, i32 129, i32 148, i32 170, i32 161, i32 41, i32 252, i32 104], [32 x i32] [i32 55, i32 234, i32 254, i32 101, i32 59, i32 37, i32 232, i32 225, i32 194, i32 197, i32 2, i32 164, i32 190, i32 152, i32 10, i32 43, i32 97, i32 193, i32 155, i32 226, i32 213, i32 146, i32 230, i32 158, i32 125, i32 31, i32 202, i32 67, i32 136, i32 139, i32 44, i32 89], [32 x i32] zeroinitializer, [32 x i32] [i32 34, i32 175, i32 19, i32 55, i32 189, i32 55, i32 113, i32 172, i32 4, i32 70, i32 99, i32 172, i32 164, i32 119, i32 237, i32 37, i32 56, i32 224, i32 21, i32 168, i32 100, i32 0, i32 13, i32 206, i32 81, i32 1, i32 169, i32 188, i32 15, i32 3, i32 28, i32 4], [32 x i32] [i32 2, i32 162, i32 237, i32 244, i32 143, i32 107, i32 11, i32 62, i32 235, i32 53, i32 26, i32 213, i32 126, i32 219, i32 120, i32 0, i32 150, i32 138, i32 160, i32 180, i32 207, i32 96, i32 75, i32 212, i32 213, i32 249, i32 45, i32 191, i32 136, i32 189, i32 34, i32 98], [32 x i32] [i32 81, i32 22, i32 80, i32 124, i32 213, i32 93, i32 246, i32 153, i32 232, i32 119, i32 114, i32 78, i32 250, i32 98, i32 203, i32 118, i32 117, i32 12, i32 226, i32 113, i32 152, i32 146, i32 213, i32 250, i32 69, i32 223, i32 92, i32 111, i32 30, i32 158, i32 40, i32 105], [32 x i32] [i32 151, i32 165, i32 219, i32 139, i32 45, i32 170, i32 66, i32 17, i32 9, i32 242, i32 147, i32 187, i32 217, i32 6, i32 132, i32 78, i32 17, i32 168, i32 160, i32 37, i32 43, i32 166, i32 95, i32 174, i32 196, i32 180, i32 76, i32 200, i32 171, i32 199, i32 59, i32 2], [32 x i32] zeroinitializer, [32 x i32] [i32 105, i32 209, i32 57, i32 189, i32 251, i32 51, i32 190, i32 196, i32 240, i32 92, i32 239, i32 240, i32 86, i32 104, i32 252, i32 151, i32 71, i32 200, i32 114, i32 182, i32 83, i32 164, i32 10, i32 152, i32 165, i32 180, i32 55, i32 113, i32 207, i32 102, i32 80, i32 109], [32 x i32] [i32 169, i32 98, i32 147, i32 133, i32 190, i32 232, i32 115, i32 74, i32 14, i32 176, i32 181, i32 45, i32 148, i32 80, i32 170, i32 211, i32 178, i32 234, i32 157, i32 98, i32 118, i32 59, i32 7, i32 52, i32 78, i32 45, i32 112, i32 200, i32 154, i32 21, i32 102, i32 107], [32 x i32] [i32 77, i32 194, i32 23, i32 117, i32 161, i32 104, i32 205, i32 195, i32 198, i32 3, i32 68, i32 227, i32 120, i32 9, i32 145, i32 71, i32 63, i32 15, i32 228, i32 146, i32 88, i32 250, i32 125, i32 31, i32 32, i32 148, i32 88, i32 94, i32 188, i32 25, i32 2, i32 111], [32 x i32] [i32 38, i32 162, i32 80, i32 2, i32 36, i32 114, i32 241, i32 240, i32 78, i32 45, i32 147, i32 213, i32 8, i32 231, i32 174, i32 56, i32 247, i32 24, i32 165, i32 50, i32 52, i32 194, i32 240, i32 166, i32 236, i32 185, i32 97, i32 123, i32 100, i32 153, i32 172, i32 113], [32 x i32] zeroinitializer, [32 x i32] [i32 43, i32 119, i32 69, i32 236, i32 103, i32 118, i32 50, i32 76, i32 185, i32 223, i32 37, i32 50, i32 107, i32 203, i32 231, i32 20, i32 97, i32 67, i32 238, i32 186, i32 155, i32 113, i32 239, i32 210, i32 72, i32 101, i32 187, i32 27, i32 138, i32 19, i32 27, i32 34], [32 x i32] [i32 40, i32 92, i32 63, i32 219, i32 107, i32 24, i32 59, i32 92, i32 209, i32 4, i32 40, i32 222, i32 133, i32 82, i32 49, i32 181, i32 187, i32 246, i32 169, i32 237, i32 190, i32 40, i32 79, i32 179, i32 126, i32 5, i32 106, i32 219, i32 149, i32 13, i32 27, i32 28], [32 x i32] [i32 204, i32 33, i32 39, i32 206, i32 253, i32 169, i32 148, i32 142, i32 225, i32 171, i32 73, i32 224, i32 70, i32 38, i32 161, i32 168, i32 140, i32 161, i32 153, i32 29, i32 180, i32 39, i32 109, i32 45, i32 200, i32 57, i32 48, i32 94, i32 55, i32 82, i32 196, i32 110], [32 x i32] [i32 71, i32 159, i32 124, i32 86, i32 124, i32 67, i32 145, i32 28, i32 187, i32 78, i32 114, i32 62, i32 100, i32 171, i32 160, i32 160, i32 223, i32 180, i32 216, i32 135, i32 58, i32 189, i32 168, i32 72, i32 201, i32 184, i32 239, i32 46, i32 173, i32 111, i32 132, i32 79], [32 x i32] zeroinitializer, [32 x i32] [i32 159, i32 62, i32 242, i32 178, i32 144, i32 206, i32 219, i32 100, i32 62, i32 3, i32 221, i32 55, i32 54, i32 84, i32 112, i32 118, i32 36, i32 181, i32 105, i32 3, i32 252, i32 160, i32 43, i32 116, i32 178, i32 5, i32 14, i32 204, i32 216, i32 31, i32 106, i32 31], [32 x i32] [i32 108, i32 50, i32 79, i32 253, i32 187, i32 92, i32 187, i32 141, i32 100, i32 102, i32 74, i32 113, i32 31, i32 121, i32 163, i32 173, i32 141, i32 249, i32 212, i32 236, i32 207, i32 103, i32 112, i32 250, i32 5, i32 74, i32 15, i32 110, i32 175, i32 135, i32 10, i32 111], [32 x i32] [i32 244, i32 21, i32 205, i32 15, i32 10, i32 175, i32 78, i32 107, i32 81, i32 253, i32 20, i32 196, i32 46, i32 19, i32 134, i32 116, i32 68, i32 203, i32 102, i32 107, i32 182, i32 157, i32 116, i32 86, i32 50, i32 172, i32 141, i32 142, i32 140, i32 140, i32 140, i32 57], [32 x i32] [i32 100, i32 5, i32 122, i32 132, i32 74, i32 19, i32 195, i32 246, i32 176, i32 110, i32 154, i32 107, i32 83, i32 107, i32 50, i32 218, i32 217, i32 116, i32 117, i32 196, i32 186, i32 100, i32 61, i32 59, i32 8, i32 221, i32 16, i32 70, i32 239, i32 199, i32 144, i32 31], [32 x i32] zeroinitializer, [32 x i32] [i32 7, i32 78, i32 211, i32 45, i32 9, i32 51, i32 14, i32 210, i32 13, i32 190, i32 62, i32 231, i32 228, i32 170, i32 183, i32 0, i32 139, i32 232, i32 173, i32 170, i32 122, i32 141, i32 52, i32 40, i32 169, i32 129, i32 148, i32 197, i32 231, i32 66, i32 172, i32 71], [32 x i32] [i32 204, i32 213, i32 57, i32 252, i32 165, i32 164, i32 173, i32 50, i32 21, i32 206, i32 25, i32 232, i32 52, i32 43, i32 28, i32 96, i32 145, i32 252, i32 5, i32 169, i32 179, i32 220, i32 128, i32 41, i32 196, i32 32, i32 121, i32 6, i32 57, i32 192, i32 226, i32 34], [32 x i32] [i32 43, i32 140, i32 45, i32 154, i32 139, i32 132, i32 242, i32 86, i32 251, i32 173, i32 46, i32 127, i32 183, i32 252, i32 48, i32 225, i32 53, i32 137, i32 186, i32 77, i32 168, i32 109, i32 206, i32 140, i32 139, i32 48, i32 224, i32 218, i32 41, i32 24, i32 17, i32 23], [32 x i32] [i32 61, i32 213, i32 154, i32 100, i32 115, i32 54, i32 177, i32 214, i32 134, i32 152, i32 66, i32 63, i32 138, i32 241, i32 199, i32 245, i32 66, i32 168, i32 156, i32 82, i32 168, i32 220, i32 249, i32 36, i32 63, i32 74, i32 161, i32 164, i32 91, i32 232, i32 98, i32 26], [32 x i32] zeroinitializer, [32 x i32] [i32 234, i32 249, i32 228, i32 233, i32 225, i32 82, i32 63, i32 81, i32 25, i32 13, i32 221, i32 217, i32 157, i32 147, i32 49, i32 135, i32 35, i32 9, i32 213, i32 131, i32 235, i32 146, i32 9, i32 118, i32 110, i32 227, i32 248, i32 192, i32 162, i32 102, i32 181, i32 54], [32 x i32] [i32 178, i32 231, i32 143, i32 227, i32 163, i32 197, i32 203, i32 114, i32 238, i32 121, i32 65, i32 248, i32 223, i32 238, i32 101, i32 197, i32 69, i32 119, i32 39, i32 60, i32 189, i32 88, i32 211, i32 117, i32 226, i32 4, i32 75, i32 187, i32 101, i32 243, i32 200, i32 15], [32 x i32] [i32 22, i32 223, i32 209, i32 90, i32 213, i32 233, i32 78, i32 88, i32 149, i32 147, i32 95, i32 81, i32 9, i32 195, i32 42, i32 201, i32 212, i32 85, i32 72, i32 121, i32 164, i32 163, i32 178, i32 195, i32 98, i32 170, i32 140, i32 232, i32 173, i32 71, i32 57, i32 27], [32 x i32] [i32 244, i32 16, i32 70, i32 190, i32 183, i32 210, i32 209, i32 206, i32 94, i32 118, i32 162, i32 215, i32 3, i32 220, i32 228, i32 129, i32 90, i32 246, i32 60, i32 222, i32 174, i32 122, i32 157, i32 33, i32 52, i32 165, i32 246, i32 169, i32 115, i32 226, i32 141, i32 96], [32 x i32] zeroinitializer, [32 x i32] [i32 129, i32 213, i32 52, i32 22, i32 1, i32 163, i32 147, i32 234, i32 82, i32 148, i32 236, i32 147, i32 183, i32 129, i32 17, i32 45, i32 88, i32 249, i32 181, i32 10, i32 170, i32 79, i32 246, i32 46, i32 63, i32 54, i32 191, i32 51, i32 90, i32 231, i32 209, i32 8], [32 x i32] [i32 111, i32 201, i32 81, i32 109, i32 28, i32 170, i32 245, i32 165, i32 144, i32 63, i32 20, i32 226, i32 110, i32 142, i32 100, i32 253, i32 172, i32 224, i32 78, i32 34, i32 229, i32 193, i32 188, i32 41, i32 10, i32 106, i32 158, i32 161, i32 96, i32 203, i32 47, i32 11], [32 x i32] [i32 31, i32 154, i32 82, i32 100, i32 151, i32 217, i32 28, i32 8, i32 81, i32 111, i32 38, i32 157, i32 170, i32 147, i32 51, i32 67, i32 250, i32 119, i32 233, i32 98, i32 155, i32 93, i32 24, i32 117, i32 235, i32 120, i32 247, i32 135, i32 143, i32 65, i32 180, i32 77], [32 x i32] [i32 39, i32 174, i32 211, i32 13, i32 76, i32 143, i32 52, i32 234, i32 125, i32 60, i32 229, i32 138, i32 207, i32 91, i32 146, i32 216, i32 48, i32 22, i32 180, i32 163, i32 117, i32 255, i32 235, i32 39, i32 200, i32 92, i32 108, i32 194, i32 238, i32 108, i32 33, i32 11], [32 x i32] zeroinitializer, [32 x i32] [i32 2, i32 254, i32 84, i32 18, i32 24, i32 202, i32 125, i32 165, i32 104, i32 67, i32 163, i32 109, i32 20, i32 42, i32 106, i32 165, i32 142, i32 50, i32 231, i32 99, i32 79, i32 227, i32 198, i32 68, i32 62, i32 171, i32 99, i32 202, i32 23, i32 134, i32 116, i32 63], [32 x i32] [i32 243, i32 60, i32 140, i32 128, i32 131, i32 16, i32 138, i32 55, i32 80, i32 156, i32 180, i32 223, i32 63, i32 140, i32 247, i32 35, i32 7, i32 214, i32 255, i32 160, i32 130, i32 108, i32 117, i32 59, i32 228, i32 181, i32 187, i32 228, i32 230, i32 80, i32 240, i32 8], [32 x i32] [i32 81, i32 21, i32 157, i32 195, i32 149, i32 209, i32 57, i32 187, i32 100, i32 157, i32 21, i32 129, i32 193, i32 104, i32 208, i32 182, i32 164, i32 44, i32 125, i32 94, i32 2, i32 57, i32 0, i32 224, i32 59, i32 164, i32 204, i32 202, i32 29, i32 129, i32 36, i32 16], [32 x i32] [i32 189, i32 0, i32 185, i32 4, i32 125, i32 53, i32 252, i32 235, i32 208, i32 11, i32 5, i32 50, i32 82, i32 122, i32 137, i32 36, i32 117, i32 80, i32 225, i32 99, i32 2, i32 130, i32 142, i32 231, i32 133, i32 12, i32 242, i32 86, i32 68, i32 55, i32 131, i32 37], [32 x i32] zeroinitializer, [32 x i32] [i32 29, i32 136, i32 152, i32 91, i32 78, i32 252, i32 65, i32 36, i32 5, i32 230, i32 80, i32 43, i32 174, i32 150, i32 81, i32 217, i32 107, i32 114, i32 178, i32 51, i32 66, i32 152, i32 104, i32 187, i32 16, i32 90, i32 122, i32 140, i32 157, i32 7, i32 180, i32 5], [32 x i32] [i32 229, i32 28, i32 248, i32 10, i32 253, i32 45, i32 126, i32 245, i32 245, i32 112, i32 125, i32 65, i32 107, i32 17, i32 254, i32 190, i32 153, i32 209, i32 85, i32 41, i32 49, i32 191, i32 192, i32 151, i32 108, i32 213, i32 53, i32 204, i32 94, i32 139, i32 217, i32 105], [32 x i32] [i32 15, i32 147, i32 156, i32 17, i32 231, i32 219, i32 241, i32 240, i32 133, i32 67, i32 40, i32 21, i32 55, i32 221, i32 222, i32 39, i32 223, i32 173, i32 62, i32 73, i32 79, i32 224, i32 91, i32 246, i32 128, i32 89, i32 21, i32 60, i32 133, i32 183, i32 62, i32 18], [32 x i32] [i32 217, i32 182, i32 212, i32 157, i32 212, i32 106, i32 175, i32 112, i32 7, i32 44, i32 16, i32 158, i32 189, i32 17, i32 173, i32 228, i32 38, i32 51, i32 112, i32 146, i32 120, i32 28, i32 116, i32 159, i32 117, i32 96, i32 86, i32 244, i32 57, i32 168, i32 168, i32 98], [32 x i32] zeroinitializer, [32 x i32] [i32 126, i32 14, i32 80, i32 178, i32 204, i32 13, i32 107, i32 166, i32 113, i32 91, i32 66, i32 237, i32 189, i32 175, i32 172, i32 240, i32 252, i32 18, i32 162, i32 63, i32 78, i32 218, i32 232, i32 17, i32 243, i32 35, i32 225, i32 4, i32 98, i32 3, i32 28, i32 78], [32 x i32] [i32 111, i32 45, i32 85, i32 248, i32 47, i32 142, i32 240, i32 24, i32 59, i32 234, i32 221, i32 38, i32 114, i32 209, i32 245, i32 254, i32 229, i32 184, i32 230, i32 211, i32 16, i32 72, i32 70, i32 73, i32 58, i32 159, i32 94, i32 69, i32 107, i32 144, i32 232, i32 127], [32 x i32] [i32 122, i32 219, i32 18, i32 210, i32 138, i32 130, i32 3, i32 27, i32 30, i32 175, i32 249, i32 75, i32 156, i32 190, i32 174, i32 124, i32 228, i32 148, i32 42, i32 35, i32 179, i32 98, i32 134, i32 231, i32 253, i32 35, i32 170, i32 153, i32 189, i32 43, i32 17, i32 108], [32 x i32] [i32 34, i32 214, i32 181, i32 23, i32 132, i32 191, i32 18, i32 204, i32 35, i32 20, i32 74, i32 223, i32 20, i32 49, i32 188, i32 161, i32 172, i32 110, i32 171, i32 250, i32 87, i32 17, i32 83, i32 179, i32 39, i32 230, i32 249, i32 71, i32 51, i32 68, i32 52, i32 30], [32 x i32] zeroinitializer, [32 x i32] [i32 86, i32 225, i32 245, i32 241, i32 213, i32 171, i32 168, i32 43, i32 174, i32 137, i32 243, i32 207, i32 86, i32 159, i32 242, i32 75, i32 49, i32 188, i32 24, i32 169, i32 6, i32 91, i32 190, i32 180, i32 97, i32 248, i32 178, i32 6, i32 156, i32 129, i32 171, i32 76], [32 x i32] [i32 131, i32 240, i32 13, i32 99, i32 239, i32 83, i32 107, i32 181, i32 107, i32 249, i32 131, i32 207, i32 222, i32 4, i32 34, i32 155, i32 44, i32 10, i32 224, i32 165, i32 216, i32 199, i32 156, i32 165, i32 163, i32 246, i32 111, i32 207, i32 144, i32 107, i32 104, i32 124], [32 x i32] [i32 204, i32 72, i32 131, i32 144, i32 229, i32 253, i32 63, i32 132, i32 170, i32 249, i32 139, i32 130, i32 89, i32 36, i32 52, i32 104, i32 79, i32 28, i32 35, i32 217, i32 204, i32 113, i32 225, i32 127, i32 140, i32 175, i32 241, i32 238, i32 0, i32 182, i32 160, i32 119], [32 x i32] [i32 44, i32 58, i32 229, i32 173, i32 244, i32 221, i32 45, i32 247, i32 92, i32 68, i32 181, i32 91, i32 33, i32 163, i32 137, i32 95, i32 150, i32 69, i32 202, i32 77, i32 164, i32 33, i32 153, i32 112, i32 218, i32 196, i32 196, i32 160, i32 229, i32 244, i32 236, i32 10], [32 x i32] zeroinitializer, [32 x i32] [i32 208, i32 117, i32 87, i32 59, i32 235, i32 92, i32 20, i32 86, i32 80, i32 201, i32 79, i32 184, i32 184, i32 30, i32 163, i32 244, i32 171, i32 245, i32 169, i32 32, i32 21, i32 148, i32 130, i32 218, i32 150, i32 28, i32 155, i32 89, i32 140, i32 255, i32 244, i32 81], [32 x i32] [i32 65, i32 151, i32 191, i32 113, i32 106, i32 155, i32 114, i32 236, i32 243, i32 248, i32 107, i32 230, i32 14, i32 108, i32 105, i32 165, i32 47, i32 104, i32 82, i32 216, i32 97, i32 129, i32 192, i32 99, i32 63, i32 166, i32 60, i32 19, i32 144, i32 230, i32 141, i32 86], [32 x i32] [i32 133, i32 87, i32 159, i32 181, i32 200, i32 6, i32 178, i32 159, i32 71, i32 63, i32 240, i32 250, i32 230, i32 169, i32 177, i32 155, i32 111, i32 150, i32 125, i32 249, i32 164, i32 101, i32 9, i32 117, i32 50, i32 166, i32 108, i32 127, i32 71, i32 75, i32 47, i32 79], [32 x i32] [i32 218, i32 3, i32 52, i32 102, i32 196, i32 12, i32 115, i32 110, i32 188, i32 36, i32 181, i32 249, i32 112, i32 129, i32 82, i32 233, i32 244, i32 124, i32 35, i32 221, i32 159, i32 184, i32 70, i32 239, i32 29, i32 34, i32 85, i32 125, i32 113, i32 196, i32 66, i32 51], [32 x i32] zeroinitializer, [32 x i32] [i32 154, i32 77, i32 66, i32 41, i32 93, i32 164, i32 107, i32 111, i32 168, i32 138, i32 77, i32 145, i32 123, i32 210, i32 223, i32 54, i32 239, i32 1, i32 34, i32 197, i32 204, i32 141, i32 235, i32 88, i32 61, i32 179, i32 80, i32 252, i32 139, i32 151, i32 150, i32 51], [32 x i32] [i32 69, i32 184, i32 65, i32 215, i32 171, i32 7, i32 21, i32 0, i32 142, i32 206, i32 223, i32 178, i32 67, i32 92, i32 1, i32 220, i32 244, i32 1, i32 81, i32 149, i32 16, i32 90, i32 246, i32 36, i32 36, i32 160, i32 25, i32 58, i32 9, i32 42, i32 170, i32 63], [32 x i32] [i32 137, i32 239, i32 191, i32 3, i32 117, i32 208, i32 41, i32 80, i32 203, i32 125, i32 214, i32 190, i32 173, i32 95, i32 123, i32 0, i32 50, i32 170, i32 152, i32 237, i32 63, i32 143, i32 146, i32 203, i32 129, i32 86, i32 1, i32 99, i32 100, i32 163, i32 56, i32 57], [32 x i32] [i32 197, i32 227, i32 232, i32 174, i32 23, i32 39, i32 227, i32 100, i32 96, i32 113, i32 71, i32 41, i32 2, i32 15, i32 146, i32 93, i32 16, i32 147, i32 200, i32 14, i32 161, i32 237, i32 186, i32 169, i32 150, i32 28, i32 197, i32 118, i32 48, i32 205, i32 249, i32 48], [32 x i32] zeroinitializer, [32 x i32] [i32 144, i32 110, i32 126, i32 75, i32 113, i32 147, i32 192, i32 114, i32 237, i32 235, i32 113, i32 36, i32 151, i32 38, i32 156, i32 254, i32 203, i32 62, i32 89, i32 25, i32 168, i32 15, i32 117, i32 125, i32 190, i32 24, i32 230, i32 150, i32 30, i32 149, i32 112, i32 96], [32 x i32] [i32 61, i32 112, i32 39, i32 157, i32 217, i32 175, i32 177, i32 39, i32 175, i32 227, i32 93, i32 30, i32 58, i32 48, i32 84, i32 97, i32 96, i32 232, i32 195, i32 38, i32 58, i32 188, i32 126, i32 245, i32 129, i32 221, i32 100, i32 1, i32 4, i32 235, i32 192, i32 30], [32 x i32] [i32 100, i32 170, i32 181, i32 136, i32 121, i32 101, i32 56, i32 140, i32 148, i32 214, i32 98, i32 55, i32 125, i32 100, i32 205, i32 58, i32 235, i32 255, i32 232, i32 129, i32 9, i32 199, i32 106, i32 80, i32 9, i32 13, i32 40, i32 3, i32 13, i32 154, i32 147, i32 10], [32 x i32] [i32 15, i32 169, i32 213, i32 1, i32 170, i32 72, i32 79, i32 40, i32 102, i32 50, i32 26, i32 186, i32 124, i32 234, i32 17, i32 128, i32 23, i32 24, i32 155, i32 86, i32 136, i32 37, i32 6, i32 105, i32 18, i32 44, i32 234, i32 86, i32 105, i32 65, i32 36, i32 25], [32 x i32] zeroinitializer, [32 x i32] [i32 147, i32 68, i32 151, i32 206, i32 40, i32 255, i32 58, i32 64, i32 196, i32 245, i32 246, i32 155, i32 244, i32 107, i32 7, i32 132, i32 251, i32 152, i32 216, i32 236, i32 140, i32 3, i32 87, i32 236, i32 73, i32 237, i32 99, i32 182, i32 170, i32 255, i32 152, i32 40], [32 x i32] [i32 90, i32 247, i32 107, i32 1, i32 18, i32 79, i32 81, i32 193, i32 112, i32 132, i32 148, i32 71, i32 178, i32 1, i32 108, i32 113, i32 215, i32 204, i32 23, i32 102, i32 15, i32 89, i32 93, i32 93, i32 16, i32 1, i32 87, i32 17, i32 245, i32 221, i32 226, i32 52], [32 x i32] [i32 182, i32 234, i32 14, i32 64, i32 147, i32 32, i32 121, i32 53, i32 106, i32 97, i32 132, i32 90, i32 7, i32 109, i32 249, i32 119, i32 111, i32 237, i32 105, i32 28, i32 13, i32 37, i32 118, i32 204, i32 240, i32 219, i32 187, i32 197, i32 173, i32 226, i32 38, i32 87], [32 x i32] [i32 200, i32 92, i32 22, i32 254, i32 237, i32 159, i32 38, i32 86, i32 246, i32 75, i32 159, i32 167, i32 10, i32 133, i32 254, i32 165, i32 140, i32 135, i32 221, i32 152, i32 206, i32 78, i32 195, i32 88, i32 85, i32 178, i32 123, i32 61, i32 216, i32 107, i32 181, i32 76], [32 x i32] zeroinitializer, [32 x i32] [i32 172, i32 143, i32 188, i32 30, i32 125, i32 139, i32 90, i32 11, i32 141, i32 175, i32 118, i32 46, i32 113, i32 227, i32 59, i32 111, i32 83, i32 47, i32 62, i32 144, i32 149, i32 212, i32 53, i32 20, i32 79, i32 140, i32 60, i32 206, i32 87, i32 28, i32 118, i32 73], [32 x i32] [i32 169, i32 96, i32 220, i32 15, i32 100, i32 229, i32 29, i32 226, i32 141, i32 79, i32 121, i32 47, i32 14, i32 36, i32 2, i32 0, i32 5, i32 119, i32 67, i32 37, i32 61, i32 106, i32 199, i32 183, i32 191, i32 4, i32 8, i32 101, i32 244, i32 57, i32 75, i32 101], [32 x i32] [i32 65, i32 33, i32 48, i32 83, i32 27, i32 71, i32 1, i32 183, i32 24, i32 216, i32 130, i32 87, i32 189, i32 163, i32 96, i32 240, i32 50, i32 246, i32 91, i32 240, i32 48, i32 136, i32 145, i32 89, i32 253, i32 144, i32 162, i32 185, i32 85, i32 147, i32 33, i32 52], [32 x i32] [i32 15, i32 125, i32 99, i32 140, i32 110, i32 92, i32 222, i32 48, i32 223, i32 101, i32 250, i32 46, i32 176, i32 163, i32 37, i32 5, i32 84, i32 189, i32 37, i32 186, i32 6, i32 174, i32 223, i32 139, i32 217, i32 27, i32 234, i32 56, i32 179, i32 5, i32 22, i32 9], [32 x i32] zeroinitializer, [32 x i32] [i32 170, i32 31, i32 187, i32 235, i32 254, i32 228, i32 135, i32 252, i32 177, i32 44, i32 183, i32 136, i32 244, i32 198, i32 185, i32 245, i32 36, i32 70, i32 242, i32 165, i32 159, i32 143, i32 138, i32 147, i32 112, i32 105, i32 212, i32 86, i32 236, i32 253, i32 6, i32 70], [32 x i32] [i32 123, i32 117, i32 58, i32 252, i32 100, i32 211, i32 41, i32 126, i32 221, i32 73, i32 154, i32 89, i32 83, i32 191, i32 180, i32 167, i32 82, i32 179, i32 5, i32 171, i32 195, i32 175, i32 22, i32 26, i32 133, i32 66, i32 50, i32 162, i32 134, i32 250, i32 57, i32 67], [32 x i32] [i32 195, i32 241, i32 198, i32 147, i32 101, i32 238, i32 11, i32 188, i32 234, i32 20, i32 240, i32 193, i32 248, i32 132, i32 137, i32 194, i32 201, i32 215, i32 234, i32 52, i32 202, i32 167, i32 196, i32 153, i32 213, i32 80, i32 105, i32 203, i32 214, i32 33, i32 99, i32 124], [32 x i32] [i32 235, i32 1, i32 199, i32 54, i32 151, i32 78, i32 182, i32 171, i32 95, i32 13, i32 44, i32 186, i32 103, i32 100, i32 85, i32 222, i32 188, i32 255, i32 166, i32 236, i32 4, i32 211, i32 141, i32 57, i32 86, i32 94, i32 238, i32 248, i32 228, i32 46, i32 51, i32 98], [32 x i32] zeroinitializer, [32 x i32] [i32 47, i32 139, i32 200, i32 64, i32 81, i32 209, i32 172, i32 26, i32 11, i32 228, i32 169, i32 162, i32 66, i32 33, i32 25, i32 47, i32 123, i32 151, i32 191, i32 247, i32 87, i32 109, i32 63, i32 61, i32 79, i32 15, i32 226, i32 178, i32 129, i32 0, i32 158, i32 123], [32 x i32] [i32 64, i32 41, i32 116, i32 168, i32 47, i32 94, i32 249, i32 121, i32 164, i32 243, i32 62, i32 185, i32 253, i32 51, i32 49, i32 172, i32 154, i32 105, i32 136, i32 30, i32 119, i32 33, i32 45, i32 243, i32 145, i32 82, i32 38, i32 21, i32 178, i32 166, i32 207, i32 126], [32 x i32] [i32 98, i32 228, i32 13, i32 3, i32 180, i32 215, i32 205, i32 250, i32 189, i32 70, i32 223, i32 147, i32 113, i32 16, i32 44, i32 168, i32 59, i32 182, i32 9, i32 5, i32 112, i32 132, i32 67, i32 41, i32 168, i32 89, i32 245, i32 142, i32 16, i32 228, i32 215, i32 32], [32 x i32] [i32 251, i32 149, i32 146, i32 99, i32 80, i32 252, i32 98, i32 240, i32 164, i32 94, i32 140, i32 24, i32 194, i32 23, i32 36, i32 183, i32 120, i32 194, i32 169, i32 231, i32 106, i32 50, i32 214, i32 41, i32 133, i32 175, i32 203, i32 141, i32 145, i32 19, i32 218, i32 107], [32 x i32] zeroinitializer, [32 x i32] [i32 74, i32 177, i32 112, i32 138, i32 169, i32 232, i32 99, i32 121, i32 0, i32 226, i32 37, i32 22, i32 202, i32 75, i32 15, i32 164, i32 102, i32 173, i32 25, i32 159, i32 136, i32 103, i32 12, i32 139, i32 194, i32 74, i32 91, i32 43, i32 109, i32 149, i32 175, i32 25], [32 x i32] [i32 241, i32 185, i32 135, i32 53, i32 197, i32 187, i32 185, i32 207, i32 245, i32 214, i32 205, i32 213, i32 12, i32 124, i32 14, i32 230, i32 144, i32 52, i32 251, i32 81, i32 66, i32 30, i32 109, i32 172, i32 154, i32 70, i32 196, i32 151, i32 41, i32 50, i32 191, i32 69], [32 x i32] [i32 198, i32 150, i32 72, i32 52, i32 42, i32 6, i32 175, i32 148, i32 61, i32 244, i32 26, i32 207, i32 242, i32 192, i32 33, i32 194, i32 66, i32 94, i32 200, i32 47, i32 53, i32 162, i32 62, i32 41, i32 250, i32 12, i32 132, i32 229, i32 137, i32 114, i32 124, i32 6], [32 x i32] [i32 7, i32 198, i32 34, i32 21, i32 226, i32 156, i32 96, i32 162, i32 25, i32 217, i32 39, i32 174, i32 55, i32 78, i32 166, i32 201, i32 128, i32 166, i32 145, i32 143, i32 18, i32 73, i32 229, i32 0, i32 24, i32 71, i32 209, i32 215, i32 40, i32 34, i32 99, i32 57], [32 x i32] zeroinitializer, [32 x i32] [i32 36, i32 100, i32 110, i32 155, i32 53, i32 113, i32 120, i32 206, i32 51, i32 3, i32 33, i32 51, i32 54, i32 241, i32 115, i32 155, i32 185, i32 21, i32 139, i32 44, i32 105, i32 207, i32 77, i32 237, i32 79, i32 77, i32 87, i32 20, i32 19, i32 130, i32 164, i32 77], [32 x i32] [i32 76, i32 115, i32 109, i32 21, i32 189, i32 161, i32 77, i32 92, i32 19, i32 11, i32 36, i32 6, i32 152, i32 120, i32 28, i32 91, i32 235, i32 31, i32 24, i32 84, i32 67, i32 217, i32 85, i32 102, i32 218, i32 41, i32 33, i32 232, i32 184, i32 60, i32 66, i32 34], [32 x i32] [i32 146, i32 91, i32 252, i32 114, i32 253, i32 186, i32 241, i32 253, i32 166, i32 124, i32 149, i32 227, i32 97, i32 63, i32 233, i32 3, i32 212, i32 43, i32 212, i32 32, i32 217, i32 219, i32 77, i32 50, i32 62, i32 245, i32 17, i32 100, i32 227, i32 180, i32 190, i32 50], [32 x i32] [i32 180, i32 11, i32 50, i32 171, i32 220, i32 4, i32 81, i32 85, i32 33, i32 30, i32 11, i32 117, i32 153, i32 137, i32 115, i32 53, i32 58, i32 145, i32 43, i32 254, i32 231, i32 73, i32 234, i32 118, i32 193, i32 249, i32 70, i32 185, i32 83, i32 2, i32 35, i32 4], [32 x i32] zeroinitializer, [32 x i32] [i32 192, i32 215, i32 86, i32 151, i32 88, i32 145, i32 222, i32 9, i32 79, i32 159, i32 190, i32 99, i32 176, i32 131, i32 134, i32 67, i32 93, i32 188, i32 224, i32 243, i32 192, i32 117, i32 191, i32 139, i32 142, i32 170, i32 247, i32 139, i32 100, i32 110, i32 176, i32 99], [32 x i32] [i32 134, i32 85, i32 55, i32 142, i32 195, i32 56, i32 72, i32 20, i32 181, i32 151, i32 210, i32 167, i32 84, i32 69, i32 241, i32 53, i32 68, i32 56, i32 158, i32 241, i32 27, i32 182, i32 52, i32 0, i32 60, i32 150, i32 238, i32 41, i32 0, i32 234, i32 44, i32 11], [32 x i32] [i32 208, i32 128, i32 186, i32 25, i32 174, i32 29, i32 169, i32 121, i32 246, i32 63, i32 172, i32 93, i32 111, i32 150, i32 31, i32 42, i32 206, i32 41, i32 178, i32 255, i32 55, i32 241, i32 148, i32 143, i32 12, i32 181, i32 40, i32 186, i32 154, i32 33, i32 246, i32 102], [32 x i32] [i32 189, i32 170, i32 19, i32 230, i32 205, i32 69, i32 74, i32 164, i32 89, i32 10, i32 100, i32 177, i32 152, i32 214, i32 52, i32 19, i32 4, i32 230, i32 151, i32 148, i32 6, i32 203, i32 212, i32 78, i32 187, i32 150, i32 205, i32 209, i32 87, i32 209, i32 227, i32 6], [32 x i32] zeroinitializer, [32 x i32] [i32 36, i32 234, i32 35, i32 125, i32 86, i32 44, i32 226, i32 89, i32 14, i32 133, i32 96, i32 4, i32 136, i32 90, i32 116, i32 30, i32 75, i32 239, i32 19, i32 218, i32 76, i32 255, i32 131, i32 69, i32 133, i32 63, i32 8, i32 149, i32 44, i32 32, i32 19, i32 31], [32 x i32] [i32 147, i32 3, i32 54, i32 129, i32 172, i32 228, i32 32, i32 9, i32 53, i32 76, i32 69, i32 178, i32 30, i32 76, i32 20, i32 33, i32 230, i32 233, i32 138, i32 123, i32 141, i32 254, i32 30, i32 198, i32 62, i32 193, i32 53, i32 250, i32 231, i32 112, i32 78, i32 29], [32 x i32] [i32 187, i32 113, i32 20, i32 94, i32 38, i32 140, i32 61, i32 200, i32 233, i32 124, i32 211, i32 214, i32 209, i32 47, i32 7, i32 109, i32 230, i32 223, i32 251, i32 121, i32 214, i32 153, i32 89, i32 150, i32 72, i32 64, i32 15, i32 58, i32 123, i32 178, i32 160, i32 114], [32 x i32] [i32 36, i32 232, i32 183, i32 96, i32 174, i32 71, i32 128, i32 252, i32 229, i32 35, i32 231, i32 194, i32 201, i32 133, i32 230, i32 152, i32 160, i32 41, i32 78, i32 225, i32 132, i32 57, i32 45, i32 149, i32 44, i32 243, i32 69, i32 60, i32 255, i32 175, i32 39, i32 76], [32 x i32] zeroinitializer, [32 x i32] [i32 133, i32 224, i32 36, i32 50, i32 180, i32 209, i32 239, i32 252, i32 105, i32 162, i32 191, i32 143, i32 114, i32 44, i32 149, i32 246, i32 228, i32 110, i32 125, i32 144, i32 247, i32 87, i32 129, i32 160, i32 247, i32 218, i32 239, i32 51, i32 7, i32 227, i32 107, i32 120], [32 x i32] [i32 19, i32 170, i32 46, i32 76, i32 240, i32 34, i32 184, i32 108, i32 179, i32 25, i32 77, i32 235, i32 107, i32 208, i32 164, i32 198, i32 156, i32 221, i32 200, i32 91, i32 129, i32 87, i32 137, i32 223, i32 51, i32 169, i32 104, i32 73, i32 128, i32 228, i32 254, i32 33], [32 x i32] [i32 100, i32 52, i32 236, i32 192, i32 158, i32 68, i32 65, i32 175, i32 160, i32 54, i32 5, i32 109, i32 234, i32 48, i32 37, i32 70, i32 53, i32 36, i32 157, i32 134, i32 189, i32 149, i32 241, i32 106, i32 70, i32 215, i32 148, i32 84, i32 249, i32 59, i32 189, i32 93], [32 x i32] [i32 223, i32 179, i32 70, i32 17, i32 110, i32 19, i32 183, i32 40, i32 78, i32 86, i32 221, i32 241, i32 172, i32 173, i32 88, i32 195, i32 248, i32 136, i32 148, i32 94, i32 6, i32 152, i32 161, i32 228, i32 106, i32 251, i32 10, i32 73, i32 93, i32 138, i32 254, i32 119], [32 x i32] zeroinitializer, [32 x i32] [i32 52, i32 117, i32 55, i32 31, i32 52, i32 78, i32 169, i32 29, i32 104, i32 103, i32 248, i32 73, i32 152, i32 150, i32 252, i32 76, i32 101, i32 151, i32 247, i32 2, i32 74, i32 82, i32 108, i32 1, i32 189, i32 72, i32 187, i32 27, i32 237, i32 164, i32 226, i32 83], [32 x i32] [i32 181, i32 176, i32 12, i32 77, i32 179, i32 123, i32 35, i32 200, i32 31, i32 138, i32 57, i32 102, i32 230, i32 186, i32 76, i32 16, i32 55, i32 202, i32 156, i32 124, i32 5, i32 158, i32 255, i32 192, i32 248, i32 142, i32 177, i32 143, i32 111, i32 103, i32 24, i32 38], [32 x i32] [i32 164, i32 41, i32 71, i32 134, i32 46, i32 146, i32 79, i32 17, i32 79, i32 243, i32 178, i32 92, i32 213, i32 62, i32 166, i32 185, i32 200, i32 226, i32 51, i32 17, i32 31, i32 1, i32 143, i32 176, i32 155, i32 199, i32 165, i32 255, i32 131, i32 15, i32 30, i32 40], [32 x i32] [i32 10, i32 108, i32 79, i32 188, i32 62, i32 50, i32 231, i32 74, i32 26, i32 19, i32 193, i32 73, i32 56, i32 191, i32 247, i32 194, i32 211, i32 143, i32 107, i32 173, i32 82, i32 247, i32 207, i32 188, i32 39, i32 203, i32 64, i32 103, i32 118, i32 205, i32 109, i32 86], [32 x i32] zeroinitializer, [32 x i32] [i32 136, i32 170, i32 20, i32 36, i32 134, i32 148, i32 17, i32 18, i32 62, i32 26, i32 181, i32 204, i32 187, i32 224, i32 156, i32 213, i32 156, i32 109, i32 186, i32 88, i32 114, i32 141, i32 251, i32 34, i32 123, i32 159, i32 124, i32 148, i32 48, i32 179, i32 81, i32 33], [32 x i32] [i32 214, i32 227, i32 150, i32 97, i32 58, i32 253, i32 239, i32 155, i32 31, i32 144, i32 164, i32 36, i32 20, i32 91, i32 200, i32 222, i32 80, i32 177, i32 29, i32 175, i32 232, i32 85, i32 138, i32 135, i32 13, i32 254, i32 170, i32 59, i32 130, i32 44, i32 141, i32 123], [32 x i32] [i32 143, i32 18, i32 234, i32 175, i32 209, i32 31, i32 121, i32 16, i32 11, i32 246, i32 163, i32 123, i32 234, i32 172, i32 139, i32 87, i32 50, i32 98, i32 231, i32 6, i32 18, i32 81, i32 160, i32 59, i32 67, i32 94, i32 164, i32 32, i32 120, i32 49, i32 206, i32 13], [32 x i32] [i32 136, i32 193, i32 153, i32 208, i32 60, i32 28, i32 93, i32 180, i32 239, i32 19, i32 15, i32 144, i32 185, i32 54, i32 47, i32 149, i32 149, i32 198, i32 220, i32 222, i32 10, i32 81, i32 226, i32 141, i32 243, i32 188, i32 81, i32 236, i32 223, i32 177, i32 162, i32 95], [32 x i32] zeroinitializer, [32 x i32] [i32 251, i32 253, i32 71, i32 123, i32 138, i32 102, i32 158, i32 121, i32 46, i32 100, i32 130, i32 239, i32 247, i32 33, i32 236, i32 246, i32 216, i32 134, i32 9, i32 49, i32 124, i32 221, i32 3, i32 106, i32 88, i32 160, i32 119, i32 183, i32 155, i32 140, i32 135, i32 31], [32 x i32] [i32 199, i32 202, i32 99, i32 193, i32 73, i32 169, i32 53, i32 69, i32 85, i32 126, i32 218, i32 100, i32 50, i32 7, i32 80, i32 247, i32 50, i32 172, i32 222, i32 117, i32 88, i32 155, i32 17, i32 178, i32 58, i32 31, i32 245, i32 247, i32 121, i32 4, i32 230, i32 8], [32 x i32] [i32 227, i32 57, i32 98, i32 180, i32 79, i32 49, i32 4, i32 201, i32 218, i32 213, i32 115, i32 81, i32 87, i32 197, i32 184, i32 243, i32 163, i32 67, i32 112, i32 228, i32 97, i32 129, i32 132, i32 226, i32 187, i32 191, i32 79, i32 158, i32 164, i32 94, i32 116, i32 6], [32 x i32] [i32 254, i32 127, i32 251, i32 53, i32 125, i32 198, i32 1, i32 35, i32 40, i32 196, i32 2, i32 172, i32 31, i32 66, i32 180, i32 157, i32 252, i32 0, i32 148, i32 165, i32 238, i32 202, i32 218, i32 151, i32 9, i32 65, i32 119, i32 135, i32 93, i32 123, i32 135, i32 120], [32 x i32] zeroinitializer, [32 x i32] [i32 255, i32 16, i32 194, i32 9, i32 79, i32 110, i32 244, i32 210, i32 223, i32 126, i32 202, i32 123, i32 28, i32 29, i32 186, i32 163, i32 182, i32 218, i32 103, i32 51, i32 212, i32 135, i32 54, i32 75, i32 17, i32 32, i32 5, i32 166, i32 41, i32 193, i32 135, i32 23], [32 x i32] [i32 92, i32 229, i32 198, i32 4, i32 142, i32 43, i32 87, i32 190, i32 56, i32 133, i32 35, i32 203, i32 183, i32 190, i32 79, i32 169, i32 211, i32 110, i32 18, i32 170, i32 213, i32 178, i32 46, i32 147, i32 41, i32 154, i32 74, i32 136, i32 24, i32 67, i32 245, i32 1], [32 x i32] [i32 65, i32 105, i32 1, i32 103, i32 92, i32 211, i32 138, i32 197, i32 207, i32 63, i32 209, i32 87, i32 209, i32 103, i32 62, i32 1, i32 57, i32 181, i32 203, i32 129, i32 86, i32 150, i32 38, i32 182, i32 194, i32 231, i32 92, i32 251, i32 99, i32 151, i32 88, i32 6], [32 x i32] [i32 63, i32 38, i32 233, i32 64, i32 233, i32 3, i32 173, i32 6, i32 105, i32 145, i32 224, i32 209, i32 137, i32 96, i32 132, i32 121, i32 222, i32 39, i32 109, i32 230, i32 118, i32 189, i32 234, i32 230, i32 174, i32 72, i32 195, i32 103, i32 192, i32 87, i32 205, i32 47], [32 x i32] zeroinitializer, [32 x i32] [i32 145, i32 63, i32 237, i32 94, i32 24, i32 120, i32 63, i32 35, i32 44, i32 13, i32 140, i32 68, i32 0, i32 232, i32 251, i32 233, i32 142, i32 214, i32 209, i32 54, i32 88, i32 87, i32 158, i32 174, i32 75, i32 92, i32 11, i32 7, i32 188, i32 107, i32 85, i32 43], [32 x i32] [i32 26, i32 111, i32 64, i32 175, i32 68, i32 68, i32 176, i32 67, i32 143, i32 13, i32 208, i32 30, i32 196, i32 11, i32 25, i32 93, i32 142, i32 254, i32 193, i32 243, i32 197, i32 92, i32 145, i32 248, i32 4, i32 78, i32 190, i32 144, i32 180, i32 71, i32 92, i32 63], [32 x i32] [i32 176, i32 174, i32 193, i32 141, i32 201, i32 143, i32 185, i32 122, i32 119, i32 239, i32 186, i32 121, i32 160, i32 60, i32 168, i32 245, i32 106, i32 226, i32 63, i32 93, i32 0, i32 227, i32 75, i32 69, i32 36, i32 123, i32 67, i32 120, i32 85, i32 29, i32 43, i32 30], [32 x i32] [i32 93, i32 248, i32 180, i32 168, i32 48, i32 221, i32 204, i32 56, i32 165, i32 211, i32 202, i32 216, i32 209, i32 248, i32 178, i32 49, i32 145, i32 212, i32 114, i32 5, i32 87, i32 74, i32 59, i32 130, i32 74, i32 198, i32 104, i32 32, i32 226, i32 24, i32 65, i32 97], [32 x i32] zeroinitializer, [32 x i32] [i32 177, i32 63, i32 63, i32 239, i32 216, i32 244, i32 252, i32 179, i32 160, i32 96, i32 80, i32 6, i32 43, i32 41, i32 82, i32 112, i32 21, i32 11, i32 36, i32 36, i32 248, i32 95, i32 121, i32 24, i32 204, i32 255, i32 137, i32 153, i32 132, i32 161, i32 174, i32 19], [32 x i32] [i32 231, i32 196, i32 67, i32 77, i32 201, i32 43, i32 105, i32 93, i32 29, i32 60, i32 175, i32 187, i32 67, i32 56, i32 78, i32 152, i32 61, i32 237, i32 13, i32 33, i32 3, i32 253, i32 240, i32 153, i32 71, i32 4, i32 176, i32 152, i32 105, i32 85, i32 114, i32 15], [32 x i32] [i32 205, i32 36, i32 198, i32 62, i32 12, i32 130, i32 155, i32 145, i32 43, i32 97, i32 74, i32 178, i32 15, i32 136, i32 85, i32 95, i32 90, i32 87, i32 255, i32 229, i32 116, i32 11, i32 19, i32 67, i32 0, i32 216, i32 107, i32 207, i32 210, i32 21, i32 3, i32 44], [32 x i32] [i32 27, i32 55, i32 71, i32 227, i32 245, i32 158, i32 234, i32 44, i32 42, i32 231, i32 130, i32 54, i32 244, i32 31, i32 129, i32 71, i32 146, i32 75, i32 105, i32 14, i32 17, i32 140, i32 93, i32 83, i32 91, i32 129, i32 39, i32 8, i32 188, i32 160, i32 174, i32 37], [32 x i32] zeroinitializer, [32 x i32] [i32 217, i32 227, i32 56, i32 6, i32 70, i32 112, i32 130, i32 94, i32 40, i32 73, i32 121, i32 255, i32 37, i32 210, i32 78, i32 41, i32 141, i32 6, i32 176, i32 35, i32 174, i32 155, i32 102, i32 228, i32 125, i32 192, i32 112, i32 145, i32 163, i32 252, i32 236, i32 78], [32 x i32] [i32 252, i32 249, i32 33, i32 79, i32 46, i32 118, i32 155, i32 31, i32 40, i32 96, i32 119, i32 67, i32 50, i32 157, i32 190, i32 23, i32 48, i32 42, i32 198, i32 24, i32 146, i32 102, i32 98, i32 48, i32 152, i32 64, i32 17, i32 166, i32 127, i32 24, i32 132, i32 40], [32 x i32] [i32 81, i32 96, i32 27, i32 6, i32 79, i32 138, i32 33, i32 186, i32 56, i32 168, i32 186, i32 214, i32 64, i32 246, i32 233, i32 155, i32 118, i32 77, i32 86, i32 33, i32 91, i32 10, i32 155, i32 46, i32 79, i32 61, i32 129, i32 50, i32 8, i32 159, i32 151, i32 91], [32 x i32] [i32 26, i32 218, i32 243, i32 165, i32 65, i32 67, i32 40, i32 252, i32 126, i32 231, i32 113, i32 234, i32 198, i32 59, i32 89, i32 204, i32 46, i32 211, i32 64, i32 236, i32 179, i32 19, i32 111, i32 68, i32 205, i32 19, i32 178, i32 55, i32 242, i32 110, i32 217, i32 28], [32 x i32] zeroinitializer, [32 x i32] [i32 24, i32 74, i32 162, i32 151, i32 8, i32 129, i32 45, i32 131, i32 196, i32 204, i32 240, i32 131, i32 126, i32 236, i32 13, i32 149, i32 76, i32 91, i32 251, i32 250, i32 152, i32 128, i32 74, i32 102, i32 86, i32 12, i32 81, i32 179, i32 242, i32 4, i32 93, i32 39], [32 x i32] [i32 132, i32 79, i32 55, i32 49, i32 125, i32 46, i32 188, i32 173, i32 135, i32 7, i32 42, i32 107, i32 55, i32 252, i32 95, i32 235, i32 78, i32 117, i32 53, i32 166, i32 222, i32 171, i32 10, i32 25, i32 58, i32 183, i32 177, i32 239, i32 146, i32 106, i32 59, i32 60], [32 x i32] [i32 253, i32 24, i32 120, i32 132, i32 168, i32 76, i32 125, i32 110, i32 89, i32 166, i32 229, i32 116, i32 241, i32 25, i32 166, i32 132, i32 46, i32 81, i32 193, i32 41, i32 19, i32 242, i32 20, i32 107, i32 93, i32 83, i32 81, i32 247, i32 239, i32 191, i32 1, i32 34], [32 x i32] [i32 85, i32 96, i32 85, i32 91, i32 228, i32 29, i32 113, i32 76, i32 157, i32 91, i32 159, i32 112, i32 166, i32 133, i32 154, i32 44, i32 160, i32 226, i32 50, i32 72, i32 206, i32 158, i32 42, i32 165, i32 7, i32 59, i32 199, i32 108, i32 134, i32 119, i32 222, i32 60], [32 x i32] zeroinitializer, [32 x i32] [i32 70, i32 202, i32 167, i32 85, i32 123, i32 121, i32 243, i32 202, i32 90, i32 101, i32 246, i32 237, i32 80, i32 20, i32 123, i32 228, i32 196, i32 42, i32 101, i32 158, i32 226, i32 249, i32 202, i32 167, i32 34, i32 38, i32 83, i32 203, i32 33, i32 91, i32 167, i32 49], [32 x i32] [i32 129, i32 33, i32 97, i32 9, i32 246, i32 78, i32 241, i32 146, i32 238, i32 99, i32 97, i32 115, i32 135, i32 199, i32 84, i32 14, i32 66, i32 75, i32 201, i32 71, i32 209, i32 184, i32 126, i32 145, i32 117, i32 55, i32 153, i32 40, i32 184, i32 221, i32 127, i32 80], [32 x i32] [i32 158, i32 53, i32 133, i32 148, i32 71, i32 31, i32 144, i32 21, i32 38, i32 208, i32 132, i32 237, i32 138, i32 128, i32 247, i32 99, i32 66, i32 134, i32 39, i32 215, i32 244, i32 117, i32 88, i32 220, i32 156, i32 192, i32 34, i32 126, i32 32, i32 53, i32 253, i32 31], [32 x i32] [i32 163, i32 42, i32 97, i32 55, i32 226, i32 89, i32 18, i32 14, i32 39, i32 186, i32 100, i32 67, i32 174, i32 192, i32 66, i32 105, i32 121, i32 164, i32 30, i32 41, i32 139, i32 21, i32 235, i32 248, i32 175, i32 212, i32 162, i32 104, i32 51, i32 181, i32 122, i32 36], [32 x i32] zeroinitializer, [32 x i32] [i32 160, i32 104, i32 232, i32 65, i32 143, i32 145, i32 248, i32 17, i32 19, i32 144, i32 46, i32 167, i32 171, i32 48, i32 239, i32 173, i32 160, i32 97, i32 0, i32 136, i32 239, i32 219, i32 206, i32 91, i32 92, i32 187, i32 98, i32 200, i32 86, i32 249, i32 0, i32 115], [32 x i32] [i32 49, i32 64, i32 1, i32 82, i32 86, i32 148, i32 91, i32 40, i32 138, i32 170, i32 82, i32 238, i32 216, i32 10, i32 5, i32 141, i32 205, i32 181, i32 170, i32 46, i32 56, i32 170, i32 183, i32 135, i32 247, i32 43, i32 251, i32 4, i32 203, i32 132, i32 61, i32 84], [32 x i32] [i32 51, i32 137, i32 201, i32 99, i32 98, i32 28, i32 23, i32 180, i32 96, i32 196, i32 38, i32 104, i32 9, i32 195, i32 46, i32 55, i32 15, i32 123, i32 180, i32 156, i32 182, i32 249, i32 251, i32 212, i32 81, i32 120, i32 200, i32 99, i32 234, i32 119, i32 71, i32 7], [32 x i32] [i32 161, i32 94, i32 96, i32 79, i32 251, i32 225, i32 112, i32 106, i32 31, i32 85, i32 79, i32 9, i32 180, i32 149, i32 51, i32 54, i32 198, i32 129, i32 1, i32 24, i32 6, i32 37, i32 39, i32 164, i32 180, i32 36, i32 164, i32 134, i32 3, i32 76, i32 172, i32 2], [32 x i32] zeroinitializer, [32 x i32] [i32 19, i32 197, i32 44, i32 172, i32 211, i32 131, i32 130, i32 124, i32 41, i32 247, i32 5, i32 165, i32 0, i32 182, i32 31, i32 134, i32 85, i32 244, i32 214, i32 47, i32 12, i32 153, i32 208, i32 101, i32 155, i32 107, i32 70, i32 13, i32 67, i32 248, i32 22, i32 40], [32 x i32] [i32 233, i32 159, i32 220, i32 63, i32 193, i32 137, i32 68, i32 116, i32 39, i32 228, i32 193, i32 144, i32 255, i32 74, i32 167, i32 60, i32 238, i32 205, i32 244, i32 29, i32 37, i32 148, i32 127, i32 99, i32 22, i32 72, i32 188, i32 100, i32 254, i32 149, i32 196, i32 12], [32 x i32] [i32 212, i32 202, i32 112, i32 61, i32 171, i32 251, i32 95, i32 94, i32 0, i32 12, i32 204, i32 119, i32 34, i32 248, i32 120, i32 85, i32 174, i32 98, i32 53, i32 251, i32 154, i32 198, i32 3, i32 228, i32 12, i32 238, i32 171, i32 199, i32 192, i32 137, i32 135, i32 84], [32 x i32] [i32 90, i32 32, i32 91, i32 161, i32 165, i32 68, i32 145, i32 36, i32 2, i32 99, i32 18, i32 100, i32 184, i32 85, i32 246, i32 222, i32 44, i32 219, i32 71, i32 184, i32 198, i32 10, i32 195, i32 0, i32 120, i32 147, i32 216, i32 245, i32 245, i32 24, i32 40, i32 10], [32 x i32] zeroinitializer, [32 x i32] [i32 250, i32 148, i32 247, i32 64, i32 208, i32 215, i32 235, i32 169, i32 130, i32 54, i32 213, i32 21, i32 185, i32 51, i32 122, i32 191, i32 138, i32 242, i32 99, i32 170, i32 55, i32 245, i32 89, i32 172, i32 189, i32 187, i32 50, i32 54, i32 190, i32 115, i32 153, i32 56], [32 x i32] [i32 151, i32 157, i32 168, i32 205, i32 151, i32 123, i32 157, i32 185, i32 231, i32 165, i32 239, i32 253, i32 168, i32 66, i32 107, i32 195, i32 98, i32 100, i32 125, i32 165, i32 27, i32 201, i32 158, i32 210, i32 69, i32 185, i32 238, i32 3, i32 176, i32 191, i32 192, i32 104], [32 x i32] [i32 57, i32 97, i32 5, i32 237, i32 37, i32 137, i32 139, i32 93, i32 27, i32 203, i32 12, i32 85, i32 244, i32 106, i32 0, i32 138, i32 70, i32 232, i32 30, i32 198, i32 131, i32 200, i32 90, i32 118, i32 219, i32 204, i32 25, i32 122, i32 204, i32 103, i32 70, i32 11], [32 x i32] [i32 34, i32 140, i32 107, i32 190, i32 252, i32 77, i32 112, i32 98, i32 110, i32 82, i32 119, i32 153, i32 136, i32 126, i32 123, i32 87, i32 122, i32 13, i32 254, i32 220, i32 114, i32 146, i32 241, i32 104, i32 29, i32 151, i32 215, i32 124, i32 141, i32 83, i32 16, i32 55], [32 x i32] zeroinitializer, [32 x i32] [i32 138, i32 100, i32 30, i32 20, i32 10, i32 87, i32 212, i32 218, i32 92, i32 150, i32 155, i32 1, i32 76, i32 103, i32 191, i32 139, i32 48, i32 254, i32 8, i32 219, i32 13, i32 213, i32 168, i32 215, i32 9, i32 17, i32 133, i32 162, i32 211, i32 69, i32 251, i32 126], [32 x i32] [i32 24, i32 50, i32 152, i32 44, i32 143, i32 145, i32 174, i32 18, i32 240, i32 140, i32 234, i32 243, i32 60, i32 185, i32 93, i32 228, i32 105, i32 237, i32 178, i32 71, i32 24, i32 189, i32 206, i32 22, i32 82, i32 92, i32 35, i32 226, i32 165, i32 37, i32 82, i32 93], [32 x i32] [i32 33, i32 172, i32 139, i32 34, i32 205, i32 195, i32 154, i32 233, i32 94, i32 120, i32 189, i32 222, i32 186, i32 173, i32 171, i32 191, i32 117, i32 65, i32 9, i32 197, i32 88, i32 164, i32 125, i32 146, i32 176, i32 127, i32 242, i32 161, i32 209, i32 192, i32 179, i32 109], [32 x i32] [i32 96, i32 87, i32 46, i32 154, i32 114, i32 29, i32 107, i32 110, i32 88, i32 51, i32 36, i32 140, i32 72, i32 57, i32 70, i32 142, i32 137, i32 106, i32 136, i32 81, i32 35, i32 98, i32 181, i32 50, i32 9, i32 54, i32 227, i32 87, i32 245, i32 152, i32 222, i32 111], [32 x i32] zeroinitializer, [32 x i32] [i32 162, i32 220, i32 171, i32 169, i32 37, i32 45, i32 172, i32 95, i32 3, i32 51, i32 8, i32 231, i32 126, i32 254, i32 149, i32 54, i32 60, i32 91, i32 58, i32 211, i32 5, i32 130, i32 28, i32 149, i32 45, i32 216, i32 119, i32 126, i32 2, i32 217, i32 91, i32 112], [32 x i32] [i32 123, i32 170, i32 112, i32 10, i32 75, i32 251, i32 245, i32 191, i32 128, i32 197, i32 207, i32 8, i32 122, i32 221, i32 161, i32 244, i32 157, i32 84, i32 80, i32 83, i32 35, i32 119, i32 35, i32 245, i32 52, i32 165, i32 34, i32 209, i32 13, i32 150, i32 46, i32 71], [32 x i32] [i32 206, i32 130, i32 240, i32 143, i32 121, i32 2, i32 168, i32 209, i32 218, i32 20, i32 9, i32 72, i32 238, i32 138, i32 64, i32 152, i32 118, i32 96, i32 84, i32 90, i32 222, i32 3, i32 36, i32 245, i32 230, i32 47, i32 225, i32 3, i32 191, i32 104, i32 130, i32 127], [32 x i32] [i32 139, i32 197, i32 204, i32 61, i32 105, i32 166, i32 161, i32 24, i32 68, i32 188, i32 77, i32 119, i32 55, i32 199, i32 134, i32 236, i32 12, i32 201, i32 214, i32 68, i32 169, i32 35, i32 39, i32 185, i32 3, i32 52, i32 167, i32 10, i32 213, i32 199, i32 52, i32 55], [32 x i32] zeroinitializer, [32 x i32] [i32 239, i32 30, i32 236, i32 247, i32 141, i32 119, i32 242, i32 234, i32 219, i32 96, i32 3, i32 33, i32 192, i32 255, i32 94, i32 103, i32 195, i32 113, i32 11, i32 33, i32 180, i32 65, i32 160, i32 104, i32 56, i32 198, i32 1, i32 163, i32 211, i32 81, i32 60, i32 60], [32 x i32] [i32 39, i32 82, i32 228, i32 99, i32 170, i32 148, i32 230, i32 195, i32 40, i32 156, i32 198, i32 86, i32 172, i32 250, i32 182, i32 189, i32 226, i32 204, i32 118, i32 198, i32 39, i32 39, i32 162, i32 142, i32 120, i32 43, i32 132, i32 114, i32 16, i32 189, i32 78, i32 42], [32 x i32] [i32 171, i32 85, i32 54, i32 195, i32 236, i32 99, i32 85, i32 17, i32 85, i32 246, i32 165, i32 199, i32 1, i32 95, i32 254, i32 121, i32 216, i32 10, i32 247, i32 3, i32 216, i32 152, i32 153, i32 245, i32 208, i32 0, i32 84, i32 107, i32 102, i32 40, i32 245, i32 37], [32 x i32] [i32 106, i32 235, i32 252, i32 154, i32 154, i32 16, i32 206, i32 219, i32 58, i32 28, i32 60, i32 106, i32 157, i32 234, i32 70, i32 188, i32 69, i32 73, i32 172, i32 227, i32 65, i32 18, i32 124, i32 240, i32 247, i32 79, i32 249, i32 247, i32 255, i32 44, i32 137, i32 4], [32 x i32] zeroinitializer, [32 x i32] [i32 180, i32 72, i32 16, i32 159, i32 138, i32 9, i32 118, i32 250, i32 240, i32 122, i32 176, i32 112, i32 247, i32 131, i32 128, i32 82, i32 132, i32 43, i32 38, i32 162, i32 196, i32 93, i32 79, i32 186, i32 177, i32 200, i32 64, i32 13, i32 120, i32 151, i32 196, i32 96], [32 x i32] [i32 15, i32 0, i32 63, i32 166, i32 4, i32 25, i32 86, i32 101, i32 49, i32 127, i32 139, i32 235, i32 13, i32 225, i32 71, i32 137, i32 151, i32 22, i32 83, i32 250, i32 129, i32 167, i32 170, i32 178, i32 191, i32 103, i32 235, i32 114, i32 96, i32 129, i32 13, i32 72], [32 x i32] [i32 233, i32 88, i32 31, i32 255, i32 132, i32 63, i32 147, i32 28, i32 203, i32 225, i32 48, i32 105, i32 165, i32 117, i32 25, i32 126, i32 20, i32 95, i32 248, i32 252, i32 9, i32 221, i32 168, i32 120, i32 157, i32 202, i32 89, i32 139, i32 209, i32 48, i32 1, i32 19], [32 x i32] [i32 56, i32 6, i32 248, i32 11, i32 172, i32 130, i32 196, i32 151, i32 43, i32 144, i32 224, i32 247, i32 168, i32 171, i32 108, i32 8, i32 128, i32 102, i32 144, i32 70, i32 247, i32 38, i32 45, i32 248, i32 241, i32 196, i32 107, i32 74, i32 130, i32 152, i32 142, i32 55], [32 x i32] zeroinitializer, [32 x i32] [i32 94, i32 168, i32 216, i32 4, i32 155, i32 115, i32 201, i32 201, i32 220, i32 13, i32 115, i32 191, i32 10, i32 10, i32 115, i32 255, i32 24, i32 31, i32 156, i32 81, i32 170, i32 198, i32 241, i32 131, i32 37, i32 253, i32 171, i32 163, i32 17, i32 211, i32 1, i32 36], [32 x i32] [i32 232, i32 221, i32 173, i32 58, i32 140, i32 234, i32 244, i32 179, i32 178, i32 229, i32 115, i32 242, i32 237, i32 139, i32 191, i32 237, i32 177, i32 12, i32 12, i32 251, i32 43, i32 241, i32 1, i32 72, i32 232, i32 38, i32 3, i32 142, i32 39, i32 77, i32 150, i32 114], [32 x i32] [i32 111, i32 133, i32 231, i32 239, i32 222, i32 103, i32 48, i32 252, i32 191, i32 90, i32 224, i32 123, i32 122, i32 42, i32 84, i32 107, i32 93, i32 98, i32 133, i32 161, i32 248, i32 22, i32 136, i32 236, i32 97, i32 185, i32 150, i32 181, i32 239, i32 45, i32 67, i32 77], [32 x i32] [i32 210, i32 142, i32 155, i32 250, i32 66, i32 142, i32 223, i32 143, i32 199, i32 134, i32 249, i32 164, i32 202, i32 112, i32 0, i32 157, i32 33, i32 191, i32 236, i32 87, i32 98, i32 48, i32 88, i32 140, i32 13, i32 53, i32 219, i32 93, i32 139, i32 106, i32 160, i32 90], [32 x i32] zeroinitializer, [32 x i32] [i32 208, i32 233, i32 192, i32 250, i32 149, i32 69, i32 35, i32 150, i32 241, i32 44, i32 121, i32 37, i32 20, i32 206, i32 64, i32 20, i32 68, i32 44, i32 54, i32 80, i32 217, i32 99, i32 86, i32 183, i32 86, i32 59, i32 158, i32 167, i32 239, i32 137, i32 187, i32 14], [32 x i32] [i32 37, i32 131, i32 230, i32 148, i32 123, i32 129, i32 178, i32 145, i32 174, i32 14, i32 5, i32 201, i32 163, i32 104, i32 45, i32 217, i32 136, i32 37, i32 25, i32 42, i32 97, i32 97, i32 33, i32 151, i32 21, i32 161, i32 53, i32 165, i32 70, i32 200, i32 162, i32 14], [32 x i32] [i32 186, i32 54, i32 123, i32 109, i32 169, i32 234, i32 20, i32 18, i32 197, i32 250, i32 145, i32 0, i32 186, i32 155, i32 153, i32 204, i32 86, i32 2, i32 233, i32 160, i32 38, i32 64, i32 102, i32 140, i32 196, i32 248, i32 133, i32 51, i32 104, i32 231, i32 3, i32 32], [32 x i32] [i32 61, i32 95, i32 92, i32 210, i32 188, i32 125, i32 119, i32 14, i32 42, i32 109, i32 34, i32 69, i32 132, i32 6, i32 196, i32 221, i32 198, i32 166, i32 198, i32 215, i32 73, i32 173, i32 109, i32 135, i32 145, i32 14, i32 58, i32 103, i32 29, i32 44, i32 29, i32 86], [32 x i32] zeroinitializer, [32 x i32] [i32 35, i32 21, i32 23, i32 235, i32 211, i32 219, i32 18, i32 94, i32 1, i32 240, i32 145, i32 171, i32 44, i32 65, i32 206, i32 172, i32 237, i32 27, i32 75, i32 45, i32 188, i32 219, i32 23, i32 102, i32 137, i32 70, i32 173, i32 75, i32 30, i32 111, i32 11, i32 20], [32 x i32] [i32 7, i32 118, i32 97, i32 15, i32 102, i32 178, i32 33, i32 57, i32 126, i32 192, i32 236, i32 69, i32 40, i32 130, i32 161, i32 41, i32 50, i32 68, i32 53, i32 19, i32 94, i32 97, i32 94, i32 84, i32 203, i32 124, i32 239, i32 246, i32 65, i32 207, i32 159, i32 10], [32 x i32] [i32 139, i32 177, i32 149, i32 229, i32 146, i32 80, i32 53, i32 17, i32 118, i32 172, i32 244, i32 77, i32 36, i32 195, i32 50, i32 230, i32 235, i32 254, i32 44, i32 135, i32 196, i32 241, i32 86, i32 196, i32 117, i32 36, i32 122, i32 86, i32 133, i32 90, i32 58, i32 19], [32 x i32] [i32 40, i32 193, i32 225, i32 84, i32 115, i32 242, i32 191, i32 118, i32 116, i32 25, i32 25, i32 27, i32 228, i32 185, i32 168, i32 70, i32 101, i32 115, i32 243, i32 119, i32 155, i32 41, i32 116, i32 91, i32 198, i32 137, i32 108, i32 44, i32 124, i32 248, i32 179, i32 15], [32 x i32] zeroinitializer, [32 x i32] [i32 97, i32 177, i32 70, i32 186, i32 14, i32 49, i32 165, i32 103, i32 108, i32 127, i32 214, i32 217, i32 39, i32 133, i32 15, i32 121, i32 20, i32 200, i32 108, i32 47, i32 95, i32 91, i32 156, i32 53, i32 61, i32 56, i32 134, i32 119, i32 101, i32 85, i32 106, i32 123], [32 x i32] [i32 94, i32 244, i32 229, i32 23, i32 14, i32 16, i32 159, i32 231, i32 67, i32 95, i32 103, i32 92, i32 172, i32 75, i32 229, i32 20, i32 65, i32 210, i32 191, i32 72, i32 245, i32 20, i32 176, i32 113, i32 198, i32 97, i32 193, i32 178, i32 112, i32 88, i32 210, i32 90], [32 x i32] [i32 128, i32 186, i32 13, i32 9, i32 64, i32 167, i32 57, i32 166, i32 103, i32 52, i32 126, i32 102, i32 190, i32 86, i32 251, i32 83, i32 120, i32 196, i32 70, i32 232, i32 237, i32 104, i32 108, i32 127, i32 206, i32 232, i32 159, i32 206, i32 162, i32 100, i32 88, i32 83], [32 x i32] [i32 208, i32 182, i32 86, i32 48, i32 92, i32 174, i32 179, i32 117, i32 68, i32 164, i32 131, i32 81, i32 110, i32 1, i32 101, i32 239, i32 69, i32 118, i32 230, i32 245, i32 162, i32 13, i32 212, i32 22, i32 59, i32 88, i32 47, i32 242, i32 47, i32 54, i32 24, i32 63], [32 x i32] zeroinitializer, [32 x i32] [i32 141, i32 210, i32 218, i32 199, i32 68, i32 214, i32 122, i32 219, i32 38, i32 125, i32 29, i32 184, i32 225, i32 222, i32 157, i32 122, i32 125, i32 23, i32 126, i32 28, i32 55, i32 4, i32 141, i32 45, i32 124, i32 94, i32 24, i32 56, i32 30, i32 175, i32 199, i32 27], [32 x i32] [i32 84, i32 131, i32 2, i32 24, i32 130, i32 147, i32 153, i32 7, i32 208, i32 167, i32 218, i32 216, i32 117, i32 137, i32 250, i32 242, i32 217, i32 163, i32 184, i32 107, i32 90, i32 53, i32 40, i32 210, i32 107, i32 89, i32 194, i32 248, i32 69, i32 226, i32 188, i32 6], [32 x i32] [i32 47, i32 102, i32 41, i32 27, i32 4, i32 137, i32 189, i32 126, i32 238, i32 110, i32 221, i32 183, i32 14, i32 239, i32 176, i32 12, i32 180, i32 252, i32 127, i32 194, i32 201, i32 58, i32 60, i32 100, i32 239, i32 69, i32 68, i32 175, i32 138, i32 144, i32 101, i32 118], [32 x i32] [i32 247, i32 212, i32 22, i32 108, i32 78, i32 149, i32 157, i32 93, i32 15, i32 145, i32 43, i32 82, i32 254, i32 92, i32 52, i32 229, i32 48, i32 230, i32 164, i32 59, i32 243, i32 243, i32 52, i32 8, i32 169, i32 74, i32 160, i32 181, i32 110, i32 179, i32 9, i32 10], [32 x i32] zeroinitializer, [32 x i32] [i32 219, i32 159, i32 44, i32 252, i32 214, i32 178, i32 30, i32 46, i32 82, i32 122, i32 6, i32 135, i32 45, i32 134, i32 114, i32 43, i32 109, i32 144, i32 119, i32 70, i32 67, i32 181, i32 122, i32 248, i32 96, i32 125, i32 145, i32 96, i32 91, i32 157, i32 158, i32 7], [32 x i32] [i32 77, i32 74, i32 215, i32 152, i32 113, i32 87, i32 172, i32 125, i32 139, i32 55, i32 189, i32 99, i32 255, i32 135, i32 177, i32 73, i32 149, i32 32, i32 124, i32 207, i32 124, i32 89, i32 196, i32 145, i32 156, i32 239, i32 208, i32 219, i32 96, i32 9, i32 157, i32 70], [32 x i32] [i32 42, i32 54, i32 104, i32 252, i32 95, i32 182, i32 79, i32 165, i32 227, i32 157, i32 36, i32 47, i32 192, i32 147, i32 97, i32 207, i32 248, i32 10, i32 237, i32 225, i32 219, i32 39, i32 236, i32 14, i32 20, i32 50, i32 95, i32 142, i32 161, i32 98, i32 65, i32 22], [32 x i32] [i32 146, i32 103, i32 119, i32 86, i32 161, i32 255, i32 196, i32 197, i32 149, i32 240, i32 227, i32 58, i32 10, i32 202, i32 148, i32 77, i32 158, i32 126, i32 61, i32 185, i32 110, i32 182, i32 176, i32 206, i32 164, i32 48, i32 137, i32 153, i32 233, i32 173, i32 17, i32 89], [32 x i32] zeroinitializer, [32 x i32] [i32 50, i32 153, i32 147, i32 209, i32 154, i32 114, i32 243, i32 169, i32 22, i32 189, i32 180, i32 76, i32 221, i32 249, i32 212, i32 178, i32 100, i32 154, i32 211, i32 5, i32 228, i32 163, i32 115, i32 28, i32 203, i32 126, i32 87, i32 103, i32 255, i32 4, i32 179, i32 16], [32 x i32] [i32 4, i32 253, i32 136, i32 60, i32 12, i32 208, i32 9, i32 82, i32 81, i32 79, i32 6, i32 25, i32 204, i32 195, i32 187, i32 222, i32 128, i32 197, i32 51, i32 188, i32 249, i32 243, i32 23, i32 54, i32 221, i32 198, i32 222, i32 232, i32 155, i32 93, i32 121, i32 27], [32 x i32] [i32 79, i32 0, i32 178, i32 102, i32 85, i32 237, i32 74, i32 237, i32 141, i32 225, i32 102, i32 24, i32 178, i32 20, i32 116, i32 141, i32 253, i32 26, i32 54, i32 15, i32 38, i32 92, i32 139, i32 137, i32 243, i32 171, i32 242, i32 243, i32 36, i32 103, i32 253, i32 112], [32 x i32] [i32 235, i32 203, i32 197, i32 112, i32 145, i32 49, i32 16, i32 147, i32 13, i32 200, i32 208, i32 239, i32 98, i32 232, i32 111, i32 130, i32 227, i32 105, i32 61, i32 145, i32 127, i32 49, i32 225, i32 38, i32 53, i32 60, i32 74, i32 47, i32 171, i32 196, i32 154, i32 94], [32 x i32] zeroinitializer, [32 x i32] [i32 246, i32 219, i32 13, i32 34, i32 61, i32 181, i32 20, i32 117, i32 49, i32 240, i32 129, i32 226, i32 185, i32 55, i32 162, i32 169, i32 132, i32 17, i32 154, i32 7, i32 181, i32 83, i32 137, i32 120, i32 169, i32 48, i32 39, i32 161, i32 241, i32 78, i32 92, i32 46], [32 x i32] [i32 206, i32 36, i32 239, i32 123, i32 134, i32 242, i32 15, i32 119, i32 232, i32 92, i32 125, i32 135, i32 56, i32 45, i32 239, i32 175, i32 242, i32 140, i32 114, i32 46, i32 235, i32 182, i32 85, i32 75, i32 110, i32 241, i32 78, i32 138, i32 14, i32 154, i32 108, i32 76], [32 x i32] [i32 78, i32 109, i32 195, i32 167, i32 79, i32 34, i32 69, i32 38, i32 162, i32 126, i32 22, i32 247, i32 247, i32 99, i32 220, i32 134, i32 1, i32 42, i32 113, i32 56, i32 92, i32 51, i32 195, i32 206, i32 48, i32 255, i32 249, i32 44, i32 145, i32 113, i32 138, i32 114], [32 x i32] [i32 146, i32 126, i32 80, i32 39, i32 114, i32 215, i32 12, i32 214, i32 105, i32 150, i32 129, i32 53, i32 132, i32 148, i32 53, i32 139, i32 108, i32 170, i32 98, i32 134, i32 110, i32 28, i32 21, i32 243, i32 108, i32 179, i32 255, i32 101, i32 27, i32 162, i32 155, i32 89], [32 x i32] zeroinitializer, [32 x i32] [i32 241, i32 89, i32 39, i32 216, i32 219, i32 90, i32 17, i32 94, i32 130, i32 243, i32 56, i32 255, i32 28, i32 237, i32 254, i32 63, i32 100, i32 84, i32 63, i32 127, i32 209, i32 129, i32 237, i32 239, i32 101, i32 197, i32 203, i32 253, i32 225, i32 128, i32 205, i32 17], [32 x i32] [i32 238, i32 243, i32 0, i32 161, i32 80, i32 222, i32 192, i32 182, i32 1, i32 227, i32 140, i32 60, i32 77, i32 49, i32 210, i32 176, i32 88, i32 205, i32 237, i32 16, i32 74, i32 122, i32 239, i32 128, i32 169, i32 25, i32 50, i32 243, i32 216, i32 51, i32 140, i32 6], [32 x i32] [i32 233, i32 195, i32 188, i32 123, i32 92, i32 252, i32 178, i32 249, i32 201, i32 47, i32 229, i32 186, i32 58, i32 11, i32 171, i32 100, i32 56, i32 111, i32 91, i32 75, i32 147, i32 218, i32 100, i32 236, i32 77, i32 61, i32 160, i32 245, i32 187, i32 186, i32 71, i32 72], [32 x i32] [i32 135, i32 192, i32 177, i32 240, i32 163, i32 111, i32 12, i32 147, i32 169, i32 10, i32 114, i32 239, i32 92, i32 190, i32 101, i32 53, i32 167, i32 106, i32 78, i32 44, i32 191, i32 33, i32 35, i32 232, i32 47, i32 151, i32 199, i32 62, i32 200, i32 23, i32 172, i32 30], [32 x i32] zeroinitializer, [32 x i32] [i32 150, i32 136, i32 166, i32 171, i32 143, i32 227, i32 58, i32 73, i32 248, i32 254, i32 52, i32 231, i32 106, i32 178, i32 254, i32 64, i32 38, i32 116, i32 87, i32 76, i32 246, i32 212, i32 153, i32 206, i32 93, i32 123, i32 47, i32 103, i32 214, i32 90, i32 228, i32 78], [32 x i32] [i32 219, i32 250, i32 155, i32 44, i32 212, i32 35, i32 103, i32 44, i32 138, i32 99, i32 108, i32 7, i32 38, i32 72, i32 79, i32 194, i32 3, i32 210, i32 83, i32 32, i32 40, i32 237, i32 101, i32 113, i32 71, i32 169, i32 22, i32 22, i32 18, i32 188, i32 40, i32 51], [32 x i32] [i32 134, i32 230, i32 140, i32 29, i32 223, i32 202, i32 252, i32 213, i32 248, i32 58, i32 195, i32 68, i32 114, i32 230, i32 120, i32 157, i32 43, i32 151, i32 248, i32 40, i32 69, i32 180, i32 32, i32 201, i32 42, i32 140, i32 103, i32 170, i32 17, i32 197, i32 91, i32 47], [32 x i32] [i32 51, i32 167, i32 144, i32 124, i32 195, i32 111, i32 23, i32 165, i32 160, i32 103, i32 114, i32 23, i32 234, i32 126, i32 99, i32 20, i32 131, i32 222, i32 193, i32 113, i32 45, i32 65, i32 50, i32 122, i32 243, i32 209, i32 43, i32 216, i32 42, i32 166, i32 70, i32 54], [32 x i32] zeroinitializer, [32 x i32] [i32 156, i32 178, i32 97, i32 10, i32 152, i32 42, i32 165, i32 215, i32 238, i32 169, i32 172, i32 101, i32 203, i32 10, i32 30, i32 226, i32 190, i32 220, i32 133, i32 89, i32 15, i32 156, i32 166, i32 87, i32 52, i32 165, i32 135, i32 235, i32 123, i32 30, i32 12, i32 60], [32 x i32] [i32 10, i32 103, i32 144, i32 109, i32 12, i32 76, i32 204, i32 192, i32 230, i32 189, i32 167, i32 94, i32 85, i32 140, i32 205, i32 88, i32 155, i32 17, i32 162, i32 187, i32 75, i32 177, i32 67, i32 4, i32 60, i32 85, i32 237, i32 35, i32 254, i32 205, i32 177, i32 83], [32 x i32] [i32 13, i32 136, i32 26, i32 144, i32 126, i32 220, i32 216, i32 254, i32 193, i32 47, i32 93, i32 103, i32 238, i32 103, i32 47, i32 237, i32 111, i32 85, i32 67, i32 95, i32 135, i32 20, i32 53, i32 66, i32 211, i32 117, i32 174, i32 213, i32 211, i32 133, i32 26, i32 118], [32 x i32] [i32 152, i32 131, i32 194, i32 55, i32 160, i32 65, i32 168, i32 72, i32 92, i32 95, i32 191, i32 200, i32 250, i32 36, i32 224, i32 89, i32 44, i32 189, i32 246, i32 129, i32 126, i32 136, i32 230, i32 202, i32 4, i32 216, i32 93, i32 96, i32 187, i32 116, i32 167, i32 11], [32 x i32] zeroinitializer, [32 x i32] [i32 72, i32 213, i32 57, i32 74, i32 11, i32 32, i32 106, i32 67, i32 160, i32 7, i32 130, i32 94, i32 73, i32 124, i32 201, i32 71, i32 241, i32 124, i32 55, i32 185, i32 35, i32 239, i32 107, i32 70, i32 69, i32 140, i32 69, i32 118, i32 223, i32 20, i32 107, i32 110], [32 x i32] [i32 76, i32 111, i32 254, i32 107, i32 12, i32 98, i32 215, i32 72, i32 113, i32 239, i32 177, i32 133, i32 121, i32 192, i32 237, i32 36, i32 177, i32 8, i32 147, i32 118, i32 142, i32 247, i32 56, i32 142, i32 235, i32 254, i32 128, i32 64, i32 175, i32 144, i32 100, i32 73], [32 x i32] [i32 61, i32 129, i32 240, i32 235, i32 22, i32 253, i32 88, i32 51, i32 141, i32 124, i32 26, i32 251, i32 32, i32 44, i32 138, i32 238, i32 144, i32 187, i32 51, i32 109, i32 69, i32 233, i32 142, i32 153, i32 133, i32 225, i32 8, i32 31, i32 197, i32 241, i32 181, i32 70], [32 x i32] [i32 224, i32 103, i32 233, i32 123, i32 219, i32 150, i32 92, i32 176, i32 50, i32 208, i32 89, i32 49, i32 144, i32 220, i32 146, i32 151, i32 172, i32 9, i32 56, i32 49, i32 15, i32 126, i32 214, i32 93, i32 208, i32 6, i32 182, i32 31, i32 234, i32 240, i32 91, i32 7], [32 x i32] zeroinitializer, [32 x i32] [i32 76, i32 182, i32 105, i32 200, i32 129, i32 149, i32 148, i32 51, i32 146, i32 52, i32 233, i32 60, i32 132, i32 13, i32 61, i32 90, i32 55, i32 156, i32 34, i32 160, i32 170, i32 101, i32 206, i32 180, i32 194, i32 45, i32 102, i32 103, i32 2, i32 255, i32 116, i32 16], [32 x i32] [i32 51, i32 254, i32 66, i32 42, i32 54, i32 43, i32 46, i32 54, i32 100, i32 92, i32 139, i32 204, i32 129, i32 106, i32 21, i32 8, i32 161, i32 39, i32 232, i32 87, i32 229, i32 120, i32 142, i32 242, i32 88, i32 25, i32 18, i32 66, i32 174, i32 196, i32 99, i32 62], [32 x i32] [i32 159, i32 4, i32 8, i32 40, i32 190, i32 135, i32 218, i32 128, i32 40, i32 56, i32 222, i32 159, i32 205, i32 228, i32 227, i32 98, i32 251, i32 46, i32 70, i32 141, i32 1, i32 179, i32 6, i32 81, i32 212, i32 25, i32 59, i32 17, i32 250, i32 226, i32 173, i32 30], [32 x i32] [i32 145, i32 74, i32 7, i32 173, i32 8, i32 117, i32 193, i32 79, i32 164, i32 178, i32 195, i32 111, i32 70, i32 62, i32 177, i32 206, i32 82, i32 171, i32 103, i32 9, i32 84, i32 72, i32 107, i32 108, i32 215, i32 29, i32 113, i32 118, i32 203, i32 255, i32 221, i32 49], [32 x i32] zeroinitializer, [32 x i32] [i32 190, i32 87, i32 189, i32 14, i32 15, i32 172, i32 94, i32 118, i32 163, i32 113, i32 173, i32 43, i32 16, i32 69, i32 2, i32 236, i32 89, i32 213, i32 93, i32 169, i32 68, i32 204, i32 37, i32 76, i32 179, i32 60, i32 91, i32 105, i32 7, i32 85, i32 38, i32 107], [32 x i32] [i32 53, i32 13, i32 52, i32 10, i32 184, i32 103, i32 86, i32 41, i32 32, i32 243, i32 25, i32 95, i32 226, i32 131, i32 66, i32 115, i32 83, i32 168, i32 197, i32 2, i32 25, i32 51, i32 180, i32 100, i32 189, i32 195, i32 135, i32 140, i32 215, i32 118, i32 237, i32 37], [32 x i32] [i32 157, i32 35, i32 189, i32 21, i32 254, i32 82, i32 82, i32 21, i32 38, i32 121, i32 134, i32 186, i32 6, i32 86, i32 102, i32 187, i32 140, i32 46, i32 16, i32 17, i32 213, i32 74, i32 24, i32 82, i32 218, i32 132, i32 68, i32 240, i32 62, i32 233, i32 140, i32 53], [32 x i32] [i32 44, i32 185, i32 66, i32 164, i32 175, i32 59, i32 66, i32 14, i32 194, i32 15, i32 242, i32 234, i32 131, i32 175, i32 154, i32 19, i32 23, i32 176, i32 189, i32 137, i32 23, i32 227, i32 114, i32 203, i32 14, i32 118, i32 126, i32 65, i32 99, i32 4, i32 136, i32 113], [32 x i32] zeroinitializer, [32 x i32] [i32 231, i32 59, i32 101, i32 17, i32 223, i32 178, i32 242, i32 99, i32 148, i32 18, i32 111, i32 92, i32 158, i32 119, i32 193, i32 182, i32 216, i32 171, i32 88, i32 122, i32 29, i32 149, i32 115, i32 221, i32 231, i32 227, i32 111, i32 242, i32 3, i32 29, i32 219, i32 118], [32 x i32] [i32 197, i32 102, i32 128, i32 19, i32 14, i32 72, i32 140, i32 135, i32 49, i32 132, i32 180, i32 96, i32 237, i32 197, i32 236, i32 182, i32 197, i32 5, i32 51, i32 95, i32 47, i32 125, i32 64, i32 182, i32 50, i32 29, i32 56, i32 116, i32 27, i32 241, i32 9, i32 61], [32 x i32] [i32 23, i32 190, i32 235, i32 133, i32 237, i32 158, i32 205, i32 86, i32 245, i32 23, i32 69, i32 66, i32 180, i32 31, i32 68, i32 76, i32 5, i32 116, i32 21, i32 71, i32 0, i32 198, i32 106, i32 61, i32 36, i32 9, i32 13, i32 88, i32 177, i32 66, i32 215, i32 4], [32 x i32] [i32 63, i32 220, i32 5, i32 203, i32 65, i32 60, i32 200, i32 35, i32 4, i32 44, i32 56, i32 153, i32 227, i32 104, i32 85, i32 249, i32 211, i32 50, i32 199, i32 191, i32 250, i32 212, i32 27, i32 93, i32 222, i32 220, i32 16, i32 66, i32 192, i32 66, i32 217, i32 117], [32 x i32] zeroinitializer, [32 x i32] [i32 20, i32 174, i32 95, i32 136, i32 123, i32 165, i32 144, i32 223, i32 16, i32 178, i32 139, i32 94, i32 36, i32 23, i32 195, i32 163, i32 212, i32 15, i32 146, i32 97, i32 26, i32 25, i32 90, i32 173, i32 118, i32 189, i32 216, i32 28, i32 221, i32 224, i32 18, i32 109], [32 x i32] [i32 148, i32 213, i32 95, i32 31, i32 162, i32 251, i32 235, i32 225, i32 7, i32 52, i32 248, i32 32, i32 173, i32 129, i32 48, i32 6, i32 45, i32 161, i32 129, i32 149, i32 54, i32 207, i32 17, i32 11, i32 175, i32 193, i32 43, i32 154, i32 108, i32 85, i32 193, i32 22], [32 x i32] [i32 51, i32 121, i32 231, i32 24, i32 230, i32 15, i32 87, i32 147, i32 21, i32 160, i32 167, i32 170, i32 196, i32 191, i32 79, i32 48, i32 116, i32 149, i32 94, i32 105, i32 74, i32 91, i32 69, i32 228, i32 0, i32 235, i32 35, i32 116, i32 76, i32 223, i32 107, i32 69], [32 x i32] [i32 34, i32 190, i32 131, i32 182, i32 75, i32 128, i32 107, i32 67, i32 36, i32 94, i32 239, i32 153, i32 155, i32 168, i32 252, i32 37, i32 141, i32 59, i32 3, i32 148, i32 43, i32 62, i32 231, i32 149, i32 118, i32 155, i32 204, i32 21, i32 219, i32 50, i32 230, i32 102], [32 x i32] zeroinitializer, [32 x i32] [i32 42, i32 80, i32 227, i32 7, i32 21, i32 89, i32 242, i32 139, i32 129, i32 242, i32 243, i32 211, i32 108, i32 153, i32 140, i32 112, i32 103, i32 236, i32 204, i32 238, i32 158, i32 89, i32 69, i32 89, i32 125, i32 71, i32 117, i32 105, i32 245, i32 36, i32 147, i32 93], [32 x i32] [i32 163, i32 219, i32 247, i32 48, i32 216, i32 194, i32 154, i32 225, i32 211, i32 206, i32 34, i32 229, i32 128, i32 30, i32 217, i32 228, i32 31, i32 171, i32 192, i32 113, i32 26, i32 134, i32 14, i32 39, i32 153, i32 91, i32 250, i32 118, i32 153, i32 176, i32 8, i32 60], [32 x i32] [i32 211, i32 181, i32 109, i32 5, i32 63, i32 159, i32 243, i32 21, i32 141, i32 124, i32 202, i32 201, i32 252, i32 138, i32 124, i32 148, i32 176, i32 99, i32 54, i32 155, i32 120, i32 209, i32 145, i32 31, i32 147, i32 216, i32 87, i32 67, i32 222, i32 118, i32 163, i32 67], [32 x i32] [i32 178, i32 235, i32 71, i32 70, i32 24, i32 62, i32 31, i32 153, i32 12, i32 204, i32 241, i32 44, i32 224, i32 231, i32 143, i32 224, i32 1, i32 126, i32 101, i32 184, i32 12, i32 208, i32 251, i32 200, i32 185, i32 144, i32 152, i32 51, i32 97, i32 59, i32 216, i32 39], [32 x i32] zeroinitializer, [32 x i32] [i32 152, i32 11, i32 228, i32 222, i32 219, i32 168, i32 250, i32 130, i32 116, i32 6, i32 82, i32 109, i32 8, i32 82, i32 138, i32 255, i32 98, i32 197, i32 106, i32 68, i32 15, i32 81, i32 140, i32 31, i32 110, i32 182, i32 198, i32 44, i32 129, i32 211, i32 118, i32 70], [32 x i32] [i32 7, i32 238, i32 167, i32 173, i32 183, i32 9, i32 11, i32 73, i32 78, i32 191, i32 202, i32 229, i32 33, i32 230, i32 230, i32 175, i32 213, i32 103, i32 243, i32 206, i32 126, i32 124, i32 147, i32 123, i32 90, i32 16, i32 18, i32 14, i32 108, i32 6, i32 17, i32 117], [32 x i32] [i32 150, i32 157, i32 49, i32 244, i32 162, i32 190, i32 129, i32 185, i32 165, i32 89, i32 158, i32 186, i32 7, i32 190, i32 116, i32 88, i32 216, i32 235, i32 197, i32 159, i32 61, i32 209, i32 244, i32 174, i32 206, i32 83, i32 223, i32 79, i32 199, i32 42, i32 137, i32 77], [32 x i32] [i32 7, i32 152, i32 97, i32 232, i32 106, i32 210, i32 129, i32 73, i32 37, i32 213, i32 91, i32 24, i32 199, i32 53, i32 82, i32 81, i32 164, i32 70, i32 173, i32 24, i32 13, i32 201, i32 95, i32 24, i32 145, i32 59, i32 180, i32 192, i32 96, i32 89, i32 141, i32 102], [32 x i32] zeroinitializer, [32 x i32] [i32 15, i32 227, i32 137, i32 3, i32 215, i32 34, i32 149, i32 159, i32 202, i32 180, i32 141, i32 158, i32 109, i32 151, i32 255, i32 141, i32 33, i32 89, i32 7, i32 239, i32 3, i32 45, i32 94, i32 248, i32 68, i32 70, i32 231, i32 133, i32 128, i32 197, i32 137, i32 80], [32 x i32] [i32 194, i32 91, i32 155, i32 120, i32 35, i32 27, i32 58, i32 136, i32 148, i32 95, i32 10, i32 155, i32 152, i32 43, i32 110, i32 83, i32 17, i32 246, i32 255, i32 198, i32 125, i32 66, i32 204, i32 2, i32 128, i32 64, i32 13, i32 30, i32 251, i32 175, i32 97, i32 7], [32 x i32] [i32 155, i32 24, i32 128, i32 94, i32 219, i32 5, i32 189, i32 198, i32 183, i32 60, i32 194, i32 64, i32 77, i32 93, i32 206, i32 151, i32 138, i32 52, i32 21, i32 171, i32 40, i32 93, i32 16, i32 240, i32 55, i32 12, i32 204, i32 22, i32 250, i32 31, i32 51, i32 13], [32 x i32] [i32 38, i32 220, i32 118, i32 59, i32 252, i32 249, i32 156, i32 63, i32 137, i32 11, i32 98, i32 83, i32 175, i32 131, i32 1, i32 46, i32 188, i32 106, i32 198, i32 3, i32 13, i32 117, i32 42, i32 13, i32 230, i32 148, i32 84, i32 207, i32 179, i32 229, i32 150, i32 37], [32 x i32] zeroinitializer, [32 x i32] [i32 37, i32 13, i32 214, i32 199, i32 35, i32 71, i32 16, i32 173, i32 199, i32 8, i32 92, i32 135, i32 135, i32 147, i32 152, i32 24, i32 184, i32 211, i32 156, i32 172, i32 90, i32 61, i32 197, i32 117, i32 248, i32 73, i32 50, i32 20, i32 204, i32 81, i32 150, i32 36], [32 x i32] [i32 189, i32 89, i32 61, i32 191, i32 92, i32 49, i32 68, i32 44, i32 50, i32 148, i32 4, i32 96, i32 132, i32 15, i32 173, i32 0, i32 182, i32 143, i32 201, i32 29, i32 204, i32 92, i32 162, i32 73, i32 14, i32 80, i32 145, i32 8, i32 154, i32 67, i32 85, i32 5], [32 x i32] [i32 18, i32 85, i32 249, i32 218, i32 203, i32 68, i32 167, i32 220, i32 87, i32 226, i32 249, i32 154, i32 230, i32 7, i32 35, i32 96, i32 84, i32 167, i32 57, i32 165, i32 155, i32 132, i32 86, i32 110, i32 170, i32 139, i32 143, i32 176, i32 44, i32 135, i32 175, i32 103], [32 x i32] [i32 23, i32 180, i32 174, i32 114, i32 89, i32 208, i32 170, i32 168, i32 22, i32 139, i32 99, i32 17, i32 179, i32 67, i32 4, i32 218, i32 12, i32 168, i32 183, i32 104, i32 221, i32 78, i32 84, i32 231, i32 175, i32 93, i32 93, i32 5, i32 118, i32 54, i32 236, i32 13], [32 x i32] zeroinitializer, [32 x i32] [i32 135, i32 71, i32 157, i32 233, i32 37, i32 213, i32 227, i32 71, i32 120, i32 223, i32 133, i32 167, i32 133, i32 94, i32 122, i32 76, i32 95, i32 121, i32 26, i32 243, i32 162, i32 178, i32 40, i32 160, i32 156, i32 221, i32 48, i32 64, i32 212, i32 56, i32 189, i32 40], [32 x i32] [i32 38, i32 225, i32 123, i32 95, i32 229, i32 220, i32 63, i32 125, i32 161, i32 167, i32 38, i32 68, i32 34, i32 35, i32 192, i32 143, i32 125, i32 241, i32 181, i32 17, i32 71, i32 123, i32 25, i32 212, i32 117, i32 111, i32 30, i32 165, i32 39, i32 254, i32 200, i32 14], [32 x i32] [i32 253, i32 91, i32 78, i32 141, i32 182, i32 126, i32 130, i32 155, i32 239, i32 206, i32 4, i32 105, i32 81, i32 82, i32 255, i32 239, i32 160, i32 82, i32 181, i32 121, i32 23, i32 94, i32 47, i32 222, i32 214, i32 60, i32 45, i32 160, i32 67, i32 180, i32 11, i32 25], [32 x i32] [i32 229, i32 137, i32 138, i32 118, i32 108, i32 219, i32 77, i32 10, i32 91, i32 114, i32 157, i32 89, i32 110, i32 99, i32 99, i32 24, i32 124, i32 227, i32 250, i32 226, i32 219, i32 161, i32 141, i32 244, i32 165, i32 215, i32 22, i32 178, i32 208, i32 179, i32 63, i32 57], [32 x i32] zeroinitializer, [32 x i32] [i32 233, i32 115, i32 111, i32 33, i32 185, i32 222, i32 34, i32 125, i32 235, i32 151, i32 49, i32 16, i32 163, i32 234, i32 225, i32 198, i32 55, i32 235, i32 143, i32 67, i32 88, i32 222, i32 65, i32 100, i32 14, i32 62, i32 7, i32 153, i32 61, i32 241, i32 223, i32 30], [32 x i32] [i32 123, i32 52, i32 36, i32 76, i32 207, i32 56, i32 229, i32 108, i32 10, i32 1, i32 44, i32 34, i32 11, i32 36, i32 56, i32 173, i32 36, i32 126, i32 25, i32 240, i32 108, i32 249, i32 49, i32 244, i32 53, i32 17, i32 246, i32 70, i32 51, i32 58, i32 35, i32 89], [32 x i32] [i32 196, i32 11, i32 75, i32 98, i32 153, i32 55, i32 132, i32 63, i32 116, i32 162, i32 249, i32 206, i32 226, i32 11, i32 15, i32 42, i32 61, i32 163, i32 227, i32 219, i32 90, i32 157, i32 147, i32 204, i32 165, i32 239, i32 130, i32 145, i32 29, i32 230, i32 108, i32 104], [32 x i32] [i32 26, i32 234, i32 191, i32 253, i32 74, i32 60, i32 142, i32 236, i32 41, i32 126, i32 119, i32 119, i32 18, i32 153, i32 215, i32 132, i32 249, i32 85, i32 127, i32 241, i32 139, i32 180, i32 210, i32 149, i32 163, i32 141, i32 240, i32 138, i32 167, i32 235, i32 130, i32 75], [32 x i32] zeroinitializer, [32 x i32] [i32 193, i32 205, i32 144, i32 102, i32 185, i32 118, i32 160, i32 91, i32 165, i32 133, i32 117, i32 35, i32 249, i32 137, i32 165, i32 130, i32 178, i32 111, i32 177, i32 235, i32 196, i32 105, i32 111, i32 24, i32 90, i32 237, i32 148, i32 61, i32 157, i32 217, i32 44, i32 26], [32 x i32] [i32 193, i32 86, i32 150, i32 145, i32 95, i32 31, i32 187, i32 84, i32 111, i32 136, i32 137, i32 10, i32 178, i32 214, i32 65, i32 66, i32 106, i32 130, i32 238, i32 20, i32 170, i32 118, i32 48, i32 101, i32 15, i32 103, i32 57, i32 166, i32 81, i32 124, i32 73, i32 36], [32 x i32] [i32 219, i32 167, i32 157, i32 157, i32 191, i32 160, i32 204, i32 237, i32 83, i32 162, i32 162, i32 25, i32 57, i32 72, i32 131, i32 25, i32 55, i32 88, i32 209, i32 4, i32 40, i32 64, i32 247, i32 138, i32 194, i32 8, i32 183, i32 165, i32 66, i32 207, i32 83, i32 76], [32 x i32] [i32 31, i32 150, i32 255, i32 52, i32 44, i32 19, i32 33, i32 203, i32 10, i32 137, i32 133, i32 190, i32 179, i32 112, i32 158, i32 30, i32 222, i32 151, i32 175, i32 150, i32 48, i32 247, i32 72, i32 137, i32 64, i32 141, i32 7, i32 241, i32 37, i32 240, i32 48, i32 88], [32 x i32] zeroinitializer, [32 x i32] [i32 43, i32 6, i32 217, i32 161, i32 93, i32 225, i32 244, i32 209, i32 30, i32 60, i32 154, i32 198, i32 41, i32 43, i32 19, i32 19, i32 120, i32 192, i32 216, i32 22, i32 23, i32 45, i32 158, i32 169, i32 201, i32 121, i32 87, i32 171, i32 36, i32 145, i32 146, i32 25], [32 x i32] [i32 20, i32 137, i32 115, i32 161, i32 55, i32 135, i32 106, i32 122, i32 207, i32 29, i32 217, i32 46, i32 26, i32 103, i32 237, i32 116, i32 192, i32 240, i32 156, i32 51, i32 221, i32 223, i32 8, i32 191, i32 123, i32 209, i32 102, i32 218, i32 230, i32 201, i32 73, i32 8], [32 x i32] [i32 243, i32 225, i32 43, i32 124, i32 5, i32 134, i32 128, i32 147, i32 74, i32 173, i32 180, i32 143, i32 126, i32 153, i32 12, i32 253, i32 205, i32 239, i32 209, i32 255, i32 44, i32 105, i32 52, i32 19, i32 65, i32 100, i32 207, i32 59, i32 208, i32 144, i32 9, i32 30], [32 x i32] [i32 231, i32 32, i32 114, i32 124, i32 109, i32 148, i32 95, i32 82, i32 68, i32 84, i32 227, i32 241, i32 178, i32 176, i32 54, i32 70, i32 15, i32 174, i32 146, i32 232, i32 112, i32 157, i32 110, i32 121, i32 177, i32 173, i32 55, i32 169, i32 95, i32 192, i32 222, i32 3], [32 x i32] zeroinitializer, [32 x i32] [i32 236, i32 211, i32 255, i32 87, i32 11, i32 176, i32 178, i32 220, i32 248, i32 79, i32 226, i32 18, i32 213, i32 54, i32 190, i32 107, i32 9, i32 67, i32 109, i32 163, i32 77, i32 144, i32 45, i32 184, i32 116, i32 232, i32 113, i32 69, i32 25, i32 139, i32 12, i32 106], [32 x i32] [i32 120, i32 132, i32 225, i32 86, i32 69, i32 105, i32 104, i32 90, i32 79, i32 184, i32 177, i32 41, i32 255, i32 51, i32 3, i32 49, i32 183, i32 203, i32 150, i32 37, i32 230, i32 230, i32 65, i32 152, i32 26, i32 187, i32 3, i32 86, i32 242, i32 178, i32 145, i32 52], [32 x i32] [i32 139, i32 241, i32 160, i32 245, i32 220, i32 41, i32 180, i32 226, i32 7, i32 198, i32 122, i32 0, i32 208, i32 137, i32 23, i32 81, i32 212, i32 187, i32 212, i32 34, i32 234, i32 126, i32 125, i32 124, i32 36, i32 234, i32 242, i32 232, i32 34, i32 18, i32 149, i32 6], [32 x i32] [i32 29, i32 134, i32 78, i32 207, i32 247, i32 55, i32 16, i32 37, i32 143, i32 18, i32 251, i32 25, i32 251, i32 224, i32 237, i32 16, i32 200, i32 226, i32 245, i32 117, i32 177, i32 51, i32 192, i32 150, i32 13, i32 251, i32 21, i32 108, i32 13, i32 7, i32 95, i32 5]] ; [#uses=36 type=[425 x [32 x i32]]*]
@crypto_sign_ed25519_ref_ge25519_base.z.v = constant [32 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_ed25519_ref_ge25519_base.y.v = constant [32 x i32] [i32 88, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102, i32 102] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_ed25519_ref_ge25519_base.x.v = constant [32 x i32] [i32 26, i32 213, i32 37, i32 143, i32 96, i32 45, i32 86, i32 201, i32 178, i32 167, i32 37, i32 149, i32 96, i32 199, i32 44, i32 105, i32 92, i32 220, i32 214, i32 253, i32 49, i32 226, i32 164, i32 192, i32 254, i32 83, i32 110, i32 205, i32 211, i32 54, i32 105, i32 33] ; [#uses=0 type=[32 x i32]*]
@crypto_sign_ed25519_ref_ge25519_base.t.v = constant [32 x i32] [i32 163, i32 221, i32 183, i32 165, i32 179, i32 138, i32 222, i32 109, i32 245, i32 82, i32 81, i32 119, i32 128, i32 159, i32 240, i32 32, i32 125, i32 227, i32 171, i32 100, i32 142, i32 78, i32 234, i32 102, i32 101, i32 118, i32 139, i32 215, i32 15, i32 95, i32 135, i32 103] ; [#uses=0 type=[32 x i32]*]
@crypto_sign.str = internal unnamed_addr constant [12 x i8] c"crypto_sign\00" ; [#uses=1 type=[12 x i8]*]
@K = internal unnamed_addr constant [80 x i64] [i64 4794697086780616226, i64 8158064640168781261, i64 -5349999486874862801, i64 -1606136188198331460, i64 4131703408338449720, i64 6480981068601479193, i64 -7908458776815382629, i64 -6116909921290321640, i64 -2880145864133508542, i64 1334009975649890238, i64 2608012711638119052, i64 6128411473006802146, i64 8268148722764581231, i64 -9160688886553864527, i64 -7215885187991268811, i64 -4495734319001033068, i64 -1973867731355612462, i64 -1171420211273849373, i64 1135362057144423861, i64 2597628984639134821, i64 3308224258029322869, i64 5365058923640841347, i64 6679025012923562964, i64 8573033837759648693, i64 -7476448914759557205, i64 -6327057829258317296, i64 -5763719355590565569, i64 -4658551843659510044, i64 -4116276920077217854, i64 -3051310485924567259, i64 489312712824947311, i64 1452737877330783856, i64 2861767655752347644, i64 3322285676063803686, i64 5560940570517711597, i64 5996557281743188959, i64 7280758554555802590, i64 8532644243296465576, i64 -9096487096722542874, i64 -7894198246740708037, i64 -6719396339535248540, i64 -6333637450476146687, i64 -4446306890439682159, i64 -4076793802049405392, i64 -3345356375505022440, i64 -2983346525034927856, i64 -860691631967231958, i64 1182934255886127544, i64 1847814050463011016, i64 2177327727835720531, i64 2830643537854262169, i64 3796741975233480872, i64 4115178125766777443, i64 5681478168544905931, i64 6601373596472566643, i64 7507060721942968483, i64 8399075790359081724, i64 8693463985226723168, i64 -8878714635349349518, i64 -8302665154208450068, i64 -8016688836872298968, i64 -6606660893046293015, i64 -4685533653050689259, i64 -4147400797238176981, i64 -3880063495543823972, i64 -3348786107499101689, i64 -1523767162380948706, i64 -757361751448694408, i64 500013540394364858, i64 748580250866718886, i64 1242879168328830382, i64 1977374033974150939, i64 2944078676154940804, i64 3659926193048069267, i64 4368137639120453308, i64 4836135668995329356, i64 5532061633213252278, i64 6448918945643986474, i64 6902733635092675308, i64 7801388544844847127], align 16 ; [#uses=24 type=[80 x i64]*]
@.str816 = private unnamed_addr constant [20 x i8] c"sha512_compress_128\00", align 1 ; [#uses=2 type=[20 x i8]*]
@.str8 = private unnamed_addr constant [4 x i8] c"mul\00", align 1 ; [#uses=7 type=[4 x i8]*]
@.str715 = private unnamed_addr constant [4 x i8] c"sub\00", align 1 ; [#uses=7 type=[4 x i8]*]
@.str7 = private unnamed_addr constant [9 x i8] c"_memmove\00", align 1 ; [#uses=1 type=[9 x i8]*]
@.str614 = private unnamed_addr constant [5 x i8] c"icmp\00", align 1 ; [#uses=7 type=[5 x i8]*]
@.str6 = private unnamed_addr constant [12 x i8] c"sha512_init\00", align 1 ; [#uses=1 type=[12 x i8]*]
@.str513 = private unnamed_addr constant [5 x i8] c"lshr\00", align 1 ; [#uses=7 type=[5 x i8]*]
@.str5 = private unnamed_addr constant [13 x i8] c"sha512_final\00", align 1 ; [#uses=1 type=[13 x i8]*]
@.str412 = private unnamed_addr constant [5 x i8] c"ashr\00", align 1 ; [#uses=7 type=[5 x i8]*]
@.str4 = private unnamed_addr constant [18 x i8] c"sha512_update_128\00", align 1 ; [#uses=1 type=[18 x i8]*]
@.str311 = private unnamed_addr constant [4 x i8] c"shl\00", align 1 ; [#uses=7 type=[4 x i8]*]
@.str3 = private unnamed_addr constant [17 x i8] c"sha512_update_32\00", align 1 ; [#uses=1 type=[17 x i8]*]
@.str210 = private unnamed_addr constant [4 x i8] c"add\00", align 1 ; [#uses=7 type=[4 x i8]*]
@.str2 = private unnamed_addr constant [6 x i8] c"m_axi\00", align 1 ; [#uses=1 type=[6 x i8]*]
@.str19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=153 type=[1 x i8]*]
@.str1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=45 type=[1 x i8]*]
@.str = private unnamed_addr constant [10 x i8] c"s_axilite\00", align 1 ; [#uses=4 type=[10 x i8]*]

; [#uses=3]
define internal fastcc { i64, i64 } @sha512_update_32.1(i64 %md.length.read, [8 x i64]* nocapture %md.state, i64 %md.curlen.read, [128 x i8]* nocapture %md.buf, [64 x i8]* nocapture %in, i7 %in.offset) {
  %in.offset.cast1 = zext i7 %in.offset to i64    ; [#uses=2 type=i64]
  call void (...)* @_ssdm_SpecKeepAssert(i64 %in.offset.cast1), !hlsrange !210
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{i64 %md.length.read}, i64 0, metadata !211), !dbg !241 ; [debug line = 298:39] [debug variable = md.length]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !242), !dbg !241 ; [debug line = 298:39] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{i64 %md.curlen.read}, i64 0, metadata !246), !dbg !241 ; [debug line = 298:39] [debug variable = md.curlen]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md.buf}, i64 0, metadata !250), !dbg !241 ; [debug line = 298:39] [debug variable = md.buf]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !254 ; [debug line = 300:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !256 ; [debug line = 301:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !257 ; [debug line = 302:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !258 ; [debug line = 303:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !259 ; [debug line = 304:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !260 ; [debug line = 305:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !261 ; [debug line = 306:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !262), !dbg !263 ; [debug line = 311:19] [debug variable = temp_buf]
  %tmp = icmp ugt i64 %md.curlen.read, 128, !dbg !264 ; [#uses=1 type=i1] [debug line = 315:5]
  br i1 %tmp, label %.loopexit, label %.backedge.preheader, !dbg !264 ; [debug line = 315:5]

.backedge.preheader:                              ; preds = %0
  br label %.backedge

.backedge:                                        ; preds = %.backedge.backedge, %.backedge.preheader
  %md.length = phi i64 [ %md.length.read, %.backedge.preheader ], [ %md.length.be, %.backedge.backedge ] ; [#uses=4 type=i64]
  %md.curlen = phi i64 [ %md.curlen.read, %.backedge.preheader ], [ %md.curlen.be, %.backedge.backedge ] ; [#uses=5 type=i64]
  %inlen = phi i64 [ 32, %.backedge.preheader ], [ %inlen.be, %.backedge.backedge ] ; [#uses=6 type=i64]
  %.01.idx = phi i64 [ 0, %.backedge.preheader ], [ %.01.idx.be, %.backedge.backedge ] ; [#uses=4 type=i64]
  %md.curlen.cast = trunc i64 %md.curlen to i9    ; [#uses=1 type=i9]
  %.01.idx.cast = trunc i64 %.01.idx to i8        ; [#uses=1 type=i8]
  %sum = add i64 %in.offset.cast1, %.01.idx       ; [#uses=1 type=i64]
  %tmp.1 = icmp eq i64 %inlen, 0, !dbg !265       ; [#uses=1 type=i1] [debug line = 318:5]
  br i1 %tmp.1, label %.loopexit.loopexit, label %1, !dbg !265 ; [debug line = 318:5]

; <label>:1                                       ; preds = %.backedge
  %tmp.2 = icmp eq i64 %md.curlen, 0, !dbg !266   ; [#uses=1 type=i1] [debug line = 319:9]
  %tmp.3 = icmp ugt i64 %inlen, 127, !dbg !266    ; [#uses=1 type=i1] [debug line = 319:9]
  %or.cond = and i1 %tmp.2, %tmp.3, !dbg !266     ; [#uses=1 type=i1] [debug line = 319:9]
  br i1 %or.cond, label %2, label %._crit_edge, !dbg !266 ; [debug line = 319:9]

; <label>:2                                       ; preds = %1
  call fastcc void @sha512_compress_32([8 x i64]* %md.state, [64 x i8]* %in, i64 %sum), !dbg !268 ; [debug line = 320:23]
  %tmp.4 = add i64 %md.length, 1024, !dbg !270    ; [#uses=1 type=i64] [debug line = 323:12]
  %.01.idx8 = add i64 %.01.idx, 128, !dbg !271    ; [#uses=1 type=i64] [debug line = 324:12]
  %inlen.1 = add i64 %inlen, -128, !dbg !272      ; [#uses=1 type=i64] [debug line = 325:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen.1}, i64 0, metadata !273), !dbg !272 ; [debug line = 325:12] [debug variable = inlen]
  br label %.backedge.backedge, !dbg !274         ; [debug line = 326:9]

.backedge.backedge:                               ; preds = %11, %5, %2
  %md.length.be = phi i64 [ %tmp.4, %2 ], [ %tmp.10, %11 ], [ %md.length, %5 ] ; [#uses=1 type=i64]
  %md.curlen.be = phi i64 [ 0, %2 ], [ 0, %11 ], [ %tmp.8, %5 ] ; [#uses=1 type=i64]
  %inlen.be = phi i64 [ %inlen.1, %2 ], [ %inlen.2, %11 ], [ %inlen.2, %5 ] ; [#uses=1 type=i64]
  %.01.idx.be = phi i64 [ %.01.idx8, %2 ], [ %.01.idx9, %11 ], [ %.01.idx9, %5 ] ; [#uses=1 type=i64]
  br label %.backedge

._crit_edge:                                      ; preds = %1
  %tmp.6 = sub i64 128, %md.curlen, !dbg !275     ; [#uses=2 type=i64] [debug line = 327:12]
  %tmp.7 = icmp ult i64 %inlen, %tmp.6, !dbg !275 ; [#uses=1 type=i1] [debug line = 327:12]
  %n = select i1 %tmp.7, i64 %inlen, i64 %tmp.6, !dbg !275 ; [#uses=4 type=i64] [debug line = 327:12]
  call void @llvm.dbg.value(metadata !{i64 %n}, i64 0, metadata !277), !dbg !275 ; [debug line = 327:12] [debug variable = n]
  br label %3, !dbg !278                          ; [debug line = 329:17]

; <label>:3                                       ; preds = %4, %._crit_edge
  %i = phi i64 [ 0, %._crit_edge ], [ %i.1, %4 ]  ; [#uses=4 type=i64]
  %i.cast4 = trunc i64 %i to i9, !dbg !278        ; [#uses=1 type=i9] [debug line = 329:17]
  %i.cast = trunc i64 %i to i8, !dbg !278         ; [#uses=1 type=i8] [debug line = 329:17]
  %exitcond3 = icmp eq i64 %i, %n, !dbg !278      ; [#uses=1 type=i1] [debug line = 329:17]
  br i1 %exitcond3, label %5, label %4, !dbg !278 ; [debug line = 329:17]

; <label>:4                                       ; preds = %3
  %in.offset.cast = zext i7 %in.offset to i8      ; [#uses=1 type=i8]
  %tmp1 = add i8 %i.cast, %in.offset.cast         ; [#uses=1 type=i8]
  %sum2 = add i8 %tmp1, %.01.idx.cast             ; [#uses=1 type=i8]
  %sum2.cast = zext i8 %sum2 to i64               ; [#uses=1 type=i64]
  %in.addr = getelementptr [64 x i8]* %in, i64 0, i64 %sum2.cast, !dbg !280 ; [#uses=1 type=i8*] [debug line = 330:13]
  %in.load = load i8* %in.addr, align 1, !dbg !280 ; [#uses=1 type=i8] [debug line = 330:13]
  %tmp.5 = add i9 %md.curlen.cast, %i.cast4, !dbg !280 ; [#uses=1 type=i9] [debug line = 330:13]
  %tmp.5.cast = zext i9 %tmp.5 to i64, !dbg !280  ; [#uses=1 type=i64] [debug line = 330:13]
  %md.buf.addr = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.5.cast, !dbg !280 ; [#uses=1 type=i8*] [debug line = 330:13]
  store i8 %in.load, i8* %md.buf.addr, align 1, !dbg !280 ; [debug line = 330:13]
  %i.1 = add i64 %i, 1, !dbg !282                 ; [#uses=1 type=i64] [debug line = 329:31]
  call void @llvm.dbg.value(metadata !{i64 %i.1}, i64 0, metadata !283), !dbg !282 ; [debug line = 329:31] [debug variable = i]
  br label %3, !dbg !282                          ; [debug line = 329:31]

; <label>:5                                       ; preds = %3
  %tmp.8 = add i64 %md.curlen, %n, !dbg !284      ; [#uses=2 type=i64] [debug line = 334:12]
  %.01.idx9 = add i64 %.01.idx, %n, !dbg !285     ; [#uses=2 type=i64] [debug line = 335:12]
  %inlen.2 = sub i64 %inlen, %n, !dbg !286        ; [#uses=2 type=i64] [debug line = 336:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen.2}, i64 0, metadata !273), !dbg !286 ; [debug line = 336:12] [debug variable = inlen]
  %tmp. = icmp eq i64 %tmp.8, 128, !dbg !287      ; [#uses=1 type=i1] [debug line = 337:4]
  br i1 %tmp., label %.preheader5.preheader, label %.backedge.backedge, !dbg !287 ; [debug line = 337:4]

.preheader5.preheader:                            ; preds = %5
  br label %.preheader5, !dbg !288                ; [debug line = 338:9]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %temp_index = phi i8 [ %temp_index.2, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index, -128, !dbg !288 ; [#uses=1 type=i1] [debug line = 338:9]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %8, label %7, !dbg !288 ; [debug line = 338:9]

; <label>:7                                       ; preds = %.preheader5
  %tmp.9 = zext i8 %temp_index to i64, !dbg !291  ; [#uses=2 type=i64] [debug line = 339:6]
  %md.buf.addr.1 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.9, !dbg !291 ; [#uses=1 type=i8*] [debug line = 339:6]
  %md.buf.load = load i8* %md.buf.addr.1, align 1, !dbg !291 ; [#uses=1 type=i8] [debug line = 339:6]
  %temp_buf.addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.9, !dbg !291 ; [#uses=1 type=i8*] [debug line = 339:6]
  store i8 %md.buf.load, i8* %temp_buf.addr, align 1, !dbg !291 ; [debug line = 339:6]
  %temp_index.2 = add i8 %temp_index, 1, !dbg !293 ; [#uses=1 type=i8] [debug line = 338:39]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.2}, i64 0, metadata !294), !dbg !293 ; [debug line = 338:39] [debug variable = temp_index]
  br label %.preheader5, !dbg !293                ; [debug line = 338:39]

; <label>:8                                       ; preds = %.preheader5
  call fastcc void @sha512_compress_128([8 x i64]* %md.state, [128 x i8]* %temp_buf), !dbg !295 ; [debug line = 341:16]
  br label %.preheader, !dbg !295                 ; [debug line = 341:16]

.preheader:                                       ; preds = %10, %8
  %temp_index.1 = phi i8 [ %temp_index.3, %10 ], [ 0, %8 ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %temp_index.1, -128, !dbg !296 ; [#uses=1 type=i1] [debug line = 344:9]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond, label %11, label %10, !dbg !296 ; [debug line = 344:9]

; <label>:10                                      ; preds = %.preheader
  %tmp.11 = zext i8 %temp_index.1 to i64, !dbg !298 ; [#uses=2 type=i64] [debug line = 345:6]
  %temp_buf.addr.1 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.11, !dbg !298 ; [#uses=1 type=i8*] [debug line = 345:6]
  %temp_buf.load = load i8* %temp_buf.addr.1, align 1, !dbg !298 ; [#uses=1 type=i8] [debug line = 345:6]
  %md.buf.addr.2 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.11, !dbg !298 ; [#uses=1 type=i8*] [debug line = 345:6]
  store i8 %temp_buf.load, i8* %md.buf.addr.2, align 1, !dbg !298 ; [debug line = 345:6]
  %temp_index.3 = add i8 %temp_index.1, 1, !dbg !300 ; [#uses=1 type=i8] [debug line = 344:39]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.3}, i64 0, metadata !294), !dbg !300 ; [debug line = 344:39] [debug variable = temp_index]
  br label %.preheader, !dbg !300                 ; [debug line = 344:39]

; <label>:11                                      ; preds = %.preheader
  %tmp.10 = add i64 %md.length, 1024, !dbg !301   ; [#uses=1 type=i64] [debug line = 347:5]
  br label %.backedge.backedge, !dbg !302         ; [debug line = 349:4]

.loopexit.loopexit:                               ; preds = %.backedge
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  %md.length.2 = phi i64 [ %md.length.read, %0 ], [ %md.length, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %md.curlen.2 = phi i64 [ %md.curlen.read, %0 ], [ %md.curlen, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %mrv = insertvalue { i64, i64 } undef, i64 %md.length.2, 0 ; [#uses=1 type={ i64, i64 }]
  %mrv.1 = insertvalue { i64, i64 } %mrv, i64 %md.curlen.2, 1 ; [#uses=1 type={ i64, i64 }]
  ret { i64, i64 } %mrv.1
}

; [#uses=1]
define internal fastcc { i64, i64 } @sha512_update_32([8 x i64]* nocapture %md.state, [128 x i8]* nocapture %md.buf, [64 x i8]* nocapture %in) {
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !242), !dbg !241 ; [debug line = 298:39] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md.buf}, i64 0, metadata !250), !dbg !241 ; [debug line = 298:39] [debug variable = md.buf]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %in}, i64 0, metadata !303), !dbg !307 ; [debug line = 298:63] [debug variable = in]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !254 ; [debug line = 300:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !256 ; [debug line = 301:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !257 ; [debug line = 302:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !258 ; [debug line = 303:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !259 ; [debug line = 304:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !260 ; [debug line = 305:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !261 ; [debug line = 306:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !262), !dbg !263 ; [debug line = 311:19] [debug variable = temp_buf]
  br label %.backedge, !dbg !264                  ; [debug line = 315:5]

.backedge:                                        ; preds = %.backedge.backedge, %0
  %md.length = phi i64 [ 0, %0 ], [ %md.length.be, %.backedge.backedge ] ; [#uses=4 type=i64]
  %md.curlen = phi i64 [ 0, %0 ], [ %md.curlen.be, %.backedge.backedge ] ; [#uses=5 type=i64]
  %inlen = phi i64 [ 32, %0 ], [ %inlen.be, %.backedge.backedge ] ; [#uses=6 type=i64]
  %.01.idx = phi i64 [ 0, %0 ], [ %.01.idx.be, %.backedge.backedge ] ; [#uses=4 type=i64]
  %md.curlen.cast = trunc i64 %md.curlen to i9, !dbg !265 ; [#uses=1 type=i9] [debug line = 318:5]
  %.01.idx.cast = trunc i64 %.01.idx to i8, !dbg !265 ; [#uses=1 type=i8] [debug line = 318:5]
  %tmp.1 = icmp eq i64 %inlen, 0, !dbg !265       ; [#uses=1 type=i1] [debug line = 318:5]
  br i1 %tmp.1, label %.loopexit, label %1, !dbg !265 ; [debug line = 318:5]

; <label>:1                                       ; preds = %.backedge
  %tmp.2 = icmp eq i64 %md.curlen, 0, !dbg !266   ; [#uses=1 type=i1] [debug line = 319:9]
  %tmp.3 = icmp ugt i64 %inlen, 127, !dbg !266    ; [#uses=1 type=i1] [debug line = 319:9]
  %or.cond = and i1 %tmp.2, %tmp.3, !dbg !266     ; [#uses=1 type=i1] [debug line = 319:9]
  br i1 %or.cond, label %2, label %._crit_edge, !dbg !266 ; [debug line = 319:9]

; <label>:2                                       ; preds = %1
  call fastcc void @sha512_compress_32([8 x i64]* %md.state, [64 x i8]* %in, i64 %.01.idx), !dbg !268 ; [debug line = 320:23]
  %tmp.4 = add i64 %md.length, 1024, !dbg !270    ; [#uses=1 type=i64] [debug line = 323:12]
  %.01.idx8 = add i64 %.01.idx, 128, !dbg !271    ; [#uses=1 type=i64] [debug line = 324:12]
  %inlen.1 = add i64 %inlen, -128, !dbg !272      ; [#uses=1 type=i64] [debug line = 325:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen.1}, i64 0, metadata !273), !dbg !272 ; [debug line = 325:12] [debug variable = inlen]
  br label %.backedge.backedge, !dbg !274         ; [debug line = 326:9]

._crit_edge:                                      ; preds = %1
  %tmp.6 = sub i64 128, %md.curlen, !dbg !275     ; [#uses=2 type=i64] [debug line = 327:12]
  %tmp.7 = icmp ult i64 %inlen, %tmp.6, !dbg !275 ; [#uses=1 type=i1] [debug line = 327:12]
  %n = select i1 %tmp.7, i64 %inlen, i64 %tmp.6, !dbg !275 ; [#uses=4 type=i64] [debug line = 327:12]
  call void @llvm.dbg.value(metadata !{i64 %n}, i64 0, metadata !277), !dbg !275 ; [debug line = 327:12] [debug variable = n]
  br label %3, !dbg !278                          ; [debug line = 329:17]

; <label>:3                                       ; preds = %4, %._crit_edge
  %i = phi i64 [ 0, %._crit_edge ], [ %i.1, %4 ]  ; [#uses=4 type=i64]
  %i.cast3 = trunc i64 %i to i9, !dbg !278        ; [#uses=1 type=i9] [debug line = 329:17]
  %i.cast = trunc i64 %i to i8, !dbg !278         ; [#uses=1 type=i8] [debug line = 329:17]
  %exitcond3 = icmp eq i64 %i, %n, !dbg !278      ; [#uses=1 type=i1] [debug line = 329:17]
  br i1 %exitcond3, label %5, label %4, !dbg !278 ; [debug line = 329:17]

; <label>:4                                       ; preds = %3
  %sum2 = add i8 %i.cast, %.01.idx.cast           ; [#uses=1 type=i8]
  %sum2.cast = zext i8 %sum2 to i64               ; [#uses=1 type=i64]
  %in.addr = getelementptr [64 x i8]* %in, i64 0, i64 %sum2.cast, !dbg !280 ; [#uses=1 type=i8*] [debug line = 330:13]
  %in.load = load i8* %in.addr, align 1, !dbg !280 ; [#uses=1 type=i8] [debug line = 330:13]
  %tmp.5 = add i9 %i.cast3, %md.curlen.cast, !dbg !280 ; [#uses=1 type=i9] [debug line = 330:13]
  %tmp.5.cast = zext i9 %tmp.5 to i64, !dbg !280  ; [#uses=1 type=i64] [debug line = 330:13]
  %md.buf.addr = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.5.cast, !dbg !280 ; [#uses=1 type=i8*] [debug line = 330:13]
  store i8 %in.load, i8* %md.buf.addr, align 1, !dbg !280 ; [debug line = 330:13]
  %i.1 = add i64 %i, 1, !dbg !282                 ; [#uses=1 type=i64] [debug line = 329:31]
  call void @llvm.dbg.value(metadata !{i64 %i.1}, i64 0, metadata !283), !dbg !282 ; [debug line = 329:31] [debug variable = i]
  br label %3, !dbg !282                          ; [debug line = 329:31]

; <label>:5                                       ; preds = %3
  %tmp.8 = add i64 %md.curlen, %n, !dbg !284      ; [#uses=2 type=i64] [debug line = 334:12]
  %.01.idx9 = add i64 %.01.idx, %n, !dbg !285     ; [#uses=2 type=i64] [debug line = 335:12]
  %inlen.2 = sub i64 %inlen, %n, !dbg !286        ; [#uses=2 type=i64] [debug line = 336:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen.2}, i64 0, metadata !273), !dbg !286 ; [debug line = 336:12] [debug variable = inlen]
  %tmp. = icmp eq i64 %tmp.8, 128, !dbg !287      ; [#uses=1 type=i1] [debug line = 337:4]
  br i1 %tmp., label %.preheader5.preheader, label %.backedge.backedge, !dbg !287 ; [debug line = 337:4]

.preheader5.preheader:                            ; preds = %5
  br label %.preheader5, !dbg !288                ; [debug line = 338:9]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %temp_index = phi i8 [ %temp_index.2, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index, -128, !dbg !288 ; [#uses=1 type=i1] [debug line = 338:9]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %8, label %7, !dbg !288 ; [debug line = 338:9]

; <label>:7                                       ; preds = %.preheader5
  %tmp.9 = zext i8 %temp_index to i64, !dbg !291  ; [#uses=2 type=i64] [debug line = 339:6]
  %md.buf.addr.1 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.9, !dbg !291 ; [#uses=1 type=i8*] [debug line = 339:6]
  %md.buf.load = load i8* %md.buf.addr.1, align 1, !dbg !291 ; [#uses=1 type=i8] [debug line = 339:6]
  %temp_buf.addr.1 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.9, !dbg !291 ; [#uses=1 type=i8*] [debug line = 339:6]
  store i8 %md.buf.load, i8* %temp_buf.addr.1, align 1, !dbg !291 ; [debug line = 339:6]
  %temp_index.2 = add i8 %temp_index, 1, !dbg !293 ; [#uses=1 type=i8] [debug line = 338:39]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.2}, i64 0, metadata !294), !dbg !293 ; [debug line = 338:39] [debug variable = temp_index]
  br label %.preheader5, !dbg !293                ; [debug line = 338:39]

; <label>:8                                       ; preds = %.preheader5
  call fastcc void @sha512_compress_128([8 x i64]* %md.state, [128 x i8]* %temp_buf), !dbg !295 ; [debug line = 341:16]
  br label %.preheader, !dbg !295                 ; [debug line = 341:16]

.preheader:                                       ; preds = %10, %8
  %temp_index.1 = phi i8 [ %temp_index.3, %10 ], [ 0, %8 ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %temp_index.1, -128, !dbg !296 ; [#uses=1 type=i1] [debug line = 344:9]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond, label %11, label %10, !dbg !296 ; [debug line = 344:9]

; <label>:10                                      ; preds = %.preheader
  %tmp.11 = zext i8 %temp_index.1 to i64, !dbg !298 ; [#uses=2 type=i64] [debug line = 345:6]
  %temp_buf.addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.11, !dbg !298 ; [#uses=1 type=i8*] [debug line = 345:6]
  %temp_buf.load = load i8* %temp_buf.addr, align 1, !dbg !298 ; [#uses=1 type=i8] [debug line = 345:6]
  %md.buf.addr.2 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.11, !dbg !298 ; [#uses=1 type=i8*] [debug line = 345:6]
  store i8 %temp_buf.load, i8* %md.buf.addr.2, align 1, !dbg !298 ; [debug line = 345:6]
  %temp_index.3 = add i8 %temp_index.1, 1, !dbg !300 ; [#uses=1 type=i8] [debug line = 344:39]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.3}, i64 0, metadata !294), !dbg !300 ; [debug line = 344:39] [debug variable = temp_index]
  br label %.preheader, !dbg !300                 ; [debug line = 344:39]

; <label>:11                                      ; preds = %.preheader
  %tmp.10 = add i64 %md.length, 1024, !dbg !301   ; [#uses=1 type=i64] [debug line = 347:5]
  br label %.backedge.backedge, !dbg !302         ; [debug line = 349:4]

.backedge.backedge:                               ; preds = %11, %5, %2
  %md.length.be = phi i64 [ %tmp.4, %2 ], [ %tmp.10, %11 ], [ %md.length, %5 ] ; [#uses=1 type=i64]
  %md.curlen.be = phi i64 [ 0, %2 ], [ 0, %11 ], [ %tmp.8, %5 ] ; [#uses=1 type=i64]
  %inlen.be = phi i64 [ %inlen.1, %2 ], [ %inlen.2, %11 ], [ %inlen.2, %5 ] ; [#uses=1 type=i64]
  %.01.idx.be = phi i64 [ %.01.idx8, %2 ], [ %.01.idx9, %11 ], [ %.01.idx9, %5 ] ; [#uses=1 type=i64]
  br label %.backedge

.loopexit:                                        ; preds = %.backedge
  %md.curlen.lcssa = phi i64 [ %md.curlen, %.backedge ] ; [#uses=1 type=i64]
  %md.length.lcssa = phi i64 [ %md.length, %.backedge ] ; [#uses=1 type=i64]
  %mrv = insertvalue { i64, i64 } undef, i64 %md.length.lcssa, 0 ; [#uses=1 type={ i64, i64 }]
  %mrv.1 = insertvalue { i64, i64 } %mrv, i64 %md.curlen.lcssa, 1 ; [#uses=1 type={ i64, i64 }]
  ret { i64, i64 } %mrv.1
}

; [#uses=2]
define internal fastcc { i64, i64 } @sha512_update_128(i64 %md.length.read, [8 x i64]* nocapture %md.state, i64 %md.curlen.read, [128 x i8]* nocapture %md.buf, [128 x i8]* nocapture %in) {
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=3 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{i64 %md.length.read}, i64 0, metadata !308), !dbg !311 ; [debug line = 240:40] [debug variable = md.length]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !312), !dbg !311 ; [debug line = 240:40] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{i64 %md.curlen.read}, i64 0, metadata !313), !dbg !311 ; [debug line = 240:40] [debug variable = md.curlen]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md.buf}, i64 0, metadata !314), !dbg !311 ; [debug line = 240:40] [debug variable = md.buf]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %in}, i64 0, metadata !315), !dbg !317 ; [debug line = 240:64] [debug variable = in]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !318 ; [debug line = 242:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !320 ; [debug line = 243:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !321 ; [debug line = 244:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !322 ; [debug line = 245:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !323 ; [debug line = 246:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !324 ; [debug line = 247:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !325 ; [debug line = 248:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str19, [1 x i8]* @.str19, [20 x i8]* @.str816, [1 x i8]* @.str19) nounwind, !dbg !326 ; [debug line = 249:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !327), !dbg !328 ; [debug line = 255:19] [debug variable = temp_buf]
  %tmp = icmp ugt i64 %md.curlen.read, 128, !dbg !329 ; [#uses=1 type=i1] [debug line = 258:5]
  br i1 %tmp, label %.loopexit, label %.backedge.preheader, !dbg !329 ; [debug line = 258:5]

.backedge.preheader:                              ; preds = %0
  br label %.backedge, !dbg !330                  ; [debug line = 261:5]

.backedge:                                        ; preds = %.backedge.backedge, %.backedge.preheader
  %md.length = phi i64 [ %md.length.read, %.backedge.preheader ], [ %md.length.be, %.backedge.backedge ] ; [#uses=4 type=i64]
  %md.curlen = phi i64 [ %md.curlen.read, %.backedge.preheader ], [ %md.curlen.be, %.backedge.backedge ] ; [#uses=5 type=i64]
  %inlen = phi i64 [ 128, %.backedge.preheader ], [ %inlen.be, %.backedge.backedge ] ; [#uses=6 type=i64]
  %.01.idx = phi i64 [ 0, %.backedge.preheader ], [ %.01.idx.be, %.backedge.backedge ] ; [#uses=4 type=i64]
  %md.curlen.cast = trunc i64 %md.curlen to i9, !dbg !330 ; [#uses=1 type=i9] [debug line = 261:5]
  %.01.idx.cast = trunc i64 %.01.idx to i9, !dbg !330 ; [#uses=1 type=i9] [debug line = 261:5]
  %tmp. = icmp eq i64 %inlen, 0, !dbg !330        ; [#uses=1 type=i1] [debug line = 261:5]
  br i1 %tmp., label %.loopexit.loopexit, label %1, !dbg !330 ; [debug line = 261:5]

; <label>:1                                       ; preds = %.backedge
  %tmp.12 = icmp eq i64 %md.curlen, 0, !dbg !331  ; [#uses=1 type=i1] [debug line = 262:9]
  %tmp.13 = icmp ugt i64 %inlen, 127, !dbg !331   ; [#uses=1 type=i1] [debug line = 262:9]
  %or.cond = and i1 %tmp.12, %tmp.13, !dbg !331   ; [#uses=1 type=i1] [debug line = 262:9]
  br i1 %or.cond, label %2, label %._crit_edge, !dbg !331 ; [debug line = 262:9]

; <label>:2                                       ; preds = %1
  call fastcc void @sha512_compress_128.1([8 x i64]* %md.state, [128 x i8]* %in, i64 %.01.idx), !dbg !333 ; [debug line = 263:23]
  %tmp.14 = add i64 %md.length, 1024, !dbg !335   ; [#uses=1 type=i64] [debug line = 266:12]
  %.01.idx8 = add i64 %.01.idx, 128, !dbg !336    ; [#uses=1 type=i64] [debug line = 267:12]
  %inlen.3 = add i64 %inlen, -128, !dbg !337      ; [#uses=1 type=i64] [debug line = 268:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen.3}, i64 0, metadata !338), !dbg !337 ; [debug line = 268:12] [debug variable = inlen]
  br label %.backedge.backedge, !dbg !339         ; [debug line = 269:9]

._crit_edge:                                      ; preds = %1
  %tmp.15 = sub i64 128, %md.curlen, !dbg !340    ; [#uses=2 type=i64] [debug line = 270:12]
  %tmp.16 = icmp ult i64 %inlen, %tmp.15, !dbg !340 ; [#uses=1 type=i1] [debug line = 270:12]
  %n = select i1 %tmp.16, i64 %inlen, i64 %tmp.15, !dbg !340 ; [#uses=4 type=i64] [debug line = 270:12]
  call void @llvm.dbg.value(metadata !{i64 %n}, i64 0, metadata !342), !dbg !340 ; [debug line = 270:12] [debug variable = n]
  br label %3, !dbg !343                          ; [debug line = 272:17]

; <label>:3                                       ; preds = %4, %._crit_edge
  %i = phi i64 [ 0, %._crit_edge ], [ %i.2, %4 ]  ; [#uses=3 type=i64]
  %i.cast = trunc i64 %i to i9, !dbg !343         ; [#uses=2 type=i9] [debug line = 272:17]
  %exitcond3 = icmp eq i64 %i, %n, !dbg !343      ; [#uses=1 type=i1] [debug line = 272:17]
  br i1 %exitcond3, label %5, label %4, !dbg !343 ; [debug line = 272:17]

; <label>:4                                       ; preds = %3
  %sum2 = add i9 %i.cast, %.01.idx.cast           ; [#uses=1 type=i9]
  %sum2.cast = zext i9 %sum2 to i64               ; [#uses=1 type=i64]
  %in.addr = getelementptr [128 x i8]* %in, i64 0, i64 %sum2.cast, !dbg !345 ; [#uses=1 type=i8*] [debug line = 273:13]
  %in.load = load i8* %in.addr, align 1, !dbg !345 ; [#uses=1 type=i8] [debug line = 273:13]
  %tmp.19 = add i9 %i.cast, %md.curlen.cast, !dbg !345 ; [#uses=1 type=i9] [debug line = 273:13]
  %tmp.19.cast = zext i9 %tmp.19 to i64, !dbg !345 ; [#uses=1 type=i64] [debug line = 273:13]
  %md.buf.addr = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.19.cast, !dbg !345 ; [#uses=1 type=i8*] [debug line = 273:13]
  store i8 %in.load, i8* %md.buf.addr, align 1, !dbg !345 ; [debug line = 273:13]
  %i.2 = add i64 %i, 1, !dbg !347                 ; [#uses=1 type=i64] [debug line = 272:31]
  call void @llvm.dbg.value(metadata !{i64 %i.2}, i64 0, metadata !348), !dbg !347 ; [debug line = 272:31] [debug variable = i]
  br label %3, !dbg !347                          ; [debug line = 272:31]

; <label>:5                                       ; preds = %3
  %tmp.17 = add i64 %md.curlen, %n, !dbg !349     ; [#uses=2 type=i64] [debug line = 277:12]
  %.01.idx9 = add i64 %.01.idx, %n, !dbg !350     ; [#uses=2 type=i64] [debug line = 278:12]
  %inlen.4 = sub i64 %inlen, %n, !dbg !351        ; [#uses=2 type=i64] [debug line = 279:12]
  call void @llvm.dbg.value(metadata !{i64 %inlen.4}, i64 0, metadata !338), !dbg !351 ; [debug line = 279:12] [debug variable = inlen]
  %tmp.18 = icmp eq i64 %tmp.17, 128, !dbg !352   ; [#uses=1 type=i1] [debug line = 280:12]
  br i1 %tmp.18, label %.preheader5.preheader, label %.backedge.backedge, !dbg !352 ; [debug line = 280:12]

.preheader5.preheader:                            ; preds = %5
  br label %.preheader5, !dbg !353                ; [debug line = 281:17]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %temp_index = phi i8 [ %temp_index.4, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index, -128, !dbg !353 ; [#uses=1 type=i1] [debug line = 281:17]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %8, label %7, !dbg !353 ; [debug line = 281:17]

; <label>:7                                       ; preds = %.preheader5
  %tmp.20 = zext i8 %temp_index to i64, !dbg !356 ; [#uses=2 type=i64] [debug line = 282:6]
  %md.buf.addr.3 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.20, !dbg !356 ; [#uses=1 type=i8*] [debug line = 282:6]
  %md.buf.load = load i8* %md.buf.addr.3, align 1, !dbg !356 ; [#uses=1 type=i8] [debug line = 282:6]
  %temp_buf.addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.20, !dbg !356 ; [#uses=1 type=i8*] [debug line = 282:6]
  store i8 %md.buf.load, i8* %temp_buf.addr, align 1, !dbg !356 ; [debug line = 282:6]
  %temp_index.4 = add i8 %temp_index, 1, !dbg !358 ; [#uses=1 type=i8] [debug line = 281:47]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.4}, i64 0, metadata !359), !dbg !358 ; [debug line = 281:47] [debug variable = temp_index]
  br label %.preheader5, !dbg !358                ; [debug line = 281:47]

; <label>:8                                       ; preds = %.preheader5
  call fastcc void @sha512_compress_128([8 x i64]* %md.state, [128 x i8]* %temp_buf), !dbg !360 ; [debug line = 284:26]
  br label %.preheader, !dbg !360                 ; [debug line = 284:26]

.preheader:                                       ; preds = %10, %8
  %temp_index.1 = phi i8 [ %temp_index.5, %10 ], [ 0, %8 ] ; [#uses=3 type=i8]
  %exitcond = icmp eq i8 %temp_index.1, -128, !dbg !361 ; [#uses=1 type=i1] [debug line = 287:20]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond, label %11, label %10, !dbg !361 ; [debug line = 287:20]

; <label>:10                                      ; preds = %.preheader
  %tmp.22 = zext i8 %temp_index.1 to i64, !dbg !363 ; [#uses=2 type=i64] [debug line = 288:6]
  %temp_buf.addr.2 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.22, !dbg !363 ; [#uses=1 type=i8*] [debug line = 288:6]
  %temp_buf.load = load i8* %temp_buf.addr.2, align 1, !dbg !363 ; [#uses=1 type=i8] [debug line = 288:6]
  %md.buf.addr.4 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.22, !dbg !363 ; [#uses=1 type=i8*] [debug line = 288:6]
  store i8 %temp_buf.load, i8* %md.buf.addr.4, align 1, !dbg !363 ; [debug line = 288:6]
  %temp_index.5 = add i8 %temp_index.1, 1, !dbg !365 ; [#uses=1 type=i8] [debug line = 287:50]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.5}, i64 0, metadata !359), !dbg !365 ; [debug line = 287:50] [debug variable = temp_index]
  br label %.preheader, !dbg !365                 ; [debug line = 287:50]

; <label>:11                                      ; preds = %.preheader
  %tmp.21 = add i64 %md.length, 1024, !dbg !366   ; [#uses=1 type=i64] [debug line = 290:15]
  br label %.backedge.backedge, !dbg !367         ; [debug line = 292:12]

.backedge.backedge:                               ; preds = %11, %5, %2
  %md.length.be = phi i64 [ %tmp.14, %2 ], [ %tmp.21, %11 ], [ %md.length, %5 ] ; [#uses=1 type=i64]
  %md.curlen.be = phi i64 [ 0, %2 ], [ 0, %11 ], [ %tmp.17, %5 ] ; [#uses=1 type=i64]
  %inlen.be = phi i64 [ %inlen.3, %2 ], [ %inlen.4, %11 ], [ %inlen.4, %5 ] ; [#uses=1 type=i64]
  %.01.idx.be = phi i64 [ %.01.idx8, %2 ], [ %.01.idx9, %11 ], [ %.01.idx9, %5 ] ; [#uses=1 type=i64]
  br label %.backedge

.loopexit.loopexit:                               ; preds = %.backedge
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  %md.length.2 = phi i64 [ %md.length.read, %0 ], [ %md.length, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %md.curlen.2 = phi i64 [ %md.curlen.read, %0 ], [ %md.curlen, %.loopexit.loopexit ] ; [#uses=1 type=i64]
  %mrv = insertvalue { i64, i64 } undef, i64 %md.length.2, 0 ; [#uses=1 type={ i64, i64 }]
  %mrv.1 = insertvalue { i64, i64 } %mrv, i64 %md.curlen.2, 1 ; [#uses=1 type={ i64, i64 }]
  ret { i64, i64 } %mrv.1
}

; [#uses=3]
define internal fastcc void @sha512_init([8 x i64]* nocapture %md.state) {
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !368), !dbg !373 ; [debug line = 216:34] [debug variable = md.state]
  %md.state.addr = getelementptr [8 x i64]* %md.state, i64 0, i64 0, !dbg !374 ; [#uses=1 type=i64*] [debug line = 221:5]
  store i64 7640891576956012808, i64* %md.state.addr, align 8, !dbg !374 ; [debug line = 221:5]
  %md.state.addr.1 = getelementptr [8 x i64]* %md.state, i64 0, i64 1, !dbg !376 ; [#uses=1 type=i64*] [debug line = 222:5]
  store i64 -4942790177534073029, i64* %md.state.addr.1, align 8, !dbg !376 ; [debug line = 222:5]
  %md.state.addr.2 = getelementptr [8 x i64]* %md.state, i64 0, i64 2, !dbg !377 ; [#uses=1 type=i64*] [debug line = 223:5]
  store i64 4354685564936845355, i64* %md.state.addr.2, align 8, !dbg !377 ; [debug line = 223:5]
  %md.state.addr.3 = getelementptr [8 x i64]* %md.state, i64 0, i64 3, !dbg !378 ; [#uses=1 type=i64*] [debug line = 224:5]
  store i64 -6534734903238641935, i64* %md.state.addr.3, align 8, !dbg !378 ; [debug line = 224:5]
  %md.state.addr.4 = getelementptr [8 x i64]* %md.state, i64 0, i64 4, !dbg !379 ; [#uses=1 type=i64*] [debug line = 225:5]
  store i64 5840696475078001361, i64* %md.state.addr.4, align 8, !dbg !379 ; [debug line = 225:5]
  %md.state.addr.5 = getelementptr [8 x i64]* %md.state, i64 0, i64 5, !dbg !380 ; [#uses=1 type=i64*] [debug line = 226:5]
  store i64 -7276294671716946913, i64* %md.state.addr.5, align 8, !dbg !380 ; [debug line = 226:5]
  %md.state.addr.6 = getelementptr [8 x i64]* %md.state, i64 0, i64 6, !dbg !381 ; [#uses=1 type=i64*] [debug line = 227:5]
  store i64 2270897969802886507, i64* %md.state.addr.6, align 8, !dbg !381 ; [debug line = 227:5]
  %md.state.addr.7 = getelementptr [8 x i64]* %md.state, i64 0, i64 7, !dbg !382 ; [#uses=1 type=i64*] [debug line = 228:5]
  store i64 6620516959819538809, i64* %md.state.addr.7, align 8, !dbg !382 ; [debug line = 228:5]
  ret void
}

; [#uses=3]
define internal fastcc void @sha512_final(i64 %md.length.read, [8 x i64]* nocapture %md.state, i64 %md.curlen.read, [128 x i8]* nocapture %md.buf, [64 x i8]* nocapture %out) {
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=6 type=[128 x i8]*]
  call void @llvm.dbg.value(metadata !{i64 %md.length.read}, i64 0, metadata !383), !dbg !389 ; [debug line = 361:35] [debug variable = md.length]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !390), !dbg !389 ; [debug line = 361:35] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{i64 %md.curlen.read}, i64 0, metadata !391), !dbg !389 ; [debug line = 361:35] [debug variable = md.curlen]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %md.buf}, i64 0, metadata !392), !dbg !389 ; [debug line = 361:35] [debug variable = md.buf]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %out}, i64 0, metadata !393), !dbg !395 ; [debug line = 361:54] [debug variable = out]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !396 ; [debug line = 363:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !398 ; [debug line = 364:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !399 ; [debug line = 365:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !400 ; [debug line = 366:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !401 ; [debug line = 367:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !402 ; [debug line = 368:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !403 ; [debug line = 369:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str19, [1 x i8]* @.str19, [20 x i8]* @.str816, [1 x i8]* @.str19) nounwind, !dbg !404 ; [debug line = 370:1]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !405), !dbg !406 ; [debug line = 373:16] [debug variable = temp_buf]
  %tmp = icmp ugt i64 %md.curlen.read, 127, !dbg !407 ; [#uses=1 type=i1] [debug line = 378:5]
  br i1 %tmp, label %.loopexit, label %1, !dbg !407 ; [debug line = 378:5]

; <label>:1                                       ; preds = %0
  %md.curlen.read.cast = trunc i64 %md.curlen.read to i10, !dbg !408 ; [#uses=1 type=i10] [debug line = 383:5]
  %tmp. = shl i10 %md.curlen.read.cast, 3, !dbg !408 ; [#uses=8 type=i10] [debug line = 383:5]
  %tmp..cast = zext i10 %tmp. to i64, !dbg !408   ; [#uses=1 type=i64] [debug line = 383:5]
  %tmp.1 = trunc i64 %md.length.read to i8        ; [#uses=1 type=i8]
  %tmp.2 = trunc i10 %tmp. to i8                  ; [#uses=1 type=i8]
  %tmp.3 = zext i10 %tmp. to i56                  ; [#uses=1 type=i56]
  %tmp.4 = trunc i64 %md.length.read to i56       ; [#uses=1 type=i56]
  %tmp.5 = zext i10 %tmp. to i48                  ; [#uses=1 type=i48]
  %tmp.6 = trunc i64 %md.length.read to i48       ; [#uses=1 type=i48]
  %tmp.7 = zext i10 %tmp. to i40                  ; [#uses=1 type=i40]
  %tmp.8 = trunc i64 %md.length.read to i40       ; [#uses=1 type=i40]
  %tmp.9 = zext i10 %tmp. to i32                  ; [#uses=1 type=i32]
  %tmp.10 = trunc i64 %md.length.read to i32      ; [#uses=1 type=i32]
  %tmp.11 = zext i10 %tmp. to i24                 ; [#uses=1 type=i24]
  %tmp.12 = trunc i64 %md.length.read to i24      ; [#uses=1 type=i24]
  %tmp.13 = zext i10 %tmp. to i16                 ; [#uses=1 type=i16]
  %tmp.14 = trunc i64 %md.length.read to i16      ; [#uses=1 type=i16]
  %tmp.23 = add i64 %tmp..cast, %md.length.read, !dbg !408 ; [#uses=1 type=i64] [debug line = 383:5]
  %tmp.23.cast1 = add i16 %tmp.14, %tmp.13, !dbg !409 ; [#uses=1 type=i16] [debug line = 386:5]
  %tmp.23.cast2 = add i24 %tmp.12, %tmp.11, !dbg !409 ; [#uses=1 type=i24] [debug line = 386:5]
  %tmp.23.cast3 = add i32 %tmp.10, %tmp.9, !dbg !409 ; [#uses=1 type=i32] [debug line = 386:5]
  %tmp.23.cast4 = add i40 %tmp.8, %tmp.7, !dbg !409 ; [#uses=1 type=i40] [debug line = 386:5]
  %tmp.23.cast5 = add i48 %tmp.6, %tmp.5, !dbg !409 ; [#uses=1 type=i48] [debug line = 386:5]
  %tmp.23.cast = add i56 %tmp.4, %tmp.3, !dbg !409 ; [#uses=1 type=i56] [debug line = 386:5]
  %tmp.15 = trunc i64 %md.curlen.read to i8       ; [#uses=1 type=i8]
  %tmp.24.cast = add i8 %tmp.15, 1, !dbg !409     ; [#uses=2 type=i8] [debug line = 386:5]
  %md.buf.addr = getelementptr [128 x i8]* %md.buf, i64 0, i64 %md.curlen.read, !dbg !409 ; [#uses=1 type=i8*] [debug line = 386:5]
  store i8 -128, i8* %md.buf.addr, align 1, !dbg !409 ; [debug line = 386:5]
  %tmp.24 = icmp ugt i8 %tmp.24.cast, 112, !dbg !410 ; [#uses=1 type=i1] [debug line = 392:2]
  br i1 %tmp.24, label %.preheader13.preheader, label %._crit_edge.preheader, !dbg !410 ; [debug line = 392:2]

.preheader13.preheader:                           ; preds = %1
  br label %.preheader13, !dbg !409               ; [debug line = 386:5]

._crit_edge.preheader.loopexit:                   ; preds = %6
  br label %._crit_edge.preheader

._crit_edge.preheader:                            ; preds = %._crit_edge.preheader.loopexit, %1
  %md.curlen.2.ph = phi i8 [ %tmp.24.cast, %1 ], [ 0, %._crit_edge.preheader.loopexit ] ; [#uses=1 type=i8]
  br label %._crit_edge, !dbg !411                ; [debug line = 410:2]

.preheader13:                                     ; preds = %2, %.preheader13.preheader
  %md.curlen.in = phi i64 [ %md.curlen, %2 ], [ %md.curlen.read, %.preheader13.preheader ] ; [#uses=1 type=i64]
  %md.curlen = add i64 %md.curlen.in, 1, !dbg !409 ; [#uses=3 type=i64] [debug line = 386:5]
  %exitcond3 = icmp eq i64 %md.curlen, 128, !dbg !412 ; [#uses=1 type=i1] [debug line = 393:3]
  br i1 %exitcond3, label %.preheader12.preheader, label %2, !dbg !412 ; [debug line = 393:3]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !414               ; [debug line = 396:7]

; <label>:2                                       ; preds = %.preheader13
  %md.buf.addr.5 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %md.curlen, !dbg !416 ; [#uses=1 type=i8*] [debug line = 394:4]
  store i8 0, i8* %md.buf.addr.5, align 1, !dbg !416 ; [debug line = 394:4]
  br label %.preheader13, !dbg !418               ; [debug line = 395:3]

.preheader12:                                     ; preds = %4, %.preheader12.preheader
  %temp_index = phi i8 [ %temp_index.6, %4 ], [ 0, %.preheader12.preheader ] ; [#uses=3 type=i8]
  %exitcond1 = icmp eq i8 %temp_index, -128, !dbg !414 ; [#uses=1 type=i1] [debug line = 396:7]
  %3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %5, label %4, !dbg !414 ; [debug line = 396:7]

; <label>:4                                       ; preds = %.preheader12
  %tmp.25 = zext i8 %temp_index to i64, !dbg !419 ; [#uses=2 type=i64] [debug line = 397:4]
  %md.buf.addr.6 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.25, !dbg !419 ; [#uses=1 type=i8*] [debug line = 397:4]
  %md.buf.load = load i8* %md.buf.addr.6, align 1, !dbg !419 ; [#uses=1 type=i8] [debug line = 397:4]
  %temp_buf.addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.25, !dbg !419 ; [#uses=1 type=i8*] [debug line = 397:4]
  store i8 %md.buf.load, i8* %temp_buf.addr, align 1, !dbg !419 ; [debug line = 397:4]
  %temp_index.6 = add i8 %temp_index, 1, !dbg !421 ; [#uses=1 type=i8] [debug line = 396:37]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.6}, i64 0, metadata !422), !dbg !421 ; [debug line = 396:37] [debug variable = temp_index]
  br label %.preheader12, !dbg !421               ; [debug line = 396:37]

; <label>:5                                       ; preds = %.preheader12
  call fastcc void @sha512_compress_128([8 x i64]* %md.state, [128 x i8]* %temp_buf), !dbg !423 ; [debug line = 399:3]
  br label %6, !dbg !424                          ; [debug line = 400:7]

; <label>:6                                       ; preds = %8, %5
  %temp_index.1 = phi i8 [ 0, %5 ], [ %temp_index.7, %8 ] ; [#uses=3 type=i8]
  %exitcond2 = icmp eq i8 %temp_index.1, -128, !dbg !424 ; [#uses=1 type=i1] [debug line = 400:7]
  %7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %._crit_edge.preheader.loopexit, label %8, !dbg !424 ; [debug line = 400:7]

; <label>:8                                       ; preds = %6
  %tmp.27 = zext i8 %temp_index.1 to i64, !dbg !426 ; [#uses=2 type=i64] [debug line = 401:4]
  %temp_buf.addr.4 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.27, !dbg !426 ; [#uses=1 type=i8*] [debug line = 401:4]
  %temp_buf.load = load i8* %temp_buf.addr.4, align 1, !dbg !426 ; [#uses=1 type=i8] [debug line = 401:4]
  %md.buf.addr.7 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.27, !dbg !426 ; [#uses=1 type=i8*] [debug line = 401:4]
  store i8 %temp_buf.load, i8* %md.buf.addr.7, align 1, !dbg !426 ; [debug line = 401:4]
  %temp_index.7 = add i8 %temp_index.1, 1, !dbg !428 ; [#uses=1 type=i8] [debug line = 400:37]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.7}, i64 0, metadata !422), !dbg !428 ; [debug line = 400:37] [debug variable = temp_index]
  br label %6, !dbg !428                          ; [debug line = 400:37]

._crit_edge:                                      ; preds = %9, %._crit_edge.preheader
  %md.curlen.2 = phi i8 [ %tmp.28, %9 ], [ %md.curlen.2.ph, %._crit_edge.preheader ] ; [#uses=3 type=i8]
  %md.curlen.2.cast = zext i8 %md.curlen.2 to i64, !dbg !411 ; [#uses=1 type=i64] [debug line = 410:2]
  %tmp.26 = icmp ult i8 %md.curlen.2, 120, !dbg !411 ; [#uses=1 type=i1] [debug line = 410:2]
  br i1 %tmp.26, label %9, label %10, !dbg !411   ; [debug line = 410:2]

; <label>:9                                       ; preds = %._crit_edge
  %tmp.28 = add i8 %md.curlen.2, 1, !dbg !429     ; [#uses=1 type=i8] [debug line = 411:3]
  %md.buf.addr.8 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %md.curlen.2.cast, !dbg !429 ; [#uses=1 type=i8*] [debug line = 411:3]
  store i8 0, i8* %md.buf.addr.8, align 1, !dbg !429 ; [debug line = 411:3]
  br label %._crit_edge, !dbg !431                ; [debug line = 412:2]

; <label>:10                                      ; preds = %._crit_edge
  %tmp.29 = lshr i64 %tmp.23, 56, !dbg !432       ; [#uses=1 type=i64] [debug line = 415:4]
  %tmp.30 = trunc i64 %tmp.29 to i8, !dbg !432    ; [#uses=1 type=i8] [debug line = 415:4]
  %md.buf.addr.9 = getelementptr [128 x i8]* %md.buf, i64 0, i64 120, !dbg !432 ; [#uses=1 type=i8*] [debug line = 415:4]
  store i8 %tmp.30, i8* %md.buf.addr.9, align 1, !dbg !432 ; [debug line = 415:4]
  %tmp.31 = lshr i56 %tmp.23.cast, 48, !dbg !434  ; [#uses=1 type=i56] [debug line = 415:64]
  %tmp.32 = trunc i56 %tmp.31 to i8, !dbg !434    ; [#uses=1 type=i8] [debug line = 415:64]
  %md.buf.addr.10 = getelementptr [128 x i8]* %md.buf, i64 0, i64 121, !dbg !434 ; [#uses=1 type=i8*] [debug line = 415:64]
  store i8 %tmp.32, i8* %md.buf.addr.10, align 1, !dbg !434 ; [debug line = 415:64]
  %tmp.33 = lshr i48 %tmp.23.cast5, 40, !dbg !435 ; [#uses=1 type=i48] [debug line = 415:124]
  %tmp.34 = trunc i48 %tmp.33 to i8, !dbg !435    ; [#uses=1 type=i8] [debug line = 415:124]
  %md.buf.addr.11 = getelementptr [128 x i8]* %md.buf, i64 0, i64 122, !dbg !435 ; [#uses=1 type=i8*] [debug line = 415:124]
  store i8 %tmp.34, i8* %md.buf.addr.11, align 1, !dbg !435 ; [debug line = 415:124]
  %tmp.35 = lshr i40 %tmp.23.cast4, 32, !dbg !436 ; [#uses=1 type=i40] [debug line = 415:184]
  %tmp.36 = trunc i40 %tmp.35 to i8, !dbg !436    ; [#uses=1 type=i8] [debug line = 415:184]
  %md.buf.addr.12 = getelementptr [128 x i8]* %md.buf, i64 0, i64 123, !dbg !436 ; [#uses=1 type=i8*] [debug line = 415:184]
  store i8 %tmp.36, i8* %md.buf.addr.12, align 1, !dbg !436 ; [debug line = 415:184]
  %tmp.37 = lshr i32 %tmp.23.cast3, 24, !dbg !437 ; [#uses=1 type=i32] [debug line = 415:244]
  %tmp.38 = trunc i32 %tmp.37 to i8, !dbg !437    ; [#uses=1 type=i8] [debug line = 415:244]
  %md.buf.addr.13 = getelementptr [128 x i8]* %md.buf, i64 0, i64 124, !dbg !437 ; [#uses=1 type=i8*] [debug line = 415:244]
  store i8 %tmp.38, i8* %md.buf.addr.13, align 1, !dbg !437 ; [debug line = 415:244]
  %tmp.39 = lshr i24 %tmp.23.cast2, 16, !dbg !438 ; [#uses=1 type=i24] [debug line = 415:0]
  %tmp.40 = trunc i24 %tmp.39 to i8, !dbg !438    ; [#uses=1 type=i8] [debug line = 415:0]
  %md.buf.addr.14 = getelementptr [128 x i8]* %md.buf, i64 0, i64 125, !dbg !438 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %tmp.40, i8* %md.buf.addr.14, align 1, !dbg !438 ; [debug line = 415:0]
  %tmp.41 = lshr i16 %tmp.23.cast1, 8, !dbg !438  ; [#uses=1 type=i16] [debug line = 415:0]
  %tmp.42 = trunc i16 %tmp.41 to i8, !dbg !438    ; [#uses=1 type=i8] [debug line = 415:0]
  %md.buf.addr.15 = getelementptr [128 x i8]* %md.buf, i64 0, i64 126, !dbg !438 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %tmp.42, i8* %md.buf.addr.15, align 1, !dbg !438 ; [debug line = 415:0]
  %tmp.43 = add i8 %tmp.2, %tmp.1, !dbg !438      ; [#uses=1 type=i8] [debug line = 415:0]
  %md.buf.addr.16 = getelementptr [128 x i8]* %md.buf, i64 0, i64 127, !dbg !438 ; [#uses=1 type=i8*] [debug line = 415:0]
  store i8 %tmp.43, i8* %md.buf.addr.16, align 1, !dbg !438 ; [debug line = 415:0]
  br label %11, !dbg !439                         ; [debug line = 416:6]

; <label>:11                                      ; preds = %13, %10
  %temp_index.2 = phi i8 [ 0, %10 ], [ %temp_index.8, %13 ] ; [#uses=3 type=i8]
  %exitcond9 = icmp eq i8 %temp_index.2, -128, !dbg !439 ; [#uses=1 type=i1] [debug line = 416:6]
  %12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond9, label %14, label %13, !dbg !439 ; [debug line = 416:6]

; <label>:13                                      ; preds = %11
  %tmp.44 = zext i8 %temp_index.2 to i64, !dbg !441 ; [#uses=2 type=i64] [debug line = 417:3]
  %md.buf.addr.17 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.44, !dbg !441 ; [#uses=1 type=i8*] [debug line = 417:3]
  %md.buf.load.1 = load i8* %md.buf.addr.17, align 1, !dbg !441 ; [#uses=1 type=i8] [debug line = 417:3]
  %temp_buf.addr.3 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.44, !dbg !441 ; [#uses=1 type=i8*] [debug line = 417:3]
  store i8 %md.buf.load.1, i8* %temp_buf.addr.3, align 1, !dbg !441 ; [debug line = 417:3]
  %temp_index.8 = add i8 %temp_index.2, 1, !dbg !443 ; [#uses=1 type=i8] [debug line = 416:36]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.8}, i64 0, metadata !422), !dbg !443 ; [debug line = 416:36] [debug variable = temp_index]
  br label %11, !dbg !443                         ; [debug line = 416:36]

; <label>:14                                      ; preds = %11
  call fastcc void @sha512_compress_128([8 x i64]* %md.state, [128 x i8]* %temp_buf), !dbg !444 ; [debug line = 419:2]
  br label %15, !dbg !445                         ; [debug line = 420:6]

; <label>:15                                      ; preds = %17, %14
  %temp_index.3 = phi i8 [ 0, %14 ], [ %temp_index.9, %17 ] ; [#uses=3 type=i8]
  %exitcond8 = icmp eq i8 %temp_index.3, -128, !dbg !445 ; [#uses=1 type=i1] [debug line = 420:6]
  %16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader.preheader, label %17, !dbg !445 ; [debug line = 420:6]

.preheader.preheader:                             ; preds = %15
  br label %.preheader, !dbg !447                 ; [debug line = 425:7]

; <label>:17                                      ; preds = %15
  %tmp.45 = zext i8 %temp_index.3 to i64, !dbg !449 ; [#uses=2 type=i64] [debug line = 421:3]
  %temp_buf.addr.5 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.45, !dbg !449 ; [#uses=1 type=i8*] [debug line = 421:3]
  %temp_buf.load.1 = load i8* %temp_buf.addr.5, align 1, !dbg !449 ; [#uses=1 type=i8] [debug line = 421:3]
  %md.buf.addr.18 = getelementptr [128 x i8]* %md.buf, i64 0, i64 %tmp.45, !dbg !449 ; [#uses=1 type=i8*] [debug line = 421:3]
  store i8 %temp_buf.load.1, i8* %md.buf.addr.18, align 1, !dbg !449 ; [debug line = 421:3]
  %temp_index.9 = add i8 %temp_index.3, 1, !dbg !451 ; [#uses=1 type=i8] [debug line = 420:36]
  call void @llvm.dbg.value(metadata !{i8 %temp_index.9}, i64 0, metadata !422), !dbg !451 ; [debug line = 420:36] [debug variable = temp_index]
  br label %15, !dbg !451                         ; [debug line = 420:36]

.preheader:                                       ; preds = %19, %.preheader.preheader
  %i = phi i4 [ %i.3, %19 ], [ 0, %.preheader.preheader ] ; [#uses=4 type=i4]
  %i.cast7 = zext i4 %i to i6, !dbg !447          ; [#uses=1 type=i6] [debug line = 425:7]
  %exitcond = icmp eq i4 %i, -8, !dbg !447        ; [#uses=1 type=i1] [debug line = 425:7]
  %18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond, label %.loopexit.loopexit, label %19, !dbg !447 ; [debug line = 425:7]

; <label>:19                                      ; preds = %.preheader
  %tmp.46 = zext i4 %i to i64, !dbg !452          ; [#uses=1 type=i64] [debug line = 426:5]
  %md.state.addr = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp.46, !dbg !452 ; [#uses=1 type=i64*] [debug line = 426:5]
  %md.state.load = load i64* %md.state.addr, align 8, !dbg !452 ; [#uses=8 type=i64] [debug line = 426:5]
  %md.state.load.cast5 = trunc i64 %md.state.load to i16, !dbg !452 ; [#uses=1 type=i16] [debug line = 426:5]
  %md.state.load.cast4 = trunc i64 %md.state.load to i24, !dbg !452 ; [#uses=1 type=i24] [debug line = 426:5]
  %md.state.load.cast3 = trunc i64 %md.state.load to i32, !dbg !452 ; [#uses=1 type=i32] [debug line = 426:5]
  %md.state.load.cast2 = trunc i64 %md.state.load to i40, !dbg !452 ; [#uses=1 type=i40] [debug line = 426:5]
  %md.state.load.cast1 = trunc i64 %md.state.load to i48, !dbg !452 ; [#uses=1 type=i48] [debug line = 426:5]
  %md.state.load.cast = trunc i64 %md.state.load to i56, !dbg !452 ; [#uses=1 type=i56] [debug line = 426:5]
  %tmp.47 = lshr i64 %md.state.load, 56, !dbg !452 ; [#uses=1 type=i64] [debug line = 426:5]
  %tmp.48 = trunc i64 %tmp.47 to i8, !dbg !452    ; [#uses=1 type=i8] [debug line = 426:5]
  %tmp.49 = shl i6 %i.cast7, 3, !dbg !452         ; [#uses=8 type=i6] [debug line = 426:5]
  %tmp.50 = zext i6 %tmp.49 to i64, !dbg !452     ; [#uses=1 type=i64] [debug line = 426:5]
  %out.addr = getelementptr [64 x i8]* %out, i64 0, i64 %tmp.50, !dbg !452 ; [#uses=1 type=i8*] [debug line = 426:5]
  store i8 %tmp.48, i8* %out.addr, align 1, !dbg !452 ; [debug line = 426:5]
  %tmp.51 = lshr i56 %md.state.load.cast, 48, !dbg !455 ; [#uses=1 type=i56] [debug line = 426:65]
  %tmp.52 = trunc i56 %tmp.51 to i8, !dbg !455    ; [#uses=1 type=i8] [debug line = 426:65]
  %.sum1 = or i6 %tmp.49, 1, !dbg !455            ; [#uses=1 type=i6] [debug line = 426:65]
  %.sum1.cast = zext i6 %.sum1 to i64, !dbg !455  ; [#uses=1 type=i64] [debug line = 426:65]
  %out.addr.1 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum1.cast, !dbg !455 ; [#uses=1 type=i8*] [debug line = 426:65]
  store i8 %tmp.52, i8* %out.addr.1, align 1, !dbg !455 ; [debug line = 426:65]
  %tmp.53 = lshr i48 %md.state.load.cast1, 40, !dbg !456 ; [#uses=1 type=i48] [debug line = 426:125]
  %tmp.54 = trunc i48 %tmp.53 to i8, !dbg !456    ; [#uses=1 type=i8] [debug line = 426:125]
  %.sum2 = or i6 %tmp.49, 2, !dbg !456            ; [#uses=1 type=i6] [debug line = 426:125]
  %.sum2.cast = zext i6 %.sum2 to i64, !dbg !456  ; [#uses=1 type=i64] [debug line = 426:125]
  %out.addr.2 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum2.cast, !dbg !456 ; [#uses=1 type=i8*] [debug line = 426:125]
  store i8 %tmp.54, i8* %out.addr.2, align 1, !dbg !456 ; [debug line = 426:125]
  %tmp.55 = lshr i40 %md.state.load.cast2, 32, !dbg !457 ; [#uses=1 type=i40] [debug line = 426:185]
  %tmp.56 = trunc i40 %tmp.55 to i8, !dbg !457    ; [#uses=1 type=i8] [debug line = 426:185]
  %.sum3 = or i6 %tmp.49, 3, !dbg !457            ; [#uses=1 type=i6] [debug line = 426:185]
  %.sum3.cast = zext i6 %.sum3 to i64, !dbg !457  ; [#uses=1 type=i64] [debug line = 426:185]
  %out.addr.3 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum3.cast, !dbg !457 ; [#uses=1 type=i8*] [debug line = 426:185]
  store i8 %tmp.56, i8* %out.addr.3, align 1, !dbg !457 ; [debug line = 426:185]
  %tmp.57 = lshr i32 %md.state.load.cast3, 24, !dbg !458 ; [#uses=1 type=i32] [debug line = 426:245]
  %tmp.58 = trunc i32 %tmp.57 to i8, !dbg !458    ; [#uses=1 type=i8] [debug line = 426:245]
  %.sum4 = or i6 %tmp.49, 4, !dbg !458            ; [#uses=1 type=i6] [debug line = 426:245]
  %.sum4.cast = zext i6 %.sum4 to i64, !dbg !458  ; [#uses=1 type=i64] [debug line = 426:245]
  %out.addr.4 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum4.cast, !dbg !458 ; [#uses=1 type=i8*] [debug line = 426:245]
  store i8 %tmp.58, i8* %out.addr.4, align 1, !dbg !458 ; [debug line = 426:245]
  %tmp.59 = lshr i24 %md.state.load.cast4, 16, !dbg !459 ; [#uses=1 type=i24] [debug line = 426:0]
  %tmp.60 = trunc i24 %tmp.59 to i8, !dbg !459    ; [#uses=1 type=i8] [debug line = 426:0]
  %.sum5 = or i6 %tmp.49, 5, !dbg !459            ; [#uses=1 type=i6] [debug line = 426:0]
  %.sum5.cast = zext i6 %.sum5 to i64, !dbg !459  ; [#uses=1 type=i64] [debug line = 426:0]
  %out.addr.5 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum5.cast, !dbg !459 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %tmp.60, i8* %out.addr.5, align 1, !dbg !459 ; [debug line = 426:0]
  %tmp.61 = lshr i16 %md.state.load.cast5, 8, !dbg !459 ; [#uses=1 type=i16] [debug line = 426:0]
  %tmp.62 = trunc i16 %tmp.61 to i8, !dbg !459    ; [#uses=1 type=i8] [debug line = 426:0]
  %.sum6 = or i6 %tmp.49, 6, !dbg !459            ; [#uses=1 type=i6] [debug line = 426:0]
  %.sum6.cast = zext i6 %.sum6 to i64, !dbg !459  ; [#uses=1 type=i64] [debug line = 426:0]
  %out.addr.6 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum6.cast, !dbg !459 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %tmp.62, i8* %out.addr.6, align 1, !dbg !459 ; [debug line = 426:0]
  %tmp.63 = trunc i64 %md.state.load to i8, !dbg !459 ; [#uses=1 type=i8] [debug line = 426:0]
  %.sum7 = or i6 %tmp.49, 7, !dbg !459            ; [#uses=1 type=i6] [debug line = 426:0]
  %.sum7.cast = zext i6 %.sum7 to i64, !dbg !459  ; [#uses=1 type=i64] [debug line = 426:0]
  %out.addr.7 = getelementptr [64 x i8]* %out, i64 0, i64 %.sum7.cast, !dbg !459 ; [#uses=1 type=i8*] [debug line = 426:0]
  store i8 %tmp.63, i8* %out.addr.7, align 1, !dbg !459 ; [debug line = 426:0]
  %i.3 = add i4 %i, 1, !dbg !460                  ; [#uses=1 type=i4] [debug line = 425:21]
  call void @llvm.dbg.value(metadata !{i4 %i.3}, i64 0, metadata !461), !dbg !460 ; [debug line = 425:21] [debug variable = i]
  br label %.preheader, !dbg !460                 ; [debug line = 425:21]

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  ret void
}

; [#uses=2]
define internal fastcc void @sha512_compress_32([8 x i64]* nocapture %md.state, [64 x i8]* nocapture %buf, i64 %sum) {
  %S = alloca [8 x i64], align 16                 ; [#uses=10 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=14 type=[80 x i64]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !462), !dbg !465 ; [debug line = 153:47] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %buf}, i64 0, metadata !466), !dbg !467 ; [debug line = 153:65] [debug variable = buf]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !468 ; [debug line = 155:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !470 ; [debug line = 156:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !471 ; [debug line = 157:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !472 ; [debug line = 158:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !473 ; [debug line = 159:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !474 ; [debug line = 160:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !475 ; [debug line = 161:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !476), !dbg !477 ; [debug line = 162:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !478), !dbg !480 ; [debug line = 162:17] [debug variable = W]
  br label %1, !dbg !481                          ; [debug line = 166:10]

; <label>:1                                       ; preds = %3, %0
  %i = phi i4 [ 0, %0 ], [ %i.5, %3 ]             ; [#uses=3 type=i4]
  %exitcond3 = icmp eq i4 %i, -8, !dbg !481       ; [#uses=1 type=i1] [debug line = 166:10]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %.preheader13.preheader, label %3, !dbg !481 ; [debug line = 166:10]

.preheader13.preheader:                           ; preds = %1
  br label %.preheader13, !dbg !483               ; [debug line = 171:10]

; <label>:3                                       ; preds = %1
  %tmp = zext i4 %i to i64, !dbg !485             ; [#uses=2 type=i64] [debug line = 167:9]
  %md.state.addr = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp, !dbg !485 ; [#uses=1 type=i64*] [debug line = 167:9]
  %md.state.load = load i64* %md.state.addr, align 8, !dbg !485 ; [#uses=1 type=i64] [debug line = 167:9]
  %S.addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp, !dbg !485 ; [#uses=1 type=i64*] [debug line = 167:9]
  store i64 %md.state.load, i64* %S.addr, align 8, !dbg !485 ; [debug line = 167:9]
  %i.5 = add i4 %i, 1, !dbg !487                  ; [#uses=1 type=i4] [debug line = 166:24]
  call void @llvm.dbg.value(metadata !{i4 %i.5}, i64 0, metadata !488), !dbg !487 ; [debug line = 166:24] [debug variable = i]
  br label %1, !dbg !487                          ; [debug line = 166:24]

.preheader13:                                     ; preds = %5, %.preheader13.preheader
  %i.1 = phi i5 [ %i.6, %5 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i5]
  %i.1.cast = zext i5 %i.1 to i7, !dbg !483       ; [#uses=1 type=i7] [debug line = 171:10]
  %exitcond9 = icmp eq i5 %i.1, -16, !dbg !483    ; [#uses=1 type=i1] [debug line = 171:10]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) ; [#uses=0 type=i32]
  br i1 %exitcond9, label %.preheader12.preheader, label %5, !dbg !483 ; [debug line = 171:10]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !489               ; [debug line = 176:10]

; <label>:5                                       ; preds = %.preheader13
  %tmp. = shl i7 %i.1.cast, 3, !dbg !491          ; [#uses=8 type=i7] [debug line = 172:11]
  %tmp.66.cast = zext i7 %tmp. to i8              ; [#uses=1 type=i8]
  %sum.cast = trunc i64 %sum to i8                ; [#uses=1 type=i8]
  %sum1 = add i8 %sum.cast, %tmp.66.cast          ; [#uses=1 type=i8]
  %sum1.cast = zext i8 %sum1 to i64               ; [#uses=1 type=i64]
  %buf.addr = getelementptr [64 x i8]* %buf, i64 0, i64 %sum1.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load = load i8* %buf.addr, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %.sum1 = or i7 %tmp., 1, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum1.cast = zext i7 %.sum1 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast1 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum3 = add i8 %sum.cast1, %.sum1.cast          ; [#uses=1 type=i8]
  %sum3.cast = zext i8 %sum3 to i64               ; [#uses=1 type=i64]
  %buf.addr.1 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum3.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.1 = load i8* %buf.addr.1, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %tmp.69.cast = zext i8 %buf.load.1 to i56, !dbg !491 ; [#uses=1 type=i56] [debug line = 172:11]
  %tmp.64 = shl nuw i56 %tmp.69.cast, 48, !dbg !491 ; [#uses=1 type=i56] [debug line = 172:11]
  %.sum2 = or i7 %tmp., 2, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum2.cast = zext i7 %.sum2 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast2 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum5 = add i8 %sum.cast2, %.sum2.cast          ; [#uses=1 type=i8]
  %sum5.cast = zext i8 %sum5 to i64               ; [#uses=1 type=i64]
  %buf.addr.2 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum5.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.2 = load i8* %buf.addr.2, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %tmp.71.cast = zext i8 %buf.load.2 to i48, !dbg !491 ; [#uses=1 type=i48] [debug line = 172:11]
  %tmp.65 = shl nuw i48 %tmp.71.cast, 40, !dbg !491 ; [#uses=1 type=i48] [debug line = 172:11]
  %.sum3 = or i7 %tmp., 3, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum3.cast = zext i7 %.sum3 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast3 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum7 = add i8 %sum.cast3, %.sum3.cast          ; [#uses=1 type=i8]
  %sum7.cast = zext i8 %sum7 to i64               ; [#uses=1 type=i64]
  %buf.addr.3 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum7.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.3 = load i8* %buf.addr.3, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %.sum4 = or i7 %tmp., 4, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum4.cast = zext i7 %.sum4 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast4 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum9 = add i8 %sum.cast4, %.sum4.cast          ; [#uses=1 type=i8]
  %sum9.cast = zext i8 %sum9 to i64               ; [#uses=1 type=i64]
  %buf.addr.4 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum9.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.4 = load i8* %buf.addr.4, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %tmp.75.cast = zext i8 %buf.load.4 to i32, !dbg !491 ; [#uses=1 type=i32] [debug line = 172:11]
  %tmp.66 = shl nuw i32 %tmp.75.cast, 24, !dbg !491 ; [#uses=1 type=i32] [debug line = 172:11]
  %.sum5 = or i7 %tmp., 5, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum5.cast = zext i7 %.sum5 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast5 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum2 = add i8 %sum.cast5, %.sum5.cast          ; [#uses=1 type=i8]
  %sum2.cast = zext i8 %sum2 to i64               ; [#uses=1 type=i64]
  %buf.addr.5 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum2.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.5 = load i8* %buf.addr.5, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %.sum6 = or i7 %tmp., 6, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum6.cast = zext i7 %.sum6 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast6 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum4 = add i8 %sum.cast6, %.sum6.cast          ; [#uses=1 type=i8]
  %sum4.cast = zext i8 %sum4 to i64               ; [#uses=1 type=i64]
  %buf.addr.6 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum4.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.6 = load i8* %buf.addr.6, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %tmp.79.cast = zext i8 %buf.load.6 to i16, !dbg !491 ; [#uses=1 type=i16] [debug line = 172:11]
  %tmp.67 = shl nuw i16 %tmp.79.cast, 8, !dbg !491 ; [#uses=1 type=i16] [debug line = 172:11]
  %.sum7 = or i7 %tmp., 7, !dbg !491              ; [#uses=1 type=i7] [debug line = 172:11]
  %.sum7.cast = zext i7 %.sum7 to i8, !dbg !491   ; [#uses=1 type=i8] [debug line = 172:11]
  %sum.cast7 = trunc i64 %sum to i8               ; [#uses=1 type=i8]
  %sum6 = add i8 %sum.cast7, %.sum7.cast          ; [#uses=1 type=i8]
  %sum6.cast = zext i8 %sum6 to i64               ; [#uses=1 type=i64]
  %buf.addr.7 = getelementptr [64 x i8]* %buf, i64 0, i64 %sum6.cast, !dbg !491 ; [#uses=1 type=i8*] [debug line = 172:11]
  %buf.load.7 = load i8* %buf.addr.7, align 1, !dbg !491 ; [#uses=1 type=i8] [debug line = 172:11]
  %tmp.16 = call i56 @_ssdm_op_BitConcatenate.i56.i8.i48(i8 0, i48 %tmp.65) ; [#uses=1 type=i56]
  %tmp.17 = or i56 %tmp.16, %tmp.64               ; [#uses=1 type=i56]
  %tmp5 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %buf.load.5, i16 %tmp.67), !dbg !491 ; [#uses=1 type=i24] [debug line = 172:11]
  %tmp.18 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp.66, i32 24, i32 31) ; [#uses=1 type=i8]
  %tmp3 = call i40 @_ssdm_op_BitConcatenate.i40.i8.i8.i24(i8 %buf.load.3, i8 %tmp.18, i24 %tmp5), !dbg !491 ; [#uses=1 type=i40] [debug line = 172:11]
  %tmp.19 = call i16 @_ssdm_op_PartSelect.i16.i56.i32.i32(i56 %tmp.17, i32 40, i32 55) ; [#uses=1 type=i16]
  %tmp.20 = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp3, i32 8, i32 39) ; [#uses=1 type=i32]
  %tmp.68 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i16.i32.i8(i8 %buf.load, i16 %tmp.19, i32 %tmp.20, i8 %buf.load.7), !dbg !491 ; [#uses=1 type=i64] [debug line = 172:11]
  %tmp.69 = zext i5 %i.1 to i64, !dbg !491        ; [#uses=1 type=i64] [debug line = 172:11]
  %W.addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.69, !dbg !491 ; [#uses=1 type=i64*] [debug line = 172:11]
  store i64 %tmp.68, i64* %W.addr, align 8, !dbg !491 ; [debug line = 172:11]
  %i.6 = add i5 %i.1, 1, !dbg !494                ; [#uses=1 type=i5] [debug line = 171:25]
  call void @llvm.dbg.value(metadata !{i5 %i.6}, i64 0, metadata !488), !dbg !494 ; [debug line = 171:25] [debug variable = i]
  br label %.preheader13, !dbg !494               ; [debug line = 171:25]

.preheader12:                                     ; preds = %7, %.preheader12.preheader
  %i.2 = phi i7 [ %i.7, %7 ], [ 16, %.preheader12.preheader ] ; [#uses=7 type=i7]
  %exitcond8 = icmp eq i7 %i.2, -48, !dbg !489    ; [#uses=1 type=i1] [debug line = 176:10]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader11.preheader, label %7, !dbg !489 ; [debug line = 176:10]

.preheader11.preheader:                           ; preds = %.preheader12
  %S.addr.1 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7, !dbg !495 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S.addr.2 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4, !dbg !495 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S.addr.3 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6, !dbg !495 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S.addr.4 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5, !dbg !495 ; [#uses=2 type=i64*] [debug line = 188:8]
  %S.addr.5 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0, !dbg !498 ; [#uses=2 type=i64*] [debug line = 188:0]
  %S.addr.6 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1, !dbg !498 ; [#uses=2 type=i64*] [debug line = 188:0]
  %S.addr.7 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2, !dbg !498 ; [#uses=2 type=i64*] [debug line = 188:0]
  %S.addr.8 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3, !dbg !498 ; [#uses=2 type=i64*] [debug line = 188:0]
  br label %.preheader11, !dbg !499               ; [debug line = 187:10]

; <label>:7                                       ; preds = %.preheader12
  %tmp.70 = add i7 %i.2, -2, !dbg !500            ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp.71 = zext i7 %tmp.70 to i64, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %W.addr.1 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.71, !dbg !500 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W.load = load i64* %W.addr.1, align 8, !dbg !500 ; [#uses=5 type=i64] [debug line = 177:9]
  %tmp.72 = lshr i64 %W.load, 19, !dbg !500       ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.73 = shl i64 %W.load, 45, !dbg !500        ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.74 = or i64 %tmp.73, %tmp.72, !dbg !500    ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.75 = lshr i64 %W.load, 61, !dbg !500       ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.76 = shl i64 %W.load, 3, !dbg !500         ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.77 = or i64 %tmp.76, %tmp.75, !dbg !500    ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.78 = lshr i64 %W.load, 6, !dbg !500        ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp6 = xor i64 %tmp.78, %tmp.77, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.79 = xor i64 %tmp6, %tmp.74, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.80 = add i7 %i.2, -7, !dbg !500            ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp.81 = zext i7 %tmp.80 to i64, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %W.addr.2 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.81, !dbg !500 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W.load.1 = load i64* %W.addr.2, align 8, !dbg !500 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.82 = add i7 %i.2, -15, !dbg !500           ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp.83 = zext i7 %tmp.82 to i64, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %W.addr.3 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.83, !dbg !500 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W.load.2 = load i64* %W.addr.3, align 8, !dbg !500 ; [#uses=5 type=i64] [debug line = 177:9]
  %tmp.84 = lshr i64 %W.load.2, 1, !dbg !500      ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.85 = shl i64 %W.load.2, 63, !dbg !500      ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.86 = or i64 %tmp.85, %tmp.84, !dbg !500    ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.87 = lshr i64 %W.load.2, 8, !dbg !500      ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.88 = shl i64 %W.load.2, 56, !dbg !500      ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.89 = or i64 %tmp.88, %tmp.87, !dbg !500    ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.90 = lshr i64 %W.load.2, 7, !dbg !500      ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp7 = xor i64 %tmp.90, %tmp.89, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.91 = xor i64 %tmp7, %tmp.86, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.92 = add i7 %i.2, -16, !dbg !500           ; [#uses=1 type=i7] [debug line = 177:9]
  %tmp.93 = zext i7 %tmp.92 to i64, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %W.addr.4 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.93, !dbg !500 ; [#uses=1 type=i64*] [debug line = 177:9]
  %W.load.3 = load i64* %W.addr.4, align 8, !dbg !500 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp8 = add i64 %W.load.3, %W.load.1, !dbg !500 ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp9 = add i64 %tmp.91, %tmp.79, !dbg !500     ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.94 = add i64 %tmp8, %tmp9, !dbg !500       ; [#uses=1 type=i64] [debug line = 177:9]
  %tmp.95 = zext i7 %i.2 to i64, !dbg !500        ; [#uses=1 type=i64] [debug line = 177:9]
  %W.addr.5 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.95, !dbg !500 ; [#uses=1 type=i64*] [debug line = 177:9]
  store i64 %tmp.94, i64* %W.addr.5, align 8, !dbg !500 ; [debug line = 177:9]
  %i.7 = add i7 %i.2, 1, !dbg !502                ; [#uses=1 type=i7] [debug line = 176:26]
  call void @llvm.dbg.value(metadata !{i7 %i.7}, i64 0, metadata !488), !dbg !502 ; [debug line = 176:26] [debug variable = i]
  br label %.preheader12, !dbg !502               ; [debug line = 176:26]

.preheader11:                                     ; preds = %9, %.preheader11.preheader
  %i.3 = phi i7 [ %i.8, %9 ], [ 0, %.preheader11.preheader ] ; [#uses=10 type=i7]
  %tmp.96 = icmp ult i7 %i.3, -48, !dbg !499      ; [#uses=1 type=i1] [debug line = 187:10]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %tmp.96, label %9, label %.preheader.preheader, !dbg !499 ; [debug line = 187:10]

.preheader.preheader:                             ; preds = %.preheader11
  br label %.preheader, !dbg !503                 ; [debug line = 203:9]

; <label>:9                                       ; preds = %.preheader11
  %S.load = load i64* %S.addr.1, align 8, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %S.load.1 = load i64* %S.addr.2, align 16, !dbg !495 ; [#uses=11 type=i64] [debug line = 188:8]
  %tmp.97 = lshr i64 %S.load.1, 14, !dbg !495     ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.98 = shl i64 %S.load.1, 50, !dbg !495      ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.99 = or i64 %tmp.98, %tmp.97, !dbg !495    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.100 = lshr i64 %S.load.1, 18, !dbg !495    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.101 = shl i64 %S.load.1, 46, !dbg !495     ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.102 = or i64 %tmp.101, %tmp.100, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.103 = lshr i64 %S.load.1, 41, !dbg !495    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.104 = shl i64 %S.load.1, 23, !dbg !495     ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.105 = or i64 %tmp.104, %tmp.103, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp10 = xor i64 %tmp.105, %tmp.102, !dbg !495  ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.106 = xor i64 %tmp10, %tmp.99, !dbg !495   ; [#uses=1 type=i64] [debug line = 188:8]
  %S.load.2 = load i64* %S.addr.3, align 16, !dbg !495 ; [#uses=3 type=i64] [debug line = 188:8]
  %S.load.3 = load i64* %S.addr.4, align 8, !dbg !495 ; [#uses=4 type=i64] [debug line = 188:8]
  %tmp.107 = xor i64 %S.load.3, %S.load.2, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.108 = and i64 %S.load.1, %tmp.107, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.109 = xor i64 %S.load.2, %tmp.108, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp.110 = zext i7 %i.3 to i64, !dbg !495       ; [#uses=2 type=i64] [debug line = 188:8]
  %K.addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.110, !dbg !495 ; [#uses=1 type=i64*] [debug line = 188:8]
  %K.load = load i64* %K.addr, align 16, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %W.addr.6 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.110, !dbg !495 ; [#uses=1 type=i64*] [debug line = 188:8]
  %W.load.4 = load i64* %W.addr.6, align 16, !dbg !495 ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp13 = add i64 %S.load, %K.load, !dbg !495    ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp15 = add i64 %tmp.109, %tmp.106, !dbg !495  ; [#uses=1 type=i64] [debug line = 188:8]
  %tmp14 = add i64 %W.load.4, %tmp15, !dbg !495   ; [#uses=1 type=i64] [debug line = 188:8]
  %t0 = add i64 %tmp13, %tmp14, !dbg !495         ; [#uses=2 type=i64] [debug line = 188:8]
  call void @llvm.dbg.value(metadata !{i64 %t0}, i64 0, metadata !505), !dbg !495 ; [debug line = 188:8] [debug variable = t0]
  %S.load.4 = load i64* %S.addr.5, align 16, !dbg !498 ; [#uses=12 type=i64] [debug line = 188:0]
  %tmp.111 = lshr i64 %S.load.4, 28, !dbg !498    ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.112 = shl i64 %S.load.4, 36, !dbg !498     ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.113 = or i64 %tmp.112, %tmp.111, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.114 = lshr i64 %S.load.4, 34, !dbg !498    ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.115 = shl i64 %S.load.4, 30, !dbg !498     ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.116 = or i64 %tmp.115, %tmp.114, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.117 = lshr i64 %S.load.4, 39, !dbg !498    ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.118 = shl i64 %S.load.4, 25, !dbg !498     ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.119 = or i64 %tmp.118, %tmp.117, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp16 = xor i64 %tmp.119, %tmp.116, !dbg !498  ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.120 = xor i64 %tmp16, %tmp.113, !dbg !498  ; [#uses=1 type=i64] [debug line = 188:0]
  %S.load.5 = load i64* %S.addr.6, align 8, !dbg !498 ; [#uses=4 type=i64] [debug line = 188:0]
  %tmp.121 = or i64 %S.load.5, %S.load.4, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %S.load.6 = load i64* %S.addr.7, align 16, !dbg !498 ; [#uses=2 type=i64] [debug line = 188:0]
  %tmp.122 = and i64 %S.load.6, %tmp.121, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.123 = and i64 %S.load.5, %S.load.4, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.124 = or i64 %tmp.122, %tmp.123, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %S.load.7 = load i64* %S.addr.8, align 8, !dbg !498 ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.125 = add i64 %t0, %S.load.7, !dbg !498    ; [#uses=11 type=i64] [debug line = 188:0]
  %tmp17 = add i64 %tmp.124, %tmp.120, !dbg !498  ; [#uses=1 type=i64] [debug line = 188:0]
  %tmp.126 = add i64 %t0, %tmp17, !dbg !498       ; [#uses=12 type=i64] [debug line = 188:0]
  %tmp.127 = lshr i64 %tmp.125, 14, !dbg !506     ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.128 = shl i64 %tmp.125, 50, !dbg !506      ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.129 = or i64 %tmp.128, %tmp.127, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.130 = lshr i64 %tmp.125, 18, !dbg !506     ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.131 = shl i64 %tmp.125, 46, !dbg !506      ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.132 = or i64 %tmp.131, %tmp.130, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.133 = lshr i64 %tmp.125, 41, !dbg !506     ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.134 = shl i64 %tmp.125, 23, !dbg !506      ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.135 = or i64 %tmp.134, %tmp.133, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp18 = xor i64 %tmp.135, %tmp.132, !dbg !506  ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.136 = xor i64 %tmp18, %tmp.129, !dbg !506  ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.137 = xor i64 %S.load.3, %S.load.1, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.138 = and i64 %tmp.125, %tmp.137, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.139 = xor i64 %S.load.3, %tmp.138, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp.140 = or i7 %i.3, 1, !dbg !506             ; [#uses=1 type=i7] [debug line = 189:8]
  %tmp.141 = zext i7 %tmp.140 to i64, !dbg !506   ; [#uses=2 type=i64] [debug line = 189:8]
  %K.addr.1 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.141, !dbg !506 ; [#uses=1 type=i64*] [debug line = 189:8]
  %K.load.1 = load i64* %K.addr.1, align 8, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %W.addr.7 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.141, !dbg !506 ; [#uses=1 type=i64*] [debug line = 189:8]
  %W.load.5 = load i64* %W.addr.7, align 8, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp21 = add i64 %S.load.2, %K.load.1, !dbg !506 ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp23 = add i64 %tmp.136, %tmp.139, !dbg !506  ; [#uses=1 type=i64] [debug line = 189:8]
  %tmp22 = add i64 %W.load.5, %tmp23, !dbg !506   ; [#uses=1 type=i64] [debug line = 189:8]
  %t0.1 = add i64 %tmp21, %tmp22, !dbg !506       ; [#uses=2 type=i64] [debug line = 189:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.1}, i64 0, metadata !505), !dbg !506 ; [debug line = 189:8] [debug variable = t0]
  %tmp.142 = lshr i64 %tmp.126, 28, !dbg !507     ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.143 = shl i64 %tmp.126, 36, !dbg !507      ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.144 = or i64 %tmp.143, %tmp.142, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.145 = lshr i64 %tmp.126, 34, !dbg !507     ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.146 = shl i64 %tmp.126, 30, !dbg !507      ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.147 = or i64 %tmp.146, %tmp.145, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.148 = lshr i64 %tmp.126, 39, !dbg !507     ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.149 = shl i64 %tmp.126, 25, !dbg !507      ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.150 = or i64 %tmp.149, %tmp.148, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp24 = xor i64 %tmp.150, %tmp.147, !dbg !507  ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.151 = xor i64 %tmp24, %tmp.144, !dbg !507  ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.152 = or i64 %S.load.4, %tmp.126, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.153 = and i64 %S.load.5, %tmp.152, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.154 = and i64 %S.load.4, %tmp.126, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.155 = or i64 %tmp.153, %tmp.154, !dbg !507 ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.156 = add i64 %t0.1, %S.load.6, !dbg !507  ; [#uses=11 type=i64] [debug line = 189:0]
  %tmp25 = add i64 %t0.1, %tmp.151, !dbg !507     ; [#uses=1 type=i64] [debug line = 189:0]
  %tmp.157 = add i64 %tmp.155, %tmp25, !dbg !507  ; [#uses=12 type=i64] [debug line = 189:0]
  %tmp.158 = lshr i64 %tmp.156, 14, !dbg !508     ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.159 = shl i64 %tmp.156, 50, !dbg !508      ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.160 = or i64 %tmp.159, %tmp.158, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.161 = lshr i64 %tmp.156, 18, !dbg !508     ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.162 = shl i64 %tmp.156, 46, !dbg !508      ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.163 = or i64 %tmp.162, %tmp.161, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.164 = lshr i64 %tmp.156, 41, !dbg !508     ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.165 = shl i64 %tmp.156, 23, !dbg !508      ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.166 = or i64 %tmp.165, %tmp.164, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp26 = xor i64 %tmp.166, %tmp.163, !dbg !508  ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.167 = xor i64 %tmp26, %tmp.160, !dbg !508  ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.168 = xor i64 %S.load.1, %tmp.125, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.169 = and i64 %tmp.156, %tmp.168, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.170 = xor i64 %S.load.1, %tmp.169, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp.171 = or i7 %i.3, 2, !dbg !508             ; [#uses=1 type=i7] [debug line = 190:8]
  %tmp.172 = zext i7 %tmp.171 to i64, !dbg !508   ; [#uses=2 type=i64] [debug line = 190:8]
  %K.addr.2 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.172, !dbg !508 ; [#uses=1 type=i64*] [debug line = 190:8]
  %K.load.2 = load i64* %K.addr.2, align 16, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %W.addr.8 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.172, !dbg !508 ; [#uses=1 type=i64*] [debug line = 190:8]
  %W.load.6 = load i64* %W.addr.8, align 16, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp27 = add i64 %S.load.3, %K.load.2, !dbg !508 ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp28 = add i64 %tmp.167, %tmp.170, !dbg !508  ; [#uses=1 type=i64] [debug line = 190:8]
  %tmp29 = add i64 %W.load.6, %tmp28, !dbg !508   ; [#uses=1 type=i64] [debug line = 190:8]
  %t0.2 = add i64 %tmp27, %tmp29, !dbg !508       ; [#uses=2 type=i64] [debug line = 190:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.2}, i64 0, metadata !505), !dbg !508 ; [debug line = 190:8] [debug variable = t0]
  %tmp.173 = lshr i64 %tmp.157, 28, !dbg !509     ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.174 = shl i64 %tmp.157, 36, !dbg !509      ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.175 = or i64 %tmp.174, %tmp.173, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.176 = lshr i64 %tmp.157, 34, !dbg !509     ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.177 = shl i64 %tmp.157, 30, !dbg !509      ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.178 = or i64 %tmp.177, %tmp.176, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.179 = lshr i64 %tmp.157, 39, !dbg !509     ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.180 = shl i64 %tmp.157, 25, !dbg !509      ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.181 = or i64 %tmp.180, %tmp.179, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp30 = xor i64 %tmp.181, %tmp.178, !dbg !509  ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.182 = xor i64 %tmp30, %tmp.175, !dbg !509  ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.183 = or i64 %tmp.157, %tmp.126, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.184 = and i64 %S.load.4, %tmp.183, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.185 = and i64 %tmp.157, %tmp.126, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.186 = or i64 %tmp.184, %tmp.185, !dbg !509 ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.187 = add i64 %t0.2, %S.load.5, !dbg !509  ; [#uses=11 type=i64] [debug line = 190:0]
  %tmp31 = add i64 %t0.2, %tmp.182, !dbg !509     ; [#uses=1 type=i64] [debug line = 190:0]
  %tmp.188 = add i64 %tmp.186, %tmp31, !dbg !509  ; [#uses=12 type=i64] [debug line = 190:0]
  %tmp.189 = lshr i64 %tmp.187, 14, !dbg !510     ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.190 = shl i64 %tmp.187, 50, !dbg !510      ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.191 = or i64 %tmp.190, %tmp.189, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.192 = lshr i64 %tmp.187, 18, !dbg !510     ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.193 = shl i64 %tmp.187, 46, !dbg !510      ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.194 = or i64 %tmp.193, %tmp.192, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.195 = lshr i64 %tmp.187, 41, !dbg !510     ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.196 = shl i64 %tmp.187, 23, !dbg !510      ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.197 = or i64 %tmp.196, %tmp.195, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp32 = xor i64 %tmp.197, %tmp.194, !dbg !510  ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.198 = xor i64 %tmp32, %tmp.191, !dbg !510  ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.199 = xor i64 %tmp.156, %tmp.125, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.200 = and i64 %tmp.187, %tmp.199, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.201 = xor i64 %tmp.200, %tmp.125, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp.202 = or i7 %i.3, 3, !dbg !510             ; [#uses=1 type=i7] [debug line = 191:8]
  %tmp.203 = zext i7 %tmp.202 to i64, !dbg !510   ; [#uses=2 type=i64] [debug line = 191:8]
  %K.addr.3 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.203, !dbg !510 ; [#uses=1 type=i64*] [debug line = 191:8]
  %K.load.3 = load i64* %K.addr.3, align 8, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %W.addr.9 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.203, !dbg !510 ; [#uses=1 type=i64*] [debug line = 191:8]
  %W.load.7 = load i64* %W.addr.9, align 8, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp33 = add i64 %S.load.1, %K.load.3, !dbg !510 ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp34 = add i64 %tmp.198, %tmp.201, !dbg !510  ; [#uses=1 type=i64] [debug line = 191:8]
  %tmp35 = add i64 %W.load.7, %tmp34, !dbg !510   ; [#uses=1 type=i64] [debug line = 191:8]
  %t0.3 = add i64 %tmp33, %tmp35, !dbg !510       ; [#uses=2 type=i64] [debug line = 191:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.3}, i64 0, metadata !505), !dbg !510 ; [debug line = 191:8] [debug variable = t0]
  %tmp.204 = lshr i64 %tmp.188, 28, !dbg !511     ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.205 = shl i64 %tmp.188, 36, !dbg !511      ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.206 = or i64 %tmp.205, %tmp.204, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.207 = lshr i64 %tmp.188, 34, !dbg !511     ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.208 = shl i64 %tmp.188, 30, !dbg !511      ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.209 = or i64 %tmp.208, %tmp.207, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.210 = lshr i64 %tmp.188, 39, !dbg !511     ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.211 = shl i64 %tmp.188, 25, !dbg !511      ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.212 = or i64 %tmp.211, %tmp.210, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp36 = xor i64 %tmp.212, %tmp.209, !dbg !511  ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.213 = xor i64 %tmp36, %tmp.206, !dbg !511  ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.214 = or i64 %tmp.188, %tmp.157, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.215 = and i64 %tmp.214, %tmp.126, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.216 = and i64 %tmp.188, %tmp.157, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.217 = or i64 %tmp.215, %tmp.216, !dbg !511 ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.218 = add i64 %t0.3, %S.load.4, !dbg !511  ; [#uses=11 type=i64] [debug line = 191:0]
  %tmp37 = add i64 %t0.3, %tmp.213, !dbg !511     ; [#uses=1 type=i64] [debug line = 191:0]
  %tmp.219 = add i64 %tmp.217, %tmp37, !dbg !511  ; [#uses=12 type=i64] [debug line = 191:0]
  %tmp.220 = lshr i64 %tmp.218, 14, !dbg !512     ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.221 = shl i64 %tmp.218, 50, !dbg !512      ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.222 = or i64 %tmp.221, %tmp.220, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.223 = lshr i64 %tmp.218, 18, !dbg !512     ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.224 = shl i64 %tmp.218, 46, !dbg !512      ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.225 = or i64 %tmp.224, %tmp.223, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.226 = lshr i64 %tmp.218, 41, !dbg !512     ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.227 = shl i64 %tmp.218, 23, !dbg !512      ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.228 = or i64 %tmp.227, %tmp.226, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp38 = xor i64 %tmp.228, %tmp.225, !dbg !512  ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.229 = xor i64 %tmp38, %tmp.222, !dbg !512  ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.230 = xor i64 %tmp.187, %tmp.156, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.231 = and i64 %tmp.218, %tmp.230, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.232 = xor i64 %tmp.231, %tmp.156, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp.233 = or i7 %i.3, 4, !dbg !512             ; [#uses=1 type=i7] [debug line = 192:8]
  %tmp.234 = zext i7 %tmp.233 to i64, !dbg !512   ; [#uses=2 type=i64] [debug line = 192:8]
  %K.addr.4 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.234, !dbg !512 ; [#uses=1 type=i64*] [debug line = 192:8]
  %K.load.4 = load i64* %K.addr.4, align 16, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %W.addr.10 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.234, !dbg !512 ; [#uses=1 type=i64*] [debug line = 192:8]
  %W.load.8 = load i64* %W.addr.10, align 16, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp39 = add i64 %W.load.8, %K.load.4, !dbg !512 ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp40 = add i64 %tmp.125, %tmp.229, !dbg !512  ; [#uses=1 type=i64] [debug line = 192:8]
  %tmp41 = add i64 %tmp.232, %tmp40, !dbg !512    ; [#uses=1 type=i64] [debug line = 192:8]
  %t0.4 = add i64 %tmp39, %tmp41, !dbg !512       ; [#uses=2 type=i64] [debug line = 192:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.4}, i64 0, metadata !505), !dbg !512 ; [debug line = 192:8] [debug variable = t0]
  %tmp.235 = lshr i64 %tmp.219, 28, !dbg !513     ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.236 = shl i64 %tmp.219, 36, !dbg !513      ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.237 = or i64 %tmp.236, %tmp.235, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.238 = lshr i64 %tmp.219, 34, !dbg !513     ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.239 = shl i64 %tmp.219, 30, !dbg !513      ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.240 = or i64 %tmp.239, %tmp.238, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.241 = lshr i64 %tmp.219, 39, !dbg !513     ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.242 = shl i64 %tmp.219, 25, !dbg !513      ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.243 = or i64 %tmp.242, %tmp.241, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp42 = xor i64 %tmp.243, %tmp.240, !dbg !513  ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.244 = xor i64 %tmp42, %tmp.237, !dbg !513  ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.245 = or i64 %tmp.219, %tmp.188, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.246 = and i64 %tmp.245, %tmp.157, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.247 = and i64 %tmp.219, %tmp.188, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.248 = or i64 %tmp.246, %tmp.247, !dbg !513 ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.249 = add i64 %t0.4, %tmp.126, !dbg !513   ; [#uses=11 type=i64] [debug line = 192:0]
  store i64 %tmp.249, i64* %S.addr.1, align 8, !dbg !513 ; [debug line = 192:0]
  %tmp43 = add i64 %t0.4, %tmp.244, !dbg !513     ; [#uses=1 type=i64] [debug line = 192:0]
  %tmp.250 = add i64 %tmp.248, %tmp43, !dbg !513  ; [#uses=12 type=i64] [debug line = 192:0]
  store i64 %tmp.250, i64* %S.addr.8, align 8, !dbg !513 ; [debug line = 192:0]
  %tmp.251 = lshr i64 %tmp.249, 14, !dbg !514     ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.252 = shl i64 %tmp.249, 50, !dbg !514      ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.253 = or i64 %tmp.252, %tmp.251, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.254 = lshr i64 %tmp.249, 18, !dbg !514     ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.255 = shl i64 %tmp.249, 46, !dbg !514      ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.256 = or i64 %tmp.255, %tmp.254, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.257 = lshr i64 %tmp.249, 41, !dbg !514     ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.258 = shl i64 %tmp.249, 23, !dbg !514      ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.259 = or i64 %tmp.258, %tmp.257, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp44 = xor i64 %tmp.259, %tmp.256, !dbg !514  ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.260 = xor i64 %tmp44, %tmp.253, !dbg !514  ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.261 = xor i64 %tmp.218, %tmp.187, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.262 = and i64 %tmp.249, %tmp.261, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.263 = xor i64 %tmp.262, %tmp.187, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp.264 = or i7 %i.3, 5, !dbg !514             ; [#uses=1 type=i7] [debug line = 193:8]
  %tmp.265 = zext i7 %tmp.264 to i64, !dbg !514   ; [#uses=2 type=i64] [debug line = 193:8]
  %K.addr.5 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.265, !dbg !514 ; [#uses=1 type=i64*] [debug line = 193:8]
  %K.load.5 = load i64* %K.addr.5, align 8, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %W.addr.11 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.265, !dbg !514 ; [#uses=1 type=i64*] [debug line = 193:8]
  %W.load.9 = load i64* %W.addr.11, align 8, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp45 = add i64 %W.load.9, %K.load.5, !dbg !514 ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp46 = add i64 %tmp.156, %tmp.260, !dbg !514  ; [#uses=1 type=i64] [debug line = 193:8]
  %tmp47 = add i64 %tmp.263, %tmp46, !dbg !514    ; [#uses=1 type=i64] [debug line = 193:8]
  %t0.5 = add i64 %tmp45, %tmp47, !dbg !514       ; [#uses=2 type=i64] [debug line = 193:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.5}, i64 0, metadata !505), !dbg !514 ; [debug line = 193:8] [debug variable = t0]
  %tmp.266 = lshr i64 %tmp.250, 28, !dbg !515     ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.267 = shl i64 %tmp.250, 36, !dbg !515      ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.268 = or i64 %tmp.267, %tmp.266, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.269 = lshr i64 %tmp.250, 34, !dbg !515     ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.270 = shl i64 %tmp.250, 30, !dbg !515      ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.271 = or i64 %tmp.270, %tmp.269, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.272 = lshr i64 %tmp.250, 39, !dbg !515     ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.273 = shl i64 %tmp.250, 25, !dbg !515      ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.274 = or i64 %tmp.273, %tmp.272, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp48 = xor i64 %tmp.274, %tmp.271, !dbg !515  ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.275 = xor i64 %tmp48, %tmp.268, !dbg !515  ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.276 = or i64 %tmp.250, %tmp.219, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.277 = and i64 %tmp.276, %tmp.188, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.278 = and i64 %tmp.250, %tmp.219, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.279 = or i64 %tmp.277, %tmp.278, !dbg !515 ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.280 = add i64 %t0.5, %tmp.157, !dbg !515   ; [#uses=9 type=i64] [debug line = 193:0]
  store i64 %tmp.280, i64* %S.addr.3, align 16, !dbg !515 ; [debug line = 193:0]
  %tmp49 = add i64 %t0.5, %tmp.275, !dbg !515     ; [#uses=1 type=i64] [debug line = 193:0]
  %tmp.281 = add i64 %tmp.279, %tmp49, !dbg !515  ; [#uses=11 type=i64] [debug line = 193:0]
  store i64 %tmp.281, i64* %S.addr.7, align 16, !dbg !515 ; [debug line = 193:0]
  %tmp.282 = lshr i64 %tmp.280, 14, !dbg !516     ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.283 = shl i64 %tmp.280, 50, !dbg !516      ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.284 = or i64 %tmp.283, %tmp.282, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.285 = lshr i64 %tmp.280, 18, !dbg !516     ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.286 = shl i64 %tmp.280, 46, !dbg !516      ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.287 = or i64 %tmp.286, %tmp.285, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.288 = lshr i64 %tmp.280, 41, !dbg !516     ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.289 = shl i64 %tmp.280, 23, !dbg !516      ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.290 = or i64 %tmp.289, %tmp.288, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp50 = xor i64 %tmp.290, %tmp.287, !dbg !516  ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.291 = xor i64 %tmp50, %tmp.284, !dbg !516  ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.292 = xor i64 %tmp.249, %tmp.218, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.293 = and i64 %tmp.280, %tmp.292, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.294 = xor i64 %tmp.293, %tmp.218, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp.295 = or i7 %i.3, 6, !dbg !516             ; [#uses=1 type=i7] [debug line = 194:8]
  %tmp.296 = zext i7 %tmp.295 to i64, !dbg !516   ; [#uses=2 type=i64] [debug line = 194:8]
  %K.addr.6 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.296, !dbg !516 ; [#uses=1 type=i64*] [debug line = 194:8]
  %K.load.6 = load i64* %K.addr.6, align 16, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %W.addr.12 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.296, !dbg !516 ; [#uses=1 type=i64*] [debug line = 194:8]
  %W.load.10 = load i64* %W.addr.12, align 16, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp51 = add i64 %W.load.10, %K.load.6, !dbg !516 ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp52 = add i64 %tmp.187, %tmp.291, !dbg !516  ; [#uses=1 type=i64] [debug line = 194:8]
  %tmp53 = add i64 %tmp.294, %tmp52, !dbg !516    ; [#uses=1 type=i64] [debug line = 194:8]
  %t0.6 = add i64 %tmp51, %tmp53, !dbg !516       ; [#uses=2 type=i64] [debug line = 194:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.6}, i64 0, metadata !505), !dbg !516 ; [debug line = 194:8] [debug variable = t0]
  %tmp.297 = lshr i64 %tmp.281, 28, !dbg !517     ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.298 = shl i64 %tmp.281, 36, !dbg !517      ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.299 = or i64 %tmp.298, %tmp.297, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.300 = lshr i64 %tmp.281, 34, !dbg !517     ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.301 = shl i64 %tmp.281, 30, !dbg !517      ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.302 = or i64 %tmp.301, %tmp.300, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.303 = lshr i64 %tmp.281, 39, !dbg !517     ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.304 = shl i64 %tmp.281, 25, !dbg !517      ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.305 = or i64 %tmp.304, %tmp.303, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp54 = xor i64 %tmp.305, %tmp.302, !dbg !517  ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.306 = xor i64 %tmp54, %tmp.299, !dbg !517  ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.307 = or i64 %tmp.281, %tmp.250, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.308 = and i64 %tmp.307, %tmp.219, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.309 = and i64 %tmp.281, %tmp.250, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.310 = or i64 %tmp.308, %tmp.309, !dbg !517 ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.311 = add i64 %t0.6, %tmp.188, !dbg !517   ; [#uses=8 type=i64] [debug line = 194:0]
  store i64 %tmp.311, i64* %S.addr.4, align 8, !dbg !517 ; [debug line = 194:0]
  %tmp55 = add i64 %t0.6, %tmp.306, !dbg !517     ; [#uses=1 type=i64] [debug line = 194:0]
  %tmp.312 = add i64 %tmp.310, %tmp55, !dbg !517  ; [#uses=9 type=i64] [debug line = 194:0]
  store i64 %tmp.312, i64* %S.addr.6, align 8, !dbg !517 ; [debug line = 194:0]
  %tmp.313 = lshr i64 %tmp.311, 14, !dbg !518     ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.314 = shl i64 %tmp.311, 50, !dbg !518      ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.315 = or i64 %tmp.314, %tmp.313, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.316 = lshr i64 %tmp.311, 18, !dbg !518     ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.317 = shl i64 %tmp.311, 46, !dbg !518      ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.318 = or i64 %tmp.317, %tmp.316, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.319 = lshr i64 %tmp.311, 41, !dbg !518     ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.320 = shl i64 %tmp.311, 23, !dbg !518      ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.321 = or i64 %tmp.320, %tmp.319, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp56 = xor i64 %tmp.321, %tmp.318, !dbg !518  ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.322 = xor i64 %tmp56, %tmp.315, !dbg !518  ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.323 = xor i64 %tmp.280, %tmp.249, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.324 = and i64 %tmp.311, %tmp.323, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.325 = xor i64 %tmp.324, %tmp.249, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp.326 = or i7 %i.3, 7, !dbg !518             ; [#uses=1 type=i7] [debug line = 195:8]
  %tmp.327 = zext i7 %tmp.326 to i64, !dbg !518   ; [#uses=2 type=i64] [debug line = 195:8]
  %K.addr.7 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.327, !dbg !518 ; [#uses=1 type=i64*] [debug line = 195:8]
  %K.load.7 = load i64* %K.addr.7, align 8, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %W.addr.13 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.327, !dbg !518 ; [#uses=1 type=i64*] [debug line = 195:8]
  %W.load.11 = load i64* %W.addr.13, align 8, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp57 = add i64 %W.load.11, %K.load.7, !dbg !518 ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp58 = add i64 %tmp.218, %tmp.322, !dbg !518  ; [#uses=1 type=i64] [debug line = 195:8]
  %tmp59 = add i64 %tmp.325, %tmp58, !dbg !518    ; [#uses=1 type=i64] [debug line = 195:8]
  %t0.7 = add i64 %tmp57, %tmp59, !dbg !518       ; [#uses=2 type=i64] [debug line = 195:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.7}, i64 0, metadata !505), !dbg !518 ; [debug line = 195:8] [debug variable = t0]
  %tmp.328 = lshr i64 %tmp.312, 28, !dbg !519     ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.329 = shl i64 %tmp.312, 36, !dbg !519      ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.330 = or i64 %tmp.329, %tmp.328, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.331 = lshr i64 %tmp.312, 34, !dbg !519     ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.332 = shl i64 %tmp.312, 30, !dbg !519      ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.333 = or i64 %tmp.332, %tmp.331, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.334 = lshr i64 %tmp.312, 39, !dbg !519     ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.335 = shl i64 %tmp.312, 25, !dbg !519      ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.336 = or i64 %tmp.335, %tmp.334, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp60 = xor i64 %tmp.336, %tmp.333, !dbg !519  ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.337 = xor i64 %tmp60, %tmp.330, !dbg !519  ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.338 = or i64 %tmp.312, %tmp.281, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.339 = and i64 %tmp.338, %tmp.250, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.340 = and i64 %tmp.312, %tmp.281, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.341 = or i64 %tmp.339, %tmp.340, !dbg !519 ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.342 = add i64 %t0.7, %tmp.219, !dbg !519   ; [#uses=1 type=i64] [debug line = 195:0]
  store i64 %tmp.342, i64* %S.addr.2, align 16, !dbg !519 ; [debug line = 195:0]
  %tmp61 = add i64 %t0.7, %tmp.337, !dbg !519     ; [#uses=1 type=i64] [debug line = 195:0]
  %tmp.343 = add i64 %tmp.341, %tmp61, !dbg !519  ; [#uses=1 type=i64] [debug line = 195:0]
  store i64 %tmp.343, i64* %S.addr.5, align 16, !dbg !519 ; [debug line = 195:0]
  %i.8 = add i7 %i.3, 8, !dbg !520                ; [#uses=1 type=i7] [debug line = 187:25]
  call void @llvm.dbg.value(metadata !{i7 %i.8}, i64 0, metadata !488), !dbg !520 ; [debug line = 187:25] [debug variable = i]
  br label %.preheader11, !dbg !520               ; [debug line = 187:25]

.preheader:                                       ; preds = %11, %.preheader.preheader
  %i.4 = phi i4 [ %i.9, %11 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i4]
  %exitcond = icmp eq i4 %i.4, -8, !dbg !503      ; [#uses=1 type=i1] [debug line = 203:9]
  %10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond, label %12, label %11, !dbg !503 ; [debug line = 203:9]

; <label>:11                                      ; preds = %.preheader
  %tmp.344 = zext i4 %i.4 to i64, !dbg !521       ; [#uses=2 type=i64] [debug line = 204:9]
  %md.state.addr.8 = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp.344, !dbg !521 ; [#uses=2 type=i64*] [debug line = 204:9]
  %md.state.load.1 = load i64* %md.state.addr.8, align 8, !dbg !521 ; [#uses=1 type=i64] [debug line = 204:9]
  %S.addr.9 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp.344, !dbg !521 ; [#uses=1 type=i64*] [debug line = 204:9]
  %S.load.8 = load i64* %S.addr.9, align 8, !dbg !521 ; [#uses=1 type=i64] [debug line = 204:9]
  %tmp.345 = add i64 %S.load.8, %md.state.load.1, !dbg !521 ; [#uses=1 type=i64] [debug line = 204:9]
  store i64 %tmp.345, i64* %md.state.addr.8, align 8, !dbg !521 ; [debug line = 204:9]
  %i.9 = add i4 %i.4, 1, !dbg !523                ; [#uses=1 type=i4] [debug line = 203:23]
  call void @llvm.dbg.value(metadata !{i4 %i.9}, i64 0, metadata !488), !dbg !523 ; [debug line = 203:23] [debug variable = i]
  br label %.preheader, !dbg !523                 ; [debug line = 203:23]

; <label>:12                                      ; preds = %.preheader
  ret void
}

; [#uses=1]
define internal fastcc void @sha512_compress_128.1([8 x i64]* nocapture %md.state, [128 x i8]* nocapture %buf, i64 %.01.idx) {
  %S = alloca [8 x i64], align 16                 ; [#uses=10 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=14 type=[80 x i64]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !524), !dbg !527 ; [debug line = 96:48] [debug variable = md.state]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !528 ; [debug line = 98:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !530 ; [debug line = 99:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !531 ; [debug line = 100:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !532 ; [debug line = 101:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !533 ; [debug line = 102:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !534 ; [debug line = 103:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !535 ; [debug line = 104:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !536), !dbg !537 ; [debug line = 105:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !538), !dbg !539 ; [debug line = 105:17] [debug variable = W]
  br label %1, !dbg !540                          ; [debug line = 109:10]

; <label>:1                                       ; preds = %3, %0
  %i = phi i4 [ 0, %0 ], [ %i.10, %3 ]            ; [#uses=3 type=i4]
  %exitcond4 = icmp eq i4 %i, -8, !dbg !540       ; [#uses=1 type=i1] [debug line = 109:10]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond4, label %.preheader13.preheader, label %3, !dbg !540 ; [debug line = 109:10]

.preheader13.preheader:                           ; preds = %1
  br label %.preheader13, !dbg !542               ; [debug line = 114:10]

; <label>:3                                       ; preds = %1
  %tmp = zext i4 %i to i64, !dbg !544             ; [#uses=2 type=i64] [debug line = 110:9]
  %md.state.addr = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp, !dbg !544 ; [#uses=1 type=i64*] [debug line = 110:9]
  %md.state.load = load i64* %md.state.addr, align 8, !dbg !544 ; [#uses=1 type=i64] [debug line = 110:9]
  %S.addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp, !dbg !544 ; [#uses=1 type=i64*] [debug line = 110:9]
  store i64 %md.state.load, i64* %S.addr, align 8, !dbg !544 ; [debug line = 110:9]
  %i.10 = add i4 %i, 1, !dbg !546                 ; [#uses=1 type=i4] [debug line = 109:24]
  call void @llvm.dbg.value(metadata !{i4 %i.10}, i64 0, metadata !547), !dbg !546 ; [debug line = 109:24] [debug variable = i]
  br label %1, !dbg !546                          ; [debug line = 109:24]

.preheader13:                                     ; preds = %5, %.preheader13.preheader
  %i.1 = phi i5 [ %i.11, %5 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i5]
  %i.1.cast = zext i5 %i.1 to i7, !dbg !542       ; [#uses=1 type=i7] [debug line = 114:10]
  %exitcond9 = icmp eq i5 %i.1, -16, !dbg !542    ; [#uses=1 type=i1] [debug line = 114:10]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) ; [#uses=0 type=i32]
  br i1 %exitcond9, label %.preheader12.preheader, label %5, !dbg !542 ; [debug line = 114:10]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !548               ; [debug line = 119:10]

; <label>:5                                       ; preds = %.preheader13
  %tmp. = shl i7 %i.1.cast, 3, !dbg !550          ; [#uses=8 type=i7] [debug line = 115:11]
  %tmp.409.cast = zext i7 %tmp. to i9             ; [#uses=1 type=i9]
  %.01.idx.cast = trunc i64 %.01.idx to i9        ; [#uses=1 type=i9]
  %sum = add i9 %.01.idx.cast, %tmp.409.cast      ; [#uses=1 type=i9]
  %sum.cast = zext i9 %sum to i64                 ; [#uses=1 type=i64]
  %buf.addr = getelementptr [128 x i8]* %buf, i64 0, i64 %sum.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load = load i8* %buf.addr, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %.sum1 = or i7 %tmp., 1, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum1.cast = zext i7 %.sum1 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast1 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum2 = add i9 %.01.idx.cast1, %.sum1.cast      ; [#uses=1 type=i9]
  %sum2.cast = zext i9 %sum2 to i64               ; [#uses=1 type=i64]
  %buf.addr.8 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum2.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.8 = load i8* %buf.addr.8, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.412.cast = zext i8 %buf.load.8 to i56, !dbg !550 ; [#uses=1 type=i56] [debug line = 115:11]
  %tmp.346 = shl nuw i56 %tmp.412.cast, 48, !dbg !550 ; [#uses=1 type=i56] [debug line = 115:11]
  %.sum2 = or i7 %tmp., 2, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum2.cast = zext i7 %.sum2 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast2 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum4 = add i9 %.01.idx.cast2, %.sum2.cast      ; [#uses=1 type=i9]
  %sum4.cast = zext i9 %sum4 to i64               ; [#uses=1 type=i64]
  %buf.addr.9 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum4.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.9 = load i8* %buf.addr.9, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.414.cast = zext i8 %buf.load.9 to i48, !dbg !550 ; [#uses=1 type=i48] [debug line = 115:11]
  %tmp.347 = shl nuw i48 %tmp.414.cast, 40, !dbg !550 ; [#uses=1 type=i48] [debug line = 115:11]
  %.sum3 = or i7 %tmp., 3, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum3.cast = zext i7 %.sum3 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast3 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum6 = add i9 %.01.idx.cast3, %.sum3.cast      ; [#uses=1 type=i9]
  %sum6.cast = zext i9 %sum6 to i64               ; [#uses=1 type=i64]
  %buf.addr.10 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum6.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.10 = load i8* %buf.addr.10, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %.sum4 = or i7 %tmp., 4, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum4.cast = zext i7 %.sum4 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast4 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum8 = add i9 %.01.idx.cast4, %.sum4.cast      ; [#uses=1 type=i9]
  %sum8.cast = zext i9 %sum8 to i64               ; [#uses=1 type=i64]
  %buf.addr.11 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum8.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.11 = load i8* %buf.addr.11, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.418.cast = zext i8 %buf.load.11 to i32, !dbg !550 ; [#uses=1 type=i32] [debug line = 115:11]
  %tmp.348 = shl nuw i32 %tmp.418.cast, 24, !dbg !550 ; [#uses=1 type=i32] [debug line = 115:11]
  %.sum5 = or i7 %tmp., 5, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum5.cast = zext i7 %.sum5 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast5 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum7 = add i9 %.01.idx.cast5, %.sum5.cast      ; [#uses=1 type=i9]
  %sum7.cast = zext i9 %sum7 to i64               ; [#uses=1 type=i64]
  %buf.addr.12 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum7.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.12 = load i8* %buf.addr.12, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %.sum6 = or i7 %tmp., 6, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum6.cast = zext i7 %.sum6 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast6 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum9 = add i9 %.01.idx.cast6, %.sum6.cast      ; [#uses=1 type=i9]
  %sum9.cast = zext i9 %sum9 to i64               ; [#uses=1 type=i64]
  %buf.addr.13 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum9.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.13 = load i8* %buf.addr.13, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.422.cast = zext i8 %buf.load.13 to i16, !dbg !550 ; [#uses=1 type=i16] [debug line = 115:11]
  %tmp.349 = shl nuw i16 %tmp.422.cast, 8, !dbg !550 ; [#uses=1 type=i16] [debug line = 115:11]
  %.sum7 = or i7 %tmp., 7, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum7.cast = zext i7 %.sum7 to i9, !dbg !550   ; [#uses=1 type=i9] [debug line = 115:11]
  %.01.idx.cast7 = trunc i64 %.01.idx to i9       ; [#uses=1 type=i9]
  %sum1 = add i9 %.01.idx.cast7, %.sum7.cast      ; [#uses=1 type=i9]
  %sum1.cast = zext i9 %sum1 to i64               ; [#uses=1 type=i64]
  %buf.addr.14 = getelementptr [128 x i8]* %buf, i64 0, i64 %sum1.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.14 = load i8* %buf.addr.14, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.62 = call i56 @_ssdm_op_BitConcatenate.i56.i8.i48(i8 0, i48 %tmp.347) ; [#uses=1 type=i56]
  %tmp.63 = or i56 %tmp.62, %tmp.346              ; [#uses=1 type=i56]
  %tmp5 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %buf.load.12, i16 %tmp.349), !dbg !550 ; [#uses=1 type=i24] [debug line = 115:11]
  %tmp.64 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp.348, i32 24, i32 31) ; [#uses=1 type=i8]
  %tmp3 = call i40 @_ssdm_op_BitConcatenate.i40.i8.i8.i24(i8 %buf.load.10, i8 %tmp.64, i24 %tmp5), !dbg !550 ; [#uses=1 type=i40] [debug line = 115:11]
  %tmp.65 = call i16 @_ssdm_op_PartSelect.i16.i56.i32.i32(i56 %tmp.63, i32 40, i32 55) ; [#uses=1 type=i16]
  %tmp.66 = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp3, i32 8, i32 39) ; [#uses=1 type=i32]
  %tmp.350 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i16.i32.i8(i8 %buf.load, i16 %tmp.65, i32 %tmp.66, i8 %buf.load.14), !dbg !550 ; [#uses=1 type=i64] [debug line = 115:11]
  %tmp.351 = zext i5 %i.1 to i64, !dbg !550       ; [#uses=1 type=i64] [debug line = 115:11]
  %W.addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.351, !dbg !550 ; [#uses=1 type=i64*] [debug line = 115:11]
  store i64 %tmp.350, i64* %W.addr, align 8, !dbg !550 ; [debug line = 115:11]
  %i.11 = add i5 %i.1, 1, !dbg !553               ; [#uses=1 type=i5] [debug line = 114:25]
  call void @llvm.dbg.value(metadata !{i5 %i.11}, i64 0, metadata !547), !dbg !553 ; [debug line = 114:25] [debug variable = i]
  br label %.preheader13, !dbg !553               ; [debug line = 114:25]

.preheader12:                                     ; preds = %7, %.preheader12.preheader
  %i.2 = phi i7 [ %i.12, %7 ], [ 16, %.preheader12.preheader ] ; [#uses=7 type=i7]
  %exitcond8 = icmp eq i7 %i.2, -48, !dbg !548    ; [#uses=1 type=i1] [debug line = 119:10]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader11.preheader, label %7, !dbg !548 ; [debug line = 119:10]

.preheader11.preheader:                           ; preds = %.preheader12
  %S.addr.10 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.11 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.12 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.13 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.14 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S.addr.15 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S.addr.16 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S.addr.17 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  br label %.preheader11, !dbg !558               ; [debug line = 130:10]

; <label>:7                                       ; preds = %.preheader12
  %tmp.352 = add i7 %i.2, -2, !dbg !559           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.353 = zext i7 %tmp.352 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.14 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.353, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load = load i64* %W.addr.14, align 8, !dbg !559 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp.354 = lshr i64 %W.load, 19, !dbg !559      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.355 = shl i64 %W.load, 45, !dbg !559       ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.356 = or i64 %tmp.355, %tmp.354, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.357 = lshr i64 %W.load, 61, !dbg !559      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.358 = shl i64 %W.load, 3, !dbg !559        ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.359 = or i64 %tmp.358, %tmp.357, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.360 = lshr i64 %W.load, 6, !dbg !559       ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp6 = xor i64 %tmp.360, %tmp.359, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.361 = xor i64 %tmp6, %tmp.356, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.362 = add i7 %i.2, -7, !dbg !559           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.363 = zext i7 %tmp.362 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.15 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.363, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load.12 = load i64* %W.addr.15, align 8, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.364 = add i7 %i.2, -15, !dbg !559          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.365 = zext i7 %tmp.364 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.16 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.365, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load.13 = load i64* %W.addr.16, align 8, !dbg !559 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp.366 = lshr i64 %W.load.13, 1, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.367 = shl i64 %W.load.13, 63, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.368 = or i64 %tmp.367, %tmp.366, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.369 = lshr i64 %W.load.13, 8, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.370 = shl i64 %W.load.13, 56, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.371 = or i64 %tmp.370, %tmp.369, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.372 = lshr i64 %W.load.13, 7, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp7 = xor i64 %tmp.372, %tmp.371, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.373 = xor i64 %tmp7, %tmp.368, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.374 = add i7 %i.2, -16, !dbg !559          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.375 = zext i7 %tmp.374 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.17 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.375, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load.14 = load i64* %W.addr.17, align 8, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp8 = add i64 %W.load.14, %W.load.12, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp9 = add i64 %tmp.373, %tmp.361, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.376 = add i64 %tmp8, %tmp9, !dbg !559      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.377 = zext i7 %i.2 to i64, !dbg !559       ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.18 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.377, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  store i64 %tmp.376, i64* %W.addr.18, align 8, !dbg !559 ; [debug line = 120:9]
  %i.12 = add i7 %i.2, 1, !dbg !561               ; [#uses=1 type=i7] [debug line = 119:26]
  call void @llvm.dbg.value(metadata !{i7 %i.12}, i64 0, metadata !547), !dbg !561 ; [debug line = 119:26] [debug variable = i]
  br label %.preheader12, !dbg !561               ; [debug line = 119:26]

.preheader11:                                     ; preds = %9, %.preheader11.preheader
  %i.3 = phi i7 [ %i.13, %9 ], [ 0, %.preheader11.preheader ] ; [#uses=10 type=i7]
  %tmp.378 = icmp ult i7 %i.3, -48, !dbg !558     ; [#uses=1 type=i1] [debug line = 130:10]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %tmp.378, label %9, label %.preheader.preheader, !dbg !558 ; [debug line = 130:10]

.preheader.preheader:                             ; preds = %.preheader11
  br label %.preheader, !dbg !562                 ; [debug line = 146:9]

; <label>:9                                       ; preds = %.preheader11
  %S.load = load i64* %S.addr.10, align 8, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %S.load.9 = load i64* %S.addr.11, align 16, !dbg !554 ; [#uses=11 type=i64] [debug line = 131:8]
  %tmp.379 = lshr i64 %S.load.9, 14, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.380 = shl i64 %S.load.9, 50, !dbg !554     ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.381 = or i64 %tmp.380, %tmp.379, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.382 = lshr i64 %S.load.9, 18, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.383 = shl i64 %S.load.9, 46, !dbg !554     ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.384 = or i64 %tmp.383, %tmp.382, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.385 = lshr i64 %S.load.9, 41, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.386 = shl i64 %S.load.9, 23, !dbg !554     ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.387 = or i64 %tmp.386, %tmp.385, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp10 = xor i64 %tmp.387, %tmp.384, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.388 = xor i64 %tmp10, %tmp.381, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %S.load.10 = load i64* %S.addr.12, align 16, !dbg !554 ; [#uses=3 type=i64] [debug line = 131:8]
  %S.load.11 = load i64* %S.addr.13, align 8, !dbg !554 ; [#uses=4 type=i64] [debug line = 131:8]
  %tmp.389 = xor i64 %S.load.11, %S.load.10, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.390 = and i64 %S.load.9, %tmp.389, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.391 = xor i64 %S.load.10, %tmp.390, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.392 = zext i7 %i.3 to i64, !dbg !554       ; [#uses=2 type=i64] [debug line = 131:8]
  %K.addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.392, !dbg !554 ; [#uses=1 type=i64*] [debug line = 131:8]
  %K.load = load i64* %K.addr, align 16, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %W.addr.19 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.392, !dbg !554 ; [#uses=1 type=i64*] [debug line = 131:8]
  %W.load.15 = load i64* %W.addr.19, align 16, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp13 = add i64 %S.load, %K.load, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp15 = add i64 %tmp.391, %tmp.388, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp14 = add i64 %W.load.15, %tmp15, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %t0 = add i64 %tmp13, %tmp14, !dbg !554         ; [#uses=2 type=i64] [debug line = 131:8]
  call void @llvm.dbg.value(metadata !{i64 %t0}, i64 0, metadata !564), !dbg !554 ; [debug line = 131:8] [debug variable = t0]
  %S.load.12 = load i64* %S.addr.14, align 16, !dbg !557 ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp.393 = lshr i64 %S.load.12, 28, !dbg !557   ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.394 = shl i64 %S.load.12, 36, !dbg !557    ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.395 = or i64 %tmp.394, %tmp.393, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.396 = lshr i64 %S.load.12, 34, !dbg !557   ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.397 = shl i64 %S.load.12, 30, !dbg !557    ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.398 = or i64 %tmp.397, %tmp.396, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.399 = lshr i64 %S.load.12, 39, !dbg !557   ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.400 = shl i64 %S.load.12, 25, !dbg !557    ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.401 = or i64 %tmp.400, %tmp.399, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp16 = xor i64 %tmp.401, %tmp.398, !dbg !557  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.402 = xor i64 %tmp16, %tmp.395, !dbg !557  ; [#uses=1 type=i64] [debug line = 131:0]
  %S.load.13 = load i64* %S.addr.15, align 8, !dbg !557 ; [#uses=4 type=i64] [debug line = 131:0]
  %tmp.403 = or i64 %S.load.13, %S.load.12, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %S.load.14 = load i64* %S.addr.16, align 16, !dbg !557 ; [#uses=2 type=i64] [debug line = 131:0]
  %tmp.404 = and i64 %S.load.14, %tmp.403, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.405 = and i64 %S.load.13, %S.load.12, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.406 = or i64 %tmp.404, %tmp.405, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %S.load.15 = load i64* %S.addr.17, align 8, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.407 = add i64 %t0, %S.load.15, !dbg !557   ; [#uses=11 type=i64] [debug line = 131:0]
  %tmp17 = add i64 %tmp.406, %tmp.402, !dbg !557  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.408 = add i64 %t0, %tmp17, !dbg !557       ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp.409 = lshr i64 %tmp.407, 14, !dbg !565     ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.410 = shl i64 %tmp.407, 50, !dbg !565      ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.411 = or i64 %tmp.410, %tmp.409, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.412 = lshr i64 %tmp.407, 18, !dbg !565     ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.413 = shl i64 %tmp.407, 46, !dbg !565      ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.414 = or i64 %tmp.413, %tmp.412, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.415 = lshr i64 %tmp.407, 41, !dbg !565     ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.416 = shl i64 %tmp.407, 23, !dbg !565      ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.417 = or i64 %tmp.416, %tmp.415, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp18 = xor i64 %tmp.417, %tmp.414, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.418 = xor i64 %tmp18, %tmp.411, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.419 = xor i64 %S.load.11, %S.load.9, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.420 = and i64 %tmp.407, %tmp.419, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.421 = xor i64 %S.load.11, %tmp.420, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.422 = or i7 %i.3, 1, !dbg !565             ; [#uses=1 type=i7] [debug line = 132:8]
  %tmp.423 = zext i7 %tmp.422 to i64, !dbg !565   ; [#uses=2 type=i64] [debug line = 132:8]
  %K.addr.8 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.423, !dbg !565 ; [#uses=1 type=i64*] [debug line = 132:8]
  %K.load.8 = load i64* %K.addr.8, align 8, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %W.addr.20 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.423, !dbg !565 ; [#uses=1 type=i64*] [debug line = 132:8]
  %W.load.16 = load i64* %W.addr.20, align 8, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp21 = add i64 %S.load.10, %K.load.8, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp23 = add i64 %tmp.418, %tmp.421, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp22 = add i64 %W.load.16, %tmp23, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %t0.8 = add i64 %tmp21, %tmp22, !dbg !565       ; [#uses=2 type=i64] [debug line = 132:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.8}, i64 0, metadata !564), !dbg !565 ; [debug line = 132:8] [debug variable = t0]
  %tmp.424 = lshr i64 %tmp.408, 28, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.425 = shl i64 %tmp.408, 36, !dbg !566      ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.426 = or i64 %tmp.425, %tmp.424, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.427 = lshr i64 %tmp.408, 34, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.428 = shl i64 %tmp.408, 30, !dbg !566      ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.429 = or i64 %tmp.428, %tmp.427, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.430 = lshr i64 %tmp.408, 39, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.431 = shl i64 %tmp.408, 25, !dbg !566      ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.432 = or i64 %tmp.431, %tmp.430, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp24 = xor i64 %tmp.432, %tmp.429, !dbg !566  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.433 = xor i64 %tmp24, %tmp.426, !dbg !566  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.434 = or i64 %S.load.12, %tmp.408, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.435 = and i64 %S.load.13, %tmp.434, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.436 = and i64 %S.load.12, %tmp.408, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.437 = or i64 %tmp.435, %tmp.436, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.438 = add i64 %t0.8, %S.load.14, !dbg !566 ; [#uses=11 type=i64] [debug line = 132:0]
  %tmp25 = add i64 %t0.8, %tmp.433, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.439 = add i64 %tmp.437, %tmp25, !dbg !566  ; [#uses=12 type=i64] [debug line = 132:0]
  %tmp.440 = lshr i64 %tmp.438, 14, !dbg !567     ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.441 = shl i64 %tmp.438, 50, !dbg !567      ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.442 = or i64 %tmp.441, %tmp.440, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.443 = lshr i64 %tmp.438, 18, !dbg !567     ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.444 = shl i64 %tmp.438, 46, !dbg !567      ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.445 = or i64 %tmp.444, %tmp.443, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.446 = lshr i64 %tmp.438, 41, !dbg !567     ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.447 = shl i64 %tmp.438, 23, !dbg !567      ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.448 = or i64 %tmp.447, %tmp.446, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp26 = xor i64 %tmp.448, %tmp.445, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.449 = xor i64 %tmp26, %tmp.442, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.450 = xor i64 %S.load.9, %tmp.407, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.451 = and i64 %tmp.438, %tmp.450, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.452 = xor i64 %S.load.9, %tmp.451, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.453 = or i7 %i.3, 2, !dbg !567             ; [#uses=1 type=i7] [debug line = 133:8]
  %tmp.454 = zext i7 %tmp.453 to i64, !dbg !567   ; [#uses=2 type=i64] [debug line = 133:8]
  %K.addr.9 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.454, !dbg !567 ; [#uses=1 type=i64*] [debug line = 133:8]
  %K.load.9 = load i64* %K.addr.9, align 16, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %W.addr.21 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.454, !dbg !567 ; [#uses=1 type=i64*] [debug line = 133:8]
  %W.load.17 = load i64* %W.addr.21, align 16, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp29 = add i64 %S.load.11, %K.load.9, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp31 = add i64 %tmp.449, %tmp.452, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp30 = add i64 %W.load.17, %tmp31, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %t0.9 = add i64 %tmp29, %tmp30, !dbg !567       ; [#uses=2 type=i64] [debug line = 133:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.9}, i64 0, metadata !564), !dbg !567 ; [debug line = 133:8] [debug variable = t0]
  %tmp.455 = lshr i64 %tmp.439, 28, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.456 = shl i64 %tmp.439, 36, !dbg !568      ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.457 = or i64 %tmp.456, %tmp.455, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.458 = lshr i64 %tmp.439, 34, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.459 = shl i64 %tmp.439, 30, !dbg !568      ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.460 = or i64 %tmp.459, %tmp.458, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.461 = lshr i64 %tmp.439, 39, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.462 = shl i64 %tmp.439, 25, !dbg !568      ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.463 = or i64 %tmp.462, %tmp.461, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp32 = xor i64 %tmp.463, %tmp.460, !dbg !568  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.464 = xor i64 %tmp32, %tmp.457, !dbg !568  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.465 = or i64 %tmp.439, %tmp.408, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.466 = and i64 %S.load.12, %tmp.465, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.467 = and i64 %tmp.439, %tmp.408, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.468 = or i64 %tmp.466, %tmp.467, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.469 = add i64 %t0.9, %S.load.13, !dbg !568 ; [#uses=11 type=i64] [debug line = 133:0]
  %tmp33 = add i64 %t0.9, %tmp.464, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.470 = add i64 %tmp.468, %tmp33, !dbg !568  ; [#uses=12 type=i64] [debug line = 133:0]
  %tmp.471 = lshr i64 %tmp.469, 14, !dbg !569     ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.472 = shl i64 %tmp.469, 50, !dbg !569      ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.473 = or i64 %tmp.472, %tmp.471, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.474 = lshr i64 %tmp.469, 18, !dbg !569     ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.475 = shl i64 %tmp.469, 46, !dbg !569      ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.476 = or i64 %tmp.475, %tmp.474, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.477 = lshr i64 %tmp.469, 41, !dbg !569     ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.478 = shl i64 %tmp.469, 23, !dbg !569      ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.479 = or i64 %tmp.478, %tmp.477, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp34 = xor i64 %tmp.479, %tmp.476, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.480 = xor i64 %tmp34, %tmp.473, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.481 = xor i64 %tmp.438, %tmp.407, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.482 = and i64 %tmp.469, %tmp.481, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.483 = xor i64 %tmp.482, %tmp.407, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.484 = or i7 %i.3, 3, !dbg !569             ; [#uses=1 type=i7] [debug line = 134:8]
  %tmp.485 = zext i7 %tmp.484 to i64, !dbg !569   ; [#uses=2 type=i64] [debug line = 134:8]
  %K.addr.10 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.485, !dbg !569 ; [#uses=1 type=i64*] [debug line = 134:8]
  %K.load.10 = load i64* %K.addr.10, align 8, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %W.addr.22 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.485, !dbg !569 ; [#uses=1 type=i64*] [debug line = 134:8]
  %W.load.18 = load i64* %W.addr.22, align 8, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp37 = add i64 %S.load.9, %K.load.10, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp39 = add i64 %tmp.480, %tmp.483, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp38 = add i64 %W.load.18, %tmp39, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %t0.10 = add i64 %tmp37, %tmp38, !dbg !569      ; [#uses=2 type=i64] [debug line = 134:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.10}, i64 0, metadata !564), !dbg !569 ; [debug line = 134:8] [debug variable = t0]
  %tmp.486 = lshr i64 %tmp.470, 28, !dbg !570     ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.487 = shl i64 %tmp.470, 36, !dbg !570      ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.488 = or i64 %tmp.487, %tmp.486, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.489 = lshr i64 %tmp.470, 34, !dbg !570     ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.490 = shl i64 %tmp.470, 30, !dbg !570      ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.491 = or i64 %tmp.490, %tmp.489, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.492 = lshr i64 %tmp.470, 39, !dbg !570     ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.493 = shl i64 %tmp.470, 25, !dbg !570      ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.494 = or i64 %tmp.493, %tmp.492, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp40 = xor i64 %tmp.494, %tmp.491, !dbg !570  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.495 = xor i64 %tmp40, %tmp.488, !dbg !570  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.496 = or i64 %tmp.470, %tmp.439, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.497 = and i64 %tmp.496, %tmp.408, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.498 = and i64 %tmp.470, %tmp.439, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.499 = or i64 %tmp.497, %tmp.498, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.500 = add i64 %t0.10, %S.load.12, !dbg !570 ; [#uses=11 type=i64] [debug line = 134:0]
  %tmp41 = add i64 %t0.10, %tmp.495, !dbg !570    ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.501 = add i64 %tmp.499, %tmp41, !dbg !570  ; [#uses=12 type=i64] [debug line = 134:0]
  %tmp.502 = lshr i64 %tmp.500, 14, !dbg !571     ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.503 = shl i64 %tmp.500, 50, !dbg !571      ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.504 = or i64 %tmp.503, %tmp.502, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.505 = lshr i64 %tmp.500, 18, !dbg !571     ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.506 = shl i64 %tmp.500, 46, !dbg !571      ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.507 = or i64 %tmp.506, %tmp.505, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.508 = lshr i64 %tmp.500, 41, !dbg !571     ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.509 = shl i64 %tmp.500, 23, !dbg !571      ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.510 = or i64 %tmp.509, %tmp.508, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp42 = xor i64 %tmp.510, %tmp.507, !dbg !571  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.511 = xor i64 %tmp42, %tmp.504, !dbg !571  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.512 = xor i64 %tmp.469, %tmp.438, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.513 = and i64 %tmp.500, %tmp.512, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.514 = xor i64 %tmp.513, %tmp.438, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.515 = or i7 %i.3, 4, !dbg !571             ; [#uses=1 type=i7] [debug line = 135:8]
  %tmp.516 = zext i7 %tmp.515 to i64, !dbg !571   ; [#uses=2 type=i64] [debug line = 135:8]
  %K.addr.11 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.516, !dbg !571 ; [#uses=1 type=i64*] [debug line = 135:8]
  %K.load.11 = load i64* %K.addr.11, align 16, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %W.addr.23 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.516, !dbg !571 ; [#uses=1 type=i64*] [debug line = 135:8]
  %W.load.19 = load i64* %W.addr.23, align 16, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp45 = add i64 %W.load.19, %K.load.11, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp47 = add i64 %tmp.407, %tmp.511, !dbg !571  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp46 = add i64 %tmp.514, %tmp47, !dbg !571    ; [#uses=1 type=i64] [debug line = 135:8]
  %t0.11 = add i64 %tmp45, %tmp46, !dbg !571      ; [#uses=2 type=i64] [debug line = 135:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.11}, i64 0, metadata !564), !dbg !571 ; [debug line = 135:8] [debug variable = t0]
  %tmp.517 = lshr i64 %tmp.501, 28, !dbg !572     ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.518 = shl i64 %tmp.501, 36, !dbg !572      ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.519 = or i64 %tmp.518, %tmp.517, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.520 = lshr i64 %tmp.501, 34, !dbg !572     ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.521 = shl i64 %tmp.501, 30, !dbg !572      ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.522 = or i64 %tmp.521, %tmp.520, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.523 = lshr i64 %tmp.501, 39, !dbg !572     ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.524 = shl i64 %tmp.501, 25, !dbg !572      ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.525 = or i64 %tmp.524, %tmp.523, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp48 = xor i64 %tmp.525, %tmp.522, !dbg !572  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.526 = xor i64 %tmp48, %tmp.519, !dbg !572  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.527 = or i64 %tmp.501, %tmp.470, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.528 = and i64 %tmp.527, %tmp.439, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.529 = and i64 %tmp.501, %tmp.470, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.530 = or i64 %tmp.528, %tmp.529, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.531 = add i64 %t0.11, %tmp.408, !dbg !572  ; [#uses=11 type=i64] [debug line = 135:0]
  store i64 %tmp.531, i64* %S.addr.10, align 8, !dbg !572 ; [debug line = 135:0]
  %tmp49 = add i64 %t0.11, %tmp.526, !dbg !572    ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.532 = add i64 %tmp.530, %tmp49, !dbg !572  ; [#uses=12 type=i64] [debug line = 135:0]
  store i64 %tmp.532, i64* %S.addr.17, align 8, !dbg !572 ; [debug line = 135:0]
  %tmp.533 = lshr i64 %tmp.531, 14, !dbg !573     ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.534 = shl i64 %tmp.531, 50, !dbg !573      ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.535 = or i64 %tmp.534, %tmp.533, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.536 = lshr i64 %tmp.531, 18, !dbg !573     ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.537 = shl i64 %tmp.531, 46, !dbg !573      ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.538 = or i64 %tmp.537, %tmp.536, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.539 = lshr i64 %tmp.531, 41, !dbg !573     ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.540 = shl i64 %tmp.531, 23, !dbg !573      ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.541 = or i64 %tmp.540, %tmp.539, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp50 = xor i64 %tmp.541, %tmp.538, !dbg !573  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.542 = xor i64 %tmp50, %tmp.535, !dbg !573  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.543 = xor i64 %tmp.500, %tmp.469, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.544 = and i64 %tmp.531, %tmp.543, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.545 = xor i64 %tmp.544, %tmp.469, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.546 = or i7 %i.3, 5, !dbg !573             ; [#uses=1 type=i7] [debug line = 136:8]
  %tmp.547 = zext i7 %tmp.546 to i64, !dbg !573   ; [#uses=2 type=i64] [debug line = 136:8]
  %K.addr.12 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.547, !dbg !573 ; [#uses=1 type=i64*] [debug line = 136:8]
  %K.load.12 = load i64* %K.addr.12, align 8, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %W.addr.24 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.547, !dbg !573 ; [#uses=1 type=i64*] [debug line = 136:8]
  %W.load.20 = load i64* %W.addr.24, align 8, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp53 = add i64 %W.load.20, %K.load.12, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp55 = add i64 %tmp.438, %tmp.542, !dbg !573  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp54 = add i64 %tmp.545, %tmp55, !dbg !573    ; [#uses=1 type=i64] [debug line = 136:8]
  %t0.12 = add i64 %tmp53, %tmp54, !dbg !573      ; [#uses=2 type=i64] [debug line = 136:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.12}, i64 0, metadata !564), !dbg !573 ; [debug line = 136:8] [debug variable = t0]
  %tmp.548 = lshr i64 %tmp.532, 28, !dbg !574     ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.549 = shl i64 %tmp.532, 36, !dbg !574      ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.550 = or i64 %tmp.549, %tmp.548, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.551 = lshr i64 %tmp.532, 34, !dbg !574     ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.552 = shl i64 %tmp.532, 30, !dbg !574      ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.553 = or i64 %tmp.552, %tmp.551, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.554 = lshr i64 %tmp.532, 39, !dbg !574     ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.555 = shl i64 %tmp.532, 25, !dbg !574      ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.556 = or i64 %tmp.555, %tmp.554, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp56 = xor i64 %tmp.556, %tmp.553, !dbg !574  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.557 = xor i64 %tmp56, %tmp.550, !dbg !574  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.558 = or i64 %tmp.532, %tmp.501, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.559 = and i64 %tmp.558, %tmp.470, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.560 = and i64 %tmp.532, %tmp.501, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.561 = or i64 %tmp.559, %tmp.560, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.562 = add i64 %t0.12, %tmp.439, !dbg !574  ; [#uses=9 type=i64] [debug line = 136:0]
  store i64 %tmp.562, i64* %S.addr.12, align 16, !dbg !574 ; [debug line = 136:0]
  %tmp57 = add i64 %t0.12, %tmp.557, !dbg !574    ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.563 = add i64 %tmp.561, %tmp57, !dbg !574  ; [#uses=11 type=i64] [debug line = 136:0]
  store i64 %tmp.563, i64* %S.addr.16, align 16, !dbg !574 ; [debug line = 136:0]
  %tmp.564 = lshr i64 %tmp.562, 14, !dbg !575     ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.565 = shl i64 %tmp.562, 50, !dbg !575      ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.566 = or i64 %tmp.565, %tmp.564, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.567 = lshr i64 %tmp.562, 18, !dbg !575     ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.568 = shl i64 %tmp.562, 46, !dbg !575      ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.569 = or i64 %tmp.568, %tmp.567, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.570 = lshr i64 %tmp.562, 41, !dbg !575     ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.571 = shl i64 %tmp.562, 23, !dbg !575      ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.572 = or i64 %tmp.571, %tmp.570, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp58 = xor i64 %tmp.572, %tmp.569, !dbg !575  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.573 = xor i64 %tmp58, %tmp.566, !dbg !575  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.574 = xor i64 %tmp.531, %tmp.500, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.575 = and i64 %tmp.562, %tmp.574, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.576 = xor i64 %tmp.575, %tmp.500, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.577 = or i7 %i.3, 6, !dbg !575             ; [#uses=1 type=i7] [debug line = 137:8]
  %tmp.578 = zext i7 %tmp.577 to i64, !dbg !575   ; [#uses=2 type=i64] [debug line = 137:8]
  %K.addr.13 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.578, !dbg !575 ; [#uses=1 type=i64*] [debug line = 137:8]
  %K.load.13 = load i64* %K.addr.13, align 16, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %W.addr.25 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.578, !dbg !575 ; [#uses=1 type=i64*] [debug line = 137:8]
  %W.load.21 = load i64* %W.addr.25, align 16, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp61 = add i64 %W.load.21, %K.load.13, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp63 = add i64 %tmp.469, %tmp.573, !dbg !575  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp62 = add i64 %tmp.576, %tmp63, !dbg !575    ; [#uses=1 type=i64] [debug line = 137:8]
  %t0.13 = add i64 %tmp61, %tmp62, !dbg !575      ; [#uses=2 type=i64] [debug line = 137:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.13}, i64 0, metadata !564), !dbg !575 ; [debug line = 137:8] [debug variable = t0]
  %tmp.579 = lshr i64 %tmp.563, 28, !dbg !576     ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.580 = shl i64 %tmp.563, 36, !dbg !576      ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.581 = or i64 %tmp.580, %tmp.579, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.582 = lshr i64 %tmp.563, 34, !dbg !576     ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.583 = shl i64 %tmp.563, 30, !dbg !576      ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.584 = or i64 %tmp.583, %tmp.582, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.585 = lshr i64 %tmp.563, 39, !dbg !576     ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.586 = shl i64 %tmp.563, 25, !dbg !576      ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.587 = or i64 %tmp.586, %tmp.585, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp64 = xor i64 %tmp.587, %tmp.584, !dbg !576  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.588 = xor i64 %tmp64, %tmp.581, !dbg !576  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.589 = or i64 %tmp.563, %tmp.532, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.590 = and i64 %tmp.589, %tmp.501, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.591 = and i64 %tmp.563, %tmp.532, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.592 = or i64 %tmp.590, %tmp.591, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.593 = add i64 %t0.13, %tmp.470, !dbg !576  ; [#uses=8 type=i64] [debug line = 137:0]
  store i64 %tmp.593, i64* %S.addr.13, align 8, !dbg !576 ; [debug line = 137:0]
  %tmp65 = add i64 %t0.13, %tmp.588, !dbg !576    ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.594 = add i64 %tmp.592, %tmp65, !dbg !576  ; [#uses=9 type=i64] [debug line = 137:0]
  store i64 %tmp.594, i64* %S.addr.15, align 8, !dbg !576 ; [debug line = 137:0]
  %tmp.595 = lshr i64 %tmp.593, 14, !dbg !577     ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.596 = shl i64 %tmp.593, 50, !dbg !577      ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.597 = or i64 %tmp.596, %tmp.595, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.598 = lshr i64 %tmp.593, 18, !dbg !577     ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.599 = shl i64 %tmp.593, 46, !dbg !577      ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.600 = or i64 %tmp.599, %tmp.598, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.601 = lshr i64 %tmp.593, 41, !dbg !577     ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.602 = shl i64 %tmp.593, 23, !dbg !577      ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.603 = or i64 %tmp.602, %tmp.601, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp66 = xor i64 %tmp.603, %tmp.600, !dbg !577  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.604 = xor i64 %tmp66, %tmp.597, !dbg !577  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.605 = xor i64 %tmp.562, %tmp.531, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.606 = and i64 %tmp.593, %tmp.605, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.607 = xor i64 %tmp.606, %tmp.531, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.608 = or i7 %i.3, 7, !dbg !577             ; [#uses=1 type=i7] [debug line = 138:8]
  %tmp.609 = zext i7 %tmp.608 to i64, !dbg !577   ; [#uses=2 type=i64] [debug line = 138:8]
  %K.addr.14 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.609, !dbg !577 ; [#uses=1 type=i64*] [debug line = 138:8]
  %K.load.14 = load i64* %K.addr.14, align 8, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %W.addr.26 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.609, !dbg !577 ; [#uses=1 type=i64*] [debug line = 138:8]
  %W.load.22 = load i64* %W.addr.26, align 8, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp67 = add i64 %W.load.22, %K.load.14, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp68 = add i64 %tmp.500, %tmp.604, !dbg !577  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp69 = add i64 %tmp.607, %tmp68, !dbg !577    ; [#uses=1 type=i64] [debug line = 138:8]
  %t0.14 = add i64 %tmp67, %tmp69, !dbg !577      ; [#uses=2 type=i64] [debug line = 138:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.14}, i64 0, metadata !564), !dbg !577 ; [debug line = 138:8] [debug variable = t0]
  %tmp.610 = lshr i64 %tmp.594, 28, !dbg !578     ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.611 = shl i64 %tmp.594, 36, !dbg !578      ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.612 = or i64 %tmp.611, %tmp.610, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.613 = lshr i64 %tmp.594, 34, !dbg !578     ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.614 = shl i64 %tmp.594, 30, !dbg !578      ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.615 = or i64 %tmp.614, %tmp.613, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.616 = lshr i64 %tmp.594, 39, !dbg !578     ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.617 = shl i64 %tmp.594, 25, !dbg !578      ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.618 = or i64 %tmp.617, %tmp.616, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp70 = xor i64 %tmp.618, %tmp.615, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.619 = xor i64 %tmp70, %tmp.612, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.620 = or i64 %tmp.594, %tmp.563, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.621 = and i64 %tmp.620, %tmp.532, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.622 = and i64 %tmp.594, %tmp.563, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.623 = or i64 %tmp.621, %tmp.622, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.624 = add i64 %t0.14, %tmp.501, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp.624, i64* %S.addr.11, align 16, !dbg !578 ; [debug line = 138:0]
  %tmp71 = add i64 %t0.14, %tmp.619, !dbg !578    ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.625 = add i64 %tmp.623, %tmp71, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp.625, i64* %S.addr.14, align 16, !dbg !578 ; [debug line = 138:0]
  %i.13 = add i7 %i.3, 8, !dbg !579               ; [#uses=1 type=i7] [debug line = 130:25]
  call void @llvm.dbg.value(metadata !{i7 %i.13}, i64 0, metadata !547), !dbg !579 ; [debug line = 130:25] [debug variable = i]
  br label %.preheader11, !dbg !579               ; [debug line = 130:25]

.preheader:                                       ; preds = %11, %.preheader.preheader
  %i.4 = phi i4 [ %i.14, %11 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i4]
  %exitcond = icmp eq i4 %i.4, -8, !dbg !562      ; [#uses=1 type=i1] [debug line = 146:9]
  %10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond, label %12, label %11, !dbg !562 ; [debug line = 146:9]

; <label>:11                                      ; preds = %.preheader
  %tmp.626 = zext i4 %i.4 to i64, !dbg !580       ; [#uses=2 type=i64] [debug line = 147:9]
  %md.state.addr.9 = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp.626, !dbg !580 ; [#uses=2 type=i64*] [debug line = 147:9]
  %md.state.load.2 = load i64* %md.state.addr.9, align 8, !dbg !580 ; [#uses=1 type=i64] [debug line = 147:9]
  %S.addr.18 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp.626, !dbg !580 ; [#uses=1 type=i64*] [debug line = 147:9]
  %S.load.16 = load i64* %S.addr.18, align 8, !dbg !580 ; [#uses=1 type=i64] [debug line = 147:9]
  %tmp.627 = add i64 %S.load.16, %md.state.load.2, !dbg !580 ; [#uses=1 type=i64] [debug line = 147:9]
  store i64 %tmp.627, i64* %md.state.addr.9, align 8, !dbg !580 ; [debug line = 147:9]
  %i.14 = add i4 %i.4, 1, !dbg !582               ; [#uses=1 type=i4] [debug line = 146:23]
  call void @llvm.dbg.value(metadata !{i4 %i.14}, i64 0, metadata !547), !dbg !582 ; [debug line = 146:23] [debug variable = i]
  br label %.preheader, !dbg !582                 ; [debug line = 146:23]

; <label>:12                                      ; preds = %.preheader
  ret void
}

; [#uses=5]
define internal fastcc void @sha512_compress_128([8 x i64]* nocapture %md.state, [128 x i8]* nocapture %buf) {
  %S = alloca [8 x i64], align 16                 ; [#uses=10 type=[8 x i64]*]
  %W = alloca [80 x i64], align 16                ; [#uses=14 type=[80 x i64]*]
  call void @llvm.dbg.value(metadata !{[8 x i64]* %md.state}, i64 0, metadata !524), !dbg !527 ; [debug line = 96:48] [debug variable = md.state]
  call void @llvm.dbg.value(metadata !{[128 x i8]* %buf}, i64 0, metadata !583), !dbg !584 ; [debug line = 96:66] [debug variable = buf]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str8, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !528 ; [debug line = 98:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str210, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !530 ; [debug line = 99:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str311, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !531 ; [debug line = 100:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str412, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !532 ; [debug line = 101:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str513, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !533 ; [debug line = 102:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [5 x i8]* @.str614, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !534 ; [debug line = 103:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [4 x i8]* @.str715, [1 x i8]* @.str19, [1 x i8]* @.str19, [1 x i8]* @.str19) nounwind, !dbg !535 ; [debug line = 104:1]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %S}, metadata !536), !dbg !537 ; [debug line = 105:11] [debug variable = S]
  call void @llvm.dbg.declare(metadata !{[80 x i64]* %W}, metadata !538), !dbg !539 ; [debug line = 105:17] [debug variable = W]
  br label %1, !dbg !540                          ; [debug line = 109:10]

; <label>:1                                       ; preds = %3, %0
  %i = phi i4 [ 0, %0 ], [ %i.15, %3 ]            ; [#uses=3 type=i4]
  %exitcond4 = icmp eq i4 %i, -8, !dbg !540       ; [#uses=1 type=i1] [debug line = 109:10]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond4, label %.preheader13.preheader, label %3, !dbg !540 ; [debug line = 109:10]

.preheader13.preheader:                           ; preds = %1
  br label %.preheader13, !dbg !542               ; [debug line = 114:10]

; <label>:3                                       ; preds = %1
  %tmp = zext i4 %i to i64, !dbg !544             ; [#uses=2 type=i64] [debug line = 110:9]
  %md.state.addr = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp, !dbg !544 ; [#uses=1 type=i64*] [debug line = 110:9]
  %md.state.load = load i64* %md.state.addr, align 8, !dbg !544 ; [#uses=1 type=i64] [debug line = 110:9]
  %S.addr = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp, !dbg !544 ; [#uses=1 type=i64*] [debug line = 110:9]
  store i64 %md.state.load, i64* %S.addr, align 8, !dbg !544 ; [debug line = 110:9]
  %i.15 = add i4 %i, 1, !dbg !546                 ; [#uses=1 type=i4] [debug line = 109:24]
  call void @llvm.dbg.value(metadata !{i4 %i.15}, i64 0, metadata !547), !dbg !546 ; [debug line = 109:24] [debug variable = i]
  br label %1, !dbg !546                          ; [debug line = 109:24]

.preheader13:                                     ; preds = %5, %.preheader13.preheader
  %i.1 = phi i5 [ %i.16, %5 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i5]
  %i.1.cast = zext i5 %i.1 to i7, !dbg !542       ; [#uses=1 type=i7] [debug line = 114:10]
  %exitcond9 = icmp eq i5 %i.1, -16, !dbg !542    ; [#uses=1 type=i1] [debug line = 114:10]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) ; [#uses=0 type=i32]
  br i1 %exitcond9, label %.preheader12.preheader, label %5, !dbg !542 ; [debug line = 114:10]

.preheader12.preheader:                           ; preds = %.preheader13
  br label %.preheader12, !dbg !548               ; [debug line = 119:10]

; <label>:5                                       ; preds = %.preheader13
  %tmp. = shl i7 %i.1.cast, 3, !dbg !550          ; [#uses=8 type=i7] [debug line = 115:11]
  %tmp.411 = zext i7 %tmp. to i64, !dbg !550      ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr = getelementptr [128 x i8]* %buf, i64 0, i64 %tmp.411, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load = load i8* %buf.addr, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %.sum1 = or i7 %tmp., 1, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum1.cast = zext i7 %.sum1 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.15 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum1.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.8 = load i8* %buf.addr.15, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.414.cast = zext i8 %buf.load.8 to i56, !dbg !550 ; [#uses=1 type=i56] [debug line = 115:11]
  %tmp.415 = shl nuw i56 %tmp.414.cast, 48, !dbg !550 ; [#uses=1 type=i56] [debug line = 115:11]
  %.sum2 = or i7 %tmp., 2, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum2.cast = zext i7 %.sum2 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.16 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum2.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.9 = load i8* %buf.addr.16, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.416.cast = zext i8 %buf.load.9 to i48, !dbg !550 ; [#uses=1 type=i48] [debug line = 115:11]
  %tmp.417 = shl nuw i48 %tmp.416.cast, 40, !dbg !550 ; [#uses=1 type=i48] [debug line = 115:11]
  %.sum3 = or i7 %tmp., 3, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum3.cast = zext i7 %.sum3 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.17 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum3.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.10 = load i8* %buf.addr.17, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %.sum4 = or i7 %tmp., 4, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum4.cast = zext i7 %.sum4 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.18 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum4.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.11 = load i8* %buf.addr.18, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.420.cast = zext i8 %buf.load.11 to i32, !dbg !550 ; [#uses=1 type=i32] [debug line = 115:11]
  %tmp.421 = shl nuw i32 %tmp.420.cast, 24, !dbg !550 ; [#uses=1 type=i32] [debug line = 115:11]
  %.sum5 = or i7 %tmp., 5, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum5.cast = zext i7 %.sum5 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.19 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum5.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.12 = load i8* %buf.addr.19, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %.sum6 = or i7 %tmp., 6, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum6.cast = zext i7 %.sum6 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.20 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum6.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.13 = load i8* %buf.addr.20, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.424.cast = zext i8 %buf.load.13 to i16, !dbg !550 ; [#uses=1 type=i16] [debug line = 115:11]
  %tmp.425 = shl nuw i16 %tmp.424.cast, 8, !dbg !550 ; [#uses=1 type=i16] [debug line = 115:11]
  %.sum7 = or i7 %tmp., 7, !dbg !550              ; [#uses=1 type=i7] [debug line = 115:11]
  %.sum7.cast = zext i7 %.sum7 to i64, !dbg !550  ; [#uses=1 type=i64] [debug line = 115:11]
  %buf.addr.21 = getelementptr [128 x i8]* %buf, i64 0, i64 %.sum7.cast, !dbg !550 ; [#uses=1 type=i8*] [debug line = 115:11]
  %buf.load.14 = load i8* %buf.addr.21, align 1, !dbg !550 ; [#uses=1 type=i8] [debug line = 115:11]
  %tmp.72 = call i56 @_ssdm_op_BitConcatenate.i56.i8.i48(i8 0, i48 %tmp.417) ; [#uses=1 type=i56]
  %tmp.73 = or i56 %tmp.72, %tmp.415              ; [#uses=1 type=i56]
  %tmp5 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %buf.load.12, i16 %tmp.425), !dbg !550 ; [#uses=1 type=i24] [debug line = 115:11]
  %tmp.74 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp.421, i32 24, i32 31) ; [#uses=1 type=i8]
  %tmp3 = call i40 @_ssdm_op_BitConcatenate.i40.i8.i8.i24(i8 %buf.load.10, i8 %tmp.74, i24 %tmp5), !dbg !550 ; [#uses=1 type=i40] [debug line = 115:11]
  %tmp.75 = call i16 @_ssdm_op_PartSelect.i16.i56.i32.i32(i56 %tmp.73, i32 40, i32 55) ; [#uses=1 type=i16]
  %tmp.76 = call i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40 %tmp3, i32 8, i32 39) ; [#uses=1 type=i32]
  %tmp.433 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i16.i32.i8(i8 %buf.load, i16 %tmp.75, i32 %tmp.76, i8 %buf.load.14), !dbg !550 ; [#uses=1 type=i64] [debug line = 115:11]
  %tmp.434 = zext i5 %i.1 to i64, !dbg !550       ; [#uses=1 type=i64] [debug line = 115:11]
  %W.addr = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.434, !dbg !550 ; [#uses=1 type=i64*] [debug line = 115:11]
  store i64 %tmp.433, i64* %W.addr, align 8, !dbg !550 ; [debug line = 115:11]
  %i.16 = add i5 %i.1, 1, !dbg !553               ; [#uses=1 type=i5] [debug line = 114:25]
  call void @llvm.dbg.value(metadata !{i5 %i.16}, i64 0, metadata !547), !dbg !553 ; [debug line = 114:25] [debug variable = i]
  br label %.preheader13, !dbg !553               ; [debug line = 114:25]

.preheader12:                                     ; preds = %7, %.preheader12.preheader
  %i.2 = phi i7 [ %i.17, %7 ], [ 16, %.preheader12.preheader ] ; [#uses=7 type=i7]
  %exitcond8 = icmp eq i7 %i.2, -48, !dbg !548    ; [#uses=1 type=i1] [debug line = 119:10]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader11.preheader, label %7, !dbg !548 ; [debug line = 119:10]

.preheader11.preheader:                           ; preds = %.preheader12
  %S.addr.10 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 7, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.11 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 4, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.12 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 6, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.13 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 5, !dbg !554 ; [#uses=2 type=i64*] [debug line = 131:8]
  %S.addr.14 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 0, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S.addr.15 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 1, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S.addr.16 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 2, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  %S.addr.17 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 3, !dbg !557 ; [#uses=2 type=i64*] [debug line = 131:0]
  br label %.preheader11, !dbg !558               ; [debug line = 130:10]

; <label>:7                                       ; preds = %.preheader12
  %tmp.435 = add i7 %i.2, -2, !dbg !559           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.436 = zext i7 %tmp.435 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.14 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.436, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load = load i64* %W.addr.14, align 8, !dbg !559 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp.437 = lshr i64 %W.load, 19, !dbg !559      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.438 = shl i64 %W.load, 45, !dbg !559       ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.439 = or i64 %tmp.438, %tmp.437, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.440 = lshr i64 %W.load, 61, !dbg !559      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.441 = shl i64 %W.load, 3, !dbg !559        ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.442 = or i64 %tmp.441, %tmp.440, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.443 = lshr i64 %W.load, 6, !dbg !559       ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp6 = xor i64 %tmp.443, %tmp.442, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.445 = xor i64 %tmp6, %tmp.439, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.446 = add i7 %i.2, -7, !dbg !559           ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.447 = zext i7 %tmp.446 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.15 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.447, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load.12 = load i64* %W.addr.15, align 8, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.448 = add i7 %i.2, -15, !dbg !559          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.449 = zext i7 %tmp.448 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.16 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.449, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load.13 = load i64* %W.addr.16, align 8, !dbg !559 ; [#uses=5 type=i64] [debug line = 120:9]
  %tmp.450 = lshr i64 %W.load.13, 1, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.451 = shl i64 %W.load.13, 63, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.452 = or i64 %tmp.451, %tmp.450, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.453 = lshr i64 %W.load.13, 8, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.454 = shl i64 %W.load.13, 56, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.455 = or i64 %tmp.454, %tmp.453, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.456 = lshr i64 %W.load.13, 7, !dbg !559    ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp7 = xor i64 %tmp.456, %tmp.455, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.458 = xor i64 %tmp7, %tmp.452, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.459 = add i7 %i.2, -16, !dbg !559          ; [#uses=1 type=i7] [debug line = 120:9]
  %tmp.460 = zext i7 %tmp.459 to i64, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.17 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.460, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  %W.load.14 = load i64* %W.addr.17, align 8, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp8 = add i64 %W.load.14, %W.load.12, !dbg !559 ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp9 = add i64 %tmp.458, %tmp.445, !dbg !559   ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.463 = add i64 %tmp8, %tmp9, !dbg !559      ; [#uses=1 type=i64] [debug line = 120:9]
  %tmp.464 = zext i7 %i.2 to i64, !dbg !559       ; [#uses=1 type=i64] [debug line = 120:9]
  %W.addr.18 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.464, !dbg !559 ; [#uses=1 type=i64*] [debug line = 120:9]
  store i64 %tmp.463, i64* %W.addr.18, align 8, !dbg !559 ; [debug line = 120:9]
  %i.17 = add i7 %i.2, 1, !dbg !561               ; [#uses=1 type=i7] [debug line = 119:26]
  call void @llvm.dbg.value(metadata !{i7 %i.17}, i64 0, metadata !547), !dbg !561 ; [debug line = 119:26] [debug variable = i]
  br label %.preheader12, !dbg !561               ; [debug line = 119:26]

.preheader11:                                     ; preds = %9, %.preheader11.preheader
  %i.3 = phi i7 [ %i.18, %9 ], [ 0, %.preheader11.preheader ] ; [#uses=10 type=i7]
  %tmp.465 = icmp ult i7 %i.3, -48, !dbg !558     ; [#uses=1 type=i1] [debug line = 130:10]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %tmp.465, label %9, label %.preheader.preheader, !dbg !558 ; [debug line = 130:10]

.preheader.preheader:                             ; preds = %.preheader11
  br label %.preheader, !dbg !562                 ; [debug line = 146:9]

; <label>:9                                       ; preds = %.preheader11
  %S.load = load i64* %S.addr.10, align 8, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %S.load.9 = load i64* %S.addr.11, align 16, !dbg !554 ; [#uses=11 type=i64] [debug line = 131:8]
  %tmp.466 = lshr i64 %S.load.9, 14, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.467 = shl i64 %S.load.9, 50, !dbg !554     ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.468 = or i64 %tmp.467, %tmp.466, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.469 = lshr i64 %S.load.9, 18, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.470 = shl i64 %S.load.9, 46, !dbg !554     ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.471 = or i64 %tmp.470, %tmp.469, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.472 = lshr i64 %S.load.9, 41, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.473 = shl i64 %S.load.9, 23, !dbg !554     ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.474 = or i64 %tmp.473, %tmp.472, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp10 = xor i64 %tmp.474, %tmp.471, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.476 = xor i64 %tmp10, %tmp.468, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %S.load.10 = load i64* %S.addr.12, align 16, !dbg !554 ; [#uses=3 type=i64] [debug line = 131:8]
  %S.load.11 = load i64* %S.addr.13, align 8, !dbg !554 ; [#uses=4 type=i64] [debug line = 131:8]
  %tmp.477 = xor i64 %S.load.11, %S.load.10, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.478 = and i64 %S.load.9, %tmp.477, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.479 = xor i64 %S.load.10, %tmp.478, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp.480 = zext i7 %i.3 to i64, !dbg !554       ; [#uses=2 type=i64] [debug line = 131:8]
  %K.addr = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.480, !dbg !554 ; [#uses=1 type=i64*] [debug line = 131:8]
  %K.load = load i64* %K.addr, align 16, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %W.addr.19 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.480, !dbg !554 ; [#uses=1 type=i64*] [debug line = 131:8]
  %W.load.15 = load i64* %W.addr.19, align 16, !dbg !554 ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp13 = add i64 %S.load, %K.load, !dbg !554    ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp15 = add i64 %tmp.479, %tmp.476, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %tmp14 = add i64 %W.load.15, %tmp15, !dbg !554  ; [#uses=1 type=i64] [debug line = 131:8]
  %t0 = add i64 %tmp13, %tmp14, !dbg !554         ; [#uses=2 type=i64] [debug line = 131:8]
  call void @llvm.dbg.value(metadata !{i64 %t0}, i64 0, metadata !564), !dbg !554 ; [debug line = 131:8] [debug variable = t0]
  %S.load.12 = load i64* %S.addr.14, align 16, !dbg !557 ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp.484 = lshr i64 %S.load.12, 28, !dbg !557   ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.485 = shl i64 %S.load.12, 36, !dbg !557    ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.486 = or i64 %tmp.485, %tmp.484, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.487 = lshr i64 %S.load.12, 34, !dbg !557   ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.488 = shl i64 %S.load.12, 30, !dbg !557    ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.489 = or i64 %tmp.488, %tmp.487, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.490 = lshr i64 %S.load.12, 39, !dbg !557   ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.491 = shl i64 %S.load.12, 25, !dbg !557    ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.492 = or i64 %tmp.491, %tmp.490, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp16 = xor i64 %tmp.492, %tmp.489, !dbg !557  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.494 = xor i64 %tmp16, %tmp.486, !dbg !557  ; [#uses=1 type=i64] [debug line = 131:0]
  %S.load.13 = load i64* %S.addr.15, align 8, !dbg !557 ; [#uses=4 type=i64] [debug line = 131:0]
  %tmp.495 = or i64 %S.load.13, %S.load.12, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %S.load.14 = load i64* %S.addr.16, align 16, !dbg !557 ; [#uses=2 type=i64] [debug line = 131:0]
  %tmp.496 = and i64 %S.load.14, %tmp.495, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.497 = and i64 %S.load.13, %S.load.12, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.498 = or i64 %tmp.496, %tmp.497, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %S.load.15 = load i64* %S.addr.17, align 8, !dbg !557 ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.499 = add i64 %t0, %S.load.15, !dbg !557   ; [#uses=11 type=i64] [debug line = 131:0]
  %tmp17 = add i64 %tmp.498, %tmp.494, !dbg !557  ; [#uses=1 type=i64] [debug line = 131:0]
  %tmp.500 = add i64 %t0, %tmp17, !dbg !557       ; [#uses=12 type=i64] [debug line = 131:0]
  %tmp.501 = lshr i64 %tmp.499, 14, !dbg !565     ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.502 = shl i64 %tmp.499, 50, !dbg !565      ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.503 = or i64 %tmp.502, %tmp.501, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.504 = lshr i64 %tmp.499, 18, !dbg !565     ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.505 = shl i64 %tmp.499, 46, !dbg !565      ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.506 = or i64 %tmp.505, %tmp.504, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.507 = lshr i64 %tmp.499, 41, !dbg !565     ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.508 = shl i64 %tmp.499, 23, !dbg !565      ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.509 = or i64 %tmp.508, %tmp.507, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp18 = xor i64 %tmp.509, %tmp.506, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.511 = xor i64 %tmp18, %tmp.503, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.512 = xor i64 %S.load.11, %S.load.9, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.513 = and i64 %tmp.499, %tmp.512, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.514 = xor i64 %S.load.11, %tmp.513, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp.515 = or i7 %i.3, 1, !dbg !565             ; [#uses=1 type=i7] [debug line = 132:8]
  %tmp.516 = zext i7 %tmp.515 to i64, !dbg !565   ; [#uses=2 type=i64] [debug line = 132:8]
  %K.addr.8 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.516, !dbg !565 ; [#uses=1 type=i64*] [debug line = 132:8]
  %K.load.8 = load i64* %K.addr.8, align 8, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %W.addr.20 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.516, !dbg !565 ; [#uses=1 type=i64*] [debug line = 132:8]
  %W.load.16 = load i64* %W.addr.20, align 8, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp21 = add i64 %S.load.10, %K.load.8, !dbg !565 ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp23 = add i64 %tmp.511, %tmp.514, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %tmp22 = add i64 %W.load.16, %tmp23, !dbg !565  ; [#uses=1 type=i64] [debug line = 132:8]
  %t0.8 = add i64 %tmp21, %tmp22, !dbg !565       ; [#uses=2 type=i64] [debug line = 132:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.8}, i64 0, metadata !564), !dbg !565 ; [debug line = 132:8] [debug variable = t0]
  %tmp.520 = lshr i64 %tmp.500, 28, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.521 = shl i64 %tmp.500, 36, !dbg !566      ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.522 = or i64 %tmp.521, %tmp.520, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.523 = lshr i64 %tmp.500, 34, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.524 = shl i64 %tmp.500, 30, !dbg !566      ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.525 = or i64 %tmp.524, %tmp.523, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.526 = lshr i64 %tmp.500, 39, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.527 = shl i64 %tmp.500, 25, !dbg !566      ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.528 = or i64 %tmp.527, %tmp.526, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp24 = xor i64 %tmp.528, %tmp.525, !dbg !566  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.530 = xor i64 %tmp24, %tmp.522, !dbg !566  ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.531 = or i64 %S.load.12, %tmp.500, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.532 = and i64 %S.load.13, %tmp.531, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.533 = and i64 %S.load.12, %tmp.500, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.534 = or i64 %tmp.532, %tmp.533, !dbg !566 ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.535 = add i64 %t0.8, %S.load.14, !dbg !566 ; [#uses=11 type=i64] [debug line = 132:0]
  %tmp25 = add i64 %t0.8, %tmp.530, !dbg !566     ; [#uses=1 type=i64] [debug line = 132:0]
  %tmp.536 = add i64 %tmp.534, %tmp25, !dbg !566  ; [#uses=12 type=i64] [debug line = 132:0]
  %tmp.537 = lshr i64 %tmp.535, 14, !dbg !567     ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.538 = shl i64 %tmp.535, 50, !dbg !567      ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.539 = or i64 %tmp.538, %tmp.537, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.540 = lshr i64 %tmp.535, 18, !dbg !567     ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.541 = shl i64 %tmp.535, 46, !dbg !567      ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.542 = or i64 %tmp.541, %tmp.540, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.543 = lshr i64 %tmp.535, 41, !dbg !567     ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.544 = shl i64 %tmp.535, 23, !dbg !567      ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.545 = or i64 %tmp.544, %tmp.543, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp26 = xor i64 %tmp.545, %tmp.542, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.547 = xor i64 %tmp26, %tmp.539, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.548 = xor i64 %S.load.9, %tmp.499, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.549 = and i64 %tmp.535, %tmp.548, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.550 = xor i64 %S.load.9, %tmp.549, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp.551 = or i7 %i.3, 2, !dbg !567             ; [#uses=1 type=i7] [debug line = 133:8]
  %tmp.552 = zext i7 %tmp.551 to i64, !dbg !567   ; [#uses=2 type=i64] [debug line = 133:8]
  %K.addr.9 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.552, !dbg !567 ; [#uses=1 type=i64*] [debug line = 133:8]
  %K.load.9 = load i64* %K.addr.9, align 16, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %W.addr.21 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.552, !dbg !567 ; [#uses=1 type=i64*] [debug line = 133:8]
  %W.load.17 = load i64* %W.addr.21, align 16, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp29 = add i64 %S.load.11, %K.load.9, !dbg !567 ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp31 = add i64 %tmp.547, %tmp.550, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %tmp30 = add i64 %W.load.17, %tmp31, !dbg !567  ; [#uses=1 type=i64] [debug line = 133:8]
  %t0.9 = add i64 %tmp29, %tmp30, !dbg !567       ; [#uses=2 type=i64] [debug line = 133:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.9}, i64 0, metadata !564), !dbg !567 ; [debug line = 133:8] [debug variable = t0]
  %tmp.556 = lshr i64 %tmp.536, 28, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.557 = shl i64 %tmp.536, 36, !dbg !568      ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.558 = or i64 %tmp.557, %tmp.556, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.559 = lshr i64 %tmp.536, 34, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.560 = shl i64 %tmp.536, 30, !dbg !568      ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.561 = or i64 %tmp.560, %tmp.559, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.562 = lshr i64 %tmp.536, 39, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.563 = shl i64 %tmp.536, 25, !dbg !568      ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.564 = or i64 %tmp.563, %tmp.562, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp32 = xor i64 %tmp.564, %tmp.561, !dbg !568  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.566 = xor i64 %tmp32, %tmp.558, !dbg !568  ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.567 = or i64 %tmp.536, %tmp.500, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.568 = and i64 %S.load.12, %tmp.567, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.569 = and i64 %tmp.536, %tmp.500, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.570 = or i64 %tmp.568, %tmp.569, !dbg !568 ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.571 = add i64 %t0.9, %S.load.13, !dbg !568 ; [#uses=11 type=i64] [debug line = 133:0]
  %tmp33 = add i64 %t0.9, %tmp.566, !dbg !568     ; [#uses=1 type=i64] [debug line = 133:0]
  %tmp.572 = add i64 %tmp.570, %tmp33, !dbg !568  ; [#uses=12 type=i64] [debug line = 133:0]
  %tmp.573 = lshr i64 %tmp.571, 14, !dbg !569     ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.574 = shl i64 %tmp.571, 50, !dbg !569      ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.575 = or i64 %tmp.574, %tmp.573, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.576 = lshr i64 %tmp.571, 18, !dbg !569     ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.577 = shl i64 %tmp.571, 46, !dbg !569      ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.578 = or i64 %tmp.577, %tmp.576, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.579 = lshr i64 %tmp.571, 41, !dbg !569     ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.580 = shl i64 %tmp.571, 23, !dbg !569      ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.581 = or i64 %tmp.580, %tmp.579, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp34 = xor i64 %tmp.581, %tmp.578, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.583 = xor i64 %tmp34, %tmp.575, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.584 = xor i64 %tmp.535, %tmp.499, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.585 = and i64 %tmp.571, %tmp.584, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.586 = xor i64 %tmp.585, %tmp.499, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp.587 = or i7 %i.3, 3, !dbg !569             ; [#uses=1 type=i7] [debug line = 134:8]
  %tmp.588 = zext i7 %tmp.587 to i64, !dbg !569   ; [#uses=2 type=i64] [debug line = 134:8]
  %K.addr.10 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.588, !dbg !569 ; [#uses=1 type=i64*] [debug line = 134:8]
  %K.load.10 = load i64* %K.addr.10, align 8, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %W.addr.22 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.588, !dbg !569 ; [#uses=1 type=i64*] [debug line = 134:8]
  %W.load.18 = load i64* %W.addr.22, align 8, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp37 = add i64 %S.load.9, %K.load.10, !dbg !569 ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp39 = add i64 %tmp.583, %tmp.586, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %tmp38 = add i64 %W.load.18, %tmp39, !dbg !569  ; [#uses=1 type=i64] [debug line = 134:8]
  %t0.15 = add i64 %tmp37, %tmp38, !dbg !569      ; [#uses=2 type=i64] [debug line = 134:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.15}, i64 0, metadata !564), !dbg !569 ; [debug line = 134:8] [debug variable = t0]
  %tmp.592 = lshr i64 %tmp.572, 28, !dbg !570     ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.593 = shl i64 %tmp.572, 36, !dbg !570      ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.594 = or i64 %tmp.593, %tmp.592, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.595 = lshr i64 %tmp.572, 34, !dbg !570     ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.596 = shl i64 %tmp.572, 30, !dbg !570      ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.597 = or i64 %tmp.596, %tmp.595, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.598 = lshr i64 %tmp.572, 39, !dbg !570     ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.599 = shl i64 %tmp.572, 25, !dbg !570      ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.600 = or i64 %tmp.599, %tmp.598, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp40 = xor i64 %tmp.600, %tmp.597, !dbg !570  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.602 = xor i64 %tmp40, %tmp.594, !dbg !570  ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.603 = or i64 %tmp.572, %tmp.536, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.604 = and i64 %tmp.603, %tmp.500, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.605 = and i64 %tmp.572, %tmp.536, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.606 = or i64 %tmp.604, %tmp.605, !dbg !570 ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.607 = add i64 %t0.15, %S.load.12, !dbg !570 ; [#uses=11 type=i64] [debug line = 134:0]
  %tmp41 = add i64 %t0.15, %tmp.602, !dbg !570    ; [#uses=1 type=i64] [debug line = 134:0]
  %tmp.608 = add i64 %tmp.606, %tmp41, !dbg !570  ; [#uses=12 type=i64] [debug line = 134:0]
  %tmp.609 = lshr i64 %tmp.607, 14, !dbg !571     ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.610 = shl i64 %tmp.607, 50, !dbg !571      ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.611 = or i64 %tmp.610, %tmp.609, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.612 = lshr i64 %tmp.607, 18, !dbg !571     ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.613 = shl i64 %tmp.607, 46, !dbg !571      ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.614 = or i64 %tmp.613, %tmp.612, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.615 = lshr i64 %tmp.607, 41, !dbg !571     ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.616 = shl i64 %tmp.607, 23, !dbg !571      ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.617 = or i64 %tmp.616, %tmp.615, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp42 = xor i64 %tmp.617, %tmp.614, !dbg !571  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.619 = xor i64 %tmp42, %tmp.611, !dbg !571  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.620 = xor i64 %tmp.571, %tmp.535, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.621 = and i64 %tmp.607, %tmp.620, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.622 = xor i64 %tmp.621, %tmp.535, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp.623 = or i7 %i.3, 4, !dbg !571             ; [#uses=1 type=i7] [debug line = 135:8]
  %tmp.624 = zext i7 %tmp.623 to i64, !dbg !571   ; [#uses=2 type=i64] [debug line = 135:8]
  %K.addr.11 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.624, !dbg !571 ; [#uses=1 type=i64*] [debug line = 135:8]
  %K.load.11 = load i64* %K.addr.11, align 16, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %W.addr.23 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.624, !dbg !571 ; [#uses=1 type=i64*] [debug line = 135:8]
  %W.load.19 = load i64* %W.addr.23, align 16, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp45 = add i64 %W.load.19, %K.load.11, !dbg !571 ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp47 = add i64 %tmp.499, %tmp.619, !dbg !571  ; [#uses=1 type=i64] [debug line = 135:8]
  %tmp46 = add i64 %tmp.622, %tmp47, !dbg !571    ; [#uses=1 type=i64] [debug line = 135:8]
  %t0.16 = add i64 %tmp45, %tmp46, !dbg !571      ; [#uses=2 type=i64] [debug line = 135:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.16}, i64 0, metadata !564), !dbg !571 ; [debug line = 135:8] [debug variable = t0]
  %tmp.628 = lshr i64 %tmp.608, 28, !dbg !572     ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.629 = shl i64 %tmp.608, 36, !dbg !572      ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.630 = or i64 %tmp.629, %tmp.628, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.631 = lshr i64 %tmp.608, 34, !dbg !572     ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.632 = shl i64 %tmp.608, 30, !dbg !572      ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.633 = or i64 %tmp.632, %tmp.631, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.634 = lshr i64 %tmp.608, 39, !dbg !572     ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.635 = shl i64 %tmp.608, 25, !dbg !572      ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.636 = or i64 %tmp.635, %tmp.634, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp48 = xor i64 %tmp.636, %tmp.633, !dbg !572  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.637 = xor i64 %tmp48, %tmp.630, !dbg !572  ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.638 = or i64 %tmp.608, %tmp.572, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.639 = and i64 %tmp.638, %tmp.536, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.640 = and i64 %tmp.608, %tmp.572, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.641 = or i64 %tmp.639, %tmp.640, !dbg !572 ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.642 = add i64 %t0.16, %tmp.500, !dbg !572  ; [#uses=11 type=i64] [debug line = 135:0]
  store i64 %tmp.642, i64* %S.addr.10, align 8, !dbg !572 ; [debug line = 135:0]
  %tmp49 = add i64 %t0.16, %tmp.637, !dbg !572    ; [#uses=1 type=i64] [debug line = 135:0]
  %tmp.643 = add i64 %tmp.641, %tmp49, !dbg !572  ; [#uses=12 type=i64] [debug line = 135:0]
  store i64 %tmp.643, i64* %S.addr.17, align 8, !dbg !572 ; [debug line = 135:0]
  %tmp.644 = lshr i64 %tmp.642, 14, !dbg !573     ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.645 = shl i64 %tmp.642, 50, !dbg !573      ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.646 = or i64 %tmp.645, %tmp.644, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.647 = lshr i64 %tmp.642, 18, !dbg !573     ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.648 = shl i64 %tmp.642, 46, !dbg !573      ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.649 = or i64 %tmp.648, %tmp.647, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.650 = lshr i64 %tmp.642, 41, !dbg !573     ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.651 = shl i64 %tmp.642, 23, !dbg !573      ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.652 = or i64 %tmp.651, %tmp.650, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp50 = xor i64 %tmp.652, %tmp.649, !dbg !573  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.653 = xor i64 %tmp50, %tmp.646, !dbg !573  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.654 = xor i64 %tmp.607, %tmp.571, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.655 = and i64 %tmp.642, %tmp.654, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.656 = xor i64 %tmp.655, %tmp.571, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp.657 = or i7 %i.3, 5, !dbg !573             ; [#uses=1 type=i7] [debug line = 136:8]
  %tmp.658 = zext i7 %tmp.657 to i64, !dbg !573   ; [#uses=2 type=i64] [debug line = 136:8]
  %K.addr.12 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.658, !dbg !573 ; [#uses=1 type=i64*] [debug line = 136:8]
  %K.load.12 = load i64* %K.addr.12, align 8, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %W.addr.24 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.658, !dbg !573 ; [#uses=1 type=i64*] [debug line = 136:8]
  %W.load.20 = load i64* %W.addr.24, align 8, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp53 = add i64 %W.load.20, %K.load.12, !dbg !573 ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp55 = add i64 %tmp.535, %tmp.653, !dbg !573  ; [#uses=1 type=i64] [debug line = 136:8]
  %tmp54 = add i64 %tmp.656, %tmp55, !dbg !573    ; [#uses=1 type=i64] [debug line = 136:8]
  %t0.17 = add i64 %tmp53, %tmp54, !dbg !573      ; [#uses=2 type=i64] [debug line = 136:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.17}, i64 0, metadata !564), !dbg !573 ; [debug line = 136:8] [debug variable = t0]
  %tmp.659 = lshr i64 %tmp.643, 28, !dbg !574     ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.660 = shl i64 %tmp.643, 36, !dbg !574      ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.661 = or i64 %tmp.660, %tmp.659, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.662 = lshr i64 %tmp.643, 34, !dbg !574     ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.663 = shl i64 %tmp.643, 30, !dbg !574      ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.664 = or i64 %tmp.663, %tmp.662, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.665 = lshr i64 %tmp.643, 39, !dbg !574     ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.666 = shl i64 %tmp.643, 25, !dbg !574      ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.667 = or i64 %tmp.666, %tmp.665, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp56 = xor i64 %tmp.667, %tmp.664, !dbg !574  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.668 = xor i64 %tmp56, %tmp.661, !dbg !574  ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.669 = or i64 %tmp.643, %tmp.608, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.670 = and i64 %tmp.669, %tmp.572, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.671 = and i64 %tmp.643, %tmp.608, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.672 = or i64 %tmp.670, %tmp.671, !dbg !574 ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.673 = add i64 %t0.17, %tmp.536, !dbg !574  ; [#uses=9 type=i64] [debug line = 136:0]
  store i64 %tmp.673, i64* %S.addr.12, align 16, !dbg !574 ; [debug line = 136:0]
  %tmp57 = add i64 %t0.17, %tmp.668, !dbg !574    ; [#uses=1 type=i64] [debug line = 136:0]
  %tmp.674 = add i64 %tmp.672, %tmp57, !dbg !574  ; [#uses=11 type=i64] [debug line = 136:0]
  store i64 %tmp.674, i64* %S.addr.16, align 16, !dbg !574 ; [debug line = 136:0]
  %tmp.675 = lshr i64 %tmp.673, 14, !dbg !575     ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.676 = shl i64 %tmp.673, 50, !dbg !575      ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.677 = or i64 %tmp.676, %tmp.675, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.678 = lshr i64 %tmp.673, 18, !dbg !575     ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.679 = shl i64 %tmp.673, 46, !dbg !575      ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.680 = or i64 %tmp.679, %tmp.678, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.681 = lshr i64 %tmp.673, 41, !dbg !575     ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.682 = shl i64 %tmp.673, 23, !dbg !575      ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.683 = or i64 %tmp.682, %tmp.681, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp58 = xor i64 %tmp.683, %tmp.680, !dbg !575  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.684 = xor i64 %tmp58, %tmp.677, !dbg !575  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.685 = xor i64 %tmp.642, %tmp.607, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.686 = and i64 %tmp.673, %tmp.685, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.687 = xor i64 %tmp.686, %tmp.607, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp.688 = or i7 %i.3, 6, !dbg !575             ; [#uses=1 type=i7] [debug line = 137:8]
  %tmp.689 = zext i7 %tmp.688 to i64, !dbg !575   ; [#uses=2 type=i64] [debug line = 137:8]
  %K.addr.13 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.689, !dbg !575 ; [#uses=1 type=i64*] [debug line = 137:8]
  %K.load.13 = load i64* %K.addr.13, align 16, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %W.addr.25 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.689, !dbg !575 ; [#uses=1 type=i64*] [debug line = 137:8]
  %W.load.21 = load i64* %W.addr.25, align 16, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp61 = add i64 %W.load.21, %K.load.13, !dbg !575 ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp63 = add i64 %tmp.571, %tmp.684, !dbg !575  ; [#uses=1 type=i64] [debug line = 137:8]
  %tmp62 = add i64 %tmp.687, %tmp63, !dbg !575    ; [#uses=1 type=i64] [debug line = 137:8]
  %t0.18 = add i64 %tmp61, %tmp62, !dbg !575      ; [#uses=2 type=i64] [debug line = 137:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.18}, i64 0, metadata !564), !dbg !575 ; [debug line = 137:8] [debug variable = t0]
  %tmp.690 = lshr i64 %tmp.674, 28, !dbg !576     ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.691 = shl i64 %tmp.674, 36, !dbg !576      ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.692 = or i64 %tmp.691, %tmp.690, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.693 = lshr i64 %tmp.674, 34, !dbg !576     ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.694 = shl i64 %tmp.674, 30, !dbg !576      ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.695 = or i64 %tmp.694, %tmp.693, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.696 = lshr i64 %tmp.674, 39, !dbg !576     ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.697 = shl i64 %tmp.674, 25, !dbg !576      ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.698 = or i64 %tmp.697, %tmp.696, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp64 = xor i64 %tmp.698, %tmp.695, !dbg !576  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.699 = xor i64 %tmp64, %tmp.692, !dbg !576  ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.700 = or i64 %tmp.674, %tmp.643, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.701 = and i64 %tmp.700, %tmp.608, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.702 = and i64 %tmp.674, %tmp.643, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.703 = or i64 %tmp.701, %tmp.702, !dbg !576 ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.704 = add i64 %t0.18, %tmp.572, !dbg !576  ; [#uses=8 type=i64] [debug line = 137:0]
  store i64 %tmp.704, i64* %S.addr.13, align 8, !dbg !576 ; [debug line = 137:0]
  %tmp65 = add i64 %t0.18, %tmp.699, !dbg !576    ; [#uses=1 type=i64] [debug line = 137:0]
  %tmp.705 = add i64 %tmp.703, %tmp65, !dbg !576  ; [#uses=9 type=i64] [debug line = 137:0]
  store i64 %tmp.705, i64* %S.addr.15, align 8, !dbg !576 ; [debug line = 137:0]
  %tmp.706 = lshr i64 %tmp.704, 14, !dbg !577     ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.707 = shl i64 %tmp.704, 50, !dbg !577      ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.708 = or i64 %tmp.707, %tmp.706, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.709 = lshr i64 %tmp.704, 18, !dbg !577     ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.710 = shl i64 %tmp.704, 46, !dbg !577      ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.711 = or i64 %tmp.710, %tmp.709, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.712 = lshr i64 %tmp.704, 41, !dbg !577     ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.713 = shl i64 %tmp.704, 23, !dbg !577      ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.714 = or i64 %tmp.713, %tmp.712, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp66 = xor i64 %tmp.714, %tmp.711, !dbg !577  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.715 = xor i64 %tmp66, %tmp.708, !dbg !577  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.716 = xor i64 %tmp.673, %tmp.642, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.717 = and i64 %tmp.704, %tmp.716, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.718 = xor i64 %tmp.717, %tmp.642, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp.719 = or i7 %i.3, 7, !dbg !577             ; [#uses=1 type=i7] [debug line = 138:8]
  %tmp.720 = zext i7 %tmp.719 to i64, !dbg !577   ; [#uses=2 type=i64] [debug line = 138:8]
  %K.addr.14 = getelementptr inbounds [80 x i64]* @K, i64 0, i64 %tmp.720, !dbg !577 ; [#uses=1 type=i64*] [debug line = 138:8]
  %K.load.14 = load i64* %K.addr.14, align 8, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %W.addr.26 = getelementptr inbounds [80 x i64]* %W, i64 0, i64 %tmp.720, !dbg !577 ; [#uses=1 type=i64*] [debug line = 138:8]
  %W.load.22 = load i64* %W.addr.26, align 8, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp69 = add i64 %W.load.22, %K.load.14, !dbg !577 ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp71 = add i64 %tmp.607, %tmp.715, !dbg !577  ; [#uses=1 type=i64] [debug line = 138:8]
  %tmp70 = add i64 %tmp.718, %tmp71, !dbg !577    ; [#uses=1 type=i64] [debug line = 138:8]
  %t0.19 = add i64 %tmp69, %tmp70, !dbg !577      ; [#uses=2 type=i64] [debug line = 138:8]
  call void @llvm.dbg.value(metadata !{i64 %t0.19}, i64 0, metadata !564), !dbg !577 ; [debug line = 138:8] [debug variable = t0]
  %tmp.721 = lshr i64 %tmp.705, 28, !dbg !578     ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.722 = shl i64 %tmp.705, 36, !dbg !578      ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.723 = or i64 %tmp.722, %tmp.721, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.724 = lshr i64 %tmp.705, 34, !dbg !578     ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.725 = shl i64 %tmp.705, 30, !dbg !578      ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.726 = or i64 %tmp.725, %tmp.724, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.727 = lshr i64 %tmp.705, 39, !dbg !578     ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.728 = shl i64 %tmp.705, 25, !dbg !578      ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.729 = or i64 %tmp.728, %tmp.727, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp72 = xor i64 %tmp.729, %tmp.726, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.730 = xor i64 %tmp72, %tmp.723, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.731 = or i64 %tmp.705, %tmp.674, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.732 = and i64 %tmp.731, %tmp.643, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.733 = and i64 %tmp.705, %tmp.674, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.734 = or i64 %tmp.732, %tmp.733, !dbg !578 ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.735 = add i64 %t0.19, %tmp.608, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp.735, i64* %S.addr.11, align 16, !dbg !578 ; [debug line = 138:0]
  %tmp73 = add i64 %t0.19, %tmp.730, !dbg !578    ; [#uses=1 type=i64] [debug line = 138:0]
  %tmp.736 = add i64 %tmp.734, %tmp73, !dbg !578  ; [#uses=1 type=i64] [debug line = 138:0]
  store i64 %tmp.736, i64* %S.addr.14, align 16, !dbg !578 ; [debug line = 138:0]
  %i.18 = add i7 %i.3, 8, !dbg !579               ; [#uses=1 type=i7] [debug line = 130:25]
  call void @llvm.dbg.value(metadata !{i7 %i.18}, i64 0, metadata !547), !dbg !579 ; [debug line = 130:25] [debug variable = i]
  br label %.preheader11, !dbg !579               ; [debug line = 130:25]

.preheader:                                       ; preds = %11, %.preheader.preheader
  %i.4 = phi i4 [ %i.19, %11 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i4]
  %exitcond = icmp eq i4 %i.4, -8, !dbg !562      ; [#uses=1 type=i1] [debug line = 146:9]
  %10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) ; [#uses=0 type=i32]
  br i1 %exitcond, label %12, label %11, !dbg !562 ; [debug line = 146:9]

; <label>:11                                      ; preds = %.preheader
  %tmp.737 = zext i4 %i.4 to i64, !dbg !580       ; [#uses=2 type=i64] [debug line = 147:9]
  %md.state.addr.9 = getelementptr [8 x i64]* %md.state, i64 0, i64 %tmp.737, !dbg !580 ; [#uses=2 type=i64*] [debug line = 147:9]
  %md.state.load.3 = load i64* %md.state.addr.9, align 8, !dbg !580 ; [#uses=1 type=i64] [debug line = 147:9]
  %S.addr.18 = getelementptr inbounds [8 x i64]* %S, i64 0, i64 %tmp.737, !dbg !580 ; [#uses=1 type=i64*] [debug line = 147:9]
  %S.load.16 = load i64* %S.addr.18, align 8, !dbg !580 ; [#uses=1 type=i64] [debug line = 147:9]
  %tmp.738 = add i64 %S.load.16, %md.state.load.3, !dbg !580 ; [#uses=1 type=i64] [debug line = 147:9]
  store i64 %tmp.738, i64* %md.state.addr.9, align 8, !dbg !580 ; [debug line = 147:9]
  %i.19 = add i4 %i.4, 1, !dbg !582               ; [#uses=1 type=i4] [debug line = 146:23]
  call void @llvm.dbg.value(metadata !{i4 %i.19}, i64 0, metadata !547), !dbg !582 ; [debug line = 146:23] [debug variable = i]
  br label %.preheader, !dbg !582                 ; [debug line = 146:23]

; <label>:12                                      ; preds = %.preheader
  ret void
}

; [#uses=2]
define internal fastcc void @reduce_add_sub([32 x i32]* nocapture %r.v) {
  %t = alloca [32 x i8], align 16                 ; [#uses=2 type=[32 x i8]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !585), !dbg !598 ; [debug line = 20:61] [debug variable = r.v]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %t}, metadata !599), !dbg !602 ; [debug line = 26:17] [debug variable = t]
  br label %1, !dbg !603                          ; [debug line = 28:7]

; <label>:1                                       ; preds = %3, %0
  %mask = phi i2 [ undef, %0 ], [ %phitmp.cast.cast, %3 ] ; [#uses=1 type=i2]
  %pb = phi i1 [ false, %0 ], [ %x.cast, %3 ]     ; [#uses=1 type=i1]
  %i = phi i6 [ 0, %0 ], [ %i.20, %3 ]            ; [#uses=3 type=i6]
  %mask.cast = sext i2 %mask to i32, !dbg !605    ; [#uses=1 type=i32] [debug line = 35:3]
  %pb.cast = zext i1 %pb to i8, !dbg !605         ; [#uses=1 type=i8] [debug line = 35:3]
  call void @llvm.dbg.value(metadata !{i2 %mask}, i64 0, metadata !606), !dbg !605 ; [debug line = 35:3] [debug variable = mask]
  %exitcond2 = icmp eq i6 %i, -32, !dbg !603      ; [#uses=1 type=i1] [debug line = 28:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %.preheader.preheader, label %3, !dbg !603 ; [debug line = 28:7]

.preheader.preheader:                             ; preds = %1
  %mask.cast.lcssa = phi i32 [ %mask.cast, %1 ]   ; [#uses=1 type=i32]
  br label %.preheader, !dbg !607                 ; [debug line = 36:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !609             ; [#uses=3 type=i64] [debug line = 30:5]
  %m.addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp, !dbg !609 ; [#uses=1 type=i8*] [debug line = 30:5]
  %m.load = load i8* %m.addr, align 1, !dbg !609  ; [#uses=1 type=i8] [debug line = 30:5]
  %pb.3 = add i8 %m.load, %pb.cast, !dbg !609     ; [#uses=1 type=i8] [debug line = 30:5]
  %pb.3.cast = zext i8 %pb.3 to i32, !dbg !609    ; [#uses=1 type=i32] [debug line = 30:5]
  call void @llvm.dbg.value(metadata !{i8 %pb.3}, i64 0, metadata !611), !dbg !609 ; [debug line = 30:5] [debug variable = pb]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp, !dbg !612 ; [#uses=1 type=i32*] [debug line = 31:9]
  %a.assign = load i32* %r.v.addr, align 4, !dbg !612 ; [#uses=1 type=i32] [debug line = 31:9]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !613), !dbg !617 ; [debug line = 11:39@31:9] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i8 %pb.3}, i64 0, metadata !618), !dbg !619 ; [debug line = 11:55@31:9] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !620), !dbg !622 ; [debug line = 13:21@31:9] [debug variable = x]
  %x.1 = sub i32 %a.assign, %pb.3.cast, !dbg !623 ; [#uses=2 type=i32] [debug line = 14:3@31:9]
  call void @llvm.dbg.value(metadata !{i32 %x.1}, i64 0, metadata !620), !dbg !623 ; [debug line = 14:3@31:9] [debug variable = x]
  %x = lshr i32 %x.1, 31, !dbg !624               ; [#uses=1 type=i32] [debug line = 15:3@31:9]
  %x.cast = trunc i32 %x to i1, !dbg !624         ; [#uses=2 type=i1] [debug line = 15:3@31:9]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !620), !dbg !624 ; [debug line = 15:3@31:9] [debug variable = x]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !625), !dbg !612 ; [debug line = 31:9] [debug variable = b]
  %tmp. = trunc i32 %x.1 to i8, !dbg !626         ; [#uses=1 type=i8] [debug line = 32:5]
  %t.addr = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp, !dbg !626 ; [#uses=1 type=i8*] [debug line = 32:5]
  store i8 %tmp., i8* %t.addr, align 1, !dbg !626 ; [debug line = 32:5]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !611), !dbg !627 ; [debug line = 33:5] [debug variable = pb]
  %i.20 = add i6 %i, 1, !dbg !628                 ; [#uses=1 type=i6] [debug line = 28:16]
  call void @llvm.dbg.value(metadata !{i6 %i.20}, i64 0, metadata !629), !dbg !628 ; [debug line = 28:16] [debug variable = i]
  %phitmp = xor i1 %x.cast, true, !dbg !628       ; [#uses=1 type=i1] [debug line = 28:16]
  %phitmp.cast.cast = sext i1 %phitmp to i2, !dbg !628 ; [#uses=1 type=i2] [debug line = 28:16]
  br label %1, !dbg !628                          ; [debug line = 28:16]

.preheader:                                       ; preds = %5, %.preheader.preheader
  %i.1 = phi i6 [ %i.21, %5 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i.1, -32, !dbg !607     ; [#uses=1 type=i1] [debug line = 36:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %6, label %5, !dbg !607  ; [debug line = 36:7]

; <label>:5                                       ; preds = %.preheader
  %tmp.739 = zext i6 %i.1 to i64, !dbg !630       ; [#uses=2 type=i64] [debug line = 37:5]
  %r.v.addr.1 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.739, !dbg !630 ; [#uses=2 type=i32*] [debug line = 37:5]
  %r.v.load = load i32* %r.v.addr.1, align 4, !dbg !630 ; [#uses=2 type=i32] [debug line = 37:5]
  %t.addr.1 = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp.739, !dbg !630 ; [#uses=1 type=i8*] [debug line = 37:5]
  %t.load = load i8* %t.addr.1, align 1, !dbg !630 ; [#uses=1 type=i8] [debug line = 37:5]
  %tmp.740 = zext i8 %t.load to i32, !dbg !630    ; [#uses=1 type=i32] [debug line = 37:5]
  %tmp.741 = xor i32 %r.v.load, %tmp.740, !dbg !630 ; [#uses=1 type=i32] [debug line = 37:5]
  %tmp.742 = and i32 %tmp.741, %mask.cast.lcssa, !dbg !630 ; [#uses=1 type=i32] [debug line = 37:5]
  %tmp.743 = xor i32 %r.v.load, %tmp.742, !dbg !630 ; [#uses=1 type=i32] [debug line = 37:5]
  store i32 %tmp.743, i32* %r.v.addr.1, align 4, !dbg !630 ; [debug line = 37:5]
  %i.21 = add i6 %i.1, 1, !dbg !631               ; [#uses=1 type=i6] [debug line = 36:16]
  call void @llvm.dbg.value(metadata !{i6 %i.21}, i64 0, metadata !629), !dbg !631 ; [debug line = 36:16] [debug variable = i]
  br label %.preheader, !dbg !631                 ; [debug line = 36:16]

; <label>:6                                       ; preds = %.preheader
  ret void, !dbg !632                             ; [debug line = 38:1]
}

; [#uses=460]
declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

; [#uses=70]
declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_scalarmult_base([32 x i32]* %r.x.v, [32 x i32]* %r.y.v, [32 x i32]* nocapture %r.z.v, [32 x i32]* nocapture %r.t.v, [32 x i32]* nocapture %s.v) {
  %a.v = alloca [32 x i32], align 4               ; [#uses=4 type=[32 x i32]*]
  %b.v = alloca [32 x i32], align 4               ; [#uses=4 type=[32 x i32]*]
  %t1.v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %t2.v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %c.v = alloca [32 x i32], align 4               ; [#uses=4 type=[32 x i32]*]
  %d.v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %e.v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %f.v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %g.v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %h.v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  %qt.v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %b = alloca [85 x i8], align 16                 ; [#uses=3 type=[85 x i8]*]
  %t.x.v = alloca [32 x i32], align 4             ; [#uses=4 type=[32 x i32]*]
  %t.y.v = alloca [32 x i32], align 4             ; [#uses=4 type=[32 x i32]*]
  %r_temp.x.v = alloca [32 x i32], align 4        ; [#uses=33 type=[32 x i32]*]
  %r_temp.y.v = alloca [32 x i32], align 4        ; [#uses=33 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.x.v}, i64 0, metadata !633), !dbg !646 ; [debug line = 297:79] [debug variable = r.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.y.v}, i64 0, metadata !647), !dbg !646 ; [debug line = 297:79] [debug variable = r.y.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.z.v}, i64 0, metadata !648), !dbg !646 ; [debug line = 297:79] [debug variable = r.z.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.t.v}, i64 0, metadata !649), !dbg !646 ; [debug line = 297:79] [debug variable = r.t.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %s.v}, i64 0, metadata !650), !dbg !654 ; [debug line = 297:121] [debug variable = s.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t.x.v}, metadata !655), !dbg !658 ; [debug line = 301:15] [debug variable = t.x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t.y.v}, metadata !659), !dbg !658 ; [debug line = 301:15] [debug variable = t.y.v]
  %b.addr = getelementptr inbounds [85 x i8]* %b, i64 0, i64 0, !dbg !660 ; [#uses=1 type=i8*] [debug line = 302:3]
  call fastcc void @crypto_sign_ed25519_ref_sc25519_window3([85 x i8]* %b, [32 x i32]* %s.v), !dbg !660 ; [debug line = 302:3]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %r_temp.x.v}, metadata !661), !dbg !663 ; [debug line = 304:15] [debug variable = r_temp.x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %r_temp.y.v}, metadata !664), !dbg !663 ; [debug line = 304:15] [debug variable = r_temp.y.v]
  %r_temp.x.v.addr = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 0, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr = getelementptr [32 x i32]* %r.x.v, i64 0, i64 0, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load = load i32* %r.x.v.addr, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load, i32* %r_temp.x.v.addr, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.1 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 1, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.1 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 1, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.1 = load i32* %r.x.v.addr.1, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.1, i32* %r_temp.x.v.addr.1, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.2 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 2, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.2 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 2, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.2 = load i32* %r.x.v.addr.2, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.2, i32* %r_temp.x.v.addr.2, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.3 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 3, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.3 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 3, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.3 = load i32* %r.x.v.addr.3, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.3, i32* %r_temp.x.v.addr.3, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.4 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 4, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.4 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 4, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.4 = load i32* %r.x.v.addr.4, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.4, i32* %r_temp.x.v.addr.4, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.5 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 5, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.5 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 5, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.5 = load i32* %r.x.v.addr.5, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.5, i32* %r_temp.x.v.addr.5, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.6 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 6, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.6 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 6, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.6 = load i32* %r.x.v.addr.6, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.6, i32* %r_temp.x.v.addr.6, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.7 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 7, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.7 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 7, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.7 = load i32* %r.x.v.addr.7, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.7, i32* %r_temp.x.v.addr.7, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.8 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 8, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.8 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 8, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.8 = load i32* %r.x.v.addr.8, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.8, i32* %r_temp.x.v.addr.8, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.9 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 9, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.9 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 9, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.9 = load i32* %r.x.v.addr.9, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.9, i32* %r_temp.x.v.addr.9, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.10 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 10, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.10 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 10, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.10 = load i32* %r.x.v.addr.10, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.10, i32* %r_temp.x.v.addr.10, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.11 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 11, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.11 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 11, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.11 = load i32* %r.x.v.addr.11, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.11, i32* %r_temp.x.v.addr.11, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.12 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 12, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.12 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 12, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.12 = load i32* %r.x.v.addr.12, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.12, i32* %r_temp.x.v.addr.12, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.13 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 13, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.13 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 13, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.13 = load i32* %r.x.v.addr.13, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.13, i32* %r_temp.x.v.addr.13, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.14 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 14, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.14 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 14, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.14 = load i32* %r.x.v.addr.14, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.14, i32* %r_temp.x.v.addr.14, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.15 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 15, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.15 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 15, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.15 = load i32* %r.x.v.addr.15, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.15, i32* %r_temp.x.v.addr.15, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.16 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 16, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.16 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 16, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.16 = load i32* %r.x.v.addr.16, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.16, i32* %r_temp.x.v.addr.16, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.17 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 17, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.17 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 17, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.17 = load i32* %r.x.v.addr.17, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.17, i32* %r_temp.x.v.addr.17, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.18 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 18, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.18 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 18, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.18 = load i32* %r.x.v.addr.18, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.18, i32* %r_temp.x.v.addr.18, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.19 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 19, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.19 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 19, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.19 = load i32* %r.x.v.addr.19, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.19, i32* %r_temp.x.v.addr.19, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.20 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 20, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.20 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 20, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.20 = load i32* %r.x.v.addr.20, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.20, i32* %r_temp.x.v.addr.20, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.21 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 21, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.21 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 21, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.21 = load i32* %r.x.v.addr.21, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.21, i32* %r_temp.x.v.addr.21, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.22 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 22, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.22 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 22, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.22 = load i32* %r.x.v.addr.22, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.22, i32* %r_temp.x.v.addr.22, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.23 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 23, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.23 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 23, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.23 = load i32* %r.x.v.addr.23, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.23, i32* %r_temp.x.v.addr.23, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.24 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 24, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.24 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 24, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.24 = load i32* %r.x.v.addr.24, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.24, i32* %r_temp.x.v.addr.24, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.25 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 25, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.25 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 25, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.25 = load i32* %r.x.v.addr.25, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.25, i32* %r_temp.x.v.addr.25, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.26 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 26, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.26 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 26, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.26 = load i32* %r.x.v.addr.26, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.26, i32* %r_temp.x.v.addr.26, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.27 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 27, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.27 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 27, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.27 = load i32* %r.x.v.addr.27, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.27, i32* %r_temp.x.v.addr.27, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.28 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 28, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.28 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 28, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.28 = load i32* %r.x.v.addr.28, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.28, i32* %r_temp.x.v.addr.28, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.29 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 29, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.29 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 29, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.29 = load i32* %r.x.v.addr.29, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.29, i32* %r_temp.x.v.addr.29, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.30 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 30, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.30 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 30, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.30 = load i32* %r.x.v.addr.30, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.30, i32* %r_temp.x.v.addr.30, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.x.v.addr.31 = getelementptr [32 x i32]* %r_temp.x.v, i64 0, i64 31, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.addr.31 = getelementptr [32 x i32]* %r.x.v, i64 0, i64 31, !dbg !665 ; [#uses=2 type=i32*] [debug line = 305:3]
  %r.x.v.load.31 = load i32* %r.x.v.addr.31, align 4, !dbg !665 ; [#uses=1 type=i32] [debug line = 305:3]
  store i32 %r.x.v.load.31, i32* %r_temp.x.v.addr.31, align 4, !dbg !665 ; [debug line = 305:3]
  %r_temp.y.v.addr = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 0, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr = getelementptr [32 x i32]* %r.y.v, i64 0, i64 0, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load = load i32* %r.y.v.addr, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load, i32* %r_temp.y.v.addr, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.1 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 1, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.1 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 1, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.1 = load i32* %r.y.v.addr.1, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.1, i32* %r_temp.y.v.addr.1, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.2 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 2, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.2 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 2, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.2 = load i32* %r.y.v.addr.2, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.2, i32* %r_temp.y.v.addr.2, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.3 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 3, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.3 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 3, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.3 = load i32* %r.y.v.addr.3, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.3, i32* %r_temp.y.v.addr.3, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.4 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 4, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.4 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 4, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.4 = load i32* %r.y.v.addr.4, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.4, i32* %r_temp.y.v.addr.4, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.5 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 5, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.5 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 5, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.5 = load i32* %r.y.v.addr.5, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.5, i32* %r_temp.y.v.addr.5, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.6 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 6, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.6 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 6, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.6 = load i32* %r.y.v.addr.6, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.6, i32* %r_temp.y.v.addr.6, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.7 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 7, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.7 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 7, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.7 = load i32* %r.y.v.addr.7, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.7, i32* %r_temp.y.v.addr.7, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.8 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 8, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.8 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 8, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.8 = load i32* %r.y.v.addr.8, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.8, i32* %r_temp.y.v.addr.8, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.9 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 9, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.9 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 9, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.9 = load i32* %r.y.v.addr.9, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.9, i32* %r_temp.y.v.addr.9, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.10 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 10, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.10 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 10, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.10 = load i32* %r.y.v.addr.10, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.10, i32* %r_temp.y.v.addr.10, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.11 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 11, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.11 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 11, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.11 = load i32* %r.y.v.addr.11, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.11, i32* %r_temp.y.v.addr.11, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.12 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 12, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.12 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 12, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.12 = load i32* %r.y.v.addr.12, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.12, i32* %r_temp.y.v.addr.12, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.13 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 13, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.13 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 13, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.13 = load i32* %r.y.v.addr.13, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.13, i32* %r_temp.y.v.addr.13, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.14 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 14, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.14 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 14, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.14 = load i32* %r.y.v.addr.14, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.14, i32* %r_temp.y.v.addr.14, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.15 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 15, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.15 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 15, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.15 = load i32* %r.y.v.addr.15, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.15, i32* %r_temp.y.v.addr.15, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.16 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 16, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.16 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 16, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.16 = load i32* %r.y.v.addr.16, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.16, i32* %r_temp.y.v.addr.16, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.17 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 17, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.17 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 17, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.17 = load i32* %r.y.v.addr.17, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.17, i32* %r_temp.y.v.addr.17, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.18 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 18, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.18 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 18, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.18 = load i32* %r.y.v.addr.18, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.18, i32* %r_temp.y.v.addr.18, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.19 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 19, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.19 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 19, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.19 = load i32* %r.y.v.addr.19, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.19, i32* %r_temp.y.v.addr.19, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.20 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 20, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.20 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 20, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.20 = load i32* %r.y.v.addr.20, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.20, i32* %r_temp.y.v.addr.20, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.21 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 21, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.21 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 21, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.21 = load i32* %r.y.v.addr.21, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.21, i32* %r_temp.y.v.addr.21, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.22 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 22, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.22 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 22, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.22 = load i32* %r.y.v.addr.22, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.22, i32* %r_temp.y.v.addr.22, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.23 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 23, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.23 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 23, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.23 = load i32* %r.y.v.addr.23, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.23, i32* %r_temp.y.v.addr.23, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.24 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 24, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.24 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 24, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.24 = load i32* %r.y.v.addr.24, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.24, i32* %r_temp.y.v.addr.24, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.25 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 25, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.25 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 25, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.25 = load i32* %r.y.v.addr.25, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.25, i32* %r_temp.y.v.addr.25, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.26 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 26, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.26 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 26, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.26 = load i32* %r.y.v.addr.26, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.26, i32* %r_temp.y.v.addr.26, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.27 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 27, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.27 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 27, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.27 = load i32* %r.y.v.addr.27, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.27, i32* %r_temp.y.v.addr.27, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.28 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 28, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.28 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 28, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.28 = load i32* %r.y.v.addr.28, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.28, i32* %r_temp.y.v.addr.28, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.29 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 29, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.29 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 29, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.29 = load i32* %r.y.v.addr.29, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.29, i32* %r_temp.y.v.addr.29, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.30 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 30, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.30 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 30, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.30 = load i32* %r.y.v.addr.30, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.30, i32* %r_temp.y.v.addr.30, align 4, !dbg !666 ; [debug line = 306:3]
  %r_temp.y.v.addr.31 = getelementptr [32 x i32]* %r_temp.y.v, i64 0, i64 31, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.addr.31 = getelementptr [32 x i32]* %r.y.v, i64 0, i64 31, !dbg !666 ; [#uses=2 type=i32*] [debug line = 306:3]
  %r.y.v.load.31 = load i32* %r.y.v.addr.31, align 4, !dbg !666 ; [#uses=1 type=i32] [debug line = 306:3]
  store i32 %r.y.v.load.31, i32* %r_temp.y.v.addr.31, align 4, !dbg !666 ; [debug line = 306:3]
  %b.load = load i8* %b.addr, align 16, !dbg !667 ; [#uses=1 type=i8] [debug line = 308:3]
  call fastcc void @choose_t([32 x i32]* %r_temp.x.v, [32 x i32]* %r_temp.y.v, i7 0, i8 signext %b.load), !dbg !667 ; [debug line = 308:3]
  %r_temp.x.v.load = load i32* %r_temp.x.v.addr, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load, i32* %r.x.v.addr, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.1 = load i32* %r_temp.x.v.addr.1, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.1, i32* %r.x.v.addr.1, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.2 = load i32* %r_temp.x.v.addr.2, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.2, i32* %r.x.v.addr.2, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.3 = load i32* %r_temp.x.v.addr.3, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.3, i32* %r.x.v.addr.3, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.4 = load i32* %r_temp.x.v.addr.4, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.4, i32* %r.x.v.addr.4, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.5 = load i32* %r_temp.x.v.addr.5, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.5, i32* %r.x.v.addr.5, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.6 = load i32* %r_temp.x.v.addr.6, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.6, i32* %r.x.v.addr.6, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.7 = load i32* %r_temp.x.v.addr.7, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.7, i32* %r.x.v.addr.7, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.8 = load i32* %r_temp.x.v.addr.8, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.8, i32* %r.x.v.addr.8, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.9 = load i32* %r_temp.x.v.addr.9, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.9, i32* %r.x.v.addr.9, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.10 = load i32* %r_temp.x.v.addr.10, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.10, i32* %r.x.v.addr.10, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.11 = load i32* %r_temp.x.v.addr.11, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.11, i32* %r.x.v.addr.11, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.12 = load i32* %r_temp.x.v.addr.12, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.12, i32* %r.x.v.addr.12, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.13 = load i32* %r_temp.x.v.addr.13, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.13, i32* %r.x.v.addr.13, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.14 = load i32* %r_temp.x.v.addr.14, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.14, i32* %r.x.v.addr.14, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.15 = load i32* %r_temp.x.v.addr.15, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.15, i32* %r.x.v.addr.15, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.16 = load i32* %r_temp.x.v.addr.16, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.16, i32* %r.x.v.addr.16, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.17 = load i32* %r_temp.x.v.addr.17, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.17, i32* %r.x.v.addr.17, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.18 = load i32* %r_temp.x.v.addr.18, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.18, i32* %r.x.v.addr.18, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.19 = load i32* %r_temp.x.v.addr.19, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.19, i32* %r.x.v.addr.19, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.20 = load i32* %r_temp.x.v.addr.20, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.20, i32* %r.x.v.addr.20, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.21 = load i32* %r_temp.x.v.addr.21, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.21, i32* %r.x.v.addr.21, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.22 = load i32* %r_temp.x.v.addr.22, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.22, i32* %r.x.v.addr.22, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.23 = load i32* %r_temp.x.v.addr.23, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.23, i32* %r.x.v.addr.23, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.24 = load i32* %r_temp.x.v.addr.24, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.24, i32* %r.x.v.addr.24, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.25 = load i32* %r_temp.x.v.addr.25, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.25, i32* %r.x.v.addr.25, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.26 = load i32* %r_temp.x.v.addr.26, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.26, i32* %r.x.v.addr.26, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.27 = load i32* %r_temp.x.v.addr.27, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.27, i32* %r.x.v.addr.27, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.28 = load i32* %r_temp.x.v.addr.28, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.28, i32* %r.x.v.addr.28, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.29 = load i32* %r_temp.x.v.addr.29, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.29, i32* %r.x.v.addr.29, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.30 = load i32* %r_temp.x.v.addr.30, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.30, i32* %r.x.v.addr.30, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.x.v.load.31 = load i32* %r_temp.x.v.addr.31, align 4, !dbg !668 ; [#uses=1 type=i32] [debug line = 309:3]
  store i32 %r_temp.x.v.load.31, i32* %r.x.v.addr.31, align 4, !dbg !668 ; [debug line = 309:3]
  %r_temp.y.v.load = load i32* %r_temp.y.v.addr, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load, i32* %r.y.v.addr, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.1 = load i32* %r_temp.y.v.addr.1, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.1, i32* %r.y.v.addr.1, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.2 = load i32* %r_temp.y.v.addr.2, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.2, i32* %r.y.v.addr.2, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.3 = load i32* %r_temp.y.v.addr.3, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.3, i32* %r.y.v.addr.3, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.4 = load i32* %r_temp.y.v.addr.4, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.4, i32* %r.y.v.addr.4, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.5 = load i32* %r_temp.y.v.addr.5, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.5, i32* %r.y.v.addr.5, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.6 = load i32* %r_temp.y.v.addr.6, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.6, i32* %r.y.v.addr.6, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.7 = load i32* %r_temp.y.v.addr.7, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.7, i32* %r.y.v.addr.7, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.8 = load i32* %r_temp.y.v.addr.8, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.8, i32* %r.y.v.addr.8, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.9 = load i32* %r_temp.y.v.addr.9, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.9, i32* %r.y.v.addr.9, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.10 = load i32* %r_temp.y.v.addr.10, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.10, i32* %r.y.v.addr.10, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.11 = load i32* %r_temp.y.v.addr.11, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.11, i32* %r.y.v.addr.11, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.12 = load i32* %r_temp.y.v.addr.12, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.12, i32* %r.y.v.addr.12, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.13 = load i32* %r_temp.y.v.addr.13, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.13, i32* %r.y.v.addr.13, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.14 = load i32* %r_temp.y.v.addr.14, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.14, i32* %r.y.v.addr.14, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.15 = load i32* %r_temp.y.v.addr.15, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.15, i32* %r.y.v.addr.15, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.16 = load i32* %r_temp.y.v.addr.16, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.16, i32* %r.y.v.addr.16, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.17 = load i32* %r_temp.y.v.addr.17, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.17, i32* %r.y.v.addr.17, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.18 = load i32* %r_temp.y.v.addr.18, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.18, i32* %r.y.v.addr.18, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.19 = load i32* %r_temp.y.v.addr.19, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.19, i32* %r.y.v.addr.19, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.20 = load i32* %r_temp.y.v.addr.20, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.20, i32* %r.y.v.addr.20, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.21 = load i32* %r_temp.y.v.addr.21, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.21, i32* %r.y.v.addr.21, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.22 = load i32* %r_temp.y.v.addr.22, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.22, i32* %r.y.v.addr.22, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.23 = load i32* %r_temp.y.v.addr.23, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.23, i32* %r.y.v.addr.23, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.24 = load i32* %r_temp.y.v.addr.24, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.24, i32* %r.y.v.addr.24, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.25 = load i32* %r_temp.y.v.addr.25, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.25, i32* %r.y.v.addr.25, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.26 = load i32* %r_temp.y.v.addr.26, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.26, i32* %r.y.v.addr.26, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.27 = load i32* %r_temp.y.v.addr.27, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.27, i32* %r.y.v.addr.27, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.28 = load i32* %r_temp.y.v.addr.28, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.28, i32* %r.y.v.addr.28, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.29 = load i32* %r_temp.y.v.addr.29, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.29, i32* %r.y.v.addr.29, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.30 = load i32* %r_temp.y.v.addr.30, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.30, i32* %r.y.v.addr.30, align 4, !dbg !669 ; [debug line = 310:3]
  %r_temp.y.v.load.31 = load i32* %r_temp.y.v.addr.31, align 4, !dbg !669 ; [#uses=1 type=i32] [debug line = 310:3]
  store i32 %r_temp.y.v.load.31, i32* %r.y.v.addr.31, align 4, !dbg !669 ; [debug line = 310:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.z.v}, i64 0, metadata !670), !dbg !684 ; [debug line = 146:78@314:3] [debug variable = r.v]
  %r.z.v.addr = getelementptr [32 x i32]* %r.z.v, i64 0, i64 0, !dbg !685 ; [#uses=1 type=i32*] [debug line = 149:3@314:3]
  store i32 1, i32* %r.z.v.addr, align 4, !dbg !685 ; [debug line = 149:3@314:3]
  br label %1, !dbg !687                          ; [debug line = 150:7@314:3]

; <label>:1                                       ; preds = %3, %0
  %i.i = phi i6 [ 1, %0 ], [ %i.22, %3 ]          ; [#uses=3 type=i6]
  %exitcond.i = icmp eq i6 %i.i, -32, !dbg !687   ; [#uses=1 type=i1] [debug line = 150:7@314:3]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %crypto_sign_ed25519_ref_fe25519_setone.exit, label %3, !dbg !687 ; [debug line = 150:7@314:3]

; <label>:3                                       ; preds = %1
  %tmp.i = zext i6 %i.i to i64, !dbg !689         ; [#uses=1 type=i64] [debug line = 150:21@314:3]
  %r.z.v.addr.1 = getelementptr [32 x i32]* %r.z.v, i64 0, i64 %tmp.i, !dbg !689 ; [#uses=1 type=i32*] [debug line = 150:21@314:3]
  store i32 0, i32* %r.z.v.addr.1, align 4, !dbg !689 ; [debug line = 150:21@314:3]
  %i.22 = add i6 %i.i, 1, !dbg !690               ; [#uses=1 type=i6] [debug line = 150:16@314:3]
  call void @llvm.dbg.value(metadata !{i6 %i.22}, i64 0, metadata !691), !dbg !690 ; [debug line = 150:16@314:3] [debug variable = i]
  br label %1, !dbg !690                          ; [debug line = 150:16@314:3]

crypto_sign_ed25519_ref_fe25519_setone.exit:      ; preds = %1
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %r.t.v, [32 x i32]* %r.x.v, [32 x i32]* %r.y.v)
  br label %4, !dbg !692                          ; [debug line = 316:7]

; <label>:4                                       ; preds = %6, %crypto_sign_ed25519_ref_fe25519_setone.exit
  %i = phi i7 [ 1, %crypto_sign_ed25519_ref_fe25519_setone.exit ], [ %i.23, %6 ] ; [#uses=4 type=i7]
  %exitcond = icmp eq i7 %i, -43, !dbg !692       ; [#uses=1 type=i1] [debug line = 316:7]
  %5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 84, i64 84, i64 84) ; [#uses=0 type=i32]
  br i1 %exitcond, label %7, label %6, !dbg !692  ; [debug line = 316:7]

; <label>:6                                       ; preds = %4
  %tmp = zext i7 %i to i64, !dbg !694             ; [#uses=1 type=i64] [debug line = 318:5]
  %b.addr.1 = getelementptr inbounds [85 x i8]* %b, i64 0, i64 %tmp, !dbg !694 ; [#uses=1 type=i8*] [debug line = 318:5]
  %b.load.1 = load i8* %b.addr.1, align 1, !dbg !694 ; [#uses=1 type=i8] [debug line = 318:5]
  call fastcc void @choose_t([32 x i32]* %t.x.v, [32 x i32]* %t.y.v, i7 %i, i8 signext %b.load.1), !dbg !694 ; [debug line = 318:5]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.x.v}, i64 0, metadata !696), !dbg !703 ; [debug line = 74:62@319:5] [debug variable = r.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.y.v}, i64 0, metadata !704), !dbg !703 ; [debug line = 74:62@319:5] [debug variable = r.y.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.z.v}, i64 0, metadata !705), !dbg !703 ; [debug line = 74:62@319:5] [debug variable = r.z.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.t.v}, i64 0, metadata !706), !dbg !703 ; [debug line = 74:62@319:5] [debug variable = r.t.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t.x.v}, i64 0, metadata !707), !dbg !710 ; [debug line = 74:84@319:5] [debug variable = q.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t.y.v}, i64 0, metadata !711), !dbg !710 ; [debug line = 74:84@319:5] [debug variable = q.y.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %a.v}, metadata !712), !dbg !715 ; [debug line = 76:35@319:5] [debug variable = a.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %b.v}, metadata !716), !dbg !718 ; [debug line = 76:37@319:5] [debug variable = b.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t1.v}, metadata !719), !dbg !721 ; [debug line = 76:39@319:5] [debug variable = t1.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t2.v}, metadata !722), !dbg !724 ; [debug line = 76:42@319:5] [debug variable = t2.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %c.v}, metadata !725), !dbg !727 ; [debug line = 76:45@319:5] [debug variable = c.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %d.v}, metadata !728), !dbg !730 ; [debug line = 76:47@319:5] [debug variable = d.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %e.v}, metadata !731), !dbg !733 ; [debug line = 76:49@319:5] [debug variable = e.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %f.v}, metadata !734), !dbg !736 ; [debug line = 76:51@319:5] [debug variable = f.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %g.v}, metadata !737), !dbg !739 ; [debug line = 76:53@319:5] [debug variable = g.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %h.v}, metadata !740), !dbg !742 ; [debug line = 76:55@319:5] [debug variable = h.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %qt.v}, metadata !743), !dbg !745 ; [debug line = 76:57@319:5] [debug variable = qt.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %qt.v, [32 x i32]* %t.x.v, [32 x i32]* %t.y.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_sub([32 x i32]* %a.v, [32 x i32]* %r.y.v, [32 x i32]* %r.x.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_add([32 x i32]* %b.v, [32 x i32]* %r.y.v, [32 x i32]* %r.x.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_sub([32 x i32]* %t1.v, [32 x i32]* %t.y.v, [32 x i32]* %t.x.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_add([32 x i32]* %t2.v, [32 x i32]* %t.y.v, [32 x i32]* %t.x.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.1([32 x i32]* %a.v, [32 x i32]* %t1.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.1([32 x i32]* %b.v, [32 x i32]* %t2.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_sub([32 x i32]* %e.v, [32 x i32]* %b.v, [32 x i32]* %a.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_add([32 x i32]* %h.v, [32 x i32]* %b.v, [32 x i32]* %a.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %c.v, [32 x i32]* %r.t.v, [32 x i32]* %qt.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.1([32 x i32]* %c.v, [32 x i32]* @ge25519_ec2d.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_add.1([32 x i32]* %d.v, [32 x i32]* %r.z.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_sub([32 x i32]* %f.v, [32 x i32]* %d.v, [32 x i32]* %c.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_add([32 x i32]* %g.v, [32 x i32]* %d.v, [32 x i32]* %c.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %r.x.v, [32 x i32]* %e.v, [32 x i32]* %f.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %r.y.v, [32 x i32]* %h.v, [32 x i32]* %g.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %r.z.v, [32 x i32]* %g.v, [32 x i32]* %f.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %r.t.v, [32 x i32]* %e.v, [32 x i32]* %h.v)
  %i.23 = add i7 %i, 1, !dbg !746                 ; [#uses=1 type=i7] [debug line = 316:16]
  call void @llvm.dbg.value(metadata !{i7 %i.23}, i64 0, metadata !747), !dbg !746 ; [debug line = 316:16] [debug variable = i]
  br label %4, !dbg !746                          ; [debug line = 316:16]

; <label>:7                                       ; preds = %4
  ret void, !dbg !748                             ; [debug line = 321:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_sc25519_window3([85 x i8]* nocapture %r, [32 x i32]* nocapture %s.v) {
  call void @llvm.dbg.value(metadata !{[85 x i8]* %r}, i64 0, metadata !749), !dbg !760 ; [debug line = 211:58] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %s.v}, i64 0, metadata !761), !dbg !763 ; [debug line = 211:104] [debug variable = s.v]
  br label %1, !dbg !764                          ; [debug line = 215:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i4 [ 0, %0 ], [ %tmp.782, %3 ]         ; [#uses=4 type=i4]
  %i.cast = zext i4 %i to i7, !dbg !764           ; [#uses=2 type=i7] [debug line = 215:7]
  %i.cast9 = zext i4 %i to i6, !dbg !764          ; [#uses=1 type=i6] [debug line = 215:7]
  %exitcond1 = icmp eq i4 %i, -6, !dbg !764       ; [#uses=1 type=i1] [debug line = 215:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %4, label %3, !dbg !764 ; [debug line = 215:7]

; <label>:3                                       ; preds = %1
  %_shl = shl nuw i6 %i.cast9, 2, !dbg !767       ; [#uses=1 type=i6] [debug line = 217:5]
  %_shl.cast = zext i6 %_shl to i7, !dbg !767     ; [#uses=1 type=i7] [debug line = 217:5]
  %tmp.749 = sub i7 %_shl.cast, %i.cast, !dbg !767 ; [#uses=3 type=i7] [debug line = 217:5]
  %tmp.776.cast = sext i7 %tmp.749 to i32, !dbg !767 ; [#uses=1 type=i32] [debug line = 217:5]
  %tmp.750 = zext i32 %tmp.776.cast to i64, !dbg !767 ; [#uses=1 type=i64] [debug line = 217:5]
  %s.v.addr.2 = getelementptr [32 x i32]* %s.v, i64 0, i64 %tmp.750, !dbg !767 ; [#uses=1 type=i32*] [debug line = 217:5]
  %s.v.load.2 = load i32* %s.v.addr.2, align 4, !dbg !767 ; [#uses=3 type=i32] [debug line = 217:5]
  %s.v.load.2.cast8 = trunc i32 %s.v.load.2 to i14, !dbg !767 ; [#uses=1 type=i14] [debug line = 217:5]
  %s.v.load.2.cast = trunc i32 %s.v.load.2 to i11, !dbg !767 ; [#uses=1 type=i11] [debug line = 217:5]
  %tmp.778.cast = trunc i32 %s.v.load.2 to i3, !dbg !767 ; [#uses=1 type=i3] [debug line = 217:5]
  %tmp.779.cast = zext i3 %tmp.778.cast to i8, !dbg !767 ; [#uses=1 type=i8] [debug line = 217:5]
  %tmp.751 = shl nuw i7 %i.cast, 3, !dbg !767     ; [#uses=8 type=i7] [debug line = 217:5]
  %tmp.752 = zext i7 %tmp.751 to i64, !dbg !767   ; [#uses=1 type=i64] [debug line = 217:5]
  %r.addr.5 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.752, !dbg !767 ; [#uses=1 type=i8*] [debug line = 217:5]
  store i8 %tmp.779.cast, i8* %r.addr.5, align 1, !dbg !767 ; [debug line = 217:5]
  %tmp.753 = lshr i11 %s.v.load.2.cast, 3, !dbg !769 ; [#uses=1 type=i11] [debug line = 218:5]
  %tmp.783.cast = trunc i11 %tmp.753 to i3, !dbg !769 ; [#uses=1 type=i3] [debug line = 218:5]
  %tmp.784.cast = zext i3 %tmp.783.cast to i8, !dbg !769 ; [#uses=1 type=i8] [debug line = 218:5]
  %tmp.754 = or i7 %tmp.751, 1, !dbg !769         ; [#uses=1 type=i7] [debug line = 218:5]
  %tmp.755 = zext i7 %tmp.754 to i64, !dbg !769   ; [#uses=1 type=i64] [debug line = 218:5]
  %r.addr.6 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.755, !dbg !769 ; [#uses=1 type=i8*] [debug line = 218:5]
  store i8 %tmp.784.cast, i8* %r.addr.6, align 1, !dbg !769 ; [debug line = 218:5]
  %tmp.756 = lshr i14 %s.v.load.2.cast8, 6, !dbg !770 ; [#uses=1 type=i14] [debug line = 219:5]
  %tmp.788.cast = trunc i14 %tmp.756 to i3, !dbg !770 ; [#uses=1 type=i3] [debug line = 219:5]
  %tmp.757 = or i7 %tmp.751, 2, !dbg !770         ; [#uses=1 type=i7] [debug line = 219:5]
  %tmp.758 = zext i7 %tmp.757 to i64, !dbg !770   ; [#uses=1 type=i64] [debug line = 219:5]
  %r.addr.7 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.758, !dbg !770 ; [#uses=1 type=i8*] [debug line = 219:5]
  %tmp.759 = add i7 %tmp.749, 1, !dbg !771        ; [#uses=1 type=i7] [debug line = 220:5]
  %tmp.792.cast = sext i7 %tmp.759 to i32, !dbg !771 ; [#uses=1 type=i32] [debug line = 220:5]
  %tmp.760 = zext i32 %tmp.792.cast to i64, !dbg !771 ; [#uses=1 type=i64] [debug line = 220:5]
  %s.v.addr.3 = getelementptr [32 x i32]* %s.v, i64 0, i64 %tmp.760, !dbg !771 ; [#uses=1 type=i32*] [debug line = 220:5]
  %s.v.load.3 = load i32* %s.v.addr.3, align 4, !dbg !771 ; [#uses=4 type=i32] [debug line = 220:5]
  %s.v.load.3.cast7 = trunc i32 %s.v.load.3 to i15, !dbg !771 ; [#uses=1 type=i15] [debug line = 220:5]
  %s.v.load.3.cast6 = trunc i32 %s.v.load.3 to i12, !dbg !771 ; [#uses=1 type=i12] [debug line = 220:5]
  %s.v.load.3.cast = trunc i32 %s.v.load.3 to i9, !dbg !771 ; [#uses=1 type=i9] [debug line = 220:5]
  %tmp.794.cast = trunc i32 %s.v.load.3 to i3, !dbg !771 ; [#uses=1 type=i3] [debug line = 220:5]
  %tmp.761 = shl i3 %tmp.794.cast, 2, !dbg !771   ; [#uses=1 type=i3] [debug line = 220:5]
  %tmp.762 = xor i3 %tmp.761, %tmp.788.cast, !dbg !771 ; [#uses=1 type=i3] [debug line = 220:5]
  %tmp.797.cast = zext i3 %tmp.762 to i8, !dbg !771 ; [#uses=1 type=i8] [debug line = 220:5]
  store i8 %tmp.797.cast, i8* %r.addr.7, align 1, !dbg !771 ; [debug line = 220:5]
  %tmp.763 = lshr i9 %s.v.load.3.cast, 1, !dbg !772 ; [#uses=1 type=i9] [debug line = 221:5]
  %tmp.799.cast = trunc i9 %tmp.763 to i3, !dbg !772 ; [#uses=1 type=i3] [debug line = 221:5]
  %tmp.800.cast = zext i3 %tmp.799.cast to i8, !dbg !772 ; [#uses=1 type=i8] [debug line = 221:5]
  %tmp.764 = or i7 %tmp.751, 3, !dbg !772         ; [#uses=1 type=i7] [debug line = 221:5]
  %tmp.765 = zext i7 %tmp.764 to i64, !dbg !772   ; [#uses=1 type=i64] [debug line = 221:5]
  %r.addr.8 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.765, !dbg !772 ; [#uses=1 type=i8*] [debug line = 221:5]
  store i8 %tmp.800.cast, i8* %r.addr.8, align 1, !dbg !772 ; [debug line = 221:5]
  %tmp.766 = lshr i12 %s.v.load.3.cast6, 4, !dbg !773 ; [#uses=1 type=i12] [debug line = 222:5]
  %tmp.804.cast = trunc i12 %tmp.766 to i3, !dbg !773 ; [#uses=1 type=i3] [debug line = 222:5]
  %tmp.805.cast = zext i3 %tmp.804.cast to i8, !dbg !773 ; [#uses=1 type=i8] [debug line = 222:5]
  %tmp.767 = or i7 %tmp.751, 4, !dbg !773         ; [#uses=1 type=i7] [debug line = 222:5]
  %tmp.768 = zext i7 %tmp.767 to i64, !dbg !773   ; [#uses=1 type=i64] [debug line = 222:5]
  %r.addr.9 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.768, !dbg !773 ; [#uses=1 type=i8*] [debug line = 222:5]
  store i8 %tmp.805.cast, i8* %r.addr.9, align 1, !dbg !773 ; [debug line = 222:5]
  %tmp.769 = lshr i15 %s.v.load.3.cast7, 7, !dbg !774 ; [#uses=1 type=i15] [debug line = 223:5]
  %tmp.809.cast = trunc i15 %tmp.769 to i3, !dbg !774 ; [#uses=1 type=i3] [debug line = 223:5]
  %tmp.770 = or i7 %tmp.751, 5, !dbg !774         ; [#uses=1 type=i7] [debug line = 223:5]
  %tmp.771 = zext i7 %tmp.770 to i64, !dbg !774   ; [#uses=1 type=i64] [debug line = 223:5]
  %r.addr.10 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.771, !dbg !774 ; [#uses=1 type=i8*] [debug line = 223:5]
  %tmp.772 = add i7 %tmp.749, 2, !dbg !775        ; [#uses=1 type=i7] [debug line = 224:5]
  %tmp.813.cast = sext i7 %tmp.772 to i32, !dbg !775 ; [#uses=1 type=i32] [debug line = 224:5]
  %tmp.773 = zext i32 %tmp.813.cast to i64, !dbg !775 ; [#uses=1 type=i64] [debug line = 224:5]
  %s.v.addr.4 = getelementptr [32 x i32]* %s.v, i64 0, i64 %tmp.773, !dbg !775 ; [#uses=1 type=i32*] [debug line = 224:5]
  %s.v.load.4 = load i32* %s.v.addr.4, align 4, !dbg !775 ; [#uses=3 type=i32] [debug line = 224:5]
  %s.v.load.4.cast5 = trunc i32 %s.v.load.4 to i13, !dbg !775 ; [#uses=1 type=i13] [debug line = 224:5]
  %s.v.load.4.cast = trunc i32 %s.v.load.4 to i10, !dbg !775 ; [#uses=1 type=i10] [debug line = 224:5]
  %tmp.815.cast = trunc i32 %s.v.load.4 to i3, !dbg !775 ; [#uses=1 type=i3] [debug line = 224:5]
  %tmp.774 = shl i3 %tmp.815.cast, 1, !dbg !775   ; [#uses=1 type=i3] [debug line = 224:5]
  %tmp.775 = xor i3 %tmp.774, %tmp.809.cast, !dbg !775 ; [#uses=1 type=i3] [debug line = 224:5]
  %tmp.818.cast = zext i3 %tmp.775 to i8, !dbg !775 ; [#uses=1 type=i8] [debug line = 224:5]
  store i8 %tmp.818.cast, i8* %r.addr.10, align 1, !dbg !775 ; [debug line = 224:5]
  %tmp.776 = lshr i10 %s.v.load.4.cast, 2, !dbg !776 ; [#uses=1 type=i10] [debug line = 225:5]
  %tmp.820.cast = trunc i10 %tmp.776 to i3, !dbg !776 ; [#uses=1 type=i3] [debug line = 225:5]
  %tmp.821.cast = zext i3 %tmp.820.cast to i8, !dbg !776 ; [#uses=1 type=i8] [debug line = 225:5]
  %tmp.777 = or i7 %tmp.751, 6, !dbg !776         ; [#uses=1 type=i7] [debug line = 225:5]
  %tmp.778 = zext i7 %tmp.777 to i64, !dbg !776   ; [#uses=1 type=i64] [debug line = 225:5]
  %r.addr.11 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.778, !dbg !776 ; [#uses=1 type=i8*] [debug line = 225:5]
  store i8 %tmp.821.cast, i8* %r.addr.11, align 1, !dbg !776 ; [debug line = 225:5]
  %tmp.779 = lshr i13 %s.v.load.4.cast5, 5, !dbg !777 ; [#uses=1 type=i13] [debug line = 226:5]
  %tmp.825.cast = trunc i13 %tmp.779 to i3, !dbg !777 ; [#uses=1 type=i3] [debug line = 226:5]
  %tmp.826.cast = zext i3 %tmp.825.cast to i8, !dbg !777 ; [#uses=1 type=i8] [debug line = 226:5]
  %tmp.780 = or i7 %tmp.751, 7, !dbg !777         ; [#uses=1 type=i7] [debug line = 226:5]
  %tmp.781 = zext i7 %tmp.780 to i64, !dbg !777   ; [#uses=1 type=i64] [debug line = 226:5]
  %r.addr.12 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.781, !dbg !777 ; [#uses=1 type=i8*] [debug line = 226:5]
  store i8 %tmp.826.cast, i8* %r.addr.12, align 1, !dbg !777 ; [debug line = 226:5]
  %tmp.782 = add i4 %i, 1, !dbg !778              ; [#uses=1 type=i4] [debug line = 215:16]
  br label %1, !dbg !778                          ; [debug line = 215:16]

; <label>:4                                       ; preds = %1
  %s.v.addr = getelementptr [32 x i32]* %s.v, i64 0, i64 30, !dbg !779 ; [#uses=1 type=i32*] [debug line = 228:3]
  %s.v.load = load i32* %s.v.addr, align 4, !dbg !779 ; [#uses=3 type=i32] [debug line = 228:3]
  %s.v.load.cast4 = trunc i32 %s.v.load to i14, !dbg !779 ; [#uses=1 type=i14] [debug line = 228:3]
  %s.v.load.cast = trunc i32 %s.v.load to i11, !dbg !779 ; [#uses=1 type=i11] [debug line = 228:3]
  %tmp.cast = trunc i32 %s.v.load to i3, !dbg !779 ; [#uses=1 type=i3] [debug line = 228:3]
  %tmp..cast = zext i3 %tmp.cast to i8, !dbg !779 ; [#uses=1 type=i8] [debug line = 228:3]
  %r.addr = getelementptr [85 x i8]* %r, i64 0, i64 80, !dbg !779 ; [#uses=1 type=i8*] [debug line = 228:3]
  store i8 %tmp..cast, i8* %r.addr, align 1, !dbg !779 ; [debug line = 228:3]
  %tmp. = lshr i11 %s.v.load.cast, 3, !dbg !780   ; [#uses=1 type=i11] [debug line = 229:3]
  %tmp.761.cast = trunc i11 %tmp. to i3, !dbg !780 ; [#uses=1 type=i3] [debug line = 229:3]
  %tmp.762.cast = zext i3 %tmp.761.cast to i8, !dbg !780 ; [#uses=1 type=i8] [debug line = 229:3]
  %r.addr.1 = getelementptr [85 x i8]* %r, i64 0, i64 81, !dbg !780 ; [#uses=1 type=i8*] [debug line = 229:3]
  store i8 %tmp.762.cast, i8* %r.addr.1, align 1, !dbg !780 ; [debug line = 229:3]
  %tmp.744 = lshr i14 %s.v.load.cast4, 6, !dbg !781 ; [#uses=1 type=i14] [debug line = 230:3]
  %tmp.764.cast = trunc i14 %tmp.744 to i3, !dbg !781 ; [#uses=1 type=i3] [debug line = 230:3]
  %r.addr.2 = getelementptr [85 x i8]* %r, i64 0, i64 82, !dbg !781 ; [#uses=1 type=i8*] [debug line = 230:3]
  %s.v.addr.1 = getelementptr [32 x i32]* %s.v, i64 0, i64 31, !dbg !782 ; [#uses=1 type=i32*] [debug line = 231:3]
  %s.v.load.1 = load i32* %s.v.addr.1, align 4, !dbg !782 ; [#uses=3 type=i32] [debug line = 231:3]
  %s.v.load.1.cast3 = trunc i32 %s.v.load.1 to i12, !dbg !782 ; [#uses=1 type=i12] [debug line = 231:3]
  %s.v.load.1.cast = trunc i32 %s.v.load.1 to i9, !dbg !782 ; [#uses=1 type=i9] [debug line = 231:3]
  %tmp.766.cast = trunc i32 %s.v.load.1 to i3, !dbg !782 ; [#uses=1 type=i3] [debug line = 231:3]
  %tmp.745 = shl i3 %tmp.766.cast, 2, !dbg !782   ; [#uses=1 type=i3] [debug line = 231:3]
  %tmp.746 = xor i3 %tmp.745, %tmp.764.cast, !dbg !782 ; [#uses=1 type=i3] [debug line = 231:3]
  %tmp.769.cast = zext i3 %tmp.746 to i8, !dbg !782 ; [#uses=1 type=i8] [debug line = 231:3]
  store i8 %tmp.769.cast, i8* %r.addr.2, align 1, !dbg !782 ; [debug line = 231:3]
  %tmp.747 = lshr i9 %s.v.load.1.cast, 1, !dbg !783 ; [#uses=1 type=i9] [debug line = 232:3]
  %tmp.771.cast = trunc i9 %tmp.747 to i3, !dbg !783 ; [#uses=1 type=i3] [debug line = 232:3]
  %tmp.772.cast = zext i3 %tmp.771.cast to i8, !dbg !783 ; [#uses=1 type=i8] [debug line = 232:3]
  %r.addr.3 = getelementptr [85 x i8]* %r, i64 0, i64 83, !dbg !783 ; [#uses=1 type=i8*] [debug line = 232:3]
  store i8 %tmp.772.cast, i8* %r.addr.3, align 1, !dbg !783 ; [debug line = 232:3]
  %tmp.748 = lshr i12 %s.v.load.1.cast3, 4, !dbg !784 ; [#uses=1 type=i12] [debug line = 233:3]
  %tmp.774.cast = trunc i12 %tmp.748 to i3, !dbg !784 ; [#uses=1 type=i3] [debug line = 233:3]
  %tmp.775.cast = zext i3 %tmp.774.cast to i8, !dbg !784 ; [#uses=1 type=i8] [debug line = 233:3]
  %r.addr.4 = getelementptr [85 x i8]* %r, i64 0, i64 84, !dbg !784 ; [#uses=3 type=i8*] [debug line = 233:3]
  store i8 %tmp.775.cast, i8* %r.addr.4, align 1, !dbg !784 ; [debug line = 233:3]
  br label %5, !dbg !785                          ; [debug line = 237:7]

; <label>:5                                       ; preds = %7, %4
  %carry = phi i1 [ false, %4 ], [ %carry.1.cast, %7 ] ; [#uses=2 type=i1]
  %i.1 = phi i7 [ 0, %4 ], [ %i.24, %7 ]          ; [#uses=3 type=i7]
  %carry.cast = zext i1 %carry to i8, !dbg !785   ; [#uses=2 type=i8] [debug line = 237:7]
  %exitcond = icmp eq i7 %i.1, -44, !dbg !785     ; [#uses=1 type=i1] [debug line = 237:7]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 84, i64 84, i64 84) ; [#uses=0 type=i32]
  br i1 %exitcond, label %8, label %7, !dbg !785  ; [debug line = 237:7]

; <label>:7                                       ; preds = %5
  %tmp.784 = zext i7 %i.1 to i64, !dbg !787       ; [#uses=1 type=i64] [debug line = 239:5]
  %r.addr.13 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.784, !dbg !787 ; [#uses=2 type=i8*] [debug line = 239:5]
  %r.load.1 = load i8* %r.addr.13, align 1, !dbg !787 ; [#uses=2 type=i8] [debug line = 239:5]
  %tmp = trunc i8 %r.load.1 to i3                 ; [#uses=1 type=i3]
  %tmp.77 = zext i1 %carry to i3                  ; [#uses=1 type=i3]
  %tmp.785 = add i8 %r.load.1, %carry.cast, !dbg !787 ; [#uses=1 type=i8] [debug line = 239:5]
  %tmp.832.cast = add i3 %tmp.77, %tmp, !dbg !789 ; [#uses=3 type=i3] [debug line = 240:5]
  %tmp.8 = lshr i8 %tmp.785, 3, !dbg !789         ; [#uses=1 type=i8] [debug line = 240:5]
  %tmp.9 = trunc i8 %tmp.8 to i5, !dbg !789       ; [#uses=1 type=i5] [debug line = 240:5]
  %i.24 = add i7 %i.1, 1, !dbg !789               ; [#uses=2 type=i7] [debug line = 240:5]
  %tmp.786 = zext i7 %i.24 to i64, !dbg !789      ; [#uses=1 type=i64] [debug line = 240:5]
  %r.addr.14 = getelementptr [85 x i8]* %r, i64 0, i64 %tmp.786, !dbg !789 ; [#uses=2 type=i8*] [debug line = 240:5]
  %r.load.2 = load i8* %r.addr.14, align 1, !dbg !789 ; [#uses=1 type=i8] [debug line = 240:5]
  %tmp.787 = sext i5 %tmp.9 to i8, !dbg !789      ; [#uses=1 type=i8] [debug line = 240:5]
  %tmp.788 = add i8 %r.load.2, %tmp.787, !dbg !789 ; [#uses=1 type=i8] [debug line = 240:5]
  store i8 %tmp.788, i8* %r.addr.14, align 1, !dbg !789 ; [debug line = 240:5]
  %tmp.836.cast1 = zext i3 %tmp.832.cast to i5, !dbg !790 ; [#uses=1 type=i5] [debug line = 241:5]
  %tmp.836.cast = zext i3 %tmp.832.cast to i4, !dbg !790 ; [#uses=1 type=i4] [debug line = 241:5]
  %carry.1 = lshr i3 %tmp.832.cast, 2, !dbg !791  ; [#uses=1 type=i3] [debug line = 242:5]
  %carry.1.cast = trunc i3 %carry.1 to i1, !dbg !791 ; [#uses=1 type=i1] [debug line = 242:5]
  call void @llvm.dbg.value(metadata !{i3 %carry.1}, i64 0, metadata !792), !dbg !791 ; [debug line = 242:5] [debug variable = carry]
  %tmp.789 = shl nuw i4 %tmp.836.cast, 1, !dbg !794 ; [#uses=1 type=i4] [debug line = 243:5]
  %tmp.790 = and i4 %tmp.789, -8, !dbg !794       ; [#uses=1 type=i4] [debug line = 243:5]
  %tmp.838.cast = zext i4 %tmp.790 to i5, !dbg !794 ; [#uses=1 type=i5] [debug line = 243:5]
  %tmp.791 = sub i5 %tmp.836.cast1, %tmp.838.cast, !dbg !794 ; [#uses=1 type=i5] [debug line = 243:5]
  %tmp.839.cast = sext i5 %tmp.791 to i8, !dbg !794 ; [#uses=1 type=i8] [debug line = 243:5]
  store i8 %tmp.839.cast, i8* %r.addr.13, align 1, !dbg !794 ; [debug line = 243:5]
  call void @llvm.dbg.value(metadata !{i7 %i.24}, i64 0, metadata !795), !dbg !796 ; [debug line = 237:16] [debug variable = i]
  br label %5, !dbg !796                          ; [debug line = 237:16]

; <label>:8                                       ; preds = %5
  %carry.cast.lcssa = phi i8 [ %carry.cast, %5 ]  ; [#uses=1 type=i8]
  %r.load = load i8* %r.addr.4, align 1, !dbg !797 ; [#uses=1 type=i8] [debug line = 245:3]
  %tmp.783 = add i8 %carry.cast.lcssa, %r.load, !dbg !797 ; [#uses=1 type=i8] [debug line = 245:3]
  store i8 %tmp.783, i8* %r.addr.4, align 1, !dbg !797 ; [debug line = 245:3]
  ret void, !dbg !798                             ; [debug line = 246:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_sc25519_mul([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %y.v) {
  %t = alloca [64 x i32], align 16                ; [#uses=5 type=[64 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !799), !dbg !804 ; [debug line = 183:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !805), !dbg !807 ; [debug line = 183:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !808), !dbg !810 ; [debug line = 183:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !811), !dbg !814 ; [debug line = 186:17] [debug variable = t]
  br label %1, !dbg !815                          ; [debug line = 187:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i7 [ 0, %0 ], [ %i.25, %3 ]            ; [#uses=3 type=i7]
  %exitcond3 = icmp eq i7 %i, -64, !dbg !815      ; [#uses=1 type=i1] [debug line = 187:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %.preheader5.preheader, label %3, !dbg !815 ; [debug line = 187:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !817                ; [debug line = 189:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i7 %i to i64, !dbg !819             ; [#uses=1 type=i64] [debug line = 187:20]
  %t.addr = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp, !dbg !819 ; [#uses=1 type=i32*] [debug line = 187:20]
  store i32 0, i32* %t.addr, align 4, !dbg !819   ; [debug line = 187:20]
  %i.25 = add i7 %i, 1, !dbg !820                 ; [#uses=1 type=i7] [debug line = 187:16]
  call void @llvm.dbg.value(metadata !{i7 %i.25}, i64 0, metadata !821), !dbg !820 ; [debug line = 187:16] [debug variable = i]
  br label %1, !dbg !820                          ; [debug line = 187:16]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %i.1 = phi i6 [ %i.27, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i.1, -32, !dbg !817    ; [#uses=1 type=i1] [debug line = 189:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !817 ; [debug line = 189:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !822                 ; [debug line = 194:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp. = zext i6 %i.1 to i64, !dbg !824          ; [#uses=1 type=i64] [debug line = 191:7]
  %x.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp., !dbg !824 ; [#uses=1 type=i32*] [debug line = 191:7]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !824 ; [#uses=1 type=i32] [debug line = 191:7]
  br label %.preheader4, !dbg !826                ; [debug line = 190:9]

.preheader4:                                      ; preds = %6, %.preheader4.preheader
  %j = phi i6 [ %j.1, %6 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !826      ; [#uses=1 type=i1] [debug line = 190:9]
  %5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %7, label %6, !dbg !826 ; [debug line = 190:9]

; <label>:6                                       ; preds = %.preheader4
  %tmp.795 = zext i6 %j to i64, !dbg !824         ; [#uses=1 type=i64] [debug line = 191:7]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp.795, !dbg !824 ; [#uses=1 type=i32*] [debug line = 191:7]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !824 ; [#uses=1 type=i32] [debug line = 191:7]
  %tmp.796 = mul i32 %y.v.load, %x.v.load, !dbg !824 ; [#uses=1 type=i32] [debug line = 191:7]
  %tmp.797 = add i6 %j, %i.1, !dbg !824           ; [#uses=1 type=i6] [debug line = 191:7]
  %tmp.798 = zext i6 %tmp.797 to i64, !dbg !824   ; [#uses=1 type=i64] [debug line = 191:7]
  %t.addr.4 = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp.798, !dbg !824 ; [#uses=2 type=i32*] [debug line = 191:7]
  %t.load.2 = load i32* %t.addr.4, align 4, !dbg !824 ; [#uses=1 type=i32] [debug line = 191:7]
  %tmp.799 = add i32 %tmp.796, %t.load.2, !dbg !824 ; [#uses=1 type=i32] [debug line = 191:7]
  store i32 %tmp.799, i32* %t.addr.4, align 4, !dbg !824 ; [debug line = 191:7]
  %j.1 = add i6 %j, 1, !dbg !827                  ; [#uses=1 type=i6] [debug line = 190:18]
  call void @llvm.dbg.value(metadata !{i6 %j.1}, i64 0, metadata !828), !dbg !827 ; [debug line = 190:18] [debug variable = j]
  br label %.preheader4, !dbg !827                ; [debug line = 190:18]

; <label>:7                                       ; preds = %.preheader4
  %i.27 = add i6 %i.1, 1, !dbg !829               ; [#uses=1 type=i6] [debug line = 189:16]
  call void @llvm.dbg.value(metadata !{i6 %i.27}, i64 0, metadata !821), !dbg !829 ; [debug line = 189:16] [debug variable = i]
  br label %.preheader5, !dbg !829                ; [debug line = 189:16]

.preheader:                                       ; preds = %9, %.preheader.preheader
  %i.2 = phi i6 [ %i.26, %9 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i.2, -1, !dbg !822      ; [#uses=1 type=i1] [debug line = 194:7]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  br i1 %exitcond, label %10, label %9, !dbg !822 ; [debug line = 194:7]

; <label>:9                                       ; preds = %.preheader
  %tmp.792 = zext i6 %i.2 to i64, !dbg !830       ; [#uses=1 type=i64] [debug line = 196:5]
  %t.addr.2 = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp.792, !dbg !830 ; [#uses=2 type=i32*] [debug line = 196:5]
  %t.load = load i32* %t.addr.2, align 4, !dbg !830 ; [#uses=2 type=i32] [debug line = 196:5]
  %t.load.cast = trunc i32 %t.load to i8, !dbg !830 ; [#uses=1 type=i8] [debug line = 196:5]
  %carry = lshr i32 %t.load, 8, !dbg !830         ; [#uses=1 type=i32] [debug line = 196:5]
  call void @llvm.dbg.value(metadata !{i32 %carry}, i64 0, metadata !832), !dbg !830 ; [debug line = 196:5] [debug variable = carry]
  %i.26 = add i6 %i.2, 1, !dbg !833               ; [#uses=2 type=i6] [debug line = 197:5]
  %tmp.793 = zext i6 %i.26 to i64, !dbg !833      ; [#uses=1 type=i64] [debug line = 197:5]
  %t.addr.3 = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp.793, !dbg !833 ; [#uses=2 type=i32*] [debug line = 197:5]
  %t.load.1 = load i32* %t.addr.3, align 4, !dbg !833 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp.794 = add i32 %carry, %t.load.1, !dbg !833 ; [#uses=1 type=i32] [debug line = 197:5]
  store i32 %tmp.794, i32* %t.addr.3, align 4, !dbg !833 ; [debug line = 197:5]
  %tmp.843.cast = zext i8 %t.load.cast to i32, !dbg !834 ; [#uses=1 type=i32] [debug line = 198:5]
  store i32 %tmp.843.cast, i32* %t.addr.2, align 4, !dbg !834 ; [debug line = 198:5]
  call void @llvm.dbg.value(metadata !{i6 %i.26}, i64 0, metadata !821), !dbg !835 ; [debug line = 194:16] [debug variable = i]
  br label %.preheader, !dbg !835                 ; [debug line = 194:16]

; <label>:10                                      ; preds = %.preheader
  call fastcc void @barrett_reduce([32 x i32]* %r.v, [64 x i32]* %t), !dbg !836 ; [debug line = 201:3]
  ret void, !dbg !837                             ; [debug line = 202:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_sc25519_add([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %y.v) {
  %t = alloca [32 x i8], align 16                 ; [#uses=2 type=[32 x i8]*]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %t}, metadata !599), !dbg !838 ; [debug line = 26:17@167:3] [debug variable = t]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !842), !dbg !844 ; [debug line = 157:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !845), !dbg !847 ; [debug line = 157:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !848), !dbg !850 ; [debug line = 157:159] [debug variable = y.v]
  br label %1, !dbg !851                          ; [debug line = 160:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.28, %3 ]            ; [#uses=3 type=i6]
  %exitcond1 = icmp eq i6 %i, -32, !dbg !851      ; [#uses=1 type=i1] [debug line = 160:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %.preheader.preheader, label %3, !dbg !851 ; [debug line = 160:7]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !853                 ; [debug line = 161:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !855             ; [#uses=2 type=i64] [debug line = 160:21]
  %x.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp, !dbg !855 ; [#uses=2 type=i32*] [debug line = 160:21]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !855 ; [#uses=1 type=i32] [debug line = 160:21]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp, !dbg !855 ; [#uses=1 type=i32*] [debug line = 160:21]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !855 ; [#uses=1 type=i32] [debug line = 160:21]
  %tmp. = add i32 %y.v.load, %x.v.load, !dbg !855 ; [#uses=1 type=i32] [debug line = 160:21]
  store i32 %tmp., i32* %x.v.addr, align 4, !dbg !855 ; [debug line = 160:21]
  %i.28 = add i6 %i, 1, !dbg !856                 ; [#uses=1 type=i6] [debug line = 160:16]
  call void @llvm.dbg.value(metadata !{i6 %i.28}, i64 0, metadata !857), !dbg !856 ; [debug line = 160:16] [debug variable = i]
  br label %1, !dbg !856                          ; [debug line = 160:16]

.preheader:                                       ; preds = %5, %.preheader.preheader
  %i.1 = phi i5 [ %i.29, %5 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i5]
  %exitcond = icmp eq i5 %i.1, -1, !dbg !853      ; [#uses=1 type=i1] [debug line = 161:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %.preheader1.preheader, label %5, !dbg !853 ; [debug line = 161:7]

.preheader1.preheader:                            ; preds = %.preheader
  br label %.preheader1, !dbg !858                ; [debug line = 35:3@167:3]

; <label>:5                                       ; preds = %.preheader
  %tmp.800 = zext i5 %i.1 to i64, !dbg !859       ; [#uses=1 type=i64] [debug line = 163:5]
  %x.v.addr.1 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.800, !dbg !859 ; [#uses=2 type=i32*] [debug line = 163:5]
  %x.v.load.1 = load i32* %x.v.addr.1, align 4, !dbg !859 ; [#uses=2 type=i32] [debug line = 163:5]
  %x.v.load.1.cast = trunc i32 %x.v.load.1 to i8, !dbg !859 ; [#uses=1 type=i8] [debug line = 163:5]
  %carry = lshr i32 %x.v.load.1, 8, !dbg !859     ; [#uses=1 type=i32] [debug line = 163:5]
  call void @llvm.dbg.value(metadata !{i32 %carry}, i64 0, metadata !861), !dbg !859 ; [debug line = 163:5] [debug variable = carry]
  %i.29 = add i5 %i.1, 1, !dbg !862               ; [#uses=2 type=i5] [debug line = 164:5]
  %tmp.801 = zext i5 %i.29 to i64, !dbg !862      ; [#uses=1 type=i64] [debug line = 164:5]
  %x.v.addr.2 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.801, !dbg !862 ; [#uses=2 type=i32*] [debug line = 164:5]
  %x.v.load.2 = load i32* %x.v.addr.2, align 4, !dbg !862 ; [#uses=1 type=i32] [debug line = 164:5]
  %tmp.802 = add i32 %carry, %x.v.load.2, !dbg !862 ; [#uses=1 type=i32] [debug line = 164:5]
  store i32 %tmp.802, i32* %x.v.addr.2, align 4, !dbg !862 ; [debug line = 164:5]
  %tmp.852.cast = zext i8 %x.v.load.1.cast to i32, !dbg !863 ; [#uses=1 type=i32] [debug line = 165:5]
  store i32 %tmp.852.cast, i32* %x.v.addr.1, align 4, !dbg !863 ; [debug line = 165:5]
  call void @llvm.dbg.value(metadata !{i5 %i.29}, i64 0, metadata !857), !dbg !864 ; [debug line = 161:16] [debug variable = i]
  br label %.preheader, !dbg !864                 ; [debug line = 161:16]

.preheader1:                                      ; preds = %7, %.preheader1.preheader
  %mask = phi i2 [ %phitmp.i.cast.cast, %7 ], [ undef, %.preheader1.preheader ] ; [#uses=1 type=i2]
  %pb.i = phi i1 [ %x.cast, %7 ], [ false, %.preheader1.preheader ] ; [#uses=1 type=i1]
  %i.i = phi i6 [ %i.30, %7 ], [ 0, %.preheader1.preheader ] ; [#uses=3 type=i6]
  %mask.cast = sext i2 %mask to i32, !dbg !858    ; [#uses=1 type=i32] [debug line = 35:3@167:3]
  %pb.i.cast = zext i1 %pb.i to i8, !dbg !858     ; [#uses=1 type=i8] [debug line = 35:3@167:3]
  call void @llvm.dbg.value(metadata !{i2 %mask}, i64 0, metadata !865), !dbg !858 ; [debug line = 35:3@167:3] [debug variable = mask]
  %exitcond2.i = icmp eq i6 %i.i, -32, !dbg !866  ; [#uses=1 type=i1] [debug line = 28:7@167:3]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond2.i, label %.preheader.i.preheader, label %7, !dbg !866 ; [debug line = 28:7@167:3]

.preheader.i.preheader:                           ; preds = %.preheader1
  %mask.cast.lcssa = phi i32 [ %mask.cast, %.preheader1 ] ; [#uses=1 type=i32]
  br label %.preheader.i, !dbg !867               ; [debug line = 36:7@167:3]

; <label>:7                                       ; preds = %.preheader1
  %tmp.i = zext i6 %i.i to i64, !dbg !868         ; [#uses=3 type=i64] [debug line = 30:5@167:3]
  %m.addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp.i, !dbg !868 ; [#uses=1 type=i8*] [debug line = 30:5@167:3]
  %m.load = load i8* %m.addr, align 1, !dbg !868  ; [#uses=1 type=i8] [debug line = 30:5@167:3]
  %pb.4 = add i8 %m.load, %pb.i.cast, !dbg !868   ; [#uses=1 type=i8] [debug line = 30:5@167:3]
  %pb.4.cast = zext i8 %pb.4 to i32, !dbg !868    ; [#uses=1 type=i32] [debug line = 30:5@167:3]
  call void @llvm.dbg.value(metadata !{i8 %pb.4}, i64 0, metadata !869), !dbg !868 ; [debug line = 30:5@167:3] [debug variable = pb]
  %x.v.addr.3 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.i, !dbg !870 ; [#uses=1 type=i32*] [debug line = 31:9@167:3]
  %a.assign = load i32* %x.v.addr.3, align 4, !dbg !870 ; [#uses=1 type=i32] [debug line = 31:9@167:3]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !871), !dbg !872 ; [debug line = 11:39@31:9@167:3] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i8 %pb.4}, i64 0, metadata !873), !dbg !874 ; [debug line = 11:55@31:9@167:3] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !875), !dbg !876 ; [debug line = 13:21@31:9@167:3] [debug variable = x]
  %x.3 = sub i32 %a.assign, %pb.4.cast, !dbg !877 ; [#uses=2 type=i32] [debug line = 14:3@31:9@167:3]
  call void @llvm.dbg.value(metadata !{i32 %x.3}, i64 0, metadata !875), !dbg !877 ; [debug line = 14:3@31:9@167:3] [debug variable = x]
  %x = lshr i32 %x.3, 31, !dbg !878               ; [#uses=1 type=i32] [debug line = 15:3@31:9@167:3]
  %x.cast = trunc i32 %x to i1, !dbg !878         ; [#uses=2 type=i1] [debug line = 15:3@31:9@167:3]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !875), !dbg !878 ; [debug line = 15:3@31:9@167:3] [debug variable = x]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !879), !dbg !870 ; [debug line = 31:9@167:3] [debug variable = b]
  %tmp.763.i = trunc i32 %x.3 to i8, !dbg !880    ; [#uses=1 type=i8] [debug line = 32:5@167:3]
  %t.addr = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp.i, !dbg !880 ; [#uses=1 type=i8*] [debug line = 32:5@167:3]
  store i8 %tmp.763.i, i8* %t.addr, align 1, !dbg !880 ; [debug line = 32:5@167:3]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !869), !dbg !881 ; [debug line = 33:5@167:3] [debug variable = pb]
  %i.30 = add i6 %i.i, 1, !dbg !882               ; [#uses=1 type=i6] [debug line = 28:16@167:3]
  call void @llvm.dbg.value(metadata !{i6 %i.30}, i64 0, metadata !883), !dbg !882 ; [debug line = 28:16@167:3] [debug variable = i]
  %phitmp.i = xor i1 %x.cast, true, !dbg !882     ; [#uses=1 type=i1] [debug line = 28:16@167:3]
  %phitmp.i.cast.cast = sext i1 %phitmp.i to i2, !dbg !882 ; [#uses=1 type=i2] [debug line = 28:16@167:3]
  br label %.preheader1, !dbg !882                ; [debug line = 28:16@167:3]

.preheader.i:                                     ; preds = %9, %.preheader.i.preheader
  %i.1.i = phi i6 [ %i.31, %9 ], [ 0, %.preheader.i.preheader ] ; [#uses=3 type=i6]
  %exitcond.i = icmp eq i6 %i.1.i, -32, !dbg !867 ; [#uses=1 type=i1] [debug line = 36:7@167:3]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %reduce_add_sub.exit, label %9, !dbg !867 ; [debug line = 36:7@167:3]

; <label>:9                                       ; preds = %.preheader.i
  %tmp.764.i = zext i6 %i.1.i to i64, !dbg !884   ; [#uses=2 type=i64] [debug line = 37:5@167:3]
  %x.v.addr.4 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.764.i, !dbg !884 ; [#uses=2 type=i32*] [debug line = 37:5@167:3]
  %x.v.load.4 = load i32* %x.v.addr.4, align 4, !dbg !884 ; [#uses=2 type=i32] [debug line = 37:5@167:3]
  %t.addr.5 = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp.764.i, !dbg !884 ; [#uses=1 type=i8*] [debug line = 37:5@167:3]
  %t.load = load i8* %t.addr.5, align 1, !dbg !884 ; [#uses=1 type=i8] [debug line = 37:5@167:3]
  %tmp.765.i = zext i8 %t.load to i32, !dbg !884  ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  %tmp.766.i = xor i32 %x.v.load.4, %tmp.765.i, !dbg !884 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  %tmp.767.i = and i32 %tmp.766.i, %mask.cast.lcssa, !dbg !884 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  %tmp.768.i = xor i32 %x.v.load.4, %tmp.767.i, !dbg !884 ; [#uses=1 type=i32] [debug line = 37:5@167:3]
  store i32 %tmp.768.i, i32* %x.v.addr.4, align 4, !dbg !884 ; [debug line = 37:5@167:3]
  %i.31 = add i6 %i.1.i, 1, !dbg !885             ; [#uses=1 type=i6] [debug line = 36:16@167:3]
  call void @llvm.dbg.value(metadata !{i6 %i.31}, i64 0, metadata !883), !dbg !885 ; [debug line = 36:16@167:3] [debug variable = i]
  br label %.preheader.i, !dbg !885               ; [debug line = 36:16@167:3]

reduce_add_sub.exit:                              ; preds = %.preheader.i
  ret void, !dbg !886                             ; [debug line = 168:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_sub.1([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %y.v) {
  %t = alloca [32 x i32], align 16                ; [#uses=4 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !887), !dbg !894 ; [debug line = 175:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !895), !dbg !897 ; [debug line = 175:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !898), !dbg !900 ; [debug line = 175:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t}, metadata !901), !dbg !903 ; [debug line = 178:17] [debug variable = t]
  %x.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !904 ; [#uses=3 type=i32*] [debug line = 179:3]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !904 ; [#uses=1 type=i32] [debug line = 179:3]
  %tmp = add i32 %x.v.load, 474, !dbg !904        ; [#uses=1 type=i32] [debug line = 179:3]
  %t.addr = getelementptr inbounds [32 x i32]* %t, i64 0, i64 0, !dbg !904 ; [#uses=1 type=i32*] [debug line = 179:3]
  store i32 %tmp, i32* %t.addr, align 16, !dbg !904 ; [debug line = 179:3]
  %x.v.addr.1 = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !905 ; [#uses=3 type=i32*] [debug line = 180:3]
  %x.v.load.1 = load i32* %x.v.addr.1, align 4, !dbg !905 ; [#uses=1 type=i32] [debug line = 180:3]
  %tmp. = add i32 %x.v.load.1, 254, !dbg !905     ; [#uses=1 type=i32] [debug line = 180:3]
  %t.addr.6 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 31, !dbg !905 ; [#uses=1 type=i32*] [debug line = 180:3]
  store i32 %tmp., i32* %t.addr.6, align 4, !dbg !905 ; [debug line = 180:3]
  br label %1, !dbg !906                          ; [debug line = 181:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i5 [ 1, %0 ], [ %i.32, %3 ]            ; [#uses=3 type=i5]
  %exitcond1 = icmp eq i5 %i, -1, !dbg !906       ; [#uses=1 type=i1] [debug line = 181:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %.preheader.preheader, label %3, !dbg !906 ; [debug line = 181:7]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !908                 ; [debug line = 182:7]

; <label>:3                                       ; preds = %1
  %tmp.803 = zext i5 %i to i64, !dbg !910         ; [#uses=2 type=i64] [debug line = 181:21]
  %x.v.addr.2 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.803, !dbg !910 ; [#uses=1 type=i32*] [debug line = 181:21]
  %x.v.load.2 = load i32* %x.v.addr.2, align 4, !dbg !910 ; [#uses=1 type=i32] [debug line = 181:21]
  %tmp.804 = add i32 %x.v.load.2, 510, !dbg !910  ; [#uses=1 type=i32] [debug line = 181:21]
  %t.addr.7 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp.803, !dbg !910 ; [#uses=1 type=i32*] [debug line = 181:21]
  store i32 %tmp.804, i32* %t.addr.7, align 4, !dbg !910 ; [debug line = 181:21]
  %i.32 = add i5 %i, 1, !dbg !911                 ; [#uses=1 type=i5] [debug line = 181:16]
  call void @llvm.dbg.value(metadata !{i5 %i.32}, i64 0, metadata !912), !dbg !911 ; [debug line = 181:16] [debug variable = i]
  br label %1, !dbg !911                          ; [debug line = 181:16]

.preheader:                                       ; preds = %5, %.preheader.preheader
  %i.1 = phi i6 [ %i.33, %5 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i.1, -32, !dbg !908     ; [#uses=1 type=i1] [debug line = 182:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %.preheader1.preheader, label %5, !dbg !908 ; [debug line = 182:7]

.preheader1.preheader:                            ; preds = %.preheader
  br label %.preheader1, !dbg !913                ; [debug line = 38:7@183:3]

; <label>:5                                       ; preds = %.preheader
  %tmp.805 = zext i6 %i.1 to i64, !dbg !918       ; [#uses=3 type=i64] [debug line = 182:21]
  %t.addr.8 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp.805, !dbg !918 ; [#uses=1 type=i32*] [debug line = 182:21]
  %t.load = load i32* %t.addr.8, align 4, !dbg !918 ; [#uses=1 type=i32] [debug line = 182:21]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp.805, !dbg !918 ; [#uses=1 type=i32*] [debug line = 182:21]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !918 ; [#uses=1 type=i32] [debug line = 182:21]
  %tmp.806 = sub i32 %t.load, %y.v.load, !dbg !918 ; [#uses=1 type=i32] [debug line = 182:21]
  %x.v.addr.3 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.805, !dbg !918 ; [#uses=1 type=i32*] [debug line = 182:21]
  store i32 %tmp.806, i32* %x.v.addr.3, align 4, !dbg !918 ; [debug line = 182:21]
  %i.33 = add i6 %i.1, 1, !dbg !919               ; [#uses=1 type=i6] [debug line = 182:16]
  call void @llvm.dbg.value(metadata !{i6 %i.33}, i64 0, metadata !912), !dbg !919 ; [debug line = 182:16] [debug variable = i]
  br label %.preheader, !dbg !919                 ; [debug line = 182:16]

.preheader1:                                      ; preds = %11, %.preheader1.preheader
  %rep.i = phi i3 [ %rep, %11 ], [ 0, %.preheader1.preheader ] ; [#uses=2 type=i3]
  %exitcond1.i = icmp eq i3 %rep.i, -4, !dbg !913 ; [#uses=1 type=i1] [debug line = 38:7@183:3]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_add_sub64.exit, label %7, !dbg !913 ; [debug line = 38:7@183:3]

; <label>:7                                       ; preds = %.preheader1
  %x.v.load.5 = load i32* %x.v.addr.1, align 4, !dbg !920 ; [#uses=2 type=i32] [debug line = 40:5@183:3]
  %x.v.load.5.cast = trunc i32 %x.v.load.5 to i7, !dbg !920 ; [#uses=1 type=i7] [debug line = 40:5@183:3]
  %t.4 = lshr i32 %x.v.load.5, 7, !dbg !920       ; [#uses=1 type=i32] [debug line = 40:5@183:3]
  %t.4.cast = trunc i32 %t.4 to i31, !dbg !920    ; [#uses=1 type=i31] [debug line = 40:5@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t.4}, i64 0, metadata !922), !dbg !920 ; [debug line = 40:5@183:3] [debug variable = t]
  %tmp.i.cast = zext i7 %x.v.load.5.cast to i32, !dbg !923 ; [#uses=1 type=i32] [debug line = 41:5@183:3]
  store i32 %tmp.i.cast, i32* %x.v.addr.1, align 4, !dbg !923 ; [debug line = 41:5@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t.4}, i64 0, metadata !924), !dbg !929 ; [debug line = 23:44@42:9@183:3] [debug variable = a]
  %t.2 = mul i31 %t.4.cast, 19, !dbg !930         ; [#uses=1 type=i31] [debug line = 25:3@42:9@183:3]
  %t.2.cast4 = zext i31 %t.2 to i32, !dbg !930    ; [#uses=1 type=i32] [debug line = 25:3@42:9@183:3]
  call void @llvm.dbg.value(metadata !{i31 %t.2}, i64 0, metadata !922), !dbg !928 ; [debug line = 42:9@183:3] [debug variable = t]
  %x.v.load.6 = load i32* %x.v.addr, align 4, !dbg !932 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  %tmp..i = add i32 %t.2.cast4, %x.v.load.6, !dbg !932 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  store i32 %tmp..i, i32* %x.v.addr, align 4, !dbg !932 ; [debug line = 43:5@183:3]
  br label %8, !dbg !933                          ; [debug line = 44:9@183:3]

; <label>:8                                       ; preds = %10, %7
  %i.i = phi i5 [ 0, %7 ], [ %i.34, %10 ]         ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !933    ; [#uses=1 type=i1] [debug line = 44:9@183:3]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %11, label %10, !dbg !933 ; [debug line = 44:9@183:3]

; <label>:10                                      ; preds = %8
  %tmp.759.i = zext i5 %i.i to i64, !dbg !935     ; [#uses=1 type=i64] [debug line = 46:7@183:3]
  %x.v.addr.5 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.759.i, !dbg !935 ; [#uses=2 type=i32*] [debug line = 46:7@183:3]
  %x.v.load.7 = load i32* %x.v.addr.5, align 4, !dbg !935 ; [#uses=2 type=i32] [debug line = 46:7@183:3]
  %x.v.load.7.cast = trunc i32 %x.v.load.7 to i8, !dbg !935 ; [#uses=1 type=i8] [debug line = 46:7@183:3]
  %t.3 = lshr i32 %x.v.load.7, 8, !dbg !935       ; [#uses=1 type=i32] [debug line = 46:7@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t.3}, i64 0, metadata !922), !dbg !935 ; [debug line = 46:7@183:3] [debug variable = t]
  %i.34 = add i5 %i.i, 1, !dbg !937               ; [#uses=2 type=i5] [debug line = 47:7@183:3]
  %tmp.760.i = zext i5 %i.34 to i64, !dbg !937    ; [#uses=1 type=i64] [debug line = 47:7@183:3]
  %x.v.addr.6 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.760.i, !dbg !937 ; [#uses=2 type=i32*] [debug line = 47:7@183:3]
  %x.v.load.8 = load i32* %x.v.addr.6, align 4, !dbg !937 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  %tmp.761.i = add i32 %t.3, %x.v.load.8, !dbg !937 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  store i32 %tmp.761.i, i32* %x.v.addr.6, align 4, !dbg !937 ; [debug line = 47:7@183:3]
  %tmp.762.i.cast = zext i8 %x.v.load.7.cast to i32, !dbg !938 ; [#uses=1 type=i32] [debug line = 48:7@183:3]
  store i32 %tmp.762.i.cast, i32* %x.v.addr.5, align 4, !dbg !938 ; [debug line = 48:7@183:3]
  call void @llvm.dbg.value(metadata !{i5 %i.34}, i64 0, metadata !939), !dbg !940 ; [debug line = 44:18@183:3] [debug variable = i]
  br label %8, !dbg !940                          ; [debug line = 44:18@183:3]

; <label>:11                                      ; preds = %8
  %rep = add i3 %rep.i, 1, !dbg !941              ; [#uses=1 type=i3] [debug line = 38:19@183:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !942), !dbg !941 ; [debug line = 38:19@183:3] [debug variable = rep]
  br label %.preheader1, !dbg !941                ; [debug line = 38:19@183:3]

reduce_add_sub64.exit:                            ; preds = %.preheader1
  ret void, !dbg !943                             ; [debug line = 184:1]
}

; [#uses=4]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_sub([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %x.v, [32 x i32]* nocapture %y.v) {
  %t = alloca [32 x i32], align 16                ; [#uses=4 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !887), !dbg !894 ; [debug line = 175:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !895), !dbg !897 ; [debug line = 175:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !898), !dbg !900 ; [debug line = 175:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t}, metadata !901), !dbg !903 ; [debug line = 178:17] [debug variable = t]
  %x.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 0, !dbg !904 ; [#uses=1 type=i32*] [debug line = 179:3]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !904 ; [#uses=1 type=i32] [debug line = 179:3]
  %tmp = add i32 %x.v.load, 474, !dbg !904        ; [#uses=1 type=i32] [debug line = 179:3]
  %t.addr = getelementptr inbounds [32 x i32]* %t, i64 0, i64 0, !dbg !904 ; [#uses=1 type=i32*] [debug line = 179:3]
  store i32 %tmp, i32* %t.addr, align 16, !dbg !904 ; [debug line = 179:3]
  %x.v.addr.1 = getelementptr [32 x i32]* %x.v, i64 0, i64 31, !dbg !905 ; [#uses=1 type=i32*] [debug line = 180:3]
  %x.v.load.1 = load i32* %x.v.addr.1, align 4, !dbg !905 ; [#uses=1 type=i32] [debug line = 180:3]
  %tmp. = add i32 %x.v.load.1, 254, !dbg !905     ; [#uses=1 type=i32] [debug line = 180:3]
  %t.addr.9 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 31, !dbg !905 ; [#uses=1 type=i32*] [debug line = 180:3]
  store i32 %tmp., i32* %t.addr.9, align 4, !dbg !905 ; [debug line = 180:3]
  br label %1, !dbg !906                          ; [debug line = 181:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i5 [ 1, %0 ], [ %i.35, %3 ]            ; [#uses=3 type=i5]
  %exitcond1 = icmp eq i5 %i, -1, !dbg !906       ; [#uses=1 type=i1] [debug line = 181:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %.preheader.preheader, label %3, !dbg !906 ; [debug line = 181:7]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !908                 ; [debug line = 182:7]

; <label>:3                                       ; preds = %1
  %tmp.807 = zext i5 %i to i64, !dbg !910         ; [#uses=2 type=i64] [debug line = 181:21]
  %x.v.addr.2 = getelementptr [32 x i32]* %x.v, i64 0, i64 %tmp.807, !dbg !910 ; [#uses=1 type=i32*] [debug line = 181:21]
  %x.v.load.2 = load i32* %x.v.addr.2, align 4, !dbg !910 ; [#uses=1 type=i32] [debug line = 181:21]
  %tmp.808 = add i32 %x.v.load.2, 510, !dbg !910  ; [#uses=1 type=i32] [debug line = 181:21]
  %t.addr.10 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp.807, !dbg !910 ; [#uses=1 type=i32*] [debug line = 181:21]
  store i32 %tmp.808, i32* %t.addr.10, align 4, !dbg !910 ; [debug line = 181:21]
  %i.35 = add i5 %i, 1, !dbg !911                 ; [#uses=1 type=i5] [debug line = 181:16]
  call void @llvm.dbg.value(metadata !{i5 %i.35}, i64 0, metadata !912), !dbg !911 ; [debug line = 181:16] [debug variable = i]
  br label %1, !dbg !911                          ; [debug line = 181:16]

.preheader:                                       ; preds = %5, %.preheader.preheader
  %i.1 = phi i6 [ %i.36, %5 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i.1, -32, !dbg !908     ; [#uses=1 type=i1] [debug line = 182:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %6, label %5, !dbg !908  ; [debug line = 182:7]

; <label>:5                                       ; preds = %.preheader
  %tmp.809 = zext i6 %i.1 to i64, !dbg !918       ; [#uses=3 type=i64] [debug line = 182:21]
  %t.addr.11 = getelementptr inbounds [32 x i32]* %t, i64 0, i64 %tmp.809, !dbg !918 ; [#uses=1 type=i32*] [debug line = 182:21]
  %t.load = load i32* %t.addr.11, align 4, !dbg !918 ; [#uses=1 type=i32] [debug line = 182:21]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp.809, !dbg !918 ; [#uses=1 type=i32*] [debug line = 182:21]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !918 ; [#uses=1 type=i32] [debug line = 182:21]
  %tmp.810 = sub i32 %t.load, %y.v.load, !dbg !918 ; [#uses=1 type=i32] [debug line = 182:21]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.809, !dbg !918 ; [#uses=1 type=i32*] [debug line = 182:21]
  store i32 %tmp.810, i32* %r.v.addr, align 4, !dbg !918 ; [debug line = 182:21]
  %i.36 = add i6 %i.1, 1, !dbg !919               ; [#uses=1 type=i6] [debug line = 182:16]
  call void @llvm.dbg.value(metadata !{i6 %i.36}, i64 0, metadata !912), !dbg !919 ; [debug line = 182:16] [debug variable = i]
  br label %.preheader, !dbg !919                 ; [debug line = 182:16]

; <label>:6                                       ; preds = %.preheader
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !944), !dbg !946 ; [debug line = 33:61@183:3] [debug variable = r.v]
  %r.v.addr.2 = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !920 ; [#uses=2 type=i32*] [debug line = 40:5@183:3]
  %r.v.addr.3 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !932 ; [#uses=2 type=i32*] [debug line = 43:5@183:3]
  br label %7, !dbg !913                          ; [debug line = 38:7@183:3]

; <label>:7                                       ; preds = %13, %6
  %rep.i = phi i3 [ 0, %6 ], [ %rep, %13 ]        ; [#uses=2 type=i3]
  %exitcond1.i = icmp eq i3 %rep.i, -4, !dbg !913 ; [#uses=1 type=i1] [debug line = 38:7@183:3]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_add_sub64.exit, label %9, !dbg !913 ; [debug line = 38:7@183:3]

; <label>:9                                       ; preds = %7
  %r.v.load = load i32* %r.v.addr.2, align 4, !dbg !920 ; [#uses=2 type=i32] [debug line = 40:5@183:3]
  %r.v.load.cast = trunc i32 %r.v.load to i7, !dbg !920 ; [#uses=1 type=i7] [debug line = 40:5@183:3]
  %t.8 = lshr i32 %r.v.load, 7, !dbg !920         ; [#uses=1 type=i32] [debug line = 40:5@183:3]
  %t.8.cast = trunc i32 %t.8 to i31, !dbg !920    ; [#uses=1 type=i31] [debug line = 40:5@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t.8}, i64 0, metadata !922), !dbg !920 ; [debug line = 40:5@183:3] [debug variable = t]
  %tmp.i.cast = zext i7 %r.v.load.cast to i32, !dbg !923 ; [#uses=1 type=i32] [debug line = 41:5@183:3]
  store i32 %tmp.i.cast, i32* %r.v.addr.2, align 4, !dbg !923 ; [debug line = 41:5@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t.8}, i64 0, metadata !924), !dbg !929 ; [debug line = 23:44@42:9@183:3] [debug variable = a]
  %t.6 = mul i31 %t.8.cast, 19, !dbg !930         ; [#uses=1 type=i31] [debug line = 25:3@42:9@183:3]
  %t.6.cast4 = zext i31 %t.6 to i32, !dbg !930    ; [#uses=1 type=i32] [debug line = 25:3@42:9@183:3]
  call void @llvm.dbg.value(metadata !{i31 %t.6}, i64 0, metadata !922), !dbg !928 ; [debug line = 42:9@183:3] [debug variable = t]
  %r.v.load.1 = load i32* %r.v.addr.3, align 4, !dbg !932 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  %tmp..i = add i32 %t.6.cast4, %r.v.load.1, !dbg !932 ; [#uses=1 type=i32] [debug line = 43:5@183:3]
  store i32 %tmp..i, i32* %r.v.addr.3, align 4, !dbg !932 ; [debug line = 43:5@183:3]
  br label %10, !dbg !933                         ; [debug line = 44:9@183:3]

; <label>:10                                      ; preds = %12, %9
  %i.i = phi i5 [ 0, %9 ], [ %i.37, %12 ]         ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !933    ; [#uses=1 type=i1] [debug line = 44:9@183:3]
  %11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %13, label %12, !dbg !933 ; [debug line = 44:9@183:3]

; <label>:12                                      ; preds = %10
  %tmp.759.i = zext i5 %i.i to i64, !dbg !935     ; [#uses=1 type=i64] [debug line = 46:7@183:3]
  %r.v.addr.4 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.759.i, !dbg !935 ; [#uses=2 type=i32*] [debug line = 46:7@183:3]
  %r.v.load.2 = load i32* %r.v.addr.4, align 4, !dbg !935 ; [#uses=2 type=i32] [debug line = 46:7@183:3]
  %r.v.load.2.cast = trunc i32 %r.v.load.2 to i8, !dbg !935 ; [#uses=1 type=i8] [debug line = 46:7@183:3]
  %t.7 = lshr i32 %r.v.load.2, 8, !dbg !935       ; [#uses=1 type=i32] [debug line = 46:7@183:3]
  call void @llvm.dbg.value(metadata !{i32 %t.7}, i64 0, metadata !922), !dbg !935 ; [debug line = 46:7@183:3] [debug variable = t]
  %i.37 = add i5 %i.i, 1, !dbg !937               ; [#uses=2 type=i5] [debug line = 47:7@183:3]
  %tmp.760.i = zext i5 %i.37 to i64, !dbg !937    ; [#uses=1 type=i64] [debug line = 47:7@183:3]
  %r.v.addr.5 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.760.i, !dbg !937 ; [#uses=2 type=i32*] [debug line = 47:7@183:3]
  %r.v.load.3 = load i32* %r.v.addr.5, align 4, !dbg !937 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  %tmp.761.i = add i32 %t.7, %r.v.load.3, !dbg !937 ; [#uses=1 type=i32] [debug line = 47:7@183:3]
  store i32 %tmp.761.i, i32* %r.v.addr.5, align 4, !dbg !937 ; [debug line = 47:7@183:3]
  %tmp.762.i.cast = zext i8 %r.v.load.2.cast to i32, !dbg !938 ; [#uses=1 type=i32] [debug line = 48:7@183:3]
  store i32 %tmp.762.i.cast, i32* %r.v.addr.4, align 4, !dbg !938 ; [debug line = 48:7@183:3]
  call void @llvm.dbg.value(metadata !{i5 %i.37}, i64 0, metadata !939), !dbg !940 ; [debug line = 44:18@183:3] [debug variable = i]
  br label %10, !dbg !940                         ; [debug line = 44:18@183:3]

; <label>:13                                      ; preds = %10
  %rep = add i3 %rep.i, 1, !dbg !941              ; [#uses=1 type=i3] [debug line = 38:19@183:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !942), !dbg !941 ; [debug line = 38:19@183:3] [debug variable = rep]
  br label %7, !dbg !941                          ; [debug line = 38:19@183:3]

reduce_add_sub64.exit:                            ; preds = %7
  ret void, !dbg !943                             ; [debug line = 184:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_pack([64 x i8]* nocapture %r, [32 x i32]* %x.v) {
  %y.v = alloca [32 x i32], align 4               ; [#uses=34 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %r}, i64 0, metadata !947), !dbg !951 ; [debug line = 98:57] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !952), !dbg !954 ; [debug line = 98:103] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %y.v}, metadata !955), !dbg !958 ; [debug line = 101:35] [debug variable = y.v]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 0, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 0, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load, i32* %y.v.addr, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.1 = getelementptr [32 x i32]* %y.v, i64 0, i64 1, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.3 = getelementptr [32 x i32]* %x.v, i64 0, i64 1, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.3 = load i32* %x.v.addr.3, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.3, i32* %y.v.addr.1, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.2 = getelementptr [32 x i32]* %y.v, i64 0, i64 2, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.4 = getelementptr [32 x i32]* %x.v, i64 0, i64 2, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.4 = load i32* %x.v.addr.4, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.4, i32* %y.v.addr.2, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.3 = getelementptr [32 x i32]* %y.v, i64 0, i64 3, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.5 = getelementptr [32 x i32]* %x.v, i64 0, i64 3, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.5 = load i32* %x.v.addr.5, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.5, i32* %y.v.addr.3, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.4 = getelementptr [32 x i32]* %y.v, i64 0, i64 4, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.6 = getelementptr [32 x i32]* %x.v, i64 0, i64 4, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.6 = load i32* %x.v.addr.6, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.6, i32* %y.v.addr.4, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.5 = getelementptr [32 x i32]* %y.v, i64 0, i64 5, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.7 = getelementptr [32 x i32]* %x.v, i64 0, i64 5, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.7 = load i32* %x.v.addr.7, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.7, i32* %y.v.addr.5, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.6 = getelementptr [32 x i32]* %y.v, i64 0, i64 6, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.8 = getelementptr [32 x i32]* %x.v, i64 0, i64 6, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.8 = load i32* %x.v.addr.8, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.8, i32* %y.v.addr.6, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.7 = getelementptr [32 x i32]* %y.v, i64 0, i64 7, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.9 = getelementptr [32 x i32]* %x.v, i64 0, i64 7, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.9 = load i32* %x.v.addr.9, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.9, i32* %y.v.addr.7, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.8 = getelementptr [32 x i32]* %y.v, i64 0, i64 8, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.10 = getelementptr [32 x i32]* %x.v, i64 0, i64 8, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.10 = load i32* %x.v.addr.10, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.10, i32* %y.v.addr.8, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.9 = getelementptr [32 x i32]* %y.v, i64 0, i64 9, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.11 = getelementptr [32 x i32]* %x.v, i64 0, i64 9, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.11 = load i32* %x.v.addr.11, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.11, i32* %y.v.addr.9, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.10 = getelementptr [32 x i32]* %y.v, i64 0, i64 10, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.12 = getelementptr [32 x i32]* %x.v, i64 0, i64 10, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.12 = load i32* %x.v.addr.12, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.12, i32* %y.v.addr.10, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.11 = getelementptr [32 x i32]* %y.v, i64 0, i64 11, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.13 = getelementptr [32 x i32]* %x.v, i64 0, i64 11, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.13 = load i32* %x.v.addr.13, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.13, i32* %y.v.addr.11, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.12 = getelementptr [32 x i32]* %y.v, i64 0, i64 12, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.14 = getelementptr [32 x i32]* %x.v, i64 0, i64 12, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.14 = load i32* %x.v.addr.14, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.14, i32* %y.v.addr.12, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.13 = getelementptr [32 x i32]* %y.v, i64 0, i64 13, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.15 = getelementptr [32 x i32]* %x.v, i64 0, i64 13, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.15 = load i32* %x.v.addr.15, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.15, i32* %y.v.addr.13, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.14 = getelementptr [32 x i32]* %y.v, i64 0, i64 14, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.16 = getelementptr [32 x i32]* %x.v, i64 0, i64 14, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.16 = load i32* %x.v.addr.16, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.16, i32* %y.v.addr.14, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.15 = getelementptr [32 x i32]* %y.v, i64 0, i64 15, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.17 = getelementptr [32 x i32]* %x.v, i64 0, i64 15, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.17 = load i32* %x.v.addr.17, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.17, i32* %y.v.addr.15, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.16 = getelementptr [32 x i32]* %y.v, i64 0, i64 16, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.18 = getelementptr [32 x i32]* %x.v, i64 0, i64 16, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.18 = load i32* %x.v.addr.18, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.18, i32* %y.v.addr.16, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.17 = getelementptr [32 x i32]* %y.v, i64 0, i64 17, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.19 = getelementptr [32 x i32]* %x.v, i64 0, i64 17, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.19 = load i32* %x.v.addr.19, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.19, i32* %y.v.addr.17, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.18 = getelementptr [32 x i32]* %y.v, i64 0, i64 18, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.20 = getelementptr [32 x i32]* %x.v, i64 0, i64 18, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.20 = load i32* %x.v.addr.20, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.20, i32* %y.v.addr.18, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.19 = getelementptr [32 x i32]* %y.v, i64 0, i64 19, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.21 = getelementptr [32 x i32]* %x.v, i64 0, i64 19, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.21 = load i32* %x.v.addr.21, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.21, i32* %y.v.addr.19, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.20 = getelementptr [32 x i32]* %y.v, i64 0, i64 20, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.22 = getelementptr [32 x i32]* %x.v, i64 0, i64 20, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.22 = load i32* %x.v.addr.22, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.22, i32* %y.v.addr.20, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.21 = getelementptr [32 x i32]* %y.v, i64 0, i64 21, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.23 = getelementptr [32 x i32]* %x.v, i64 0, i64 21, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.23 = load i32* %x.v.addr.23, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.23, i32* %y.v.addr.21, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.22 = getelementptr [32 x i32]* %y.v, i64 0, i64 22, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.24 = getelementptr [32 x i32]* %x.v, i64 0, i64 22, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.24 = load i32* %x.v.addr.24, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.24, i32* %y.v.addr.22, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.23 = getelementptr [32 x i32]* %y.v, i64 0, i64 23, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.25 = getelementptr [32 x i32]* %x.v, i64 0, i64 23, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.25 = load i32* %x.v.addr.25, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.25, i32* %y.v.addr.23, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.24 = getelementptr [32 x i32]* %y.v, i64 0, i64 24, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.26 = getelementptr [32 x i32]* %x.v, i64 0, i64 24, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.26 = load i32* %x.v.addr.26, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.26, i32* %y.v.addr.24, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.25 = getelementptr [32 x i32]* %y.v, i64 0, i64 25, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.27 = getelementptr [32 x i32]* %x.v, i64 0, i64 25, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.27 = load i32* %x.v.addr.27, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.27, i32* %y.v.addr.25, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.26 = getelementptr [32 x i32]* %y.v, i64 0, i64 26, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.28 = getelementptr [32 x i32]* %x.v, i64 0, i64 26, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.28 = load i32* %x.v.addr.28, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.28, i32* %y.v.addr.26, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.27 = getelementptr [32 x i32]* %y.v, i64 0, i64 27, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.29 = getelementptr [32 x i32]* %x.v, i64 0, i64 27, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.29 = load i32* %x.v.addr.29, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.29, i32* %y.v.addr.27, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.28 = getelementptr [32 x i32]* %y.v, i64 0, i64 28, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.30 = getelementptr [32 x i32]* %x.v, i64 0, i64 28, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.30 = load i32* %x.v.addr.30, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.30, i32* %y.v.addr.28, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.29 = getelementptr [32 x i32]* %y.v, i64 0, i64 29, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.31 = getelementptr [32 x i32]* %x.v, i64 0, i64 29, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.31 = load i32* %x.v.addr.31, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.31, i32* %y.v.addr.29, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.30 = getelementptr [32 x i32]* %y.v, i64 0, i64 30, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.32 = getelementptr [32 x i32]* %x.v, i64 0, i64 30, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.32 = load i32* %x.v.addr.32, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.32, i32* %y.v.addr.30, align 4, !dbg !959 ; [debug line = 101:41]
  %y.v.addr.31 = getelementptr [32 x i32]* %y.v, i64 0, i64 31, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.addr.33 = getelementptr [32 x i32]* %x.v, i64 0, i64 31, !dbg !959 ; [#uses=1 type=i32*] [debug line = 101:41]
  %x.v.load.33 = load i32* %x.v.addr.33, align 4, !dbg !959 ; [#uses=1 type=i32] [debug line = 101:41]
  store i32 %x.v.load.33, i32* %y.v.addr.31, align 4, !dbg !959 ; [debug line = 101:41]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_freeze([32 x i32]* %y.v), !dbg !960 ; [debug line = 102:3]
  br label %1, !dbg !961                          ; [debug line = 103:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.38, %3 ]            ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i, -32, !dbg !961       ; [#uses=1 type=i1] [debug line = 103:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %4, label %3, !dbg !961  ; [debug line = 103:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !963             ; [#uses=2 type=i64] [debug line = 104:5]
  %y.v.addr.32 = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp, !dbg !963 ; [#uses=1 type=i32*] [debug line = 104:5]
  %y.v.load = load i32* %y.v.addr.32, align 4, !dbg !963 ; [#uses=1 type=i32] [debug line = 104:5]
  %tmp. = trunc i32 %y.v.load to i8, !dbg !963    ; [#uses=1 type=i8] [debug line = 104:5]
  %r.addr = getelementptr [64 x i8]* %r, i64 0, i64 %tmp, !dbg !963 ; [#uses=1 type=i8*] [debug line = 104:5]
  store i8 %tmp., i8* %r.addr, align 1, !dbg !963 ; [debug line = 104:5]
  %i.38 = add i6 %i, 1, !dbg !964                 ; [#uses=1 type=i6] [debug line = 103:16]
  call void @llvm.dbg.value(metadata !{i6 %i.38}, i64 0, metadata !965), !dbg !964 ; [debug line = 103:16] [debug variable = i]
  br label %1, !dbg !964                          ; [debug line = 103:16]

; <label>:4                                       ; preds = %1
  ret void, !dbg !966                             ; [debug line = 105:1]
}

; [#uses=38]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %x.v) {
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !967), !dbg !970 ; [debug line = 186:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !971), !dbg !973 ; [debug line = 186:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !974), !dbg !976 ; [debug line = 186:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !977), !dbg !982 ; [debug line = 189:17] [debug variable = t]
  br label %1, !dbg !983                          ; [debug line = 190:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.39, %3 ]            ; [#uses=3 type=i6]
  %exitcond3 = icmp eq i6 %i, -1, !dbg !983       ; [#uses=1 type=i1] [debug line = 190:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %.preheader5.preheader, label %3, !dbg !983 ; [debug line = 190:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !985                ; [debug line = 192:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !987             ; [#uses=1 type=i64] [debug line = 190:20]
  %t.addr = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp, !dbg !987 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %t.addr, align 4, !dbg !987   ; [debug line = 190:20]
  %i.39 = add i6 %i, 1, !dbg !988                 ; [#uses=1 type=i6] [debug line = 190:16]
  call void @llvm.dbg.value(metadata !{i6 %i.39}, i64 0, metadata !989), !dbg !988 ; [debug line = 190:16] [debug variable = i]
  br label %1, !dbg !988                          ; [debug line = 190:16]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %i.1 = phi i6 [ %i.41, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i.1, -32, !dbg !985    ; [#uses=1 type=i1] [debug line = 192:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !985 ; [debug line = 192:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !990                 ; [debug line = 196:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp. = zext i6 %i.1 to i64, !dbg !992          ; [#uses=1 type=i64] [debug line = 194:7]
  %y.v.addr.33 = getelementptr [32 x i32]* %x.v, i64 0, i64 %tmp., !dbg !992 ; [#uses=1 type=i32*] [debug line = 194:7]
  %y.v.load.1 = load i32* %y.v.addr.33, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  br label %.preheader4, !dbg !994                ; [debug line = 193:9]

.preheader4:                                      ; preds = %6, %.preheader4.preheader
  %j = phi i6 [ %j.2, %6 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !994      ; [#uses=1 type=i1] [debug line = 193:9]
  %5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %7, label %6, !dbg !994 ; [debug line = 193:9]

; <label>:6                                       ; preds = %.preheader4
  %tmp.815 = zext i6 %j to i64, !dbg !992         ; [#uses=1 type=i64] [debug line = 194:7]
  %y.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 %tmp.815, !dbg !992 ; [#uses=1 type=i32*] [debug line = 194:7]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.816 = mul i32 %y.v.load, %y.v.load.1, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.817 = add i6 %j, %i.1, !dbg !992           ; [#uses=1 type=i6] [debug line = 194:7]
  %tmp.818 = zext i6 %tmp.817 to i64, !dbg !992   ; [#uses=1 type=i64] [debug line = 194:7]
  %t.addr.15 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.818, !dbg !992 ; [#uses=2 type=i32*] [debug line = 194:7]
  %t.load.5 = load i32* %t.addr.15, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.819 = add i32 %tmp.816, %t.load.5, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %tmp.819, i32* %t.addr.15, align 4, !dbg !992 ; [debug line = 194:7]
  %j.2 = add i6 %j, 1, !dbg !995                  ; [#uses=1 type=i6] [debug line = 193:18]
  call void @llvm.dbg.value(metadata !{i6 %j.2}, i64 0, metadata !996), !dbg !995 ; [debug line = 193:18] [debug variable = j]
  br label %.preheader4, !dbg !995                ; [debug line = 193:18]

; <label>:7                                       ; preds = %.preheader4
  %i.41 = add i6 %i.1, 1, !dbg !997               ; [#uses=1 type=i6] [debug line = 192:16]
  call void @llvm.dbg.value(metadata !{i6 %i.41}, i64 0, metadata !989), !dbg !997 ; [debug line = 192:16] [debug variable = i]
  br label %.preheader5, !dbg !997                ; [debug line = 192:16]

.preheader:                                       ; preds = %9, %.preheader.preheader
  %i.2 = phi i6 [ %i.40, %9 ], [ -32, %.preheader.preheader ] ; [#uses=4 type=i6]
  %exitcond = icmp eq i6 %i.2, -1, !dbg !990      ; [#uses=1 type=i1] [debug line = 196:7]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %10, label %9, !dbg !990 ; [debug line = 196:7]

; <label>:9                                       ; preds = %.preheader
  %tmp.811 = xor i6 %i.2, -32, !dbg !998          ; [#uses=1 type=i6] [debug line = 197:5]
  %tmp.812 = zext i6 %tmp.811 to i64, !dbg !998   ; [#uses=2 type=i64] [debug line = 197:5]
  %t.addr.13 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.812, !dbg !998 ; [#uses=1 type=i32*] [debug line = 197:5]
  %t.load.3 = load i32* %t.addr.13, align 4, !dbg !998 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp.813 = zext i6 %i.2 to i64, !dbg !999       ; [#uses=1 type=i64] [debug line = 197:28]
  %t.addr.14 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.813, !dbg !999 ; [#uses=1 type=i32*] [debug line = 197:28]
  %a.assign = load i32* %t.addr.14, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 197:28]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !1000), !dbg !1002 ; [debug line = 28:44@197:28] [debug variable = a]
  %tmp2.i = mul i32 %a.assign, 38, !dbg !1003     ; [#uses=1 type=i32] [debug line = 30:3@197:28]
  %tmp.814 = add i32 %tmp2.i, %t.load.3, !dbg !999 ; [#uses=1 type=i32] [debug line = 197:28]
  %r.v.addr.6 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.812, !dbg !999 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %tmp.814, i32* %r.v.addr.6, align 4, !dbg !999 ; [debug line = 197:28]
  %i.40 = add i6 %i.2, 1, !dbg !1005              ; [#uses=1 type=i6] [debug line = 196:17]
  call void @llvm.dbg.value(metadata !{i6 %i.40}, i64 0, metadata !989), !dbg !1005 ; [debug line = 196:17] [debug variable = i]
  br label %.preheader, !dbg !1005                ; [debug line = 196:17]

; <label>:10                                      ; preds = %.preheader
  %t.addr.12 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 31, !dbg !1006 ; [#uses=1 type=i32*] [debug line = 198:3]
  %t.load = load i32* %t.addr.12, align 4, !dbg !1006 ; [#uses=1 type=i32] [debug line = 198:3]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !1006 ; [#uses=3 type=i32*] [debug line = 198:3]
  store i32 %t.load, i32* %r.v.addr, align 4, !dbg !1006 ; [debug line = 198:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1007), !dbg !1011 ; [debug line = 53:57@200:3] [debug variable = r.v]
  %r.v.addr.7 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !1012 ; [#uses=2 type=i32*] [debug line = 63:5@200:3]
  br label %11, !dbg !1016                        ; [debug line = 58:7@200:3]

; <label>:11                                      ; preds = %17, %10
  %rep.i = phi i2 [ 0, %10 ], [ %rep, %17 ]       ; [#uses=2 type=i2]
  %exitcond1.i = icmp eq i2 %rep.i, -2, !dbg !1016 ; [#uses=1 type=i1] [debug line = 58:7@200:3]
  %12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_mul.exit, label %13, !dbg !1016 ; [debug line = 58:7@200:3]

; <label>:13                                      ; preds = %11
  %r.v.load = load i32* %r.v.addr, align 4, !dbg !1017 ; [#uses=2 type=i32] [debug line = 60:5@200:3]
  %r.v.load.cast = trunc i32 %r.v.load to i7, !dbg !1017 ; [#uses=1 type=i7] [debug line = 60:5@200:3]
  %t.12 = lshr i32 %r.v.load, 7, !dbg !1017       ; [#uses=1 type=i32] [debug line = 60:5@200:3]
  %t.12.cast = trunc i32 %t.12 to i31, !dbg !1017 ; [#uses=1 type=i31] [debug line = 60:5@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.12}, i64 0, metadata !1018), !dbg !1017 ; [debug line = 60:5@200:3] [debug variable = t]
  %tmp.i.cast = zext i7 %r.v.load.cast to i32, !dbg !1019 ; [#uses=1 type=i32] [debug line = 61:5@200:3]
  store i32 %tmp.i.cast, i32* %r.v.addr, align 4, !dbg !1019 ; [debug line = 61:5@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.12}, i64 0, metadata !1020), !dbg !1022 ; [debug line = 23:44@62:9@200:3] [debug variable = a]
  %t.10 = mul i31 %t.12.cast, 19, !dbg !1023      ; [#uses=1 type=i31] [debug line = 25:3@62:9@200:3]
  %t.10.cast6 = zext i31 %t.10 to i32, !dbg !1023 ; [#uses=1 type=i32] [debug line = 25:3@62:9@200:3]
  call void @llvm.dbg.value(metadata !{i31 %t.10}, i64 0, metadata !1018), !dbg !1021 ; [debug line = 62:9@200:3] [debug variable = t]
  %r.v.load.4 = load i32* %r.v.addr.7, align 4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  %tmp..i = add i32 %t.10.cast6, %r.v.load.4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  store i32 %tmp..i, i32* %r.v.addr.7, align 4, !dbg !1012 ; [debug line = 63:5@200:3]
  br label %14, !dbg !1024                        ; [debug line = 64:9@200:3]

; <label>:14                                      ; preds = %16, %13
  %i.i = phi i5 [ 0, %13 ], [ %i.42, %16 ]        ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !1024   ; [#uses=1 type=i1] [debug line = 64:9@200:3]
  %15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %17, label %16, !dbg !1024 ; [debug line = 64:9@200:3]

; <label>:16                                      ; preds = %14
  %tmp.755.i = zext i5 %i.i to i64, !dbg !1026    ; [#uses=1 type=i64] [debug line = 66:7@200:3]
  %r.v.addr.8 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.755.i, !dbg !1026 ; [#uses=2 type=i32*] [debug line = 66:7@200:3]
  %r.v.load.5 = load i32* %r.v.addr.8, align 4, !dbg !1026 ; [#uses=2 type=i32] [debug line = 66:7@200:3]
  %r.v.load.5.cast = trunc i32 %r.v.load.5 to i8, !dbg !1026 ; [#uses=1 type=i8] [debug line = 66:7@200:3]
  %t.11 = lshr i32 %r.v.load.5, 8, !dbg !1026     ; [#uses=1 type=i32] [debug line = 66:7@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.11}, i64 0, metadata !1018), !dbg !1026 ; [debug line = 66:7@200:3] [debug variable = t]
  %i.42 = add i5 %i.i, 1, !dbg !1028              ; [#uses=2 type=i5] [debug line = 67:7@200:3]
  %tmp.756.i = zext i5 %i.42 to i64, !dbg !1028   ; [#uses=1 type=i64] [debug line = 67:7@200:3]
  %r.v.addr.9 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.756.i, !dbg !1028 ; [#uses=2 type=i32*] [debug line = 67:7@200:3]
  %r.v.load.6 = load i32* %r.v.addr.9, align 4, !dbg !1028 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  %tmp.757.i = add i32 %t.11, %r.v.load.6, !dbg !1028 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  store i32 %tmp.757.i, i32* %r.v.addr.9, align 4, !dbg !1028 ; [debug line = 67:7@200:3]
  %tmp.758.i.cast = zext i8 %r.v.load.5.cast to i32, !dbg !1029 ; [#uses=1 type=i32] [debug line = 68:7@200:3]
  store i32 %tmp.758.i.cast, i32* %r.v.addr.8, align 4, !dbg !1029 ; [debug line = 68:7@200:3]
  call void @llvm.dbg.value(metadata !{i5 %i.42}, i64 0, metadata !1030), !dbg !1031 ; [debug line = 64:18@200:3] [debug variable = i]
  br label %14, !dbg !1031                        ; [debug line = 64:18@200:3]

; <label>:17                                      ; preds = %14
  %rep = add i2 %rep.i, 1, !dbg !1032             ; [#uses=1 type=i2] [debug line = 58:19@200:3]
  call void @llvm.dbg.value(metadata !{i2 %rep}, i64 0, metadata !1033), !dbg !1032 ; [debug line = 58:19@200:3] [debug variable = rep]
  br label %11, !dbg !1032                        ; [debug line = 58:19@200:3]

reduce_mul.exit:                                  ; preds = %11
  ret void, !dbg !1034                            ; [debug line = 201:1]
}

; [#uses=3]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_mul.1([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %y.v) {
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !967), !dbg !970 ; [debug line = 186:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !971), !dbg !973 ; [debug line = 186:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !974), !dbg !976 ; [debug line = 186:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !977), !dbg !982 ; [debug line = 189:17] [debug variable = t]
  br label %1, !dbg !983                          ; [debug line = 190:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.43, %3 ]            ; [#uses=3 type=i6]
  %exitcond3 = icmp eq i6 %i, -1, !dbg !983       ; [#uses=1 type=i1] [debug line = 190:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %.preheader5.preheader, label %3, !dbg !983 ; [debug line = 190:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !985                ; [debug line = 192:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !987             ; [#uses=1 type=i64] [debug line = 190:20]
  %t.addr = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp, !dbg !987 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %t.addr, align 4, !dbg !987   ; [debug line = 190:20]
  %i.43 = add i6 %i, 1, !dbg !988                 ; [#uses=1 type=i6] [debug line = 190:16]
  call void @llvm.dbg.value(metadata !{i6 %i.43}, i64 0, metadata !989), !dbg !988 ; [debug line = 190:16] [debug variable = i]
  br label %1, !dbg !988                          ; [debug line = 190:16]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %i.1 = phi i6 [ %i.45, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i.1, -32, !dbg !985    ; [#uses=1 type=i1] [debug line = 192:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !985 ; [debug line = 192:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !990                 ; [debug line = 196:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp. = zext i6 %i.1 to i64, !dbg !992          ; [#uses=1 type=i64] [debug line = 194:7]
  %x.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp., !dbg !992 ; [#uses=1 type=i32*] [debug line = 194:7]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  br label %.preheader4, !dbg !994                ; [debug line = 193:9]

.preheader4:                                      ; preds = %6, %.preheader4.preheader
  %j = phi i6 [ %j.2, %6 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !994      ; [#uses=1 type=i1] [debug line = 193:9]
  %5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %7, label %6, !dbg !994 ; [debug line = 193:9]

; <label>:6                                       ; preds = %.preheader4
  %tmp.824 = zext i6 %j to i64, !dbg !992         ; [#uses=1 type=i64] [debug line = 194:7]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp.824, !dbg !992 ; [#uses=1 type=i32*] [debug line = 194:7]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.825 = mul i32 %y.v.load, %x.v.load, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.826 = add i6 %j, %i.1, !dbg !992           ; [#uses=1 type=i6] [debug line = 194:7]
  %tmp.827 = zext i6 %tmp.826 to i64, !dbg !992   ; [#uses=1 type=i64] [debug line = 194:7]
  %t.addr.15 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.827, !dbg !992 ; [#uses=2 type=i32*] [debug line = 194:7]
  %t.load.5 = load i32* %t.addr.15, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.828 = add i32 %tmp.825, %t.load.5, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %tmp.828, i32* %t.addr.15, align 4, !dbg !992 ; [debug line = 194:7]
  %j.2 = add i6 %j, 1, !dbg !995                  ; [#uses=1 type=i6] [debug line = 193:18]
  call void @llvm.dbg.value(metadata !{i6 %j.2}, i64 0, metadata !996), !dbg !995 ; [debug line = 193:18] [debug variable = j]
  br label %.preheader4, !dbg !995                ; [debug line = 193:18]

; <label>:7                                       ; preds = %.preheader4
  %i.45 = add i6 %i.1, 1, !dbg !997               ; [#uses=1 type=i6] [debug line = 192:16]
  call void @llvm.dbg.value(metadata !{i6 %i.45}, i64 0, metadata !989), !dbg !997 ; [debug line = 192:16] [debug variable = i]
  br label %.preheader5, !dbg !997                ; [debug line = 192:16]

.preheader:                                       ; preds = %9, %.preheader.preheader
  %i.2 = phi i6 [ %i.44, %9 ], [ -32, %.preheader.preheader ] ; [#uses=4 type=i6]
  %exitcond = icmp eq i6 %i.2, -1, !dbg !990      ; [#uses=1 type=i1] [debug line = 196:7]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %10, label %9, !dbg !990 ; [debug line = 196:7]

; <label>:9                                       ; preds = %.preheader
  %tmp.820 = xor i6 %i.2, -32, !dbg !998          ; [#uses=1 type=i6] [debug line = 197:5]
  %tmp.821 = zext i6 %tmp.820 to i64, !dbg !998   ; [#uses=2 type=i64] [debug line = 197:5]
  %t.addr.13 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.821, !dbg !998 ; [#uses=1 type=i32*] [debug line = 197:5]
  %t.load.3 = load i32* %t.addr.13, align 4, !dbg !998 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp.822 = zext i6 %i.2 to i64, !dbg !999       ; [#uses=1 type=i64] [debug line = 197:28]
  %t.addr.14 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.822, !dbg !999 ; [#uses=1 type=i32*] [debug line = 197:28]
  %a.assign = load i32* %t.addr.14, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 197:28]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !1000), !dbg !1002 ; [debug line = 28:44@197:28] [debug variable = a]
  %tmp2.i = mul i32 %a.assign, 38, !dbg !1003     ; [#uses=1 type=i32] [debug line = 30:3@197:28]
  %tmp.823 = add i32 %tmp2.i, %t.load.3, !dbg !999 ; [#uses=1 type=i32] [debug line = 197:28]
  %x.v.addr.35 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.821, !dbg !999 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %tmp.823, i32* %x.v.addr.35, align 4, !dbg !999 ; [debug line = 197:28]
  %i.44 = add i6 %i.2, 1, !dbg !1005              ; [#uses=1 type=i6] [debug line = 196:17]
  call void @llvm.dbg.value(metadata !{i6 %i.44}, i64 0, metadata !989), !dbg !1005 ; [debug line = 196:17] [debug variable = i]
  br label %.preheader, !dbg !1005                ; [debug line = 196:17]

; <label>:10                                      ; preds = %.preheader
  %t.addr.12 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 31, !dbg !1006 ; [#uses=1 type=i32*] [debug line = 198:3]
  %t.load = load i32* %t.addr.12, align 4, !dbg !1006 ; [#uses=1 type=i32] [debug line = 198:3]
  %x.v.addr.34 = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !1006 ; [#uses=3 type=i32*] [debug line = 198:3]
  store i32 %t.load, i32* %x.v.addr.34, align 4, !dbg !1006 ; [debug line = 198:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1007), !dbg !1011 ; [debug line = 53:57@200:3] [debug variable = r.v]
  %x.v.addr.36 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !1012 ; [#uses=2 type=i32*] [debug line = 63:5@200:3]
  br label %11, !dbg !1016                        ; [debug line = 58:7@200:3]

; <label>:11                                      ; preds = %17, %10
  %rep.i = phi i2 [ 0, %10 ], [ %rep, %17 ]       ; [#uses=2 type=i2]
  %exitcond1.i = icmp eq i2 %rep.i, -2, !dbg !1016 ; [#uses=1 type=i1] [debug line = 58:7@200:3]
  %12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_mul.exit, label %13, !dbg !1016 ; [debug line = 58:7@200:3]

; <label>:13                                      ; preds = %11
  %x.v.load.34 = load i32* %x.v.addr.34, align 4, !dbg !1017 ; [#uses=2 type=i32] [debug line = 60:5@200:3]
  %x.v.load.34.cast = trunc i32 %x.v.load.34 to i7, !dbg !1017 ; [#uses=1 type=i7] [debug line = 60:5@200:3]
  %t.16 = lshr i32 %x.v.load.34, 7, !dbg !1017    ; [#uses=1 type=i32] [debug line = 60:5@200:3]
  %t.16.cast = trunc i32 %t.16 to i31, !dbg !1017 ; [#uses=1 type=i31] [debug line = 60:5@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.16}, i64 0, metadata !1018), !dbg !1017 ; [debug line = 60:5@200:3] [debug variable = t]
  %tmp.i.cast = zext i7 %x.v.load.34.cast to i32, !dbg !1019 ; [#uses=1 type=i32] [debug line = 61:5@200:3]
  store i32 %tmp.i.cast, i32* %x.v.addr.34, align 4, !dbg !1019 ; [debug line = 61:5@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.16}, i64 0, metadata !1020), !dbg !1022 ; [debug line = 23:44@62:9@200:3] [debug variable = a]
  %t.14 = mul i31 %t.16.cast, 19, !dbg !1023      ; [#uses=1 type=i31] [debug line = 25:3@62:9@200:3]
  %t.14.cast6 = zext i31 %t.14 to i32, !dbg !1023 ; [#uses=1 type=i32] [debug line = 25:3@62:9@200:3]
  call void @llvm.dbg.value(metadata !{i31 %t.14}, i64 0, metadata !1018), !dbg !1021 ; [debug line = 62:9@200:3] [debug variable = t]
  %x.v.load.35 = load i32* %x.v.addr.36, align 4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  %tmp..i = add i32 %t.14.cast6, %x.v.load.35, !dbg !1012 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  store i32 %tmp..i, i32* %x.v.addr.36, align 4, !dbg !1012 ; [debug line = 63:5@200:3]
  br label %14, !dbg !1024                        ; [debug line = 64:9@200:3]

; <label>:14                                      ; preds = %16, %13
  %i.i = phi i5 [ 0, %13 ], [ %i.46, %16 ]        ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !1024   ; [#uses=1 type=i1] [debug line = 64:9@200:3]
  %15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %17, label %16, !dbg !1024 ; [debug line = 64:9@200:3]

; <label>:16                                      ; preds = %14
  %tmp.755.i = zext i5 %i.i to i64, !dbg !1026    ; [#uses=1 type=i64] [debug line = 66:7@200:3]
  %x.v.addr.37 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.755.i, !dbg !1026 ; [#uses=2 type=i32*] [debug line = 66:7@200:3]
  %x.v.load.36 = load i32* %x.v.addr.37, align 4, !dbg !1026 ; [#uses=2 type=i32] [debug line = 66:7@200:3]
  %x.v.load.36.cast = trunc i32 %x.v.load.36 to i8, !dbg !1026 ; [#uses=1 type=i8] [debug line = 66:7@200:3]
  %t.15 = lshr i32 %x.v.load.36, 8, !dbg !1026    ; [#uses=1 type=i32] [debug line = 66:7@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.15}, i64 0, metadata !1018), !dbg !1026 ; [debug line = 66:7@200:3] [debug variable = t]
  %i.46 = add i5 %i.i, 1, !dbg !1028              ; [#uses=2 type=i5] [debug line = 67:7@200:3]
  %tmp.756.i = zext i5 %i.46 to i64, !dbg !1028   ; [#uses=1 type=i64] [debug line = 67:7@200:3]
  %x.v.addr.38 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.756.i, !dbg !1028 ; [#uses=2 type=i32*] [debug line = 67:7@200:3]
  %x.v.load.37 = load i32* %x.v.addr.38, align 4, !dbg !1028 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  %tmp.757.i = add i32 %t.15, %x.v.load.37, !dbg !1028 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  store i32 %tmp.757.i, i32* %x.v.addr.38, align 4, !dbg !1028 ; [debug line = 67:7@200:3]
  %tmp.758.i.cast = zext i8 %x.v.load.36.cast to i32, !dbg !1029 ; [#uses=1 type=i32] [debug line = 68:7@200:3]
  store i32 %tmp.758.i.cast, i32* %x.v.addr.37, align 4, !dbg !1029 ; [debug line = 68:7@200:3]
  call void @llvm.dbg.value(metadata !{i5 %i.46}, i64 0, metadata !1030), !dbg !1031 ; [debug line = 64:18@200:3] [debug variable = i]
  br label %14, !dbg !1031                        ; [debug line = 64:18@200:3]

; <label>:17                                      ; preds = %14
  %rep = add i2 %rep.i, 1, !dbg !1032             ; [#uses=1 type=i2] [debug line = 58:19@200:3]
  call void @llvm.dbg.value(metadata !{i2 %rep}, i64 0, metadata !1033), !dbg !1032 ; [debug line = 58:19@200:3] [debug variable = rep]
  br label %11, !dbg !1032                        ; [debug line = 58:19@200:3]

reduce_mul.exit:                                  ; preds = %11
  ret void, !dbg !1034                            ; [debug line = 201:1]
}

; [#uses=20]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %x.v, [32 x i32]* nocapture %y.v) {
  %t = alloca [63 x i32], align 16                ; [#uses=5 type=[63 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !967), !dbg !970 ; [debug line = 186:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !971), !dbg !973 ; [debug line = 186:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !974), !dbg !976 ; [debug line = 186:159] [debug variable = y.v]
  call void @llvm.dbg.declare(metadata !{[63 x i32]* %t}, metadata !977), !dbg !982 ; [debug line = 189:17] [debug variable = t]
  br label %1, !dbg !983                          ; [debug line = 190:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.47, %3 ]            ; [#uses=3 type=i6]
  %exitcond3 = icmp eq i6 %i, -1, !dbg !983       ; [#uses=1 type=i1] [debug line = 190:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 63, i64 63, i64 63) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %.preheader5.preheader, label %3, !dbg !983 ; [debug line = 190:7]

.preheader5.preheader:                            ; preds = %1
  br label %.preheader5, !dbg !985                ; [debug line = 192:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !987             ; [#uses=1 type=i64] [debug line = 190:20]
  %t.addr = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp, !dbg !987 ; [#uses=1 type=i32*] [debug line = 190:20]
  store i32 0, i32* %t.addr, align 4, !dbg !987   ; [debug line = 190:20]
  %i.47 = add i6 %i, 1, !dbg !988                 ; [#uses=1 type=i6] [debug line = 190:16]
  call void @llvm.dbg.value(metadata !{i6 %i.47}, i64 0, metadata !989), !dbg !988 ; [debug line = 190:16] [debug variable = i]
  br label %1, !dbg !988                          ; [debug line = 190:16]

.preheader5:                                      ; preds = %7, %.preheader5.preheader
  %i.1 = phi i6 [ %i.49, %7 ], [ 0, %.preheader5.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %i.1, -32, !dbg !985    ; [#uses=1 type=i1] [debug line = 192:7]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %.preheader.preheader, label %.preheader4.preheader, !dbg !985 ; [debug line = 192:7]

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader, !dbg !990                 ; [debug line = 196:7]

.preheader4.preheader:                            ; preds = %.preheader5
  %tmp. = zext i6 %i.1 to i64, !dbg !992          ; [#uses=1 type=i64] [debug line = 194:7]
  %x.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 %tmp., !dbg !992 ; [#uses=1 type=i32*] [debug line = 194:7]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  br label %.preheader4, !dbg !994                ; [debug line = 193:9]

.preheader4:                                      ; preds = %6, %.preheader4.preheader
  %j = phi i6 [ %j.2, %6 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i6]
  %exitcond1 = icmp eq i6 %j, -32, !dbg !994      ; [#uses=1 type=i1] [debug line = 193:9]
  %5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %7, label %6, !dbg !994 ; [debug line = 193:9]

; <label>:6                                       ; preds = %.preheader4
  %tmp.833 = zext i6 %j to i64, !dbg !992         ; [#uses=1 type=i64] [debug line = 194:7]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp.833, !dbg !992 ; [#uses=1 type=i32*] [debug line = 194:7]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.834 = mul i32 %y.v.load, %x.v.load, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.835 = add i6 %j, %i.1, !dbg !992           ; [#uses=1 type=i6] [debug line = 194:7]
  %tmp.836 = zext i6 %tmp.835 to i64, !dbg !992   ; [#uses=1 type=i64] [debug line = 194:7]
  %t.addr.15 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.836, !dbg !992 ; [#uses=2 type=i32*] [debug line = 194:7]
  %t.load.5 = load i32* %t.addr.15, align 4, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  %tmp.837 = add i32 %tmp.834, %t.load.5, !dbg !992 ; [#uses=1 type=i32] [debug line = 194:7]
  store i32 %tmp.837, i32* %t.addr.15, align 4, !dbg !992 ; [debug line = 194:7]
  %j.2 = add i6 %j, 1, !dbg !995                  ; [#uses=1 type=i6] [debug line = 193:18]
  call void @llvm.dbg.value(metadata !{i6 %j.2}, i64 0, metadata !996), !dbg !995 ; [debug line = 193:18] [debug variable = j]
  br label %.preheader4, !dbg !995                ; [debug line = 193:18]

; <label>:7                                       ; preds = %.preheader4
  %i.49 = add i6 %i.1, 1, !dbg !997               ; [#uses=1 type=i6] [debug line = 192:16]
  call void @llvm.dbg.value(metadata !{i6 %i.49}, i64 0, metadata !989), !dbg !997 ; [debug line = 192:16] [debug variable = i]
  br label %.preheader5, !dbg !997                ; [debug line = 192:16]

.preheader:                                       ; preds = %9, %.preheader.preheader
  %i.2 = phi i6 [ %i.48, %9 ], [ -32, %.preheader.preheader ] ; [#uses=4 type=i6]
  %exitcond = icmp eq i6 %i.2, -1, !dbg !990      ; [#uses=1 type=i1] [debug line = 196:7]
  %8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond, label %10, label %9, !dbg !990 ; [debug line = 196:7]

; <label>:9                                       ; preds = %.preheader
  %tmp.829 = xor i6 %i.2, -32, !dbg !998          ; [#uses=1 type=i6] [debug line = 197:5]
  %tmp.830 = zext i6 %tmp.829 to i64, !dbg !998   ; [#uses=2 type=i64] [debug line = 197:5]
  %t.addr.13 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.830, !dbg !998 ; [#uses=1 type=i32*] [debug line = 197:5]
  %t.load.3 = load i32* %t.addr.13, align 4, !dbg !998 ; [#uses=1 type=i32] [debug line = 197:5]
  %tmp.831 = zext i6 %i.2 to i64, !dbg !999       ; [#uses=1 type=i64] [debug line = 197:28]
  %t.addr.14 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 %tmp.831, !dbg !999 ; [#uses=1 type=i32*] [debug line = 197:28]
  %a.assign = load i32* %t.addr.14, align 4, !dbg !999 ; [#uses=1 type=i32] [debug line = 197:28]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !1000), !dbg !1002 ; [debug line = 28:44@197:28] [debug variable = a]
  %tmp2.i = mul i32 %a.assign, 38, !dbg !1003     ; [#uses=1 type=i32] [debug line = 30:3@197:28]
  %tmp.832 = add i32 %tmp2.i, %t.load.3, !dbg !999 ; [#uses=1 type=i32] [debug line = 197:28]
  %r.v.addr.7 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.830, !dbg !999 ; [#uses=1 type=i32*] [debug line = 197:28]
  store i32 %tmp.832, i32* %r.v.addr.7, align 4, !dbg !999 ; [debug line = 197:28]
  %i.48 = add i6 %i.2, 1, !dbg !1005              ; [#uses=1 type=i6] [debug line = 196:17]
  call void @llvm.dbg.value(metadata !{i6 %i.48}, i64 0, metadata !989), !dbg !1005 ; [debug line = 196:17] [debug variable = i]
  br label %.preheader, !dbg !1005                ; [debug line = 196:17]

; <label>:10                                      ; preds = %.preheader
  %t.addr.12 = getelementptr inbounds [63 x i32]* %t, i64 0, i64 31, !dbg !1006 ; [#uses=1 type=i32*] [debug line = 198:3]
  %t.load = load i32* %t.addr.12, align 4, !dbg !1006 ; [#uses=1 type=i32] [debug line = 198:3]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !1006 ; [#uses=3 type=i32*] [debug line = 198:3]
  store i32 %t.load, i32* %r.v.addr, align 4, !dbg !1006 ; [debug line = 198:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1007), !dbg !1011 ; [debug line = 53:57@200:3] [debug variable = r.v]
  %r.v.addr.10 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !1012 ; [#uses=2 type=i32*] [debug line = 63:5@200:3]
  br label %11, !dbg !1016                        ; [debug line = 58:7@200:3]

; <label>:11                                      ; preds = %17, %10
  %rep.i = phi i2 [ 0, %10 ], [ %rep, %17 ]       ; [#uses=2 type=i2]
  %exitcond1.i = icmp eq i2 %rep.i, -2, !dbg !1016 ; [#uses=1 type=i1] [debug line = 58:7@200:3]
  %12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_mul.exit, label %13, !dbg !1016 ; [debug line = 58:7@200:3]

; <label>:13                                      ; preds = %11
  %r.v.load = load i32* %r.v.addr, align 4, !dbg !1017 ; [#uses=2 type=i32] [debug line = 60:5@200:3]
  %r.v.load.cast = trunc i32 %r.v.load to i7, !dbg !1017 ; [#uses=1 type=i7] [debug line = 60:5@200:3]
  %t.20 = lshr i32 %r.v.load, 7, !dbg !1017       ; [#uses=1 type=i32] [debug line = 60:5@200:3]
  %t.20.cast = trunc i32 %t.20 to i31, !dbg !1017 ; [#uses=1 type=i31] [debug line = 60:5@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.20}, i64 0, metadata !1018), !dbg !1017 ; [debug line = 60:5@200:3] [debug variable = t]
  %tmp.i.cast = zext i7 %r.v.load.cast to i32, !dbg !1019 ; [#uses=1 type=i32] [debug line = 61:5@200:3]
  store i32 %tmp.i.cast, i32* %r.v.addr, align 4, !dbg !1019 ; [debug line = 61:5@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.20}, i64 0, metadata !1020), !dbg !1022 ; [debug line = 23:44@62:9@200:3] [debug variable = a]
  %t.18 = mul i31 %t.20.cast, 19, !dbg !1023      ; [#uses=1 type=i31] [debug line = 25:3@62:9@200:3]
  %t.18.cast6 = zext i31 %t.18 to i32, !dbg !1023 ; [#uses=1 type=i32] [debug line = 25:3@62:9@200:3]
  call void @llvm.dbg.value(metadata !{i31 %t.18}, i64 0, metadata !1018), !dbg !1021 ; [debug line = 62:9@200:3] [debug variable = t]
  %r.v.load.7 = load i32* %r.v.addr.10, align 4, !dbg !1012 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  %tmp..i = add i32 %t.18.cast6, %r.v.load.7, !dbg !1012 ; [#uses=1 type=i32] [debug line = 63:5@200:3]
  store i32 %tmp..i, i32* %r.v.addr.10, align 4, !dbg !1012 ; [debug line = 63:5@200:3]
  br label %14, !dbg !1024                        ; [debug line = 64:9@200:3]

; <label>:14                                      ; preds = %16, %13
  %i.i = phi i5 [ 0, %13 ], [ %i.50, %16 ]        ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !1024   ; [#uses=1 type=i1] [debug line = 64:9@200:3]
  %15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %17, label %16, !dbg !1024 ; [debug line = 64:9@200:3]

; <label>:16                                      ; preds = %14
  %tmp.755.i = zext i5 %i.i to i64, !dbg !1026    ; [#uses=1 type=i64] [debug line = 66:7@200:3]
  %r.v.addr.11 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.755.i, !dbg !1026 ; [#uses=2 type=i32*] [debug line = 66:7@200:3]
  %r.v.load.8 = load i32* %r.v.addr.11, align 4, !dbg !1026 ; [#uses=2 type=i32] [debug line = 66:7@200:3]
  %r.v.load.8.cast = trunc i32 %r.v.load.8 to i8, !dbg !1026 ; [#uses=1 type=i8] [debug line = 66:7@200:3]
  %t.19 = lshr i32 %r.v.load.8, 8, !dbg !1026     ; [#uses=1 type=i32] [debug line = 66:7@200:3]
  call void @llvm.dbg.value(metadata !{i32 %t.19}, i64 0, metadata !1018), !dbg !1026 ; [debug line = 66:7@200:3] [debug variable = t]
  %i.50 = add i5 %i.i, 1, !dbg !1028              ; [#uses=2 type=i5] [debug line = 67:7@200:3]
  %tmp.756.i = zext i5 %i.50 to i64, !dbg !1028   ; [#uses=1 type=i64] [debug line = 67:7@200:3]
  %r.v.addr.12 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.756.i, !dbg !1028 ; [#uses=2 type=i32*] [debug line = 67:7@200:3]
  %r.v.load.9 = load i32* %r.v.addr.12, align 4, !dbg !1028 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  %tmp.757.i = add i32 %t.19, %r.v.load.9, !dbg !1028 ; [#uses=1 type=i32] [debug line = 67:7@200:3]
  store i32 %tmp.757.i, i32* %r.v.addr.12, align 4, !dbg !1028 ; [debug line = 67:7@200:3]
  %tmp.758.i.cast = zext i8 %r.v.load.8.cast to i32, !dbg !1029 ; [#uses=1 type=i32] [debug line = 68:7@200:3]
  store i32 %tmp.758.i.cast, i32* %r.v.addr.11, align 4, !dbg !1029 ; [debug line = 68:7@200:3]
  call void @llvm.dbg.value(metadata !{i5 %i.50}, i64 0, metadata !1030), !dbg !1031 ; [debug line = 64:18@200:3] [debug variable = i]
  br label %14, !dbg !1031                        ; [debug line = 64:18@200:3]

; <label>:17                                      ; preds = %14
  %rep = add i2 %rep.i, 1, !dbg !1032             ; [#uses=1 type=i2] [debug line = 58:19@200:3]
  call void @llvm.dbg.value(metadata !{i2 %rep}, i64 0, metadata !1033), !dbg !1032 ; [debug line = 58:19@200:3] [debug variable = rep]
  br label %11, !dbg !1032                        ; [debug line = 58:19@200:3]

reduce_mul.exit:                                  ; preds = %11
  ret void, !dbg !1034                            ; [debug line = 201:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_invert([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %x.v) {
  %z2.v = alloca [32 x i32], align 4              ; [#uses=3 type=[32 x i32]*]
  %z9.v = alloca [32 x i32], align 4              ; [#uses=3 type=[32 x i32]*]
  %z11.v = alloca [32 x i32], align 4             ; [#uses=3 type=[32 x i32]*]
  %z2_5_0.v = alloca [32 x i32], align 4          ; [#uses=3 type=[32 x i32]*]
  %z2_10_0.v = alloca [32 x i32], align 4         ; [#uses=4 type=[32 x i32]*]
  %z2_20_0.v = alloca [32 x i32], align 4         ; [#uses=3 type=[32 x i32]*]
  %z2_50_0.v = alloca [32 x i32], align 4         ; [#uses=4 type=[32 x i32]*]
  %z2_100_0.v = alloca [32 x i32], align 4        ; [#uses=3 type=[32 x i32]*]
  %t0.v = alloca [32 x i32], align 4              ; [#uses=42 type=[32 x i32]*]
  %t1.v = alloca [32 x i32], align 4              ; [#uses=38 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1035), !dbg !1040 ; [debug line = 208:78] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !1041), !dbg !1043 ; [debug line = 208:120] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2.v}, metadata !1044), !dbg !1047 ; [debug line = 210:34] [debug variable = z2.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z9.v}, metadata !1048), !dbg !1050 ; [debug line = 211:34] [debug variable = z9.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z11.v}, metadata !1051), !dbg !1053 ; [debug line = 212:34] [debug variable = z11.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_5_0.v}, metadata !1054), !dbg !1056 ; [debug line = 213:34] [debug variable = z2_5_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_10_0.v}, metadata !1057), !dbg !1059 ; [debug line = 214:34] [debug variable = z2_10_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_20_0.v}, metadata !1060), !dbg !1062 ; [debug line = 215:34] [debug variable = z2_20_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_50_0.v}, metadata !1063), !dbg !1065 ; [debug line = 216:34] [debug variable = z2_50_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %z2_100_0.v}, metadata !1066), !dbg !1068 ; [debug line = 217:34] [debug variable = z2_100_0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t0.v}, metadata !1069), !dbg !1071 ; [debug line = 218:34] [debug variable = t0.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t1.v}, metadata !1072), !dbg !1074 ; [debug line = 219:34] [debug variable = t1.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2.v}, i64 0, metadata !1075), !dbg !1079 ; [debug line = 203:78@222:10] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !1080), !dbg !1082 ; [debug line = 203:120@222:10] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %z2.v, [32 x i32]* %x.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1083), !dbg !1085 ; [debug line = 203:78@223:10] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2.v}, i64 0, metadata !1086), !dbg !1087 ; [debug line = 203:120@223:10] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %z2.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1088), !dbg !1090 ; [debug line = 203:78@224:10] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1091), !dbg !1092 ; [debug line = 203:120@224:10] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z9.v, [32 x i32]* %t0.v, [32 x i32]* %x.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z11.v, [32 x i32]* %z9.v, [32 x i32]* %z2.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1093), !dbg !1095 ; [debug line = 203:78@227:11] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z11.v}, i64 0, metadata !1096), !dbg !1097 ; [debug line = 203:120@227:11] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %z11.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z2_5_0.v, [32 x i32]* %t0.v, [32 x i32]* %z9.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1098), !dbg !1100 ; [debug line = 203:78@230:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_5_0.v}, i64 0, metadata !1101), !dbg !1102 ; [debug line = 203:120@230:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %z2_5_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1103), !dbg !1105 ; [debug line = 203:78@231:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1106), !dbg !1107 ; [debug line = 203:120@231:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1108), !dbg !1110 ; [debug line = 203:78@232:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1111), !dbg !1112 ; [debug line = 203:120@232:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1113), !dbg !1115 ; [debug line = 203:78@233:18] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1116), !dbg !1117 ; [debug line = 203:120@233:18] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1118), !dbg !1120 ; [debug line = 203:78@234:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1121), !dbg !1122 ; [debug line = 203:120@234:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z2_10_0.v, [32 x i32]* %t0.v, [32 x i32]* %z2_5_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1123), !dbg !1125 ; [debug line = 203:78@237:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_10_0.v}, i64 0, metadata !1126), !dbg !1127 ; [debug line = 203:120@237:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %z2_10_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1128), !dbg !1130 ; [debug line = 203:78@238:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1131), !dbg !1132 ; [debug line = 203:120@238:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  br label %1, !dbg !1133                         ; [debug line = 239:25]

; <label>:1                                       ; preds = %3, %0
  %i = phi i4 [ 2, %0 ], [ %i.51, %3 ]            ; [#uses=2 type=i4]
  %tmp = icmp ult i4 %i, -6, !dbg !1133           ; [#uses=1 type=i1] [debug line = 239:25]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %tmp, label %3, label %4, !dbg !1133      ; [debug line = 239:25]

; <label>:3                                       ; preds = %1
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1135), !dbg !1138 ; [debug line = 203:78@239:48] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1139), !dbg !1140 ; [debug line = 203:120@239:48] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1141), !dbg !1143 ; [debug line = 203:78@239:97] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1144), !dbg !1145 ; [debug line = 203:120@239:97] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  %i.51 = add i4 %i, 2, !dbg !1146                ; [#uses=1 type=i4] [debug line = 239:38]
  call void @llvm.dbg.value(metadata !{i4 %i.51}, i64 0, metadata !1147), !dbg !1146 ; [debug line = 239:38] [debug variable = i]
  br label %1, !dbg !1146                         ; [debug line = 239:38]

; <label>:4                                       ; preds = %1
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z2_20_0.v, [32 x i32]* %t1.v, [32 x i32]* %z2_10_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1148), !dbg !1150 ; [debug line = 203:78@242:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_20_0.v}, i64 0, metadata !1151), !dbg !1152 ; [debug line = 203:120@242:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %z2_20_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1153), !dbg !1155 ; [debug line = 203:78@243:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1156), !dbg !1157 ; [debug line = 203:120@243:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  br label %5, !dbg !1158                         ; [debug line = 244:25]

; <label>:5                                       ; preds = %7, %4
  %i.1 = phi i5 [ 2, %4 ], [ %i.52, %7 ]          ; [#uses=2 type=i5]
  %tmp. = icmp ult i5 %i.1, -12, !dbg !1158       ; [#uses=1 type=i1] [debug line = 244:25]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9) ; [#uses=0 type=i32]
  br i1 %tmp., label %7, label %8, !dbg !1158     ; [debug line = 244:25]

; <label>:7                                       ; preds = %5
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1160), !dbg !1163 ; [debug line = 203:78@244:48] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1164), !dbg !1165 ; [debug line = 203:120@244:48] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1166), !dbg !1168 ; [debug line = 203:78@244:97] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1169), !dbg !1170 ; [debug line = 203:120@244:97] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  %i.52 = add i5 %i.1, 2, !dbg !1171              ; [#uses=1 type=i5] [debug line = 244:38]
  call void @llvm.dbg.value(metadata !{i5 %i.52}, i64 0, metadata !1147), !dbg !1171 ; [debug line = 244:38] [debug variable = i]
  br label %5, !dbg !1171                         ; [debug line = 244:38]

; <label>:8                                       ; preds = %5
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %t0.v, [32 x i32]* %t1.v, [32 x i32]* %z2_20_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1172), !dbg !1174 ; [debug line = 203:78@247:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1175), !dbg !1176 ; [debug line = 203:120@247:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1177), !dbg !1179 ; [debug line = 203:78@248:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1180), !dbg !1181 ; [debug line = 203:120@248:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  br label %9, !dbg !1182                         ; [debug line = 249:25]

; <label>:9                                       ; preds = %11, %8
  %i.2 = phi i4 [ 2, %8 ], [ %i.53, %11 ]         ; [#uses=2 type=i4]
  %tmp.838 = icmp ult i4 %i.2, -6, !dbg !1182     ; [#uses=1 type=i1] [debug line = 249:25]
  %10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %tmp.838, label %11, label %12, !dbg !1182 ; [debug line = 249:25]

; <label>:11                                      ; preds = %9
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1184), !dbg !1187 ; [debug line = 203:78@249:48] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1188), !dbg !1189 ; [debug line = 203:120@249:48] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1190), !dbg !1192 ; [debug line = 203:78@249:97] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1193), !dbg !1194 ; [debug line = 203:120@249:97] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  %i.53 = add i4 %i.2, 2, !dbg !1195              ; [#uses=1 type=i4] [debug line = 249:38]
  call void @llvm.dbg.value(metadata !{i4 %i.53}, i64 0, metadata !1147), !dbg !1195 ; [debug line = 249:38] [debug variable = i]
  br label %9, !dbg !1195                         ; [debug line = 249:38]

; <label>:12                                      ; preds = %9
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z2_50_0.v, [32 x i32]* %t0.v, [32 x i32]* %z2_10_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1196), !dbg !1198 ; [debug line = 203:78@252:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_50_0.v}, i64 0, metadata !1199), !dbg !1200 ; [debug line = 203:120@252:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %z2_50_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1201), !dbg !1203 ; [debug line = 203:78@253:19] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1204), !dbg !1205 ; [debug line = 203:120@253:19] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  br label %13, !dbg !1206                        ; [debug line = 254:26]

; <label>:13                                      ; preds = %15, %12
  %i.3 = phi i6 [ 2, %12 ], [ %i.54, %15 ]        ; [#uses=2 type=i6]
  %tmp.839 = icmp ult i6 %i.3, -14, !dbg !1206    ; [#uses=1 type=i1] [debug line = 254:26]
  %14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24) ; [#uses=0 type=i32]
  br i1 %tmp.839, label %15, label %16, !dbg !1206 ; [debug line = 254:26]

; <label>:15                                      ; preds = %13
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1208), !dbg !1211 ; [debug line = 203:78@254:49] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1212), !dbg !1213 ; [debug line = 203:120@254:49] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1214), !dbg !1216 ; [debug line = 203:78@254:98] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1217), !dbg !1218 ; [debug line = 203:120@254:98] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  %i.54 = add i6 %i.3, 2, !dbg !1219              ; [#uses=1 type=i6] [debug line = 254:39]
  call void @llvm.dbg.value(metadata !{i6 %i.54}, i64 0, metadata !1147), !dbg !1219 ; [debug line = 254:39] [debug variable = i]
  br label %13, !dbg !1219                        ; [debug line = 254:39]

; <label>:16                                      ; preds = %13
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %z2_100_0.v, [32 x i32]* %t1.v, [32 x i32]* %z2_50_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1220), !dbg !1222 ; [debug line = 203:78@257:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %z2_100_0.v}, i64 0, metadata !1223), !dbg !1224 ; [debug line = 203:120@257:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %z2_100_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1225), !dbg !1227 ; [debug line = 203:78@258:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1228), !dbg !1229 ; [debug line = 203:120@258:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  br label %17, !dbg !1230                        ; [debug line = 259:27]

; <label>:17                                      ; preds = %19, %16
  %i.4 = phi i7 [ 2, %16 ], [ %i.55, %19 ]        ; [#uses=2 type=i7]
  %tmp.840 = icmp ult i7 %i.4, -28, !dbg !1230    ; [#uses=1 type=i1] [debug line = 259:27]
  %18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49) ; [#uses=0 type=i32]
  br i1 %tmp.840, label %19, label %20, !dbg !1230 ; [debug line = 259:27]

; <label>:19                                      ; preds = %17
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1232), !dbg !1235 ; [debug line = 203:78@259:51] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1236), !dbg !1237 ; [debug line = 203:120@259:51] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1238), !dbg !1240 ; [debug line = 203:78@259:100] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1241), !dbg !1242 ; [debug line = 203:120@259:100] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  %i.55 = add i7 %i.4, 2, !dbg !1243              ; [#uses=1 type=i7] [debug line = 259:41]
  call void @llvm.dbg.value(metadata !{i7 %i.55}, i64 0, metadata !1147), !dbg !1243 ; [debug line = 259:41] [debug variable = i]
  br label %17, !dbg !1243                        ; [debug line = 259:41]

; <label>:20                                      ; preds = %17
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %t1.v, [32 x i32]* %t0.v, [32 x i32]* %z2_100_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1244), !dbg !1246 ; [debug line = 203:78@262:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1247), !dbg !1248 ; [debug line = 203:120@262:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1249), !dbg !1251 ; [debug line = 203:78@263:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1252), !dbg !1253 ; [debug line = 203:120@263:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  br label %21, !dbg !1254                        ; [debug line = 264:26]

; <label>:21                                      ; preds = %23, %20
  %i.5 = phi i6 [ 2, %20 ], [ %i.56, %23 ]        ; [#uses=2 type=i6]
  %tmp.841 = icmp ult i6 %i.5, -14, !dbg !1254    ; [#uses=1 type=i1] [debug line = 264:26]
  %22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24) ; [#uses=0 type=i32]
  br i1 %tmp.841, label %23, label %24, !dbg !1254 ; [debug line = 264:26]

; <label>:23                                      ; preds = %21
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1256), !dbg !1259 ; [debug line = 203:78@264:49] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1260), !dbg !1261 ; [debug line = 203:120@264:49] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1262), !dbg !1264 ; [debug line = 203:78@264:98] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1265), !dbg !1266 ; [debug line = 203:120@264:98] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  %i.56 = add i6 %i.5, 2, !dbg !1267              ; [#uses=1 type=i6] [debug line = 264:39]
  call void @llvm.dbg.value(metadata !{i6 %i.56}, i64 0, metadata !1147), !dbg !1267 ; [debug line = 264:39] [debug variable = i]
  br label %21, !dbg !1267                        ; [debug line = 264:39]

; <label>:24                                      ; preds = %21
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %t0.v, [32 x i32]* %t1.v, [32 x i32]* %z2_50_0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1268), !dbg !1270 ; [debug line = 203:78@267:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1271), !dbg !1272 ; [debug line = 203:120@267:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1273), !dbg !1275 ; [debug line = 203:78@268:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1276), !dbg !1277 ; [debug line = 203:120@268:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1278), !dbg !1280 ; [debug line = 203:78@269:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1281), !dbg !1282 ; [debug line = 203:120@269:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1283), !dbg !1285 ; [debug line = 203:78@270:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1286), !dbg !1287 ; [debug line = 203:120@270:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t0.v, [32 x i32]* %t1.v)
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t1.v}, i64 0, metadata !1288), !dbg !1290 ; [debug line = 203:78@271:20] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t0.v}, i64 0, metadata !1291), !dbg !1292 ; [debug line = 203:120@271:20] [debug variable = x.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul.2([32 x i32]* %t1.v, [32 x i32]* %t0.v)
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %r.v, [32 x i32]* %t1.v, [32 x i32]* %z11.v)
  ret void, !dbg !1293                            ; [debug line = 273:1]
}

; [#uses=1]
define internal fastcc i1 @crypto_sign_ed25519_ref_fe25519_getparity([32 x i32]* %x.v) {
  %t.v = alloca [32 x i32], align 4               ; [#uses=33 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !1294), !dbg !1299 ; [debug line = 139:96] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t.v}, metadata !1300), !dbg !1303 ; [debug line = 141:35] [debug variable = t.v]
  %t.v.addr = getelementptr [32 x i32]* %t.v, i64 0, i64 0, !dbg !1304 ; [#uses=2 type=i32*] [debug line = 141:41]
  %x.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 0, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load, i32* %t.v.addr, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.1 = getelementptr [32 x i32]* %t.v, i64 0, i64 1, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.34 = getelementptr [32 x i32]* %x.v, i64 0, i64 1, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.34 = load i32* %x.v.addr.34, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.34, i32* %t.v.addr.1, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.2 = getelementptr [32 x i32]* %t.v, i64 0, i64 2, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.35 = getelementptr [32 x i32]* %x.v, i64 0, i64 2, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.35 = load i32* %x.v.addr.35, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.35, i32* %t.v.addr.2, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.3 = getelementptr [32 x i32]* %t.v, i64 0, i64 3, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.36 = getelementptr [32 x i32]* %x.v, i64 0, i64 3, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.36 = load i32* %x.v.addr.36, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.36, i32* %t.v.addr.3, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.4 = getelementptr [32 x i32]* %t.v, i64 0, i64 4, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.37 = getelementptr [32 x i32]* %x.v, i64 0, i64 4, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.37 = load i32* %x.v.addr.37, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.37, i32* %t.v.addr.4, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.5 = getelementptr [32 x i32]* %t.v, i64 0, i64 5, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.38 = getelementptr [32 x i32]* %x.v, i64 0, i64 5, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.38 = load i32* %x.v.addr.38, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.38, i32* %t.v.addr.5, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.6 = getelementptr [32 x i32]* %t.v, i64 0, i64 6, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.39 = getelementptr [32 x i32]* %x.v, i64 0, i64 6, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.39 = load i32* %x.v.addr.39, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.39, i32* %t.v.addr.6, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.7 = getelementptr [32 x i32]* %t.v, i64 0, i64 7, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.40 = getelementptr [32 x i32]* %x.v, i64 0, i64 7, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.40 = load i32* %x.v.addr.40, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.40, i32* %t.v.addr.7, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.8 = getelementptr [32 x i32]* %t.v, i64 0, i64 8, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.41 = getelementptr [32 x i32]* %x.v, i64 0, i64 8, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.41 = load i32* %x.v.addr.41, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.41, i32* %t.v.addr.8, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.9 = getelementptr [32 x i32]* %t.v, i64 0, i64 9, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.42 = getelementptr [32 x i32]* %x.v, i64 0, i64 9, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.42 = load i32* %x.v.addr.42, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.42, i32* %t.v.addr.9, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.10 = getelementptr [32 x i32]* %t.v, i64 0, i64 10, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.43 = getelementptr [32 x i32]* %x.v, i64 0, i64 10, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.43 = load i32* %x.v.addr.43, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.43, i32* %t.v.addr.10, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.11 = getelementptr [32 x i32]* %t.v, i64 0, i64 11, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.44 = getelementptr [32 x i32]* %x.v, i64 0, i64 11, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.44 = load i32* %x.v.addr.44, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.44, i32* %t.v.addr.11, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.12 = getelementptr [32 x i32]* %t.v, i64 0, i64 12, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.45 = getelementptr [32 x i32]* %x.v, i64 0, i64 12, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.45 = load i32* %x.v.addr.45, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.45, i32* %t.v.addr.12, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.13 = getelementptr [32 x i32]* %t.v, i64 0, i64 13, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.46 = getelementptr [32 x i32]* %x.v, i64 0, i64 13, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.46 = load i32* %x.v.addr.46, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.46, i32* %t.v.addr.13, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.14 = getelementptr [32 x i32]* %t.v, i64 0, i64 14, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.47 = getelementptr [32 x i32]* %x.v, i64 0, i64 14, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.47 = load i32* %x.v.addr.47, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.47, i32* %t.v.addr.14, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.15 = getelementptr [32 x i32]* %t.v, i64 0, i64 15, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.48 = getelementptr [32 x i32]* %x.v, i64 0, i64 15, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.48 = load i32* %x.v.addr.48, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.48, i32* %t.v.addr.15, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.16 = getelementptr [32 x i32]* %t.v, i64 0, i64 16, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.49 = getelementptr [32 x i32]* %x.v, i64 0, i64 16, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.49 = load i32* %x.v.addr.49, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.49, i32* %t.v.addr.16, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.17 = getelementptr [32 x i32]* %t.v, i64 0, i64 17, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.50 = getelementptr [32 x i32]* %x.v, i64 0, i64 17, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.50 = load i32* %x.v.addr.50, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.50, i32* %t.v.addr.17, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.18 = getelementptr [32 x i32]* %t.v, i64 0, i64 18, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.51 = getelementptr [32 x i32]* %x.v, i64 0, i64 18, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.51 = load i32* %x.v.addr.51, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.51, i32* %t.v.addr.18, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.19 = getelementptr [32 x i32]* %t.v, i64 0, i64 19, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.52 = getelementptr [32 x i32]* %x.v, i64 0, i64 19, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.52 = load i32* %x.v.addr.52, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.52, i32* %t.v.addr.19, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.20 = getelementptr [32 x i32]* %t.v, i64 0, i64 20, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.53 = getelementptr [32 x i32]* %x.v, i64 0, i64 20, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.53 = load i32* %x.v.addr.53, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.53, i32* %t.v.addr.20, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.21 = getelementptr [32 x i32]* %t.v, i64 0, i64 21, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.54 = getelementptr [32 x i32]* %x.v, i64 0, i64 21, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.54 = load i32* %x.v.addr.54, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.54, i32* %t.v.addr.21, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.22 = getelementptr [32 x i32]* %t.v, i64 0, i64 22, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.55 = getelementptr [32 x i32]* %x.v, i64 0, i64 22, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.55 = load i32* %x.v.addr.55, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.55, i32* %t.v.addr.22, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.23 = getelementptr [32 x i32]* %t.v, i64 0, i64 23, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.56 = getelementptr [32 x i32]* %x.v, i64 0, i64 23, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.56 = load i32* %x.v.addr.56, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.56, i32* %t.v.addr.23, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.24 = getelementptr [32 x i32]* %t.v, i64 0, i64 24, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.57 = getelementptr [32 x i32]* %x.v, i64 0, i64 24, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.57 = load i32* %x.v.addr.57, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.57, i32* %t.v.addr.24, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.25 = getelementptr [32 x i32]* %t.v, i64 0, i64 25, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.58 = getelementptr [32 x i32]* %x.v, i64 0, i64 25, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.58 = load i32* %x.v.addr.58, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.58, i32* %t.v.addr.25, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.26 = getelementptr [32 x i32]* %t.v, i64 0, i64 26, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.59 = getelementptr [32 x i32]* %x.v, i64 0, i64 26, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.59 = load i32* %x.v.addr.59, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.59, i32* %t.v.addr.26, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.27 = getelementptr [32 x i32]* %t.v, i64 0, i64 27, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.60 = getelementptr [32 x i32]* %x.v, i64 0, i64 27, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.60 = load i32* %x.v.addr.60, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.60, i32* %t.v.addr.27, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.28 = getelementptr [32 x i32]* %t.v, i64 0, i64 28, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.61 = getelementptr [32 x i32]* %x.v, i64 0, i64 28, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.61 = load i32* %x.v.addr.61, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.61, i32* %t.v.addr.28, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.29 = getelementptr [32 x i32]* %t.v, i64 0, i64 29, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.62 = getelementptr [32 x i32]* %x.v, i64 0, i64 29, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.62 = load i32* %x.v.addr.62, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.62, i32* %t.v.addr.29, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.30 = getelementptr [32 x i32]* %t.v, i64 0, i64 30, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.63 = getelementptr [32 x i32]* %x.v, i64 0, i64 30, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.63 = load i32* %x.v.addr.63, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.63, i32* %t.v.addr.30, align 4, !dbg !1304 ; [debug line = 141:41]
  %t.v.addr.31 = getelementptr [32 x i32]* %t.v, i64 0, i64 31, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.addr.64 = getelementptr [32 x i32]* %x.v, i64 0, i64 31, !dbg !1304 ; [#uses=1 type=i32*] [debug line = 141:41]
  %x.v.load.64 = load i32* %x.v.addr.64, align 4, !dbg !1304 ; [#uses=1 type=i32] [debug line = 141:41]
  store i32 %x.v.load.64, i32* %t.v.addr.31, align 4, !dbg !1304 ; [debug line = 141:41]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_freeze([32 x i32]* %t.v), !dbg !1305 ; [debug line = 142:3]
  %t.v.load = load i32* %t.v.addr, align 4, !dbg !1306 ; [#uses=1 type=i32] [debug line = 143:3]
  %tmp.cast = trunc i32 %t.v.load to i1, !dbg !1306 ; [#uses=1 type=i1] [debug line = 143:3]
  ret i1 %tmp.cast, !dbg !1306                    ; [debug line = 143:3]
}

; [#uses=2]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_freeze([32 x i32]* nocapture %r.v) {
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1307), !dbg !1310 ; [debug line = 74:78] [debug variable = r.v]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !1311 ; [#uses=2 type=i32*] [debug line = 77:21]
  %a.assign = load i32* %r.v.addr, align 4, !dbg !1311 ; [#uses=2 type=i32] [debug line = 77:21]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !1313), !dbg !1317 ; [debug line = 6:42@77:21] [debug variable = a]
  %x = xor i32 %a.assign, 127, !dbg !1318         ; [#uses=1 type=i32] [debug line = 8:26@77:21]
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !1320), !dbg !1318 ; [debug line = 8:26@77:21] [debug variable = x]
  %x.5 = add i32 %x, -1, !dbg !1321               ; [#uses=1 type=i32] [debug line = 9:3@77:21]
  call void @llvm.dbg.value(metadata !{i32 %x.5}, i64 0, metadata !1320), !dbg !1321 ; [debug line = 9:3@77:21] [debug variable = x]
  %x.14 = lshr i32 %x.5, 31, !dbg !1322           ; [#uses=1 type=i32] [debug line = 10:3@77:21]
  %x.14.cast = trunc i32 %x.14 to i1, !dbg !1322  ; [#uses=1 type=i1] [debug line = 10:3@77:21]
  call void @llvm.dbg.value(metadata !{i32 %x.14}, i64 0, metadata !1320), !dbg !1322 ; [debug line = 10:3@77:21] [debug variable = x]
  call void @llvm.dbg.value(metadata !{i32 %x.14}, i64 0, metadata !1323), !dbg !1311 ; [debug line = 77:21] [debug variable = m]
  br label %1, !dbg !1324                         ; [debug line = 78:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i5 [ -2, %0 ], [ %i.57, %3 ]           ; [#uses=3 type=i5]
  %m1 = phi i1 [ %x.14.cast, %0 ], [ %m.1, %3 ]   ; [#uses=2 type=i1]
  %tmp = icmp eq i5 %i, 0, !dbg !1324             ; [#uses=1 type=i1] [debug line = 78:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %tmp, label %4, label %3, !dbg !1324      ; [debug line = 78:7]

; <label>:3                                       ; preds = %1
  %tmp. = zext i5 %i to i64, !dbg !1326           ; [#uses=1 type=i64] [debug line = 79:10]
  %r.v.addr.8 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp., !dbg !1326 ; [#uses=1 type=i32*] [debug line = 79:10]
  %a.assign.6 = load i32* %r.v.addr.8, align 4, !dbg !1326 ; [#uses=1 type=i32] [debug line = 79:10]
  call void @llvm.dbg.value(metadata !{i32 %a.assign.6}, i64 0, metadata !1327), !dbg !1328 ; [debug line = 6:42@79:10] [debug variable = a]
  %x.7 = xor i32 %a.assign.6, 255, !dbg !1329     ; [#uses=1 type=i32] [debug line = 8:26@79:10]
  call void @llvm.dbg.value(metadata !{i32 %x.7}, i64 0, metadata !1330), !dbg !1329 ; [debug line = 8:26@79:10] [debug variable = x]
  %x.8 = add i32 %x.7, -1, !dbg !1331             ; [#uses=1 type=i32] [debug line = 9:3@79:10]
  call void @llvm.dbg.value(metadata !{i32 %x.8}, i64 0, metadata !1330), !dbg !1331 ; [debug line = 9:3@79:10] [debug variable = x]
  %x.9 = lshr i32 %x.8, 31, !dbg !1332            ; [#uses=1 type=i32] [debug line = 10:3@79:10]
  %x.9.cast = trunc i32 %x.9 to i1, !dbg !1332    ; [#uses=1 type=i1] [debug line = 10:3@79:10]
  call void @llvm.dbg.value(metadata !{i32 %x.9}, i64 0, metadata !1330), !dbg !1332 ; [debug line = 10:3@79:10] [debug variable = x]
  %m.1 = and i1 %x.9.cast, %m1, !dbg !1326        ; [#uses=1 type=i1] [debug line = 79:10]
  call void @llvm.dbg.value(metadata !{i1 %m.1}, i64 0, metadata !1323), !dbg !1326 ; [debug line = 79:10] [debug variable = m]
  %i.57 = add i5 %i, -1, !dbg !1333               ; [#uses=1 type=i5] [debug line = 78:16]
  call void @llvm.dbg.value(metadata !{i5 %i.57}, i64 0, metadata !1334), !dbg !1333 ; [debug line = 78:16] [debug variable = i]
  br label %1, !dbg !1333                         ; [debug line = 78:16]

; <label>:4                                       ; preds = %1
  %m1.lcssa = phi i1 [ %m1, %1 ]                  ; [#uses=3 type=i1]
  %r.v.addr.9 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !1335 ; [#uses=3 type=i32*] [debug line = 80:8]
  %a.assign.7 = load i32* %r.v.addr.9, align 4, !dbg !1335 ; [#uses=1 type=i32] [debug line = 80:8]
  call void @llvm.dbg.value(metadata !{i32 %a.assign.7}, i64 0, metadata !1336), !dbg !1338 ; [debug line = 14:39@80:8] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i32 %a.assign.7}, i64 0, metadata !1339), !dbg !1341 ; [debug line = 16:21@80:8] [debug variable = x]
  %x.11 = add i32 %a.assign.7, -237, !dbg !1342   ; [#uses=1 type=i32] [debug line = 17:3@80:8]
  call void @llvm.dbg.value(metadata !{i32 %x.11}, i64 0, metadata !1339), !dbg !1342 ; [debug line = 17:3@80:8] [debug variable = x]
  %x.12 = lshr i32 %x.11, 31, !dbg !1343          ; [#uses=1 type=i32] [debug line = 18:3@80:8]
  %x.12.cast = trunc i32 %x.12 to i1, !dbg !1343  ; [#uses=1 type=i1] [debug line = 18:3@80:8]
  call void @llvm.dbg.value(metadata !{i32 %x.12}, i64 0, metadata !1339), !dbg !1343 ; [debug line = 18:3@80:8] [debug variable = x]
  %x.13 = xor i1 %x.12.cast, true, !dbg !1344     ; [#uses=3 type=i1] [debug line = 19:3@80:8]
  call void @llvm.dbg.value(metadata !{i1 %x.13}, i64 0, metadata !1339), !dbg !1344 ; [debug line = 19:3@80:8] [debug variable = x]
  %m.2 = and i1 %m1.lcssa, %x.13, !dbg !1335      ; [#uses=1 type=i1] [debug line = 80:8]
  call void @llvm.dbg.value(metadata !{i1 %m.2}, i64 0, metadata !1323), !dbg !1335 ; [debug line = 80:8] [debug variable = m]
  %tmp.842 = and i1 %m1.lcssa, %x.13, !dbg !1345  ; [#uses=1 type=i1] [debug line = 84:3]
  %tmp.884.cast = select i1 %tmp.842, i32 127, i32 0, !dbg !1345 ; [#uses=1 type=i32] [debug line = 84:3]
  %tmp.843 = sub i32 %a.assign, %tmp.884.cast, !dbg !1345 ; [#uses=1 type=i32] [debug line = 84:3]
  store i32 %tmp.843, i32* %r.v.addr, align 4, !dbg !1345 ; [debug line = 84:3]
  %tmp.844 = and i1 %m1.lcssa, %x.13, !dbg !1346  ; [#uses=1 type=i1] [debug line = 86:5]
  %tmp.886.cast = select i1 %tmp.844, i32 255, i32 0, !dbg !1346 ; [#uses=1 type=i32] [debug line = 86:5]
  br label %5, !dbg !1348                         ; [debug line = 85:7]

; <label>:5                                       ; preds = %7, %4
  %i.1 = phi i5 [ -2, %4 ], [ %i.58, %7 ]         ; [#uses=3 type=i5]
  %tmp.845 = icmp eq i5 %i.1, 0, !dbg !1348       ; [#uses=1 type=i1] [debug line = 85:7]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 30, i64 30, i64 30) ; [#uses=0 type=i32]
  br i1 %tmp.845, label %8, label %7, !dbg !1348  ; [debug line = 85:7]

; <label>:7                                       ; preds = %5
  %tmp.847 = zext i5 %i.1 to i64, !dbg !1346      ; [#uses=1 type=i64] [debug line = 86:5]
  %r.v.addr.10 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.847, !dbg !1346 ; [#uses=2 type=i32*] [debug line = 86:5]
  %r.v.load.7 = load i32* %r.v.addr.10, align 4, !dbg !1346 ; [#uses=1 type=i32] [debug line = 86:5]
  %tmp.848 = sub i32 %r.v.load.7, %tmp.886.cast, !dbg !1346 ; [#uses=1 type=i32] [debug line = 86:5]
  store i32 %tmp.848, i32* %r.v.addr.10, align 4, !dbg !1346 ; [debug line = 86:5]
  %i.58 = add i5 %i.1, -1, !dbg !1349             ; [#uses=1 type=i5] [debug line = 85:16]
  call void @llvm.dbg.value(metadata !{i5 %i.58}, i64 0, metadata !1334), !dbg !1349 ; [debug line = 85:16] [debug variable = i]
  br label %5, !dbg !1349                         ; [debug line = 85:16]

; <label>:8                                       ; preds = %5
  %tmp.890.cast = select i1 %m.2, i32 237, i32 0, !dbg !1350 ; [#uses=1 type=i32] [debug line = 87:3]
  %r.v.load.8 = load i32* %r.v.addr.9, align 4, !dbg !1350 ; [#uses=1 type=i32] [debug line = 87:3]
  %tmp.846 = sub i32 %r.v.load.8, %tmp.890.cast, !dbg !1350 ; [#uses=1 type=i32] [debug line = 87:3]
  store i32 %tmp.846, i32* %r.v.addr.9, align 4, !dbg !1350 ; [debug line = 87:3]
  ret void, !dbg !1351                            ; [debug line = 88:1]
}

; [#uses=1]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_add.1([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %x.v) {
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1352), !dbg !1355 ; [debug line = 168:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !1356), !dbg !1358 ; [debug line = 168:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !1359), !dbg !1361 ; [debug line = 168:159] [debug variable = y.v]
  br label %1, !dbg !1362                         ; [debug line = 171:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.59, %3 ]            ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i, -32, !dbg !1362      ; [#uses=1 type=i1] [debug line = 171:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %4, label %3, !dbg !1362 ; [debug line = 171:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !1365            ; [#uses=2 type=i64] [debug line = 171:21]
  %y.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 %tmp, !dbg !1365 ; [#uses=1 type=i32*] [debug line = 171:21]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !1365 ; [#uses=1 type=i32] [debug line = 171:21]
  %tmp. = shl i32 %y.v.load, 1, !dbg !1365        ; [#uses=1 type=i32] [debug line = 171:21]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp, !dbg !1365 ; [#uses=1 type=i32*] [debug line = 171:21]
  store i32 %tmp., i32* %r.v.addr, align 4, !dbg !1365 ; [debug line = 171:21]
  %i.59 = add i6 %i, 1, !dbg !1366                ; [#uses=1 type=i6] [debug line = 171:16]
  call void @llvm.dbg.value(metadata !{i6 %i.59}, i64 0, metadata !1367), !dbg !1366 ; [debug line = 171:16] [debug variable = i]
  br label %1, !dbg !1366                         ; [debug line = 171:16]

; <label>:4                                       ; preds = %1
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1368), !dbg !1370 ; [debug line = 33:61@172:3] [debug variable = r.v]
  %r.v.addr.13 = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !1371 ; [#uses=2 type=i32*] [debug line = 40:5@172:3]
  %r.v.addr.14 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !1372 ; [#uses=2 type=i32*] [debug line = 43:5@172:3]
  br label %5, !dbg !1373                         ; [debug line = 38:7@172:3]

; <label>:5                                       ; preds = %11, %4
  %rep.i = phi i3 [ 0, %4 ], [ %rep, %11 ]        ; [#uses=2 type=i3]
  %exitcond1.i = icmp eq i3 %rep.i, -4, !dbg !1373 ; [#uses=1 type=i1] [debug line = 38:7@172:3]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_add_sub64.exit, label %7, !dbg !1373 ; [debug line = 38:7@172:3]

; <label>:7                                       ; preds = %5
  %r.v.load = load i32* %r.v.addr.13, align 4, !dbg !1371 ; [#uses=2 type=i32] [debug line = 40:5@172:3]
  %r.v.load.cast = trunc i32 %r.v.load to i7, !dbg !1371 ; [#uses=1 type=i7] [debug line = 40:5@172:3]
  %t.24 = lshr i32 %r.v.load, 7, !dbg !1371       ; [#uses=1 type=i32] [debug line = 40:5@172:3]
  %t.22.cast = trunc i32 %t.24 to i31, !dbg !1371 ; [#uses=1 type=i31] [debug line = 40:5@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t.24}, i64 0, metadata !1374), !dbg !1371 ; [debug line = 40:5@172:3] [debug variable = t]
  %tmp.i.cast = zext i7 %r.v.load.cast to i32, !dbg !1375 ; [#uses=1 type=i32] [debug line = 41:5@172:3]
  store i32 %tmp.i.cast, i32* %r.v.addr.13, align 4, !dbg !1375 ; [debug line = 41:5@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t.24}, i64 0, metadata !1376), !dbg !1378 ; [debug line = 23:44@42:9@172:3] [debug variable = a]
  %t = mul i31 %t.22.cast, 19, !dbg !1379         ; [#uses=1 type=i31] [debug line = 25:3@42:9@172:3]
  %t.cast3 = zext i31 %t to i32, !dbg !1379       ; [#uses=1 type=i32] [debug line = 25:3@42:9@172:3]
  call void @llvm.dbg.value(metadata !{i31 %t}, i64 0, metadata !1374), !dbg !1377 ; [debug line = 42:9@172:3] [debug variable = t]
  %r.v.load.10 = load i32* %r.v.addr.14, align 4, !dbg !1372 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  %tmp..i = add i32 %t.cast3, %r.v.load.10, !dbg !1372 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  store i32 %tmp..i, i32* %r.v.addr.14, align 4, !dbg !1372 ; [debug line = 43:5@172:3]
  br label %8, !dbg !1380                         ; [debug line = 44:9@172:3]

; <label>:8                                       ; preds = %10, %7
  %i.i = phi i5 [ 0, %7 ], [ %i.60, %10 ]         ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !1380   ; [#uses=1 type=i1] [debug line = 44:9@172:3]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %11, label %10, !dbg !1380 ; [debug line = 44:9@172:3]

; <label>:10                                      ; preds = %8
  %tmp.759.i = zext i5 %i.i to i64, !dbg !1381    ; [#uses=1 type=i64] [debug line = 46:7@172:3]
  %r.v.addr.15 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.759.i, !dbg !1381 ; [#uses=2 type=i32*] [debug line = 46:7@172:3]
  %r.v.load.11 = load i32* %r.v.addr.15, align 4, !dbg !1381 ; [#uses=2 type=i32] [debug line = 46:7@172:3]
  %r.v.load.11.cast = trunc i32 %r.v.load.11 to i8, !dbg !1381 ; [#uses=1 type=i8] [debug line = 46:7@172:3]
  %t.23 = lshr i32 %r.v.load.11, 8, !dbg !1381    ; [#uses=1 type=i32] [debug line = 46:7@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t.23}, i64 0, metadata !1374), !dbg !1381 ; [debug line = 46:7@172:3] [debug variable = t]
  %i.60 = add i5 %i.i, 1, !dbg !1382              ; [#uses=2 type=i5] [debug line = 47:7@172:3]
  %tmp.760.i = zext i5 %i.60 to i64, !dbg !1382   ; [#uses=1 type=i64] [debug line = 47:7@172:3]
  %r.v.addr.16 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.760.i, !dbg !1382 ; [#uses=2 type=i32*] [debug line = 47:7@172:3]
  %r.v.load.12 = load i32* %r.v.addr.16, align 4, !dbg !1382 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  %tmp.761.i = add i32 %t.23, %r.v.load.12, !dbg !1382 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  store i32 %tmp.761.i, i32* %r.v.addr.16, align 4, !dbg !1382 ; [debug line = 47:7@172:3]
  %tmp.762.i.cast = zext i8 %r.v.load.11.cast to i32, !dbg !1383 ; [#uses=1 type=i32] [debug line = 48:7@172:3]
  store i32 %tmp.762.i.cast, i32* %r.v.addr.15, align 4, !dbg !1383 ; [debug line = 48:7@172:3]
  call void @llvm.dbg.value(metadata !{i5 %i.60}, i64 0, metadata !1384), !dbg !1385 ; [debug line = 44:18@172:3] [debug variable = i]
  br label %8, !dbg !1385                         ; [debug line = 44:18@172:3]

; <label>:11                                      ; preds = %8
  %rep = add i3 %rep.i, 1, !dbg !1386             ; [#uses=1 type=i3] [debug line = 38:19@172:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !1387), !dbg !1386 ; [debug line = 38:19@172:3] [debug variable = rep]
  br label %5, !dbg !1386                         ; [debug line = 38:19@172:3]

reduce_add_sub64.exit:                            ; preds = %5
  ret void, !dbg !1388                            ; [debug line = 173:1]
}

; [#uses=4]
define internal fastcc void @crypto_sign_ed25519_ref_fe25519_add([32 x i32]* nocapture %r.v, [32 x i32]* nocapture %x.v, [32 x i32]* nocapture %y.v) {
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1352), !dbg !1355 ; [debug line = 168:75] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %x.v}, i64 0, metadata !1356), !dbg !1358 ; [debug line = 168:117] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %y.v}, i64 0, metadata !1359), !dbg !1361 ; [debug line = 168:159] [debug variable = y.v]
  br label %1, !dbg !1362                         ; [debug line = 171:7]

; <label>:1                                       ; preds = %3, %0
  %i = phi i6 [ 0, %0 ], [ %i.61, %3 ]            ; [#uses=3 type=i6]
  %exitcond = icmp eq i6 %i, -32, !dbg !1362      ; [#uses=1 type=i1] [debug line = 171:7]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %4, label %3, !dbg !1362 ; [debug line = 171:7]

; <label>:3                                       ; preds = %1
  %tmp = zext i6 %i to i64, !dbg !1365            ; [#uses=3 type=i64] [debug line = 171:21]
  %x.v.addr = getelementptr [32 x i32]* %x.v, i64 0, i64 %tmp, !dbg !1365 ; [#uses=1 type=i32*] [debug line = 171:21]
  %x.v.load = load i32* %x.v.addr, align 4, !dbg !1365 ; [#uses=1 type=i32] [debug line = 171:21]
  %y.v.addr = getelementptr [32 x i32]* %y.v, i64 0, i64 %tmp, !dbg !1365 ; [#uses=1 type=i32*] [debug line = 171:21]
  %y.v.load = load i32* %y.v.addr, align 4, !dbg !1365 ; [#uses=1 type=i32] [debug line = 171:21]
  %tmp. = add i32 %y.v.load, %x.v.load, !dbg !1365 ; [#uses=1 type=i32] [debug line = 171:21]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp, !dbg !1365 ; [#uses=1 type=i32*] [debug line = 171:21]
  store i32 %tmp., i32* %r.v.addr, align 4, !dbg !1365 ; [debug line = 171:21]
  %i.61 = add i6 %i, 1, !dbg !1366                ; [#uses=1 type=i6] [debug line = 171:16]
  call void @llvm.dbg.value(metadata !{i6 %i.61}, i64 0, metadata !1367), !dbg !1366 ; [debug line = 171:16] [debug variable = i]
  br label %1, !dbg !1366                         ; [debug line = 171:16]

; <label>:4                                       ; preds = %1
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1368), !dbg !1370 ; [debug line = 33:61@172:3] [debug variable = r.v]
  %r.v.addr.17 = getelementptr [32 x i32]* %r.v, i64 0, i64 31, !dbg !1371 ; [#uses=2 type=i32*] [debug line = 40:5@172:3]
  %r.v.addr.18 = getelementptr [32 x i32]* %r.v, i64 0, i64 0, !dbg !1372 ; [#uses=2 type=i32*] [debug line = 43:5@172:3]
  br label %5, !dbg !1373                         ; [debug line = 38:7@172:3]

; <label>:5                                       ; preds = %11, %4
  %rep.i = phi i3 [ 0, %4 ], [ %rep, %11 ]        ; [#uses=2 type=i3]
  %exitcond1.i = icmp eq i3 %rep.i, -4, !dbg !1373 ; [#uses=1 type=i1] [debug line = 38:7@172:3]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %reduce_add_sub64.exit, label %7, !dbg !1373 ; [debug line = 38:7@172:3]

; <label>:7                                       ; preds = %5
  %r.v.load = load i32* %r.v.addr.17, align 4, !dbg !1371 ; [#uses=2 type=i32] [debug line = 40:5@172:3]
  %r.v.load.cast = trunc i32 %r.v.load to i7, !dbg !1371 ; [#uses=1 type=i7] [debug line = 40:5@172:3]
  %t.27 = lshr i32 %r.v.load, 7, !dbg !1371       ; [#uses=1 type=i32] [debug line = 40:5@172:3]
  %t.24.cast = trunc i32 %t.27 to i31, !dbg !1371 ; [#uses=1 type=i31] [debug line = 40:5@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t.27}, i64 0, metadata !1374), !dbg !1371 ; [debug line = 40:5@172:3] [debug variable = t]
  %tmp.i.cast = zext i7 %r.v.load.cast to i32, !dbg !1375 ; [#uses=1 type=i32] [debug line = 41:5@172:3]
  store i32 %tmp.i.cast, i32* %r.v.addr.17, align 4, !dbg !1375 ; [debug line = 41:5@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t.27}, i64 0, metadata !1376), !dbg !1378 ; [debug line = 23:44@42:9@172:3] [debug variable = a]
  %t = mul i31 %t.24.cast, 19, !dbg !1379         ; [#uses=1 type=i31] [debug line = 25:3@42:9@172:3]
  %t.cast3 = zext i31 %t to i32, !dbg !1379       ; [#uses=1 type=i32] [debug line = 25:3@42:9@172:3]
  call void @llvm.dbg.value(metadata !{i31 %t}, i64 0, metadata !1374), !dbg !1377 ; [debug line = 42:9@172:3] [debug variable = t]
  %r.v.load.13 = load i32* %r.v.addr.18, align 4, !dbg !1372 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  %tmp..i = add i32 %t.cast3, %r.v.load.13, !dbg !1372 ; [#uses=1 type=i32] [debug line = 43:5@172:3]
  store i32 %tmp..i, i32* %r.v.addr.18, align 4, !dbg !1372 ; [debug line = 43:5@172:3]
  br label %8, !dbg !1380                         ; [debug line = 44:9@172:3]

; <label>:8                                       ; preds = %10, %7
  %i.i = phi i5 [ 0, %7 ], [ %i.62, %10 ]         ; [#uses=3 type=i5]
  %exitcond.i = icmp eq i5 %i.i, -1, !dbg !1380   ; [#uses=1 type=i1] [debug line = 44:9@172:3]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 31, i64 31, i64 31) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %11, label %10, !dbg !1380 ; [debug line = 44:9@172:3]

; <label>:10                                      ; preds = %8
  %tmp.759.i = zext i5 %i.i to i64, !dbg !1381    ; [#uses=1 type=i64] [debug line = 46:7@172:3]
  %r.v.addr.19 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.759.i, !dbg !1381 ; [#uses=2 type=i32*] [debug line = 46:7@172:3]
  %r.v.load.14 = load i32* %r.v.addr.19, align 4, !dbg !1381 ; [#uses=2 type=i32] [debug line = 46:7@172:3]
  %r.v.load.14.cast = trunc i32 %r.v.load.14 to i8, !dbg !1381 ; [#uses=1 type=i8] [debug line = 46:7@172:3]
  %t.26 = lshr i32 %r.v.load.14, 8, !dbg !1381    ; [#uses=1 type=i32] [debug line = 46:7@172:3]
  call void @llvm.dbg.value(metadata !{i32 %t.26}, i64 0, metadata !1374), !dbg !1381 ; [debug line = 46:7@172:3] [debug variable = t]
  %i.62 = add i5 %i.i, 1, !dbg !1382              ; [#uses=2 type=i5] [debug line = 47:7@172:3]
  %tmp.760.i = zext i5 %i.62 to i64, !dbg !1382   ; [#uses=1 type=i64] [debug line = 47:7@172:3]
  %r.v.addr.20 = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.760.i, !dbg !1382 ; [#uses=2 type=i32*] [debug line = 47:7@172:3]
  %r.v.load.15 = load i32* %r.v.addr.20, align 4, !dbg !1382 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  %tmp.761.i = add i32 %t.26, %r.v.load.15, !dbg !1382 ; [#uses=1 type=i32] [debug line = 47:7@172:3]
  store i32 %tmp.761.i, i32* %r.v.addr.20, align 4, !dbg !1382 ; [debug line = 47:7@172:3]
  %tmp.762.i.cast = zext i8 %r.v.load.14.cast to i32, !dbg !1383 ; [#uses=1 type=i32] [debug line = 48:7@172:3]
  store i32 %tmp.762.i.cast, i32* %r.v.addr.19, align 4, !dbg !1383 ; [debug line = 48:7@172:3]
  call void @llvm.dbg.value(metadata !{i5 %i.62}, i64 0, metadata !1384), !dbg !1385 ; [debug line = 44:18@172:3] [debug variable = i]
  br label %8, !dbg !1385                         ; [debug line = 44:18@172:3]

; <label>:11                                      ; preds = %8
  %rep = add i3 %rep.i, 1, !dbg !1386             ; [#uses=1 type=i3] [debug line = 38:19@172:3]
  call void @llvm.dbg.value(metadata !{i3 %rep}, i64 0, metadata !1387), !dbg !1386 ; [debug line = 38:19@172:3] [debug variable = rep]
  br label %5, !dbg !1386                         ; [debug line = 38:19@172:3]

reduce_add_sub64.exit:                            ; preds = %5
  ret void, !dbg !1388                            ; [debug line = 173:1]
}

; [#uses=0]
define i32 @crypto_sign([32768 x i8]* %mem, i32 %num_blocks, [64 x i8]* %sk, [64 x i8]* %signature_out) nounwind uwtable {
  %t.26 = alloca [64 x i32], align 16             ; [#uses=3 type=[64 x i32]*]
  %t.25 = alloca [64 x i32], align 16             ; [#uses=2 type=[64 x i32]*]
  %tx.v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %ty.v = alloca [32 x i32], align 4              ; [#uses=2 type=[32 x i32]*]
  %zi.v = alloca [32 x i32], align 4              ; [#uses=3 type=[32 x i32]*]
  %t = alloca [64 x i32], align 16                ; [#uses=2 type=[64 x i32]*]
  call void (...)* @_ssdm_op_SpecBitsMap([32768 x i8]* %mem) nounwind, !map !1389
  call void (...)* @_ssdm_op_SpecBitsMap(i32 %num_blocks) nounwind, !map !1395
  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %sk) nounwind, !map !1401
  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %signature_out) nounwind, !map !1407
  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !1411
  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @crypto_sign.str) nounwind
  %pk = alloca [32 x i8], align 16                ; [#uses=2 type=[32 x i8]*]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %pk}, i64 0, metadata !1417) nounwind, !dbg !1430 ; [debug line = 13:29@35:2@78:3] [debug variable = dst]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %pk}, i64 0, metadata !1431) nounwind, !dbg !1432 ; [debug line = 34:30@78:3] [debug variable = dst]
  %az = alloca [64 x i8], align 16                ; [#uses=5 type=[64 x i8]*]
  %nonce = alloca [64 x i8], align 16             ; [#uses=2 type=[64 x i8]*]
  %hram = alloca [64 x i8], align 16              ; [#uses=2 type=[64 x i8]*]
  %signature = alloca [64 x i8], align 16         ; [#uses=10 type=[64 x i8]*]
  %temp_buf = alloca [128 x i8], align 16         ; [#uses=4 type=[128 x i8]*]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %temp_buf}, metadata !1433), !dbg !1434 ; [debug line = 71:17] [debug variable = temp_buf]
  %sck.v = alloca [32 x i32], align 4             ; [#uses=3 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %sck.v}, metadata !1435), !dbg !1442 ; [debug line = 73:35] [debug variable = sck.v]
  %scs.v = alloca [32 x i32], align 4             ; [#uses=4 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %scs.v}, metadata !1443), !dbg !1445 ; [debug line = 73:40] [debug variable = scs.v]
  %scsk.v = alloca [32 x i32], align 4            ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %scsk.v}, metadata !1446), !dbg !1448 ; [debug line = 73:45] [debug variable = scsk.v]
  %ger.x.v = alloca [32 x i32], align 4           ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ger.x.v}, metadata !1449), !dbg !1465 ; [debug line = 74:35] [debug variable = ger.x.v]
  %ger.y.v = alloca [32 x i32], align 4           ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ger.y.v}, metadata !1466), !dbg !1465 ; [debug line = 74:35] [debug variable = ger.y.v]
  %ger.z.v = alloca [32 x i32], align 4           ; [#uses=2 type=[32 x i32]*]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ger.z.v}, metadata !1467), !dbg !1465 ; [debug line = 74:35] [debug variable = ger.z.v]
  %ger.t.v = alloca [32 x i32], align 4           ; [#uses=1 type=[32 x i32]*]
  %hash.state = alloca [8 x i64], align 8         ; [#uses=12 type=[8 x i64]*]
  call void @llvm.dbg.declare(metadata !{[8 x i64]* %hash.state}, metadata !1468), !dbg !1479 ; [debug line = 75:18] [debug variable = hash.state]
  %hash.buf = alloca [128 x i8], align 1          ; [#uses=9 type=[128 x i8]*]
  call void @llvm.dbg.declare(metadata !{[128 x i8]* %hash.buf}, metadata !1480), !dbg !1479 ; [debug line = 75:18] [debug variable = hash.buf]
  call void @llvm.dbg.value(metadata !{[32768 x i8]* %mem}, i64 0, metadata !1483), !dbg !1487 ; [debug line = 49:17] [debug variable = mem]
  call void @llvm.dbg.value(metadata !{i32 %num_blocks}, i64 0, metadata !1488), !dbg !1489 ; [debug line = 50:16] [debug variable = num_blocks]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %sk}, i64 0, metadata !1490), !dbg !1491 ; [debug line = 51:17] [debug variable = sk]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %signature_out}, i64 0, metadata !1492), !dbg !1493 ; [debug line = 52:17] [debug variable = signature_out]
  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @.str, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1, [1 x i8]* @.str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind, !dbg !1494 ; [debug line = 55:1]
  call void (...)* @_ssdm_op_SpecInterface([64 x i8]* %signature_out, [10 x i8]* @.str, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1, [1 x i8]* @.str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind
  call void (...)* @_ssdm_op_SpecInterface([64 x i8]* %sk, [10 x i8]* @.str, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1, [1 x i8]* @.str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind
  call void (...)* @_ssdm_op_SpecInterface(i32 %num_blocks, [10 x i8]* @.str, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1, [1 x i8]* @.str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind, !dbg !1495 ; [debug line = 58:1]
  call void (...)* @_ssdm_op_SpecInterface([32768 x i8]* %mem, [6 x i8]* @.str2, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 32768, [1 x i8]* @.str1, [1 x i8]* @.str1, [1 x i8]* @.str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str1, [1 x i8]* @.str1, [17 x i8]* @.str3, [1 x i8]* @.str1) nounwind, !dbg !1496 ; [debug line = 60:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str1, [1 x i8]* @.str1, [18 x i8]* @.str4, [1 x i8]* @.str1) nounwind, !dbg !1497 ; [debug line = 61:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str1, [1 x i8]* @.str1, [13 x i8]* @.str5, [1 x i8]* @.str1) nounwind, !dbg !1498 ; [debug line = 62:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str1, [1 x i8]* @.str1, [12 x i8]* @.str6, [1 x i8]* @.str1) nounwind, !dbg !1499 ; [debug line = 63:1]
  call void (...)* @_ssdm_op_SpecResourceLimit(i32 1, [1 x i8]* @.str1, [1 x i8]* @.str1, [9 x i8]* @.str7, [1 x i8]* @.str1) nounwind, !dbg !1500 ; [debug line = 64:1]
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %pk}, metadata !1501), !dbg !1502 ; [debug line = 65:16] [debug variable = pk]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %az}, metadata !1503), !dbg !1504 ; [debug line = 66:17] [debug variable = az]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %nonce}, metadata !1505), !dbg !1506 ; [debug line = 67:17] [debug variable = nonce]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %hram}, metadata !1507), !dbg !1508 ; [debug line = 68:17] [debug variable = hram]
  call void @llvm.dbg.declare(metadata !{[64 x i8]* %signature}, metadata !1509), !dbg !1510 ; [debug line = 70:17] [debug variable = signature]
  br label %meminst

meminst:                                          ; preds = %meminst, %0
  %invdar = phi i6 [ 0, %0 ], [ %indvarinc, %meminst ] ; [#uses=3 type=i6]
  %indvarinc = add i6 %invdar, 1, !dbg !1511      ; [#uses=1 type=i6] [debug line = 70:36]
  %tmp = zext i6 %invdar to i64, !dbg !1511       ; [#uses=1 type=i64] [debug line = 70:36]
  %signature.addr = getelementptr [64 x i8]* %signature, i64 0, i64 %tmp, !dbg !1511 ; [#uses=1 type=i8*] [debug line = 70:36]
  store i8 0, i8* %signature.addr, align 1, !dbg !1511 ; [debug line = 70:36]
  %tmp. = icmp eq i6 %invdar, -1, !dbg !1511      ; [#uses=1 type=i1] [debug line = 70:36]
  %1 = call i32 (...)* @_ssdm_op_SpecLoopName([17 x i8]* @memset_signature.str) nounwind ; [#uses=0 type=i32]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  br i1 %tmp., label %.preheader109.preheader, label %meminst, !dbg !1511 ; [debug line = 70:36]

.preheader109.preheader:                          ; preds = %meminst
  br label %.preheader109, !dbg !1512             ; [debug line = 15:6@35:2@78:3]

.preheader109:                                    ; preds = %4, %.preheader109.preheader
  %i.i.i = phi i6 [ %i.63, %4 ], [ 0, %.preheader109.preheader ] ; [#uses=4 type=i6]
  %exitcond.i.i = icmp eq i6 %i.i.i, -32, !dbg !1512 ; [#uses=1 type=i1] [debug line = 15:6@35:2@78:3]
  %3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i.i, label %_memmove.1.exit, label %4, !dbg !1512 ; [debug line = 15:6@35:2@78:3]

; <label>:4                                       ; preds = %.preheader109
  %tmp.i.i = zext i6 %i.i.i to i64, !dbg !1515    ; [#uses=1 type=i64] [debug line = 16:3@35:2@78:3]
  %sum.i.i = xor i6 %i.i.i, -32                   ; [#uses=1 type=i6]
  %sum.i.i.cast = zext i6 %sum.i.i to i64         ; [#uses=1 type=i64]
  %sk.addr = getelementptr [64 x i8]* %sk, i64 0, i64 %sum.i.i.cast, !dbg !1515 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@78:3]
  %sk.load = load i8* %sk.addr, align 1, !dbg !1515 ; [#uses=1 type=i8] [debug line = 16:3@35:2@78:3]
  %pk.addr = getelementptr [32 x i8]* %pk, i64 0, i64 %tmp.i.i, !dbg !1515 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@78:3]
  store i8 %sk.load, i8* %pk.addr, align 1, !dbg !1515 ; [debug line = 16:3@35:2@78:3]
  %i.63 = add i6 %i.i.i, 1, !dbg !1517            ; [#uses=1 type=i6] [debug line = 15:18@35:2@78:3]
  call void @llvm.dbg.value(metadata !{i6 %i.63}, i64 0, metadata !1518) nounwind, !dbg !1517 ; [debug line = 15:18@35:2@78:3] [debug variable = i]
  br label %.preheader109, !dbg !1517             ; [debug line = 15:18@35:2@78:3]

_memmove.1.exit:                                  ; preds = %.preheader109
  call fastcc void @sha512_init([8 x i64]* %hash.state) nounwind, !dbg !1519 ; [debug line = 82:3]
  %call.ret = call fastcc { i64, i64 } @sha512_update_32([8 x i64]* %hash.state, [128 x i8]* %hash.buf, [64 x i8]* %sk) nounwind, !dbg !1520 ; [#uses=2 type={ i64, i64 }] [debug line = 83:3]
  %hash.length = extractvalue { i64, i64 } %call.ret, 0, !dbg !1520 ; [#uses=1 type=i64] [debug line = 83:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.length}, i64 0, metadata !1521), !dbg !1520 ; [debug line = 83:3] [debug variable = hash.length]
  %hash.curlen = extractvalue { i64, i64 } %call.ret, 1, !dbg !1520 ; [#uses=1 type=i64] [debug line = 83:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.curlen}, i64 0, metadata !1524), !dbg !1520 ; [debug line = 83:3] [debug variable = hash.curlen]
  %az.addr = getelementptr inbounds [64 x i8]* %az, i64 0, i64 0, !dbg !1527 ; [#uses=2 type=i8*] [debug line = 84:3]
  call fastcc void @sha512_final(i64 %hash.length, [8 x i64]* %hash.state, i64 %hash.curlen, [128 x i8]* %hash.buf, [64 x i8]* %az) nounwind, !dbg !1527 ; [debug line = 84:3]
  %az.load = load i8* %az.addr, align 16, !dbg !1528 ; [#uses=1 type=i8] [debug line = 86:3]
  %tmp.849 = and i8 %az.load, -8, !dbg !1528      ; [#uses=1 type=i8] [debug line = 86:3]
  store i8 %tmp.849, i8* %az.addr, align 16, !dbg !1528 ; [debug line = 86:3]
  %az.addr.1 = getelementptr inbounds [64 x i8]* %az, i64 0, i64 31, !dbg !1529 ; [#uses=2 type=i8*] [debug line = 87:3]
  %az.load.1 = load i8* %az.addr.1, align 1, !dbg !1529 ; [#uses=1 type=i8] [debug line = 87:3]
  %az.load.1.cast = trunc i8 %az.load.1 to i6, !dbg !1529 ; [#uses=1 type=i6] [debug line = 87:3]
  %tmp.893.cast = zext i6 %az.load.1.cast to i7, !dbg !1529 ; [#uses=1 type=i7] [debug line = 87:3]
  %tmp.850 = or i7 %tmp.893.cast, -64, !dbg !1530 ; [#uses=1 type=i7] [debug line = 88:3]
  %tmp.894.cast = zext i7 %tmp.850 to i8, !dbg !1530 ; [#uses=1 type=i8] [debug line = 88:3]
  store i8 %tmp.894.cast, i8* %az.addr.1, align 1, !dbg !1530 ; [debug line = 88:3]
  br label %5, !dbg !1531                         ; [debug line = 15:6@35:2@96:3]

; <label>:5                                       ; preds = %7, %_memmove.1.exit
  %i.i.i1 = phi i6 [ 0, %_memmove.1.exit ], [ %i.64, %7 ] ; [#uses=3 type=i6]
  %exitcond.i.i1 = icmp eq i6 %i.i.i1, -32, !dbg !1531 ; [#uses=1 type=i1] [debug line = 15:6@35:2@96:3]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i.i1, label %_memmove.2.exit, label %7, !dbg !1531 ; [debug line = 15:6@35:2@96:3]

; <label>:7                                       ; preds = %5
  %sum3.i.i = xor i6 %i.i.i1, -32                 ; [#uses=1 type=i6]
  %sum3.i.i.cast = zext i6 %sum3.i.i to i64       ; [#uses=2 type=i64]
  %az.addr.2 = getelementptr [64 x i8]* %az, i64 0, i64 %sum3.i.i.cast, !dbg !1534 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@96:3]
  %az.load.2 = load i8* %az.addr.2, align 1, !dbg !1534 ; [#uses=1 type=i8] [debug line = 16:3@35:2@96:3]
  %signature.addr.1 = getelementptr [64 x i8]* %signature, i64 0, i64 %sum3.i.i.cast, !dbg !1534 ; [#uses=1 type=i8*] [debug line = 16:3@35:2@96:3]
  store i8 %az.load.2, i8* %signature.addr.1, align 1, !dbg !1534 ; [debug line = 16:3@35:2@96:3]
  %i.64 = add i6 %i.i.i1, 1, !dbg !1535           ; [#uses=1 type=i6] [debug line = 15:18@35:2@96:3]
  call void @llvm.dbg.value(metadata !{i6 %i.64}, i64 0, metadata !1536) nounwind, !dbg !1535 ; [debug line = 15:18@35:2@96:3] [debug variable = i]
  br label %5, !dbg !1535                         ; [debug line = 15:18@35:2@96:3]

_memmove.2.exit:                                  ; preds = %5
  call fastcc void @sha512_init([8 x i64]* %hash.state) nounwind, !dbg !1537 ; [debug line = 100:3]
  %tmp.10 = call fastcc { i64, i64 } @sha512_update_32.1(i64 0, [8 x i64]* %hash.state, i64 0, [128 x i8]* %hash.buf, [64 x i8]* %signature, i7 32) nounwind, !dbg !1538 ; [#uses=2 type={ i64, i64 }] [debug line = 102:3]
  %hash.length.2 = extractvalue { i64, i64 } %tmp.10, 0, !dbg !1538 ; [#uses=1 type=i64] [debug line = 102:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.length.2}, i64 0, metadata !1521), !dbg !1538 ; [debug line = 102:3] [debug variable = hash.length]
  %hash.curlen.2 = extractvalue { i64, i64 } %tmp.10, 1, !dbg !1538 ; [#uses=1 type=i64] [debug line = 102:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.curlen.2}, i64 0, metadata !1524), !dbg !1538 ; [debug line = 102:3] [debug variable = hash.curlen]
  br label %8, !dbg !1539                         ; [debug line = 104:7]

; <label>:8                                       ; preds = %12, %_memmove.2.exit
  %hash.curlen3 = phi i64 [ %hash.curlen.2, %_memmove.2.exit ], [ %hash.curlen.5, %12 ] ; [#uses=2 type=i64]
  %hash.length3 = phi i64 [ %hash.length.2, %_memmove.2.exit ], [ %hash.length.5, %12 ] ; [#uses=2 type=i64]
  %i = phi i32 [ 0, %_memmove.2.exit ], [ %i.66, %12 ] ; [#uses=3 type=i32]
  %exitcond3 = icmp eq i32 %i, %num_blocks, !dbg !1539 ; [#uses=1 type=i1] [debug line = 104:7]
  br i1 %exitcond3, label %13, label %.preheader4.preheader, !dbg !1539 ; [debug line = 104:7]

.preheader4.preheader:                            ; preds = %8
  %tmp.851 = shl i32 %i, 7, !dbg !1541            ; [#uses=2 type=i32] [debug line = 107:5]
  %tmp.78 = zext i8 0 to i32, !dbg !1545          ; [#uses=1 type=i32] [debug line = 106:8]
  %tmp.79 = add nsw i32 %tmp.78, %tmp.851, !dbg !1541 ; [#uses=1 type=i32] [debug line = 107:5]
  %tmp.80 = sext i32 %tmp.79 to i64, !dbg !1541   ; [#uses=1 type=i64] [debug line = 107:5]
  br label %.preheader4, !dbg !1545               ; [debug line = 106:8]

.preheader4:                                      ; preds = %10, %.preheader4.preheader
  %j = phi i8 [ %j.3, %10 ], [ 0, %.preheader4.preheader ] ; [#uses=4 type=i8]
  %j.cast8 = zext i8 %j to i32, !dbg !1545        ; [#uses=1 type=i32] [debug line = 106:8]
  %exitcond2 = icmp eq i8 %j, -128, !dbg !1545    ; [#uses=1 type=i1] [debug line = 106:8]
  %9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond2, label %12, label %10, !dbg !1545 ; [debug line = 106:8]

; <label>:10                                      ; preds = %.preheader4
  %tmp.852 = add nsw i32 %j.cast8, %tmp.851, !dbg !1541 ; [#uses=1 type=i32] [debug line = 107:5]
  %tmp.853 = sext i32 %tmp.852 to i64, !dbg !1541 ; [#uses=1 type=i64] [debug line = 107:5]
  %mem.addr = getelementptr [32768 x i8]* %mem, i64 0, i64 %tmp.853, !dbg !1541 ; [#uses=1 type=i8*] [debug line = 107:5]
  %mem.addr.2 = getelementptr [32768 x i8]* %mem, i64 0, i64 %tmp.80, !dbg !1541 ; [#uses=1 type=i8*] [debug line = 107:5]
  %tmp.81 = zext i8 -128 to i32                   ; [#uses=1 type=i32]
  %11 = call i32 (...)* @_ssdm_op_SpecBurst(i8* %mem.addr.2, i32 1, i32 %tmp.81, i32 1) ; [#uses=0 type=i32]
  %mem.load = load i8* %mem.addr, align 1, !dbg !1541 ; [#uses=1 type=i8] [debug line = 107:5]
  %tmp.854 = zext i8 %j to i64, !dbg !1541        ; [#uses=1 type=i64] [debug line = 107:5]
  %temp_buf.addr = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.854, !dbg !1541 ; [#uses=1 type=i8*] [debug line = 107:5]
  store i8 %mem.load, i8* %temp_buf.addr, align 1, !dbg !1541 ; [debug line = 107:5]
  %j.3 = add i8 %j, 1, !dbg !1546                 ; [#uses=1 type=i8] [debug line = 106:20]
  call void @llvm.dbg.value(metadata !{i8 %j.3}, i64 0, metadata !1547), !dbg !1546 ; [debug line = 106:20] [debug variable = j]
  br label %.preheader4, !dbg !1546               ; [debug line = 106:20]

; <label>:12                                      ; preds = %.preheader4
  %call.ret1 = call fastcc { i64, i64 } @sha512_update_128(i64 %hash.length3, [8 x i64]* %hash.state, i64 %hash.curlen3, [128 x i8]* %hash.buf, [128 x i8]* %temp_buf) nounwind, !dbg !1548 ; [#uses=2 type={ i64, i64 }] [debug line = 109:4]
  %hash.length.5 = extractvalue { i64, i64 } %call.ret1, 0, !dbg !1548 ; [#uses=1 type=i64] [debug line = 109:4]
  call void @llvm.dbg.value(metadata !{i64 %hash.length.5}, i64 0, metadata !1521), !dbg !1548 ; [debug line = 109:4] [debug variable = hash.length]
  %hash.curlen.5 = extractvalue { i64, i64 } %call.ret1, 1, !dbg !1548 ; [#uses=1 type=i64] [debug line = 109:4]
  call void @llvm.dbg.value(metadata !{i64 %hash.curlen.5}, i64 0, metadata !1524), !dbg !1548 ; [debug line = 109:4] [debug variable = hash.curlen]
  %i.66 = add nsw i32 %i, 1, !dbg !1549           ; [#uses=1 type=i32] [debug line = 104:26]
  call void @llvm.dbg.value(metadata !{i32 %i.66}, i64 0, metadata !1550), !dbg !1549 ; [debug line = 104:26] [debug variable = i]
  br label %8, !dbg !1549                         ; [debug line = 104:26]

; <label>:13                                      ; preds = %8
  %hash.length3.lcssa = phi i64 [ %hash.length3, %8 ] ; [#uses=1 type=i64]
  %hash.curlen3.lcssa = phi i64 [ %hash.curlen3, %8 ] ; [#uses=1 type=i64]
  call fastcc void @sha512_final(i64 %hash.length3.lcssa, [8 x i64]* %hash.state, i64 %hash.curlen3.lcssa, [128 x i8]* %hash.buf, [64 x i8]* %nonce) nounwind, !dbg !1551 ; [debug line = 111:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %sck.v}, i64 0, metadata !1552) nounwind, !dbg !1558 ; [debug line = 107:83@114:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %nonce}, i64 0, metadata !1559) nounwind, !dbg !1560 ; [debug line = 107:106@114:3] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t}, metadata !1561) nounwind, !dbg !1563 ; [debug line = 110:17@114:3] [debug variable = t]
  br label %14, !dbg !1564                        ; [debug line = 111:7@114:3]

; <label>:14                                      ; preds = %16, %13
  %i.i = phi i7 [ 0, %13 ], [ %i.65, %16 ]        ; [#uses=3 type=i7]
  %exitcond.i = icmp eq i7 %i.i, -64, !dbg !1564  ; [#uses=1 type=i1] [debug line = 111:7@114:3]
  %15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %crypto_sign_ed25519_ref_sc25519_from64bytes.exit, label %16, !dbg !1564 ; [debug line = 111:7@114:3]

; <label>:16                                      ; preds = %14
  %tmp.i = zext i7 %i.i to i64, !dbg !1566        ; [#uses=2 type=i64] [debug line = 111:21@114:3]
  %x.assign.addr = getelementptr [64 x i8]* %nonce, i64 0, i64 %tmp.i, !dbg !1566 ; [#uses=1 type=i8*] [debug line = 111:21@114:3]
  %x.assign.load = load i8* %x.assign.addr, align 1, !dbg !1566 ; [#uses=1 type=i8] [debug line = 111:21@114:3]
  %tmp..i = zext i8 %x.assign.load to i32, !dbg !1566 ; [#uses=1 type=i32] [debug line = 111:21@114:3]
  %t.addr = getelementptr inbounds [64 x i32]* %t, i64 0, i64 %tmp.i, !dbg !1566 ; [#uses=1 type=i32*] [debug line = 111:21@114:3]
  store i32 %tmp..i, i32* %t.addr, align 4, !dbg !1566 ; [debug line = 111:21@114:3]
  %i.65 = add i7 %i.i, 1, !dbg !1567              ; [#uses=1 type=i7] [debug line = 111:16@114:3]
  call void @llvm.dbg.value(metadata !{i7 %i.65}, i64 0, metadata !1568) nounwind, !dbg !1567 ; [debug line = 111:16@114:3] [debug variable = i]
  br label %14, !dbg !1567                        ; [debug line = 111:16@114:3]

crypto_sign_ed25519_ref_sc25519_from64bytes.exit: ; preds = %14
  call fastcc void @barrett_reduce([32 x i32]* %sck.v, [64 x i32]* %t) nounwind, !dbg !1569 ; [debug line = 112:3@114:3]
  call fastcc void @crypto_sign_ed25519_ref_scalarmult_base([32 x i32]* %ger.x.v, [32 x i32]* %ger.y.v, [32 x i32]* %ger.z.v, [32 x i32]* %ger.t.v, [32 x i32]* %sck.v) nounwind, !dbg !1570 ; [debug line = 115:3]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %signature}, i64 0, metadata !1571) nounwind, !dbg !1577 ; [debug line = 234:49@117:3] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %ger.x.v}, i64 0, metadata !1578) nounwind, !dbg !1580 ; [debug line = 234:95@117:3] [debug variable = p.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %ger.y.v}, i64 0, metadata !1581) nounwind, !dbg !1580 ; [debug line = 234:95@117:3] [debug variable = p.y.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %ger.z.v}, i64 0, metadata !1582) nounwind, !dbg !1580 ; [debug line = 234:95@117:3] [debug variable = p.z.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %tx.v}, metadata !1583) nounwind, !dbg !1586 ; [debug line = 236:35@117:3] [debug variable = tx.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %ty.v}, metadata !1587) nounwind, !dbg !1589 ; [debug line = 236:39@117:3] [debug variable = ty.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %zi.v}, metadata !1590) nounwind, !dbg !1592 ; [debug line = 236:43@117:3] [debug variable = zi.v]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_invert([32 x i32]* %zi.v, [32 x i32]* %ger.z.v) nounwind, !dbg !1593 ; [debug line = 237:3@117:3]
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %tx.v, [32 x i32]* %ger.x.v, [32 x i32]* %zi.v) nounwind
  call fastcc void @crypto_sign_ed25519_ref_fe25519_mul([32 x i32]* %ty.v, [32 x i32]* %ger.y.v, [32 x i32]* %zi.v) nounwind
  call fastcc void @crypto_sign_ed25519_ref_fe25519_pack([64 x i8]* %signature, [32 x i32]* %ty.v) nounwind, !dbg !1594 ; [debug line = 240:3@117:3]
  %tmp.i1 = call fastcc i1 @crypto_sign_ed25519_ref_fe25519_getparity([32 x i32]* %tx.v) nounwind, !dbg !1595 ; [#uses=1 type=i1] [debug line = 241:12@117:3]
  %tmp..i1.trunc.ext = zext i1 %tmp.i1 to i8, !dbg !1595 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  %tmp..i1 = shl nuw i8 %tmp..i1.trunc.ext, 7, !dbg !1595 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  %r.assign.addr = getelementptr [64 x i8]* %signature, i64 0, i64 31, !dbg !1595 ; [#uses=2 type=i8*] [debug line = 241:12@117:3]
  %r.assign.load = load i8* %r.assign.addr, align 1, !dbg !1595 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  %tmp.863.i = xor i8 %r.assign.load, %tmp..i1, !dbg !1595 ; [#uses=1 type=i8] [debug line = 241:12@117:3]
  store i8 %tmp.863.i, i8* %r.assign.addr, align 1, !dbg !1595 ; [debug line = 241:12@117:3]
  call fastcc void @_memmove([64 x i8]* %signature, [32 x i8]* %pk) nounwind, !dbg !1596 ; [debug line = 122:3]
  call fastcc void @sha512_init([8 x i64]* %hash.state) nounwind, !dbg !1597 ; [debug line = 126:3]
  %tmp.11 = call fastcc { i64, i64 } @sha512_update_32.1(i64 0, [8 x i64]* %hash.state, i64 0, [128 x i8]* %hash.buf, [64 x i8]* %signature, i7 0) nounwind, !dbg !1598 ; [#uses=2 type={ i64, i64 }] [debug line = 127:3]
  %hash.length.3 = extractvalue { i64, i64 } %tmp.11, 0, !dbg !1598 ; [#uses=1 type=i64] [debug line = 127:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.length.3}, i64 0, metadata !1521), !dbg !1598 ; [debug line = 127:3] [debug variable = hash.length]
  %hash.curlen.3 = extractvalue { i64, i64 } %tmp.11, 1, !dbg !1598 ; [#uses=1 type=i64] [debug line = 127:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.curlen.3}, i64 0, metadata !1524), !dbg !1598 ; [debug line = 127:3] [debug variable = hash.curlen]
  %tmp.12 = call fastcc { i64, i64 } @sha512_update_32.1(i64 %hash.length.3, [8 x i64]* %hash.state, i64 %hash.curlen.3, [128 x i8]* %hash.buf, [64 x i8]* %signature, i7 32) nounwind, !dbg !1599 ; [#uses=2 type={ i64, i64 }] [debug line = 128:3]
  %hash.length.4 = extractvalue { i64, i64 } %tmp.12, 0, !dbg !1599 ; [#uses=1 type=i64] [debug line = 128:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.length.4}, i64 0, metadata !1521), !dbg !1599 ; [debug line = 128:3] [debug variable = hash.length]
  %hash.curlen.4 = extractvalue { i64, i64 } %tmp.12, 1, !dbg !1599 ; [#uses=1 type=i64] [debug line = 128:3]
  call void @llvm.dbg.value(metadata !{i64 %hash.curlen.4}, i64 0, metadata !1524), !dbg !1599 ; [debug line = 128:3] [debug variable = hash.curlen]
  br label %17, !dbg !1600                        ; [debug line = 130:7]

; <label>:17                                      ; preds = %20, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit
  %hash.curlen.1 = phi i64 [ %hash.curlen.4, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit ], [ %hash.curlen.6, %20 ] ; [#uses=2 type=i64]
  %hash.length.1 = phi i64 [ %hash.length.4, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit ], [ %hash.length.6, %20 ] ; [#uses=2 type=i64]
  %i.1 = phi i32 [ 0, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit ], [ %i.68, %20 ] ; [#uses=3 type=i32]
  %exitcond1 = icmp eq i32 %i.1, %num_blocks, !dbg !1600 ; [#uses=1 type=i1] [debug line = 130:7]
  br i1 %exitcond1, label %21, label %.preheader.preheader, !dbg !1600 ; [debug line = 130:7]

.preheader.preheader:                             ; preds = %17
  %tmp.855 = shl i32 %i.1, 7, !dbg !1602          ; [#uses=1 type=i32] [debug line = 133:7]
  br label %.preheader, !dbg !1606                ; [debug line = 132:9]

.preheader:                                       ; preds = %19, %.preheader.preheader
  %j.1 = phi i8 [ %j.4, %19 ], [ 0, %.preheader.preheader ] ; [#uses=4 type=i8]
  %j.1.cast6 = zext i8 %j.1 to i32, !dbg !1606    ; [#uses=1 type=i32] [debug line = 132:9]
  %exitcond = icmp eq i8 %j.1, -128, !dbg !1606   ; [#uses=1 type=i1] [debug line = 132:9]
  %18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond, label %20, label %19, !dbg !1606 ; [debug line = 132:9]

; <label>:19                                      ; preds = %.preheader
  %tmp.856 = add nsw i32 %j.1.cast6, %tmp.855, !dbg !1602 ; [#uses=1 type=i32] [debug line = 133:7]
  %tmp.857 = sext i32 %tmp.856 to i64, !dbg !1602 ; [#uses=1 type=i64] [debug line = 133:7]
  %mem.addr.1 = getelementptr [32768 x i8]* %mem, i64 0, i64 %tmp.857, !dbg !1602 ; [#uses=1 type=i8*] [debug line = 133:7]
  %mem.load.1 = load i8* %mem.addr.1, align 1, !dbg !1602 ; [#uses=1 type=i8] [debug line = 133:7]
  %tmp.858 = zext i8 %j.1 to i64, !dbg !1602      ; [#uses=1 type=i64] [debug line = 133:7]
  %temp_buf.addr.6 = getelementptr inbounds [128 x i8]* %temp_buf, i64 0, i64 %tmp.858, !dbg !1602 ; [#uses=1 type=i8*] [debug line = 133:7]
  store i8 %mem.load.1, i8* %temp_buf.addr.6, align 1, !dbg !1602 ; [debug line = 133:7]
  %j.4 = add i8 %j.1, 1, !dbg !1607               ; [#uses=1 type=i8] [debug line = 132:21]
  call void @llvm.dbg.value(metadata !{i8 %j.4}, i64 0, metadata !1547), !dbg !1607 ; [debug line = 132:21] [debug variable = j]
  br label %.preheader, !dbg !1607                ; [debug line = 132:21]

; <label>:20                                      ; preds = %.preheader
  %call.ret2 = call fastcc { i64, i64 } @sha512_update_128(i64 %hash.length.1, [8 x i64]* %hash.state, i64 %hash.curlen.1, [128 x i8]* %hash.buf, [128 x i8]* %temp_buf) nounwind, !dbg !1608 ; [#uses=2 type={ i64, i64 }] [debug line = 135:2]
  %hash.length.6 = extractvalue { i64, i64 } %call.ret2, 0, !dbg !1608 ; [#uses=1 type=i64] [debug line = 135:2]
  call void @llvm.dbg.value(metadata !{i64 %hash.length.6}, i64 0, metadata !1521), !dbg !1608 ; [debug line = 135:2] [debug variable = hash.length]
  %hash.curlen.6 = extractvalue { i64, i64 } %call.ret2, 1, !dbg !1608 ; [#uses=1 type=i64] [debug line = 135:2]
  call void @llvm.dbg.value(metadata !{i64 %hash.curlen.6}, i64 0, metadata !1524), !dbg !1608 ; [debug line = 135:2] [debug variable = hash.curlen]
  %i.68 = add nsw i32 %i.1, 1, !dbg !1609         ; [#uses=1 type=i32] [debug line = 130:26]
  call void @llvm.dbg.value(metadata !{i32 %i.68}, i64 0, metadata !1550), !dbg !1609 ; [debug line = 130:26] [debug variable = i]
  br label %17, !dbg !1609                        ; [debug line = 130:26]

; <label>:21                                      ; preds = %17
  %hash.length.1.lcssa = phi i64 [ %hash.length.1, %17 ] ; [#uses=1 type=i64]
  %hash.curlen.1.lcssa = phi i64 [ %hash.curlen.1, %17 ] ; [#uses=1 type=i64]
  call fastcc void @sha512_final(i64 %hash.length.1.lcssa, [8 x i64]* %hash.state, i64 %hash.curlen.1.lcssa, [128 x i8]* %hash.buf, [64 x i8]* %hram) nounwind, !dbg !1610 ; [debug line = 137:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %scs.v}, i64 0, metadata !1611) nounwind, !dbg !1613 ; [debug line = 107:83@141:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %hram}, i64 0, metadata !1614) nounwind, !dbg !1615 ; [debug line = 107:106@141:3] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t.25}, metadata !1561) nounwind, !dbg !1616 ; [debug line = 110:17@141:3] [debug variable = t]
  br label %22, !dbg !1617                        ; [debug line = 111:7@141:3]

; <label>:22                                      ; preds = %24, %21
  %i.i1 = phi i7 [ 0, %21 ], [ %i.67, %24 ]       ; [#uses=3 type=i7]
  %exitcond.i1 = icmp eq i7 %i.i1, -64, !dbg !1617 ; [#uses=1 type=i1] [debug line = 111:7@141:3]
  %23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i1, label %crypto_sign_ed25519_ref_sc25519_from64bytes.exit92, label %24, !dbg !1617 ; [debug line = 111:7@141:3]

; <label>:24                                      ; preds = %22
  %tmp.i2 = zext i7 %i.i1 to i64, !dbg !1618      ; [#uses=2 type=i64] [debug line = 111:21@141:3]
  %x.assign.1.addr = getelementptr [64 x i8]* %hram, i64 0, i64 %tmp.i2, !dbg !1618 ; [#uses=1 type=i8*] [debug line = 111:21@141:3]
  %x.assign.1.load = load i8* %x.assign.1.addr, align 1, !dbg !1618 ; [#uses=1 type=i8] [debug line = 111:21@141:3]
  %tmp..i2 = zext i8 %x.assign.1.load to i32, !dbg !1618 ; [#uses=1 type=i32] [debug line = 111:21@141:3]
  %t.25.addr = getelementptr inbounds [64 x i32]* %t.25, i64 0, i64 %tmp.i2, !dbg !1618 ; [#uses=1 type=i32*] [debug line = 111:21@141:3]
  store i32 %tmp..i2, i32* %t.25.addr, align 4, !dbg !1618 ; [debug line = 111:21@141:3]
  %i.67 = add i7 %i.i1, 1, !dbg !1619             ; [#uses=1 type=i7] [debug line = 111:16@141:3]
  call void @llvm.dbg.value(metadata !{i7 %i.67}, i64 0, metadata !1620) nounwind, !dbg !1619 ; [debug line = 111:16@141:3] [debug variable = i]
  br label %22, !dbg !1619                        ; [debug line = 111:16@141:3]

crypto_sign_ed25519_ref_sc25519_from64bytes.exit92: ; preds = %22
  call fastcc void @barrett_reduce([32 x i32]* %scs.v, [64 x i32]* %t.25) nounwind, !dbg !1621 ; [debug line = 112:3@141:3]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %scsk.v}, i64 0, metadata !1622) nounwind, !dbg !1626 ; [debug line = 92:83@142:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[64 x i8]* %az}, i64 0, metadata !1627) nounwind, !dbg !1628 ; [debug line = 92:106@142:3] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %t.26}, metadata !1629) nounwind, !dbg !1631 ; [debug line = 95:17@142:3] [debug variable = t]
  br label %25, !dbg !1632                        ; [debug line = 96:7@142:3]

; <label>:25                                      ; preds = %27, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit92
  %i.i2 = phi i6 [ 0, %crypto_sign_ed25519_ref_sc25519_from64bytes.exit92 ], [ %i.69, %27 ] ; [#uses=3 type=i6]
  %exitcond1.i = icmp eq i6 %i.i2, -32, !dbg !1632 ; [#uses=1 type=i1] [debug line = 96:7@142:3]
  %26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond1.i, label %.preheader.i.preheader, label %27, !dbg !1632 ; [debug line = 96:7@142:3]

.preheader.i.preheader:                           ; preds = %25
  br label %.preheader.i, !dbg !1634              ; [debug line = 97:7@142:3]

; <label>:27                                      ; preds = %25
  %tmp.i3 = zext i6 %i.i2 to i64, !dbg !1636      ; [#uses=2 type=i64] [debug line = 96:21@142:3]
  %x.assign.2.addr = getelementptr [64 x i8]* %az, i64 0, i64 %tmp.i3, !dbg !1636 ; [#uses=1 type=i8*] [debug line = 96:21@142:3]
  %x.assign.2.load = load i8* %x.assign.2.addr, align 1, !dbg !1636 ; [#uses=1 type=i8] [debug line = 96:21@142:3]
  %tmp..i3 = zext i8 %x.assign.2.load to i32, !dbg !1636 ; [#uses=1 type=i32] [debug line = 96:21@142:3]
  %t.26.addr = getelementptr inbounds [64 x i32]* %t.26, i64 0, i64 %tmp.i3, !dbg !1636 ; [#uses=1 type=i32*] [debug line = 96:21@142:3]
  store i32 %tmp..i3, i32* %t.26.addr, align 4, !dbg !1636 ; [debug line = 96:21@142:3]
  %i.69 = add i6 %i.i2, 1, !dbg !1637             ; [#uses=1 type=i6] [debug line = 96:16@142:3]
  call void @llvm.dbg.value(metadata !{i6 %i.69}, i64 0, metadata !1638) nounwind, !dbg !1637 ; [debug line = 96:16@142:3] [debug variable = i]
  br label %25, !dbg !1637                        ; [debug line = 96:16@142:3]

.preheader.i:                                     ; preds = %29, %.preheader.i.preheader
  %i.1.i = phi i7 [ %i.70, %29 ], [ 32, %.preheader.i.preheader ] ; [#uses=3 type=i7]
  %exitcond.i2 = icmp eq i7 %i.1.i, -64, !dbg !1634 ; [#uses=1 type=i1] [debug line = 97:7@142:3]
  %28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i2, label %crypto_sign_ed25519_ref_sc25519_from32bytes.exit, label %29, !dbg !1634 ; [debug line = 97:7@142:3]

; <label>:29                                      ; preds = %.preheader.i
  %tmp.858.i = zext i7 %i.1.i to i64, !dbg !1639  ; [#uses=1 type=i64] [debug line = 97:22@142:3]
  %t.26.addr.1 = getelementptr inbounds [64 x i32]* %t.26, i64 0, i64 %tmp.858.i, !dbg !1639 ; [#uses=1 type=i32*] [debug line = 97:22@142:3]
  store i32 0, i32* %t.26.addr.1, align 4, !dbg !1639 ; [debug line = 97:22@142:3]
  %i.70 = add i7 %i.1.i, 1, !dbg !1640            ; [#uses=1 type=i7] [debug line = 97:17@142:3]
  call void @llvm.dbg.value(metadata !{i7 %i.70}, i64 0, metadata !1638) nounwind, !dbg !1640 ; [debug line = 97:17@142:3] [debug variable = i]
  br label %.preheader.i, !dbg !1640              ; [debug line = 97:17@142:3]

crypto_sign_ed25519_ref_sc25519_from32bytes.exit: ; preds = %.preheader.i
  call fastcc void @barrett_reduce([32 x i32]* %scsk.v, [64 x i32]* %t.26) nounwind, !dbg !1641 ; [debug line = 98:3@142:3]
  call fastcc void @crypto_sign_ed25519_ref_sc25519_mul([32 x i32]* %scs.v, [32 x i32]* %scsk.v) nounwind
  call fastcc void @crypto_sign_ed25519_ref_sc25519_add([32 x i32]* %scs.v, [32 x i32]* %sck.v) nounwind
  call void @llvm.dbg.value(metadata !{[64 x i8]* %signature}, i64 0, metadata !1642) nounwind, !dbg !1647 ; [debug line = 124:62@148:3] [debug variable = r]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %scs.v}, i64 0, metadata !1648) nounwind, !dbg !1650 ; [debug line = 124:108@148:3] [debug variable = x.v]
  br label %30, !dbg !1651                        ; [debug line = 127:7@148:3]

; <label>:30                                      ; preds = %32, %crypto_sign_ed25519_ref_sc25519_from32bytes.exit
  %i.i3 = phi i6 [ 0, %crypto_sign_ed25519_ref_sc25519_from32bytes.exit ], [ %i.71, %32 ] ; [#uses=4 type=i6]
  %exitcond.i3 = icmp eq i6 %i.i3, -32, !dbg !1651 ; [#uses=1 type=i1] [debug line = 127:7@148:3]
  %31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i3, label %crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader, label %32, !dbg !1651 ; [debug line = 127:7@148:3]

crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader: ; preds = %30
  br label %crypto_sign_ed25519_ref_sc25519_to32bytes.exit, !dbg !1654 ; [debug line = 15:6@154:3]

; <label>:32                                      ; preds = %30
  %tmp.i4 = zext i6 %i.i3 to i64, !dbg !1656      ; [#uses=1 type=i64] [debug line = 127:21@148:3]
  %x.v.assign.addr = getelementptr [32 x i32]* %scs.v, i64 0, i64 %tmp.i4, !dbg !1656 ; [#uses=1 type=i32*] [debug line = 127:21@148:3]
  %x.v.assign.load = load i32* %x.v.assign.addr, align 4, !dbg !1656 ; [#uses=1 type=i32] [debug line = 127:21@148:3]
  %tmp..i4 = trunc i32 %x.v.assign.load to i8, !dbg !1656 ; [#uses=1 type=i8] [debug line = 127:21@148:3]
  %sum.i = xor i6 %i.i3, -32                      ; [#uses=1 type=i6]
  %sum.i.cast = zext i6 %sum.i to i64             ; [#uses=1 type=i64]
  %r.assign.addr.1 = getelementptr [64 x i8]* %signature, i64 0, i64 %sum.i.cast, !dbg !1656 ; [#uses=1 type=i8*] [debug line = 127:21@148:3]
  store i8 %tmp..i4, i8* %r.assign.addr.1, align 1, !dbg !1656 ; [debug line = 127:21@148:3]
  %i.71 = add i6 %i.i3, 1, !dbg !1657             ; [#uses=1 type=i6] [debug line = 127:16@148:3]
  call void @llvm.dbg.value(metadata !{i6 %i.71}, i64 0, metadata !1658) nounwind, !dbg !1657 ; [debug line = 127:16@148:3] [debug variable = i]
  br label %30, !dbg !1657                        ; [debug line = 127:16@148:3]

crypto_sign_ed25519_ref_sc25519_to32bytes.exit:   ; preds = %34, %crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader
  %i.i4 = phi i7 [ %i.72, %34 ], [ 0, %crypto_sign_ed25519_ref_sc25519_to32bytes.exit.preheader ] ; [#uses=3 type=i7]
  %exitcond.i4 = icmp eq i7 %i.i4, -64, !dbg !1654 ; [#uses=1 type=i1] [debug line = 15:6@154:3]
  %33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind ; [#uses=0 type=i32]
  br i1 %exitcond.i4, label %_memcpy.2.exit, label %34, !dbg !1654 ; [debug line = 15:6@154:3]

; <label>:34                                      ; preds = %crypto_sign_ed25519_ref_sc25519_to32bytes.exit
  %tmp.i5 = zext i7 %i.i4 to i64, !dbg !1659      ; [#uses=2 type=i64] [debug line = 16:3@154:3]
  %r.assign.addr.2 = getelementptr [64 x i8]* %signature, i64 0, i64 %tmp.i5, !dbg !1659 ; [#uses=1 type=i8*] [debug line = 16:3@154:3]
  %r.assign.load.1 = load i8* %r.assign.addr.2, align 1, !dbg !1659 ; [#uses=1 type=i8] [debug line = 16:3@154:3]
  %signature_out.addr = getelementptr [64 x i8]* %signature_out, i64 0, i64 %tmp.i5, !dbg !1659 ; [#uses=1 type=i8*] [debug line = 16:3@154:3]
  store i8 %r.assign.load.1, i8* %signature_out.addr, align 1, !dbg !1659 ; [debug line = 16:3@154:3]
  %i.72 = add i7 %i.i4, 1, !dbg !1660             ; [#uses=1 type=i7] [debug line = 15:18@154:3]
  call void @llvm.dbg.value(metadata !{i7 %i.72}, i64 0, metadata !1661) nounwind, !dbg !1660 ; [debug line = 15:18@154:3] [debug variable = i]
  br label %crypto_sign_ed25519_ref_sc25519_to32bytes.exit, !dbg !1660 ; [debug line = 15:18@154:3]

_memcpy.2.exit:                                   ; preds = %crypto_sign_ed25519_ref_sc25519_to32bytes.exit
  ret i32 0, !dbg !1662                           ; [debug line = 155:3]
}

; [#uses=4]
define internal fastcc void @cmov_aff([32 x i32]* nocapture %r.x.v, [32 x i32]* nocapture %r.y.v, [425 x [32 x i32]]* nocapture %p.x.v, i9 %tmp.919, [425 x [32 x i32]]* nocapture %p.y.v, i9 %tmp.9191, i8 %b) {
  %tmp.9191.cast = zext i9 %tmp.9191 to i64       ; [#uses=2 type=i64]
  %tmp.919.cast = zext i9 %tmp.919 to i64         ; [#uses=2 type=i64]
  call void (...)* @_ssdm_SpecKeepAssert(i64 %tmp.919.cast), !hlsrange !1663
  call void (...)* @_ssdm_SpecKeepAssert(i64 %tmp.9191.cast), !hlsrange !1663
  call void (...)* @_ssdm_SpecKeepAssert(i8 %b), !hlsrange !1664
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.x.v}, i64 0, metadata !1665), !dbg !1671 ; [debug line = 137:35] [debug variable = r.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.y.v}, i64 0, metadata !1672), !dbg !1671 ; [debug line = 137:35] [debug variable = r.y.v]
  call void @llvm.dbg.value(metadata !{[425 x [32 x i32]]* %p.x.v}, i64 0, metadata !1673), !dbg !1675 ; [debug line = 137:57] [debug variable = p.x.v]
  call void @llvm.dbg.value(metadata !{[425 x [32 x i32]]* %p.y.v}, i64 0, metadata !1676), !dbg !1675 ; [debug line = 137:57] [debug variable = p.y.v]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1677), !dbg !1678 ; [debug line = 137:74] [debug variable = b]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.x.v}, i64 0, metadata !1679), !dbg !1686 ; [debug line = 131:76@139:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[425 x [32 x i32]]* %p.x.v}, i64 0, metadata !1687), !dbg !1690 ; [debug line = 131:118@139:3] [debug variable = x.v]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1691), !dbg !1692 ; [debug line = 131:135@139:3] [debug variable = b]
  %mask = trunc i8 %b to i1, !dbg !1693           ; [#uses=1 type=i1] [debug line = 134:25@139:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1695), !dbg !1693 ; [debug line = 134:25@139:3] [debug variable = mask]
  %mask.cast = sext i1 %mask to i32, !dbg !1696   ; [#uses=2 type=i32] [debug line = 135:3@139:3]
  call void @llvm.dbg.value(metadata !{i1 %mask}, i64 0, metadata !1697), !dbg !1699 ; [debug line = 135:3@140:3] [debug variable = mask]
  call void @llvm.dbg.value(metadata !{i1 %mask}, i64 0, metadata !1695), !dbg !1696 ; [debug line = 135:3@139:3] [debug variable = mask]
  br label %1, !dbg !1700                         ; [debug line = 136:7@139:3]

; <label>:1                                       ; preds = %3, %0
  %i.i = phi i6 [ 0, %0 ], [ %i, %3 ]             ; [#uses=3 type=i6]
  %exitcond.i = icmp eq i6 %i.i, -32, !dbg !1700  ; [#uses=1 type=i1] [debug line = 136:7@139:3]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader, label %3, !dbg !1700 ; [debug line = 136:7@139:3]

crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader: ; preds = %1
  br label %crypto_sign_ed25519_ref_fe25519_cmov.exit, !dbg !1702 ; [debug line = 136:7@140:3]

; <label>:3                                       ; preds = %1
  %tmp..i = zext i6 %i.i to i64, !dbg !1703       ; [#uses=2 type=i64] [debug line = 136:21@139:3]
  %p.x.v.addr = getelementptr [425 x [32 x i32]]* %p.x.v, i64 0, i64 %tmp.919.cast, i64 %tmp..i, !dbg !1703 ; [#uses=1 type=i32*] [debug line = 136:21@139:3]
  %p.x.v.load = load i32* %p.x.v.addr, align 4, !dbg !1703 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  %r.x.v.addr = getelementptr [32 x i32]* %r.x.v, i64 0, i64 %tmp..i, !dbg !1703 ; [#uses=2 type=i32*] [debug line = 136:21@139:3]
  %r.x.v.load = load i32* %r.x.v.addr, align 4, !dbg !1703 ; [#uses=2 type=i32] [debug line = 136:21@139:3]
  %tmp.894.i = xor i32 %r.x.v.load, %p.x.v.load, !dbg !1703 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  %tmp.895.i = and i32 %tmp.894.i, %mask.cast, !dbg !1703 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  %tmp.896.i = xor i32 %r.x.v.load, %tmp.895.i, !dbg !1703 ; [#uses=1 type=i32] [debug line = 136:21@139:3]
  store i32 %tmp.896.i, i32* %r.x.v.addr, align 4, !dbg !1703 ; [debug line = 136:21@139:3]
  %i = add i6 %i.i, 1, !dbg !1704                 ; [#uses=1 type=i6] [debug line = 136:16@139:3]
  call void @llvm.dbg.value(metadata !{i6 %i}, i64 0, metadata !1705), !dbg !1704 ; [debug line = 136:16@139:3] [debug variable = i]
  br label %1, !dbg !1704                         ; [debug line = 136:16@139:3]

crypto_sign_ed25519_ref_fe25519_cmov.exit:        ; preds = %5, %crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader
  %i.i5 = phi i6 [ %i.73, %5 ], [ 0, %crypto_sign_ed25519_ref_fe25519_cmov.exit.preheader ] ; [#uses=3 type=i6]
  %exitcond.i6 = icmp eq i6 %i.i5, -32, !dbg !1702 ; [#uses=1 type=i1] [debug line = 136:7@140:3]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i6, label %crypto_sign_ed25519_ref_fe25519_cmov.exit16, label %5, !dbg !1702 ; [debug line = 136:7@140:3]

; <label>:5                                       ; preds = %crypto_sign_ed25519_ref_fe25519_cmov.exit
  %tmp..i7 = zext i6 %i.i5 to i64, !dbg !1706     ; [#uses=2 type=i64] [debug line = 136:21@140:3]
  %p.y.v.addr = getelementptr [425 x [32 x i32]]* %p.y.v, i64 0, i64 %tmp.9191.cast, i64 %tmp..i7, !dbg !1706 ; [#uses=1 type=i32*] [debug line = 136:21@140:3]
  %p.y.v.load = load i32* %p.y.v.addr, align 4, !dbg !1706 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  %r.y.v.addr = getelementptr [32 x i32]* %r.y.v, i64 0, i64 %tmp..i7, !dbg !1706 ; [#uses=2 type=i32*] [debug line = 136:21@140:3]
  %r.y.v.load = load i32* %r.y.v.addr, align 4, !dbg !1706 ; [#uses=2 type=i32] [debug line = 136:21@140:3]
  %tmp.894.i1 = xor i32 %r.y.v.load, %p.y.v.load, !dbg !1706 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  %tmp.895.i1 = and i32 %tmp.894.i1, %mask.cast, !dbg !1706 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  %tmp.896.i1 = xor i32 %r.y.v.load, %tmp.895.i1, !dbg !1706 ; [#uses=1 type=i32] [debug line = 136:21@140:3]
  store i32 %tmp.896.i1, i32* %r.y.v.addr, align 4, !dbg !1706 ; [debug line = 136:21@140:3]
  %i.73 = add i6 %i.i5, 1, !dbg !1707             ; [#uses=1 type=i6] [debug line = 136:16@140:3]
  call void @llvm.dbg.value(metadata !{i6 %i.73}, i64 0, metadata !1708), !dbg !1707 ; [debug line = 136:16@140:3] [debug variable = i]
  br label %crypto_sign_ed25519_ref_fe25519_cmov.exit, !dbg !1707 ; [debug line = 136:16@140:3]

crypto_sign_ed25519_ref_fe25519_cmov.exit16:      ; preds = %crypto_sign_ed25519_ref_fe25519_cmov.exit
  ret void, !dbg !1709                            ; [debug line = 141:1]
}

; [#uses=2]
define internal fastcc void @choose_t([32 x i32]* %t.x.v, [32 x i32]* %t.y.v, i7 %pos, i8 %b) {
  %t.v = alloca [32 x i32], align 4               ; [#uses=2 type=[32 x i32]*]
  %v.v = alloca [32 x i32], align 4               ; [#uses=3 type=[32 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %v.v}, i64 0, metadata !1710), !dbg !1721 ; [debug line = 153:79@164:3@170:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t.x.v}, i64 0, metadata !1722), !dbg !1724 ; [debug line = 161:35] [debug variable = t.x.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t.y.v}, i64 0, metadata !1725), !dbg !1724 ; [debug line = 161:35] [debug variable = t.y.v]
  call void @llvm.dbg.value(metadata !{i7 %pos}, i64 0, metadata !1726), !dbg !1727 ; [debug line = 161:57] [debug variable = pos]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1728), !dbg !1729 ; [debug line = 161:74] [debug variable = b]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %v.v}, metadata !1730), !dbg !1732 ; [debug line = 164:35] [debug variable = v.v]
  %pos.cast4 = zext i7 %pos to i9, !dbg !1733     ; [#uses=1 type=i9] [debug line = 165:3]
  %_shl = shl nuw i9 %pos.cast4, 2, !dbg !1733    ; [#uses=1 type=i9] [debug line = 165:3]
  %pos.cast = zext i7 %pos to i9, !dbg !1733      ; [#uses=1 type=i9] [debug line = 165:3]
  %tmp = add i9 %pos.cast, %_shl, !dbg !1733      ; [#uses=5 type=i9] [debug line = 165:3]
  %tmp.cast = zext i9 %tmp to i64, !dbg !1733     ; [#uses=64 type=i64] [debug line = 165:3]
  %t.x.v.addr = getelementptr [32 x i32]* %t.x.v, i64 0, i64 0, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 0, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load = load i32* %ge25519_base_multiples_affine.x.v.addr, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load, i32* %t.x.v.addr, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.1 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 1, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.1 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 1, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.1 = load i32* %ge25519_base_multiples_affine.x.v.addr.1, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.1, i32* %t.x.v.addr.1, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.2 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 2, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.2 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 2, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.2 = load i32* %ge25519_base_multiples_affine.x.v.addr.2, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.2, i32* %t.x.v.addr.2, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.3 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 3, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.3 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 3, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.3 = load i32* %ge25519_base_multiples_affine.x.v.addr.3, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.3, i32* %t.x.v.addr.3, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.4 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 4, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.4 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 4, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.4 = load i32* %ge25519_base_multiples_affine.x.v.addr.4, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.4, i32* %t.x.v.addr.4, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.5 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 5, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.5 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 5, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.5 = load i32* %ge25519_base_multiples_affine.x.v.addr.5, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.5, i32* %t.x.v.addr.5, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.6 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 6, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.6 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 6, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.6 = load i32* %ge25519_base_multiples_affine.x.v.addr.6, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.6, i32* %t.x.v.addr.6, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.7 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 7, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.7 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 7, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.7 = load i32* %ge25519_base_multiples_affine.x.v.addr.7, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.7, i32* %t.x.v.addr.7, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.8 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 8, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.8 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 8, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.8 = load i32* %ge25519_base_multiples_affine.x.v.addr.8, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.8, i32* %t.x.v.addr.8, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.9 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 9, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.9 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 9, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.9 = load i32* %ge25519_base_multiples_affine.x.v.addr.9, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.9, i32* %t.x.v.addr.9, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.10 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 10, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.10 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 10, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.10 = load i32* %ge25519_base_multiples_affine.x.v.addr.10, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.10, i32* %t.x.v.addr.10, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.11 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 11, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.11 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 11, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.11 = load i32* %ge25519_base_multiples_affine.x.v.addr.11, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.11, i32* %t.x.v.addr.11, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.12 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 12, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.12 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 12, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.12 = load i32* %ge25519_base_multiples_affine.x.v.addr.12, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.12, i32* %t.x.v.addr.12, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.13 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 13, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.13 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 13, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.13 = load i32* %ge25519_base_multiples_affine.x.v.addr.13, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.13, i32* %t.x.v.addr.13, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.14 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 14, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.14 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 14, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.14 = load i32* %ge25519_base_multiples_affine.x.v.addr.14, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.14, i32* %t.x.v.addr.14, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.15 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 15, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.15 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 15, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.15 = load i32* %ge25519_base_multiples_affine.x.v.addr.15, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.15, i32* %t.x.v.addr.15, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.16 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 16, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.16 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 16, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.16 = load i32* %ge25519_base_multiples_affine.x.v.addr.16, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.16, i32* %t.x.v.addr.16, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.17 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 17, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.17 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 17, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.17 = load i32* %ge25519_base_multiples_affine.x.v.addr.17, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.17, i32* %t.x.v.addr.17, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.18 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 18, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.18 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 18, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.18 = load i32* %ge25519_base_multiples_affine.x.v.addr.18, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.18, i32* %t.x.v.addr.18, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.19 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 19, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.19 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 19, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.19 = load i32* %ge25519_base_multiples_affine.x.v.addr.19, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.19, i32* %t.x.v.addr.19, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.20 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 20, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.20 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 20, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.20 = load i32* %ge25519_base_multiples_affine.x.v.addr.20, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.20, i32* %t.x.v.addr.20, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.21 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 21, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.21 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 21, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.21 = load i32* %ge25519_base_multiples_affine.x.v.addr.21, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.21, i32* %t.x.v.addr.21, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.22 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 22, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.22 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 22, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.22 = load i32* %ge25519_base_multiples_affine.x.v.addr.22, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.22, i32* %t.x.v.addr.22, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.23 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 23, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.23 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 23, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.23 = load i32* %ge25519_base_multiples_affine.x.v.addr.23, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.23, i32* %t.x.v.addr.23, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.24 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 24, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.24 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 24, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.24 = load i32* %ge25519_base_multiples_affine.x.v.addr.24, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.24, i32* %t.x.v.addr.24, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.25 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 25, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.25 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 25, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.25 = load i32* %ge25519_base_multiples_affine.x.v.addr.25, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.25, i32* %t.x.v.addr.25, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.26 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 26, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.26 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 26, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.26 = load i32* %ge25519_base_multiples_affine.x.v.addr.26, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.26, i32* %t.x.v.addr.26, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.27 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 27, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.27 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 27, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.27 = load i32* %ge25519_base_multiples_affine.x.v.addr.27, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.27, i32* %t.x.v.addr.27, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.28 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 28, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.28 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 28, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.28 = load i32* %ge25519_base_multiples_affine.x.v.addr.28, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.28, i32* %t.x.v.addr.28, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.29 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 29, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.29 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 29, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.29 = load i32* %ge25519_base_multiples_affine.x.v.addr.29, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.29, i32* %t.x.v.addr.29, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.30 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 30, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.30 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 30, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.30 = load i32* %ge25519_base_multiples_affine.x.v.addr.30, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.30, i32* %t.x.v.addr.30, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.x.v.addr.31 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 31, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.addr.31 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i64 0, i64 %tmp.cast, i64 31, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.x.v.load.31 = load i32* %ge25519_base_multiples_affine.x.v.addr.31, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.x.v.load.31, i32* %t.x.v.addr.31, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr = getelementptr [32 x i32]* %t.y.v, i64 0, i64 0, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 0, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load = load i32* %ge25519_base_multiples_affine.y.v.addr, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load, i32* %t.y.v.addr, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.1 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 1, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.1 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 1, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.1 = load i32* %ge25519_base_multiples_affine.y.v.addr.1, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.1, i32* %t.y.v.addr.1, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.2 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 2, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.2 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 2, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.2 = load i32* %ge25519_base_multiples_affine.y.v.addr.2, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.2, i32* %t.y.v.addr.2, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.3 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 3, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.3 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 3, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.3 = load i32* %ge25519_base_multiples_affine.y.v.addr.3, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.3, i32* %t.y.v.addr.3, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.4 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 4, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.4 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 4, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.4 = load i32* %ge25519_base_multiples_affine.y.v.addr.4, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.4, i32* %t.y.v.addr.4, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.5 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 5, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.5 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 5, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.5 = load i32* %ge25519_base_multiples_affine.y.v.addr.5, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.5, i32* %t.y.v.addr.5, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.6 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 6, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.6 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 6, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.6 = load i32* %ge25519_base_multiples_affine.y.v.addr.6, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.6, i32* %t.y.v.addr.6, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.7 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 7, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.7 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 7, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.7 = load i32* %ge25519_base_multiples_affine.y.v.addr.7, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.7, i32* %t.y.v.addr.7, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.8 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 8, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.8 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 8, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.8 = load i32* %ge25519_base_multiples_affine.y.v.addr.8, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.8, i32* %t.y.v.addr.8, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.9 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 9, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.9 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 9, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.9 = load i32* %ge25519_base_multiples_affine.y.v.addr.9, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.9, i32* %t.y.v.addr.9, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.10 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 10, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.10 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 10, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.10 = load i32* %ge25519_base_multiples_affine.y.v.addr.10, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.10, i32* %t.y.v.addr.10, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.11 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 11, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.11 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 11, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.11 = load i32* %ge25519_base_multiples_affine.y.v.addr.11, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.11, i32* %t.y.v.addr.11, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.12 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 12, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.12 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 12, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.12 = load i32* %ge25519_base_multiples_affine.y.v.addr.12, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.12, i32* %t.y.v.addr.12, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.13 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 13, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.13 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 13, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.13 = load i32* %ge25519_base_multiples_affine.y.v.addr.13, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.13, i32* %t.y.v.addr.13, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.14 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 14, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.14 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 14, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.14 = load i32* %ge25519_base_multiples_affine.y.v.addr.14, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.14, i32* %t.y.v.addr.14, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.15 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 15, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.15 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 15, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.15 = load i32* %ge25519_base_multiples_affine.y.v.addr.15, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.15, i32* %t.y.v.addr.15, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.16 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 16, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.16 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 16, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.16 = load i32* %ge25519_base_multiples_affine.y.v.addr.16, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.16, i32* %t.y.v.addr.16, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.17 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 17, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.17 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 17, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.17 = load i32* %ge25519_base_multiples_affine.y.v.addr.17, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.17, i32* %t.y.v.addr.17, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.18 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 18, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.18 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 18, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.18 = load i32* %ge25519_base_multiples_affine.y.v.addr.18, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.18, i32* %t.y.v.addr.18, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.19 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 19, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.19 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 19, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.19 = load i32* %ge25519_base_multiples_affine.y.v.addr.19, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.19, i32* %t.y.v.addr.19, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.20 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 20, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.20 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 20, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.20 = load i32* %ge25519_base_multiples_affine.y.v.addr.20, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.20, i32* %t.y.v.addr.20, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.21 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 21, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.21 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 21, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.21 = load i32* %ge25519_base_multiples_affine.y.v.addr.21, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.21, i32* %t.y.v.addr.21, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.22 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 22, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.22 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 22, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.22 = load i32* %ge25519_base_multiples_affine.y.v.addr.22, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.22, i32* %t.y.v.addr.22, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.23 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 23, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.23 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 23, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.23 = load i32* %ge25519_base_multiples_affine.y.v.addr.23, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.23, i32* %t.y.v.addr.23, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.24 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 24, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.24 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 24, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.24 = load i32* %ge25519_base_multiples_affine.y.v.addr.24, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.24, i32* %t.y.v.addr.24, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.25 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 25, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.25 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 25, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.25 = load i32* %ge25519_base_multiples_affine.y.v.addr.25, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.25, i32* %t.y.v.addr.25, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.26 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 26, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.26 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 26, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.26 = load i32* %ge25519_base_multiples_affine.y.v.addr.26, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.26, i32* %t.y.v.addr.26, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.27 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 27, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.27 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 27, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.27 = load i32* %ge25519_base_multiples_affine.y.v.addr.27, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.27, i32* %t.y.v.addr.27, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.28 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 28, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.28 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 28, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.28 = load i32* %ge25519_base_multiples_affine.y.v.addr.28, align 16, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.28, i32* %t.y.v.addr.28, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.29 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 29, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.29 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 29, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.29 = load i32* %ge25519_base_multiples_affine.y.v.addr.29, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.29, i32* %t.y.v.addr.29, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.30 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 30, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.30 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 30, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.30 = load i32* %ge25519_base_multiples_affine.y.v.addr.30, align 8, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.30, i32* %t.y.v.addr.30, align 4, !dbg !1733 ; [debug line = 165:3]
  %t.y.v.addr.31 = getelementptr [32 x i32]* %t.y.v, i64 0, i64 31, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.addr.31 = getelementptr [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i64 0, i64 %tmp.cast, i64 31, !dbg !1733 ; [#uses=1 type=i32*] [debug line = 165:3]
  %ge25519_base_multiples_affine.y.v.load.31 = load i32* %ge25519_base_multiples_affine.y.v.addr.31, align 4, !dbg !1733 ; [#uses=1 type=i32] [debug line = 165:3]
  store i32 %ge25519_base_multiples_affine.y.v.load.31, i32* %t.y.v.addr.31, align 4, !dbg !1733 ; [debug line = 165:3]
  %tmp. = add i9 %tmp, 1, !dbg !1734              ; [#uses=2 type=i9] [debug line = 166:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1735), !dbg !1740 ; [debug line = 143:40@166:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1741), !dbg !1743 ; [debug line = 145:23@166:55] [debug variable = ub]
  %x = xor i8 %b, 1, !dbg !1744                   ; [#uses=1 type=i8] [debug line = 147:28@166:55]
  call void @llvm.dbg.value(metadata !{i8 %x}, i64 0, metadata !1745), !dbg !1744 ; [debug line = 147:28@166:55] [debug variable = x]
  %y.cast = zext i8 %x to i9, !dbg !1746          ; [#uses=1 type=i9] [debug line = 148:22@166:55]
  %y = add i9 %y.cast, -1, !dbg !1747             ; [#uses=1 type=i9] [debug line = 149:3@166:55]
  call void @llvm.dbg.value(metadata !{i9 %y}, i64 0, metadata !1748), !dbg !1747 ; [debug line = 149:3@166:55] [debug variable = y]
  %tmp.82 = lshr i9 %y, 8, !dbg !1749             ; [#uses=1 type=i9] [debug line = 150:3@166:55]
  %tmp.83 = trunc i9 %tmp.82 to i1, !dbg !1749    ; [#uses=1 type=i1] [debug line = 150:3@166:55]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1750), !dbg !1752 ; [debug line = 143:40@166:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1753), !dbg !1754 ; [debug line = 145:23@166:68] [debug variable = ub]
  %x.15 = xor i8 %b, -1, !dbg !1755               ; [#uses=1 type=i8] [debug line = 147:28@166:68]
  call void @llvm.dbg.value(metadata !{i8 %x.15}, i64 0, metadata !1756), !dbg !1755 ; [debug line = 147:28@166:68] [debug variable = x]
  %y.3.cast = zext i8 %x.15 to i9, !dbg !1757     ; [#uses=1 type=i9] [debug line = 148:22@166:68]
  %y.1 = add i9 %y.3.cast, -1, !dbg !1758         ; [#uses=1 type=i9] [debug line = 149:3@166:68]
  call void @llvm.dbg.value(metadata !{i9 %y.1}, i64 0, metadata !1759), !dbg !1758 ; [debug line = 149:3@166:68] [debug variable = y]
  %tmp.84 = lshr i9 %y.1, 8, !dbg !1760           ; [#uses=1 type=i9] [debug line = 150:3@166:68]
  %tmp.85 = trunc i9 %tmp.84 to i1, !dbg !1760    ; [#uses=1 type=i1] [debug line = 150:3@166:68]
  %tmp.859 = or i1 %tmp.85, %tmp.83, !dbg !1751   ; [#uses=1 type=i1] [debug line = 166:68]
  %tmp.903.cast = zext i1 %tmp.859 to i8, !dbg !1751 ; [#uses=1 type=i8] [debug line = 166:68]
  call fastcc void @cmov_aff([32 x i32]* %t.x.v, [32 x i32]* %t.y.v, [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i9 %tmp., [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i9 %tmp., i8 zeroext %tmp.903.cast), !dbg !1751 ; [debug line = 166:68]
  %tmp.860 = add i9 %tmp, 2, !dbg !1761           ; [#uses=2 type=i9] [debug line = 167:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1762), !dbg !1764 ; [debug line = 143:40@167:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1765), !dbg !1766 ; [debug line = 145:23@167:55] [debug variable = ub]
  %x.16 = xor i8 %b, 2, !dbg !1767                ; [#uses=1 type=i8] [debug line = 147:28@167:55]
  call void @llvm.dbg.value(metadata !{i8 %x.16}, i64 0, metadata !1768), !dbg !1767 ; [debug line = 147:28@167:55] [debug variable = x]
  %y.6.cast = zext i8 %x.16 to i9, !dbg !1769     ; [#uses=1 type=i9] [debug line = 148:22@167:55]
  %y.2 = add i9 %y.6.cast, -1, !dbg !1770         ; [#uses=1 type=i9] [debug line = 149:3@167:55]
  call void @llvm.dbg.value(metadata !{i9 %y.2}, i64 0, metadata !1771), !dbg !1770 ; [debug line = 149:3@167:55] [debug variable = y]
  %tmp.86 = lshr i9 %y.2, 8, !dbg !1772           ; [#uses=1 type=i9] [debug line = 150:3@167:55]
  %tmp.87 = trunc i9 %tmp.86 to i1, !dbg !1772    ; [#uses=1 type=i1] [debug line = 150:3@167:55]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1773), !dbg !1775 ; [debug line = 143:40@167:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1776), !dbg !1777 ; [debug line = 145:23@167:68] [debug variable = ub]
  %x.17 = xor i8 %b, -2, !dbg !1778               ; [#uses=1 type=i8] [debug line = 147:28@167:68]
  call void @llvm.dbg.value(metadata !{i8 %x.17}, i64 0, metadata !1779), !dbg !1778 ; [debug line = 147:28@167:68] [debug variable = x]
  %y.9.cast = zext i8 %x.17 to i9, !dbg !1780     ; [#uses=1 type=i9] [debug line = 148:22@167:68]
  %y.3 = add i9 %y.9.cast, -1, !dbg !1781         ; [#uses=1 type=i9] [debug line = 149:3@167:68]
  call void @llvm.dbg.value(metadata !{i9 %y.3}, i64 0, metadata !1782), !dbg !1781 ; [debug line = 149:3@167:68] [debug variable = y]
  %tmp.88 = lshr i9 %y.3, 8, !dbg !1783           ; [#uses=1 type=i9] [debug line = 150:3@167:68]
  %tmp.89 = trunc i9 %tmp.88 to i1, !dbg !1783    ; [#uses=1 type=i1] [debug line = 150:3@167:68]
  %tmp.861 = or i1 %tmp.89, %tmp.87, !dbg !1774   ; [#uses=1 type=i1] [debug line = 167:68]
  %tmp.905.cast = zext i1 %tmp.861 to i8, !dbg !1774 ; [#uses=1 type=i8] [debug line = 167:68]
  call fastcc void @cmov_aff([32 x i32]* %t.x.v, [32 x i32]* %t.y.v, [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i9 %tmp.860, [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i9 %tmp.860, i8 zeroext %tmp.905.cast), !dbg !1774 ; [debug line = 167:68]
  %tmp.862 = add i9 %tmp, 3, !dbg !1784           ; [#uses=2 type=i9] [debug line = 168:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1785), !dbg !1787 ; [debug line = 143:40@168:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1788), !dbg !1789 ; [debug line = 145:23@168:55] [debug variable = ub]
  %x.18 = xor i8 %b, 3, !dbg !1790                ; [#uses=1 type=i8] [debug line = 147:28@168:55]
  call void @llvm.dbg.value(metadata !{i8 %x.18}, i64 0, metadata !1791), !dbg !1790 ; [debug line = 147:28@168:55] [debug variable = x]
  %y.12.cast = zext i8 %x.18 to i9, !dbg !1792    ; [#uses=1 type=i9] [debug line = 148:22@168:55]
  %y.4 = add i9 %y.12.cast, -1, !dbg !1793        ; [#uses=1 type=i9] [debug line = 149:3@168:55]
  call void @llvm.dbg.value(metadata !{i9 %y.4}, i64 0, metadata !1794), !dbg !1793 ; [debug line = 149:3@168:55] [debug variable = y]
  %tmp.90 = lshr i9 %y.4, 8, !dbg !1795           ; [#uses=1 type=i9] [debug line = 150:3@168:55]
  %tmp.91 = trunc i9 %tmp.90 to i1, !dbg !1795    ; [#uses=1 type=i1] [debug line = 150:3@168:55]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1796), !dbg !1798 ; [debug line = 143:40@168:68] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1799), !dbg !1800 ; [debug line = 145:23@168:68] [debug variable = ub]
  %x.19 = xor i8 %b, -3, !dbg !1801               ; [#uses=1 type=i8] [debug line = 147:28@168:68]
  call void @llvm.dbg.value(metadata !{i8 %x.19}, i64 0, metadata !1802), !dbg !1801 ; [debug line = 147:28@168:68] [debug variable = x]
  %y.15.cast = zext i8 %x.19 to i9, !dbg !1803    ; [#uses=1 type=i9] [debug line = 148:22@168:68]
  %y.5 = add i9 %y.15.cast, -1, !dbg !1804        ; [#uses=1 type=i9] [debug line = 149:3@168:68]
  call void @llvm.dbg.value(metadata !{i9 %y.5}, i64 0, metadata !1805), !dbg !1804 ; [debug line = 149:3@168:68] [debug variable = y]
  %tmp.92 = lshr i9 %y.5, 8, !dbg !1806           ; [#uses=1 type=i9] [debug line = 150:3@168:68]
  %tmp.93 = trunc i9 %tmp.92 to i1, !dbg !1806    ; [#uses=1 type=i1] [debug line = 150:3@168:68]
  %tmp.863 = or i1 %tmp.93, %tmp.91, !dbg !1797   ; [#uses=1 type=i1] [debug line = 168:68]
  %tmp.907.cast = zext i1 %tmp.863 to i8, !dbg !1797 ; [#uses=1 type=i8] [debug line = 168:68]
  call fastcc void @cmov_aff([32 x i32]* %t.x.v, [32 x i32]* %t.y.v, [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i9 %tmp.862, [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i9 %tmp.862, i8 zeroext %tmp.907.cast), !dbg !1797 ; [debug line = 168:68]
  %tmp.864 = add i9 %tmp, 4, !dbg !1807           ; [#uses=2 type=i9] [debug line = 169:3]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1808), !dbg !1810 ; [debug line = 143:40@169:55] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1811), !dbg !1812 ; [debug line = 145:23@169:55] [debug variable = ub]
  %x.20 = xor i8 %b, -4, !dbg !1813               ; [#uses=1 type=i8] [debug line = 147:28@169:55]
  call void @llvm.dbg.value(metadata !{i8 %x.20}, i64 0, metadata !1814), !dbg !1813 ; [debug line = 147:28@169:55] [debug variable = x]
  %y.18.cast = zext i8 %x.20 to i9, !dbg !1815    ; [#uses=1 type=i9] [debug line = 148:22@169:55]
  %y.6 = add i9 %y.18.cast, -1, !dbg !1816        ; [#uses=1 type=i9] [debug line = 149:3@169:55]
  call void @llvm.dbg.value(metadata !{i9 %y.6}, i64 0, metadata !1817), !dbg !1816 ; [debug line = 149:3@169:55] [debug variable = y]
  %tmp.94 = lshr i9 %y.6, 8, !dbg !1818           ; [#uses=1 type=i9] [debug line = 150:3@169:55]
  %tmp.95 = trunc i9 %tmp.94 to i1, !dbg !1818    ; [#uses=1 type=i1] [debug line = 150:3@169:55]
  %tmp.i = zext i1 %tmp.95 to i8, !dbg !1819      ; [#uses=1 type=i8] [debug line = 151:3@169:55]
  call fastcc void @cmov_aff([32 x i32]* %t.x.v, [32 x i32]* %t.y.v, [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v, i9 %tmp.864, [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v, i9 %tmp.864, i8 zeroext %tmp.i), !dbg !1809 ; [debug line = 169:55]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %v.v}, i64 0, metadata !1820), !dbg !1822 ; [debug line = 159:75@170:3] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t.x.v}, i64 0, metadata !1823), !dbg !1825 ; [debug line = 159:117@170:3] [debug variable = x.v]
  call void @llvm.dbg.declare(metadata !{[32 x i32]* %t.v}, metadata !1826), !dbg !1828 ; [debug line = 161:35@170:3] [debug variable = t.v]
  br label %1, !dbg !1829                         ; [debug line = 163:7@170:3]

; <label>:1                                       ; preds = %3, %0
  %i.i = phi i6 [ 0, %0 ], [ %i, %3 ]             ; [#uses=3 type=i6]
  %exitcond.i = icmp eq i6 %i.i, -32, !dbg !1829  ; [#uses=1 type=i1] [debug line = 163:7@170:3]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %.preheader.preheader, label %3, !dbg !1829 ; [debug line = 163:7@170:3]

.preheader.preheader:                             ; preds = %1
  br label %.preheader, !dbg !1831                ; [debug line = 156:7@164:3@170:3]

; <label>:3                                       ; preds = %1
  %tmp.i1 = zext i6 %i.i to i64, !dbg !1834       ; [#uses=2 type=i64] [debug line = 163:21@170:3]
  %t.x.v.addr.32 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 %tmp.i1, !dbg !1834 ; [#uses=1 type=i32*] [debug line = 163:21@170:3]
  %t.x.v.load = load i32* %t.x.v.addr.32, align 4, !dbg !1834 ; [#uses=1 type=i32] [debug line = 163:21@170:3]
  %t.v.addr = getelementptr [32 x i32]* %t.v, i64 0, i64 %tmp.i1, !dbg !1834 ; [#uses=1 type=i32*] [debug line = 163:21@170:3]
  store i32 %t.x.v.load, i32* %t.v.addr, align 4, !dbg !1834 ; [debug line = 163:21@170:3]
  %i = add i6 %i.i, 1, !dbg !1835                 ; [#uses=1 type=i6] [debug line = 163:16@170:3]
  call void @llvm.dbg.value(metadata !{i6 %i}, i64 0, metadata !1836), !dbg !1835 ; [debug line = 163:16@170:3] [debug variable = i]
  br label %1, !dbg !1835                         ; [debug line = 163:16@170:3]

.preheader:                                       ; preds = %5, %.preheader.preheader
  %i.i.i = phi i6 [ %i.74, %5 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %exitcond.i.i = icmp eq i6 %i.i.i, -32, !dbg !1831 ; [#uses=1 type=i1] [debug line = 156:7@164:3@170:3]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i.i, label %crypto_sign_ed25519_ref_fe25519_neg.exit, label %5, !dbg !1831 ; [debug line = 156:7@164:3@170:3]

; <label>:5                                       ; preds = %.preheader
  %tmp.i.i = zext i6 %i.i.i to i64, !dbg !1837    ; [#uses=1 type=i64] [debug line = 156:21@164:3@170:3]
  %r.v.assign.addr = getelementptr [32 x i32]* %v.v, i64 0, i64 %tmp.i.i, !dbg !1837 ; [#uses=1 type=i32*] [debug line = 156:21@164:3@170:3]
  store i32 0, i32* %r.v.assign.addr, align 4, !dbg !1837 ; [debug line = 156:21@164:3@170:3]
  %i.74 = add i6 %i.i.i, 1, !dbg !1838            ; [#uses=1 type=i6] [debug line = 156:16@164:3@170:3]
  call void @llvm.dbg.value(metadata !{i6 %i.74}, i64 0, metadata !1839), !dbg !1838 ; [debug line = 156:16@164:3@170:3] [debug variable = i]
  br label %.preheader, !dbg !1838                ; [debug line = 156:16@164:3@170:3]

crypto_sign_ed25519_ref_fe25519_neg.exit:         ; preds = %.preheader
  call fastcc void @crypto_sign_ed25519_ref_fe25519_sub.1([32 x i32]* %v.v, [32 x i32]* %t.v)
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1840), !dbg !1845 ; [debug line = 154:43@171:51] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i8 %b}, i64 0, metadata !1846), !dbg !1848 ; [debug line = 156:27@171:51] [debug variable = x]
  %tmp.6.i = lshr i8 %b, 7, !dbg !1849            ; [#uses=1 type=i8] [debug line = 157:3@171:51]
  %tmp.7.i = trunc i8 %tmp.6.i to i1, !dbg !1849  ; [#uses=1 type=i1] [debug line = 157:3@171:51]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %t.x.v}, i64 0, metadata !1850), !dbg !1851 ; [debug line = 131:76@171:51] [debug variable = r.v]
  %mask = sext i1 %tmp.7.i to i32, !dbg !1852     ; [#uses=1 type=i32] [debug line = 135:3@171:51]
  call void @llvm.dbg.value(metadata !{i32 %mask}, i64 0, metadata !1853), !dbg !1852 ; [debug line = 135:3@171:51] [debug variable = mask]
  br label %6, !dbg !1854                         ; [debug line = 136:7@171:51]

; <label>:6                                       ; preds = %8, %crypto_sign_ed25519_ref_fe25519_neg.exit
  %i.i5 = phi i6 [ 0, %crypto_sign_ed25519_ref_fe25519_neg.exit ], [ %i.75, %8 ] ; [#uses=3 type=i6]
  %exitcond.i5 = icmp eq i6 %i.i5, -32, !dbg !1854 ; [#uses=1 type=i1] [debug line = 136:7@171:51]
  %7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i5, label %crypto_sign_ed25519_ref_fe25519_cmov.1.exit, label %8, !dbg !1854 ; [debug line = 136:7@171:51]

; <label>:8                                       ; preds = %6
  %tmp..i = zext i6 %i.i5 to i64, !dbg !1855      ; [#uses=2 type=i64] [debug line = 136:21@171:51]
  %r.v.assign.addr.1 = getelementptr [32 x i32]* %v.v, i64 0, i64 %tmp..i, !dbg !1855 ; [#uses=1 type=i32*] [debug line = 136:21@171:51]
  %r.v.assign.load = load i32* %r.v.assign.addr.1, align 4, !dbg !1855 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  %t.x.v.addr.33 = getelementptr [32 x i32]* %t.x.v, i64 0, i64 %tmp..i, !dbg !1855 ; [#uses=2 type=i32*] [debug line = 136:21@171:51]
  %t.x.v.load.1 = load i32* %t.x.v.addr.33, align 4, !dbg !1855 ; [#uses=2 type=i32] [debug line = 136:21@171:51]
  %tmp.894.i = xor i32 %t.x.v.load.1, %r.v.assign.load, !dbg !1855 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  %tmp.895.i = and i32 %tmp.894.i, %mask, !dbg !1855 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  %tmp.896.i = xor i32 %t.x.v.load.1, %tmp.895.i, !dbg !1855 ; [#uses=1 type=i32] [debug line = 136:21@171:51]
  store i32 %tmp.896.i, i32* %t.x.v.addr.33, align 4, !dbg !1855 ; [debug line = 136:21@171:51]
  %i.75 = add i6 %i.i5, 1, !dbg !1856             ; [#uses=1 type=i6] [debug line = 136:16@171:51]
  call void @llvm.dbg.value(metadata !{i6 %i.75}, i64 0, metadata !1857), !dbg !1856 ; [debug line = 136:16@171:51] [debug variable = i]
  br label %6, !dbg !1856                         ; [debug line = 136:16@171:51]

crypto_sign_ed25519_ref_fe25519_cmov.1.exit:      ; preds = %6
  ret void, !dbg !1858                            ; [debug line = 172:1]
}

; [#uses=4]
define internal fastcc void @barrett_reduce([32 x i32]* nocapture %r.v, [64 x i32]* nocapture %x) {
  %q2 = alloca [66 x i32], align 16               ; [#uses=6 type=[66 x i32]*]
  %r1 = alloca [33 x i32], align 16               ; [#uses=2 type=[33 x i32]*]
  %r2 = alloca [33 x i32], align 16               ; [#uses=5 type=[33 x i32]*]
  call void @llvm.dbg.value(metadata !{[32 x i32]* %r.v}, i64 0, metadata !1859), !dbg !1865 ; [debug line = 41:61] [debug variable = r.v]
  call void @llvm.dbg.value(metadata !{[64 x i32]* %x}, i64 0, metadata !1866), !dbg !1868 ; [debug line = 41:84] [debug variable = x]
  call void @llvm.dbg.declare(metadata !{[66 x i32]* %q2}, metadata !1869), !dbg !1874 ; [debug line = 45:17] [debug variable = q2]
  call void @llvm.dbg.declare(metadata !{[33 x i32]* %r1}, metadata !1875), !dbg !1877 ; [debug line = 47:17] [debug variable = r1]
  call void @llvm.dbg.declare(metadata !{[33 x i32]* %r2}, metadata !1878), !dbg !1879 ; [debug line = 48:17] [debug variable = r2]
  br label %1, !dbg !1880                         ; [debug line = 53:8]

; <label>:1                                       ; preds = %3, %0
  %i = phi i7 [ 0, %0 ], [ %i.76, %3 ]            ; [#uses=3 type=i7]
  %exitcond8 = icmp eq i7 %i, -62, !dbg !1880     ; [#uses=1 type=i1] [debug line = 53:8]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 66, i64 66, i64 66) ; [#uses=0 type=i32]
  br i1 %exitcond8, label %.preheader14.preheader, label %3, !dbg !1880 ; [debug line = 53:8]

.preheader14.preheader:                           ; preds = %1
  br label %.preheader14, !dbg !1882              ; [debug line = 54:8]

; <label>:3                                       ; preds = %1
  %tmp = zext i7 %i to i64, !dbg !1884            ; [#uses=1 type=i64] [debug line = 53:26]
  %q2.addr = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 %tmp, !dbg !1884 ; [#uses=1 type=i32*] [debug line = 53:26]
  store i32 0, i32* %q2.addr, align 4, !dbg !1884 ; [debug line = 53:26]
  %i.76 = add i7 %i, 1, !dbg !1885                ; [#uses=1 type=i7] [debug line = 53:21]
  call void @llvm.dbg.value(metadata !{i7 %i.76}, i64 0, metadata !1886), !dbg !1885 ; [debug line = 53:21] [debug variable = i]
  br label %1, !dbg !1885                         ; [debug line = 53:21]

.preheader14:                                     ; preds = %5, %.preheader14.preheader
  %i.1 = phi i6 [ %i.77, %5 ], [ 0, %.preheader14.preheader ] ; [#uses=3 type=i6]
  %exitcond7 = icmp eq i6 %i.1, -31, !dbg !1882   ; [#uses=1 type=i1] [debug line = 54:8]
  %4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  br i1 %exitcond7, label %.preheader13.preheader, label %5, !dbg !1882 ; [debug line = 54:8]

.preheader13.preheader:                           ; preds = %.preheader14
  br label %.preheader13, !dbg !1887              ; [debug line = 56:7]

; <label>:5                                       ; preds = %.preheader14
  %tmp. = zext i6 %i.1 to i64, !dbg !1889         ; [#uses=1 type=i64] [debug line = 54:26]
  %r2.addr = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp., !dbg !1889 ; [#uses=1 type=i32*] [debug line = 54:26]
  store i32 0, i32* %r2.addr, align 4, !dbg !1889 ; [debug line = 54:26]
  %i.77 = add i6 %i.1, 1, !dbg !1890              ; [#uses=1 type=i6] [debug line = 54:21]
  call void @llvm.dbg.value(metadata !{i6 %i.77}, i64 0, metadata !1886), !dbg !1890 ; [debug line = 54:21] [debug variable = i]
  br label %.preheader14, !dbg !1890              ; [debug line = 54:21]

.preheader13:                                     ; preds = %10, %.preheader13.preheader
  %i.2 = phi i6 [ %i.79, %10 ], [ 0, %.preheader13.preheader ] ; [#uses=4 type=i6]
  %i.2.cast = zext i6 %i.2 to i7, !dbg !1887      ; [#uses=1 type=i7] [debug line = 56:7]
  %exitcond6 = icmp eq i6 %i.2, -31, !dbg !1887   ; [#uses=1 type=i1] [debug line = 56:7]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  br i1 %exitcond6, label %11, label %.preheader12.preheader, !dbg !1887 ; [debug line = 56:7]

.preheader12.preheader:                           ; preds = %.preheader13
  %tmp.867 = zext i6 %i.2 to i64, !dbg !1891      ; [#uses=1 type=i64] [debug line = 58:21]
  %mu.addr = getelementptr [33 x i8]* @mu, i64 0, i64 %tmp.867, !dbg !1891 ; [#uses=1 type=i8*] [debug line = 58:21]
  %mu.load = load i8* %mu.addr, align 1, !dbg !1891 ; [#uses=1 type=i8] [debug line = 58:21]
  %mu.load.cast = zext i8 %mu.load to i32, !dbg !1891 ; [#uses=1 type=i32] [debug line = 58:21]
  br label %.preheader12, !dbg !1893              ; [debug line = 57:9]

.preheader12:                                     ; preds = %._crit_edge, %.preheader12.preheader
  %j = phi i6 [ %j.5, %._crit_edge ], [ 0, %.preheader12.preheader ] ; [#uses=4 type=i6]
  %j.cast = zext i6 %j to i7, !dbg !1893          ; [#uses=1 type=i7] [debug line = 57:9]
  %exitcond5 = icmp eq i6 %j, -31, !dbg !1893     ; [#uses=1 type=i1] [debug line = 57:9]
  %7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  br i1 %exitcond5, label %10, label %8, !dbg !1893 ; [debug line = 57:9]

; <label>:8                                       ; preds = %.preheader12
  %tmp.869 = add i7 %i.2.cast, %j.cast, !dbg !1894 ; [#uses=2 type=i7] [debug line = 58:7]
  %tmp.870 = icmp ugt i7 %tmp.869, 30, !dbg !1894 ; [#uses=1 type=i1] [debug line = 58:7]
  br i1 %tmp.870, label %9, label %._crit_edge, !dbg !1894 ; [debug line = 58:7]

; <label>:9                                       ; preds = %8
  %tmp.871 = add i6 %j, 31, !dbg !1891            ; [#uses=1 type=i6] [debug line = 58:21]
  %tmp.872 = zext i6 %tmp.871 to i64, !dbg !1891  ; [#uses=1 type=i64] [debug line = 58:21]
  %x.addr.1 = getelementptr [64 x i32]* %x, i64 0, i64 %tmp.872, !dbg !1891 ; [#uses=1 type=i32*] [debug line = 58:21]
  %x.load.1 = load i32* %x.addr.1, align 4, !dbg !1891 ; [#uses=1 type=i32] [debug line = 58:21]
  %tmp.873 = mul i32 %x.load.1, %mu.load.cast, !dbg !1891 ; [#uses=1 type=i32] [debug line = 58:21]
  %tmp.874 = zext i7 %tmp.869 to i64, !dbg !1891  ; [#uses=1 type=i64] [debug line = 58:21]
  %q2.addr.4 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 %tmp.874, !dbg !1891 ; [#uses=2 type=i32*] [debug line = 58:21]
  %q2.load.3 = load i32* %q2.addr.4, align 4, !dbg !1891 ; [#uses=1 type=i32] [debug line = 58:21]
  %tmp.875 = add i32 %tmp.873, %q2.load.3, !dbg !1891 ; [#uses=1 type=i32] [debug line = 58:21]
  store i32 %tmp.875, i32* %q2.addr.4, align 4, !dbg !1891 ; [debug line = 58:21]
  br label %._crit_edge, !dbg !1891               ; [debug line = 58:21]

._crit_edge:                                      ; preds = %9, %8
  %j.5 = add i6 %j, 1, !dbg !1895                 ; [#uses=1 type=i6] [debug line = 57:18]
  call void @llvm.dbg.value(metadata !{i6 %j.5}, i64 0, metadata !1896), !dbg !1895 ; [debug line = 57:18] [debug variable = j]
  br label %.preheader12, !dbg !1895              ; [debug line = 57:18]

; <label>:10                                      ; preds = %.preheader12
  %i.79 = add i6 %i.2, 1, !dbg !1897              ; [#uses=1 type=i6] [debug line = 56:16]
  call void @llvm.dbg.value(metadata !{i6 %i.79}, i64 0, metadata !1886), !dbg !1897 ; [debug line = 56:16] [debug variable = i]
  br label %.preheader13, !dbg !1897              ; [debug line = 56:16]

; <label>:11                                      ; preds = %.preheader13
  %q2.addr.1 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 31, !dbg !1898 ; [#uses=1 type=i32*] [debug line = 59:3]
  %q2.load = load i32* %q2.addr.1, align 4, !dbg !1898 ; [#uses=1 type=i32] [debug line = 59:3]
  %carry = lshr i32 %q2.load, 8, !dbg !1898       ; [#uses=1 type=i32] [debug line = 59:3]
  call void @llvm.dbg.value(metadata !{i32 %carry}, i64 0, metadata !1899), !dbg !1898 ; [debug line = 59:3] [debug variable = carry]
  %q2.addr.2 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 32, !dbg !1900 ; [#uses=2 type=i32*] [debug line = 60:3]
  %q2.load.1 = load i32* %q2.addr.2, align 16, !dbg !1900 ; [#uses=1 type=i32] [debug line = 60:3]
  %tmp.865 = add i32 %carry, %q2.load.1, !dbg !1900 ; [#uses=2 type=i32] [debug line = 60:3]
  store i32 %tmp.865, i32* %q2.addr.2, align 16, !dbg !1900 ; [debug line = 60:3]
  %carry.2 = lshr i32 %tmp.865, 8, !dbg !1901     ; [#uses=1 type=i32] [debug line = 61:3]
  call void @llvm.dbg.value(metadata !{i32 %carry.2}, i64 0, metadata !1899), !dbg !1901 ; [debug line = 61:3] [debug variable = carry]
  %q2.addr.3 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 33, !dbg !1902 ; [#uses=2 type=i32*] [debug line = 62:3]
  %q2.load.2 = load i32* %q2.addr.3, align 4, !dbg !1902 ; [#uses=1 type=i32] [debug line = 62:3]
  %tmp.866 = add i32 %carry.2, %q2.load.2, !dbg !1902 ; [#uses=1 type=i32] [debug line = 62:3]
  store i32 %tmp.866, i32* %q2.addr.3, align 4, !dbg !1902 ; [debug line = 62:3]
  br label %12, !dbg !1903                        ; [debug line = 64:7]

; <label>:12                                      ; preds = %14, %11
  %i.3 = phi i6 [ 0, %11 ], [ %i.78, %14 ]        ; [#uses=3 type=i6]
  %exitcond4 = icmp eq i6 %i.3, -31, !dbg !1903   ; [#uses=1 type=i1] [debug line = 64:7]
  %13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  br i1 %exitcond4, label %.preheader11.preheader, label %14, !dbg !1903 ; [debug line = 64:7]

.preheader11.preheader:                           ; preds = %12
  br label %.preheader11, !dbg !1905              ; [debug line = 65:7]

; <label>:14                                      ; preds = %12
  %tmp.868 = zext i6 %i.3 to i64, !dbg !1907      ; [#uses=2 type=i64] [debug line = 64:20]
  %x.addr = getelementptr [64 x i32]* %x, i64 0, i64 %tmp.868, !dbg !1907 ; [#uses=1 type=i32*] [debug line = 64:20]
  %x.load = load i32* %x.addr, align 4, !dbg !1907 ; [#uses=1 type=i32] [debug line = 64:20]
  %r1.addr = getelementptr inbounds [33 x i32]* %r1, i64 0, i64 %tmp.868, !dbg !1907 ; [#uses=1 type=i32*] [debug line = 64:20]
  store i32 %x.load, i32* %r1.addr, align 4, !dbg !1907 ; [debug line = 64:20]
  %i.78 = add i6 %i.3, 1, !dbg !1908              ; [#uses=1 type=i6] [debug line = 64:16]
  call void @llvm.dbg.value(metadata !{i6 %i.78}, i64 0, metadata !1886), !dbg !1908 ; [debug line = 64:16] [debug variable = i]
  br label %12, !dbg !1908                        ; [debug line = 64:16]

.preheader11:                                     ; preds = %19, %.preheader11.preheader
  %i.4 = phi i6 [ %i.81, %19 ], [ 0, %.preheader11.preheader ] ; [#uses=4 type=i6]
  %exitcond3 = icmp eq i6 %i.4, -32, !dbg !1905   ; [#uses=1 type=i1] [debug line = 65:7]
  %15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %.preheader9.preheader, label %.preheader10.preheader, !dbg !1905 ; [debug line = 65:7]

.preheader9.preheader:                            ; preds = %.preheader11
  br label %.preheader9, !dbg !1909               ; [debug line = 69:7]

.preheader10.preheader:                           ; preds = %.preheader11
  %tmp.876 = zext i6 %i.4 to i64, !dbg !1911      ; [#uses=1 type=i64] [debug line = 67:20]
  %m.addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp.876, !dbg !1911 ; [#uses=1 type=i8*] [debug line = 67:20]
  %m.load = load i8* %m.addr, align 1, !dbg !1911 ; [#uses=1 type=i8] [debug line = 67:20]
  %m.load.cast = zext i8 %m.load to i32, !dbg !1911 ; [#uses=1 type=i32] [debug line = 67:20]
  br label %.preheader10, !dbg !1913              ; [debug line = 66:9]

.preheader10:                                     ; preds = %._crit_edge15, %.preheader10.preheader
  %j.1 = phi i6 [ %j.6, %._crit_edge15 ], [ 0, %.preheader10.preheader ] ; [#uses=4 type=i6]
  %exitcond2 = icmp eq i6 %j.1, -31, !dbg !1913   ; [#uses=1 type=i1] [debug line = 66:9]
  %16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 33, i64 33, i64 33) ; [#uses=0 type=i32]
  br i1 %exitcond2, label %19, label %17, !dbg !1913 ; [debug line = 66:9]

; <label>:17                                      ; preds = %.preheader10
  %tmp.880 = add i6 %i.4, %j.1, !dbg !1914        ; [#uses=2 type=i6] [debug line = 67:7]
  %tmp.881 = icmp ult i6 %tmp.880, -31, !dbg !1914 ; [#uses=1 type=i1] [debug line = 67:7]
  br i1 %tmp.881, label %18, label %._crit_edge15, !dbg !1914 ; [debug line = 67:7]

; <label>:18                                      ; preds = %17
  %tmp.927.cast = zext i6 %j.1 to i7, !dbg !1911  ; [#uses=1 type=i7] [debug line = 67:20]
  %q3.0.sum = add i7 %tmp.927.cast, 33, !dbg !1911 ; [#uses=1 type=i7] [debug line = 67:20]
  %q3.0.sum.cast = zext i7 %q3.0.sum to i64, !dbg !1911 ; [#uses=1 type=i64] [debug line = 67:20]
  %q2.addr.5 = getelementptr inbounds [66 x i32]* %q2, i64 0, i64 %q3.0.sum.cast, !dbg !1911 ; [#uses=1 type=i32*] [debug line = 67:20]
  %q2.load.4 = load i32* %q2.addr.5, align 4, !dbg !1911 ; [#uses=1 type=i32] [debug line = 67:20]
  %tmp.882 = mul i32 %q2.load.4, %m.load.cast, !dbg !1911 ; [#uses=1 type=i32] [debug line = 67:20]
  %tmp.883 = zext i6 %tmp.880 to i64, !dbg !1911  ; [#uses=1 type=i64] [debug line = 67:20]
  %r2.addr.3 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp.883, !dbg !1911 ; [#uses=2 type=i32*] [debug line = 67:20]
  %r2.load.2 = load i32* %r2.addr.3, align 4, !dbg !1911 ; [#uses=1 type=i32] [debug line = 67:20]
  %tmp.884 = add i32 %tmp.882, %r2.load.2, !dbg !1911 ; [#uses=1 type=i32] [debug line = 67:20]
  store i32 %tmp.884, i32* %r2.addr.3, align 4, !dbg !1911 ; [debug line = 67:20]
  br label %._crit_edge15, !dbg !1911             ; [debug line = 67:20]

._crit_edge15:                                    ; preds = %18, %17
  %j.6 = add i6 %j.1, 1, !dbg !1915               ; [#uses=1 type=i6] [debug line = 66:18]
  call void @llvm.dbg.value(metadata !{i6 %j.6}, i64 0, metadata !1896), !dbg !1915 ; [debug line = 66:18] [debug variable = j]
  br label %.preheader10, !dbg !1915              ; [debug line = 66:18]

; <label>:19                                      ; preds = %.preheader10
  %i.81 = add i6 %i.4, 1, !dbg !1916              ; [#uses=1 type=i6] [debug line = 65:16]
  call void @llvm.dbg.value(metadata !{i6 %i.81}, i64 0, metadata !1886), !dbg !1916 ; [debug line = 65:16] [debug variable = i]
  br label %.preheader11, !dbg !1916              ; [debug line = 65:16]

.preheader9:                                      ; preds = %21, %.preheader9.preheader
  %i.5 = phi i6 [ %i.80, %21 ], [ 0, %.preheader9.preheader ] ; [#uses=3 type=i6]
  %exitcond1 = icmp eq i6 %i.5, -32, !dbg !1909   ; [#uses=1 type=i1] [debug line = 69:7]
  %20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %.preheader.preheader, label %21, !dbg !1909 ; [debug line = 69:7]

.preheader.preheader:                             ; preds = %.preheader9
  br label %.preheader, !dbg !1917                ; [debug line = 76:7]

; <label>:21                                      ; preds = %.preheader9
  %tmp.877 = zext i6 %i.5 to i64, !dbg !1919      ; [#uses=1 type=i64] [debug line = 71:5]
  %r2.addr.1 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp.877, !dbg !1919 ; [#uses=2 type=i32*] [debug line = 71:5]
  %r2.load = load i32* %r2.addr.1, align 4, !dbg !1919 ; [#uses=2 type=i32] [debug line = 71:5]
  %r2.load.cast = trunc i32 %r2.load to i8, !dbg !1919 ; [#uses=1 type=i8] [debug line = 71:5]
  %carry.3 = lshr i32 %r2.load, 8, !dbg !1919     ; [#uses=1 type=i32] [debug line = 71:5]
  call void @llvm.dbg.value(metadata !{i32 %carry.3}, i64 0, metadata !1899), !dbg !1919 ; [debug line = 71:5] [debug variable = carry]
  %i.80 = add i6 %i.5, 1, !dbg !1921              ; [#uses=2 type=i6] [debug line = 72:5]
  %tmp.878 = zext i6 %i.80 to i64, !dbg !1921     ; [#uses=1 type=i64] [debug line = 72:5]
  %r2.addr.2 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp.878, !dbg !1921 ; [#uses=2 type=i32*] [debug line = 72:5]
  %r2.load.1 = load i32* %r2.addr.2, align 4, !dbg !1921 ; [#uses=1 type=i32] [debug line = 72:5]
  %tmp.879 = add i32 %carry.3, %r2.load.1, !dbg !1921 ; [#uses=1 type=i32] [debug line = 72:5]
  store i32 %tmp.879, i32* %r2.addr.2, align 4, !dbg !1921 ; [debug line = 72:5]
  %tmp.924.cast = zext i8 %r2.load.cast to i32, !dbg !1922 ; [#uses=1 type=i32] [debug line = 73:5]
  store i32 %tmp.924.cast, i32* %r2.addr.1, align 4, !dbg !1922 ; [debug line = 73:5]
  call void @llvm.dbg.value(metadata !{i6 %i.80}, i64 0, metadata !1886), !dbg !1923 ; [debug line = 69:16] [debug variable = i]
  br label %.preheader9, !dbg !1923               ; [debug line = 69:16]

.preheader:                                       ; preds = %23, %.preheader.preheader
  %i.6 = phi i6 [ %i.82, %23 ], [ 0, %.preheader.preheader ] ; [#uses=3 type=i6]
  %pb = phi i1 [ %x.24.cast, %23 ], [ false, %.preheader.preheader ] ; [#uses=1 type=i1]
  %pb.cast = zext i1 %pb to i32, !dbg !1917       ; [#uses=1 type=i32] [debug line = 76:7]
  %exitcond = icmp eq i6 %i.6, -32, !dbg !1917    ; [#uses=1 type=i1] [debug line = 76:7]
  %22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond, label %24, label %23, !dbg !1917 ; [debug line = 76:7]

; <label>:23                                      ; preds = %.preheader
  %tmp.885 = zext i6 %i.6 to i64, !dbg !1924      ; [#uses=3 type=i64] [debug line = 78:5]
  %r2.addr.4 = getelementptr inbounds [33 x i32]* %r2, i64 0, i64 %tmp.885, !dbg !1924 ; [#uses=1 type=i32*] [debug line = 78:5]
  %r2.load.3 = load i32* %r2.addr.4, align 4, !dbg !1924 ; [#uses=1 type=i32] [debug line = 78:5]
  %pb.7 = add i32 %pb.cast, %r2.load.3, !dbg !1924 ; [#uses=1 type=i32] [debug line = 78:5]
  call void @llvm.dbg.value(metadata !{i32 %pb.7}, i64 0, metadata !1926), !dbg !1924 ; [debug line = 78:5] [debug variable = pb]
  %r1.addr.1 = getelementptr inbounds [33 x i32]* %r1, i64 0, i64 %tmp.885, !dbg !1927 ; [#uses=1 type=i32*] [debug line = 79:9]
  %a.assign = load i32* %r1.addr.1, align 4, !dbg !1927 ; [#uses=1 type=i32] [debug line = 79:9]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !1928), !dbg !1929 ; [debug line = 11:39@79:9] [debug variable = a]
  call void @llvm.dbg.value(metadata !{i32 %pb.7}, i64 0, metadata !1930), !dbg !1931 ; [debug line = 11:55@79:9] [debug variable = b]
  call void @llvm.dbg.value(metadata !{i32 %a.assign}, i64 0, metadata !1932), !dbg !1933 ; [debug line = 13:21@79:9] [debug variable = x]
  %x.22 = sub i32 %a.assign, %pb.7, !dbg !1934    ; [#uses=3 type=i32] [debug line = 14:3@79:9]
  call void @llvm.dbg.value(metadata !{i32 %x.22}, i64 0, metadata !1932), !dbg !1934 ; [debug line = 14:3@79:9] [debug variable = x]
  %x.24 = lshr i32 %x.22, 31, !dbg !1935          ; [#uses=1 type=i32] [debug line = 15:3@79:9]
  %x.24.cast = trunc i32 %x.24 to i1, !dbg !1935  ; [#uses=1 type=i1] [debug line = 15:3@79:9]
  call void @llvm.dbg.value(metadata !{i32 %x.24}, i64 0, metadata !1932), !dbg !1935 ; [debug line = 15:3@79:9] [debug variable = x]
  call void @llvm.dbg.value(metadata !{i32 %x.24}, i64 0, metadata !1936), !dbg !1927 ; [debug line = 79:9] [debug variable = b]
  %tmp.1 = lshr i32 %x.22, 23, !dbg !1937         ; [#uses=1 type=i32] [debug line = 80:5]
  %tmp.1.cast = trunc i32 %tmp.1 to i9, !dbg !1937 ; [#uses=1 type=i9] [debug line = 80:5]
  %tmp.886 = and i9 %tmp.1.cast, -256, !dbg !1937 ; [#uses=1 type=i9] [debug line = 80:5]
  %tmp.932.cast = zext i9 %tmp.886 to i32, !dbg !1937 ; [#uses=1 type=i32] [debug line = 80:5]
  %tmp.887 = add i32 %x.22, %tmp.932.cast, !dbg !1937 ; [#uses=1 type=i32] [debug line = 80:5]
  %r.v.addr = getelementptr [32 x i32]* %r.v, i64 0, i64 %tmp.885, !dbg !1937 ; [#uses=1 type=i32*] [debug line = 80:5]
  store i32 %tmp.887, i32* %r.v.addr, align 4, !dbg !1937 ; [debug line = 80:5]
  call void @llvm.dbg.value(metadata !{i32 %x.24}, i64 0, metadata !1926), !dbg !1938 ; [debug line = 81:5] [debug variable = pb]
  %i.82 = add i6 %i.6, 1, !dbg !1939              ; [#uses=1 type=i6] [debug line = 76:16]
  call void @llvm.dbg.value(metadata !{i6 %i.82}, i64 0, metadata !1886), !dbg !1939 ; [debug line = 76:16] [debug variable = i]
  br label %.preheader, !dbg !1939                ; [debug line = 76:16]

; <label>:24                                      ; preds = %.preheader
  call fastcc void @reduce_add_sub([32 x i32]* %r.v), !dbg !1940 ; [debug line = 88:3]
  call fastcc void @reduce_add_sub([32 x i32]* %r.v), !dbg !1941 ; [debug line = 89:3]
  ret void, !dbg !1942                            ; [debug line = 90:1]
}

; [#uses=1]
declare void @_ssdm_op_SpecTopModule(...)

; [#uses=56]
declare void @_ssdm_op_SpecResourceLimit(...) nounwind

; [#uses=107]
declare i32 @_ssdm_op_SpecLoopTripCount(...)

; [#uses=1]
declare i32 @_ssdm_op_SpecLoopName(...)

; [#uses=5]
declare void @_ssdm_op_SpecInterface(...) nounwind

; [#uses=1]
declare i32 @_ssdm_op_SpecBurst(...)

; [#uses=5]
declare void @_ssdm_op_SpecBitsMap(...)

; [#uses=0]
declare i8 @_ssdm_op_PartSelect.i8.i8.i32.i32(i8, i32, i32) nounwind readnone

; [#uses=0]
declare i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i8 @_ssdm_op_PartSelect.i8.i40.i32.i32(i40, i32, i32) nounwind readnone

; [#uses=3]
declare i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32, i32, i32) nounwind readnone

; [#uses=0]
declare i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24, i32, i32) nounwind readnone

; [#uses=0]
declare i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16, i32, i32) nounwind readnone

; [#uses=0]
declare i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=3]
declare i32 @_ssdm_op_PartSelect.i32.i40.i32.i32(i40, i32, i32) nounwind readnone

; [#uses=0]
declare i24 @_ssdm_op_PartSelect.i24.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=0]
declare i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=3]
declare i16 @_ssdm_op_PartSelect.i16.i56.i32.i32(i56, i32, i32) nounwind readnone

; [#uses=0]
declare i16 @_ssdm_op_PartSelect.i16.i40.i32.i32(i40, i32, i32) nounwind readnone

; [#uses=0]
declare i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8, i56) nounwind readnone

; [#uses=3]
declare i64 @_ssdm_op_BitConcatenate.i64.i8.i16.i32.i8(i8, i16, i32, i8) nounwind readnone

; [#uses=0]
declare i64 @_ssdm_op_BitConcatenate.i64.i56.i8(i56, i8) nounwind readnone

; [#uses=0]
declare i64 @_ssdm_op_BitConcatenate.i64.i24.i40(i24, i40) nounwind readnone

; [#uses=0]
declare i64 @_ssdm_op_BitConcatenate.i64.i24.i32.i8(i24, i32, i8) nounwind readnone

; [#uses=0]
declare i64 @_ssdm_op_BitConcatenate.i64.i16.i48(i16, i48) nounwind readnone

; [#uses=3]
declare i56 @_ssdm_op_BitConcatenate.i56.i8.i48(i8, i48) nounwind readnone

; [#uses=0]
declare i56 @_ssdm_op_BitConcatenate.i56.i24.i32(i24, i32) nounwind readnone

; [#uses=3]
declare i40 @_ssdm_op_BitConcatenate.i40.i8.i8.i24(i8, i8, i24) nounwind readnone

; [#uses=0]
declare i40 @_ssdm_op_BitConcatenate.i40.i8.i32(i8, i32) nounwind readnone

; [#uses=0]
declare i40 @_ssdm_op_BitConcatenate.i40.i16.i24(i16, i24) nounwind readnone

; [#uses=3]
declare i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8, i16) nounwind readnone

; [#uses=0]
declare i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8, i8) nounwind readnone

; [#uses=4]
declare void @_ssdm_SpecKeepAssert(...)

; [#uses=1]
define internal fastcc void @_memmove([64 x i8]* nocapture %dst, [32 x i8]* nocapture %src) {
  call void @llvm.dbg.value(metadata !{[64 x i8]* %dst}, i64 0, metadata !1943), !dbg !1944 ; [debug line = 34:30] [debug variable = dst]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %src}, i64 0, metadata !1945), !dbg !1946 ; [debug line = 34:50] [debug variable = src]
  call void @llvm.dbg.value(metadata !{[32 x i8]* %src}, i64 0, metadata !1947), !dbg !1949 ; [debug line = 13:49@35:2] [debug variable = src]
  br label %1, !dbg !1950                         ; [debug line = 15:6@35:2]

; <label>:1                                       ; preds = %3, %0
  %i.i = phi i6 [ 0, %0 ], [ %i, %3 ]             ; [#uses=4 type=i6]
  %exitcond.i = icmp eq i6 %i.i, -32, !dbg !1950  ; [#uses=1 type=i1] [debug line = 15:6@35:2]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) ; [#uses=0 type=i32]
  br i1 %exitcond.i, label %_memcpy.1.exit, label %3, !dbg !1950 ; [debug line = 15:6@35:2]

; <label>:3                                       ; preds = %1
  %tmp.i = zext i6 %i.i to i64, !dbg !1951        ; [#uses=1 type=i64] [debug line = 16:3@35:2]
  %src.addr = getelementptr [32 x i8]* %src, i64 0, i64 %tmp.i, !dbg !1951 ; [#uses=1 type=i8*] [debug line = 16:3@35:2]
  %src.load = load i8* %src.addr, align 1, !dbg !1951 ; [#uses=1 type=i8] [debug line = 16:3@35:2]
  %sum.i = xor i6 %i.i, -32                       ; [#uses=1 type=i6]
  %sum.i.cast = zext i6 %sum.i to i64             ; [#uses=1 type=i64]
  %dst.addr = getelementptr [64 x i8]* %dst, i64 0, i64 %sum.i.cast, !dbg !1951 ; [#uses=1 type=i8*] [debug line = 16:3@35:2]
  store i8 %src.load, i8* %dst.addr, align 1, !dbg !1951 ; [debug line = 16:3@35:2]
  %i = add i6 %i.i, 1, !dbg !1952                 ; [#uses=1 type=i6] [debug line = 15:18@35:2]
  call void @llvm.dbg.value(metadata !{i6 %i}, i64 0, metadata !1953), !dbg !1952 ; [debug line = 15:18@35:2] [debug variable = i]
  br label %1, !dbg !1952                         ; [debug line = 15:18@35:2]

_memcpy.1.exit:                                   ; preds = %1
  ret void, !dbg !1954                            ; [debug line = 36:1]
}

!opencl.kernels = !{!0, !7, !0, !11, !17, !23, !23, !29, !32, !32, !34, !37, !34, !39, !41, !43, !43, !47, !51, !51, !51, !56, !58, !58, !61, !64, !66, !70, !72, !75, !77, !80, !86, !88, !91, !94, !98, !101, !105, !107, !110, !112, !114, !115, !117, !119, !121, !122, !124, !121, !115, !115, !127, !128, !128, !128, !127, !127, !127, !115, !130, !130, !115, !66, !66}
!hls.encrypted.func = !{}
!llvm.map.gv = !{}
!llvm.dbg.cu = !{!133, !145, !163}

!0 = metadata !{null, metadata !1, metadata !2, metadata !3, metadata !4, metadata !5, metadata !6}
!1 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 0}
!2 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!3 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uchar*", metadata !"uint"}
!4 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !""}
!5 = metadata !{metadata !"kernel_arg_name", metadata !"dst", metadata !"src", metadata !"len"}
!6 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!7 = metadata !{null, metadata !8, metadata !2, metadata !9, metadata !4, metadata !10, metadata !6}
!8 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 0}
!9 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uchar", metadata !"uint"}
!10 = metadata !{metadata !"kernel_arg_name", metadata !"dst", metadata !"val", metadata !"len"}
!11 = metadata !{null, metadata !12, metadata !13, metadata !14, metadata !15, metadata !16, metadata !6}
!12 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 1, i32 1}
!13 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!14 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"uint", metadata !"uchar*", metadata !"uchar*"}
!15 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !""}
!16 = metadata !{metadata !"kernel_arg_name", metadata !"mem", metadata !"num_blocks", metadata !"sk", metadata !"signature_out"}
!17 = metadata !{null, metadata !18, metadata !19, metadata !20, metadata !21, metadata !22, metadata !6}
!18 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!19 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!20 = metadata !{metadata !"kernel_arg_type", metadata !"sha512_context*"}
!21 = metadata !{metadata !"kernel_arg_type_qual", metadata !""}
!22 = metadata !{metadata !"kernel_arg_name", metadata !"md"}
!23 = metadata !{null, metadata !24, metadata !25, metadata !26, metadata !27, metadata !28, metadata !6}
!24 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1}
!25 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none"}
!26 = metadata !{metadata !"kernel_arg_type", metadata !"sha512_context*", metadata !"uchar*"}
!27 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const"}
!28 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"in"}
!29 = metadata !{null, metadata !24, metadata !25, metadata !26, metadata !30, metadata !31, metadata !6}
!30 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !""}
!31 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"out"}
!32 = metadata !{null, metadata !24, metadata !25, metadata !26, metadata !30, metadata !33, metadata !6}
!33 = metadata !{metadata !"kernel_arg_name", metadata !"md", metadata !"buf"}
!34 = metadata !{null, metadata !24, metadata !25, metadata !35, metadata !27, metadata !36, metadata !6}
!35 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"uchar*"}
!36 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x"}
!37 = metadata !{null, metadata !24, metadata !25, metadata !38, metadata !27, metadata !36, metadata !6}
!38 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_shortsc25519*", metadata !"uchar*"}
!39 = metadata !{null, metadata !24, metadata !25, metadata !40, metadata !27, metadata !36, metadata !6}
!40 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_shortsc25519*"}
!41 = metadata !{null, metadata !24, metadata !25, metadata !42, metadata !27, metadata !36, metadata !6}
!42 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!43 = metadata !{null, metadata !18, metadata !19, metadata !44, metadata !45, metadata !46, metadata !6}
!44 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!45 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const"}
!46 = metadata !{metadata !"kernel_arg_name", metadata !"x"}
!47 = metadata !{null, metadata !24, metadata !25, metadata !48, metadata !49, metadata !50, metadata !6}
!48 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!49 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const", metadata !"const"}
!50 = metadata !{metadata !"kernel_arg_name", metadata !"x", metadata !"y"}
!51 = metadata !{null, metadata !52, metadata !2, metadata !53, metadata !54, metadata !55, metadata !6}
!52 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1}
!53 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!54 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !"const"}
!55 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x", metadata !"y"}
!56 = metadata !{null, metadata !52, metadata !2, metadata !57, metadata !54, metadata !55, metadata !6}
!57 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_shortsc25519*"}
!58 = metadata !{null, metadata !24, metadata !25, metadata !59, metadata !27, metadata !60, metadata !6}
!59 = metadata !{metadata !"kernel_arg_type", metadata !"signed char*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!60 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"s"}
!61 = metadata !{null, metadata !52, metadata !2, metadata !62, metadata !54, metadata !63, metadata !6}
!62 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!63 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"s1", metadata !"s2"}
!64 = metadata !{null, metadata !18, metadata !19, metadata !44, metadata !21, metadata !65, metadata !6}
!65 = metadata !{metadata !"kernel_arg_name", metadata !"r"}
!66 = metadata !{null, metadata !67, metadata !25, metadata !68, metadata !30, metadata !69, metadata !6}
!67 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0}
!68 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_uint32", metadata !"crypto_uint32"}
!69 = metadata !{metadata !"kernel_arg_name", metadata !"a", metadata !"b"}
!70 = metadata !{null, metadata !24, metadata !25, metadata !71, metadata !27, metadata !36, metadata !6}
!71 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_uint32*"}
!72 = metadata !{null, metadata !24, metadata !25, metadata !73, metadata !27, metadata !74, metadata !6}
!73 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"uchar*"}
!74 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p"}
!75 = metadata !{null, metadata !24, metadata !25, metadata !76, metadata !27, metadata !74, metadata !6}
!76 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!77 = metadata !{null, metadata !18, metadata !19, metadata !78, metadata !45, metadata !79, metadata !6}
!78 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!79 = metadata !{metadata !"kernel_arg_name", metadata !"p"}
!80 = metadata !{null, metadata !81, metadata !82, metadata !83, metadata !84, metadata !85, metadata !6}
!81 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1, i32 1}
!82 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!83 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!84 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !"const", metadata !"const", metadata !"const"}
!85 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p1", metadata !"s1", metadata !"p2", metadata !"s2"}
!86 = metadata !{null, metadata !24, metadata !25, metadata !87, metadata !27, metadata !60, metadata !6}
!87 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_sc25519*"}
!88 = metadata !{null, metadata !24, metadata !25, metadata !89, metadata !27, metadata !90, metadata !6}
!89 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"ge25519_aff*"}
!90 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"q"}
!91 = metadata !{null, metadata !8, metadata !2, metadata !92, metadata !4, metadata !93, metadata !6}
!92 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_aff*", metadata !"ulong long", metadata !"signed char"}
!93 = metadata !{metadata !"kernel_arg_name", metadata !"t", metadata !"pos", metadata !"b"}
!94 = metadata !{null, metadata !95, metadata !19, metadata !96, metadata !21, metadata !97, metadata !6}
!95 = metadata !{metadata !"kernel_arg_addr_space", i32 0}
!96 = metadata !{metadata !"kernel_arg_type", metadata !"signed char"}
!97 = metadata !{metadata !"kernel_arg_name", metadata !"b"}
!98 = metadata !{null, metadata !67, metadata !25, metadata !99, metadata !30, metadata !100, metadata !6}
!99 = metadata !{metadata !"kernel_arg_type", metadata !"signed char", metadata !"signed char"}
!100 = metadata !{metadata !"kernel_arg_name", metadata !"b", metadata !"c"}
!101 = metadata !{null, metadata !1, metadata !2, metadata !102, metadata !103, metadata !104, metadata !6}
!102 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_aff*", metadata !"ge25519_aff*", metadata !"uchar"}
!103 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !""}
!104 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p", metadata !"b"}
!105 = metadata !{null, metadata !24, metadata !25, metadata !106, metadata !27, metadata !74, metadata !6}
!106 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p2*", metadata !"ge25519_p1p1*"}
!107 = metadata !{null, metadata !52, metadata !2, metadata !108, metadata !54, metadata !109, metadata !6}
!108 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p1p1*", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"crypto_sign_ed25519_ref_ge25519*"}
!109 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"p", metadata !"q"}
!110 = metadata !{null, metadata !24, metadata !25, metadata !111, metadata !27, metadata !74, metadata !6}
!111 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_ge25519*", metadata !"ge25519_p1p1*"}
!112 = metadata !{null, metadata !24, metadata !25, metadata !113, metadata !27, metadata !74, metadata !6}
!113 = metadata !{metadata !"kernel_arg_type", metadata !"ge25519_p1p1*", metadata !"ge25519_p2*"}
!114 = metadata !{null, metadata !18, metadata !19, metadata !78, metadata !21, metadata !65, metadata !6}
!115 = metadata !{null, metadata !18, metadata !19, metadata !116, metadata !21, metadata !65, metadata !6}
!116 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!117 = metadata !{null, metadata !24, metadata !25, metadata !118, metadata !27, metadata !36, metadata !6}
!118 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"uchar*"}
!119 = metadata !{null, metadata !24, metadata !25, metadata !120, metadata !27, metadata !36, metadata !6}
!120 = metadata !{metadata !"kernel_arg_type", metadata !"uchar*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!121 = metadata !{null, metadata !18, metadata !19, metadata !116, metadata !45, metadata !46, metadata !6}
!122 = metadata !{null, metadata !24, metadata !25, metadata !123, metadata !49, metadata !50, metadata !6}
!123 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!124 = metadata !{null, metadata !1, metadata !2, metadata !125, metadata !103, metadata !126, metadata !6}
!125 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"uchar"}
!126 = metadata !{metadata !"kernel_arg_name", metadata !"r", metadata !"x", metadata !"b"}
!127 = metadata !{null, metadata !24, metadata !25, metadata !123, metadata !27, metadata !36, metadata !6}
!128 = metadata !{null, metadata !52, metadata !2, metadata !129, metadata !54, metadata !55, metadata !6}
!129 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*", metadata !"crypto_sign_ed25519_ref_fe25519*"}
!130 = metadata !{null, metadata !95, metadata !19, metadata !131, metadata !21, metadata !132, metadata !6}
!131 = metadata !{metadata !"kernel_arg_type", metadata !"crypto_uint32"}
!132 = metadata !{metadata !"kernel_arg_name", metadata !"a"}
!133 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/sha512.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, null, null, null, metadata !134} ; [ DW_TAG_compile_unit ]
!134 = metadata !{metadata !135}
!135 = metadata !{metadata !136}
!136 = metadata !{i32 786484, i32 0, null, metadata !"K", metadata !"K", metadata !"", metadata !137, i32 16, metadata !138, i32 1, i32 1, [80 x i64]* @K} ; [ DW_TAG_variable ]
!137 = metadata !{i32 786473, metadata !"ed25519_ref/src/sha512.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!138 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 5120, i64 64, i32 0, i32 0, metadata !139, metadata !143, i32 0, i32 0} ; [ DW_TAG_array_type ]
!139 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !140} ; [ DW_TAG_const_type ]
!140 = metadata !{i32 786454, null, metadata !"uint64_t", metadata !141, i32 56, i64 0, i64 0, i64 0, i32 0, metadata !142} ; [ DW_TAG_typedef ]
!141 = metadata !{i32 786473, metadata !"ed25519_ref/src/sha512.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!142 = metadata !{i32 786468, null, metadata !"long long unsigned int", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!143 = metadata !{metadata !144}
!144 = metadata !{i32 786465, i64 0, i64 79}      ; [ DW_TAG_subrange_type ]
!145 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/sc25519.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, null, null, null, metadata !146} ; [ DW_TAG_compile_unit ]
!146 = metadata !{metadata !147}
!147 = metadata !{metadata !148, metadata !157, metadata !161, metadata !162}
!148 = metadata !{i32 786484, i32 0, null, metadata !"mu", metadata !"mu", metadata !"mu", metadata !149, i32 8, metadata !150, i32 1, i32 1, [33 x i8]* @mu} ; [ DW_TAG_variable ]
!149 = metadata !{i32 786473, metadata !"ed25519_ref/src/sc25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!150 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1056, i64 32, i32 0, i32 0, metadata !151, metadata !155, i32 0, i32 0} ; [ DW_TAG_array_type ]
!151 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !152} ; [ DW_TAG_const_type ]
!152 = metadata !{i32 786454, null, metadata !"crypto_uint32", metadata !153, i32 4, i64 0, i64 0, i64 0, i32 0, metadata !154} ; [ DW_TAG_typedef ]
!153 = metadata !{i32 786473, metadata !"ed25519_ref/src/sc25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!154 = metadata !{i32 786468, null, metadata !"unsigned int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!155 = metadata !{metadata !156}
!156 = metadata !{i32 786465, i64 0, i64 32}      ; [ DW_TAG_subrange_type ]
!157 = metadata !{i32 786484, i32 0, null, metadata !"m", metadata !"m", metadata !"m", metadata !149, i32 5, metadata !158, i32 1, i32 1, [32 x i8]* @m} ; [ DW_TAG_variable ]
!158 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !151, metadata !159, i32 0, i32 0} ; [ DW_TAG_array_type ]
!159 = metadata !{metadata !160}
!160 = metadata !{i32 786465, i64 0, i64 31}      ; [ DW_TAG_subrange_type ]
!161 = metadata !{i32 786484, i32 0, null, metadata !"mu", metadata !"mu", metadata !"", metadata !149, i32 8, metadata !150, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!162 = metadata !{i32 786484, i32 0, null, metadata !"m", metadata !"m", metadata !"", metadata !149, i32 5, metadata !158, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!163 = metadata !{i32 786449, i32 0, i32 1, metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls/ed25519_ref/solution1/.autopilot/db/ge25519.pragma.2.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, null, null, null, metadata !164} ; [ DW_TAG_compile_unit ]
!164 = metadata !{metadata !165}
!165 = metadata !{metadata !166, metadata !175, metadata !179, metadata !184, metadata !185, metadata !186, metadata !187, metadata !188, metadata !198, metadata !200, metadata !208, metadata !209}
!166 = metadata !{i32 790546, i32 0, null, metadata !"ge25519_ec2d.v", metadata !"ge25519_ec2d.v", metadata !"ge25519_ec2d.v", metadata !167, i32 15, metadata !168, i32 1, i32 1, [32 x i32]* @ge25519_ec2d.v} ; [ DW_TAG_variable_field ]
!167 = metadata !{i32 786473, metadata !"ed25519_ref/src/ge25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!168 = metadata !{i32 786452, null, metadata !"", metadata !169, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !170, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!169 = metadata !{i32 786473, metadata !"ed25519_ref/src/fe25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!170 = metadata !{metadata !171}
!171 = metadata !{i32 786445, metadata !172, metadata !"v", metadata !169, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !173} ; [ DW_TAG_member ]
!172 = metadata !{i32 786451, null, metadata !"", metadata !169, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !170, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!173 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !174, metadata !159, i32 0, i32 0} ; [ DW_TAG_array_type ]
!174 = metadata !{i32 786454, null, metadata !"crypto_uint32", metadata !169, i32 4, i64 0, i64 0, i64 0, i32 0, metadata !154} ; [ DW_TAG_typedef ]
!175 = metadata !{i32 790546, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base.t.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.t.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.t.v", metadata !167, i32 46, metadata !176, i32 0, i32 1, [32 x i32]* @crypto_sign_ed25519_ref_ge25519_base.t.v} ; [ DW_TAG_variable_field ]
!176 = metadata !{i32 786452, null, metadata !"", metadata !177, i32 15, i64 1024, i64 32, i32 0, i32 0, null, metadata !178, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!177 = metadata !{i32 786473, metadata !"ed25519_ref/src/ge25519.h", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!178 = metadata !{metadata !168}
!179 = metadata !{i32 790546, i32 0, null, metadata !"ge25519_base_multiples_affine.x.v", metadata !"ge25519_base_multiples_affine.x.v", metadata !"ge25519_base_multiples_affine.x.v", metadata !167, i32 56, metadata !180, i32 1, i32 1, [425 x [32 x i32]]* @ge25519_base_multiples_affine.x.v} ; [ DW_TAG_variable_field ]
!180 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 435200, i64 32, i32 0, i32 0, metadata !181, metadata !182, i32 0, i32 0} ; [ DW_TAG_array_type ]
!181 = metadata !{i32 786452, null, metadata !"", metadata !167, i32 38, i64 1024, i64 32, i32 0, i32 0, null, metadata !178, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!182 = metadata !{metadata !183}
!183 = metadata !{i32 786465, i64 0, i64 424}     ; [ DW_TAG_subrange_type ]
!184 = metadata !{i32 790546, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base.x.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.x.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.x.v", metadata !167, i32 46, metadata !176, i32 0, i32 1, [32 x i32]* @crypto_sign_ed25519_ref_ge25519_base.x.v} ; [ DW_TAG_variable_field ]
!185 = metadata !{i32 790546, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base.y.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.y.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.y.v", metadata !167, i32 46, metadata !176, i32 0, i32 1, [32 x i32]* @crypto_sign_ed25519_ref_ge25519_base.y.v} ; [ DW_TAG_variable_field ]
!186 = metadata !{i32 790546, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base.z.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.z.v", metadata !"crypto_sign_ed25519_ref_ge25519_base.z.v", metadata !167, i32 46, metadata !176, i32 0, i32 1, [32 x i32]* @crypto_sign_ed25519_ref_ge25519_base.z.v} ; [ DW_TAG_variable_field ]
!187 = metadata !{i32 790546, i32 0, null, metadata !"ge25519_base_multiples_affine.y.v", metadata !"ge25519_base_multiples_affine.y.v", metadata !"ge25519_base_multiples_affine.y.v", metadata !167, i32 56, metadata !180, i32 1, i32 1, [425 x [32 x i32]]* @ge25519_base_multiples_affine.y.v} ; [ DW_TAG_variable_field ]
!188 = metadata !{i32 786484, i32 0, null, metadata !"crypto_sign_ed25519_ref_ge25519_base", metadata !"crypto_sign_ed25519_ref_ge25519_base", metadata !"", metadata !167, i32 46, metadata !189, i32 0, i32 1, null} ; [ DW_TAG_variable ]
!189 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !190} ; [ DW_TAG_const_type ]
!190 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_ge25519", metadata !167, i32 21, i64 0, i64 0, i64 0, i32 0, metadata !191} ; [ DW_TAG_typedef ]
!191 = metadata !{i32 786451, null, metadata !"", metadata !177, i32 15, i64 4096, i64 32, i32 0, i32 0, null, metadata !192, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!192 = metadata !{metadata !193, metadata !195, metadata !196, metadata !197}
!193 = metadata !{i32 786445, metadata !191, metadata !"x", metadata !177, i32 17, i64 1024, i64 32, i64 0, i32 0, metadata !194} ; [ DW_TAG_member ]
!194 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !177, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !172} ; [ DW_TAG_typedef ]
!195 = metadata !{i32 786445, metadata !191, metadata !"y", metadata !177, i32 18, i64 1024, i64 32, i64 1024, i32 0, metadata !194} ; [ DW_TAG_member ]
!196 = metadata !{i32 786445, metadata !191, metadata !"z", metadata !177, i32 19, i64 1024, i64 32, i64 2048, i32 0, metadata !194} ; [ DW_TAG_member ]
!197 = metadata !{i32 786445, metadata !191, metadata !"t", metadata !177, i32 20, i64 1024, i64 32, i64 3072, i32 0, metadata !194} ; [ DW_TAG_member ]
!198 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_ec2d", metadata !"ge25519_ec2d", metadata !"", metadata !167, i32 15, metadata !199, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!199 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !194} ; [ DW_TAG_const_type ]
!200 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_base_multiples_affine", metadata !"ge25519_base_multiples_affine", metadata !"", metadata !167, i32 56, metadata !201, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!201 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 870400, i64 32, i32 0, i32 0, metadata !202, metadata !182, i32 0, i32 0} ; [ DW_TAG_array_type ]
!202 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !203} ; [ DW_TAG_const_type ]
!203 = metadata !{i32 786454, null, metadata !"ge25519_aff", metadata !167, i32 42, i64 0, i64 0, i64 0, i32 0, metadata !204} ; [ DW_TAG_typedef ]
!204 = metadata !{i32 786451, null, metadata !"", metadata !167, i32 38, i64 2048, i64 32, i32 0, i32 0, null, metadata !205, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!205 = metadata !{metadata !206, metadata !207}
!206 = metadata !{i32 786445, metadata !204, metadata !"x", metadata !167, i32 40, i64 1024, i64 32, i64 0, i32 0, metadata !194} ; [ DW_TAG_member ]
!207 = metadata !{i32 786445, metadata !204, metadata !"y", metadata !167, i32 41, i64 1024, i64 32, i64 1024, i32 0, metadata !194} ; [ DW_TAG_member ]
!208 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_sqrtm1", metadata !"ge25519_sqrtm1", metadata !"", metadata !167, i32 18, metadata !199, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!209 = metadata !{i32 786484, i32 0, null, metadata !"ge25519_ecd", metadata !"ge25519_ecd", metadata !"", metadata !167, i32 12, metadata !199, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!210 = metadata !{i7 0, i7 32, i7 0, i7 32}       
!211 = metadata !{i32 790533, metadata !212, metadata !"md.length", null, i32 298, metadata !238, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!212 = metadata !{i32 786689, metadata !213, metadata !"md", metadata !137, i32 16777514, metadata !217, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!213 = metadata !{i32 786478, i32 0, metadata !137, metadata !"sha512_update_32", metadata !"sha512_update_32", metadata !"", metadata !137, i32 298, metadata !214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 299} ; [ DW_TAG_subprogram ]
!214 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !215, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!215 = metadata !{metadata !216, metadata !217, metadata !234}
!216 = metadata !{i32 786468, null, metadata !"int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!217 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !218} ; [ DW_TAG_pointer_type ]
!218 = metadata !{i32 786454, null, metadata !"sha512_context", metadata !137, i32 15, i64 0, i64 0, i64 0, i32 0, metadata !219} ; [ DW_TAG_typedef ]
!219 = metadata !{i32 786451, null, metadata !"sha512_context_", metadata !141, i32 11, i64 1664, i64 64, i32 0, i32 0, null, metadata !220, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!220 = metadata !{metadata !221, metadata !222, metadata !226, metadata !229}
!221 = metadata !{i32 786445, metadata !219, metadata !"length", metadata !141, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !140} ; [ DW_TAG_member ]
!222 = metadata !{i32 786445, metadata !219, metadata !"state", metadata !141, i32 12, i64 512, i64 64, i64 64, i32 0, metadata !223} ; [ DW_TAG_member ]
!223 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 64, i32 0, i32 0, metadata !140, metadata !224, i32 0, i32 0} ; [ DW_TAG_array_type ]
!224 = metadata !{metadata !225}
!225 = metadata !{i32 786465, i64 0, i64 7}       ; [ DW_TAG_subrange_type ]
!226 = metadata !{i32 786445, metadata !219, metadata !"curlen", metadata !141, i32 13, i64 64, i64 64, i64 576, i32 0, metadata !227} ; [ DW_TAG_member ]
!227 = metadata !{i32 786454, null, metadata !"size_t", metadata !141, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !228} ; [ DW_TAG_typedef ]
!228 = metadata !{i32 786468, null, metadata !"long unsigned int", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!229 = metadata !{i32 786445, metadata !219, metadata !"buf", metadata !141, i32 14, i64 1024, i64 8, i64 640, i32 0, metadata !230} ; [ DW_TAG_member ]
!230 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 8, i32 0, i32 0, metadata !231, metadata !232, i32 0, i32 0} ; [ DW_TAG_array_type ]
!231 = metadata !{i32 786468, null, metadata !"unsigned char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!232 = metadata !{metadata !233}
!233 = metadata !{i32 786465, i64 0, i64 127}     ; [ DW_TAG_subrange_type ]
!234 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !235} ; [ DW_TAG_pointer_type ]
!235 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !231} ; [ DW_TAG_const_type ]
!236 = metadata !{metadata !237}
!237 = metadata !{i32 786468}                     ; [ DW_TAG_base_type ]
!238 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !239} ; [ DW_TAG_pointer_type ]
!239 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !240, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!240 = metadata !{metadata !221}
!241 = metadata !{i32 298, i32 39, metadata !213, null}
!242 = metadata !{i32 790531, metadata !212, metadata !"md.state", null, i32 298, metadata !243, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!243 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !244} ; [ DW_TAG_pointer_type ]
!244 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 512, i64 64, i32 0, i32 0, null, metadata !245, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!245 = metadata !{metadata !222}
!246 = metadata !{i32 790533, metadata !212, metadata !"md.curlen", null, i32 298, metadata !247, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!247 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !248} ; [ DW_TAG_pointer_type ]
!248 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !249, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!249 = metadata !{metadata !226}
!250 = metadata !{i32 790531, metadata !212, metadata !"md.buf", null, i32 298, metadata !251, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!251 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !252} ; [ DW_TAG_pointer_type ]
!252 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 1024, i64 64, i32 0, i32 0, null, metadata !253, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!253 = metadata !{metadata !229}
!254 = metadata !{i32 300, i32 1, metadata !255, null}
!255 = metadata !{i32 786443, metadata !213, i32 299, i32 1, metadata !137, i32 15} ; [ DW_TAG_lexical_block ]
!256 = metadata !{i32 301, i32 1, metadata !255, null}
!257 = metadata !{i32 302, i32 1, metadata !255, null}
!258 = metadata !{i32 303, i32 1, metadata !255, null}
!259 = metadata !{i32 304, i32 1, metadata !255, null}
!260 = metadata !{i32 305, i32 1, metadata !255, null}
!261 = metadata !{i32 306, i32 1, metadata !255, null}
!262 = metadata !{i32 786688, metadata !255, metadata !"temp_buf", metadata !137, i32 311, metadata !230, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!263 = metadata !{i32 311, i32 19, metadata !255, null}
!264 = metadata !{i32 315, i32 5, metadata !255, null}
!265 = metadata !{i32 318, i32 5, metadata !255, null}
!266 = metadata !{i32 319, i32 9, metadata !267, null}
!267 = metadata !{i32 786443, metadata !255, i32 318, i32 23, metadata !137, i32 17} ; [ DW_TAG_lexical_block ]
!268 = metadata !{i32 320, i32 23, metadata !269, null}
!269 = metadata !{i32 786443, metadata !267, i32 319, i32 46, metadata !137, i32 18} ; [ DW_TAG_lexical_block ]
!270 = metadata !{i32 323, i32 12, metadata !269, null}
!271 = metadata !{i32 324, i32 12, metadata !269, null}
!272 = metadata !{i32 325, i32 12, metadata !269, null}
!273 = metadata !{i32 786688, metadata !255, metadata !"inlen", metadata !137, i32 309, metadata !227, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!274 = metadata !{i32 326, i32 9, metadata !269, null}
!275 = metadata !{i32 327, i32 12, metadata !276, null}
!276 = metadata !{i32 786443, metadata !267, i32 326, i32 16, metadata !137, i32 20} ; [ DW_TAG_lexical_block ]
!277 = metadata !{i32 786688, metadata !255, metadata !"n", metadata !137, i32 307, metadata !227, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!278 = metadata !{i32 329, i32 17, metadata !279, null}
!279 = metadata !{i32 786443, metadata !276, i32 329, i32 12, metadata !137, i32 21} ; [ DW_TAG_lexical_block ]
!280 = metadata !{i32 330, i32 13, metadata !281, null}
!281 = metadata !{i32 786443, metadata !279, i32 329, i32 36, metadata !137, i32 22} ; [ DW_TAG_lexical_block ]
!282 = metadata !{i32 329, i32 31, metadata !279, null}
!283 = metadata !{i32 786688, metadata !255, metadata !"i", metadata !137, i32 308, metadata !227, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!284 = metadata !{i32 334, i32 12, metadata !276, null}
!285 = metadata !{i32 335, i32 12, metadata !276, null}
!286 = metadata !{i32 336, i32 12, metadata !276, null}
!287 = metadata !{i32 337, i32 4, metadata !276, null}
!288 = metadata !{i32 338, i32 9, metadata !289, null}
!289 = metadata !{i32 786443, metadata !290, i32 338, i32 5, metadata !137, i32 24} ; [ DW_TAG_lexical_block ]
!290 = metadata !{i32 786443, metadata !276, i32 337, i32 27, metadata !137, i32 23} ; [ DW_TAG_lexical_block ]
!291 = metadata !{i32 339, i32 6, metadata !292, null}
!292 = metadata !{i32 786443, metadata !289, i32 338, i32 52, metadata !137, i32 25} ; [ DW_TAG_lexical_block ]
!293 = metadata !{i32 338, i32 39, metadata !289, null}
!294 = metadata !{i32 786688, metadata !255, metadata !"temp_index", metadata !137, i32 310, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!295 = metadata !{i32 341, i32 16, metadata !290, null}
!296 = metadata !{i32 344, i32 9, metadata !297, null}
!297 = metadata !{i32 786443, metadata !290, i32 344, i32 5, metadata !137, i32 27} ; [ DW_TAG_lexical_block ]
!298 = metadata !{i32 345, i32 6, metadata !299, null}
!299 = metadata !{i32 786443, metadata !297, i32 344, i32 52, metadata !137, i32 28} ; [ DW_TAG_lexical_block ]
!300 = metadata !{i32 344, i32 39, metadata !297, null}
!301 = metadata !{i32 347, i32 5, metadata !290, null}
!302 = metadata !{i32 349, i32 4, metadata !290, null}
!303 = metadata !{i32 786689, metadata !213, metadata !"in", null, i32 298, metadata !304, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!304 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 0, i64 0, i32 0, i32 0, metadata !235, metadata !305, i32 0, i32 0} ; [ DW_TAG_array_type ]
!305 = metadata !{metadata !306}
!306 = metadata !{i32 786465, i64 0, i64 63}      ; [ DW_TAG_subrange_type ]
!307 = metadata !{i32 298, i32 63, metadata !213, null}
!308 = metadata !{i32 790533, metadata !309, metadata !"md.length", null, i32 240, metadata !238, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!309 = metadata !{i32 786689, metadata !310, metadata !"md", metadata !137, i32 16777456, metadata !217, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!310 = metadata !{i32 786478, i32 0, metadata !137, metadata !"sha512_update_128", metadata !"sha512_update_128", metadata !"", metadata !137, i32 240, metadata !214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 241} ; [ DW_TAG_subprogram ]
!311 = metadata !{i32 240, i32 40, metadata !310, null}
!312 = metadata !{i32 790531, metadata !309, metadata !"md.state", null, i32 240, metadata !243, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!313 = metadata !{i32 790533, metadata !309, metadata !"md.curlen", null, i32 240, metadata !247, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!314 = metadata !{i32 790531, metadata !309, metadata !"md.buf", null, i32 240, metadata !251, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!315 = metadata !{i32 786689, metadata !310, metadata !"in", null, i32 240, metadata !316, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!316 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 0, i64 0, i32 0, i32 0, metadata !235, metadata !232, i32 0, i32 0} ; [ DW_TAG_array_type ]
!317 = metadata !{i32 240, i32 64, metadata !310, null}
!318 = metadata !{i32 242, i32 1, metadata !319, null}
!319 = metadata !{i32 786443, metadata !310, i32 241, i32 1, metadata !137, i32 1} ; [ DW_TAG_lexical_block ]
!320 = metadata !{i32 243, i32 1, metadata !319, null}
!321 = metadata !{i32 244, i32 1, metadata !319, null}
!322 = metadata !{i32 245, i32 1, metadata !319, null}
!323 = metadata !{i32 246, i32 1, metadata !319, null}
!324 = metadata !{i32 247, i32 1, metadata !319, null}
!325 = metadata !{i32 248, i32 1, metadata !319, null}
!326 = metadata !{i32 249, i32 1, metadata !319, null}
!327 = metadata !{i32 786688, metadata !319, metadata !"temp_buf", metadata !137, i32 255, metadata !230, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!328 = metadata !{i32 255, i32 19, metadata !319, null}
!329 = metadata !{i32 258, i32 5, metadata !319, null}
!330 = metadata !{i32 261, i32 5, metadata !319, null}
!331 = metadata !{i32 262, i32 9, metadata !332, null}
!332 = metadata !{i32 786443, metadata !319, i32 261, i32 23, metadata !137, i32 3} ; [ DW_TAG_lexical_block ]
!333 = metadata !{i32 263, i32 23, metadata !334, null}
!334 = metadata !{i32 786443, metadata !332, i32 262, i32 46, metadata !137, i32 4} ; [ DW_TAG_lexical_block ]
!335 = metadata !{i32 266, i32 12, metadata !334, null}
!336 = metadata !{i32 267, i32 12, metadata !334, null}
!337 = metadata !{i32 268, i32 12, metadata !334, null}
!338 = metadata !{i32 786688, metadata !319, metadata !"inlen", metadata !137, i32 252, metadata !227, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!339 = metadata !{i32 269, i32 9, metadata !334, null}
!340 = metadata !{i32 270, i32 12, metadata !341, null}
!341 = metadata !{i32 786443, metadata !332, i32 269, i32 16, metadata !137, i32 6} ; [ DW_TAG_lexical_block ]
!342 = metadata !{i32 786688, metadata !319, metadata !"n", metadata !137, i32 250, metadata !227, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!343 = metadata !{i32 272, i32 17, metadata !344, null}
!344 = metadata !{i32 786443, metadata !341, i32 272, i32 12, metadata !137, i32 7} ; [ DW_TAG_lexical_block ]
!345 = metadata !{i32 273, i32 13, metadata !346, null}
!346 = metadata !{i32 786443, metadata !344, i32 272, i32 36, metadata !137, i32 8} ; [ DW_TAG_lexical_block ]
!347 = metadata !{i32 272, i32 31, metadata !344, null}
!348 = metadata !{i32 786688, metadata !319, metadata !"i", metadata !137, i32 251, metadata !227, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!349 = metadata !{i32 277, i32 12, metadata !341, null}
!350 = metadata !{i32 278, i32 12, metadata !341, null}
!351 = metadata !{i32 279, i32 12, metadata !341, null}
!352 = metadata !{i32 280, i32 12, metadata !341, null}
!353 = metadata !{i32 281, i32 17, metadata !354, null}
!354 = metadata !{i32 786443, metadata !355, i32 281, i32 13, metadata !137, i32 10} ; [ DW_TAG_lexical_block ]
!355 = metadata !{i32 786443, metadata !341, i32 280, i32 35, metadata !137, i32 9} ; [ DW_TAG_lexical_block ]
!356 = metadata !{i32 282, i32 6, metadata !357, null}
!357 = metadata !{i32 786443, metadata !354, i32 281, i32 60, metadata !137, i32 11} ; [ DW_TAG_lexical_block ]
!358 = metadata !{i32 281, i32 47, metadata !354, null}
!359 = metadata !{i32 786688, metadata !319, metadata !"temp_index", metadata !137, i32 253, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!360 = metadata !{i32 284, i32 26, metadata !355, null}
!361 = metadata !{i32 287, i32 20, metadata !362, null}
!362 = metadata !{i32 786443, metadata !355, i32 287, i32 16, metadata !137, i32 13} ; [ DW_TAG_lexical_block ]
!363 = metadata !{i32 288, i32 6, metadata !364, null}
!364 = metadata !{i32 786443, metadata !362, i32 287, i32 63, metadata !137, i32 14} ; [ DW_TAG_lexical_block ]
!365 = metadata !{i32 287, i32 50, metadata !362, null}
!366 = metadata !{i32 290, i32 15, metadata !355, null}
!367 = metadata !{i32 292, i32 12, metadata !355, null}
!368 = metadata !{i32 790531, metadata !369, metadata !"md.state", null, i32 216, metadata !243, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!369 = metadata !{i32 786689, metadata !370, metadata !"md", metadata !137, i32 16777432, metadata !217, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!370 = metadata !{i32 786478, i32 0, metadata !137, metadata !"sha512_init", metadata !"sha512_init", metadata !"", metadata !137, i32 216, metadata !371, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 216} ; [ DW_TAG_subprogram ]
!371 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !372, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!372 = metadata !{metadata !216, metadata !217}
!373 = metadata !{i32 216, i32 34, metadata !370, null}
!374 = metadata !{i32 221, i32 5, metadata !375, null}
!375 = metadata !{i32 786443, metadata !370, i32 216, i32 38, metadata !137, i32 0} ; [ DW_TAG_lexical_block ]
!376 = metadata !{i32 222, i32 5, metadata !375, null}
!377 = metadata !{i32 223, i32 5, metadata !375, null}
!378 = metadata !{i32 224, i32 5, metadata !375, null}
!379 = metadata !{i32 225, i32 5, metadata !375, null}
!380 = metadata !{i32 226, i32 5, metadata !375, null}
!381 = metadata !{i32 227, i32 5, metadata !375, null}
!382 = metadata !{i32 228, i32 5, metadata !375, null}
!383 = metadata !{i32 790533, metadata !384, metadata !"md.length", null, i32 361, metadata !238, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!384 = metadata !{i32 786689, metadata !385, metadata !"md", metadata !137, i32 16777577, metadata !217, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!385 = metadata !{i32 786478, i32 0, metadata !137, metadata !"sha512_final", metadata !"sha512_final", metadata !"", metadata !137, i32 361, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 362} ; [ DW_TAG_subprogram ]
!386 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !387, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!387 = metadata !{metadata !216, metadata !217, metadata !388}
!388 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !231} ; [ DW_TAG_pointer_type ]
!389 = metadata !{i32 361, i32 35, metadata !385, null}
!390 = metadata !{i32 790531, metadata !384, metadata !"md.state", null, i32 361, metadata !243, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!391 = metadata !{i32 790533, metadata !384, metadata !"md.curlen", null, i32 361, metadata !247, i32 0, i32 0} ; [ DW_TAG_arg_variable_field_ro ]
!392 = metadata !{i32 790531, metadata !384, metadata !"md.buf", null, i32 361, metadata !251, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!393 = metadata !{i32 786689, metadata !385, metadata !"out", null, i32 361, metadata !394, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!394 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 512, i64 8, i32 0, i32 0, metadata !231, metadata !305, i32 0, i32 0} ; [ DW_TAG_array_type ]
!395 = metadata !{i32 361, i32 54, metadata !385, null}
!396 = metadata !{i32 363, i32 1, metadata !397, null}
!397 = metadata !{i32 786443, metadata !385, i32 362, i32 1, metadata !137, i32 29} ; [ DW_TAG_lexical_block ]
!398 = metadata !{i32 364, i32 1, metadata !397, null}
!399 = metadata !{i32 365, i32 1, metadata !397, null}
!400 = metadata !{i32 366, i32 1, metadata !397, null}
!401 = metadata !{i32 367, i32 1, metadata !397, null}
!402 = metadata !{i32 368, i32 1, metadata !397, null}
!403 = metadata !{i32 369, i32 1, metadata !397, null}
!404 = metadata !{i32 370, i32 1, metadata !397, null}
!405 = metadata !{i32 786688, metadata !397, metadata !"temp_buf", metadata !137, i32 373, metadata !230, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!406 = metadata !{i32 373, i32 16, metadata !397, null}
!407 = metadata !{i32 378, i32 5, metadata !397, null}
!408 = metadata !{i32 383, i32 5, metadata !397, null}
!409 = metadata !{i32 386, i32 5, metadata !397, null}
!410 = metadata !{i32 392, i32 2, metadata !397, null}
!411 = metadata !{i32 410, i32 2, metadata !397, null}
!412 = metadata !{i32 393, i32 3, metadata !413, null}
!413 = metadata !{i32 786443, metadata !397, i32 392, i32 24, metadata !137, i32 31} ; [ DW_TAG_lexical_block ]
!414 = metadata !{i32 396, i32 7, metadata !415, null}
!415 = metadata !{i32 786443, metadata !413, i32 396, i32 3, metadata !137, i32 33} ; [ DW_TAG_lexical_block ]
!416 = metadata !{i32 394, i32 4, metadata !417, null}
!417 = metadata !{i32 786443, metadata !413, i32 393, i32 28, metadata !137, i32 32} ; [ DW_TAG_lexical_block ]
!418 = metadata !{i32 395, i32 3, metadata !417, null}
!419 = metadata !{i32 397, i32 4, metadata !420, null}
!420 = metadata !{i32 786443, metadata !415, i32 396, i32 50, metadata !137, i32 34} ; [ DW_TAG_lexical_block ]
!421 = metadata !{i32 396, i32 37, metadata !415, null}
!422 = metadata !{i32 786688, metadata !397, metadata !"temp_index", metadata !137, i32 372, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!423 = metadata !{i32 399, i32 3, metadata !413, null}
!424 = metadata !{i32 400, i32 7, metadata !425, null}
!425 = metadata !{i32 786443, metadata !413, i32 400, i32 3, metadata !137, i32 35} ; [ DW_TAG_lexical_block ]
!426 = metadata !{i32 401, i32 4, metadata !427, null}
!427 = metadata !{i32 786443, metadata !425, i32 400, i32 50, metadata !137, i32 36} ; [ DW_TAG_lexical_block ]
!428 = metadata !{i32 400, i32 37, metadata !425, null}
!429 = metadata !{i32 411, i32 3, metadata !430, null}
!430 = metadata !{i32 786443, metadata !397, i32 410, i32 27, metadata !137, i32 37} ; [ DW_TAG_lexical_block ]
!431 = metadata !{i32 412, i32 2, metadata !430, null}
!432 = metadata !{i32 415, i32 4, metadata !433, null}
!433 = metadata !{i32 786443, metadata !397, i32 415, i32 2, metadata !137, i32 38} ; [ DW_TAG_lexical_block ]
!434 = metadata !{i32 415, i32 64, metadata !433, null}
!435 = metadata !{i32 415, i32 124, metadata !433, null}
!436 = metadata !{i32 415, i32 184, metadata !433, null}
!437 = metadata !{i32 415, i32 244, metadata !433, null}
!438 = metadata !{i32 415, i32 0, metadata !433, null}
!439 = metadata !{i32 416, i32 6, metadata !440, null}
!440 = metadata !{i32 786443, metadata !397, i32 416, i32 2, metadata !137, i32 39} ; [ DW_TAG_lexical_block ]
!441 = metadata !{i32 417, i32 3, metadata !442, null}
!442 = metadata !{i32 786443, metadata !440, i32 416, i32 49, metadata !137, i32 40} ; [ DW_TAG_lexical_block ]
!443 = metadata !{i32 416, i32 36, metadata !440, null}
!444 = metadata !{i32 419, i32 2, metadata !397, null}
!445 = metadata !{i32 420, i32 6, metadata !446, null}
!446 = metadata !{i32 786443, metadata !397, i32 420, i32 2, metadata !137, i32 41} ; [ DW_TAG_lexical_block ]
!447 = metadata !{i32 425, i32 7, metadata !448, null}
!448 = metadata !{i32 786443, metadata !397, i32 425, i32 2, metadata !137, i32 43} ; [ DW_TAG_lexical_block ]
!449 = metadata !{i32 421, i32 3, metadata !450, null}
!450 = metadata !{i32 786443, metadata !446, i32 420, i32 49, metadata !137, i32 42} ; [ DW_TAG_lexical_block ]
!451 = metadata !{i32 420, i32 36, metadata !446, null}
!452 = metadata !{i32 426, i32 5, metadata !453, null}
!453 = metadata !{i32 786443, metadata !454, i32 426, i32 3, metadata !137, i32 45} ; [ DW_TAG_lexical_block ]
!454 = metadata !{i32 786443, metadata !448, i32 425, i32 26, metadata !137, i32 44} ; [ DW_TAG_lexical_block ]
!455 = metadata !{i32 426, i32 65, metadata !453, null}
!456 = metadata !{i32 426, i32 125, metadata !453, null}
!457 = metadata !{i32 426, i32 185, metadata !453, null}
!458 = metadata !{i32 426, i32 245, metadata !453, null}
!459 = metadata !{i32 426, i32 0, metadata !453, null}
!460 = metadata !{i32 425, i32 21, metadata !448, null}
!461 = metadata !{i32 786688, metadata !397, metadata !"i", metadata !137, i32 371, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!462 = metadata !{i32 790531, metadata !463, metadata !"md.state", null, i32 153, metadata !243, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!463 = metadata !{i32 786689, metadata !464, metadata !"md", metadata !137, i32 16777369, metadata !217, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!464 = metadata !{i32 786478, i32 0, metadata !137, metadata !"sha512_compress_32", metadata !"sha512_compress_32", metadata !"", metadata !137, i32 153, metadata !386, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 154} ; [ DW_TAG_subprogram ]
!465 = metadata !{i32 153, i32 47, metadata !464, null}
!466 = metadata !{i32 786689, metadata !464, metadata !"buf", null, i32 153, metadata !394, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!467 = metadata !{i32 153, i32 65, metadata !464, null}
!468 = metadata !{i32 155, i32 1, metadata !469, null}
!469 = metadata !{i32 786443, metadata !464, i32 154, i32 1, metadata !137, i32 46} ; [ DW_TAG_lexical_block ]
!470 = metadata !{i32 156, i32 1, metadata !469, null}
!471 = metadata !{i32 157, i32 1, metadata !469, null}
!472 = metadata !{i32 158, i32 1, metadata !469, null}
!473 = metadata !{i32 159, i32 1, metadata !469, null}
!474 = metadata !{i32 160, i32 1, metadata !469, null}
!475 = metadata !{i32 161, i32 1, metadata !469, null}
!476 = metadata !{i32 786688, metadata !469, metadata !"S", metadata !137, i32 162, metadata !223, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!477 = metadata !{i32 162, i32 11, metadata !469, null}
!478 = metadata !{i32 786688, metadata !469, metadata !"W", metadata !137, i32 162, metadata !479, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!479 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 5120, i64 64, i32 0, i32 0, metadata !140, metadata !143, i32 0, i32 0} ; [ DW_TAG_array_type ]
!480 = metadata !{i32 162, i32 17, metadata !469, null}
!481 = metadata !{i32 166, i32 10, metadata !482, null}
!482 = metadata !{i32 786443, metadata !469, i32 166, i32 5, metadata !137, i32 47} ; [ DW_TAG_lexical_block ]
!483 = metadata !{i32 171, i32 10, metadata !484, null}
!484 = metadata !{i32 786443, metadata !469, i32 171, i32 5, metadata !137, i32 49} ; [ DW_TAG_lexical_block ]
!485 = metadata !{i32 167, i32 9, metadata !486, null}
!486 = metadata !{i32 786443, metadata !482, i32 166, i32 29, metadata !137, i32 48} ; [ DW_TAG_lexical_block ]
!487 = metadata !{i32 166, i32 24, metadata !482, null}
!488 = metadata !{i32 786688, metadata !469, metadata !"i", metadata !137, i32 163, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!489 = metadata !{i32 176, i32 10, metadata !490, null}
!490 = metadata !{i32 786443, metadata !469, i32 176, i32 5, metadata !137, i32 52} ; [ DW_TAG_lexical_block ]
!491 = metadata !{i32 172, i32 11, metadata !492, null}
!492 = metadata !{i32 786443, metadata !493, i32 172, i32 9, metadata !137, i32 51} ; [ DW_TAG_lexical_block ]
!493 = metadata !{i32 786443, metadata !484, i32 171, i32 30, metadata !137, i32 50} ; [ DW_TAG_lexical_block ]
!494 = metadata !{i32 171, i32 25, metadata !484, null}
!495 = metadata !{i32 188, i32 8, metadata !496, null}
!496 = metadata !{i32 786443, metadata !497, i32 187, i32 33, metadata !137, i32 55} ; [ DW_TAG_lexical_block ]
!497 = metadata !{i32 786443, metadata !469, i32 187, i32 5, metadata !137, i32 54} ; [ DW_TAG_lexical_block ]
!498 = metadata !{i32 188, i32 0, metadata !496, null}
!499 = metadata !{i32 187, i32 10, metadata !497, null}
!500 = metadata !{i32 177, i32 9, metadata !501, null}
!501 = metadata !{i32 786443, metadata !490, i32 176, i32 31, metadata !137, i32 53} ; [ DW_TAG_lexical_block ]
!502 = metadata !{i32 176, i32 26, metadata !490, null}
!503 = metadata !{i32 203, i32 9, metadata !504, null}
!504 = metadata !{i32 786443, metadata !469, i32 203, i32 4, metadata !137, i32 56} ; [ DW_TAG_lexical_block ]
!505 = metadata !{i32 786688, metadata !469, metadata !"t0", metadata !137, i32 162, metadata !140, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!506 = metadata !{i32 189, i32 8, metadata !496, null}
!507 = metadata !{i32 189, i32 0, metadata !496, null}
!508 = metadata !{i32 190, i32 8, metadata !496, null}
!509 = metadata !{i32 190, i32 0, metadata !496, null}
!510 = metadata !{i32 191, i32 8, metadata !496, null}
!511 = metadata !{i32 191, i32 0, metadata !496, null}
!512 = metadata !{i32 192, i32 8, metadata !496, null}
!513 = metadata !{i32 192, i32 0, metadata !496, null}
!514 = metadata !{i32 193, i32 8, metadata !496, null}
!515 = metadata !{i32 193, i32 0, metadata !496, null}
!516 = metadata !{i32 194, i32 8, metadata !496, null}
!517 = metadata !{i32 194, i32 0, metadata !496, null}
!518 = metadata !{i32 195, i32 8, metadata !496, null}
!519 = metadata !{i32 195, i32 0, metadata !496, null}
!520 = metadata !{i32 187, i32 25, metadata !497, null}
!521 = metadata !{i32 204, i32 9, metadata !522, null}
!522 = metadata !{i32 786443, metadata !504, i32 203, i32 28, metadata !137, i32 57} ; [ DW_TAG_lexical_block ]
!523 = metadata !{i32 203, i32 23, metadata !504, null}
!524 = metadata !{i32 790531, metadata !525, metadata !"md.state", null, i32 96, metadata !243, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!525 = metadata !{i32 786689, metadata !526, metadata !"md", metadata !137, i32 16777312, metadata !217, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!526 = metadata !{i32 786478, i32 0, metadata !137, metadata !"sha512_compress_128", metadata !"sha512_compress_128", metadata !"", metadata !137, i32 96, metadata !386, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 97} ; [ DW_TAG_subprogram ]
!527 = metadata !{i32 96, i32 48, metadata !526, null}
!528 = metadata !{i32 98, i32 1, metadata !529, null}
!529 = metadata !{i32 786443, metadata !526, i32 97, i32 1, metadata !137, i32 58} ; [ DW_TAG_lexical_block ]
!530 = metadata !{i32 99, i32 1, metadata !529, null}
!531 = metadata !{i32 100, i32 1, metadata !529, null}
!532 = metadata !{i32 101, i32 1, metadata !529, null}
!533 = metadata !{i32 102, i32 1, metadata !529, null}
!534 = metadata !{i32 103, i32 1, metadata !529, null}
!535 = metadata !{i32 104, i32 1, metadata !529, null}
!536 = metadata !{i32 786688, metadata !529, metadata !"S", metadata !137, i32 105, metadata !223, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!537 = metadata !{i32 105, i32 11, metadata !529, null}
!538 = metadata !{i32 786688, metadata !529, metadata !"W", metadata !137, i32 105, metadata !479, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!539 = metadata !{i32 105, i32 17, metadata !529, null}
!540 = metadata !{i32 109, i32 10, metadata !541, null}
!541 = metadata !{i32 786443, metadata !529, i32 109, i32 5, metadata !137, i32 59} ; [ DW_TAG_lexical_block ]
!542 = metadata !{i32 114, i32 10, metadata !543, null}
!543 = metadata !{i32 786443, metadata !529, i32 114, i32 5, metadata !137, i32 61} ; [ DW_TAG_lexical_block ]
!544 = metadata !{i32 110, i32 9, metadata !545, null}
!545 = metadata !{i32 786443, metadata !541, i32 109, i32 29, metadata !137, i32 60} ; [ DW_TAG_lexical_block ]
!546 = metadata !{i32 109, i32 24, metadata !541, null}
!547 = metadata !{i32 786688, metadata !529, metadata !"i", metadata !137, i32 106, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!548 = metadata !{i32 119, i32 10, metadata !549, null}
!549 = metadata !{i32 786443, metadata !529, i32 119, i32 5, metadata !137, i32 64} ; [ DW_TAG_lexical_block ]
!550 = metadata !{i32 115, i32 11, metadata !551, null}
!551 = metadata !{i32 786443, metadata !552, i32 115, i32 9, metadata !137, i32 63} ; [ DW_TAG_lexical_block ]
!552 = metadata !{i32 786443, metadata !543, i32 114, i32 30, metadata !137, i32 62} ; [ DW_TAG_lexical_block ]
!553 = metadata !{i32 114, i32 25, metadata !543, null}
!554 = metadata !{i32 131, i32 8, metadata !555, null}
!555 = metadata !{i32 786443, metadata !556, i32 130, i32 33, metadata !137, i32 67} ; [ DW_TAG_lexical_block ]
!556 = metadata !{i32 786443, metadata !529, i32 130, i32 5, metadata !137, i32 66} ; [ DW_TAG_lexical_block ]
!557 = metadata !{i32 131, i32 0, metadata !555, null}
!558 = metadata !{i32 130, i32 10, metadata !556, null}
!559 = metadata !{i32 120, i32 9, metadata !560, null}
!560 = metadata !{i32 786443, metadata !549, i32 119, i32 31, metadata !137, i32 65} ; [ DW_TAG_lexical_block ]
!561 = metadata !{i32 119, i32 26, metadata !549, null}
!562 = metadata !{i32 146, i32 9, metadata !563, null}
!563 = metadata !{i32 786443, metadata !529, i32 146, i32 4, metadata !137, i32 68} ; [ DW_TAG_lexical_block ]
!564 = metadata !{i32 786688, metadata !529, metadata !"t0", metadata !137, i32 105, metadata !140, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!565 = metadata !{i32 132, i32 8, metadata !555, null}
!566 = metadata !{i32 132, i32 0, metadata !555, null}
!567 = metadata !{i32 133, i32 8, metadata !555, null}
!568 = metadata !{i32 133, i32 0, metadata !555, null}
!569 = metadata !{i32 134, i32 8, metadata !555, null}
!570 = metadata !{i32 134, i32 0, metadata !555, null}
!571 = metadata !{i32 135, i32 8, metadata !555, null}
!572 = metadata !{i32 135, i32 0, metadata !555, null}
!573 = metadata !{i32 136, i32 8, metadata !555, null}
!574 = metadata !{i32 136, i32 0, metadata !555, null}
!575 = metadata !{i32 137, i32 8, metadata !555, null}
!576 = metadata !{i32 137, i32 0, metadata !555, null}
!577 = metadata !{i32 138, i32 8, metadata !555, null}
!578 = metadata !{i32 138, i32 0, metadata !555, null}
!579 = metadata !{i32 130, i32 25, metadata !556, null}
!580 = metadata !{i32 147, i32 9, metadata !581, null}
!581 = metadata !{i32 786443, metadata !563, i32 146, i32 28, metadata !137, i32 69} ; [ DW_TAG_lexical_block ]
!582 = metadata !{i32 146, i32 23, metadata !563, null}
!583 = metadata !{i32 786689, metadata !526, metadata !"buf", null, i32 96, metadata !230, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!584 = metadata !{i32 96, i32 66, metadata !526, null}
!585 = metadata !{i32 790531, metadata !586, metadata !"r.v", null, i32 20, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!586 = metadata !{i32 786689, metadata !587, metadata !"r", metadata !149, i32 16777236, metadata !590, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!587 = metadata !{i32 786478, i32 0, metadata !149, metadata !"reduce_add_sub", metadata !"reduce_add_sub", metadata !"", metadata !149, i32 20, metadata !588, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 21} ; [ DW_TAG_subprogram ]
!588 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !589, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!589 = metadata !{null, metadata !590}
!590 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !591} ; [ DW_TAG_pointer_type ]
!591 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !149, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !592} ; [ DW_TAG_typedef ]
!592 = metadata !{i32 786451, null, metadata !"", metadata !153, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !593, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!593 = metadata !{metadata !594}
!594 = metadata !{i32 786445, metadata !592, metadata !"v", metadata !153, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !595} ; [ DW_TAG_member ]
!595 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1024, i64 32, i32 0, i32 0, metadata !152, metadata !159, i32 0, i32 0} ; [ DW_TAG_array_type ]
!596 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !597} ; [ DW_TAG_pointer_type ]
!597 = metadata !{i32 786452, null, metadata !"", metadata !153, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !593, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!598 = metadata !{i32 20, i32 61, metadata !587, null}
!599 = metadata !{i32 786688, metadata !600, metadata !"t", metadata !149, i32 26, metadata !601, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!600 = metadata !{i32 786443, metadata !587, i32 21, i32 1, metadata !149, i32 46} ; [ DW_TAG_lexical_block ]
!601 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 256, i64 8, i32 0, i32 0, metadata !231, metadata !159, i32 0, i32 0} ; [ DW_TAG_array_type ]
!602 = metadata !{i32 26, i32 17, metadata !600, null}
!603 = metadata !{i32 28, i32 7, metadata !604, null}
!604 = metadata !{i32 786443, metadata !600, i32 28, i32 3, metadata !149, i32 47} ; [ DW_TAG_lexical_block ]
!605 = metadata !{i32 35, i32 3, metadata !600, null}
!606 = metadata !{i32 786688, metadata !600, metadata !"mask", metadata !149, i32 24, metadata !152, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!607 = metadata !{i32 36, i32 7, metadata !608, null}
!608 = metadata !{i32 786443, metadata !600, i32 36, i32 3, metadata !149, i32 49} ; [ DW_TAG_lexical_block ]
!609 = metadata !{i32 30, i32 5, metadata !610, null}
!610 = metadata !{i32 786443, metadata !604, i32 29, i32 3, metadata !149, i32 48} ; [ DW_TAG_lexical_block ]
!611 = metadata !{i32 786688, metadata !600, metadata !"pb", metadata !149, i32 22, metadata !152, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!612 = metadata !{i32 31, i32 9, metadata !610, null}
!613 = metadata !{i32 786689, metadata !614, metadata !"a", metadata !149, i32 16777227, metadata !152, i32 0, metadata !612} ; [ DW_TAG_arg_variable ]
!614 = metadata !{i32 786478, i32 0, metadata !149, metadata !"lt", metadata !"lt", metadata !"", metadata !149, i32 11, metadata !615, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 12} ; [ DW_TAG_subprogram ]
!615 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !616, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!616 = metadata !{metadata !152, metadata !152, metadata !152}
!617 = metadata !{i32 11, i32 39, metadata !614, metadata !612}
!618 = metadata !{i32 786689, metadata !614, metadata !"b", metadata !149, i32 33554443, metadata !152, i32 0, metadata !612} ; [ DW_TAG_arg_variable ]
!619 = metadata !{i32 11, i32 55, metadata !614, metadata !612}
!620 = metadata !{i32 786688, metadata !621, metadata !"x", metadata !149, i32 13, metadata !154, i32 0, metadata !612} ; [ DW_TAG_auto_variable ]
!621 = metadata !{i32 786443, metadata !614, i32 12, i32 1, metadata !149, i32 50} ; [ DW_TAG_lexical_block ]
!622 = metadata !{i32 13, i32 21, metadata !621, metadata !612}
!623 = metadata !{i32 14, i32 3, metadata !621, metadata !612}
!624 = metadata !{i32 15, i32 3, metadata !621, metadata !612}
!625 = metadata !{i32 786688, metadata !600, metadata !"b", metadata !149, i32 23, metadata !152, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!626 = metadata !{i32 32, i32 5, metadata !610, null}
!627 = metadata !{i32 33, i32 5, metadata !610, null}
!628 = metadata !{i32 28, i32 16, metadata !604, null}
!629 = metadata !{i32 786688, metadata !600, metadata !"i", metadata !149, i32 25, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!630 = metadata !{i32 37, i32 5, metadata !608, null}
!631 = metadata !{i32 36, i32 16, metadata !608, null}
!632 = metadata !{i32 38, i32 1, metadata !600, null}
!633 = metadata !{i32 790531, metadata !634, metadata !"r.x.v", null, i32 297, metadata !645, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!634 = metadata !{i32 786689, metadata !635, metadata !"r", metadata !167, i32 16777513, metadata !638, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!635 = metadata !{i32 786478, i32 0, metadata !167, metadata !"crypto_sign_ed25519_ref_scalarmult_base", metadata !"crypto_sign_ed25519_ref_scalarmult_base", metadata !"", metadata !167, i32 297, metadata !636, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 298} ; [ DW_TAG_subprogram ]
!636 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !637, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!637 = metadata !{null, metadata !638, metadata !639}
!638 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !190} ; [ DW_TAG_pointer_type ]
!639 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !640} ; [ DW_TAG_pointer_type ]
!640 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !641} ; [ DW_TAG_const_type ]
!641 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !167, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !642} ; [ DW_TAG_typedef ]
!642 = metadata !{i32 786451, null, metadata !"", metadata !153, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !643, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!643 = metadata !{metadata !644}
!644 = metadata !{i32 786445, metadata !642, metadata !"v", metadata !153, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !173} ; [ DW_TAG_member ]
!645 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !176} ; [ DW_TAG_pointer_type ]
!646 = metadata !{i32 297, i32 79, metadata !635, null}
!647 = metadata !{i32 790531, metadata !634, metadata !"r.y.v", null, i32 297, metadata !645, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!648 = metadata !{i32 790531, metadata !634, metadata !"r.z.v", null, i32 297, metadata !645, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!649 = metadata !{i32 790531, metadata !634, metadata !"r.t.v", null, i32 297, metadata !645, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!650 = metadata !{i32 790531, metadata !651, metadata !"s.v", null, i32 297, metadata !652, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!651 = metadata !{i32 786689, metadata !635, metadata !"s", metadata !167, i32 33554729, metadata !639, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!652 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !653} ; [ DW_TAG_pointer_type ]
!653 = metadata !{i32 786452, null, metadata !"", metadata !153, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !643, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!654 = metadata !{i32 297, i32 121, metadata !635, null}
!655 = metadata !{i32 790529, metadata !656, metadata !"t.x.v", null, i32 301, metadata !181, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!656 = metadata !{i32 786688, metadata !657, metadata !"t", metadata !167, i32 301, metadata !203, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!657 = metadata !{i32 786443, metadata !635, i32 298, i32 1, metadata !167, i32 7} ; [ DW_TAG_lexical_block ]
!658 = metadata !{i32 301, i32 15, metadata !657, null}
!659 = metadata !{i32 790529, metadata !656, metadata !"t.y.v", null, i32 301, metadata !181, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!660 = metadata !{i32 302, i32 3, metadata !657, null}
!661 = metadata !{i32 790529, metadata !662, metadata !"r_temp.x.v", null, i32 304, metadata !181, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!662 = metadata !{i32 786688, metadata !657, metadata !"r_temp", metadata !167, i32 304, metadata !203, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!663 = metadata !{i32 304, i32 15, metadata !657, null}
!664 = metadata !{i32 790529, metadata !662, metadata !"r_temp.y.v", null, i32 304, metadata !181, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!665 = metadata !{i32 305, i32 3, metadata !657, null}
!666 = metadata !{i32 306, i32 3, metadata !657, null}
!667 = metadata !{i32 308, i32 3, metadata !657, null}
!668 = metadata !{i32 309, i32 3, metadata !657, null}
!669 = metadata !{i32 310, i32 3, metadata !657, null}
!670 = metadata !{i32 790531, metadata !671, metadata !"r.v", null, i32 146, metadata !681, i32 0, metadata !683} ; [ DW_TAG_arg_variable_field ]
!671 = metadata !{i32 786689, metadata !672, metadata !"r", metadata !673, i32 16777362, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!672 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_setone", metadata !"crypto_sign_ed25519_ref_fe25519_setone", metadata !"", metadata !673, i32 146, metadata !674, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 147} ; [ DW_TAG_subprogram ]
!673 = metadata !{i32 786473, metadata !"ed25519_ref/src/fe25519.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!674 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !675, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!675 = metadata !{null, metadata !676}
!676 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !677} ; [ DW_TAG_pointer_type ]
!677 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !673, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !678} ; [ DW_TAG_typedef ]
!678 = metadata !{i32 786451, null, metadata !"", metadata !169, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !679, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!679 = metadata !{metadata !680}
!680 = metadata !{i32 786445, metadata !678, metadata !"v", metadata !169, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !173} ; [ DW_TAG_member ]
!681 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !682} ; [ DW_TAG_pointer_type ]
!682 = metadata !{i32 786452, null, metadata !"", metadata !169, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !679, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!683 = metadata !{i32 314, i32 3, metadata !657, null}
!684 = metadata !{i32 146, i32 78, metadata !672, metadata !683}
!685 = metadata !{i32 149, i32 3, metadata !686, metadata !683}
!686 = metadata !{i32 786443, metadata !672, i32 147, i32 1, metadata !673, i32 14} ; [ DW_TAG_lexical_block ]
!687 = metadata !{i32 150, i32 7, metadata !688, metadata !683}
!688 = metadata !{i32 786443, metadata !686, i32 150, i32 3, metadata !673, i32 15} ; [ DW_TAG_lexical_block ]
!689 = metadata !{i32 150, i32 21, metadata !688, metadata !683}
!690 = metadata !{i32 150, i32 16, metadata !688, metadata !683}
!691 = metadata !{i32 786688, metadata !686, metadata !"i", metadata !673, i32 148, metadata !216, i32 0, metadata !683} ; [ DW_TAG_auto_variable ]
!692 = metadata !{i32 316, i32 7, metadata !693, null}
!693 = metadata !{i32 786443, metadata !657, i32 316, i32 3, metadata !167, i32 8} ; [ DW_TAG_lexical_block ]
!694 = metadata !{i32 318, i32 5, metadata !695, null}
!695 = metadata !{i32 786443, metadata !693, i32 317, i32 3, metadata !167, i32 9} ; [ DW_TAG_lexical_block ]
!696 = metadata !{i32 790531, metadata !697, metadata !"r.x.v", null, i32 74, metadata !645, i32 0, metadata !702} ; [ DW_TAG_arg_variable_field ]
!697 = metadata !{i32 786689, metadata !698, metadata !"r", metadata !167, i32 16777290, metadata !638, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!698 = metadata !{i32 786478, i32 0, metadata !167, metadata !"ge25519_mixadd2", metadata !"ge25519_mixadd2", metadata !"", metadata !167, i32 74, metadata !699, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 75} ; [ DW_TAG_subprogram ]
!699 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !700, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!700 = metadata !{null, metadata !638, metadata !701}
!701 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !202} ; [ DW_TAG_pointer_type ]
!702 = metadata !{i32 319, i32 5, metadata !695, null}
!703 = metadata !{i32 74, i32 62, metadata !698, metadata !702}
!704 = metadata !{i32 790531, metadata !697, metadata !"r.y.v", null, i32 74, metadata !645, i32 0, metadata !702} ; [ DW_TAG_arg_variable_field ]
!705 = metadata !{i32 790531, metadata !697, metadata !"r.z.v", null, i32 74, metadata !645, i32 0, metadata !702} ; [ DW_TAG_arg_variable_field ]
!706 = metadata !{i32 790531, metadata !697, metadata !"r.t.v", null, i32 74, metadata !645, i32 0, metadata !702} ; [ DW_TAG_arg_variable_field ]
!707 = metadata !{i32 790531, metadata !708, metadata !"q.x.v", null, i32 74, metadata !709, i32 0, metadata !702} ; [ DW_TAG_arg_variable_field ]
!708 = metadata !{i32 786689, metadata !698, metadata !"q", metadata !167, i32 33554506, metadata !701, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!709 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_pointer_type ]
!710 = metadata !{i32 74, i32 84, metadata !698, metadata !702}
!711 = metadata !{i32 790531, metadata !708, metadata !"q.y.v", null, i32 74, metadata !709, i32 0, metadata !702} ; [ DW_TAG_arg_variable_field ]
!712 = metadata !{i32 790529, metadata !713, metadata !"a.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!713 = metadata !{i32 786688, metadata !714, metadata !"a", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!714 = metadata !{i32 786443, metadata !698, i32 75, i32 1, metadata !167, i32 10} ; [ DW_TAG_lexical_block ]
!715 = metadata !{i32 76, i32 35, metadata !714, metadata !702}
!716 = metadata !{i32 790529, metadata !717, metadata !"b.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!717 = metadata !{i32 786688, metadata !714, metadata !"b", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!718 = metadata !{i32 76, i32 37, metadata !714, metadata !702}
!719 = metadata !{i32 790529, metadata !720, metadata !"t1.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!720 = metadata !{i32 786688, metadata !714, metadata !"t1", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!721 = metadata !{i32 76, i32 39, metadata !714, metadata !702}
!722 = metadata !{i32 790529, metadata !723, metadata !"t2.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!723 = metadata !{i32 786688, metadata !714, metadata !"t2", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!724 = metadata !{i32 76, i32 42, metadata !714, metadata !702}
!725 = metadata !{i32 790529, metadata !726, metadata !"c.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!726 = metadata !{i32 786688, metadata !714, metadata !"c", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!727 = metadata !{i32 76, i32 45, metadata !714, metadata !702}
!728 = metadata !{i32 790529, metadata !729, metadata !"d.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!729 = metadata !{i32 786688, metadata !714, metadata !"d", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!730 = metadata !{i32 76, i32 47, metadata !714, metadata !702}
!731 = metadata !{i32 790529, metadata !732, metadata !"e.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!732 = metadata !{i32 786688, metadata !714, metadata !"e", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!733 = metadata !{i32 76, i32 49, metadata !714, metadata !702}
!734 = metadata !{i32 790529, metadata !735, metadata !"f.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!735 = metadata !{i32 786688, metadata !714, metadata !"f", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!736 = metadata !{i32 76, i32 51, metadata !714, metadata !702}
!737 = metadata !{i32 790529, metadata !738, metadata !"g.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!738 = metadata !{i32 786688, metadata !714, metadata !"g", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!739 = metadata !{i32 76, i32 53, metadata !714, metadata !702}
!740 = metadata !{i32 790529, metadata !741, metadata !"h.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!741 = metadata !{i32 786688, metadata !714, metadata !"h", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!742 = metadata !{i32 76, i32 55, metadata !714, metadata !702}
!743 = metadata !{i32 790529, metadata !744, metadata !"qt.v", null, i32 76, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!744 = metadata !{i32 786688, metadata !714, metadata !"qt", metadata !167, i32 76, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!745 = metadata !{i32 76, i32 57, metadata !714, metadata !702}
!746 = metadata !{i32 316, i32 16, metadata !693, null}
!747 = metadata !{i32 786688, metadata !657, metadata !"i", metadata !167, i32 300, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!748 = metadata !{i32 321, i32 1, metadata !657, null}
!749 = metadata !{i32 786689, metadata !750, metadata !"r", null, i32 211, metadata !757, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!750 = metadata !{i32 786478, i32 0, metadata !149, metadata !"crypto_sign_ed25519_ref_sc25519_window3", metadata !"crypto_sign_ed25519_ref_sc25519_window3", metadata !"", metadata !149, i32 211, metadata !751, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 212} ; [ DW_TAG_subprogram ]
!751 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !752, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!752 = metadata !{null, metadata !753, metadata !755}
!753 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !754} ; [ DW_TAG_pointer_type ]
!754 = metadata !{i32 786468, null, metadata !"signed char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!755 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !756} ; [ DW_TAG_pointer_type ]
!756 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !591} ; [ DW_TAG_const_type ]
!757 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 680, i64 8, i32 0, i32 0, metadata !754, metadata !758, i32 0, i32 0} ; [ DW_TAG_array_type ]
!758 = metadata !{metadata !759}
!759 = metadata !{i32 786465, i64 0, i64 84}      ; [ DW_TAG_subrange_type ]
!760 = metadata !{i32 211, i32 58, metadata !750, null}
!761 = metadata !{i32 790531, metadata !762, metadata !"s.v", null, i32 211, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!762 = metadata !{i32 786689, metadata !750, metadata !"s", metadata !149, i32 33554643, metadata !755, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!763 = metadata !{i32 211, i32 104, metadata !750, null}
!764 = metadata !{i32 215, i32 7, metadata !765, null}
!765 = metadata !{i32 786443, metadata !766, i32 215, i32 3, metadata !149, i32 34} ; [ DW_TAG_lexical_block ]
!766 = metadata !{i32 786443, metadata !750, i32 212, i32 1, metadata !149, i32 33} ; [ DW_TAG_lexical_block ]
!767 = metadata !{i32 217, i32 5, metadata !768, null}
!768 = metadata !{i32 786443, metadata !765, i32 216, i32 3, metadata !149, i32 35} ; [ DW_TAG_lexical_block ]
!769 = metadata !{i32 218, i32 5, metadata !768, null}
!770 = metadata !{i32 219, i32 5, metadata !768, null}
!771 = metadata !{i32 220, i32 5, metadata !768, null}
!772 = metadata !{i32 221, i32 5, metadata !768, null}
!773 = metadata !{i32 222, i32 5, metadata !768, null}
!774 = metadata !{i32 223, i32 5, metadata !768, null}
!775 = metadata !{i32 224, i32 5, metadata !768, null}
!776 = metadata !{i32 225, i32 5, metadata !768, null}
!777 = metadata !{i32 226, i32 5, metadata !768, null}
!778 = metadata !{i32 215, i32 16, metadata !765, null}
!779 = metadata !{i32 228, i32 3, metadata !766, null}
!780 = metadata !{i32 229, i32 3, metadata !766, null}
!781 = metadata !{i32 230, i32 3, metadata !766, null}
!782 = metadata !{i32 231, i32 3, metadata !766, null}
!783 = metadata !{i32 232, i32 3, metadata !766, null}
!784 = metadata !{i32 233, i32 3, metadata !766, null}
!785 = metadata !{i32 237, i32 7, metadata !786, null}
!786 = metadata !{i32 786443, metadata !766, i32 237, i32 3, metadata !149, i32 36} ; [ DW_TAG_lexical_block ]
!787 = metadata !{i32 239, i32 5, metadata !788, null}
!788 = metadata !{i32 786443, metadata !786, i32 238, i32 3, metadata !149, i32 37} ; [ DW_TAG_lexical_block ]
!789 = metadata !{i32 240, i32 5, metadata !788, null}
!790 = metadata !{i32 241, i32 5, metadata !788, null}
!791 = metadata !{i32 242, i32 5, metadata !788, null}
!792 = metadata !{i32 786688, metadata !766, metadata !"carry", metadata !149, i32 213, metadata !793, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!793 = metadata !{i32 786468, null, metadata !"char", null, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!794 = metadata !{i32 243, i32 5, metadata !788, null}
!795 = metadata !{i32 786688, metadata !766, metadata !"i", metadata !149, i32 214, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!796 = metadata !{i32 237, i32 16, metadata !786, null}
!797 = metadata !{i32 245, i32 3, metadata !766, null}
!798 = metadata !{i32 246, i32 1, metadata !766, null}
!799 = metadata !{i32 790531, metadata !800, metadata !"r.v", null, i32 183, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!800 = metadata !{i32 786689, metadata !801, metadata !"r", metadata !149, i32 16777399, metadata !590, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!801 = metadata !{i32 786478, i32 0, metadata !149, metadata !"crypto_sign_ed25519_ref_sc25519_mul", metadata !"crypto_sign_ed25519_ref_sc25519_mul", metadata !"", metadata !149, i32 183, metadata !802, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 184} ; [ DW_TAG_subprogram ]
!802 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !803, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!803 = metadata !{null, metadata !590, metadata !755, metadata !755}
!804 = metadata !{i32 183, i32 75, metadata !801, null}
!805 = metadata !{i32 790531, metadata !806, metadata !"x.v", null, i32 183, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!806 = metadata !{i32 786689, metadata !801, metadata !"x", metadata !149, i32 33554615, metadata !755, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!807 = metadata !{i32 183, i32 117, metadata !801, null}
!808 = metadata !{i32 790531, metadata !809, metadata !"y.v", null, i32 183, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!809 = metadata !{i32 786689, metadata !801, metadata !"y", metadata !149, i32 50331831, metadata !755, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!810 = metadata !{i32 183, i32 159, metadata !801, null}
!811 = metadata !{i32 786688, metadata !812, metadata !"t", metadata !149, i32 186, metadata !813, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!812 = metadata !{i32 786443, metadata !801, i32 184, i32 1, metadata !149, i32 26} ; [ DW_TAG_lexical_block ]
!813 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2048, i64 32, i32 0, i32 0, metadata !152, metadata !305, i32 0, i32 0} ; [ DW_TAG_array_type ]
!814 = metadata !{i32 186, i32 17, metadata !812, null}
!815 = metadata !{i32 187, i32 7, metadata !816, null}
!816 = metadata !{i32 786443, metadata !812, i32 187, i32 3, metadata !149, i32 27} ; [ DW_TAG_lexical_block ]
!817 = metadata !{i32 189, i32 7, metadata !818, null}
!818 = metadata !{i32 786443, metadata !812, i32 189, i32 3, metadata !149, i32 28} ; [ DW_TAG_lexical_block ]
!819 = metadata !{i32 187, i32 20, metadata !816, null}
!820 = metadata !{i32 187, i32 16, metadata !816, null}
!821 = metadata !{i32 786688, metadata !812, metadata !"i", metadata !149, i32 185, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!822 = metadata !{i32 194, i32 7, metadata !823, null}
!823 = metadata !{i32 786443, metadata !812, i32 194, i32 3, metadata !149, i32 30} ; [ DW_TAG_lexical_block ]
!824 = metadata !{i32 191, i32 7, metadata !825, null}
!825 = metadata !{i32 786443, metadata !818, i32 190, i32 5, metadata !149, i32 29} ; [ DW_TAG_lexical_block ]
!826 = metadata !{i32 190, i32 9, metadata !825, null}
!827 = metadata !{i32 190, i32 18, metadata !825, null}
!828 = metadata !{i32 786688, metadata !812, metadata !"j", metadata !149, i32 185, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!829 = metadata !{i32 189, i32 16, metadata !818, null}
!830 = metadata !{i32 196, i32 5, metadata !831, null}
!831 = metadata !{i32 786443, metadata !823, i32 195, i32 3, metadata !149, i32 31} ; [ DW_TAG_lexical_block ]
!832 = metadata !{i32 786688, metadata !812, metadata !"carry", metadata !149, i32 185, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!833 = metadata !{i32 197, i32 5, metadata !831, null}
!834 = metadata !{i32 198, i32 5, metadata !831, null}
!835 = metadata !{i32 194, i32 16, metadata !823, null}
!836 = metadata !{i32 201, i32 3, metadata !812, null}
!837 = metadata !{i32 202, i32 1, metadata !812, null}
!838 = metadata !{i32 26, i32 17, metadata !600, metadata !839}
!839 = metadata !{i32 167, i32 3, metadata !840, null}
!840 = metadata !{i32 786443, metadata !841, i32 158, i32 1, metadata !149, i32 19} ; [ DW_TAG_lexical_block ]
!841 = metadata !{i32 786478, i32 0, metadata !149, metadata !"crypto_sign_ed25519_ref_sc25519_add", metadata !"crypto_sign_ed25519_ref_sc25519_add", metadata !"", metadata !149, i32 157, metadata !802, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 158} ; [ DW_TAG_subprogram ]
!842 = metadata !{i32 790531, metadata !843, metadata !"r.v", null, i32 157, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!843 = metadata !{i32 786689, metadata !841, metadata !"r", metadata !149, i32 16777373, metadata !590, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!844 = metadata !{i32 157, i32 75, metadata !841, null}
!845 = metadata !{i32 790531, metadata !846, metadata !"x.v", null, i32 157, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!846 = metadata !{i32 786689, metadata !841, metadata !"x", metadata !149, i32 33554589, metadata !755, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!847 = metadata !{i32 157, i32 117, metadata !841, null}
!848 = metadata !{i32 790531, metadata !849, metadata !"y.v", null, i32 157, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!849 = metadata !{i32 786689, metadata !841, metadata !"y", metadata !149, i32 50331805, metadata !755, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!850 = metadata !{i32 157, i32 159, metadata !841, null}
!851 = metadata !{i32 160, i32 7, metadata !852, null}
!852 = metadata !{i32 786443, metadata !840, i32 160, i32 3, metadata !149, i32 20} ; [ DW_TAG_lexical_block ]
!853 = metadata !{i32 161, i32 7, metadata !854, null}
!854 = metadata !{i32 786443, metadata !840, i32 161, i32 3, metadata !149, i32 21} ; [ DW_TAG_lexical_block ]
!855 = metadata !{i32 160, i32 21, metadata !852, null}
!856 = metadata !{i32 160, i32 16, metadata !852, null}
!857 = metadata !{i32 786688, metadata !840, metadata !"i", metadata !149, i32 159, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!858 = metadata !{i32 35, i32 3, metadata !600, metadata !839}
!859 = metadata !{i32 163, i32 5, metadata !860, null}
!860 = metadata !{i32 786443, metadata !854, i32 162, i32 3, metadata !149, i32 22} ; [ DW_TAG_lexical_block ]
!861 = metadata !{i32 786688, metadata !840, metadata !"carry", metadata !149, i32 159, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!862 = metadata !{i32 164, i32 5, metadata !860, null}
!863 = metadata !{i32 165, i32 5, metadata !860, null}
!864 = metadata !{i32 161, i32 16, metadata !854, null}
!865 = metadata !{i32 786688, metadata !600, metadata !"mask", metadata !149, i32 24, metadata !152, i32 0, metadata !839} ; [ DW_TAG_auto_variable ]
!866 = metadata !{i32 28, i32 7, metadata !604, metadata !839}
!867 = metadata !{i32 36, i32 7, metadata !608, metadata !839}
!868 = metadata !{i32 30, i32 5, metadata !610, metadata !839}
!869 = metadata !{i32 786688, metadata !600, metadata !"pb", metadata !149, i32 22, metadata !152, i32 0, metadata !839} ; [ DW_TAG_auto_variable ]
!870 = metadata !{i32 31, i32 9, metadata !610, metadata !839}
!871 = metadata !{i32 786689, metadata !614, metadata !"a", metadata !149, i32 16777227, metadata !152, i32 0, metadata !870} ; [ DW_TAG_arg_variable ]
!872 = metadata !{i32 11, i32 39, metadata !614, metadata !870}
!873 = metadata !{i32 786689, metadata !614, metadata !"b", metadata !149, i32 33554443, metadata !152, i32 0, metadata !870} ; [ DW_TAG_arg_variable ]
!874 = metadata !{i32 11, i32 55, metadata !614, metadata !870}
!875 = metadata !{i32 786688, metadata !621, metadata !"x", metadata !149, i32 13, metadata !154, i32 0, metadata !870} ; [ DW_TAG_auto_variable ]
!876 = metadata !{i32 13, i32 21, metadata !621, metadata !870}
!877 = metadata !{i32 14, i32 3, metadata !621, metadata !870}
!878 = metadata !{i32 15, i32 3, metadata !621, metadata !870}
!879 = metadata !{i32 786688, metadata !600, metadata !"b", metadata !149, i32 23, metadata !152, i32 0, metadata !839} ; [ DW_TAG_auto_variable ]
!880 = metadata !{i32 32, i32 5, metadata !610, metadata !839}
!881 = metadata !{i32 33, i32 5, metadata !610, metadata !839}
!882 = metadata !{i32 28, i32 16, metadata !604, metadata !839}
!883 = metadata !{i32 786688, metadata !600, metadata !"i", metadata !149, i32 25, metadata !216, i32 0, metadata !839} ; [ DW_TAG_auto_variable ]
!884 = metadata !{i32 37, i32 5, metadata !608, metadata !839}
!885 = metadata !{i32 36, i32 16, metadata !608, metadata !839}
!886 = metadata !{i32 168, i32 1, metadata !840, null}
!887 = metadata !{i32 790531, metadata !888, metadata !"r.v", null, i32 175, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!888 = metadata !{i32 786689, metadata !889, metadata !"r", metadata !673, i32 16777391, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!889 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_sub", metadata !"crypto_sign_ed25519_ref_fe25519_sub", metadata !"", metadata !673, i32 175, metadata !890, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 176} ; [ DW_TAG_subprogram ]
!890 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !891, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!891 = metadata !{null, metadata !676, metadata !892, metadata !892}
!892 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !893} ; [ DW_TAG_pointer_type ]
!893 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !677} ; [ DW_TAG_const_type ]
!894 = metadata !{i32 175, i32 75, metadata !889, null}
!895 = metadata !{i32 790531, metadata !896, metadata !"x.v", null, i32 175, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!896 = metadata !{i32 786689, metadata !889, metadata !"x", metadata !673, i32 33554607, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!897 = metadata !{i32 175, i32 117, metadata !889, null}
!898 = metadata !{i32 790531, metadata !899, metadata !"y.v", null, i32 175, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!899 = metadata !{i32 786689, metadata !889, metadata !"y", metadata !673, i32 50331823, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!900 = metadata !{i32 175, i32 159, metadata !889, null}
!901 = metadata !{i32 786688, metadata !902, metadata !"t", metadata !673, i32 178, metadata !173, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!902 = metadata !{i32 786443, metadata !889, i32 176, i32 1, metadata !673, i32 22} ; [ DW_TAG_lexical_block ]
!903 = metadata !{i32 178, i32 17, metadata !902, null}
!904 = metadata !{i32 179, i32 3, metadata !902, null}
!905 = metadata !{i32 180, i32 3, metadata !902, null}
!906 = metadata !{i32 181, i32 7, metadata !907, null}
!907 = metadata !{i32 786443, metadata !902, i32 181, i32 3, metadata !673, i32 23} ; [ DW_TAG_lexical_block ]
!908 = metadata !{i32 182, i32 7, metadata !909, null}
!909 = metadata !{i32 786443, metadata !902, i32 182, i32 3, metadata !673, i32 24} ; [ DW_TAG_lexical_block ]
!910 = metadata !{i32 181, i32 21, metadata !907, null}
!911 = metadata !{i32 181, i32 16, metadata !907, null}
!912 = metadata !{i32 786688, metadata !902, metadata !"i", metadata !673, i32 177, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!913 = metadata !{i32 38, i32 7, metadata !914, metadata !917}
!914 = metadata !{i32 786443, metadata !915, i32 38, i32 3, metadata !673, i32 67} ; [ DW_TAG_lexical_block ]
!915 = metadata !{i32 786443, metadata !916, i32 34, i32 1, metadata !673, i32 66} ; [ DW_TAG_lexical_block ]
!916 = metadata !{i32 786478, i32 0, metadata !673, metadata !"reduce_add_sub", metadata !"reduce_add_sub", metadata !"", metadata !673, i32 33, metadata !674, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 34} ; [ DW_TAG_subprogram ]
!917 = metadata !{i32 183, i32 3, metadata !902, null}
!918 = metadata !{i32 182, i32 21, metadata !909, null}
!919 = metadata !{i32 182, i32 16, metadata !909, null}
!920 = metadata !{i32 40, i32 5, metadata !921, metadata !917}
!921 = metadata !{i32 786443, metadata !914, i32 39, i32 3, metadata !673, i32 68} ; [ DW_TAG_lexical_block ]
!922 = metadata !{i32 786688, metadata !915, metadata !"t", metadata !673, i32 35, metadata !174, i32 0, metadata !917} ; [ DW_TAG_auto_variable ]
!923 = metadata !{i32 41, i32 5, metadata !921, metadata !917}
!924 = metadata !{i32 786689, metadata !925, metadata !"a", metadata !673, i32 16777239, metadata !174, i32 0, metadata !928} ; [ DW_TAG_arg_variable ]
!925 = metadata !{i32 786478, i32 0, metadata !673, metadata !"times19", metadata !"times19", metadata !"", metadata !673, i32 23, metadata !926, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 24} ; [ DW_TAG_subprogram ]
!926 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !927, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!927 = metadata !{metadata !174, metadata !174}
!928 = metadata !{i32 42, i32 9, metadata !921, metadata !917}
!929 = metadata !{i32 23, i32 44, metadata !925, metadata !928}
!930 = metadata !{i32 25, i32 3, metadata !931, metadata !928}
!931 = metadata !{i32 786443, metadata !925, i32 24, i32 1, metadata !673, i32 64} ; [ DW_TAG_lexical_block ]
!932 = metadata !{i32 43, i32 5, metadata !921, metadata !917}
!933 = metadata !{i32 44, i32 9, metadata !934, metadata !917}
!934 = metadata !{i32 786443, metadata !921, i32 44, i32 5, metadata !673, i32 69} ; [ DW_TAG_lexical_block ]
!935 = metadata !{i32 46, i32 7, metadata !936, metadata !917}
!936 = metadata !{i32 786443, metadata !934, i32 45, i32 5, metadata !673, i32 70} ; [ DW_TAG_lexical_block ]
!937 = metadata !{i32 47, i32 7, metadata !936, metadata !917}
!938 = metadata !{i32 48, i32 7, metadata !936, metadata !917}
!939 = metadata !{i32 786688, metadata !915, metadata !"i", metadata !673, i32 36, metadata !216, i32 0, metadata !917} ; [ DW_TAG_auto_variable ]
!940 = metadata !{i32 44, i32 18, metadata !934, metadata !917}
!941 = metadata !{i32 38, i32 19, metadata !914, metadata !917}
!942 = metadata !{i32 786688, metadata !915, metadata !"rep", metadata !673, i32 36, metadata !216, i32 0, metadata !917} ; [ DW_TAG_auto_variable ]
!943 = metadata !{i32 184, i32 1, metadata !902, null}
!944 = metadata !{i32 790531, metadata !945, metadata !"r.v", null, i32 33, metadata !681, i32 0, metadata !917} ; [ DW_TAG_arg_variable_field ]
!945 = metadata !{i32 786689, metadata !916, metadata !"r", metadata !673, i32 16777249, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!946 = metadata !{i32 33, i32 61, metadata !916, metadata !917}
!947 = metadata !{i32 786689, metadata !948, metadata !"r", null, i32 98, metadata !394, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!948 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_pack", metadata !"crypto_sign_ed25519_ref_fe25519_pack", metadata !"", metadata !673, i32 98, metadata !949, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 99} ; [ DW_TAG_subprogram ]
!949 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !950, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!950 = metadata !{null, metadata !388, metadata !892}
!951 = metadata !{i32 98, i32 57, metadata !948, null}
!952 = metadata !{i32 790531, metadata !953, metadata !"x.v", null, i32 98, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!953 = metadata !{i32 786689, metadata !948, metadata !"x", metadata !673, i32 33554530, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!954 = metadata !{i32 98, i32 103, metadata !948, null}
!955 = metadata !{i32 790529, metadata !956, metadata !"y.v", null, i32 101, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!956 = metadata !{i32 786688, metadata !957, metadata !"y", metadata !673, i32 101, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!957 = metadata !{i32 786443, metadata !948, i32 99, i32 1, metadata !673, i32 5} ; [ DW_TAG_lexical_block ]
!958 = metadata !{i32 101, i32 35, metadata !957, null}
!959 = metadata !{i32 101, i32 41, metadata !957, null}
!960 = metadata !{i32 102, i32 3, metadata !957, null}
!961 = metadata !{i32 103, i32 7, metadata !962, null}
!962 = metadata !{i32 786443, metadata !957, i32 103, i32 3, metadata !673, i32 6} ; [ DW_TAG_lexical_block ]
!963 = metadata !{i32 104, i32 5, metadata !962, null}
!964 = metadata !{i32 103, i32 16, metadata !962, null}
!965 = metadata !{i32 786688, metadata !957, metadata !"i", metadata !673, i32 100, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!966 = metadata !{i32 105, i32 1, metadata !957, null}
!967 = metadata !{i32 790531, metadata !968, metadata !"r.v", null, i32 186, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!968 = metadata !{i32 786689, metadata !969, metadata !"r", metadata !673, i32 16777402, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!969 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_mul", metadata !"crypto_sign_ed25519_ref_fe25519_mul", metadata !"", metadata !673, i32 186, metadata !890, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 187} ; [ DW_TAG_subprogram ]
!970 = metadata !{i32 186, i32 75, metadata !969, null}
!971 = metadata !{i32 790531, metadata !972, metadata !"x.v", null, i32 186, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!972 = metadata !{i32 786689, metadata !969, metadata !"x", metadata !673, i32 33554618, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!973 = metadata !{i32 186, i32 117, metadata !969, null}
!974 = metadata !{i32 790531, metadata !975, metadata !"y.v", null, i32 186, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!975 = metadata !{i32 786689, metadata !969, metadata !"y", metadata !673, i32 50331834, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!976 = metadata !{i32 186, i32 159, metadata !969, null}
!977 = metadata !{i32 786688, metadata !978, metadata !"t", metadata !673, i32 189, metadata !979, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!978 = metadata !{i32 786443, metadata !969, i32 187, i32 1, metadata !673, i32 25} ; [ DW_TAG_lexical_block ]
!979 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2016, i64 32, i32 0, i32 0, metadata !174, metadata !980, i32 0, i32 0} ; [ DW_TAG_array_type ]
!980 = metadata !{metadata !981}
!981 = metadata !{i32 786465, i64 0, i64 62}      ; [ DW_TAG_subrange_type ]
!982 = metadata !{i32 189, i32 17, metadata !978, null}
!983 = metadata !{i32 190, i32 7, metadata !984, null}
!984 = metadata !{i32 786443, metadata !978, i32 190, i32 3, metadata !673, i32 26} ; [ DW_TAG_lexical_block ]
!985 = metadata !{i32 192, i32 7, metadata !986, null}
!986 = metadata !{i32 786443, metadata !978, i32 192, i32 3, metadata !673, i32 27} ; [ DW_TAG_lexical_block ]
!987 = metadata !{i32 190, i32 20, metadata !984, null}
!988 = metadata !{i32 190, i32 16, metadata !984, null}
!989 = metadata !{i32 786688, metadata !978, metadata !"i", metadata !673, i32 188, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!990 = metadata !{i32 196, i32 7, metadata !991, null}
!991 = metadata !{i32 786443, metadata !978, i32 196, i32 3, metadata !673, i32 29} ; [ DW_TAG_lexical_block ]
!992 = metadata !{i32 194, i32 7, metadata !993, null}
!993 = metadata !{i32 786443, metadata !986, i32 193, i32 5, metadata !673, i32 28} ; [ DW_TAG_lexical_block ]
!994 = metadata !{i32 193, i32 9, metadata !993, null}
!995 = metadata !{i32 193, i32 18, metadata !993, null}
!996 = metadata !{i32 786688, metadata !978, metadata !"j", metadata !673, i32 188, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!997 = metadata !{i32 192, i32 16, metadata !986, null}
!998 = metadata !{i32 197, i32 5, metadata !991, null}
!999 = metadata !{i32 197, i32 28, metadata !991, null}
!1000 = metadata !{i32 786689, metadata !1001, metadata !"a", metadata !673, i32 16777244, metadata !174, i32 0, metadata !999} ; [ DW_TAG_arg_variable ]
!1001 = metadata !{i32 786478, i32 0, metadata !673, metadata !"times38", metadata !"times38", metadata !"", metadata !673, i32 28, metadata !926, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 29} ; [ DW_TAG_subprogram ]
!1002 = metadata !{i32 28, i32 44, metadata !1001, metadata !999}
!1003 = metadata !{i32 30, i32 3, metadata !1004, metadata !999}
!1004 = metadata !{i32 786443, metadata !1001, i32 29, i32 1, metadata !673, i32 65} ; [ DW_TAG_lexical_block ]
!1005 = metadata !{i32 196, i32 17, metadata !991, null}
!1006 = metadata !{i32 198, i32 3, metadata !978, null}
!1007 = metadata !{i32 790531, metadata !1008, metadata !"r.v", null, i32 53, metadata !681, i32 0, metadata !1010} ; [ DW_TAG_arg_variable_field ]
!1008 = metadata !{i32 786689, metadata !1009, metadata !"r", metadata !673, i32 16777269, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1009 = metadata !{i32 786478, i32 0, metadata !673, metadata !"reduce_mul", metadata !"reduce_mul", metadata !"", metadata !673, i32 53, metadata !674, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 54} ; [ DW_TAG_subprogram ]
!1010 = metadata !{i32 200, i32 3, metadata !978, null}
!1011 = metadata !{i32 53, i32 57, metadata !1009, metadata !1010}
!1012 = metadata !{i32 63, i32 5, metadata !1013, metadata !1010}
!1013 = metadata !{i32 786443, metadata !1014, i32 59, i32 3, metadata !673, i32 61} ; [ DW_TAG_lexical_block ]
!1014 = metadata !{i32 786443, metadata !1015, i32 58, i32 3, metadata !673, i32 60} ; [ DW_TAG_lexical_block ]
!1015 = metadata !{i32 786443, metadata !1009, i32 54, i32 1, metadata !673, i32 59} ; [ DW_TAG_lexical_block ]
!1016 = metadata !{i32 58, i32 7, metadata !1014, metadata !1010}
!1017 = metadata !{i32 60, i32 5, metadata !1013, metadata !1010}
!1018 = metadata !{i32 786688, metadata !1015, metadata !"t", metadata !673, i32 55, metadata !174, i32 0, metadata !1010} ; [ DW_TAG_auto_variable ]
!1019 = metadata !{i32 61, i32 5, metadata !1013, metadata !1010}
!1020 = metadata !{i32 786689, metadata !925, metadata !"a", metadata !673, i32 16777239, metadata !174, i32 0, metadata !1021} ; [ DW_TAG_arg_variable ]
!1021 = metadata !{i32 62, i32 9, metadata !1013, metadata !1010}
!1022 = metadata !{i32 23, i32 44, metadata !925, metadata !1021}
!1023 = metadata !{i32 25, i32 3, metadata !931, metadata !1021}
!1024 = metadata !{i32 64, i32 9, metadata !1025, metadata !1010}
!1025 = metadata !{i32 786443, metadata !1013, i32 64, i32 5, metadata !673, i32 62} ; [ DW_TAG_lexical_block ]
!1026 = metadata !{i32 66, i32 7, metadata !1027, metadata !1010}
!1027 = metadata !{i32 786443, metadata !1025, i32 65, i32 5, metadata !673, i32 63} ; [ DW_TAG_lexical_block ]
!1028 = metadata !{i32 67, i32 7, metadata !1027, metadata !1010}
!1029 = metadata !{i32 68, i32 7, metadata !1027, metadata !1010}
!1030 = metadata !{i32 786688, metadata !1015, metadata !"i", metadata !673, i32 56, metadata !216, i32 0, metadata !1010} ; [ DW_TAG_auto_variable ]
!1031 = metadata !{i32 64, i32 18, metadata !1025, metadata !1010}
!1032 = metadata !{i32 58, i32 19, metadata !1014, metadata !1010}
!1033 = metadata !{i32 786688, metadata !1015, metadata !"rep", metadata !673, i32 56, metadata !216, i32 0, metadata !1010} ; [ DW_TAG_auto_variable ]
!1034 = metadata !{i32 201, i32 1, metadata !978, null}
!1035 = metadata !{i32 790531, metadata !1036, metadata !"r.v", null, i32 208, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1036 = metadata !{i32 786689, metadata !1037, metadata !"r", metadata !673, i32 16777424, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1037 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_invert", metadata !"crypto_sign_ed25519_ref_fe25519_invert", metadata !"", metadata !673, i32 208, metadata !1038, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 209} ; [ DW_TAG_subprogram ]
!1038 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1039, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1039 = metadata !{null, metadata !676, metadata !892}
!1040 = metadata !{i32 208, i32 78, metadata !1037, null}
!1041 = metadata !{i32 790531, metadata !1042, metadata !"x.v", null, i32 208, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1042 = metadata !{i32 786689, metadata !1037, metadata !"x", metadata !673, i32 33554640, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1043 = metadata !{i32 208, i32 120, metadata !1037, null}
!1044 = metadata !{i32 790529, metadata !1045, metadata !"z2.v", null, i32 210, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1045 = metadata !{i32 786688, metadata !1046, metadata !"z2", metadata !673, i32 210, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1046 = metadata !{i32 786443, metadata !1037, i32 209, i32 1, metadata !673, i32 31} ; [ DW_TAG_lexical_block ]
!1047 = metadata !{i32 210, i32 34, metadata !1046, null}
!1048 = metadata !{i32 790529, metadata !1049, metadata !"z9.v", null, i32 211, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1049 = metadata !{i32 786688, metadata !1046, metadata !"z9", metadata !673, i32 211, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1050 = metadata !{i32 211, i32 34, metadata !1046, null}
!1051 = metadata !{i32 790529, metadata !1052, metadata !"z11.v", null, i32 212, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1052 = metadata !{i32 786688, metadata !1046, metadata !"z11", metadata !673, i32 212, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1053 = metadata !{i32 212, i32 34, metadata !1046, null}
!1054 = metadata !{i32 790529, metadata !1055, metadata !"z2_5_0.v", null, i32 213, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1055 = metadata !{i32 786688, metadata !1046, metadata !"z2_5_0", metadata !673, i32 213, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1056 = metadata !{i32 213, i32 34, metadata !1046, null}
!1057 = metadata !{i32 790529, metadata !1058, metadata !"z2_10_0.v", null, i32 214, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1058 = metadata !{i32 786688, metadata !1046, metadata !"z2_10_0", metadata !673, i32 214, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1059 = metadata !{i32 214, i32 34, metadata !1046, null}
!1060 = metadata !{i32 790529, metadata !1061, metadata !"z2_20_0.v", null, i32 215, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1061 = metadata !{i32 786688, metadata !1046, metadata !"z2_20_0", metadata !673, i32 215, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1062 = metadata !{i32 215, i32 34, metadata !1046, null}
!1063 = metadata !{i32 790529, metadata !1064, metadata !"z2_50_0.v", null, i32 216, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1064 = metadata !{i32 786688, metadata !1046, metadata !"z2_50_0", metadata !673, i32 216, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1065 = metadata !{i32 216, i32 34, metadata !1046, null}
!1066 = metadata !{i32 790529, metadata !1067, metadata !"z2_100_0.v", null, i32 217, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1067 = metadata !{i32 786688, metadata !1046, metadata !"z2_100_0", metadata !673, i32 217, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1068 = metadata !{i32 217, i32 34, metadata !1046, null}
!1069 = metadata !{i32 790529, metadata !1070, metadata !"t0.v", null, i32 218, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1070 = metadata !{i32 786688, metadata !1046, metadata !"t0", metadata !673, i32 218, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1071 = metadata !{i32 218, i32 34, metadata !1046, null}
!1072 = metadata !{i32 790529, metadata !1073, metadata !"t1.v", null, i32 219, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1073 = metadata !{i32 786688, metadata !1046, metadata !"t1", metadata !673, i32 219, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1074 = metadata !{i32 219, i32 34, metadata !1046, null}
!1075 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1078} ; [ DW_TAG_arg_variable_field ]
!1076 = metadata !{i32 786689, metadata !1077, metadata !"r", metadata !673, i32 16777419, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1077 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_square", metadata !"crypto_sign_ed25519_ref_fe25519_square", metadata !"", metadata !673, i32 203, metadata !1038, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 204} ; [ DW_TAG_subprogram ]
!1078 = metadata !{i32 222, i32 10, metadata !1046, null}
!1079 = metadata !{i32 203, i32 78, metadata !1077, metadata !1078}
!1080 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1078} ; [ DW_TAG_arg_variable_field ]
!1081 = metadata !{i32 786689, metadata !1077, metadata !"x", metadata !673, i32 33554635, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1082 = metadata !{i32 203, i32 120, metadata !1077, metadata !1078}
!1083 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1084} ; [ DW_TAG_arg_variable_field ]
!1084 = metadata !{i32 223, i32 10, metadata !1046, null}
!1085 = metadata !{i32 203, i32 78, metadata !1077, metadata !1084}
!1086 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1084} ; [ DW_TAG_arg_variable_field ]
!1087 = metadata !{i32 203, i32 120, metadata !1077, metadata !1084}
!1088 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1089} ; [ DW_TAG_arg_variable_field ]
!1089 = metadata !{i32 224, i32 10, metadata !1046, null}
!1090 = metadata !{i32 203, i32 78, metadata !1077, metadata !1089}
!1091 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1089} ; [ DW_TAG_arg_variable_field ]
!1092 = metadata !{i32 203, i32 120, metadata !1077, metadata !1089}
!1093 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1094} ; [ DW_TAG_arg_variable_field ]
!1094 = metadata !{i32 227, i32 11, metadata !1046, null}
!1095 = metadata !{i32 203, i32 78, metadata !1077, metadata !1094}
!1096 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1094} ; [ DW_TAG_arg_variable_field ]
!1097 = metadata !{i32 203, i32 120, metadata !1077, metadata !1094}
!1098 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1099} ; [ DW_TAG_arg_variable_field ]
!1099 = metadata !{i32 230, i32 18, metadata !1046, null}
!1100 = metadata !{i32 203, i32 78, metadata !1077, metadata !1099}
!1101 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1099} ; [ DW_TAG_arg_variable_field ]
!1102 = metadata !{i32 203, i32 120, metadata !1077, metadata !1099}
!1103 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1104} ; [ DW_TAG_arg_variable_field ]
!1104 = metadata !{i32 231, i32 18, metadata !1046, null}
!1105 = metadata !{i32 203, i32 78, metadata !1077, metadata !1104}
!1106 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1104} ; [ DW_TAG_arg_variable_field ]
!1107 = metadata !{i32 203, i32 120, metadata !1077, metadata !1104}
!1108 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1109} ; [ DW_TAG_arg_variable_field ]
!1109 = metadata !{i32 232, i32 18, metadata !1046, null}
!1110 = metadata !{i32 203, i32 78, metadata !1077, metadata !1109}
!1111 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1109} ; [ DW_TAG_arg_variable_field ]
!1112 = metadata !{i32 203, i32 120, metadata !1077, metadata !1109}
!1113 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1114} ; [ DW_TAG_arg_variable_field ]
!1114 = metadata !{i32 233, i32 18, metadata !1046, null}
!1115 = metadata !{i32 203, i32 78, metadata !1077, metadata !1114}
!1116 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1114} ; [ DW_TAG_arg_variable_field ]
!1117 = metadata !{i32 203, i32 120, metadata !1077, metadata !1114}
!1118 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1119} ; [ DW_TAG_arg_variable_field ]
!1119 = metadata !{i32 234, i32 19, metadata !1046, null}
!1120 = metadata !{i32 203, i32 78, metadata !1077, metadata !1119}
!1121 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1119} ; [ DW_TAG_arg_variable_field ]
!1122 = metadata !{i32 203, i32 120, metadata !1077, metadata !1119}
!1123 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1124} ; [ DW_TAG_arg_variable_field ]
!1124 = metadata !{i32 237, i32 19, metadata !1046, null}
!1125 = metadata !{i32 203, i32 78, metadata !1077, metadata !1124}
!1126 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1124} ; [ DW_TAG_arg_variable_field ]
!1127 = metadata !{i32 203, i32 120, metadata !1077, metadata !1124}
!1128 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1129} ; [ DW_TAG_arg_variable_field ]
!1129 = metadata !{i32 238, i32 19, metadata !1046, null}
!1130 = metadata !{i32 203, i32 78, metadata !1077, metadata !1129}
!1131 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1129} ; [ DW_TAG_arg_variable_field ]
!1132 = metadata !{i32 203, i32 120, metadata !1077, metadata !1129}
!1133 = metadata !{i32 239, i32 25, metadata !1134, null}
!1134 = metadata !{i32 786443, metadata !1046, i32 239, i32 20, metadata !673, i32 32} ; [ DW_TAG_lexical_block ]
!1135 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1136} ; [ DW_TAG_arg_variable_field ]
!1136 = metadata !{i32 239, i32 48, metadata !1137, null}
!1137 = metadata !{i32 786443, metadata !1134, i32 239, i32 46, metadata !673, i32 33} ; [ DW_TAG_lexical_block ]
!1138 = metadata !{i32 203, i32 78, metadata !1077, metadata !1136}
!1139 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1136} ; [ DW_TAG_arg_variable_field ]
!1140 = metadata !{i32 203, i32 120, metadata !1077, metadata !1136}
!1141 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1142} ; [ DW_TAG_arg_variable_field ]
!1142 = metadata !{i32 239, i32 97, metadata !1137, null}
!1143 = metadata !{i32 203, i32 78, metadata !1077, metadata !1142}
!1144 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1142} ; [ DW_TAG_arg_variable_field ]
!1145 = metadata !{i32 203, i32 120, metadata !1077, metadata !1142}
!1146 = metadata !{i32 239, i32 38, metadata !1134, null}
!1147 = metadata !{i32 786688, metadata !1046, metadata !"i", metadata !673, i32 220, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1148 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1149} ; [ DW_TAG_arg_variable_field ]
!1149 = metadata !{i32 242, i32 19, metadata !1046, null}
!1150 = metadata !{i32 203, i32 78, metadata !1077, metadata !1149}
!1151 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1149} ; [ DW_TAG_arg_variable_field ]
!1152 = metadata !{i32 203, i32 120, metadata !1077, metadata !1149}
!1153 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1154} ; [ DW_TAG_arg_variable_field ]
!1154 = metadata !{i32 243, i32 19, metadata !1046, null}
!1155 = metadata !{i32 203, i32 78, metadata !1077, metadata !1154}
!1156 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1154} ; [ DW_TAG_arg_variable_field ]
!1157 = metadata !{i32 203, i32 120, metadata !1077, metadata !1154}
!1158 = metadata !{i32 244, i32 25, metadata !1159, null}
!1159 = metadata !{i32 786443, metadata !1046, i32 244, i32 20, metadata !673, i32 34} ; [ DW_TAG_lexical_block ]
!1160 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1161} ; [ DW_TAG_arg_variable_field ]
!1161 = metadata !{i32 244, i32 48, metadata !1162, null}
!1162 = metadata !{i32 786443, metadata !1159, i32 244, i32 46, metadata !673, i32 35} ; [ DW_TAG_lexical_block ]
!1163 = metadata !{i32 203, i32 78, metadata !1077, metadata !1161}
!1164 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1161} ; [ DW_TAG_arg_variable_field ]
!1165 = metadata !{i32 203, i32 120, metadata !1077, metadata !1161}
!1166 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1167} ; [ DW_TAG_arg_variable_field ]
!1167 = metadata !{i32 244, i32 97, metadata !1162, null}
!1168 = metadata !{i32 203, i32 78, metadata !1077, metadata !1167}
!1169 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1167} ; [ DW_TAG_arg_variable_field ]
!1170 = metadata !{i32 203, i32 120, metadata !1077, metadata !1167}
!1171 = metadata !{i32 244, i32 38, metadata !1159, null}
!1172 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1173} ; [ DW_TAG_arg_variable_field ]
!1173 = metadata !{i32 247, i32 19, metadata !1046, null}
!1174 = metadata !{i32 203, i32 78, metadata !1077, metadata !1173}
!1175 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1173} ; [ DW_TAG_arg_variable_field ]
!1176 = metadata !{i32 203, i32 120, metadata !1077, metadata !1173}
!1177 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1178} ; [ DW_TAG_arg_variable_field ]
!1178 = metadata !{i32 248, i32 19, metadata !1046, null}
!1179 = metadata !{i32 203, i32 78, metadata !1077, metadata !1178}
!1180 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1178} ; [ DW_TAG_arg_variable_field ]
!1181 = metadata !{i32 203, i32 120, metadata !1077, metadata !1178}
!1182 = metadata !{i32 249, i32 25, metadata !1183, null}
!1183 = metadata !{i32 786443, metadata !1046, i32 249, i32 20, metadata !673, i32 36} ; [ DW_TAG_lexical_block ]
!1184 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1185} ; [ DW_TAG_arg_variable_field ]
!1185 = metadata !{i32 249, i32 48, metadata !1186, null}
!1186 = metadata !{i32 786443, metadata !1183, i32 249, i32 46, metadata !673, i32 37} ; [ DW_TAG_lexical_block ]
!1187 = metadata !{i32 203, i32 78, metadata !1077, metadata !1185}
!1188 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1185} ; [ DW_TAG_arg_variable_field ]
!1189 = metadata !{i32 203, i32 120, metadata !1077, metadata !1185}
!1190 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1191} ; [ DW_TAG_arg_variable_field ]
!1191 = metadata !{i32 249, i32 97, metadata !1186, null}
!1192 = metadata !{i32 203, i32 78, metadata !1077, metadata !1191}
!1193 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1191} ; [ DW_TAG_arg_variable_field ]
!1194 = metadata !{i32 203, i32 120, metadata !1077, metadata !1191}
!1195 = metadata !{i32 249, i32 38, metadata !1183, null}
!1196 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1197} ; [ DW_TAG_arg_variable_field ]
!1197 = metadata !{i32 252, i32 19, metadata !1046, null}
!1198 = metadata !{i32 203, i32 78, metadata !1077, metadata !1197}
!1199 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1197} ; [ DW_TAG_arg_variable_field ]
!1200 = metadata !{i32 203, i32 120, metadata !1077, metadata !1197}
!1201 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1202} ; [ DW_TAG_arg_variable_field ]
!1202 = metadata !{i32 253, i32 19, metadata !1046, null}
!1203 = metadata !{i32 203, i32 78, metadata !1077, metadata !1202}
!1204 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1202} ; [ DW_TAG_arg_variable_field ]
!1205 = metadata !{i32 203, i32 120, metadata !1077, metadata !1202}
!1206 = metadata !{i32 254, i32 26, metadata !1207, null}
!1207 = metadata !{i32 786443, metadata !1046, i32 254, i32 21, metadata !673, i32 38} ; [ DW_TAG_lexical_block ]
!1208 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1209} ; [ DW_TAG_arg_variable_field ]
!1209 = metadata !{i32 254, i32 49, metadata !1210, null}
!1210 = metadata !{i32 786443, metadata !1207, i32 254, i32 47, metadata !673, i32 39} ; [ DW_TAG_lexical_block ]
!1211 = metadata !{i32 203, i32 78, metadata !1077, metadata !1209}
!1212 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1209} ; [ DW_TAG_arg_variable_field ]
!1213 = metadata !{i32 203, i32 120, metadata !1077, metadata !1209}
!1214 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1215} ; [ DW_TAG_arg_variable_field ]
!1215 = metadata !{i32 254, i32 98, metadata !1210, null}
!1216 = metadata !{i32 203, i32 78, metadata !1077, metadata !1215}
!1217 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1215} ; [ DW_TAG_arg_variable_field ]
!1218 = metadata !{i32 203, i32 120, metadata !1077, metadata !1215}
!1219 = metadata !{i32 254, i32 39, metadata !1207, null}
!1220 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1221} ; [ DW_TAG_arg_variable_field ]
!1221 = metadata !{i32 257, i32 20, metadata !1046, null}
!1222 = metadata !{i32 203, i32 78, metadata !1077, metadata !1221}
!1223 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1221} ; [ DW_TAG_arg_variable_field ]
!1224 = metadata !{i32 203, i32 120, metadata !1077, metadata !1221}
!1225 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1226} ; [ DW_TAG_arg_variable_field ]
!1226 = metadata !{i32 258, i32 20, metadata !1046, null}
!1227 = metadata !{i32 203, i32 78, metadata !1077, metadata !1226}
!1228 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1226} ; [ DW_TAG_arg_variable_field ]
!1229 = metadata !{i32 203, i32 120, metadata !1077, metadata !1226}
!1230 = metadata !{i32 259, i32 27, metadata !1231, null}
!1231 = metadata !{i32 786443, metadata !1046, i32 259, i32 22, metadata !673, i32 40} ; [ DW_TAG_lexical_block ]
!1232 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1233} ; [ DW_TAG_arg_variable_field ]
!1233 = metadata !{i32 259, i32 51, metadata !1234, null}
!1234 = metadata !{i32 786443, metadata !1231, i32 259, i32 49, metadata !673, i32 41} ; [ DW_TAG_lexical_block ]
!1235 = metadata !{i32 203, i32 78, metadata !1077, metadata !1233}
!1236 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1233} ; [ DW_TAG_arg_variable_field ]
!1237 = metadata !{i32 203, i32 120, metadata !1077, metadata !1233}
!1238 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1239} ; [ DW_TAG_arg_variable_field ]
!1239 = metadata !{i32 259, i32 100, metadata !1234, null}
!1240 = metadata !{i32 203, i32 78, metadata !1077, metadata !1239}
!1241 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1239} ; [ DW_TAG_arg_variable_field ]
!1242 = metadata !{i32 203, i32 120, metadata !1077, metadata !1239}
!1243 = metadata !{i32 259, i32 41, metadata !1231, null}
!1244 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1245} ; [ DW_TAG_arg_variable_field ]
!1245 = metadata !{i32 262, i32 20, metadata !1046, null}
!1246 = metadata !{i32 203, i32 78, metadata !1077, metadata !1245}
!1247 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1245} ; [ DW_TAG_arg_variable_field ]
!1248 = metadata !{i32 203, i32 120, metadata !1077, metadata !1245}
!1249 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1250} ; [ DW_TAG_arg_variable_field ]
!1250 = metadata !{i32 263, i32 20, metadata !1046, null}
!1251 = metadata !{i32 203, i32 78, metadata !1077, metadata !1250}
!1252 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1250} ; [ DW_TAG_arg_variable_field ]
!1253 = metadata !{i32 203, i32 120, metadata !1077, metadata !1250}
!1254 = metadata !{i32 264, i32 26, metadata !1255, null}
!1255 = metadata !{i32 786443, metadata !1046, i32 264, i32 21, metadata !673, i32 42} ; [ DW_TAG_lexical_block ]
!1256 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1257} ; [ DW_TAG_arg_variable_field ]
!1257 = metadata !{i32 264, i32 49, metadata !1258, null}
!1258 = metadata !{i32 786443, metadata !1255, i32 264, i32 47, metadata !673, i32 43} ; [ DW_TAG_lexical_block ]
!1259 = metadata !{i32 203, i32 78, metadata !1077, metadata !1257}
!1260 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1257} ; [ DW_TAG_arg_variable_field ]
!1261 = metadata !{i32 203, i32 120, metadata !1077, metadata !1257}
!1262 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1263} ; [ DW_TAG_arg_variable_field ]
!1263 = metadata !{i32 264, i32 98, metadata !1258, null}
!1264 = metadata !{i32 203, i32 78, metadata !1077, metadata !1263}
!1265 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1263} ; [ DW_TAG_arg_variable_field ]
!1266 = metadata !{i32 203, i32 120, metadata !1077, metadata !1263}
!1267 = metadata !{i32 264, i32 39, metadata !1255, null}
!1268 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1269} ; [ DW_TAG_arg_variable_field ]
!1269 = metadata !{i32 267, i32 20, metadata !1046, null}
!1270 = metadata !{i32 203, i32 78, metadata !1077, metadata !1269}
!1271 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1269} ; [ DW_TAG_arg_variable_field ]
!1272 = metadata !{i32 203, i32 120, metadata !1077, metadata !1269}
!1273 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1274} ; [ DW_TAG_arg_variable_field ]
!1274 = metadata !{i32 268, i32 20, metadata !1046, null}
!1275 = metadata !{i32 203, i32 78, metadata !1077, metadata !1274}
!1276 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1274} ; [ DW_TAG_arg_variable_field ]
!1277 = metadata !{i32 203, i32 120, metadata !1077, metadata !1274}
!1278 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1279} ; [ DW_TAG_arg_variable_field ]
!1279 = metadata !{i32 269, i32 20, metadata !1046, null}
!1280 = metadata !{i32 203, i32 78, metadata !1077, metadata !1279}
!1281 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1279} ; [ DW_TAG_arg_variable_field ]
!1282 = metadata !{i32 203, i32 120, metadata !1077, metadata !1279}
!1283 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1284} ; [ DW_TAG_arg_variable_field ]
!1284 = metadata !{i32 270, i32 20, metadata !1046, null}
!1285 = metadata !{i32 203, i32 78, metadata !1077, metadata !1284}
!1286 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1284} ; [ DW_TAG_arg_variable_field ]
!1287 = metadata !{i32 203, i32 120, metadata !1077, metadata !1284}
!1288 = metadata !{i32 790531, metadata !1076, metadata !"r.v", null, i32 203, metadata !681, i32 0, metadata !1289} ; [ DW_TAG_arg_variable_field ]
!1289 = metadata !{i32 271, i32 20, metadata !1046, null}
!1290 = metadata !{i32 203, i32 78, metadata !1077, metadata !1289}
!1291 = metadata !{i32 790531, metadata !1081, metadata !"x.v", null, i32 203, metadata !681, i32 0, metadata !1289} ; [ DW_TAG_arg_variable_field ]
!1292 = metadata !{i32 203, i32 120, metadata !1077, metadata !1289}
!1293 = metadata !{i32 273, i32 1, metadata !1046, null}
!1294 = metadata !{i32 790531, metadata !1295, metadata !"x.v", null, i32 139, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1295 = metadata !{i32 786689, metadata !1296, metadata !"x", metadata !673, i32 16777355, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1296 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_getparity", metadata !"crypto_sign_ed25519_ref_fe25519_getparity", metadata !"", metadata !673, i32 139, metadata !1297, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 140} ; [ DW_TAG_subprogram ]
!1297 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1298, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1298 = metadata !{metadata !231, metadata !892}
!1299 = metadata !{i32 139, i32 96, metadata !1296, null}
!1300 = metadata !{i32 790529, metadata !1301, metadata !"t.v", null, i32 141, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1301 = metadata !{i32 786688, metadata !1302, metadata !"t", metadata !673, i32 141, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1302 = metadata !{i32 786443, metadata !1296, i32 140, i32 1, metadata !673, i32 13} ; [ DW_TAG_lexical_block ]
!1303 = metadata !{i32 141, i32 35, metadata !1302, null}
!1304 = metadata !{i32 141, i32 41, metadata !1302, null}
!1305 = metadata !{i32 142, i32 3, metadata !1302, null}
!1306 = metadata !{i32 143, i32 3, metadata !1302, null}
!1307 = metadata !{i32 790531, metadata !1308, metadata !"r.v", null, i32 74, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1308 = metadata !{i32 786689, metadata !1309, metadata !"r", metadata !673, i32 16777290, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1309 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_freeze", metadata !"crypto_sign_ed25519_ref_fe25519_freeze", metadata !"", metadata !673, i32 74, metadata !674, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 75} ; [ DW_TAG_subprogram ]
!1310 = metadata !{i32 74, i32 78, metadata !1309, null}
!1311 = metadata !{i32 77, i32 21, metadata !1312, null}
!1312 = metadata !{i32 786443, metadata !1309, i32 75, i32 1, metadata !673, i32 0} ; [ DW_TAG_lexical_block ]
!1313 = metadata !{i32 786689, metadata !1314, metadata !"a", metadata !673, i32 16777222, metadata !174, i32 0, metadata !1311} ; [ DW_TAG_arg_variable ]
!1314 = metadata !{i32 786478, i32 0, metadata !673, metadata !"equal", metadata !"equal", metadata !"", metadata !673, i32 6, metadata !1315, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 7} ; [ DW_TAG_subprogram ]
!1315 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1316, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1316 = metadata !{metadata !174, metadata !174, metadata !174}
!1317 = metadata !{i32 6, i32 42, metadata !1314, metadata !1311}
!1318 = metadata !{i32 8, i32 26, metadata !1319, metadata !1311}
!1319 = metadata !{i32 786443, metadata !1314, i32 7, i32 1, metadata !673, i32 72} ; [ DW_TAG_lexical_block ]
!1320 = metadata !{i32 786688, metadata !1319, metadata !"x", metadata !673, i32 8, metadata !174, i32 0, metadata !1311} ; [ DW_TAG_auto_variable ]
!1321 = metadata !{i32 9, i32 3, metadata !1319, metadata !1311}
!1322 = metadata !{i32 10, i32 3, metadata !1319, metadata !1311}
!1323 = metadata !{i32 786688, metadata !1312, metadata !"m", metadata !673, i32 77, metadata !174, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1324 = metadata !{i32 78, i32 7, metadata !1325, null}
!1325 = metadata !{i32 786443, metadata !1312, i32 78, i32 3, metadata !673, i32 1} ; [ DW_TAG_lexical_block ]
!1326 = metadata !{i32 79, i32 10, metadata !1325, null}
!1327 = metadata !{i32 786689, metadata !1314, metadata !"a", metadata !673, i32 16777222, metadata !174, i32 0, metadata !1326} ; [ DW_TAG_arg_variable ]
!1328 = metadata !{i32 6, i32 42, metadata !1314, metadata !1326}
!1329 = metadata !{i32 8, i32 26, metadata !1319, metadata !1326}
!1330 = metadata !{i32 786688, metadata !1319, metadata !"x", metadata !673, i32 8, metadata !174, i32 0, metadata !1326} ; [ DW_TAG_auto_variable ]
!1331 = metadata !{i32 9, i32 3, metadata !1319, metadata !1326}
!1332 = metadata !{i32 10, i32 3, metadata !1319, metadata !1326}
!1333 = metadata !{i32 78, i32 16, metadata !1325, null}
!1334 = metadata !{i32 786688, metadata !1312, metadata !"i", metadata !673, i32 76, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1335 = metadata !{i32 80, i32 8, metadata !1312, null}
!1336 = metadata !{i32 786689, metadata !1337, metadata !"a", metadata !673, i32 16777230, metadata !174, i32 0, metadata !1335} ; [ DW_TAG_arg_variable ]
!1337 = metadata !{i32 786478, i32 0, metadata !673, metadata !"ge", metadata !"ge", metadata !"", metadata !673, i32 14, metadata !1315, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 15} ; [ DW_TAG_subprogram ]
!1338 = metadata !{i32 14, i32 39, metadata !1337, metadata !1335}
!1339 = metadata !{i32 786688, metadata !1340, metadata !"x", metadata !673, i32 16, metadata !154, i32 0, metadata !1335} ; [ DW_TAG_auto_variable ]
!1340 = metadata !{i32 786443, metadata !1337, i32 15, i32 1, metadata !673, i32 71} ; [ DW_TAG_lexical_block ]
!1341 = metadata !{i32 16, i32 21, metadata !1340, metadata !1335}
!1342 = metadata !{i32 17, i32 3, metadata !1340, metadata !1335}
!1343 = metadata !{i32 18, i32 3, metadata !1340, metadata !1335}
!1344 = metadata !{i32 19, i32 3, metadata !1340, metadata !1335}
!1345 = metadata !{i32 84, i32 3, metadata !1312, null}
!1346 = metadata !{i32 86, i32 5, metadata !1347, null}
!1347 = metadata !{i32 786443, metadata !1312, i32 85, i32 3, metadata !673, i32 2} ; [ DW_TAG_lexical_block ]
!1348 = metadata !{i32 85, i32 7, metadata !1347, null}
!1349 = metadata !{i32 85, i32 16, metadata !1347, null}
!1350 = metadata !{i32 87, i32 3, metadata !1312, null}
!1351 = metadata !{i32 88, i32 1, metadata !1312, null}
!1352 = metadata !{i32 790531, metadata !1353, metadata !"r.v", null, i32 168, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1353 = metadata !{i32 786689, metadata !1354, metadata !"r", metadata !673, i32 16777384, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1354 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_add", metadata !"crypto_sign_ed25519_ref_fe25519_add", metadata !"", metadata !673, i32 168, metadata !890, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 169} ; [ DW_TAG_subprogram ]
!1355 = metadata !{i32 168, i32 75, metadata !1354, null}
!1356 = metadata !{i32 790531, metadata !1357, metadata !"x.v", null, i32 168, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1357 = metadata !{i32 786689, metadata !1354, metadata !"x", metadata !673, i32 33554600, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1358 = metadata !{i32 168, i32 117, metadata !1354, null}
!1359 = metadata !{i32 790531, metadata !1360, metadata !"y.v", null, i32 168, metadata !681, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1360 = metadata !{i32 786689, metadata !1354, metadata !"y", metadata !673, i32 50331816, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1361 = metadata !{i32 168, i32 159, metadata !1354, null}
!1362 = metadata !{i32 171, i32 7, metadata !1363, null}
!1363 = metadata !{i32 786443, metadata !1364, i32 171, i32 3, metadata !673, i32 21} ; [ DW_TAG_lexical_block ]
!1364 = metadata !{i32 786443, metadata !1354, i32 169, i32 1, metadata !673, i32 20} ; [ DW_TAG_lexical_block ]
!1365 = metadata !{i32 171, i32 21, metadata !1363, null}
!1366 = metadata !{i32 171, i32 16, metadata !1363, null}
!1367 = metadata !{i32 786688, metadata !1364, metadata !"i", metadata !673, i32 170, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1368 = metadata !{i32 790531, metadata !945, metadata !"r.v", null, i32 33, metadata !681, i32 0, metadata !1369} ; [ DW_TAG_arg_variable_field ]
!1369 = metadata !{i32 172, i32 3, metadata !1364, null}
!1370 = metadata !{i32 33, i32 61, metadata !916, metadata !1369}
!1371 = metadata !{i32 40, i32 5, metadata !921, metadata !1369}
!1372 = metadata !{i32 43, i32 5, metadata !921, metadata !1369}
!1373 = metadata !{i32 38, i32 7, metadata !914, metadata !1369}
!1374 = metadata !{i32 786688, metadata !915, metadata !"t", metadata !673, i32 35, metadata !174, i32 0, metadata !1369} ; [ DW_TAG_auto_variable ]
!1375 = metadata !{i32 41, i32 5, metadata !921, metadata !1369}
!1376 = metadata !{i32 786689, metadata !925, metadata !"a", metadata !673, i32 16777239, metadata !174, i32 0, metadata !1377} ; [ DW_TAG_arg_variable ]
!1377 = metadata !{i32 42, i32 9, metadata !921, metadata !1369}
!1378 = metadata !{i32 23, i32 44, metadata !925, metadata !1377}
!1379 = metadata !{i32 25, i32 3, metadata !931, metadata !1377}
!1380 = metadata !{i32 44, i32 9, metadata !934, metadata !1369}
!1381 = metadata !{i32 46, i32 7, metadata !936, metadata !1369}
!1382 = metadata !{i32 47, i32 7, metadata !936, metadata !1369}
!1383 = metadata !{i32 48, i32 7, metadata !936, metadata !1369}
!1384 = metadata !{i32 786688, metadata !915, metadata !"i", metadata !673, i32 36, metadata !216, i32 0, metadata !1369} ; [ DW_TAG_auto_variable ]
!1385 = metadata !{i32 44, i32 18, metadata !934, metadata !1369}
!1386 = metadata !{i32 38, i32 19, metadata !914, metadata !1369}
!1387 = metadata !{i32 786688, metadata !915, metadata !"rep", metadata !673, i32 36, metadata !216, i32 0, metadata !1369} ; [ DW_TAG_auto_variable ]
!1388 = metadata !{i32 173, i32 1, metadata !1364, null}
!1389 = metadata !{metadata !1390}
!1390 = metadata !{i32 0, i32 7, metadata !1391}
!1391 = metadata !{metadata !1392}
!1392 = metadata !{metadata !"mem", metadata !1393, metadata !"unsigned char", i32 0, i32 7}
!1393 = metadata !{metadata !1394}
!1394 = metadata !{i32 0, i32 32767, i32 1}
!1395 = metadata !{metadata !1396}
!1396 = metadata !{i32 0, i32 31, metadata !1397}
!1397 = metadata !{metadata !1398}
!1398 = metadata !{metadata !"num_blocks", metadata !1399, metadata !"unsigned int", i32 0, i32 31}
!1399 = metadata !{metadata !1400}
!1400 = metadata !{i32 0, i32 0, i32 0}
!1401 = metadata !{metadata !1402}
!1402 = metadata !{i32 0, i32 7, metadata !1403}
!1403 = metadata !{metadata !1404}
!1404 = metadata !{metadata !"sk", metadata !1405, metadata !"unsigned char", i32 0, i32 7}
!1405 = metadata !{metadata !1406}
!1406 = metadata !{i32 0, i32 63, i32 1}
!1407 = metadata !{metadata !1408}
!1408 = metadata !{i32 0, i32 7, metadata !1409}
!1409 = metadata !{metadata !1410}
!1410 = metadata !{metadata !"signature_out", metadata !1405, metadata !"unsigned char", i32 0, i32 7}
!1411 = metadata !{metadata !1412}
!1412 = metadata !{i32 0, i32 31, metadata !1413}
!1413 = metadata !{metadata !1414}
!1414 = metadata !{metadata !"return", metadata !1415, metadata !"int", i32 0, i32 31}
!1415 = metadata !{metadata !1416}
!1416 = metadata !{i32 0, i32 1, i32 0}
!1417 = metadata !{i32 786689, metadata !1418, metadata !"dst", null, i32 13, metadata !601, i32 0, metadata !1422} ; [ DW_TAG_arg_variable ]
!1418 = metadata !{i32 786478, i32 0, metadata !1419, metadata !"_memcpy", metadata !"_memcpy", metadata !"", metadata !1419, i32 13, metadata !1420, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 13} ; [ DW_TAG_subprogram ]
!1419 = metadata !{i32 786473, metadata !"ed25519_ref/src/sign.c", metadata !"/home/michael/hardware_security/zcu102/root_of_trust/operational_os/hls", null} ; [ DW_TAG_file_type ]
!1420 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1421, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1421 = metadata !{null, metadata !388, metadata !388, metadata !154}
!1422 = metadata !{i32 35, i32 2, metadata !1423, metadata !1425}
!1423 = metadata !{i32 786443, metadata !1424, i32 34, i32 72, metadata !1419, i32 6} ; [ DW_TAG_lexical_block ]
!1424 = metadata !{i32 786478, i32 0, metadata !1419, metadata !"_memmove", metadata !"_memmove", metadata !"", metadata !1419, i32 34, metadata !1420, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 34} ; [ DW_TAG_subprogram ]
!1425 = metadata !{i32 78, i32 3, metadata !1426, null}
!1426 = metadata !{i32 786443, metadata !1427, i32 54, i32 1, metadata !1419, i32 7} ; [ DW_TAG_lexical_block ]
!1427 = metadata !{i32 786478, i32 0, metadata !1419, metadata !"crypto_sign", metadata !"crypto_sign", metadata !"", metadata !1419, i32 48, metadata !1428, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 54} ; [ DW_TAG_subprogram ]
!1428 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1429, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1429 = metadata !{metadata !216, metadata !388, metadata !154, metadata !388, metadata !388}
!1430 = metadata !{i32 13, i32 29, metadata !1418, metadata !1422}
!1431 = metadata !{i32 786689, metadata !1424, metadata !"dst", null, i32 34, metadata !601, i32 0, metadata !1425} ; [ DW_TAG_arg_variable ]
!1432 = metadata !{i32 34, i32 30, metadata !1424, metadata !1425}
!1433 = metadata !{i32 786688, metadata !1426, metadata !"temp_buf", metadata !1419, i32 71, metadata !230, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1434 = metadata !{i32 71, i32 17, metadata !1426, null}
!1435 = metadata !{i32 790529, metadata !1436, metadata !"sck.v", null, i32 73, metadata !1441, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1436 = metadata !{i32 786688, metadata !1426, metadata !"sck", metadata !1419, i32 73, metadata !1437, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1437 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_sc25519", metadata !1419, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !1438} ; [ DW_TAG_typedef ]
!1438 = metadata !{i32 786451, null, metadata !"", metadata !153, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1439, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1439 = metadata !{metadata !1440}
!1440 = metadata !{i32 786445, metadata !1438, metadata !"v", metadata !153, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !595} ; [ DW_TAG_member ]
!1441 = metadata !{i32 786452, null, metadata !"", metadata !153, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1439, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1442 = metadata !{i32 73, i32 35, metadata !1426, null}
!1443 = metadata !{i32 790529, metadata !1444, metadata !"scs.v", null, i32 73, metadata !1441, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1444 = metadata !{i32 786688, metadata !1426, metadata !"scs", metadata !1419, i32 73, metadata !1437, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1445 = metadata !{i32 73, i32 40, metadata !1426, null}
!1446 = metadata !{i32 790529, metadata !1447, metadata !"scsk.v", null, i32 73, metadata !1441, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1447 = metadata !{i32 786688, metadata !1426, metadata !"scsk", metadata !1419, i32 73, metadata !1437, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1448 = metadata !{i32 73, i32 45, metadata !1426, null}
!1449 = metadata !{i32 790529, metadata !1450, metadata !"ger.x.v", null, i32 74, metadata !1462, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1450 = metadata !{i32 786688, metadata !1426, metadata !"ger", metadata !1419, i32 74, metadata !1451, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1451 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_ge25519", metadata !1419, i32 21, i64 0, i64 0, i64 0, i32 0, metadata !1452} ; [ DW_TAG_typedef ]
!1452 = metadata !{i32 786451, null, metadata !"", metadata !177, i32 15, i64 4096, i64 32, i32 0, i32 0, null, metadata !1453, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1453 = metadata !{metadata !1454, metadata !1459, metadata !1460, metadata !1461}
!1454 = metadata !{i32 786445, metadata !1452, metadata !"x", metadata !177, i32 17, i64 1024, i64 32, i64 0, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1455 = metadata !{i32 786454, null, metadata !"crypto_sign_ed25519_ref_fe25519", metadata !177, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !1456} ; [ DW_TAG_typedef ]
!1456 = metadata !{i32 786451, null, metadata !"", metadata !169, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1457, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1457 = metadata !{metadata !1458}
!1458 = metadata !{i32 786445, metadata !1456, metadata !"v", metadata !169, i32 27, i64 1024, i64 32, i64 0, i32 0, metadata !595} ; [ DW_TAG_member ]
!1459 = metadata !{i32 786445, metadata !1452, metadata !"y", metadata !177, i32 18, i64 1024, i64 32, i64 1024, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1460 = metadata !{i32 786445, metadata !1452, metadata !"z", metadata !177, i32 19, i64 1024, i64 32, i64 2048, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1461 = metadata !{i32 786445, metadata !1452, metadata !"t", metadata !177, i32 20, i64 1024, i64 32, i64 3072, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1462 = metadata !{i32 786452, null, metadata !"", metadata !177, i32 15, i64 1024, i64 32, i32 0, i32 0, null, metadata !1463, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1463 = metadata !{metadata !1464}
!1464 = metadata !{i32 786452, null, metadata !"", metadata !169, i32 25, i64 1024, i64 32, i32 0, i32 0, null, metadata !1457, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1465 = metadata !{i32 74, i32 35, metadata !1426, null}
!1466 = metadata !{i32 790529, metadata !1450, metadata !"ger.y.v", null, i32 74, metadata !1462, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1467 = metadata !{i32 790529, metadata !1450, metadata !"ger.z.v", null, i32 74, metadata !1462, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1468 = metadata !{i32 790529, metadata !1469, metadata !"hash.state", null, i32 75, metadata !1477, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1469 = metadata !{i32 786688, metadata !1426, metadata !"hash", metadata !1419, i32 75, metadata !1470, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1470 = metadata !{i32 786454, null, metadata !"sha512_context", metadata !1419, i32 15, i64 0, i64 0, i64 0, i32 0, metadata !1471} ; [ DW_TAG_typedef ]
!1471 = metadata !{i32 786451, null, metadata !"sha512_context_", metadata !141, i32 11, i64 1664, i64 64, i32 0, i32 0, null, metadata !1472, i32 0, i32 0} ; [ DW_TAG_structure_type ]
!1472 = metadata !{metadata !1473, metadata !1474, metadata !1475, metadata !1476}
!1473 = metadata !{i32 786445, metadata !1471, metadata !"length", metadata !141, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !140} ; [ DW_TAG_member ]
!1474 = metadata !{i32 786445, metadata !1471, metadata !"state", metadata !141, i32 12, i64 512, i64 64, i64 64, i32 0, metadata !223} ; [ DW_TAG_member ]
!1475 = metadata !{i32 786445, metadata !1471, metadata !"curlen", metadata !141, i32 13, i64 64, i64 64, i64 576, i32 0, metadata !227} ; [ DW_TAG_member ]
!1476 = metadata !{i32 786445, metadata !1471, metadata !"buf", metadata !141, i32 14, i64 1024, i64 8, i64 640, i32 0, metadata !230} ; [ DW_TAG_member ]
!1477 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 512, i64 64, i32 0, i32 0, null, metadata !1478, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1478 = metadata !{metadata !1474}
!1479 = metadata !{i32 75, i32 18, metadata !1426, null}
!1480 = metadata !{i32 790529, metadata !1469, metadata !"hash.buf", null, i32 75, metadata !1481, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1481 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 1024, i64 64, i32 0, i32 0, null, metadata !1482, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1482 = metadata !{metadata !1476}
!1483 = metadata !{i32 786689, metadata !1427, metadata !"mem", null, i32 49, metadata !1484, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1484 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 262144, i64 8, i32 0, i32 0, metadata !231, metadata !1485, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1485 = metadata !{metadata !1486}
!1486 = metadata !{i32 786465, i64 0, i64 32767}  ; [ DW_TAG_subrange_type ]
!1487 = metadata !{i32 49, i32 17, metadata !1427, null}
!1488 = metadata !{i32 786689, metadata !1427, metadata !"num_blocks", metadata !1419, i32 33554482, metadata !154, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1489 = metadata !{i32 50, i32 16, metadata !1427, null}
!1490 = metadata !{i32 786689, metadata !1427, metadata !"sk", null, i32 51, metadata !394, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1491 = metadata !{i32 51, i32 17, metadata !1427, null}
!1492 = metadata !{i32 786689, metadata !1427, metadata !"signature_out", null, i32 52, metadata !394, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1493 = metadata !{i32 52, i32 17, metadata !1427, null}
!1494 = metadata !{i32 55, i32 1, metadata !1426, null}
!1495 = metadata !{i32 58, i32 1, metadata !1426, null}
!1496 = metadata !{i32 60, i32 1, metadata !1426, null}
!1497 = metadata !{i32 61, i32 1, metadata !1426, null}
!1498 = metadata !{i32 62, i32 1, metadata !1426, null}
!1499 = metadata !{i32 63, i32 1, metadata !1426, null}
!1500 = metadata !{i32 64, i32 1, metadata !1426, null}
!1501 = metadata !{i32 786688, metadata !1426, metadata !"pk", metadata !1419, i32 65, metadata !601, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1502 = metadata !{i32 65, i32 16, metadata !1426, null}
!1503 = metadata !{i32 786688, metadata !1426, metadata !"az", metadata !1419, i32 66, metadata !394, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1504 = metadata !{i32 66, i32 17, metadata !1426, null}
!1505 = metadata !{i32 786688, metadata !1426, metadata !"nonce", metadata !1419, i32 67, metadata !394, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1506 = metadata !{i32 67, i32 17, metadata !1426, null}
!1507 = metadata !{i32 786688, metadata !1426, metadata !"hram", metadata !1419, i32 68, metadata !394, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1508 = metadata !{i32 68, i32 17, metadata !1426, null}
!1509 = metadata !{i32 786688, metadata !1426, metadata !"signature", metadata !1419, i32 70, metadata !394, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1510 = metadata !{i32 70, i32 17, metadata !1426, null}
!1511 = metadata !{i32 70, i32 36, metadata !1426, null}
!1512 = metadata !{i32 15, i32 6, metadata !1513, metadata !1422}
!1513 = metadata !{i32 786443, metadata !1514, i32 15, i32 2, metadata !1419, i32 1} ; [ DW_TAG_lexical_block ]
!1514 = metadata !{i32 786443, metadata !1418, i32 13, i32 71, metadata !1419, i32 0} ; [ DW_TAG_lexical_block ]
!1515 = metadata !{i32 16, i32 3, metadata !1516, metadata !1422}
!1516 = metadata !{i32 786443, metadata !1513, i32 15, i32 22, metadata !1419, i32 2} ; [ DW_TAG_lexical_block ]
!1517 = metadata !{i32 15, i32 18, metadata !1513, metadata !1422}
!1518 = metadata !{i32 786688, metadata !1514, metadata !"i", metadata !1419, i32 14, metadata !216, i32 0, metadata !1422} ; [ DW_TAG_auto_variable ]
!1519 = metadata !{i32 82, i32 3, metadata !1426, null}
!1520 = metadata !{i32 83, i32 3, metadata !1426, null}
!1521 = metadata !{i32 790529, metadata !1469, metadata !"hash.length", null, i32 75, metadata !1522, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1522 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !1523, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1523 = metadata !{metadata !1473}
!1524 = metadata !{i32 790529, metadata !1469, metadata !"hash.curlen", null, i32 75, metadata !1525, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1525 = metadata !{i32 786452, null, metadata !"sha512_context_", metadata !141, i32 11, i64 64, i64 64, i32 0, i32 0, null, metadata !1526, i32 0, i32 0} ; [ DW_TAG_structure_field_type ]
!1526 = metadata !{metadata !1475}
!1527 = metadata !{i32 84, i32 3, metadata !1426, null}
!1528 = metadata !{i32 86, i32 3, metadata !1426, null}
!1529 = metadata !{i32 87, i32 3, metadata !1426, null}
!1530 = metadata !{i32 88, i32 3, metadata !1426, null}
!1531 = metadata !{i32 15, i32 6, metadata !1513, metadata !1532}
!1532 = metadata !{i32 35, i32 2, metadata !1423, metadata !1533}
!1533 = metadata !{i32 96, i32 3, metadata !1426, null}
!1534 = metadata !{i32 16, i32 3, metadata !1516, metadata !1532}
!1535 = metadata !{i32 15, i32 18, metadata !1513, metadata !1532}
!1536 = metadata !{i32 786688, metadata !1514, metadata !"i", metadata !1419, i32 14, metadata !216, i32 0, metadata !1532} ; [ DW_TAG_auto_variable ]
!1537 = metadata !{i32 100, i32 3, metadata !1426, null}
!1538 = metadata !{i32 102, i32 3, metadata !1426, null}
!1539 = metadata !{i32 104, i32 7, metadata !1540, null}
!1540 = metadata !{i32 786443, metadata !1426, i32 104, i32 3, metadata !1419, i32 8} ; [ DW_TAG_lexical_block ]
!1541 = metadata !{i32 107, i32 5, metadata !1542, null}
!1542 = metadata !{i32 786443, metadata !1543, i32 106, i32 24, metadata !1419, i32 11} ; [ DW_TAG_lexical_block ]
!1543 = metadata !{i32 786443, metadata !1544, i32 106, i32 4, metadata !1419, i32 10} ; [ DW_TAG_lexical_block ]
!1544 = metadata !{i32 786443, metadata !1540, i32 104, i32 30, metadata !1419, i32 9} ; [ DW_TAG_lexical_block ]
!1545 = metadata !{i32 106, i32 8, metadata !1543, null}
!1546 = metadata !{i32 106, i32 20, metadata !1543, null}
!1547 = metadata !{i32 786688, metadata !1426, metadata !"j", metadata !1419, i32 72, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1548 = metadata !{i32 109, i32 4, metadata !1544, null}
!1549 = metadata !{i32 104, i32 26, metadata !1540, null}
!1550 = metadata !{i32 786688, metadata !1426, metadata !"i", metadata !1419, i32 72, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1551 = metadata !{i32 111, i32 3, metadata !1426, null}
!1552 = metadata !{i32 790531, metadata !1553, metadata !"r.v", null, i32 107, metadata !596, i32 0, metadata !1557} ; [ DW_TAG_arg_variable_field ]
!1553 = metadata !{i32 786689, metadata !1554, metadata !"r", metadata !149, i32 16777323, metadata !590, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1554 = metadata !{i32 786478, i32 0, metadata !149, metadata !"crypto_sign_ed25519_ref_sc25519_from64bytes", metadata !"crypto_sign_ed25519_ref_sc25519_from64bytes", metadata !"", metadata !149, i32 107, metadata !1555, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 108} ; [ DW_TAG_subprogram ]
!1555 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1556, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1556 = metadata !{null, metadata !590, metadata !234}
!1557 = metadata !{i32 114, i32 3, metadata !1426, null}
!1558 = metadata !{i32 107, i32 83, metadata !1554, metadata !1557}
!1559 = metadata !{i32 786689, metadata !1554, metadata !"x", null, i32 107, metadata !304, i32 0, metadata !1557} ; [ DW_TAG_arg_variable ]
!1560 = metadata !{i32 107, i32 106, metadata !1554, metadata !1557}
!1561 = metadata !{i32 786688, metadata !1562, metadata !"t", metadata !149, i32 110, metadata !813, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1562 = metadata !{i32 786443, metadata !1554, i32 108, i32 1, metadata !149, i32 5} ; [ DW_TAG_lexical_block ]
!1563 = metadata !{i32 110, i32 17, metadata !1562, metadata !1557}
!1564 = metadata !{i32 111, i32 7, metadata !1565, metadata !1557}
!1565 = metadata !{i32 786443, metadata !1562, i32 111, i32 3, metadata !149, i32 6} ; [ DW_TAG_lexical_block ]
!1566 = metadata !{i32 111, i32 21, metadata !1565, metadata !1557}
!1567 = metadata !{i32 111, i32 16, metadata !1565, metadata !1557}
!1568 = metadata !{i32 786688, metadata !1562, metadata !"i", metadata !149, i32 109, metadata !216, i32 0, metadata !1557} ; [ DW_TAG_auto_variable ]
!1569 = metadata !{i32 112, i32 3, metadata !1562, metadata !1557}
!1570 = metadata !{i32 115, i32 3, metadata !1426, null}
!1571 = metadata !{i32 786689, metadata !1572, metadata !"r", null, i32 234, metadata !394, i32 0, metadata !1576} ; [ DW_TAG_arg_variable ]
!1572 = metadata !{i32 786478, i32 0, metadata !167, metadata !"crypto_sign_ed25519_ref_pack", metadata !"crypto_sign_ed25519_ref_pack", metadata !"", metadata !167, i32 234, metadata !1573, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 235} ; [ DW_TAG_subprogram ]
!1573 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1574, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1574 = metadata !{null, metadata !388, metadata !1575}
!1575 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !189} ; [ DW_TAG_pointer_type ]
!1576 = metadata !{i32 117, i32 3, metadata !1426, null}
!1577 = metadata !{i32 234, i32 49, metadata !1572, metadata !1576}
!1578 = metadata !{i32 790531, metadata !1579, metadata !"p.x.v", null, i32 234, metadata !645, i32 0, metadata !1576} ; [ DW_TAG_arg_variable_field ]
!1579 = metadata !{i32 786689, metadata !1572, metadata !"p", metadata !167, i32 33554666, metadata !1575, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1580 = metadata !{i32 234, i32 95, metadata !1572, metadata !1576}
!1581 = metadata !{i32 790531, metadata !1579, metadata !"p.y.v", null, i32 234, metadata !645, i32 0, metadata !1576} ; [ DW_TAG_arg_variable_field ]
!1582 = metadata !{i32 790531, metadata !1579, metadata !"p.z.v", null, i32 234, metadata !645, i32 0, metadata !1576} ; [ DW_TAG_arg_variable_field ]
!1583 = metadata !{i32 790529, metadata !1584, metadata !"tx.v", null, i32 236, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1584 = metadata !{i32 786688, metadata !1585, metadata !"tx", metadata !167, i32 236, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1585 = metadata !{i32 786443, metadata !1572, i32 235, i32 1, metadata !167, i32 1} ; [ DW_TAG_lexical_block ]
!1586 = metadata !{i32 236, i32 35, metadata !1585, metadata !1576}
!1587 = metadata !{i32 790529, metadata !1588, metadata !"ty.v", null, i32 236, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1588 = metadata !{i32 786688, metadata !1585, metadata !"ty", metadata !167, i32 236, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1589 = metadata !{i32 236, i32 39, metadata !1585, metadata !1576}
!1590 = metadata !{i32 790529, metadata !1591, metadata !"zi.v", null, i32 236, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1591 = metadata !{i32 786688, metadata !1585, metadata !"zi", metadata !167, i32 236, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1592 = metadata !{i32 236, i32 43, metadata !1585, metadata !1576}
!1593 = metadata !{i32 237, i32 3, metadata !1585, metadata !1576}
!1594 = metadata !{i32 240, i32 3, metadata !1585, metadata !1576}
!1595 = metadata !{i32 241, i32 12, metadata !1585, metadata !1576}
!1596 = metadata !{i32 122, i32 3, metadata !1426, null}
!1597 = metadata !{i32 126, i32 3, metadata !1426, null}
!1598 = metadata !{i32 127, i32 3, metadata !1426, null}
!1599 = metadata !{i32 128, i32 3, metadata !1426, null}
!1600 = metadata !{i32 130, i32 7, metadata !1601, null}
!1601 = metadata !{i32 786443, metadata !1426, i32 130, i32 3, metadata !1419, i32 12} ; [ DW_TAG_lexical_block ]
!1602 = metadata !{i32 133, i32 7, metadata !1603, null}
!1603 = metadata !{i32 786443, metadata !1604, i32 132, i32 25, metadata !1419, i32 15} ; [ DW_TAG_lexical_block ]
!1604 = metadata !{i32 786443, metadata !1605, i32 132, i32 5, metadata !1419, i32 14} ; [ DW_TAG_lexical_block ]
!1605 = metadata !{i32 786443, metadata !1601, i32 130, i32 30, metadata !1419, i32 13} ; [ DW_TAG_lexical_block ]
!1606 = metadata !{i32 132, i32 9, metadata !1604, null}
!1607 = metadata !{i32 132, i32 21, metadata !1604, null}
!1608 = metadata !{i32 135, i32 2, metadata !1605, null}
!1609 = metadata !{i32 130, i32 26, metadata !1601, null}
!1610 = metadata !{i32 137, i32 3, metadata !1426, null}
!1611 = metadata !{i32 790531, metadata !1553, metadata !"r.v", null, i32 107, metadata !596, i32 0, metadata !1612} ; [ DW_TAG_arg_variable_field ]
!1612 = metadata !{i32 141, i32 3, metadata !1426, null}
!1613 = metadata !{i32 107, i32 83, metadata !1554, metadata !1612}
!1614 = metadata !{i32 786689, metadata !1554, metadata !"x", null, i32 107, metadata !304, i32 0, metadata !1612} ; [ DW_TAG_arg_variable ]
!1615 = metadata !{i32 107, i32 106, metadata !1554, metadata !1612}
!1616 = metadata !{i32 110, i32 17, metadata !1562, metadata !1612}
!1617 = metadata !{i32 111, i32 7, metadata !1565, metadata !1612}
!1618 = metadata !{i32 111, i32 21, metadata !1565, metadata !1612}
!1619 = metadata !{i32 111, i32 16, metadata !1565, metadata !1612}
!1620 = metadata !{i32 786688, metadata !1562, metadata !"i", metadata !149, i32 109, metadata !216, i32 0, metadata !1612} ; [ DW_TAG_auto_variable ]
!1621 = metadata !{i32 112, i32 3, metadata !1562, metadata !1612}
!1622 = metadata !{i32 790531, metadata !1623, metadata !"r.v", null, i32 92, metadata !596, i32 0, metadata !1625} ; [ DW_TAG_arg_variable_field ]
!1623 = metadata !{i32 786689, metadata !1624, metadata !"r", metadata !149, i32 16777308, metadata !590, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1624 = metadata !{i32 786478, i32 0, metadata !149, metadata !"crypto_sign_ed25519_ref_sc25519_from32bytes", metadata !"crypto_sign_ed25519_ref_sc25519_from32bytes", metadata !"", metadata !149, i32 92, metadata !1555, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 93} ; [ DW_TAG_subprogram ]
!1625 = metadata !{i32 142, i32 3, metadata !1426, null}
!1626 = metadata !{i32 92, i32 83, metadata !1624, metadata !1625}
!1627 = metadata !{i32 786689, metadata !1624, metadata !"x", null, i32 92, metadata !304, i32 0, metadata !1625} ; [ DW_TAG_arg_variable ]
!1628 = metadata !{i32 92, i32 106, metadata !1624, metadata !1625}
!1629 = metadata !{i32 786688, metadata !1630, metadata !"t", metadata !149, i32 95, metadata !813, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1630 = metadata !{i32 786443, metadata !1624, i32 93, i32 1, metadata !149, i32 0} ; [ DW_TAG_lexical_block ]
!1631 = metadata !{i32 95, i32 17, metadata !1630, metadata !1625}
!1632 = metadata !{i32 96, i32 7, metadata !1633, metadata !1625}
!1633 = metadata !{i32 786443, metadata !1630, i32 96, i32 3, metadata !149, i32 1} ; [ DW_TAG_lexical_block ]
!1634 = metadata !{i32 97, i32 7, metadata !1635, metadata !1625}
!1635 = metadata !{i32 786443, metadata !1630, i32 97, i32 3, metadata !149, i32 2} ; [ DW_TAG_lexical_block ]
!1636 = metadata !{i32 96, i32 21, metadata !1633, metadata !1625}
!1637 = metadata !{i32 96, i32 16, metadata !1633, metadata !1625}
!1638 = metadata !{i32 786688, metadata !1630, metadata !"i", metadata !149, i32 94, metadata !216, i32 0, metadata !1625} ; [ DW_TAG_auto_variable ]
!1639 = metadata !{i32 97, i32 22, metadata !1635, metadata !1625}
!1640 = metadata !{i32 97, i32 17, metadata !1635, metadata !1625}
!1641 = metadata !{i32 98, i32 3, metadata !1630, metadata !1625}
!1642 = metadata !{i32 786689, metadata !1643, metadata !"r", null, i32 124, metadata !394, i32 0, metadata !1646} ; [ DW_TAG_arg_variable ]
!1643 = metadata !{i32 786478, i32 0, metadata !149, metadata !"crypto_sign_ed25519_ref_sc25519_to32bytes", metadata !"crypto_sign_ed25519_ref_sc25519_to32bytes", metadata !"", metadata !149, i32 124, metadata !1644, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 125} ; [ DW_TAG_subprogram ]
!1644 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1645, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1645 = metadata !{null, metadata !388, metadata !755}
!1646 = metadata !{i32 148, i32 3, metadata !1426, null}
!1647 = metadata !{i32 124, i32 62, metadata !1643, metadata !1646}
!1648 = metadata !{i32 790531, metadata !1649, metadata !"x.v", null, i32 124, metadata !596, i32 0, metadata !1646} ; [ DW_TAG_arg_variable_field ]
!1649 = metadata !{i32 786689, metadata !1643, metadata !"x", metadata !149, i32 33554556, metadata !755, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1650 = metadata !{i32 124, i32 108, metadata !1643, metadata !1646}
!1651 = metadata !{i32 127, i32 7, metadata !1652, metadata !1646}
!1652 = metadata !{i32 786443, metadata !1653, i32 127, i32 3, metadata !149, i32 11} ; [ DW_TAG_lexical_block ]
!1653 = metadata !{i32 786443, metadata !1643, i32 125, i32 1, metadata !149, i32 10} ; [ DW_TAG_lexical_block ]
!1654 = metadata !{i32 15, i32 6, metadata !1513, metadata !1655}
!1655 = metadata !{i32 154, i32 3, metadata !1426, null}
!1656 = metadata !{i32 127, i32 21, metadata !1652, metadata !1646}
!1657 = metadata !{i32 127, i32 16, metadata !1652, metadata !1646}
!1658 = metadata !{i32 786688, metadata !1653, metadata !"i", metadata !149, i32 126, metadata !216, i32 0, metadata !1646} ; [ DW_TAG_auto_variable ]
!1659 = metadata !{i32 16, i32 3, metadata !1516, metadata !1655}
!1660 = metadata !{i32 15, i32 18, metadata !1513, metadata !1655}
!1661 = metadata !{i32 786688, metadata !1514, metadata !"i", metadata !1419, i32 14, metadata !216, i32 0, metadata !1655} ; [ DW_TAG_auto_variable ]
!1662 = metadata !{i32 155, i32 3, metadata !1426, null}
!1663 = metadata !{i9 -256, i9 255, i9 1, i9 -88} ; [ DW_TAG_auto_variable ]
!1664 = metadata !{i8 0, i8 1, i8 0, i8 1}        
!1665 = metadata !{i32 790531, metadata !1666, metadata !"r.x.v", null, i32 137, metadata !709, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1666 = metadata !{i32 786689, metadata !1667, metadata !"r", metadata !167, i32 16777353, metadata !1670, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1667 = metadata !{i32 786478, i32 0, metadata !167, metadata !"cmov_aff", metadata !"cmov_aff", metadata !"", metadata !167, i32 137, metadata !1668, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 138} ; [ DW_TAG_subprogram ]
!1668 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1669, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1669 = metadata !{null, metadata !1670, metadata !701, metadata !231}
!1670 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !203} ; [ DW_TAG_pointer_type ]
!1671 = metadata !{i32 137, i32 35, metadata !1667, null}
!1672 = metadata !{i32 790531, metadata !1666, metadata !"r.y.v", null, i32 137, metadata !709, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1673 = metadata !{i32 790531, metadata !1674, metadata !"p.x.v", null, i32 137, metadata !180, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1674 = metadata !{i32 786689, metadata !1667, metadata !"p", metadata !167, i32 33554569, metadata !701, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1675 = metadata !{i32 137, i32 57, metadata !1667, null}
!1676 = metadata !{i32 790531, metadata !1674, metadata !"p.y.v", null, i32 137, metadata !180, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1677 = metadata !{i32 786689, metadata !1667, metadata !"b", metadata !167, i32 50331785, metadata !231, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1678 = metadata !{i32 137, i32 74, metadata !1667, null}
!1679 = metadata !{i32 790531, metadata !1680, metadata !"r.v", null, i32 131, metadata !681, i32 0, metadata !1684} ; [ DW_TAG_arg_variable_field ]
!1680 = metadata !{i32 786689, metadata !1681, metadata !"r", metadata !673, i32 16777347, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1681 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_cmov", metadata !"crypto_sign_ed25519_ref_fe25519_cmov", metadata !"", metadata !673, i32 131, metadata !1682, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 132} ; [ DW_TAG_subprogram ]
!1682 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1683, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1683 = metadata !{null, metadata !676, metadata !892, metadata !231}
!1684 = metadata !{i32 139, i32 3, metadata !1685, null}
!1685 = metadata !{i32 786443, metadata !1667, i32 138, i32 1, metadata !167, i32 14} ; [ DW_TAG_lexical_block ]
!1686 = metadata !{i32 131, i32 76, metadata !1681, metadata !1684}
!1687 = metadata !{i32 790531, metadata !1688, metadata !"x.v", null, i32 131, metadata !1689, i32 0, metadata !1684} ; [ DW_TAG_arg_variable_field ]
!1688 = metadata !{i32 786689, metadata !1681, metadata !"x", metadata !673, i32 33554563, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1689 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 435200, i64 32, i32 0, i32 0, metadata !682, metadata !182, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1690 = metadata !{i32 131, i32 118, metadata !1681, metadata !1684}
!1691 = metadata !{i32 786689, metadata !1681, metadata !"b", metadata !673, i32 50331779, metadata !231, i32 0, metadata !1684} ; [ DW_TAG_arg_variable ]
!1692 = metadata !{i32 131, i32 135, metadata !1681, metadata !1684}
!1693 = metadata !{i32 134, i32 25, metadata !1694, metadata !1684}
!1694 = metadata !{i32 786443, metadata !1681, i32 132, i32 1, metadata !673, i32 11} ; [ DW_TAG_lexical_block ]
!1695 = metadata !{i32 786688, metadata !1694, metadata !"mask", metadata !673, i32 134, metadata !174, i32 0, metadata !1684} ; [ DW_TAG_auto_variable ]
!1696 = metadata !{i32 135, i32 3, metadata !1694, metadata !1684}
!1697 = metadata !{i32 786688, metadata !1694, metadata !"mask", metadata !673, i32 134, metadata !174, i32 0, metadata !1698} ; [ DW_TAG_auto_variable ]
!1698 = metadata !{i32 140, i32 3, metadata !1685, null}
!1699 = metadata !{i32 135, i32 3, metadata !1694, metadata !1698}
!1700 = metadata !{i32 136, i32 7, metadata !1701, metadata !1684}
!1701 = metadata !{i32 786443, metadata !1694, i32 136, i32 3, metadata !673, i32 12} ; [ DW_TAG_lexical_block ]
!1702 = metadata !{i32 136, i32 7, metadata !1701, metadata !1698}
!1703 = metadata !{i32 136, i32 21, metadata !1701, metadata !1684}
!1704 = metadata !{i32 136, i32 16, metadata !1701, metadata !1684}
!1705 = metadata !{i32 786688, metadata !1694, metadata !"i", metadata !673, i32 133, metadata !216, i32 0, metadata !1684} ; [ DW_TAG_auto_variable ]
!1706 = metadata !{i32 136, i32 21, metadata !1701, metadata !1698}
!1707 = metadata !{i32 136, i32 16, metadata !1701, metadata !1698}
!1708 = metadata !{i32 786688, metadata !1694, metadata !"i", metadata !673, i32 133, metadata !216, i32 0, metadata !1698} ; [ DW_TAG_auto_variable ]
!1709 = metadata !{i32 141, i32 1, metadata !1685, null}
!1710 = metadata !{i32 790531, metadata !1711, metadata !"r.v", null, i32 153, metadata !681, i32 0, metadata !1713} ; [ DW_TAG_arg_variable_field ]
!1711 = metadata !{i32 786689, metadata !1712, metadata !"r", metadata !673, i32 16777369, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1712 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_setzero", metadata !"crypto_sign_ed25519_ref_fe25519_setzero", metadata !"", metadata !673, i32 153, metadata !674, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 154} ; [ DW_TAG_subprogram ]
!1713 = metadata !{i32 164, i32 3, metadata !1714, metadata !1716}
!1714 = metadata !{i32 786443, metadata !1715, i32 160, i32 1, metadata !673, i32 18} ; [ DW_TAG_lexical_block ]
!1715 = metadata !{i32 786478, i32 0, metadata !673, metadata !"crypto_sign_ed25519_ref_fe25519_neg", metadata !"crypto_sign_ed25519_ref_fe25519_neg", metadata !"", metadata !673, i32 159, metadata !1038, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 160} ; [ DW_TAG_subprogram ]
!1716 = metadata !{i32 170, i32 3, metadata !1717, null}
!1717 = metadata !{i32 786443, metadata !1718, i32 162, i32 1, metadata !167, i32 11} ; [ DW_TAG_lexical_block ]
!1718 = metadata !{i32 786478, i32 0, metadata !167, metadata !"choose_t", metadata !"choose_t", metadata !"", metadata !167, i32 161, metadata !1719, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 162} ; [ DW_TAG_subprogram ]
!1719 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1720, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1720 = metadata !{null, metadata !1670, metadata !142, metadata !754}
!1721 = metadata !{i32 153, i32 79, metadata !1712, metadata !1713}
!1722 = metadata !{i32 790531, metadata !1723, metadata !"t.x.v", null, i32 161, metadata !709, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1723 = metadata !{i32 786689, metadata !1718, metadata !"t", metadata !167, i32 16777377, metadata !1670, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1724 = metadata !{i32 161, i32 35, metadata !1718, null}
!1725 = metadata !{i32 790531, metadata !1723, metadata !"t.y.v", null, i32 161, metadata !709, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1726 = metadata !{i32 786689, metadata !1718, metadata !"pos", metadata !167, i32 33554593, metadata !142, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1727 = metadata !{i32 161, i32 57, metadata !1718, null}
!1728 = metadata !{i32 786689, metadata !1718, metadata !"b", metadata !167, i32 50331809, metadata !754, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1729 = metadata !{i32 161, i32 74, metadata !1718, null}
!1730 = metadata !{i32 790529, metadata !1731, metadata !"v.v", null, i32 164, metadata !168, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1731 = metadata !{i32 786688, metadata !1717, metadata !"v", metadata !167, i32 164, metadata !194, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1732 = metadata !{i32 164, i32 35, metadata !1717, null}
!1733 = metadata !{i32 165, i32 3, metadata !1717, null}
!1734 = metadata !{i32 166, i32 3, metadata !1717, null}
!1735 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1739} ; [ DW_TAG_arg_variable ]
!1736 = metadata !{i32 786478, i32 0, metadata !167, metadata !"equal", metadata !"equal", metadata !"", metadata !167, i32 143, metadata !1737, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 144} ; [ DW_TAG_subprogram ]
!1737 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1738, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1738 = metadata !{metadata !231, metadata !754, metadata !754}
!1739 = metadata !{i32 166, i32 55, metadata !1717, null}
!1740 = metadata !{i32 143, i32 40, metadata !1736, metadata !1739}
!1741 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1739} ; [ DW_TAG_auto_variable ]
!1742 = metadata !{i32 786443, metadata !1736, i32 144, i32 1, metadata !167, i32 13} ; [ DW_TAG_lexical_block ]
!1743 = metadata !{i32 145, i32 23, metadata !1742, metadata !1739}
!1744 = metadata !{i32 147, i32 28, metadata !1742, metadata !1739}
!1745 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1739} ; [ DW_TAG_auto_variable ]
!1746 = metadata !{i32 148, i32 22, metadata !1742, metadata !1739}
!1747 = metadata !{i32 149, i32 3, metadata !1742, metadata !1739}
!1748 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1739} ; [ DW_TAG_auto_variable ]
!1749 = metadata !{i32 150, i32 3, metadata !1742, metadata !1739}
!1750 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1751} ; [ DW_TAG_arg_variable ]
!1751 = metadata !{i32 166, i32 68, metadata !1717, null}
!1752 = metadata !{i32 143, i32 40, metadata !1736, metadata !1751}
!1753 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1751} ; [ DW_TAG_auto_variable ]
!1754 = metadata !{i32 145, i32 23, metadata !1742, metadata !1751}
!1755 = metadata !{i32 147, i32 28, metadata !1742, metadata !1751}
!1756 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1751} ; [ DW_TAG_auto_variable ]
!1757 = metadata !{i32 148, i32 22, metadata !1742, metadata !1751}
!1758 = metadata !{i32 149, i32 3, metadata !1742, metadata !1751}
!1759 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1751} ; [ DW_TAG_auto_variable ]
!1760 = metadata !{i32 150, i32 3, metadata !1742, metadata !1751}
!1761 = metadata !{i32 167, i32 3, metadata !1717, null}
!1762 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1763} ; [ DW_TAG_arg_variable ]
!1763 = metadata !{i32 167, i32 55, metadata !1717, null}
!1764 = metadata !{i32 143, i32 40, metadata !1736, metadata !1763}
!1765 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1763} ; [ DW_TAG_auto_variable ]
!1766 = metadata !{i32 145, i32 23, metadata !1742, metadata !1763}
!1767 = metadata !{i32 147, i32 28, metadata !1742, metadata !1763}
!1768 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1763} ; [ DW_TAG_auto_variable ]
!1769 = metadata !{i32 148, i32 22, metadata !1742, metadata !1763}
!1770 = metadata !{i32 149, i32 3, metadata !1742, metadata !1763}
!1771 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1763} ; [ DW_TAG_auto_variable ]
!1772 = metadata !{i32 150, i32 3, metadata !1742, metadata !1763}
!1773 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1774} ; [ DW_TAG_arg_variable ]
!1774 = metadata !{i32 167, i32 68, metadata !1717, null}
!1775 = metadata !{i32 143, i32 40, metadata !1736, metadata !1774}
!1776 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1774} ; [ DW_TAG_auto_variable ]
!1777 = metadata !{i32 145, i32 23, metadata !1742, metadata !1774}
!1778 = metadata !{i32 147, i32 28, metadata !1742, metadata !1774}
!1779 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1774} ; [ DW_TAG_auto_variable ]
!1780 = metadata !{i32 148, i32 22, metadata !1742, metadata !1774}
!1781 = metadata !{i32 149, i32 3, metadata !1742, metadata !1774}
!1782 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1774} ; [ DW_TAG_auto_variable ]
!1783 = metadata !{i32 150, i32 3, metadata !1742, metadata !1774}
!1784 = metadata !{i32 168, i32 3, metadata !1717, null}
!1785 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1786} ; [ DW_TAG_arg_variable ]
!1786 = metadata !{i32 168, i32 55, metadata !1717, null}
!1787 = metadata !{i32 143, i32 40, metadata !1736, metadata !1786}
!1788 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1786} ; [ DW_TAG_auto_variable ]
!1789 = metadata !{i32 145, i32 23, metadata !1742, metadata !1786}
!1790 = metadata !{i32 147, i32 28, metadata !1742, metadata !1786}
!1791 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1786} ; [ DW_TAG_auto_variable ]
!1792 = metadata !{i32 148, i32 22, metadata !1742, metadata !1786}
!1793 = metadata !{i32 149, i32 3, metadata !1742, metadata !1786}
!1794 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1786} ; [ DW_TAG_auto_variable ]
!1795 = metadata !{i32 150, i32 3, metadata !1742, metadata !1786}
!1796 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1797} ; [ DW_TAG_arg_variable ]
!1797 = metadata !{i32 168, i32 68, metadata !1717, null}
!1798 = metadata !{i32 143, i32 40, metadata !1736, metadata !1797}
!1799 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1797} ; [ DW_TAG_auto_variable ]
!1800 = metadata !{i32 145, i32 23, metadata !1742, metadata !1797}
!1801 = metadata !{i32 147, i32 28, metadata !1742, metadata !1797}
!1802 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1797} ; [ DW_TAG_auto_variable ]
!1803 = metadata !{i32 148, i32 22, metadata !1742, metadata !1797}
!1804 = metadata !{i32 149, i32 3, metadata !1742, metadata !1797}
!1805 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1797} ; [ DW_TAG_auto_variable ]
!1806 = metadata !{i32 150, i32 3, metadata !1742, metadata !1797}
!1807 = metadata !{i32 169, i32 3, metadata !1717, null}
!1808 = metadata !{i32 786689, metadata !1736, metadata !"b", metadata !167, i32 16777359, metadata !754, i32 0, metadata !1809} ; [ DW_TAG_arg_variable ]
!1809 = metadata !{i32 169, i32 55, metadata !1717, null}
!1810 = metadata !{i32 143, i32 40, metadata !1736, metadata !1809}
!1811 = metadata !{i32 786688, metadata !1742, metadata !"ub", metadata !167, i32 145, metadata !231, i32 0, metadata !1809} ; [ DW_TAG_auto_variable ]
!1812 = metadata !{i32 145, i32 23, metadata !1742, metadata !1809}
!1813 = metadata !{i32 147, i32 28, metadata !1742, metadata !1809}
!1814 = metadata !{i32 786688, metadata !1742, metadata !"x", metadata !167, i32 147, metadata !231, i32 0, metadata !1809} ; [ DW_TAG_auto_variable ]
!1815 = metadata !{i32 148, i32 22, metadata !1742, metadata !1809}
!1816 = metadata !{i32 149, i32 3, metadata !1742, metadata !1809}
!1817 = metadata !{i32 786688, metadata !1742, metadata !"y", metadata !167, i32 148, metadata !174, i32 0, metadata !1809} ; [ DW_TAG_auto_variable ]
!1818 = metadata !{i32 150, i32 3, metadata !1742, metadata !1809}
!1819 = metadata !{i32 151, i32 3, metadata !1742, metadata !1809}
!1820 = metadata !{i32 790531, metadata !1821, metadata !"r.v", null, i32 159, metadata !681, i32 0, metadata !1716} ; [ DW_TAG_arg_variable_field ]
!1821 = metadata !{i32 786689, metadata !1715, metadata !"r", metadata !673, i32 16777375, metadata !676, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1822 = metadata !{i32 159, i32 75, metadata !1715, metadata !1716}
!1823 = metadata !{i32 790531, metadata !1824, metadata !"x.v", null, i32 159, metadata !681, i32 0, metadata !1716} ; [ DW_TAG_arg_variable_field ]
!1824 = metadata !{i32 786689, metadata !1715, metadata !"x", metadata !673, i32 33554591, metadata !892, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1825 = metadata !{i32 159, i32 117, metadata !1715, metadata !1716}
!1826 = metadata !{i32 790529, metadata !1827, metadata !"t.v", null, i32 161, metadata !682, i32 0, i32 0} ; [ DW_TAG_auto_variable_field ]
!1827 = metadata !{i32 786688, metadata !1714, metadata !"t", metadata !673, i32 161, metadata !677, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1828 = metadata !{i32 161, i32 35, metadata !1714, metadata !1716}
!1829 = metadata !{i32 163, i32 7, metadata !1830, metadata !1716}
!1830 = metadata !{i32 786443, metadata !1714, i32 163, i32 3, metadata !673, i32 19} ; [ DW_TAG_lexical_block ]
!1831 = metadata !{i32 156, i32 7, metadata !1832, metadata !1713}
!1832 = metadata !{i32 786443, metadata !1833, i32 156, i32 3, metadata !673, i32 17} ; [ DW_TAG_lexical_block ]
!1833 = metadata !{i32 786443, metadata !1712, i32 154, i32 1, metadata !673, i32 16} ; [ DW_TAG_lexical_block ]
!1834 = metadata !{i32 163, i32 21, metadata !1830, metadata !1716}
!1835 = metadata !{i32 163, i32 16, metadata !1830, metadata !1716}
!1836 = metadata !{i32 786688, metadata !1714, metadata !"i", metadata !673, i32 162, metadata !216, i32 0, metadata !1716} ; [ DW_TAG_auto_variable ]
!1837 = metadata !{i32 156, i32 21, metadata !1832, metadata !1713}
!1838 = metadata !{i32 156, i32 16, metadata !1832, metadata !1713}
!1839 = metadata !{i32 786688, metadata !1833, metadata !"i", metadata !673, i32 155, metadata !216, i32 0, metadata !1713} ; [ DW_TAG_auto_variable ]
!1840 = metadata !{i32 786689, metadata !1841, metadata !"b", metadata !167, i32 16777370, metadata !754, i32 0, metadata !1844} ; [ DW_TAG_arg_variable ]
!1841 = metadata !{i32 786478, i32 0, metadata !167, metadata !"negative", metadata !"negative", metadata !"", metadata !167, i32 154, metadata !1842, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 155} ; [ DW_TAG_subprogram ]
!1842 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1843, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1843 = metadata !{metadata !231, metadata !754}
!1844 = metadata !{i32 171, i32 51, metadata !1717, null}
!1845 = metadata !{i32 154, i32 43, metadata !1841, metadata !1844}
!1846 = metadata !{i32 786688, metadata !1847, metadata !"x", metadata !167, i32 156, metadata !142, i32 0, metadata !1844} ; [ DW_TAG_auto_variable ]
!1847 = metadata !{i32 786443, metadata !1841, i32 155, i32 1, metadata !167, i32 12} ; [ DW_TAG_lexical_block ]
!1848 = metadata !{i32 156, i32 27, metadata !1847, metadata !1844}
!1849 = metadata !{i32 157, i32 3, metadata !1847, metadata !1844}
!1850 = metadata !{i32 790531, metadata !1680, metadata !"r.v", null, i32 131, metadata !681, i32 0, metadata !1844} ; [ DW_TAG_arg_variable_field ]
!1851 = metadata !{i32 131, i32 76, metadata !1681, metadata !1844}
!1852 = metadata !{i32 135, i32 3, metadata !1694, metadata !1844}
!1853 = metadata !{i32 786688, metadata !1694, metadata !"mask", metadata !673, i32 134, metadata !174, i32 0, metadata !1844} ; [ DW_TAG_auto_variable ]
!1854 = metadata !{i32 136, i32 7, metadata !1701, metadata !1844}
!1855 = metadata !{i32 136, i32 21, metadata !1701, metadata !1844}
!1856 = metadata !{i32 136, i32 16, metadata !1701, metadata !1844}
!1857 = metadata !{i32 786688, metadata !1694, metadata !"i", metadata !673, i32 133, metadata !216, i32 0, metadata !1844} ; [ DW_TAG_auto_variable ]
!1858 = metadata !{i32 172, i32 1, metadata !1717, null}
!1859 = metadata !{i32 790531, metadata !1860, metadata !"r.v", null, i32 41, metadata !596, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!1860 = metadata !{i32 786689, metadata !1861, metadata !"r", metadata !149, i32 16777257, metadata !590, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1861 = metadata !{i32 786478, i32 0, metadata !149, metadata !"barrett_reduce", metadata !"barrett_reduce", metadata !"", metadata !149, i32 41, metadata !1862, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !236, i32 42} ; [ DW_TAG_subprogram ]
!1862 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1863, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!1863 = metadata !{null, metadata !590, metadata !1864}
!1864 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !151} ; [ DW_TAG_pointer_type ]
!1865 = metadata !{i32 41, i32 61, metadata !1861, null}
!1866 = metadata !{i32 786689, metadata !1861, metadata !"x", null, i32 41, metadata !1867, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1867 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 0, i64 0, i32 0, i32 0, metadata !151, metadata !305, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1868 = metadata !{i32 41, i32 84, metadata !1861, null}
!1869 = metadata !{i32 786688, metadata !1870, metadata !"q2", metadata !149, i32 45, metadata !1871, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1870 = metadata !{i32 786443, metadata !1861, i32 42, i32 1, metadata !149, i32 51} ; [ DW_TAG_lexical_block ]
!1871 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 2112, i64 32, i32 0, i32 0, metadata !152, metadata !1872, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1872 = metadata !{metadata !1873}
!1873 = metadata !{i32 786465, i64 0, i64 65}     ; [ DW_TAG_subrange_type ]
!1874 = metadata !{i32 45, i32 17, metadata !1870, null}
!1875 = metadata !{i32 786688, metadata !1870, metadata !"r1", metadata !149, i32 47, metadata !1876, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1876 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 1056, i64 32, i32 0, i32 0, metadata !152, metadata !155, i32 0, i32 0} ; [ DW_TAG_array_type ]
!1877 = metadata !{i32 47, i32 17, metadata !1870, null}
!1878 = metadata !{i32 786688, metadata !1870, metadata !"r2", metadata !149, i32 48, metadata !1876, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1879 = metadata !{i32 48, i32 17, metadata !1870, null}
!1880 = metadata !{i32 53, i32 8, metadata !1881, null}
!1881 = metadata !{i32 786443, metadata !1870, i32 53, i32 3, metadata !149, i32 52} ; [ DW_TAG_lexical_block ]
!1882 = metadata !{i32 54, i32 8, metadata !1883, null}
!1883 = metadata !{i32 786443, metadata !1870, i32 54, i32 3, metadata !149, i32 53} ; [ DW_TAG_lexical_block ]
!1884 = metadata !{i32 53, i32 26, metadata !1881, null}
!1885 = metadata !{i32 53, i32 21, metadata !1881, null}
!1886 = metadata !{i32 786688, metadata !1870, metadata !"i", metadata !149, i32 44, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1887 = metadata !{i32 56, i32 7, metadata !1888, null}
!1888 = metadata !{i32 786443, metadata !1870, i32 56, i32 3, metadata !149, i32 54} ; [ DW_TAG_lexical_block ]
!1889 = metadata !{i32 54, i32 26, metadata !1883, null}
!1890 = metadata !{i32 54, i32 21, metadata !1883, null}
!1891 = metadata !{i32 58, i32 21, metadata !1892, null}
!1892 = metadata !{i32 786443, metadata !1888, i32 57, i32 5, metadata !149, i32 55} ; [ DW_TAG_lexical_block ]
!1893 = metadata !{i32 57, i32 9, metadata !1892, null}
!1894 = metadata !{i32 58, i32 7, metadata !1892, null}
!1895 = metadata !{i32 57, i32 18, metadata !1892, null}
!1896 = metadata !{i32 786688, metadata !1870, metadata !"j", metadata !149, i32 44, metadata !216, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1897 = metadata !{i32 56, i32 16, metadata !1888, null}
!1898 = metadata !{i32 59, i32 3, metadata !1870, null}
!1899 = metadata !{i32 786688, metadata !1870, metadata !"carry", metadata !149, i32 49, metadata !152, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1900 = metadata !{i32 60, i32 3, metadata !1870, null}
!1901 = metadata !{i32 61, i32 3, metadata !1870, null}
!1902 = metadata !{i32 62, i32 3, metadata !1870, null}
!1903 = metadata !{i32 64, i32 7, metadata !1904, null}
!1904 = metadata !{i32 786443, metadata !1870, i32 64, i32 3, metadata !149, i32 56} ; [ DW_TAG_lexical_block ]
!1905 = metadata !{i32 65, i32 7, metadata !1906, null}
!1906 = metadata !{i32 786443, metadata !1870, i32 65, i32 3, metadata !149, i32 57} ; [ DW_TAG_lexical_block ]
!1907 = metadata !{i32 64, i32 20, metadata !1904, null}
!1908 = metadata !{i32 64, i32 16, metadata !1904, null}
!1909 = metadata !{i32 69, i32 7, metadata !1910, null}
!1910 = metadata !{i32 786443, metadata !1870, i32 69, i32 3, metadata !149, i32 59} ; [ DW_TAG_lexical_block ]
!1911 = metadata !{i32 67, i32 20, metadata !1912, null}
!1912 = metadata !{i32 786443, metadata !1906, i32 66, i32 5, metadata !149, i32 58} ; [ DW_TAG_lexical_block ]
!1913 = metadata !{i32 66, i32 9, metadata !1912, null}
!1914 = metadata !{i32 67, i32 7, metadata !1912, null}
!1915 = metadata !{i32 66, i32 18, metadata !1912, null}
!1916 = metadata !{i32 65, i32 16, metadata !1906, null}
!1917 = metadata !{i32 76, i32 7, metadata !1918, null}
!1918 = metadata !{i32 786443, metadata !1870, i32 76, i32 3, metadata !149, i32 61} ; [ DW_TAG_lexical_block ]
!1919 = metadata !{i32 71, i32 5, metadata !1920, null}
!1920 = metadata !{i32 786443, metadata !1910, i32 70, i32 3, metadata !149, i32 60} ; [ DW_TAG_lexical_block ]
!1921 = metadata !{i32 72, i32 5, metadata !1920, null}
!1922 = metadata !{i32 73, i32 5, metadata !1920, null}
!1923 = metadata !{i32 69, i32 16, metadata !1910, null}
!1924 = metadata !{i32 78, i32 5, metadata !1925, null}
!1925 = metadata !{i32 786443, metadata !1918, i32 77, i32 3, metadata !149, i32 62} ; [ DW_TAG_lexical_block ]
!1926 = metadata !{i32 786688, metadata !1870, metadata !"pb", metadata !149, i32 50, metadata !152, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1927 = metadata !{i32 79, i32 9, metadata !1925, null}
!1928 = metadata !{i32 786689, metadata !614, metadata !"a", metadata !149, i32 16777227, metadata !152, i32 0, metadata !1927} ; [ DW_TAG_arg_variable ]
!1929 = metadata !{i32 11, i32 39, metadata !614, metadata !1927}
!1930 = metadata !{i32 786689, metadata !614, metadata !"b", metadata !149, i32 33554443, metadata !152, i32 0, metadata !1927} ; [ DW_TAG_arg_variable ]
!1931 = metadata !{i32 11, i32 55, metadata !614, metadata !1927}
!1932 = metadata !{i32 786688, metadata !621, metadata !"x", metadata !149, i32 13, metadata !154, i32 0, metadata !1927} ; [ DW_TAG_auto_variable ]
!1933 = metadata !{i32 13, i32 21, metadata !621, metadata !1927}
!1934 = metadata !{i32 14, i32 3, metadata !621, metadata !1927}
!1935 = metadata !{i32 15, i32 3, metadata !621, metadata !1927}
!1936 = metadata !{i32 786688, metadata !1870, metadata !"b", metadata !149, i32 51, metadata !152, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!1937 = metadata !{i32 80, i32 5, metadata !1925, null}
!1938 = metadata !{i32 81, i32 5, metadata !1925, null}
!1939 = metadata !{i32 76, i32 16, metadata !1918, null}
!1940 = metadata !{i32 88, i32 3, metadata !1870, null}
!1941 = metadata !{i32 89, i32 3, metadata !1870, null}
!1942 = metadata !{i32 90, i32 1, metadata !1870, null}
!1943 = metadata !{i32 786689, metadata !1424, metadata !"dst", null, i32 34, metadata !394, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1944 = metadata !{i32 34, i32 30, metadata !1424, null}
!1945 = metadata !{i32 786689, metadata !1424, metadata !"src", null, i32 34, metadata !601, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!1946 = metadata !{i32 34, i32 50, metadata !1424, null}
!1947 = metadata !{i32 786689, metadata !1418, metadata !"src", null, i32 13, metadata !601, i32 0, metadata !1948} ; [ DW_TAG_arg_variable ]
!1948 = metadata !{i32 35, i32 2, metadata !1423, null}
!1949 = metadata !{i32 13, i32 49, metadata !1418, metadata !1948}
!1950 = metadata !{i32 15, i32 6, metadata !1513, metadata !1948}
!1951 = metadata !{i32 16, i32 3, metadata !1516, metadata !1948}
!1952 = metadata !{i32 15, i32 18, metadata !1513, metadata !1948}
!1953 = metadata !{i32 786688, metadata !1514, metadata !"i", metadata !1419, i32 14, metadata !216, i32 0, metadata !1948} ; [ DW_TAG_auto_variable ]
!1954 = metadata !{i32 36, i32 1, metadata !1423, null}
