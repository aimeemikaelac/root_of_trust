

================================================================
== Vivado HLS Report for 'final'
================================================================
* Date:           Sat May  6 21:35:29 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        sha256_mem
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-1-i-es1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      4.73|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2  |   24|   24|         3|          -|          -|     8|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 11
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond_i)
	2  / (!exitcond_i)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	9  / true
* FSM state operations: 

 <State 1>: 2.42ns
ST_1: SHA256_m_len_read_2 (7)  [1/1] 0.00ns
:0  %SHA256_m_len_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %SHA256_m_len_read)

ST_1: SHA256_m_tot_len_rea (8)  [1/1] 0.00ns
:1  %SHA256_m_tot_len_rea = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %SHA256_m_tot_len_read)

ST_1: tmp (9)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:116
:2  %tmp = trunc i32 %SHA256_m_len_read_2 to i6

ST_1: tmp_s (10)  [1/1] 0.84ns  loc: sha256_mem/src/sha256_mem.cpp:116
:3  %tmp_s = icmp ugt i6 %tmp, -9

ST_1: block_nb (11)  [1/1] 0.10ns  loc: sha256_mem/src/sha256_mem.cpp:116
:4  %block_nb = select i1 %tmp_s, i2 -2, i2 1

ST_1: tmp_95 (12)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:118
:5  %tmp_95 = trunc i32 %SHA256_m_len_read_2 to i29

ST_1: tmp_99 (13)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:118
:6  %tmp_99 = trunc i32 %SHA256_m_tot_len_rea to i29

ST_1: tmp_100 (14)  [1/1] 0.00ns
:7  %tmp_100 = trunc i32 %SHA256_m_tot_len_rea to i13

ST_1: tmp_101 (15)  [1/1] 0.00ns
:8  %tmp_101 = trunc i32 %SHA256_m_len_read_2 to i13

ST_1: tmp_102 (16)  [1/1] 0.00ns
:9  %tmp_102 = trunc i32 %SHA256_m_tot_len_rea to i21

ST_1: tmp_103 (17)  [1/1] 0.00ns
:10  %tmp_103 = trunc i32 %SHA256_m_len_read_2 to i21

ST_1: tmp_84 (18)  [1/1] 1.55ns  loc: sha256_mem/src/sha256_mem.cpp:118
:11  %tmp_84 = add i29 %tmp_95, %tmp_99

ST_1: tmp_90_cast3 (19)  [1/1] 1.45ns  loc: sha256_mem/src/sha256_mem.cpp:118
:12  %tmp_90_cast3 = add i21 %tmp_102, %tmp_103

ST_1: tmp_90_cast (20)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:118
:13  %tmp_90_cast = add i13 %tmp_100, %tmp_101

ST_1: tmp_104 (21)  [1/1] 0.00ns
:14  %tmp_104 = trunc i32 %SHA256_m_len_read_2 to i5

ST_1: tmp_105 (22)  [1/1] 0.00ns
:15  %tmp_105 = trunc i32 %SHA256_m_tot_len_rea to i5

ST_1: pm_len_cast_cast (23)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:116 (grouped into LUT with out node length_assign)
:16  %pm_len_cast_cast = select i1 %tmp_s, i32 128, i32 64

ST_1: tmp_85 (24)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:120
:17  %tmp_85 = zext i32 %SHA256_m_len_read_2 to i64

ST_1: tmp_106 (25)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:120
:18  %tmp_106 = trunc i32 %SHA256_m_len_read_2 to i9

ST_1: length_assign (26)  [1/1] 1.58ns  loc: sha256_mem/src/sha256_mem.cpp:120 (out node of the LUT)
:19  %length_assign = sub i32 %pm_len_cast_cast, %SHA256_m_len_read_2

ST_1: StgValue_32 (27)  [1/1] 0.76ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:20  br label %1


 <State 2>: 2.65ns
ST_2: i_i (29)  [1/1] 0.00ns
:0  %i_i = phi i32 [ 0, %0 ], [ %i_3, %2 ]

ST_2: exitcond_i (30)  [1/1] 0.72ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:1  %exitcond_i = icmp eq i32 %i_i, %length_assign

ST_2: i_3 (31)  [1/1] 1.58ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:2  %i_3 = add nsw i32 %i_i, 1

ST_2: StgValue_36 (32)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:3  br i1 %exitcond_i, label %_memset.exit, label %2

ST_2: tmp_107 (34)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:0  %tmp_107 = trunc i32 %i_i to i9

ST_2: sum_i (35)  [1/1] 1.30ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:1  %sum_i = add i9 %tmp_107, %tmp_106

ST_2: sum_i_cast (36)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:2  %sum_i_cast = sext i9 %sum_i to i64

ST_2: SHA256_m_block_addr_5 (37)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:13->sha256_mem/src/sha256_mem.cpp:120
:3  %SHA256_m_block_addr_5 = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %sum_i_cast

ST_2: StgValue_41 (38)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:13->sha256_mem/src/sha256_mem.cpp:120
:4  store i8 0, i8* %SHA256_m_block_addr_5, align 1

ST_2: StgValue_42 (39)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120
:5  br label %1

ST_2: SHA256_m_block_addr (41)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:121
_memset.exit:0  %SHA256_m_block_addr = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %tmp_85

ST_2: StgValue_44 (42)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:121
_memset.exit:1  store i8 -128, i8* %SHA256_m_block_addr, align 1

ST_2: tmp_86 (43)  [1/1] 1.26ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:2  %tmp_86 = add i5 %tmp_105, %tmp_104

ST_2: tmp_88 (48)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:7  %tmp_88 = call i8 @_ssdm_op_PartSelect.i8.i13.i32.i32(i13 %tmp_90_cast, i32 5, i32 12)

ST_2: tmp_89 (52)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:11  %tmp_89 = call i8 @_ssdm_op_PartSelect.i8.i21.i32.i32(i21 %tmp_90_cast3, i32 13, i32 20)

ST_2: tmp_90 (56)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:15  %tmp_90 = call i8 @_ssdm_op_PartSelect.i8.i29.i32.i32(i29 %tmp_84, i32 21, i32 28)


 <State 3>: 1.45ns
ST_3: tmp_87 (44)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:3  %tmp_87 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_86, i3 0)

ST_3: p_sum1_cast_cast (45)  [1/1] 0.10ns  loc: sha256_mem/src/sha256_mem.cpp:116
_memset.exit:4  %p_sum1_cast_cast = select i1 %tmp_s, i64 127, i64 63

ST_3: SHA256_m_block_addr_1 (46)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:5  %SHA256_m_block_addr_1 = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %p_sum1_cast_cast

ST_3: StgValue_52 (47)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:6  store i8 %tmp_87, i8* %SHA256_m_block_addr_1, align 1


 <State 4>: 1.45ns
ST_4: p_sum3_cast_cast (49)  [1/1] 0.10ns  loc: sha256_mem/src/sha256_mem.cpp:116
_memset.exit:8  %p_sum3_cast_cast = select i1 %tmp_s, i64 126, i64 62

ST_4: SHA256_m_block_addr_2 (50)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:9  %SHA256_m_block_addr_2 = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %p_sum3_cast_cast

ST_4: StgValue_55 (51)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:10  store i8 %tmp_88, i8* %SHA256_m_block_addr_2, align 1


 <State 5>: 1.45ns
ST_5: p_sum5_cast_cast (53)  [1/1] 0.10ns  loc: sha256_mem/src/sha256_mem.cpp:116
_memset.exit:12  %p_sum5_cast_cast = select i1 %tmp_s, i64 125, i64 61

ST_5: SHA256_m_block_addr_3 (54)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:13  %SHA256_m_block_addr_3 = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %p_sum5_cast_cast

ST_5: StgValue_58 (55)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:14  store i8 %tmp_89, i8* %SHA256_m_block_addr_3, align 1


 <State 6>: 1.45ns
ST_6: p_sum6_cast_cast (57)  [1/1] 0.10ns  loc: sha256_mem/src/sha256_mem.cpp:116
_memset.exit:16  %p_sum6_cast_cast = select i1 %tmp_s, i64 124, i64 60

ST_6: SHA256_m_block_addr_4 (58)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:17  %SHA256_m_block_addr_4 = getelementptr [128 x i8]* %SHA256_m_block, i64 0, i64 %p_sum6_cast_cast

ST_6: StgValue_61 (59)  [1/1] 1.35ns  loc: sha256_mem/src/sha256_mem.cpp:122
_memset.exit:18  store i8 %tmp_90, i8* %SHA256_m_block_addr_4, align 1


 <State 7>: 0.00ns
ST_7: StgValue_62 (60)  [2/2] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:123
_memset.exit:19  call fastcc void @transform([8 x i32]* %SHA256_m_h, [128 x i8]* %SHA256_m_block, i2 %block_nb)


 <State 8>: 0.76ns
ST_8: StgValue_63 (60)  [1/2] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:123
_memset.exit:19  call fastcc void @transform([8 x i32]* %SHA256_m_h, [128 x i8]* %SHA256_m_block, i2 %block_nb)

ST_8: StgValue_64 (61)  [1/1] 0.76ns  loc: sha256_mem/src/sha256_mem.cpp:124
_memset.exit:20  br label %3


 <State 9>: 1.25ns
ST_9: i (63)  [1/1] 0.00ns
:0  %i = phi i4 [ 0, %_memset.exit ], [ %i_4, %4 ]

ST_9: exitcond (64)  [1/1] 0.52ns  loc: sha256_mem/src/sha256_mem.cpp:124
:1  %exitcond = icmp eq i4 %i, -8

ST_9: empty (65)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_9: i_4 (66)  [1/1] 1.25ns  loc: sha256_mem/src/sha256_mem.cpp:124
:3  %i_4 = add i4 %i, 1

ST_9: StgValue_69 (67)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:124
:4  br i1 %exitcond, label %5, label %4

ST_9: tmp_91 (69)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:0  %tmp_91 = zext i4 %i to i64

ST_9: SHA256_m_h_addr (70)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:1  %SHA256_m_h_addr = getelementptr [8 x i32]* %SHA256_m_h, i64 0, i64 %tmp_91

ST_9: SHA256_m_h_load (71)  [2/2] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:125
:2  %SHA256_m_h_load = load i32* %SHA256_m_h_addr, align 4

ST_9: tmp_109 (73)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:124
:4  %tmp_109 = trunc i4 %i to i3

ST_9: StgValue_74 (95)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:127
:0  ret void


 <State 10>: 1.58ns
ST_10: SHA256_m_h_load (71)  [1/2] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:125
:2  %SHA256_m_h_load = load i32* %SHA256_m_h_addr, align 4

ST_10: tmp_108 (72)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:3  %tmp_108 = trunc i32 %SHA256_m_h_load to i8

ST_10: tmp_92 (74)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:5  %tmp_92 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_109, i2 0)

ST_10: p_sum (76)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:7  %p_sum = or i5 %tmp_92, 3

ST_10: p_sum_cast (77)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:8  %p_sum_cast = zext i5 %p_sum to i64

ST_10: digest_addr (78)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:9  %digest_addr = getelementptr [32 x i8]* %digest, i64 0, i64 %p_sum_cast

ST_10: StgValue_81 (79)  [1/1] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:125
:10  store i8 %tmp_108, i8* %digest_addr, align 1

ST_10: tmp_94 (80)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:11  %tmp_94 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SHA256_m_h_load, i32 8, i32 15)

ST_10: p_sum2 (81)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:12  %p_sum2 = or i5 %tmp_92, 2

ST_10: p_sum2_cast (82)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:13  %p_sum2_cast = zext i5 %p_sum2 to i64

ST_10: digest_addr_1 (83)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:14  %digest_addr_1 = getelementptr [32 x i8]* %digest, i64 0, i64 %p_sum2_cast

ST_10: StgValue_86 (84)  [1/1] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:125
:15  store i8 %tmp_94, i8* %digest_addr_1, align 1

ST_10: tmp_96 (85)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:16  %tmp_96 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SHA256_m_h_load, i32 16, i32 23)

ST_10: tmp_97 (90)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:21  %tmp_97 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SHA256_m_h_load, i32 24, i32 31)


 <State 11>: 0.79ns
ST_11: tmp_93 (75)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:6  %tmp_93 = zext i5 %tmp_92 to i64

ST_11: p_sum4 (86)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:17  %p_sum4 = or i5 %tmp_92, 1

ST_11: p_sum4_cast (87)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:18  %p_sum4_cast = zext i5 %p_sum4 to i64

ST_11: digest_addr_2 (88)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:19  %digest_addr_2 = getelementptr [32 x i8]* %digest, i64 0, i64 %p_sum4_cast

ST_11: StgValue_93 (89)  [1/1] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:125
:20  store i8 %tmp_96, i8* %digest_addr_2, align 1

ST_11: digest_addr_3 (91)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:125
:22  %digest_addr_3 = getelementptr [32 x i8]* %digest, i64 0, i64 %tmp_93

ST_11: StgValue_95 (92)  [1/1] 0.79ns  loc: sha256_mem/src/sha256_mem.cpp:125
:23  store i8 %tmp_97, i8* %digest_addr_3, align 1

ST_11: StgValue_96 (93)  [1/1] 0.00ns  loc: sha256_mem/src/sha256_mem.cpp:124
:24  br label %3



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.42ns
The critical path consists of the following:
	wire read on port 'SHA256_m_len_read' [7]  (0 ns)
	'icmp' operation ('tmp_s', sha256_mem/src/sha256_mem.cpp:116) [10]  (0.841 ns)
	'select' operation ('pm_len_cast_cast', sha256_mem/src/sha256_mem.cpp:116) [23]  (0 ns)
	'sub' operation ('length', sha256_mem/src/sha256_mem.cpp:120) [26]  (1.58 ns)

 <State 2>: 2.65ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120) [29]  (0 ns)
	'add' operation ('sum_i', sha256_mem/src/sha256_mem.cpp:12->sha256_mem/src/sha256_mem.cpp:120) [35]  (1.3 ns)
	'getelementptr' operation ('SHA256_m_block_addr_5', sha256_mem/src/sha256_mem.cpp:13->sha256_mem/src/sha256_mem.cpp:120) [37]  (0 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:13->sha256_mem/src/sha256_mem.cpp:120) of constant 0 on array 'SHA256_m_block' [38]  (1.35 ns)

 <State 3>: 1.45ns
The critical path consists of the following:
	'select' operation ('p_sum1_cast_cast', sha256_mem/src/sha256_mem.cpp:116) [45]  (0.1 ns)
	'getelementptr' operation ('SHA256_m_block_addr_1', sha256_mem/src/sha256_mem.cpp:122) [46]  (0 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:122) of variable 'tmp_87', sha256_mem/src/sha256_mem.cpp:122 on array 'SHA256_m_block' [47]  (1.35 ns)

 <State 4>: 1.45ns
The critical path consists of the following:
	'select' operation ('p_sum3_cast_cast', sha256_mem/src/sha256_mem.cpp:116) [49]  (0.1 ns)
	'getelementptr' operation ('SHA256_m_block_addr_2', sha256_mem/src/sha256_mem.cpp:122) [50]  (0 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:122) of variable 'tmp_88', sha256_mem/src/sha256_mem.cpp:122 on array 'SHA256_m_block' [51]  (1.35 ns)

 <State 5>: 1.45ns
The critical path consists of the following:
	'select' operation ('p_sum5_cast_cast', sha256_mem/src/sha256_mem.cpp:116) [53]  (0.1 ns)
	'getelementptr' operation ('SHA256_m_block_addr_3', sha256_mem/src/sha256_mem.cpp:122) [54]  (0 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:122) of variable 'tmp_89', sha256_mem/src/sha256_mem.cpp:122 on array 'SHA256_m_block' [55]  (1.35 ns)

 <State 6>: 1.45ns
The critical path consists of the following:
	'select' operation ('p_sum6_cast_cast', sha256_mem/src/sha256_mem.cpp:116) [57]  (0.1 ns)
	'getelementptr' operation ('SHA256_m_block_addr_4', sha256_mem/src/sha256_mem.cpp:122) [58]  (0 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:122) of variable 'tmp_90', sha256_mem/src/sha256_mem.cpp:122 on array 'SHA256_m_block' [59]  (1.35 ns)

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', sha256_mem/src/sha256_mem.cpp:124) [63]  (0.755 ns)

 <State 9>: 1.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256_mem/src/sha256_mem.cpp:124) [63]  (0 ns)
	'add' operation ('i', sha256_mem/src/sha256_mem.cpp:124) [66]  (1.25 ns)

 <State 10>: 1.58ns
The critical path consists of the following:
	'load' operation ('SHA256_m_h_load', sha256_mem/src/sha256_mem.cpp:125) on array 'SHA256_m_h' [71]  (0.79 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:125) of variable 'tmp_108', sha256_mem/src/sha256_mem.cpp:125 on array 'digest' [79]  (0.79 ns)

 <State 11>: 0.79ns
The critical path consists of the following:
	'getelementptr' operation ('digest_addr_3', sha256_mem/src/sha256_mem.cpp:125) [91]  (0 ns)
	'store' operation (sha256_mem/src/sha256_mem.cpp:125) of variable 'tmp_97', sha256_mem/src/sha256_mem.cpp:125 on array 'digest' [92]  (0.79 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
