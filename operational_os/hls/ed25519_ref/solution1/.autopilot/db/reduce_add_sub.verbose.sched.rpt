

================================================================
== Vivado HLS Report for 'reduce_add_sub'
================================================================
* Date:           Sat Jun  3 22:30:09 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        ed25519_ref
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      3.69|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  130|  130|  130|  130|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   64|   64|         2|          -|          -|    32|    no    |
        |- Loop 2  |   64|   64|         2|          -|          -|    32|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	4  / (exitcond2)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond)
5 --> 
	4  / true
* FSM state operations: 

 <State 1>: 0.66ns
ST_1: mask (3)  [1/1] 0.00ns
:0  %mask = alloca i2

ST_1: t (4)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:26
:1  %t = alloca [32 x i8], align 16

ST_1: StgValue_8 (5)  [1/1] 0.66ns  loc: ed25519_ref/src/sc25519.c:28
:2  br label %1


 <State 2>: 1.24ns
ST_2: pb (7)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:15->ed25519_ref/src/sc25519.c:31
:0  %pb = phi i1 [ false, %0 ], [ %tmp_756, %2 ]

ST_2: i (8)  [1/1] 0.00ns
:1  %i = phi i6 [ 0, %0 ], [ %i_20, %2 ]

ST_2: exitcond2 (9)  [1/1] 0.71ns  loc: ed25519_ref/src/sc25519.c:28
:2  %exitcond2 = icmp eq i6 %i, -32

ST_2: empty (10)  [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)

ST_2: i_20 (11)  [1/1] 1.11ns  loc: ed25519_ref/src/sc25519.c:28
:4  %i_20 = add i6 %i, 1

ST_2: StgValue_14 (12)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:28
:5  br i1 %exitcond2, label %.preheader.preheader, label %2

ST_2: tmp (14)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:30
:0  %tmp = zext i6 %i to i64

ST_2: m_addr (15)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:30
:1  %m_addr = getelementptr [32 x i8]* @m, i64 0, i64 %tmp

ST_2: m_load (16)  [2/2] 0.57ns  loc: ed25519_ref/src/sc25519.c:30
:2  %m_load = load i8* %m_addr, align 1

ST_2: r_v_addr (20)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:31
:6  %r_v_addr = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp

ST_2: x (21)  [2/2] 1.24ns  loc: ed25519_ref/src/sc25519.c:31
:7  %x = load i32* %r_v_addr, align 4

ST_2: mask_load (32)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:35
.preheader.preheader:0  %mask_load = load i2* %mask

ST_2: mask_cast (33)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:35
.preheader.preheader:1  %mask_cast = sext i2 %mask_load to i32

ST_2: StgValue_22 (34)  [1/1] 0.66ns  loc: ed25519_ref/src/sc25519.c:36
.preheader.preheader:2  br label %.preheader


 <State 3>: 3.69ns
ST_3: m_load (16)  [1/2] 0.57ns  loc: ed25519_ref/src/sc25519.c:30
:2  %m_load = load i8* %m_addr, align 1

ST_3: pb_cast1 (17)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:35
:3  %pb_cast1 = zext i1 %pb to i8

ST_3: pb_1 (18)  [1/1] 1.09ns  loc: ed25519_ref/src/sc25519.c:30
:4  %pb_1 = add i8 %m_load, %pb_cast1

ST_3: pb_3_cast (19)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:30
:5  %pb_3_cast = zext i8 %pb_1 to i32

ST_3: x (21)  [1/2] 1.24ns  loc: ed25519_ref/src/sc25519.c:31
:7  %x = load i32* %r_v_addr, align 4

ST_3: x_1 (22)  [1/1] 1.34ns  loc: ed25519_ref/src/sc25519.c:14->ed25519_ref/src/sc25519.c:31
:8  %x_1 = sub i32 %x, %pb_3_cast

ST_3: tmp_756 (23)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:15->ed25519_ref/src/sc25519.c:31
:9  %tmp_756 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_1, i32 31)

ST_3: tmp_757 (24)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:32
:10  %tmp_757 = trunc i32 %x_1 to i8

ST_3: t_addr (25)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:32
:11  %t_addr = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp

ST_3: StgValue_32 (26)  [1/1] 0.68ns  loc: ed25519_ref/src/sc25519.c:32
:12  store i8 %tmp_757, i8* %t_addr, align 1

ST_3: phitmp (27)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:28 (grouped into LUT with out node phitmp_cast_cast)
:13  %phitmp = xor i1 %tmp_756, true

ST_3: phitmp_cast_cast (28)  [1/1] 0.08ns  loc: ed25519_ref/src/sc25519.c:28 (out node of the LUT)
:14  %phitmp_cast_cast = select i1 %phitmp, i2 -1, i2 0

ST_3: StgValue_35 (29)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:28
:15  store i2 %phitmp_cast_cast, i2* %mask

ST_3: StgValue_36 (30)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:28
:16  br label %1


 <State 4>: 1.24ns
ST_4: i_1 (36)  [1/1] 0.00ns
.preheader:0  %i_1 = phi i6 [ %i_21, %3 ], [ 0, %.preheader.preheader ]

ST_4: exitcond (37)  [1/1] 0.71ns  loc: ed25519_ref/src/sc25519.c:36
.preheader:1  %exitcond = icmp eq i6 %i_1, -32

ST_4: empty_41 (38)  [1/1] 0.00ns
.preheader:2  %empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)

ST_4: i_21 (39)  [1/1] 1.11ns  loc: ed25519_ref/src/sc25519.c:36
.preheader:3  %i_21 = add i6 %i_1, 1

ST_4: StgValue_41 (40)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:36
.preheader:4  br i1 %exitcond, label %4, label %3

ST_4: tmp_s (42)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:37
:0  %tmp_s = zext i6 %i_1 to i64

ST_4: r_v_addr_1 (43)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:37
:1  %r_v_addr_1 = getelementptr [32 x i32]* %r_v, i64 0, i64 %tmp_s

ST_4: r_v_load (44)  [2/2] 1.24ns  loc: ed25519_ref/src/sc25519.c:37
:2  %r_v_load = load i32* %r_v_addr_1, align 4

ST_4: t_addr_1 (45)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:37
:3  %t_addr_1 = getelementptr inbounds [32 x i8]* %t, i64 0, i64 %tmp_s

ST_4: t_load (46)  [2/2] 0.68ns  loc: ed25519_ref/src/sc25519.c:37
:4  %t_load = load i8* %t_addr_1, align 1

ST_4: StgValue_47 (54)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:38
:0  ret void


 <State 5>: 2.53ns
ST_5: r_v_load (44)  [1/2] 1.24ns  loc: ed25519_ref/src/sc25519.c:37
:2  %r_v_load = load i32* %r_v_addr_1, align 4

ST_5: t_load (46)  [1/2] 0.68ns  loc: ed25519_ref/src/sc25519.c:37
:4  %t_load = load i8* %t_addr_1, align 1

ST_5: tmp_738 (47)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:37 (grouped into LUT with out node tmp_741)
:5  %tmp_738 = zext i8 %t_load to i32

ST_5: tmp_739 (48)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:37 (grouped into LUT with out node tmp_741)
:6  %tmp_739 = xor i32 %r_v_load, %tmp_738

ST_5: tmp_740 (49)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:37 (grouped into LUT with out node tmp_741)
:7  %tmp_740 = and i32 %tmp_739, %mask_cast

ST_5: tmp_741 (50)  [1/1] 0.05ns  loc: ed25519_ref/src/sc25519.c:37 (out node of the LUT)
:8  %tmp_741 = xor i32 %r_v_load, %tmp_740

ST_5: StgValue_54 (51)  [1/1] 1.24ns  loc: ed25519_ref/src/sc25519.c:37
:9  store i32 %tmp_741, i32* %r_v_addr_1, align 4

ST_5: StgValue_55 (52)  [1/1] 0.00ns  loc: ed25519_ref/src/sc25519.c:36
:10  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('pb', ed25519_ref/src/sc25519.c:15->ed25519_ref/src/sc25519.c:31) with incoming values : ('tmp_756', ed25519_ref/src/sc25519.c:15->ed25519_ref/src/sc25519.c:31) [7]  (0.656 ns)

 <State 2>: 1.24ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519_ref/src/sc25519.c:28) [8]  (0 ns)
	'getelementptr' operation ('r_v_addr', ed25519_ref/src/sc25519.c:31) [20]  (0 ns)
	'load' operation ('a', ed25519_ref/src/sc25519.c:31) on array 'r_v' [21]  (1.24 ns)

 <State 3>: 3.69ns
The critical path consists of the following:
	'load' operation ('m_load', ed25519_ref/src/sc25519.c:30) on array 'm' [16]  (0.571 ns)
	'add' operation ('pb', ed25519_ref/src/sc25519.c:30) [18]  (1.09 ns)
	'sub' operation ('x', ed25519_ref/src/sc25519.c:14->ed25519_ref/src/sc25519.c:31) [22]  (1.34 ns)
	'store' operation (ed25519_ref/src/sc25519.c:32) of variable 'tmp_757', ed25519_ref/src/sc25519.c:32 on array 't', ed25519_ref/src/sc25519.c:26 [26]  (0.677 ns)

 <State 4>: 1.24ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ed25519_ref/src/sc25519.c:36) [36]  (0 ns)
	'getelementptr' operation ('r_v_addr_1', ed25519_ref/src/sc25519.c:37) [43]  (0 ns)
	'load' operation ('r_v_load', ed25519_ref/src/sc25519.c:37) on array 'r_v' [44]  (1.24 ns)

 <State 5>: 2.53ns
The critical path consists of the following:
	'load' operation ('r_v_load', ed25519_ref/src/sc25519.c:37) on array 'r_v' [44]  (1.24 ns)
	'xor' operation ('tmp_741', ed25519_ref/src/sc25519.c:37) [50]  (0.051 ns)
	'store' operation (ed25519_ref/src/sc25519.c:37) of variable 'tmp_741', ed25519_ref/src/sc25519.c:37 on array 'r_v' [51]  (1.24 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
