

================================================================
== Vivado HLS Report for 'transform'
================================================================
* Date:           Mon May  1 20:16:16 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        sha256_stream
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-1-i-es1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      4.73|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |  743|  1485|  743|  1485|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+------+----------+-----------+-----------+-------+----------+
        |             |   Latency  | Iteration|  Initiation Interval  |  Trip |          |
        |  Loop Name  | min |  max |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------+-----+------+----------+-----------+-----------+-------+----------+
        |- Loop 1     |  742|  1484|       742|          -|          -| 1 ~ 2 |    no    |
        | + Loop 1.1  |   48|    48|         3|          -|          -|     16|    no    |
        | + Loop 1.2  |  144|   144|         3|          -|          -|     48|    no    |
        | + Loop 1.3  |   16|    16|         2|          -|          -|      8|    no    |
        | + Loop 1.4  |  512|   512|         8|          -|          -|     64|    no    |
        | + Loop 1.5  |   16|    16|         2|          -|          -|      8|    no    |
        +-------------+-----+------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 20
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
	6  / (exitcond1)
4 --> 
	5  / true
5 --> 
	3  / true
6 --> 
	7  / (!exitcond9)
	9  / (exitcond9)
7 --> 
	8  / true
8 --> 
	6  / true
9 --> 
	10  / (!exitcond8)
	11  / (exitcond8)
10 --> 
	9  / true
11 --> 
	12  / (!exitcond7)
	19  / (exitcond7)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	11  / true
19 --> 
	20  / (!exitcond)
	2  / (exitcond)
20 --> 
	19  / true
* FSM state operations: 

 <State 1>: 0.76ns
ST_1: block_nb_read (5)  [1/1] 0.00ns
:0  %block_nb_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %block_nb)

ST_1: w (6)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:37
:1  %w = alloca [64 x i32], align 16

ST_1: wv (7)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:38
:2  %wv = alloca [8 x i32], align 16

ST_1: wv_addr (8)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:3  %wv_addr = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 7

ST_1: wv_addr_1 (9)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:4  %wv_addr_1 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 4

ST_1: wv_addr_2 (10)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:5  %wv_addr_2 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 5

ST_1: wv_addr_3 (11)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:6  %wv_addr_3 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 6

ST_1: wv_addr_4 (12)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57
:7  %wv_addr_4 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 0

ST_1: wv_addr_5 (13)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57
:8  %wv_addr_5 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 1

ST_1: wv_addr_6 (14)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57
:9  %wv_addr_6 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 2

ST_1: wv_addr_7 (15)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:61
:10  %wv_addr_7 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 3

ST_1: StgValue_32 (16)  [1/1] 0.76ns  loc: sha256_stream/src/sha256_stream.cpp:43
:11  br label %.loopexit


 <State 2>: 1.00ns
ST_2: i (18)  [1/1] 0.00ns
.loopexit:0  %i = phi i2 [ 0, %0 ], [ %i_2, %.loopexit.loopexit ]

ST_2: empty (19)  [1/1] 0.00ns
.loopexit:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 2, i64 0)

ST_2: exitcond2 (20)  [1/1] 0.12ns  loc: sha256_stream/src/sha256_stream.cpp:43
.loopexit:2  %exitcond2 = icmp eq i2 %i, %block_nb_read

ST_2: i_2 (21)  [1/1] 1.00ns  loc: sha256_stream/src/sha256_stream.cpp:43
.loopexit:3  %i_2 = add i2 %i, 1

ST_2: StgValue_37 (22)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:43
.loopexit:4  br i1 %exitcond2, label %6, label %.preheader2.preheader

ST_2: StgValue_38 (24)  [1/1] 0.76ns  loc: sha256_stream/src/sha256_stream.cpp:45
.preheader2.preheader:0  br label %.preheader2

ST_2: StgValue_39 (210)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:71
:0  ret void


 <State 3>: 1.35ns
ST_3: j (26)  [1/1] 0.00ns
.preheader2:0  %j = phi i5 [ %j_5, %1 ], [ 0, %.preheader2.preheader ]

ST_3: exitcond1 (27)  [1/1] 0.47ns  loc: sha256_stream/src/sha256_stream.cpp:45
.preheader2:1  %exitcond1 = icmp eq i5 %j, -16

ST_3: empty_19 (28)  [1/1] 0.00ns
.preheader2:2  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_3: j_5 (29)  [1/1] 1.26ns  loc: sha256_stream/src/sha256_stream.cpp:45
.preheader2:3  %j_5 = add i5 %j, 1

ST_3: StgValue_44 (30)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:45
.preheader2:4  br i1 %exitcond1, label %.preheader13.preheader, label %1

ST_3: tmp (32)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:45
:0  %tmp = trunc i5 %j to i4

ST_3: tmp_71 (33)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:43
:1  %tmp_71 = trunc i2 %i to i1

ST_3: sub_block_0_sum (34)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:2  %sub_block_0_sum = call i7 @_ssdm_op_BitConcatenate.i7.i1.i4.i2(i1 %tmp_71, i4 %tmp, i2 0)

ST_3: p_sum1 (36)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:4  %p_sum1 = or i7 %sub_block_0_sum, 3

ST_3: p_sum1_cast (37)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:5  %p_sum1_cast = zext i7 %p_sum1 to i64

ST_3: message_addr (38)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:6  %message_addr = getelementptr [128 x i8]* %message, i64 0, i64 %p_sum1_cast

ST_3: message_load (39)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:7  %message_load = load i8* %message_addr, align 1

ST_3: p_sum3 (40)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:8  %p_sum3 = or i7 %sub_block_0_sum, 2

ST_3: p_sum3_cast (41)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:9  %p_sum3_cast = zext i7 %p_sum3 to i64

ST_3: message_addr_4 (42)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:10  %message_addr_4 = getelementptr [128 x i8]* %message, i64 0, i64 %p_sum3_cast

ST_3: message_load_1 (43)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:11  %message_load_1 = load i8* %message_addr_4, align 1

ST_3: StgValue_56 (56)  [1/1] 0.76ns  loc: sha256_stream/src/sha256_stream.cpp:48
.preheader13.preheader:0  br label %.preheader13


 <State 4>: 1.35ns
ST_4: sub_block_0_sum_cast (35)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:3  %sub_block_0_sum_cast = zext i7 %sub_block_0_sum to i64

ST_4: message_load (39)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:7  %message_load = load i8* %message_addr, align 1

ST_4: message_load_1 (43)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:11  %message_load_1 = load i8* %message_addr_4, align 1

ST_4: p_sum5 (44)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:12  %p_sum5 = or i7 %sub_block_0_sum, 1

ST_4: p_sum5_cast (45)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:13  %p_sum5_cast = zext i7 %p_sum5 to i64

ST_4: message_addr_5 (46)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:14  %message_addr_5 = getelementptr [128 x i8]* %message, i64 0, i64 %p_sum5_cast

ST_4: message_load_2 (47)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:15  %message_load_2 = load i8* %message_addr_5, align 1

ST_4: message_addr_6 (48)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:16  %message_addr_6 = getelementptr [128 x i8]* %message, i64 0, i64 %sub_block_0_sum_cast

ST_4: message_load_3 (49)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:17  %message_load_3 = load i8* %message_addr_6, align 1


 <State 5>: 2.70ns
ST_5: message_load_2 (47)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:15  %message_load_2 = load i8* %message_addr_5, align 1

ST_5: message_load_3 (49)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:17  %message_load_3 = load i8* %message_addr_6, align 1

ST_5: tmp_19 (50)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:18  %tmp_19 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %message_load_3, i8 %message_load_2, i8 %message_load_1, i8 %message_load)

ST_5: tmp_20 (51)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:19  %tmp_20 = zext i5 %j to i64

ST_5: w_addr (52)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:46
:20  %w_addr = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_20

ST_5: StgValue_71 (53)  [1/1] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:46
:21  store i32 %tmp_19, i32* %w_addr, align 4

ST_5: StgValue_72 (54)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:45
:22  br label %.preheader2


 <State 6>: 2.63ns
ST_6: j_1 (58)  [1/1] 0.00ns
.preheader13:0  %j_1 = phi i7 [ %j_6, %2 ], [ 16, %.preheader13.preheader ]

ST_6: exitcond9 (59)  [1/1] 0.66ns  loc: sha256_stream/src/sha256_stream.cpp:48
.preheader13:1  %exitcond9 = icmp eq i7 %j_1, -64

ST_6: empty_20 (60)  [1/1] 0.00ns
.preheader13:2  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)

ST_6: StgValue_76 (61)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:48
.preheader13:3  br i1 %exitcond9, label %.preheader12.preheader, label %2

ST_6: tmp_21 (63)  [1/1] 1.27ns  loc: sha256_stream/src/sha256_stream.cpp:49
:0  %tmp_21 = add i7 -2, %j_1

ST_6: tmp_22 (64)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:1  %tmp_22 = zext i7 %tmp_21 to i64

ST_6: w_addr_1 (65)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:2  %w_addr_1 = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_22

ST_6: w_load (66)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:3  %w_load = load i32* %w_addr_1, align 4

ST_6: tmp_32 (77)  [1/1] 1.27ns  loc: sha256_stream/src/sha256_stream.cpp:49
:14  %tmp_32 = add i7 -7, %j_1

ST_6: tmp_33 (78)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:15  %tmp_33 = zext i7 %tmp_32 to i64

ST_6: w_addr_2 (79)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:16  %w_addr_2 = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_33

ST_6: w_load_1 (80)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:17  %w_load_1 = load i32* %w_addr_2, align 4

ST_6: StgValue_85 (108)  [1/1] 0.76ns  loc: sha256_stream/src/sha256_stream.cpp:51
.preheader12.preheader:0  br label %.preheader12


 <State 7>: 2.63ns
ST_7: w_load (66)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:3  %w_load = load i32* %w_addr_1, align 4

ST_7: w_load_1 (80)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:17  %w_load_1 = load i32* %w_addr_2, align 4

ST_7: tmp_34 (81)  [1/1] 1.27ns  loc: sha256_stream/src/sha256_stream.cpp:49
:18  %tmp_34 = add i7 -15, %j_1

ST_7: tmp_35 (82)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:19  %tmp_35 = zext i7 %tmp_34 to i64

ST_7: w_addr_3 (83)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:20  %w_addr_3 = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_35

ST_7: w_load_2 (84)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:21  %w_load_2 = load i32* %w_addr_3, align 4

ST_7: tmp_45 (95)  [1/1] 1.27ns  loc: sha256_stream/src/sha256_stream.cpp:49
:32  %tmp_45 = add i7 -16, %j_1

ST_7: tmp_46 (96)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:33  %tmp_46 = zext i7 %tmp_45 to i64

ST_7: w_addr_4 (97)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:34  %w_addr_4 = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_46

ST_7: w_load_3 (98)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:35  %w_load_3 = load i32* %w_addr_4, align 4


 <State 8>: 4.73ns
ST_8: tmp_23 (67)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:4  %tmp_23 = call i15 @_ssdm_op_PartSelect.i15.i32.i32.i32(i32 %w_load, i32 17, i32 31)

ST_8: tmp_74 (68)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:5  %tmp_74 = trunc i32 %w_load to i17

ST_8: tmp_25 (69)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:6  %tmp_25 = call i32 @_ssdm_op_BitConcatenate.i32.i17.i15(i17 %tmp_74, i15 %tmp_23)

ST_8: tmp_26 (70)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:7  %tmp_26 = call i13 @_ssdm_op_PartSelect.i13.i32.i32.i32(i32 %w_load, i32 19, i32 31)

ST_8: tmp_84 (71)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:8  %tmp_84 = trunc i32 %w_load to i19

ST_8: tmp_28 (72)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:9  %tmp_28 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i13(i19 %tmp_84, i13 %tmp_26)

ST_8: tmp_29 (73)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:10  %tmp_29 = call i22 @_ssdm_op_PartSelect.i22.i32.i32.i32(i32 %w_load, i32 10, i32 31)

ST_8: tmp_85 (74)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:11  %tmp_85 = zext i22 %tmp_29 to i32

ST_8: tmp1 (75)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:12  %tmp1 = xor i32 %tmp_85, %tmp_28

ST_8: tmp_31 (76)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:13  %tmp_31 = xor i32 %tmp1, %tmp_25

ST_8: w_load_2 (84)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:21  %w_load_2 = load i32* %w_addr_3, align 4

ST_8: tmp_36 (85)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:22  %tmp_36 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %w_load_2, i32 7, i32 31)

ST_8: tmp_86 (86)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:23  %tmp_86 = trunc i32 %w_load_2 to i7

ST_8: tmp_38 (87)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:24  %tmp_38 = call i32 @_ssdm_op_BitConcatenate.i32.i7.i25(i7 %tmp_86, i25 %tmp_36)

ST_8: tmp_39 (88)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:25  %tmp_39 = call i14 @_ssdm_op_PartSelect.i14.i32.i32.i32(i32 %w_load_2, i32 18, i32 31)

ST_8: tmp_87 (89)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:26  %tmp_87 = trunc i32 %w_load_2 to i18

ST_8: tmp_41 (90)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:27  %tmp_41 = call i32 @_ssdm_op_BitConcatenate.i32.i18.i14(i18 %tmp_87, i14 %tmp_39)

ST_8: tmp_42 (91)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:28  %tmp_42 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %w_load_2, i32 3, i32 31)

ST_8: tmp_88 (92)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:29  %tmp_88 = zext i29 %tmp_42 to i32

ST_8: tmp2 (93)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:30  %tmp2 = xor i32 %tmp_88, %tmp_41

ST_8: tmp_44 (94)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49 (grouped into LUT with out node tmp4)
:31  %tmp_44 = xor i32 %tmp2, %tmp_38

ST_8: w_load_3 (98)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:35  %w_load_3 = load i32* %w_addr_4, align 4

ST_8: tmp3 (99)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:49
:36  %tmp3 = add i32 %w_load_1, %w_load_3

ST_8: tmp4 (100)  [1/1] 1.58ns  loc: sha256_stream/src/sha256_stream.cpp:49 (out node of the LUT)
:37  %tmp4 = add i32 %tmp_31, %tmp_44

ST_8: tmp_49 (101)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:49
:38  %tmp_49 = add i32 %tmp4, %tmp3

ST_8: tmp_50 (102)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:39  %tmp_50 = zext i7 %j_1 to i64

ST_8: w_addr_5 (103)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:49
:40  %w_addr_5 = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_50

ST_8: StgValue_123 (104)  [1/1] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:49
:41  store i32 %tmp_49, i32* %w_addr_5, align 4

ST_8: j_6 (105)  [1/1] 1.27ns  loc: sha256_stream/src/sha256_stream.cpp:48
:42  %j_6 = add i7 1, %j_1

ST_8: StgValue_125 (106)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:48
:43  br label %.preheader13


 <State 9>: 1.25ns
ST_9: j_2 (110)  [1/1] 0.00ns
.preheader12:0  %j_2 = phi i4 [ %j_7, %3 ], [ 0, %.preheader12.preheader ]

ST_9: exitcond8 (111)  [1/1] 0.52ns  loc: sha256_stream/src/sha256_stream.cpp:51
.preheader12:1  %exitcond8 = icmp eq i4 %j_2, -8

ST_9: empty_21 (112)  [1/1] 0.00ns
.preheader12:2  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_9: j_7 (113)  [1/1] 1.25ns  loc: sha256_stream/src/sha256_stream.cpp:51
.preheader12:3  %j_7 = add i4 %j_2, 1

ST_9: StgValue_130 (114)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:51
.preheader12:4  br i1 %exitcond8, label %.preheader11.preheader, label %3

ST_9: tmp_51 (116)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:52
:0  %tmp_51 = zext i4 %j_2 to i64

ST_9: SHA256_m_h_addr (117)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:52
:1  %SHA256_m_h_addr = getelementptr [8 x i32]* %SHA256_m_h, i64 0, i64 %tmp_51

ST_9: SHA256_m_h_load (118)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:52
:2  %SHA256_m_h_load = load i32* %SHA256_m_h_addr, align 4

ST_9: StgValue_134 (123)  [1/1] 0.76ns  loc: sha256_stream/src/sha256_stream.cpp:54
.preheader11.preheader:0  br label %.preheader11


 <State 10>: 1.58ns
ST_10: SHA256_m_h_load (118)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:52
:2  %SHA256_m_h_load = load i32* %SHA256_m_h_addr, align 4

ST_10: wv_addr_8 (119)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:52
:3  %wv_addr_8 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 %tmp_51

ST_10: StgValue_137 (120)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:52
:4  store i32 %SHA256_m_h_load, i32* %wv_addr_8, align 4

ST_10: StgValue_138 (121)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:51
:5  br label %.preheader12


 <State 11>: 1.27ns
ST_11: j_3 (125)  [1/1] 0.00ns
.preheader11:0  %j_3 = phi i7 [ %j_8, %4 ], [ 0, %.preheader11.preheader ]

ST_11: exitcond7 (126)  [1/1] 0.66ns  loc: sha256_stream/src/sha256_stream.cpp:54
.preheader11:1  %exitcond7 = icmp eq i7 %j_3, -64

ST_11: empty_22 (127)  [1/1] 0.00ns
.preheader11:2  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_11: j_8 (128)  [1/1] 1.27ns  loc: sha256_stream/src/sha256_stream.cpp:54
.preheader11:3  %j_8 = add i7 %j_3, 1

ST_11: StgValue_143 (129)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:54
.preheader11:4  br i1 %exitcond7, label %.preheader.preheader, label %4

ST_11: wv_load (131)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:0  %wv_load = load i32* %wv_addr, align 4

ST_11: wv_load_1 (132)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:1  %wv_load_1 = load i32* %wv_addr_1, align 16

ST_11: StgValue_146 (191)  [1/1] 0.76ns  loc: sha256_stream/src/sha256_stream.cpp:67
.preheader.preheader:0  br label %.preheader


 <State 12>: 1.35ns
ST_12: wv_load (131)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:0  %wv_load = load i32* %wv_addr, align 4

ST_12: wv_load_1 (132)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:1  %wv_load_1 = load i32* %wv_addr_1, align 16

ST_12: tmp_52 (133)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:2  %tmp_52 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %wv_load_1, i32 6, i32 31)

ST_12: tmp_89 (134)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:3  %tmp_89 = trunc i32 %wv_load_1 to i6

ST_12: tmp_54 (135)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:4  %tmp_54 = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 %tmp_89, i26 %tmp_52)

ST_12: tmp_55 (136)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:5  %tmp_55 = call i21 @_ssdm_op_PartSelect.i21.i32.i32.i32(i32 %wv_load_1, i32 11, i32 31)

ST_12: tmp_90 (137)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:6  %tmp_90 = trunc i32 %wv_load_1 to i11

ST_12: tmp_57 (138)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:7  %tmp_57 = call i32 @_ssdm_op_BitConcatenate.i32.i11.i21(i11 %tmp_90, i21 %tmp_55)

ST_12: tmp_58 (139)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:8  %tmp_58 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %wv_load_1, i32 25, i32 31)

ST_12: tmp_91 (140)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:9  %tmp_91 = trunc i32 %wv_load_1 to i25

ST_12: tmp_60 (141)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:10  %tmp_60 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %tmp_91, i7 %tmp_58)

ST_12: tmp5 (142)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_62)
:11  %tmp5 = xor i32 %tmp_60, %tmp_57

ST_12: tmp_62 (143)  [1/1] 0.06ns  loc: sha256_stream/src/sha256_stream.cpp:55 (out node of the LUT)
:12  %tmp_62 = xor i32 %tmp5, %tmp_54

ST_12: wv_load_2 (144)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:13  %wv_load_2 = load i32* %wv_addr_2, align 4

ST_12: wv_load_3 (147)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:16  %wv_load_3 = load i32* %wv_addr_3, align 8

ST_12: tmp_66 (150)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:19  %tmp_66 = zext i7 %j_3 to i64

ST_12: SHA256_sha256_k_add (151)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:20  %SHA256_sha256_k_add = getelementptr inbounds [64 x i32]* @SHA256_sha256_k, i64 0, i64 %tmp_66

ST_12: SHA256_sha256_k_loa (152)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:55
:21  %SHA256_sha256_k_loa = load i32* %SHA256_sha256_k_add, align 4

ST_12: w_addr_6 (153)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55
:22  %w_addr_6 = getelementptr inbounds [64 x i32]* %w, i64 0, i64 %tmp_66

ST_12: w_load_4 (154)  [2/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:55
:23  %w_load_4 = load i32* %w_addr_6, align 4


 <State 13>: 2.24ns
ST_13: wv_load_2 (144)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:13  %wv_load_2 = load i32* %wv_addr_2, align 4

ST_13: tmp_63 (145)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_65)
:14  %tmp_63 = and i32 %wv_load_2, %wv_load_1

ST_13: tmp_64 (146)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_65)
:15  %tmp_64 = xor i32 %wv_load_1, -1

ST_13: wv_load_3 (147)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:55
:16  %wv_load_3 = load i32* %wv_addr_3, align 8

ST_13: tmp_s (148)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:55 (grouped into LUT with out node tmp_65)
:17  %tmp_s = and i32 %wv_load_3, %tmp_64

ST_13: tmp_65 (149)  [1/1] 0.06ns  loc: sha256_stream/src/sha256_stream.cpp:55 (out node of the LUT)
:18  %tmp_65 = xor i32 %tmp_s, %tmp_63

ST_13: SHA256_sha256_k_loa (152)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:55
:21  %SHA256_sha256_k_loa = load i32* %SHA256_sha256_k_add, align 4

ST_13: w_load_4 (154)  [1/2] 1.35ns  loc: sha256_stream/src/sha256_stream.cpp:55
:23  %w_load_4 = load i32* %w_addr_6, align 4

ST_13: tmp8 (155)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:55
:24  %tmp8 = add i32 %SHA256_sha256_k_loa, %wv_load

ST_13: tmp10 (156)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:55
:25  %tmp10 = add i32 %tmp_62, %tmp_65

ST_13: tmp9 (157)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:55
:26  %tmp9 = add i32 %tmp10, %w_load_4

ST_13: t1 (158)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:55
:27  %t1 = add i32 %tmp9, %tmp8

ST_13: wv_load_4 (159)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:57
:28  %wv_load_4 = load i32* %wv_addr_4, align 16

ST_13: wv_load_5 (171)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:57
:40  %wv_load_5 = load i32* %wv_addr_5, align 4


 <State 14>: 0.85ns
ST_14: wv_load_4 (159)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:57
:28  %wv_load_4 = load i32* %wv_addr_4, align 16

ST_14: tmp_67 (160)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:29  %tmp_67 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %wv_load_4, i32 2, i32 31)

ST_14: tmp_92 (161)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:30  %tmp_92 = trunc i32 %wv_load_4 to i2

ST_14: tmp_68 (162)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:31  %tmp_68 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_92, i30 %tmp_67)

ST_14: tmp_69 (163)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:32  %tmp_69 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %wv_load_4, i32 13, i32 31)

ST_14: tmp_93 (164)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:33  %tmp_93 = trunc i32 %wv_load_4 to i13

ST_14: tmp_70 (165)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:34  %tmp_70 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 %tmp_93, i19 %tmp_69)

ST_14: tmp_72 (166)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:35  %tmp_72 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %wv_load_4, i32 22, i32 31)

ST_14: tmp_94 (167)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:36  %tmp_94 = trunc i32 %wv_load_4 to i22

ST_14: tmp_73 (168)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:37  %tmp_73 = call i32 @_ssdm_op_BitConcatenate.i32.i22.i10(i22 %tmp_94, i10 %tmp_72)

ST_14: tmp11 (169)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_75)
:38  %tmp11 = xor i32 %tmp_73, %tmp_70

ST_14: tmp_75 (170)  [1/1] 0.06ns  loc: sha256_stream/src/sha256_stream.cpp:57 (out node of the LUT)
:39  %tmp_75 = xor i32 %tmp11, %tmp_68

ST_14: wv_load_5 (171)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:57
:40  %wv_load_5 = load i32* %wv_addr_5, align 4

ST_14: wv_load_6 (172)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:57
:41  %wv_load_6 = load i32* %wv_addr_6, align 8

ST_14: wv_load_7 (180)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:61
:49  %wv_load_7 = load i32* %wv_addr_7, align 4


 <State 15>: 2.37ns
ST_15: wv_load_6 (172)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:57
:41  %wv_load_6 = load i32* %wv_addr_6, align 8

ST_15: tmp_76 (173)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_79)
:42  %tmp_76 = and i32 %wv_load_6, %wv_load_5

ST_15: tmp_77 (174)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_79)
:43  %tmp_77 = xor i32 %wv_load_6, %wv_load_5

ST_15: tmp_78 (175)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:57 (grouped into LUT with out node tmp_79)
:44  %tmp_78 = and i32 %wv_load_4, %tmp_77

ST_15: tmp_79 (176)  [1/1] 0.06ns  loc: sha256_stream/src/sha256_stream.cpp:57 (out node of the LUT)
:45  %tmp_79 = xor i32 %tmp_78, %tmp_76

ST_15: StgValue_201 (177)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:58
:46  store i32 %wv_load_3, i32* %wv_addr, align 4

ST_15: StgValue_202 (178)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:59
:47  store i32 %wv_load_2, i32* %wv_addr_3, align 8

ST_15: wv_load_7 (180)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:61
:49  %wv_load_7 = load i32* %wv_addr_7, align 4

ST_15: tmp_80 (181)  [1/1] 1.58ns  loc: sha256_stream/src/sha256_stream.cpp:61
:50  %tmp_80 = add i32 %wv_load_7, %t1

ST_15: tmp12 (186)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:65
:55  %tmp12 = add i32 %tmp_75, %tmp_79

ST_15: tmp_81 (187)  [1/1] 0.44ns  loc: sha256_stream/src/sha256_stream.cpp:65
:56  %tmp_81 = add i32 %tmp12, %t1


 <State 16>: 0.79ns
ST_16: StgValue_207 (179)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:60
:48  store i32 %wv_load_1, i32* %wv_addr_2, align 4

ST_16: StgValue_208 (182)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:61
:51  store i32 %tmp_80, i32* %wv_addr_1, align 16


 <State 17>: 0.79ns
ST_17: StgValue_209 (183)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:62
:52  store i32 %wv_load_6, i32* %wv_addr_7, align 4

ST_17: StgValue_210 (184)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:63
:53  store i32 %wv_load_5, i32* %wv_addr_6, align 8


 <State 18>: 0.79ns
ST_18: StgValue_211 (185)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:64
:54  store i32 %wv_load_4, i32* %wv_addr_5, align 4

ST_18: StgValue_212 (188)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:65
:57  store i32 %tmp_81, i32* %wv_addr_4, align 16

ST_18: StgValue_213 (189)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:54
:58  br label %.preheader11


 <State 19>: 1.25ns
ST_19: j_4 (193)  [1/1] 0.00ns
.preheader:0  %j_4 = phi i4 [ %j_9, %5 ], [ 0, %.preheader.preheader ]

ST_19: exitcond (194)  [1/1] 0.52ns  loc: sha256_stream/src/sha256_stream.cpp:67
.preheader:1  %exitcond = icmp eq i4 %j_4, -8

ST_19: empty_23 (195)  [1/1] 0.00ns
.preheader:2  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_19: j_9 (196)  [1/1] 1.25ns  loc: sha256_stream/src/sha256_stream.cpp:67
.preheader:3  %j_9 = add i4 %j_4, 1

ST_19: StgValue_218 (197)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:67
.preheader:4  br i1 %exitcond, label %.loopexit.loopexit, label %5

ST_19: tmp_82 (199)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:68
:0  %tmp_82 = zext i4 %j_4 to i64

ST_19: wv_addr_9 (200)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:68
:1  %wv_addr_9 = getelementptr inbounds [8 x i32]* %wv, i64 0, i64 %tmp_82

ST_19: wv_load_8 (201)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:68
:2  %wv_load_8 = load i32* %wv_addr_9, align 4

ST_19: SHA256_m_h_addr_1 (202)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:68
:3  %SHA256_m_h_addr_1 = getelementptr [8 x i32]* %SHA256_m_h, i64 0, i64 %tmp_82

ST_19: SHA256_m_h_load_1 (203)  [2/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:68
:4  %SHA256_m_h_load_1 = load i32* %SHA256_m_h_addr_1, align 4

ST_19: StgValue_224 (208)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 20>: 3.16ns
ST_20: wv_load_8 (201)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:68
:2  %wv_load_8 = load i32* %wv_addr_9, align 4

ST_20: SHA256_m_h_load_1 (203)  [1/2] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:68
:4  %SHA256_m_h_load_1 = load i32* %SHA256_m_h_addr_1, align 4

ST_20: tmp_83 (204)  [1/1] 1.58ns  loc: sha256_stream/src/sha256_stream.cpp:68
:5  %tmp_83 = add i32 %wv_load_8, %SHA256_m_h_load_1

ST_20: StgValue_228 (205)  [1/1] 0.79ns  loc: sha256_stream/src/sha256_stream.cpp:68
:6  store i32 %tmp_83, i32* %SHA256_m_h_addr_1, align 4

ST_20: StgValue_229 (206)  [1/1] 0.00ns  loc: sha256_stream/src/sha256_stream.cpp:67
:7  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', sha256_stream/src/sha256_stream.cpp:43) [18]  (0.755 ns)

 <State 2>: 1ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256_stream/src/sha256_stream.cpp:43) [18]  (0 ns)
	'add' operation ('i', sha256_stream/src/sha256_stream.cpp:43) [21]  (1 ns)

 <State 3>: 1.35ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', sha256_stream/src/sha256_stream.cpp:45) [26]  (0 ns)
	'or' operation ('p_sum1', sha256_stream/src/sha256_stream.cpp:46) [36]  (0 ns)
	'getelementptr' operation ('message_addr', sha256_stream/src/sha256_stream.cpp:46) [38]  (0 ns)
	'load' operation ('message_load', sha256_stream/src/sha256_stream.cpp:46) on array 'message' [39]  (1.35 ns)

 <State 4>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('message_addr_6', sha256_stream/src/sha256_stream.cpp:46) [48]  (0 ns)
	'load' operation ('message_load_3', sha256_stream/src/sha256_stream.cpp:46) on array 'message' [49]  (1.35 ns)

 <State 5>: 2.7ns
The critical path consists of the following:
	'load' operation ('message_load_2', sha256_stream/src/sha256_stream.cpp:46) on array 'message' [47]  (1.35 ns)
	'store' operation (sha256_stream/src/sha256_stream.cpp:46) of variable 'tmp_19', sha256_stream/src/sha256_stream.cpp:46 on array 'w', sha256_stream/src/sha256_stream.cpp:37 [53]  (1.35 ns)

 <State 6>: 2.63ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', sha256_stream/src/sha256_stream.cpp:48) [58]  (0 ns)
	'add' operation ('tmp_32', sha256_stream/src/sha256_stream.cpp:49) [77]  (1.27 ns)
	'getelementptr' operation ('w_addr_2', sha256_stream/src/sha256_stream.cpp:49) [79]  (0 ns)
	'load' operation ('w_load_1', sha256_stream/src/sha256_stream.cpp:49) on array 'w', sha256_stream/src/sha256_stream.cpp:37 [80]  (1.35 ns)

 <State 7>: 2.63ns
The critical path consists of the following:
	'add' operation ('tmp_34', sha256_stream/src/sha256_stream.cpp:49) [81]  (1.27 ns)
	'getelementptr' operation ('w_addr_3', sha256_stream/src/sha256_stream.cpp:49) [83]  (0 ns)
	'load' operation ('w_load_2', sha256_stream/src/sha256_stream.cpp:49) on array 'w', sha256_stream/src/sha256_stream.cpp:37 [84]  (1.35 ns)

 <State 8>: 4.73ns
The critical path consists of the following:
	'load' operation ('w_load_2', sha256_stream/src/sha256_stream.cpp:49) on array 'w', sha256_stream/src/sha256_stream.cpp:37 [84]  (1.35 ns)
	'xor' operation ('tmp_44', sha256_stream/src/sha256_stream.cpp:49) [94]  (0 ns)
	'add' operation ('tmp4', sha256_stream/src/sha256_stream.cpp:49) [100]  (1.58 ns)
	'add' operation ('tmp_49', sha256_stream/src/sha256_stream.cpp:49) [101]  (0.445 ns)
	'store' operation (sha256_stream/src/sha256_stream.cpp:49) of variable 'tmp_49', sha256_stream/src/sha256_stream.cpp:49 on array 'w', sha256_stream/src/sha256_stream.cpp:37 [104]  (1.35 ns)

 <State 9>: 1.25ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', sha256_stream/src/sha256_stream.cpp:51) [110]  (0 ns)
	'add' operation ('j', sha256_stream/src/sha256_stream.cpp:51) [113]  (1.25 ns)

 <State 10>: 1.58ns
The critical path consists of the following:
	'load' operation ('SHA256_m_h_load', sha256_stream/src/sha256_stream.cpp:52) on array 'SHA256_m_h' [118]  (0.79 ns)
	'store' operation (sha256_stream/src/sha256_stream.cpp:52) of variable 'SHA256_m_h_load', sha256_stream/src/sha256_stream.cpp:52 on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [120]  (0.79 ns)

 <State 11>: 1.27ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', sha256_stream/src/sha256_stream.cpp:54) [125]  (0 ns)
	'add' operation ('j', sha256_stream/src/sha256_stream.cpp:54) [128]  (1.27 ns)

 <State 12>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('SHA256_sha256_k_add', sha256_stream/src/sha256_stream.cpp:55) [151]  (0 ns)
	'load' operation ('SHA256_sha256_k_loa', sha256_stream/src/sha256_stream.cpp:55) on array 'SHA256_sha256_k' [152]  (1.35 ns)

 <State 13>: 2.24ns
The critical path consists of the following:
	'load' operation ('SHA256_sha256_k_loa', sha256_stream/src/sha256_stream.cpp:55) on array 'SHA256_sha256_k' [152]  (1.35 ns)
	'add' operation ('tmp8', sha256_stream/src/sha256_stream.cpp:55) [155]  (0.445 ns)
	'add' operation ('t1', sha256_stream/src/sha256_stream.cpp:55) [158]  (0.445 ns)

 <State 14>: 0.854ns
The critical path consists of the following:
	'load' operation ('wv_load_4', sha256_stream/src/sha256_stream.cpp:57) on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [159]  (0.79 ns)
	'xor' operation ('tmp_75', sha256_stream/src/sha256_stream.cpp:57) [170]  (0.064 ns)

 <State 15>: 2.37ns
The critical path consists of the following:
	'load' operation ('wv_load_7', sha256_stream/src/sha256_stream.cpp:61) on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [180]  (0.79 ns)
	'add' operation ('tmp_80', sha256_stream/src/sha256_stream.cpp:61) [181]  (1.58 ns)

 <State 16>: 0.79ns
The critical path consists of the following:
	'store' operation (sha256_stream/src/sha256_stream.cpp:60) of variable 'wv_load_1', sha256_stream/src/sha256_stream.cpp:55 on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [179]  (0.79 ns)

 <State 17>: 0.79ns
The critical path consists of the following:
	'store' operation (sha256_stream/src/sha256_stream.cpp:62) of variable 'wv_load_6', sha256_stream/src/sha256_stream.cpp:57 on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [183]  (0.79 ns)

 <State 18>: 0.79ns
The critical path consists of the following:
	'store' operation (sha256_stream/src/sha256_stream.cpp:64) of variable 'wv_load_4', sha256_stream/src/sha256_stream.cpp:57 on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [185]  (0.79 ns)

 <State 19>: 1.25ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', sha256_stream/src/sha256_stream.cpp:67) [193]  (0 ns)
	'add' operation ('j', sha256_stream/src/sha256_stream.cpp:67) [196]  (1.25 ns)

 <State 20>: 3.16ns
The critical path consists of the following:
	'load' operation ('wv_load_8', sha256_stream/src/sha256_stream.cpp:68) on array 'wv', sha256_stream/src/sha256_stream.cpp:38 [201]  (0.79 ns)
	'add' operation ('tmp_83', sha256_stream/src/sha256_stream.cpp:68) [204]  (1.58 ns)
	'store' operation (sha256_stream/src/sha256_stream.cpp:68) of variable 'tmp_83', sha256_stream/src/sha256_stream.cpp:68 on array 'SHA256_m_h' [205]  (0.79 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
