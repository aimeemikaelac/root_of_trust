// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "contact_discovery.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic contact_discovery::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic contact_discovery::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> contact_discovery::ap_ST_fsm_state1 = "1";
const sc_lv<23> contact_discovery::ap_ST_fsm_state2 = "10";
const sc_lv<23> contact_discovery::ap_ST_fsm_state3 = "100";
const sc_lv<23> contact_discovery::ap_ST_fsm_state4 = "1000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state5 = "10000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state6 = "100000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> contact_discovery::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> contact_discovery::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> contact_discovery::ap_const_lv1_0 = "0";
const sc_lv<1> contact_discovery::ap_const_lv1_1 = "1";
const sc_lv<2> contact_discovery::ap_const_lv2_0 = "00";
const sc_lv<2> contact_discovery::ap_const_lv2_2 = "10";
const sc_lv<2> contact_discovery::ap_const_lv2_3 = "11";
const sc_lv<2> contact_discovery::ap_const_lv2_1 = "1";
const sc_lv<32> contact_discovery::ap_const_lv32_3 = "11";
const sc_lv<32> contact_discovery::ap_const_lv32_A = "1010";
const sc_lv<32> contact_discovery::ap_const_lv32_5 = "101";
const sc_lv<32> contact_discovery::ap_const_lv32_C = "1100";
const sc_lv<32> contact_discovery::ap_const_lv32_7 = "111";
const sc_lv<32> contact_discovery::ap_const_lv32_E = "1110";
const sc_lv<32> contact_discovery::ap_const_lv32_9 = "1001";
const sc_lv<32> contact_discovery::ap_const_lv32_10 = "10000";
const sc_lv<32> contact_discovery::ap_const_lv32_D = "1101";
const sc_lv<32> contact_discovery::ap_const_lv32_F = "1111";
const sc_lv<32> contact_discovery::ap_const_lv32_11 = "10001";
const sc_lv<32> contact_discovery::ap_const_lv32_12 = "10010";
const sc_lv<32> contact_discovery::ap_const_lv32_13 = "10011";
const int contact_discovery::C_S_AXI_DATA_WIDTH = "100000";
const int contact_discovery::C_M_AXI_DB_MEM_V_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int contact_discovery::C_M_AXI_DB_MEM_V_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int contact_discovery::C_M_AXI_DB_MEM_V_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int contact_discovery::C_M_AXI_DB_MEM_V_CACHE_VALUE = "11";
const int contact_discovery::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> contact_discovery::ap_const_lv32_1 = "1";
const sc_lv<32> contact_discovery::ap_const_lv32_2 = "10";
const sc_lv<32> contact_discovery::ap_const_lv32_4 = "100";
const sc_lv<32> contact_discovery::ap_const_lv32_6 = "110";
const sc_lv<32> contact_discovery::ap_const_lv32_14 = "10100";
const sc_lv<32> contact_discovery::ap_const_lv32_B = "1011";
const sc_lv<3> contact_discovery::ap_const_lv3_0 = "000";
const sc_lv<4> contact_discovery::ap_const_lv4_0 = "0000";
const sc_lv<32> contact_discovery::ap_const_lv32_15 = "10101";
const sc_lv<32> contact_discovery::ap_const_lv32_1F = "11111";
const sc_lv<25> contact_discovery::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<25> contact_discovery::ap_const_lv25_1 = "1";
const sc_lv<25> contact_discovery::ap_const_lv25_2 = "10";
const sc_lv<25> contact_discovery::ap_const_lv25_3 = "11";
const sc_lv<32> contact_discovery::ap_const_lv32_16 = "10110";
const sc_lv<64> contact_discovery::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<512> contact_discovery::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const bool contact_discovery::ap_const_boolean_1 = true;

contact_discovery::contact_discovery(sc_module_name name) : sc_module(name), mVcdFile(0) {
    contacts_V_U = new contact_discoverybkb("contacts_V_U");
    contacts_V_U->clk(ap_clk);
    contacts_V_U->reset(ap_rst_n_inv);
    contacts_V_U->address0(contacts_V_address0);
    contacts_V_U->ce0(contacts_V_ce0);
    contacts_V_U->we0(contacts_V_we0);
    contacts_V_U->d0(contact_in_V_read_reg_358);
    contacts_V_U->q0(contacts_V_q0);
    contact_discovery_AXILiteS_s_axi_U = new contact_discovery_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("contact_discovery_AXILiteS_s_axi_U");
    contact_discovery_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    contact_discovery_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    contact_discovery_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    contact_discovery_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    contact_discovery_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    contact_discovery_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    contact_discovery_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    contact_discovery_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    contact_discovery_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    contact_discovery_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    contact_discovery_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    contact_discovery_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    contact_discovery_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    contact_discovery_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    contact_discovery_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    contact_discovery_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    contact_discovery_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    contact_discovery_AXILiteS_s_axi_U->ACLK(ap_clk);
    contact_discovery_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    contact_discovery_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    contact_discovery_AXILiteS_s_axi_U->ap_start(ap_start);
    contact_discovery_AXILiteS_s_axi_U->interrupt(interrupt);
    contact_discovery_AXILiteS_s_axi_U->ap_ready(ap_ready);
    contact_discovery_AXILiteS_s_axi_U->ap_done(ap_done);
    contact_discovery_AXILiteS_s_axi_U->ap_idle(ap_idle);
    contact_discovery_AXILiteS_s_axi_U->operation(operation);
    contact_discovery_AXILiteS_s_axi_U->operation_ap_vld(operation_ap_vld);
    contact_discovery_AXILiteS_s_axi_U->contact_in_V(contact_in_V);
    contact_discovery_AXILiteS_s_axi_U->db_size_in(db_size_in);
    contact_discovery_AXILiteS_s_axi_U->error_out(error_out_1_data_reg);
    contact_discovery_AXILiteS_s_axi_U->contacts_size_out(contacts_size_out_1_data_reg);
    contact_discovery_db_mem_V_m_axi_U = new contact_discovery_db_mem_V_m_axi<512,64,5,16,16,4,16,C_M_AXI_DB_MEM_V_ID_WIDTH,C_M_AXI_DB_MEM_V_ADDR_WIDTH,C_M_AXI_DB_MEM_V_DATA_WIDTH,C_M_AXI_DB_MEM_V_AWUSER_WIDTH,C_M_AXI_DB_MEM_V_ARUSER_WIDTH,C_M_AXI_DB_MEM_V_WUSER_WIDTH,C_M_AXI_DB_MEM_V_RUSER_WIDTH,C_M_AXI_DB_MEM_V_BUSER_WIDTH,C_M_AXI_DB_MEM_V_TARGET_ADDR,C_M_AXI_DB_MEM_V_USER_VALUE,C_M_AXI_DB_MEM_V_PROT_VALUE,C_M_AXI_DB_MEM_V_CACHE_VALUE>("contact_discovery_db_mem_V_m_axi_U");
    contact_discovery_db_mem_V_m_axi_U->AWVALID(m_axi_db_mem_V_AWVALID);
    contact_discovery_db_mem_V_m_axi_U->AWREADY(m_axi_db_mem_V_AWREADY);
    contact_discovery_db_mem_V_m_axi_U->AWADDR(m_axi_db_mem_V_AWADDR);
    contact_discovery_db_mem_V_m_axi_U->AWID(m_axi_db_mem_V_AWID);
    contact_discovery_db_mem_V_m_axi_U->AWLEN(m_axi_db_mem_V_AWLEN);
    contact_discovery_db_mem_V_m_axi_U->AWSIZE(m_axi_db_mem_V_AWSIZE);
    contact_discovery_db_mem_V_m_axi_U->AWBURST(m_axi_db_mem_V_AWBURST);
    contact_discovery_db_mem_V_m_axi_U->AWLOCK(m_axi_db_mem_V_AWLOCK);
    contact_discovery_db_mem_V_m_axi_U->AWCACHE(m_axi_db_mem_V_AWCACHE);
    contact_discovery_db_mem_V_m_axi_U->AWPROT(m_axi_db_mem_V_AWPROT);
    contact_discovery_db_mem_V_m_axi_U->AWQOS(m_axi_db_mem_V_AWQOS);
    contact_discovery_db_mem_V_m_axi_U->AWREGION(m_axi_db_mem_V_AWREGION);
    contact_discovery_db_mem_V_m_axi_U->AWUSER(m_axi_db_mem_V_AWUSER);
    contact_discovery_db_mem_V_m_axi_U->WVALID(m_axi_db_mem_V_WVALID);
    contact_discovery_db_mem_V_m_axi_U->WREADY(m_axi_db_mem_V_WREADY);
    contact_discovery_db_mem_V_m_axi_U->WDATA(m_axi_db_mem_V_WDATA);
    contact_discovery_db_mem_V_m_axi_U->WSTRB(m_axi_db_mem_V_WSTRB);
    contact_discovery_db_mem_V_m_axi_U->WLAST(m_axi_db_mem_V_WLAST);
    contact_discovery_db_mem_V_m_axi_U->WID(m_axi_db_mem_V_WID);
    contact_discovery_db_mem_V_m_axi_U->WUSER(m_axi_db_mem_V_WUSER);
    contact_discovery_db_mem_V_m_axi_U->ARVALID(m_axi_db_mem_V_ARVALID);
    contact_discovery_db_mem_V_m_axi_U->ARREADY(m_axi_db_mem_V_ARREADY);
    contact_discovery_db_mem_V_m_axi_U->ARADDR(m_axi_db_mem_V_ARADDR);
    contact_discovery_db_mem_V_m_axi_U->ARID(m_axi_db_mem_V_ARID);
    contact_discovery_db_mem_V_m_axi_U->ARLEN(m_axi_db_mem_V_ARLEN);
    contact_discovery_db_mem_V_m_axi_U->ARSIZE(m_axi_db_mem_V_ARSIZE);
    contact_discovery_db_mem_V_m_axi_U->ARBURST(m_axi_db_mem_V_ARBURST);
    contact_discovery_db_mem_V_m_axi_U->ARLOCK(m_axi_db_mem_V_ARLOCK);
    contact_discovery_db_mem_V_m_axi_U->ARCACHE(m_axi_db_mem_V_ARCACHE);
    contact_discovery_db_mem_V_m_axi_U->ARPROT(m_axi_db_mem_V_ARPROT);
    contact_discovery_db_mem_V_m_axi_U->ARQOS(m_axi_db_mem_V_ARQOS);
    contact_discovery_db_mem_V_m_axi_U->ARREGION(m_axi_db_mem_V_ARREGION);
    contact_discovery_db_mem_V_m_axi_U->ARUSER(m_axi_db_mem_V_ARUSER);
    contact_discovery_db_mem_V_m_axi_U->RVALID(m_axi_db_mem_V_RVALID);
    contact_discovery_db_mem_V_m_axi_U->RREADY(m_axi_db_mem_V_RREADY);
    contact_discovery_db_mem_V_m_axi_U->RDATA(m_axi_db_mem_V_RDATA);
    contact_discovery_db_mem_V_m_axi_U->RLAST(m_axi_db_mem_V_RLAST);
    contact_discovery_db_mem_V_m_axi_U->RID(m_axi_db_mem_V_RID);
    contact_discovery_db_mem_V_m_axi_U->RUSER(m_axi_db_mem_V_RUSER);
    contact_discovery_db_mem_V_m_axi_U->RRESP(m_axi_db_mem_V_RRESP);
    contact_discovery_db_mem_V_m_axi_U->BVALID(m_axi_db_mem_V_BVALID);
    contact_discovery_db_mem_V_m_axi_U->BREADY(m_axi_db_mem_V_BREADY);
    contact_discovery_db_mem_V_m_axi_U->BRESP(m_axi_db_mem_V_BRESP);
    contact_discovery_db_mem_V_m_axi_U->BID(m_axi_db_mem_V_BID);
    contact_discovery_db_mem_V_m_axi_U->BUSER(m_axi_db_mem_V_BUSER);
    contact_discovery_db_mem_V_m_axi_U->ACLK(ap_clk);
    contact_discovery_db_mem_V_m_axi_U->ARESET(ap_rst_n_inv);
    contact_discovery_db_mem_V_m_axi_U->ACLK_EN(ap_var_for_const0);
    contact_discovery_db_mem_V_m_axi_U->I_ARVALID(db_mem_V_ARVALID);
    contact_discovery_db_mem_V_m_axi_U->I_ARREADY(db_mem_V_ARREADY);
    contact_discovery_db_mem_V_m_axi_U->I_ARADDR(db_mem_V_ARADDR);
    contact_discovery_db_mem_V_m_axi_U->I_ARID(ap_var_for_const1);
    contact_discovery_db_mem_V_m_axi_U->I_ARLEN(ap_var_for_const2);
    contact_discovery_db_mem_V_m_axi_U->I_ARSIZE(ap_var_for_const3);
    contact_discovery_db_mem_V_m_axi_U->I_ARLOCK(ap_var_for_const4);
    contact_discovery_db_mem_V_m_axi_U->I_ARCACHE(ap_var_for_const5);
    contact_discovery_db_mem_V_m_axi_U->I_ARQOS(ap_var_for_const5);
    contact_discovery_db_mem_V_m_axi_U->I_ARPROT(ap_var_for_const3);
    contact_discovery_db_mem_V_m_axi_U->I_ARUSER(ap_var_for_const1);
    contact_discovery_db_mem_V_m_axi_U->I_ARBURST(ap_var_for_const4);
    contact_discovery_db_mem_V_m_axi_U->I_ARREGION(ap_var_for_const5);
    contact_discovery_db_mem_V_m_axi_U->I_RVALID(db_mem_V_RVALID);
    contact_discovery_db_mem_V_m_axi_U->I_RREADY(db_mem_V_RREADY);
    contact_discovery_db_mem_V_m_axi_U->I_RDATA(db_mem_V_RDATA);
    contact_discovery_db_mem_V_m_axi_U->I_RID(db_mem_V_RID);
    contact_discovery_db_mem_V_m_axi_U->I_RUSER(db_mem_V_RUSER);
    contact_discovery_db_mem_V_m_axi_U->I_RRESP(db_mem_V_RRESP);
    contact_discovery_db_mem_V_m_axi_U->I_RLAST(db_mem_V_RLAST);
    contact_discovery_db_mem_V_m_axi_U->I_AWVALID(ap_var_for_const6);
    contact_discovery_db_mem_V_m_axi_U->I_AWREADY(db_mem_V_AWREADY);
    contact_discovery_db_mem_V_m_axi_U->I_AWADDR(ap_var_for_const7);
    contact_discovery_db_mem_V_m_axi_U->I_AWID(ap_var_for_const1);
    contact_discovery_db_mem_V_m_axi_U->I_AWLEN(ap_var_for_const8);
    contact_discovery_db_mem_V_m_axi_U->I_AWSIZE(ap_var_for_const3);
    contact_discovery_db_mem_V_m_axi_U->I_AWLOCK(ap_var_for_const4);
    contact_discovery_db_mem_V_m_axi_U->I_AWCACHE(ap_var_for_const5);
    contact_discovery_db_mem_V_m_axi_U->I_AWQOS(ap_var_for_const5);
    contact_discovery_db_mem_V_m_axi_U->I_AWPROT(ap_var_for_const3);
    contact_discovery_db_mem_V_m_axi_U->I_AWUSER(ap_var_for_const1);
    contact_discovery_db_mem_V_m_axi_U->I_AWBURST(ap_var_for_const4);
    contact_discovery_db_mem_V_m_axi_U->I_AWREGION(ap_var_for_const5);
    contact_discovery_db_mem_V_m_axi_U->I_WVALID(ap_var_for_const6);
    contact_discovery_db_mem_V_m_axi_U->I_WREADY(db_mem_V_WREADY);
    contact_discovery_db_mem_V_m_axi_U->I_WDATA(ap_var_for_const9);
    contact_discovery_db_mem_V_m_axi_U->I_WID(ap_var_for_const1);
    contact_discovery_db_mem_V_m_axi_U->I_WUSER(ap_var_for_const1);
    contact_discovery_db_mem_V_m_axi_U->I_WLAST(ap_var_for_const6);
    contact_discovery_db_mem_V_m_axi_U->I_WSTRB(ap_var_for_const7);
    contact_discovery_db_mem_V_m_axi_U->I_BVALID(db_mem_V_BVALID);
    contact_discovery_db_mem_V_m_axi_U->I_BREADY(ap_var_for_const6);
    contact_discovery_db_mem_V_m_axi_U->I_BRESP(db_mem_V_BRESP);
    contact_discovery_db_mem_V_m_axi_U->I_BID(db_mem_V_BID);
    contact_discovery_db_mem_V_m_axi_U->I_BUSER(db_mem_V_BUSER);
    grp_match_db_contact_fu_186 = new match_db_contact("grp_match_db_contact_fu_186");
    grp_match_db_contact_fu_186->ap_clk(ap_clk);
    grp_match_db_contact_fu_186->ap_rst(ap_rst_n_inv);
    grp_match_db_contact_fu_186->ap_start(grp_match_db_contact_fu_186_ap_start);
    grp_match_db_contact_fu_186->ap_done(grp_match_db_contact_fu_186_ap_done);
    grp_match_db_contact_fu_186->ap_idle(grp_match_db_contact_fu_186_ap_idle);
    grp_match_db_contact_fu_186->ap_ready(grp_match_db_contact_fu_186_ap_ready);
    grp_match_db_contact_fu_186->db_item_V(reg_193);
    grp_match_db_contact_fu_186->contacts_V_address0(grp_match_db_contact_fu_186_contacts_V_address0);
    grp_match_db_contact_fu_186->contacts_V_ce0(grp_match_db_contact_fu_186_contacts_V_ce0);
    grp_match_db_contact_fu_186->contacts_V_q0(contacts_V_q0);
    grp_match_db_contact_fu_186->ap_return(grp_match_db_contact_fu_186_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( operation_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state23);
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( results_out_V_1_ack_in );

    SC_METHOD(thread_ap_done);
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( results_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( results_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_db_mem_V_ARREADY);
    sensitive << ( db_mem_V_ARREADY );
    sensitive << ( ap_reg_ioackin_db_mem_V_ARREADY );

    SC_METHOD(thread_contacts_V_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_match_db_contact_fu_186_contacts_V_address0 );
    sensitive << ( tmp_4_fu_228_p1 );

    SC_METHOD(thread_contacts_V_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_match_db_contact_fu_186_contacts_V_ce0 );

    SC_METHOD(thread_contacts_V_we0);
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_222_p2 );

    SC_METHOD(thread_contacts_size_out_1_ack_in);
    sensitive << ( contacts_size_out_1_vld_reg );

    SC_METHOD(thread_contacts_size_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( contacts_size );
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( storemerge_reg_174 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_contacts_size_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_database_index_1_fu_257_p2);
    sensitive << ( database_index_reg_163 );

    SC_METHOD(thread_db_mem_V_ARADDR);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_cast_fu_263_p1 );
    sensitive << ( sum2_cast_fu_283_p1 );
    sensitive << ( sum4_cast_fu_313_p1 );
    sensitive << ( sum6_cast_fu_323_p1 );
    sensitive << ( ap_reg_ioackin_db_mem_V_ARREADY );

    SC_METHOD(thread_db_mem_V_ARVALID);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_db_mem_V_ARREADY );

    SC_METHOD(thread_db_mem_V_RREADY);
    sensitive << ( results_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( db_mem_V_RVALID );
    sensitive << ( grp_match_db_contact_fu_186_ap_done );

    SC_METHOD(thread_db_mem_V_blk_n_AR);
    sensitive << ( m_axi_db_mem_V_ARREADY );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_db_mem_V_blk_n_R);
    sensitive << ( m_axi_db_mem_V_RVALID );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_error_out_1_ack_in);
    sensitive << ( error_out_1_vld_reg );

    SC_METHOD(thread_error_out_1_data_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_222_p2 );

    SC_METHOD(thread_error_out_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_222_p2 );

    SC_METHOD(thread_grp_match_db_contact_fu_186_ap_start);
    sensitive << ( ap_reg_grp_match_db_contact_fu_186_ap_start );

    SC_METHOD(thread_icmp_fu_222_p2);
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_213_p4 );

    SC_METHOD(thread_operation_ap_vld_in_sig);
    sensitive << ( operation_ap_vld );
    sensitive << ( operation_ap_vld_preg );

    SC_METHOD(thread_operation_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld );

    SC_METHOD(thread_operation_in_sig);
    sensitive << ( operation );
    sensitive << ( operation_preg );
    sensitive << ( operation_ap_vld );

    SC_METHOD(thread_operation_read_read_fu_108_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_in_sig );
    sensitive << ( operation_ap_vld_in_sig );

    SC_METHOD(thread_results_out_V_1_ack_in);
    sensitive << ( results_out_V_1_state );

    SC_METHOD(thread_results_out_V_1_ack_out);
    sensitive << ( results_out_V_TREADY );

    SC_METHOD(thread_results_out_V_1_data_in);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( db_mem_V_RVALID );
    sensitive << ( grp_match_db_contact_fu_186_ap_done );
    sensitive << ( tmp_2_fu_333_p1 );
    sensitive << ( tmp_8_fu_338_p1 );
    sensitive << ( tmp_10_fu_343_p1 );
    sensitive << ( tmp_12_fu_348_p1 );

    SC_METHOD(thread_results_out_V_1_data_out);
    sensitive << ( results_out_V_1_payload_A );
    sensitive << ( results_out_V_1_payload_B );
    sensitive << ( results_out_V_1_sel );

    SC_METHOD(thread_results_out_V_1_load_A);
    sensitive << ( results_out_V_1_sel_wr );
    sensitive << ( results_out_V_1_state_cmp_full );

    SC_METHOD(thread_results_out_V_1_load_B);
    sensitive << ( results_out_V_1_sel_wr );
    sensitive << ( results_out_V_1_state_cmp_full );

    SC_METHOD(thread_results_out_V_1_sel);
    sensitive << ( results_out_V_1_sel_rd );

    SC_METHOD(thread_results_out_V_1_state_cmp_full);
    sensitive << ( results_out_V_1_state );

    SC_METHOD(thread_results_out_V_1_vld_in);
    sensitive << ( results_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( db_mem_V_RVALID );
    sensitive << ( grp_match_db_contact_fu_186_ap_done );

    SC_METHOD(thread_results_out_V_1_vld_out);
    sensitive << ( results_out_V_1_state );

    SC_METHOD(thread_results_out_V_TDATA);
    sensitive << ( results_out_V_1_data_out );

    SC_METHOD(thread_results_out_V_TDATA_blk_n);
    sensitive << ( results_out_V_1_state );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_results_out_V_TVALID);
    sensitive << ( results_out_V_1_state );

    SC_METHOD(thread_sum2_cast_fu_283_p1);
    sensitive << ( sum2_reg_418 );

    SC_METHOD(thread_sum2_fu_278_p2);
    sensitive << ( tmp_1_reg_376 );
    sensitive << ( tmp3_fu_273_p2 );

    SC_METHOD(thread_sum4_cast_fu_313_p1);
    sensitive << ( sum4_reg_429 );

    SC_METHOD(thread_sum4_fu_298_p2);
    sensitive << ( tmp_1_reg_376 );
    sensitive << ( tmp9_fu_293_p2 );

    SC_METHOD(thread_sum6_cast_fu_323_p1);
    sensitive << ( sum6_reg_434 );

    SC_METHOD(thread_sum6_fu_308_p2);
    sensitive << ( tmp_1_reg_376 );
    sensitive << ( tmp11_fu_303_p2 );

    SC_METHOD(thread_sum_cast_fu_263_p1);
    sensitive << ( sum_reg_402 );

    SC_METHOD(thread_sum_fu_252_p2);
    sensitive << ( tmp_1_reg_376 );
    sensitive << ( tmp_7_fu_248_p1 );

    SC_METHOD(thread_tmp11_fu_303_p2);
    sensitive << ( tmp_7_reg_395 );

    SC_METHOD(thread_tmp3_fu_273_p2);
    sensitive << ( tmp_7_reg_395 );

    SC_METHOD(thread_tmp9_fu_293_p2);
    sensitive << ( tmp_7_reg_395 );

    SC_METHOD(thread_tmp_10_fu_343_p1);
    sensitive << ( grp_match_db_contact_fu_186_ap_return );

    SC_METHOD(thread_tmp_12_fu_348_p1);
    sensitive << ( grp_match_db_contact_fu_186_ap_return );

    SC_METHOD(thread_tmp_1_fu_209_p1);
    sensitive << ( offset );

    SC_METHOD(thread_tmp_2_fu_333_p1);
    sensitive << ( grp_match_db_contact_fu_186_ap_return );

    SC_METHOD(thread_tmp_4_fu_228_p1);
    sensitive << ( contacts_size_load_reg_367 );

    SC_METHOD(thread_tmp_5_fu_232_p2);
    sensitive << ( contacts_size_load_reg_367 );

    SC_METHOD(thread_tmp_6_fu_243_p2);
    sensitive << ( db_size_in );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( database_index_reg_163 );

    SC_METHOD(thread_tmp_7_fu_248_p1);
    sensitive << ( database_index_reg_163 );

    SC_METHOD(thread_tmp_8_fu_338_p1);
    sensitive << ( grp_match_db_contact_fu_186_ap_return );

    SC_METHOD(thread_tmp_fu_213_p4);
    sensitive << ( contacts_size_load_reg_367 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( operation_ap_vld_in_sig );
    sensitive << ( error_out_1_ack_in );
    sensitive << ( contacts_size_out_1_ack_in );
    sensitive << ( results_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( db_mem_V_RVALID );
    sensitive << ( grp_match_db_contact_fu_186_ap_done );
    sensitive << ( operation_read_read_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_fu_222_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_fu_243_p2 );
    sensitive << ( ap_sig_ioackin_db_mem_V_ARREADY );
    sensitive << ( ap_CS_fsm_state23 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const9);

    ap_CS_fsm = "00000000000000000000001";
    operation_preg = "00000000000000000000000000000000";
    operation_ap_vld_preg = SC_LOGIC_0;
    error_out_1_data_reg = "00000000000000000000000000000000";
    error_out_1_vld_reg = SC_LOGIC_0;
    contacts_size_out_1_data_reg = "00000000000000000000000000000000";
    contacts_size_out_1_vld_reg = SC_LOGIC_0;
    results_out_V_1_sel_rd = SC_LOGIC_0;
    results_out_V_1_sel_wr = SC_LOGIC_0;
    results_out_V_1_state = "00";
    contacts_size = "00000000000000000000000000000000";
    ap_reg_grp_match_db_contact_fu_186_ap_start = SC_LOGIC_0;
    ap_reg_ioackin_db_mem_V_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "contact_discovery_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWVALID, "(port)m_axi_db_mem_V_AWVALID");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWREADY, "(port)m_axi_db_mem_V_AWREADY");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWADDR, "(port)m_axi_db_mem_V_AWADDR");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWID, "(port)m_axi_db_mem_V_AWID");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWLEN, "(port)m_axi_db_mem_V_AWLEN");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWSIZE, "(port)m_axi_db_mem_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWBURST, "(port)m_axi_db_mem_V_AWBURST");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWLOCK, "(port)m_axi_db_mem_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWCACHE, "(port)m_axi_db_mem_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWPROT, "(port)m_axi_db_mem_V_AWPROT");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWQOS, "(port)m_axi_db_mem_V_AWQOS");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWREGION, "(port)m_axi_db_mem_V_AWREGION");
    sc_trace(mVcdFile, m_axi_db_mem_V_AWUSER, "(port)m_axi_db_mem_V_AWUSER");
    sc_trace(mVcdFile, m_axi_db_mem_V_WVALID, "(port)m_axi_db_mem_V_WVALID");
    sc_trace(mVcdFile, m_axi_db_mem_V_WREADY, "(port)m_axi_db_mem_V_WREADY");
    sc_trace(mVcdFile, m_axi_db_mem_V_WDATA, "(port)m_axi_db_mem_V_WDATA");
    sc_trace(mVcdFile, m_axi_db_mem_V_WSTRB, "(port)m_axi_db_mem_V_WSTRB");
    sc_trace(mVcdFile, m_axi_db_mem_V_WLAST, "(port)m_axi_db_mem_V_WLAST");
    sc_trace(mVcdFile, m_axi_db_mem_V_WID, "(port)m_axi_db_mem_V_WID");
    sc_trace(mVcdFile, m_axi_db_mem_V_WUSER, "(port)m_axi_db_mem_V_WUSER");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARVALID, "(port)m_axi_db_mem_V_ARVALID");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARREADY, "(port)m_axi_db_mem_V_ARREADY");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARADDR, "(port)m_axi_db_mem_V_ARADDR");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARID, "(port)m_axi_db_mem_V_ARID");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARLEN, "(port)m_axi_db_mem_V_ARLEN");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARSIZE, "(port)m_axi_db_mem_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARBURST, "(port)m_axi_db_mem_V_ARBURST");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARLOCK, "(port)m_axi_db_mem_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARCACHE, "(port)m_axi_db_mem_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARPROT, "(port)m_axi_db_mem_V_ARPROT");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARQOS, "(port)m_axi_db_mem_V_ARQOS");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARREGION, "(port)m_axi_db_mem_V_ARREGION");
    sc_trace(mVcdFile, m_axi_db_mem_V_ARUSER, "(port)m_axi_db_mem_V_ARUSER");
    sc_trace(mVcdFile, m_axi_db_mem_V_RVALID, "(port)m_axi_db_mem_V_RVALID");
    sc_trace(mVcdFile, m_axi_db_mem_V_RREADY, "(port)m_axi_db_mem_V_RREADY");
    sc_trace(mVcdFile, m_axi_db_mem_V_RDATA, "(port)m_axi_db_mem_V_RDATA");
    sc_trace(mVcdFile, m_axi_db_mem_V_RLAST, "(port)m_axi_db_mem_V_RLAST");
    sc_trace(mVcdFile, m_axi_db_mem_V_RID, "(port)m_axi_db_mem_V_RID");
    sc_trace(mVcdFile, m_axi_db_mem_V_RUSER, "(port)m_axi_db_mem_V_RUSER");
    sc_trace(mVcdFile, m_axi_db_mem_V_RRESP, "(port)m_axi_db_mem_V_RRESP");
    sc_trace(mVcdFile, m_axi_db_mem_V_BVALID, "(port)m_axi_db_mem_V_BVALID");
    sc_trace(mVcdFile, m_axi_db_mem_V_BREADY, "(port)m_axi_db_mem_V_BREADY");
    sc_trace(mVcdFile, m_axi_db_mem_V_BRESP, "(port)m_axi_db_mem_V_BRESP");
    sc_trace(mVcdFile, m_axi_db_mem_V_BID, "(port)m_axi_db_mem_V_BID");
    sc_trace(mVcdFile, m_axi_db_mem_V_BUSER, "(port)m_axi_db_mem_V_BUSER");
    sc_trace(mVcdFile, offset, "(port)offset");
    sc_trace(mVcdFile, results_out_V_TDATA, "(port)results_out_V_TDATA");
    sc_trace(mVcdFile, results_out_V_TVALID, "(port)results_out_V_TVALID");
    sc_trace(mVcdFile, results_out_V_TREADY, "(port)results_out_V_TREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, operation, "operation");
    sc_trace(mVcdFile, operation_preg, "operation_preg");
    sc_trace(mVcdFile, operation_ap_vld, "operation_ap_vld");
    sc_trace(mVcdFile, operation_in_sig, "operation_in_sig");
    sc_trace(mVcdFile, operation_ap_vld_preg, "operation_ap_vld_preg");
    sc_trace(mVcdFile, operation_ap_vld_in_sig, "operation_ap_vld_in_sig");
    sc_trace(mVcdFile, contact_in_V, "contact_in_V");
    sc_trace(mVcdFile, db_size_in, "db_size_in");
    sc_trace(mVcdFile, error_out_1_data_reg, "error_out_1_data_reg");
    sc_trace(mVcdFile, error_out_1_data_in, "error_out_1_data_in");
    sc_trace(mVcdFile, error_out_1_vld_reg, "error_out_1_vld_reg");
    sc_trace(mVcdFile, error_out_1_vld_in, "error_out_1_vld_in");
    sc_trace(mVcdFile, error_out_1_ack_in, "error_out_1_ack_in");
    sc_trace(mVcdFile, contacts_size_out_1_data_reg, "contacts_size_out_1_data_reg");
    sc_trace(mVcdFile, contacts_size_out_1_data_in, "contacts_size_out_1_data_in");
    sc_trace(mVcdFile, contacts_size_out_1_vld_reg, "contacts_size_out_1_vld_reg");
    sc_trace(mVcdFile, contacts_size_out_1_vld_in, "contacts_size_out_1_vld_in");
    sc_trace(mVcdFile, contacts_size_out_1_ack_in, "contacts_size_out_1_ack_in");
    sc_trace(mVcdFile, results_out_V_1_data_in, "results_out_V_1_data_in");
    sc_trace(mVcdFile, results_out_V_1_data_out, "results_out_V_1_data_out");
    sc_trace(mVcdFile, results_out_V_1_vld_in, "results_out_V_1_vld_in");
    sc_trace(mVcdFile, results_out_V_1_vld_out, "results_out_V_1_vld_out");
    sc_trace(mVcdFile, results_out_V_1_ack_in, "results_out_V_1_ack_in");
    sc_trace(mVcdFile, results_out_V_1_ack_out, "results_out_V_1_ack_out");
    sc_trace(mVcdFile, results_out_V_1_payload_A, "results_out_V_1_payload_A");
    sc_trace(mVcdFile, results_out_V_1_payload_B, "results_out_V_1_payload_B");
    sc_trace(mVcdFile, results_out_V_1_sel_rd, "results_out_V_1_sel_rd");
    sc_trace(mVcdFile, results_out_V_1_sel_wr, "results_out_V_1_sel_wr");
    sc_trace(mVcdFile, results_out_V_1_sel, "results_out_V_1_sel");
    sc_trace(mVcdFile, results_out_V_1_load_A, "results_out_V_1_load_A");
    sc_trace(mVcdFile, results_out_V_1_load_B, "results_out_V_1_load_B");
    sc_trace(mVcdFile, results_out_V_1_state, "results_out_V_1_state");
    sc_trace(mVcdFile, results_out_V_1_state_cmp_full, "results_out_V_1_state_cmp_full");
    sc_trace(mVcdFile, contacts_size, "contacts_size");
    sc_trace(mVcdFile, contacts_V_address0, "contacts_V_address0");
    sc_trace(mVcdFile, contacts_V_ce0, "contacts_V_ce0");
    sc_trace(mVcdFile, contacts_V_we0, "contacts_V_we0");
    sc_trace(mVcdFile, contacts_V_q0, "contacts_V_q0");
    sc_trace(mVcdFile, operation_blk_n, "operation_blk_n");
    sc_trace(mVcdFile, db_mem_V_blk_n_AR, "db_mem_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, db_mem_V_blk_n_R, "db_mem_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, results_out_V_TDATA_blk_n, "results_out_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, db_mem_V_AWREADY, "db_mem_V_AWREADY");
    sc_trace(mVcdFile, db_mem_V_WREADY, "db_mem_V_WREADY");
    sc_trace(mVcdFile, db_mem_V_ARVALID, "db_mem_V_ARVALID");
    sc_trace(mVcdFile, db_mem_V_ARREADY, "db_mem_V_ARREADY");
    sc_trace(mVcdFile, db_mem_V_ARADDR, "db_mem_V_ARADDR");
    sc_trace(mVcdFile, db_mem_V_RVALID, "db_mem_V_RVALID");
    sc_trace(mVcdFile, db_mem_V_RREADY, "db_mem_V_RREADY");
    sc_trace(mVcdFile, db_mem_V_RDATA, "db_mem_V_RDATA");
    sc_trace(mVcdFile, db_mem_V_RLAST, "db_mem_V_RLAST");
    sc_trace(mVcdFile, db_mem_V_RID, "db_mem_V_RID");
    sc_trace(mVcdFile, db_mem_V_RUSER, "db_mem_V_RUSER");
    sc_trace(mVcdFile, db_mem_V_RRESP, "db_mem_V_RRESP");
    sc_trace(mVcdFile, db_mem_V_BVALID, "db_mem_V_BVALID");
    sc_trace(mVcdFile, db_mem_V_BRESP, "db_mem_V_BRESP");
    sc_trace(mVcdFile, db_mem_V_BID, "db_mem_V_BID");
    sc_trace(mVcdFile, db_mem_V_BUSER, "db_mem_V_BUSER");
    sc_trace(mVcdFile, reg_193, "reg_193");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_ap_done, "grp_match_db_contact_fu_186_ap_done");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, contact_in_V_read_reg_358, "contact_in_V_read_reg_358");
    sc_trace(mVcdFile, operation_read_read_fu_108_p2, "operation_read_read_fu_108_p2");
    sc_trace(mVcdFile, contacts_size_load_reg_367, "contacts_size_load_reg_367");
    sc_trace(mVcdFile, tmp_1_fu_209_p1, "tmp_1_fu_209_p1");
    sc_trace(mVcdFile, tmp_1_reg_376, "tmp_1_reg_376");
    sc_trace(mVcdFile, tmp_5_fu_232_p2, "tmp_5_fu_232_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_fu_222_p2, "icmp_fu_222_p2");
    sc_trace(mVcdFile, tmp_7_fu_248_p1, "tmp_7_fu_248_p1");
    sc_trace(mVcdFile, tmp_7_reg_395, "tmp_7_reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_6_fu_243_p2, "tmp_6_fu_243_p2");
    sc_trace(mVcdFile, sum_fu_252_p2, "sum_fu_252_p2");
    sc_trace(mVcdFile, sum_reg_402, "sum_reg_402");
    sc_trace(mVcdFile, database_index_1_fu_257_p2, "database_index_1_fu_257_p2");
    sc_trace(mVcdFile, database_index_1_reg_407, "database_index_1_reg_407");
    sc_trace(mVcdFile, ap_sig_ioackin_db_mem_V_ARREADY, "ap_sig_ioackin_db_mem_V_ARREADY");
    sc_trace(mVcdFile, sum2_fu_278_p2, "sum2_fu_278_p2");
    sc_trace(mVcdFile, sum2_reg_418, "sum2_reg_418");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sum4_fu_298_p2, "sum4_fu_298_p2");
    sc_trace(mVcdFile, sum4_reg_429, "sum4_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sum6_fu_308_p2, "sum6_fu_308_p2");
    sc_trace(mVcdFile, sum6_reg_434, "sum6_reg_434");
    sc_trace(mVcdFile, tmp_2_fu_333_p1, "tmp_2_fu_333_p1");
    sc_trace(mVcdFile, tmp_8_fu_338_p1, "tmp_8_fu_338_p1");
    sc_trace(mVcdFile, tmp_10_fu_343_p1, "tmp_10_fu_343_p1");
    sc_trace(mVcdFile, tmp_12_fu_348_p1, "tmp_12_fu_348_p1");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_ap_start, "grp_match_db_contact_fu_186_ap_start");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_ap_idle, "grp_match_db_contact_fu_186_ap_idle");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_ap_ready, "grp_match_db_contact_fu_186_ap_ready");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_contacts_V_address0, "grp_match_db_contact_fu_186_contacts_V_address0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_contacts_V_ce0, "grp_match_db_contact_fu_186_contacts_V_ce0");
    sc_trace(mVcdFile, grp_match_db_contact_fu_186_ap_return, "grp_match_db_contact_fu_186_ap_return");
    sc_trace(mVcdFile, database_index_reg_163, "database_index_reg_163");
    sc_trace(mVcdFile, storemerge_reg_174, "storemerge_reg_174");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_reg_grp_match_db_contact_fu_186_ap_start, "ap_reg_grp_match_db_contact_fu_186_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_4_fu_228_p1, "tmp_4_fu_228_p1");
    sc_trace(mVcdFile, sum_cast_fu_263_p1, "sum_cast_fu_263_p1");
    sc_trace(mVcdFile, sum2_cast_fu_283_p1, "sum2_cast_fu_283_p1");
    sc_trace(mVcdFile, sum4_cast_fu_313_p1, "sum4_cast_fu_313_p1");
    sc_trace(mVcdFile, sum6_cast_fu_323_p1, "sum6_cast_fu_323_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_db_mem_V_ARREADY, "ap_reg_ioackin_db_mem_V_ARREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_fu_213_p4, "tmp_fu_213_p4");
    sc_trace(mVcdFile, tmp3_fu_273_p2, "tmp3_fu_273_p2");
    sc_trace(mVcdFile, tmp9_fu_293_p2, "tmp9_fu_293_p2");
    sc_trace(mVcdFile, tmp11_fu_303_p2, "tmp11_fu_303_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_block_state23, "ap_block_state23");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("contact_discovery.hdltvin.dat");
    mHdltvoutHandle.open("contact_discovery.hdltvout.dat");
}

contact_discovery::~contact_discovery() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete contacts_V_U;
    delete contact_discovery_AXILiteS_s_axi_U;
    delete contact_discovery_db_mem_V_m_axi_U;
    delete grp_match_db_contact_fu_186;
}

void contact_discovery::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void contact_discovery::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void contact_discovery::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv32_0;
}

void contact_discovery::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void contact_discovery::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void contact_discovery::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void contact_discovery::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void contact_discovery::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void contact_discovery::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv64_0;
}

void contact_discovery::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv512_lc_1;
}

void contact_discovery::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_match_db_contact_fu_186_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
              esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
              esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
              esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1)))) {
            ap_reg_grp_match_db_contact_fu_186_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_match_db_contact_fu_186_ap_ready.read())) {
            ap_reg_grp_match_db_contact_fu_186_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_db_mem_V_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_db_mem_V_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, db_mem_V_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, db_mem_V_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, db_mem_V_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, db_mem_V_ARREADY.read())))) {
            ap_reg_ioackin_db_mem_V_ARREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_222_p2.read()))) {
        contacts_size = tmp_5_fu_232_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2))) {
        contacts_size = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1))) {
        database_index_reg_163 = database_index_1_reg_407.read();
    } else if ((esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        database_index_reg_163 = ap_const_lv32_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        operation_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
            operation_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            operation_ap_vld_preg = operation_ap_vld.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        operation_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            operation_preg = operation.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        results_out_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_vld_out.read()))) {
            results_out_V_1_sel_rd =  (sc_logic) (~results_out_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        results_out_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_ack_in.read()))) {
            results_out_V_1_sel_wr =  (sc_logic) (~results_out_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        results_out_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_2)))) {
            results_out_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_1)))) {
            results_out_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(results_out_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_ack_out.read()))))) {
            results_out_V_1_state = ap_const_lv2_3;
        } else {
            results_out_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        storemerge_reg_174 = contacts_size_load_reg_367.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_222_p2.read()))) {
        storemerge_reg_174 = tmp_5_fu_232_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())))) {
        contact_in_V_read_reg_358 = contact_in_V.read();
        contacts_size_load_reg_367 = contacts_size.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        contacts_size_out_1_data_reg = contacts_size_out_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_243_p2.read()))) {
        database_index_1_reg_407 = database_index_1_fu_257_p2.read();
        sum_reg_402 = sum_fu_252_p2.read();
        tmp_7_reg_395 = tmp_7_fu_248_p1.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        error_out_1_data_reg = error_out_1_data_in.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
  esl_seteq<1,1,1>(db_mem_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))))) {
        reg_193 = db_mem_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_load_A.read())) {
        results_out_V_1_payload_A = results_out_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_load_B.read())) {
        results_out_V_1_payload_B = results_out_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sum2_reg_418 = sum2_fu_278_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sum4_reg_429 = sum4_fu_298_p2.read();
        sum6_reg_434 = sum6_fu_308_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1))) {
        tmp_1_reg_376 = tmp_1_fu_209_p1.read();
    }
}

void contact_discovery::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void contact_discovery::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void contact_discovery::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void contact_discovery::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void contact_discovery::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void contact_discovery::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void contact_discovery::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void contact_discovery::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void contact_discovery::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void contact_discovery::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void contact_discovery::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void contact_discovery::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void contact_discovery::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void contact_discovery::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void contact_discovery::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void contact_discovery::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void contact_discovery::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void contact_discovery::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void contact_discovery::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void contact_discovery::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void contact_discovery::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void contact_discovery::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void contact_discovery::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read()));
}

void contact_discovery::thread_ap_block_state23() {
    ap_block_state23 = (esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read()));
}

void contact_discovery::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void contact_discovery::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void contact_discovery::thread_ap_sig_ioackin_db_mem_V_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_db_mem_V_ARREADY.read())) {
        ap_sig_ioackin_db_mem_V_ARREADY = db_mem_V_ARREADY.read();
    } else {
        ap_sig_ioackin_db_mem_V_ARREADY = ap_const_logic_1;
    }
}

void contact_discovery::thread_contacts_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        contacts_V_address0 =  (sc_lv<7>) (tmp_4_fu_228_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        contacts_V_address0 = grp_match_db_contact_fu_186_contacts_V_address0.read();
    } else {
        contacts_V_address0 = "XXXXXXX";
    }
}

void contact_discovery::thread_contacts_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        contacts_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        contacts_V_ce0 = grp_match_db_contact_fu_186_contacts_V_ce0.read();
    } else {
        contacts_V_ce0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_222_p2.read()))) {
        contacts_V_we0 = ap_const_logic_1;
    } else {
        contacts_V_we0 = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_size_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, contacts_size_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        contacts_size_out_1_ack_in = ap_const_logic_1;
    } else {
        contacts_size_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_contacts_size_out_1_data_in() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        contacts_size_out_1_data_in = storemerge_reg_174.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1) && 
                 !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2)))) {
        contacts_size_out_1_data_in = contacts_size.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2))) {
        contacts_size_out_1_data_in = ap_const_lv32_0;
    } else {
        contacts_size_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_contacts_size_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        contacts_size_out_1_vld_in = ap_const_logic_1;
    } else {
        contacts_size_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_database_index_1_fu_257_p2() {
    database_index_1_fu_257_p2 = (!ap_const_lv32_4.is_01() || !database_index_reg_163.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_4) + sc_biguint<32>(database_index_reg_163.read()));
}

void contact_discovery::thread_db_mem_V_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_db_mem_V_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            db_mem_V_ARADDR = sum6_cast_fu_323_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            db_mem_V_ARADDR = sum4_cast_fu_313_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            db_mem_V_ARADDR = sum2_cast_fu_283_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            db_mem_V_ARADDR = sum_cast_fu_263_p1.read();
        } else {
            db_mem_V_ARADDR =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        db_mem_V_ARADDR =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_db_mem_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_db_mem_V_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_db_mem_V_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_db_mem_V_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_db_mem_V_ARREADY.read())))) {
        db_mem_V_ARVALID = ap_const_logic_1;
    } else {
        db_mem_V_ARVALID = ap_const_logic_0;
    }
}

void contact_discovery::thread_db_mem_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(db_mem_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))))) {
        db_mem_V_RREADY = ap_const_logic_1;
    } else {
        db_mem_V_RREADY = ap_const_logic_0;
    }
}

void contact_discovery::thread_db_mem_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        db_mem_V_blk_n_AR = m_axi_db_mem_V_ARREADY.read();
    } else {
        db_mem_V_blk_n_AR = ap_const_logic_1;
    }
}

void contact_discovery::thread_db_mem_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        db_mem_V_blk_n_R = m_axi_db_mem_V_RVALID.read();
    } else {
        db_mem_V_blk_n_R = ap_const_logic_1;
    }
}

void contact_discovery::thread_error_out_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, error_out_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        error_out_1_ack_in = ap_const_logic_1;
    } else {
        error_out_1_ack_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_error_out_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_222_p2.read()))) {
        error_out_1_data_in = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1) && 
                !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2))) {
        error_out_1_data_in = ap_const_lv32_3;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
                 esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read())))) {
        error_out_1_data_in = ap_const_lv32_0;
    } else {
        error_out_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void contact_discovery::thread_error_out_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1) && 
          !esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_222_p2.read())))) {
        error_out_1_vld_in = ap_const_logic_1;
    } else {
        error_out_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_grp_match_db_contact_fu_186_ap_start() {
    grp_match_db_contact_fu_186_ap_start = ap_reg_grp_match_db_contact_fu_186_ap_start.read();
}

void contact_discovery::thread_icmp_fu_222_p2() {
    icmp_fu_222_p2 = (!tmp_fu_213_p4.read().is_01() || !ap_const_lv25_0.is_01())? sc_lv<1>(): (sc_bigint<25>(tmp_fu_213_p4.read()) > sc_bigint<25>(ap_const_lv25_0));
}

void contact_discovery::thread_operation_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read())) {
        operation_ap_vld_in_sig = operation_ap_vld.read();
    } else {
        operation_ap_vld_in_sig = operation_ap_vld_preg.read();
    }
}

void contact_discovery::thread_operation_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        operation_blk_n = operation_ap_vld.read();
    } else {
        operation_blk_n = ap_const_logic_1;
    }
}

void contact_discovery::thread_operation_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, operation_ap_vld.read())) {
        operation_in_sig = operation.read();
    } else {
        operation_in_sig = operation_preg.read();
    }
}

void contact_discovery::thread_operation_read_read_fu_108_p2() {
    operation_read_read_fu_108_p2 = operation_in_sig.read();
}

void contact_discovery::thread_results_out_V_1_ack_in() {
    results_out_V_1_ack_in = results_out_V_1_state.read()[1];
}

void contact_discovery::thread_results_out_V_1_ack_out() {
    results_out_V_1_ack_out = results_out_V_TREADY.read();
}

void contact_discovery::thread_results_out_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(grp_match_db_contact_fu_186_ap_done.read(), ap_const_logic_1))) {
        results_out_V_1_data_in = tmp_12_fu_348_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
        results_out_V_1_data_in = tmp_10_fu_343_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
        results_out_V_1_data_in = tmp_8_fu_338_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
        results_out_V_1_data_in = tmp_2_fu_333_p1.read();
    } else {
        results_out_V_1_data_in =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void contact_discovery::thread_results_out_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, results_out_V_1_sel.read())) {
        results_out_V_1_data_out = results_out_V_1_payload_B.read();
    } else {
        results_out_V_1_data_out = results_out_V_1_payload_A.read();
    }
}

void contact_discovery::thread_results_out_V_1_load_A() {
    results_out_V_1_load_A = (results_out_V_1_state_cmp_full.read() & ~results_out_V_1_sel_wr.read());
}

void contact_discovery::thread_results_out_V_1_load_B() {
    results_out_V_1_load_B = (results_out_V_1_sel_wr.read() & results_out_V_1_state_cmp_full.read());
}

void contact_discovery::thread_results_out_V_1_sel() {
    results_out_V_1_sel = results_out_V_1_sel_rd.read();
}

void contact_discovery::thread_results_out_V_1_state_cmp_full() {
    results_out_V_1_state_cmp_full =  (sc_logic) ((!results_out_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(results_out_V_1_state.read() != ap_const_lv2_1))[0];
}

void contact_discovery::thread_results_out_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read()))))) {
        results_out_V_1_vld_in = ap_const_logic_1;
    } else {
        results_out_V_1_vld_in = ap_const_logic_0;
    }
}

void contact_discovery::thread_results_out_V_1_vld_out() {
    results_out_V_1_vld_out = results_out_V_1_state.read()[0];
}

void contact_discovery::thread_results_out_V_TDATA() {
    results_out_V_TDATA = results_out_V_1_data_out.read();
}

void contact_discovery::thread_results_out_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        results_out_V_TDATA_blk_n = results_out_V_1_state.read()[1];
    } else {
        results_out_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void contact_discovery::thread_results_out_V_TVALID() {
    results_out_V_TVALID = results_out_V_1_state.read()[0];
}

void contact_discovery::thread_sum2_cast_fu_283_p1() {
    sum2_cast_fu_283_p1 = esl_zext<64,25>(sum2_reg_418.read());
}

void contact_discovery::thread_sum2_fu_278_p2() {
    sum2_fu_278_p2 = (!tmp3_fu_273_p2.read().is_01() || !tmp_1_reg_376.read().is_01())? sc_lv<25>(): (sc_biguint<25>(tmp3_fu_273_p2.read()) + sc_biguint<25>(tmp_1_reg_376.read()));
}

void contact_discovery::thread_sum4_cast_fu_313_p1() {
    sum4_cast_fu_313_p1 = esl_zext<64,25>(sum4_reg_429.read());
}

void contact_discovery::thread_sum4_fu_298_p2() {
    sum4_fu_298_p2 = (!tmp9_fu_293_p2.read().is_01() || !tmp_1_reg_376.read().is_01())? sc_lv<25>(): (sc_biguint<25>(tmp9_fu_293_p2.read()) + sc_biguint<25>(tmp_1_reg_376.read()));
}

void contact_discovery::thread_sum6_cast_fu_323_p1() {
    sum6_cast_fu_323_p1 = esl_zext<64,25>(sum6_reg_434.read());
}

void contact_discovery::thread_sum6_fu_308_p2() {
    sum6_fu_308_p2 = (!tmp11_fu_303_p2.read().is_01() || !tmp_1_reg_376.read().is_01())? sc_lv<25>(): (sc_biguint<25>(tmp11_fu_303_p2.read()) + sc_biguint<25>(tmp_1_reg_376.read()));
}

void contact_discovery::thread_sum_cast_fu_263_p1() {
    sum_cast_fu_263_p1 = esl_zext<64,25>(sum_reg_402.read());
}

void contact_discovery::thread_sum_fu_252_p2() {
    sum_fu_252_p2 = (!tmp_7_fu_248_p1.read().is_01() || !tmp_1_reg_376.read().is_01())? sc_lv<25>(): (sc_biguint<25>(tmp_7_fu_248_p1.read()) + sc_biguint<25>(tmp_1_reg_376.read()));
}

void contact_discovery::thread_tmp11_fu_303_p2() {
    tmp11_fu_303_p2 = (tmp_7_reg_395.read() | ap_const_lv25_3);
}

void contact_discovery::thread_tmp3_fu_273_p2() {
    tmp3_fu_273_p2 = (tmp_7_reg_395.read() | ap_const_lv25_1);
}

void contact_discovery::thread_tmp9_fu_293_p2() {
    tmp9_fu_293_p2 = (tmp_7_reg_395.read() | ap_const_lv25_2);
}

void contact_discovery::thread_tmp_10_fu_343_p1() {
    tmp_10_fu_343_p1 = esl_zext<8,1>(grp_match_db_contact_fu_186_ap_return.read());
}

void contact_discovery::thread_tmp_12_fu_348_p1() {
    tmp_12_fu_348_p1 = esl_zext<8,1>(grp_match_db_contact_fu_186_ap_return.read());
}

void contact_discovery::thread_tmp_1_fu_209_p1() {
    tmp_1_fu_209_p1 = offset.read().range(25-1, 0);
}

void contact_discovery::thread_tmp_2_fu_333_p1() {
    tmp_2_fu_333_p1 = esl_zext<8,1>(grp_match_db_contact_fu_186_ap_return.read());
}

void contact_discovery::thread_tmp_4_fu_228_p1() {
    tmp_4_fu_228_p1 = esl_sext<64,32>(contacts_size_load_reg_367.read());
}

void contact_discovery::thread_tmp_5_fu_232_p2() {
    tmp_5_fu_232_p2 = (!contacts_size_load_reg_367.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(contacts_size_load_reg_367.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void contact_discovery::thread_tmp_6_fu_243_p2() {
    tmp_6_fu_243_p2 = (!database_index_reg_163.read().is_01() || !db_size_in.read().is_01())? sc_lv<1>(): (sc_biguint<32>(database_index_reg_163.read()) < sc_biguint<32>(db_size_in.read()));
}

void contact_discovery::thread_tmp_7_fu_248_p1() {
    tmp_7_fu_248_p1 = database_index_reg_163.read().range(25-1, 0);
}

void contact_discovery::thread_tmp_8_fu_338_p1() {
    tmp_8_fu_338_p1 = esl_zext<8,1>(grp_match_db_contact_fu_186_ap_return.read());
}

void contact_discovery::thread_tmp_fu_213_p4() {
    tmp_fu_213_p4 = contacts_size_load_reg_367.read().range(31, 7);
}

void contact_discovery::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, operation_ap_vld_in_sig.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_222_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, operation_read_read_fu_108_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_222_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else if ((esl_seteq<1,32,32>(operation_read_read_fu_108_p2.read(), ap_const_lv32_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_243_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_db_mem_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(db_mem_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, db_mem_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_match_db_contact_fu_186_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(results_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, results_out_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, error_out_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, contacts_size_out_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void contact_discovery::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_db_mem_V_AWVALID\" :  \"" << m_axi_db_mem_V_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_AWREADY\" :  \"" << m_axi_db_mem_V_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWADDR\" :  \"" << m_axi_db_mem_V_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWID\" :  \"" << m_axi_db_mem_V_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWLEN\" :  \"" << m_axi_db_mem_V_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWSIZE\" :  \"" << m_axi_db_mem_V_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWBURST\" :  \"" << m_axi_db_mem_V_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWLOCK\" :  \"" << m_axi_db_mem_V_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWCACHE\" :  \"" << m_axi_db_mem_V_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWPROT\" :  \"" << m_axi_db_mem_V_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWQOS\" :  \"" << m_axi_db_mem_V_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWREGION\" :  \"" << m_axi_db_mem_V_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_AWUSER\" :  \"" << m_axi_db_mem_V_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_WVALID\" :  \"" << m_axi_db_mem_V_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_WREADY\" :  \"" << m_axi_db_mem_V_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_WDATA\" :  \"" << m_axi_db_mem_V_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_WSTRB\" :  \"" << m_axi_db_mem_V_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_WLAST\" :  \"" << m_axi_db_mem_V_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_WID\" :  \"" << m_axi_db_mem_V_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_WUSER\" :  \"" << m_axi_db_mem_V_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARVALID\" :  \"" << m_axi_db_mem_V_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_ARREADY\" :  \"" << m_axi_db_mem_V_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARADDR\" :  \"" << m_axi_db_mem_V_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARID\" :  \"" << m_axi_db_mem_V_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARLEN\" :  \"" << m_axi_db_mem_V_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARSIZE\" :  \"" << m_axi_db_mem_V_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARBURST\" :  \"" << m_axi_db_mem_V_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARLOCK\" :  \"" << m_axi_db_mem_V_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARCACHE\" :  \"" << m_axi_db_mem_V_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARPROT\" :  \"" << m_axi_db_mem_V_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARQOS\" :  \"" << m_axi_db_mem_V_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARREGION\" :  \"" << m_axi_db_mem_V_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_ARUSER\" :  \"" << m_axi_db_mem_V_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_RVALID\" :  \"" << m_axi_db_mem_V_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_RREADY\" :  \"" << m_axi_db_mem_V_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_RDATA\" :  \"" << m_axi_db_mem_V_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_RLAST\" :  \"" << m_axi_db_mem_V_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_RID\" :  \"" << m_axi_db_mem_V_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_RUSER\" :  \"" << m_axi_db_mem_V_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_RRESP\" :  \"" << m_axi_db_mem_V_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_BVALID\" :  \"" << m_axi_db_mem_V_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_db_mem_V_BREADY\" :  \"" << m_axi_db_mem_V_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_BRESP\" :  \"" << m_axi_db_mem_V_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_BID\" :  \"" << m_axi_db_mem_V_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_db_mem_V_BUSER\" :  \"" << m_axi_db_mem_V_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"offset\" :  \"" << offset.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"results_out_V_TDATA\" :  \"" << results_out_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"results_out_V_TVALID\" :  \"" << results_out_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"results_out_V_TREADY\" :  \"" << results_out_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

