-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_sign_ed25519_13 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    r_x_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_x_v_ce0 : OUT STD_LOGIC;
    r_x_v_we0 : OUT STD_LOGIC;
    r_x_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_x_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_x_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_x_v_ce1 : OUT STD_LOGIC;
    r_x_v_we1 : OUT STD_LOGIC;
    r_x_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_x_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_y_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_y_v_ce0 : OUT STD_LOGIC;
    r_y_v_we0 : OUT STD_LOGIC;
    r_y_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_y_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_y_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_y_v_ce1 : OUT STD_LOGIC;
    r_y_v_we1 : OUT STD_LOGIC;
    r_y_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_y_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_z_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_z_v_ce0 : OUT STD_LOGIC;
    r_z_v_we0 : OUT STD_LOGIC;
    r_z_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_z_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_z_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_z_v_ce1 : OUT STD_LOGIC;
    r_z_v_we1 : OUT STD_LOGIC;
    r_z_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_z_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_t_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_t_v_ce0 : OUT STD_LOGIC;
    r_t_v_we0 : OUT STD_LOGIC;
    r_t_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_t_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_t_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    r_t_v_ce1 : OUT STD_LOGIC;
    r_t_v_we1 : OUT STD_LOGIC;
    r_t_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_t_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    s_v_ce0 : OUT STD_LOGIC;
    s_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    s_v_ce1 : OUT STD_LOGIC;
    s_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of crypto_sign_ed25519_13 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (56 downto 0) := "000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (56 downto 0) := "000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (56 downto 0) := "000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (56 downto 0) := "000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (56 downto 0) := "000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (56 downto 0) := "000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (56 downto 0) := "000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (56 downto 0) := "000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (56 downto 0) := "000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (56 downto 0) := "001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (56 downto 0) := "010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (56 downto 0) := "100000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ge25519_ec2d_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1447 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal r_x_v_addr_reg_1486 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_1_reg_1491 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_reg_1496 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_1_reg_1501 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_reg_1506 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal r_temp_x_v_addr_1_reg_1511 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_2_reg_1516 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_3_reg_1521 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_reg_1526 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_1_reg_1531 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_2_reg_1536 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_3_reg_1541 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_2_reg_1546 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal r_temp_x_v_addr_3_reg_1551 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_4_reg_1556 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_5_reg_1561 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_2_reg_1566 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_3_reg_1571 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_4_reg_1576 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_5_reg_1581 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_4_reg_1586 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal r_temp_x_v_addr_5_reg_1591 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_6_reg_1596 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_7_reg_1601 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_4_reg_1606 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_5_reg_1611 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_6_reg_1616 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_7_reg_1621 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_6_reg_1626 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal r_temp_x_v_addr_7_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_8_reg_1636 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_9_reg_1641 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_6_reg_1646 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_7_reg_1651 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_8_reg_1656 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_9_reg_1661 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_8_reg_1666 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal r_temp_x_v_addr_9_reg_1671 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_10_reg_1676 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_11_reg_1681 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_8_reg_1686 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_9_reg_1691 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_10_reg_1696 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_11_reg_1701 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_10_reg_1706 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal r_temp_x_v_addr_11_reg_1711 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_12_reg_1716 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_13_reg_1721 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_10_reg_1726 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_11_reg_1731 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_12_reg_1736 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_13_reg_1741 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_12_reg_1746 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal r_temp_x_v_addr_13_reg_1751 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_14_reg_1756 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_15_reg_1761 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_12_reg_1766 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_13_reg_1771 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_14_reg_1776 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_15_reg_1781 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_14_reg_1786 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal r_temp_x_v_addr_15_reg_1791 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_16_reg_1796 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_17_reg_1801 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_14_reg_1806 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_15_reg_1811 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_16_reg_1816 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_17_reg_1821 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_16_reg_1826 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal r_temp_x_v_addr_17_reg_1831 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_18_reg_1836 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_19_reg_1841 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_16_reg_1846 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_17_reg_1851 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_18_reg_1856 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_19_reg_1861 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_18_reg_1866 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal r_temp_x_v_addr_19_reg_1871 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_20_reg_1876 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_21_reg_1881 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_18_reg_1886 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_19_reg_1891 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_20_reg_1896 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_21_reg_1901 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_20_reg_1906 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal r_temp_x_v_addr_21_reg_1911 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_22_reg_1916 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_23_reg_1921 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_20_reg_1926 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_21_reg_1931 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_22_reg_1936 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_23_reg_1941 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_22_reg_1946 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal r_temp_x_v_addr_23_reg_1951 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_24_reg_1956 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_25_reg_1961 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_22_reg_1966 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_23_reg_1971 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_24_reg_1976 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_25_reg_1981 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_24_reg_1986 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal r_temp_x_v_addr_25_reg_1991 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_26_reg_1996 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_27_reg_2001 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_24_reg_2006 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_25_reg_2011 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_26_reg_2016 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_27_reg_2021 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_26_reg_2026 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal r_temp_x_v_addr_27_reg_2031 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_28_reg_2036 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_29_reg_2041 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_26_reg_2046 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_27_reg_2051 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_28_reg_2056 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_29_reg_2061 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_28_reg_2066 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_crypto_sign_ed25519_14_fu_1424_ap_done : STD_LOGIC;
    signal r_temp_x_v_addr_29_reg_2071 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_30_reg_2076 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_x_v_addr_31_reg_2081 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_28_reg_2086 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_29_reg_2091 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_30_reg_2096 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_y_v_addr_31_reg_2101 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal r_temp_x_v_addr_30_reg_2111 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_addr_31_reg_2116 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_30_reg_2121 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_addr_31_reg_2126 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_57_fu_1463_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal exitcond_i_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal exitcond_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_58_fu_1480_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_58_reg_2147 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_v_ce0 : STD_LOGIC;
    signal a_v_we0 : STD_LOGIC;
    signal a_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_v_ce1 : STD_LOGIC;
    signal a_v_we1 : STD_LOGIC;
    signal a_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_v_ce0 : STD_LOGIC;
    signal b_v_we0 : STD_LOGIC;
    signal b_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_v_ce1 : STD_LOGIC;
    signal b_v_we1 : STD_LOGIC;
    signal b_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal t1_v_ce0 : STD_LOGIC;
    signal t1_v_we0 : STD_LOGIC;
    signal t1_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_v_ce1 : STD_LOGIC;
    signal t1_v_we1 : STD_LOGIC;
    signal t1_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal t2_v_ce0 : STD_LOGIC;
    signal t2_v_we0 : STD_LOGIC;
    signal t2_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_v_ce1 : STD_LOGIC;
    signal t2_v_we1 : STD_LOGIC;
    signal t2_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_v_ce0 : STD_LOGIC;
    signal c_v_we0 : STD_LOGIC;
    signal c_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_v_ce1 : STD_LOGIC;
    signal c_v_we1 : STD_LOGIC;
    signal c_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_v_ce0 : STD_LOGIC;
    signal d_v_we0 : STD_LOGIC;
    signal d_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_v_ce1 : STD_LOGIC;
    signal d_v_we1 : STD_LOGIC;
    signal d_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal e_v_ce0 : STD_LOGIC;
    signal e_v_we0 : STD_LOGIC;
    signal e_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_v_ce1 : STD_LOGIC;
    signal e_v_we1 : STD_LOGIC;
    signal e_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_v_ce0 : STD_LOGIC;
    signal f_v_we0 : STD_LOGIC;
    signal f_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_v_ce1 : STD_LOGIC;
    signal f_v_we1 : STD_LOGIC;
    signal f_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal g_v_ce0 : STD_LOGIC;
    signal g_v_we0 : STD_LOGIC;
    signal g_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_v_ce1 : STD_LOGIC;
    signal g_v_we1 : STD_LOGIC;
    signal g_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_v_ce0 : STD_LOGIC;
    signal h_v_we0 : STD_LOGIC;
    signal h_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_v_ce1 : STD_LOGIC;
    signal h_v_we1 : STD_LOGIC;
    signal h_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal qt_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal qt_v_ce0 : STD_LOGIC;
    signal qt_v_we0 : STD_LOGIC;
    signal qt_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal qt_v_ce1 : STD_LOGIC;
    signal qt_v_we1 : STD_LOGIC;
    signal qt_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_ce0 : STD_LOGIC;
    signal b_we0 : STD_LOGIC;
    signal b_ce1 : STD_LOGIC;
    signal b_we1 : STD_LOGIC;
    signal b_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_x_v_ce0 : STD_LOGIC;
    signal t_x_v_we0 : STD_LOGIC;
    signal t_x_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_x_v_ce1 : STD_LOGIC;
    signal t_x_v_we1 : STD_LOGIC;
    signal t_x_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_y_v_ce0 : STD_LOGIC;
    signal t_y_v_we0 : STD_LOGIC;
    signal t_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_y_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_y_v_ce1 : STD_LOGIC;
    signal t_y_v_we1 : STD_LOGIC;
    signal t_y_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_ce0 : STD_LOGIC;
    signal r_temp_x_v_we0 : STD_LOGIC;
    signal r_temp_x_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_x_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_x_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_x_v_ce1 : STD_LOGIC;
    signal r_temp_x_v_we1 : STD_LOGIC;
    signal r_temp_x_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_x_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_ce0 : STD_LOGIC;
    signal r_temp_y_v_we0 : STD_LOGIC;
    signal r_temp_y_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_y_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_temp_y_v_ce1 : STD_LOGIC;
    signal r_temp_y_v_we1 : STD_LOGIC;
    signal r_temp_y_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_temp_y_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_ap_start : STD_LOGIC;
    signal grp_choose_t_fu_1365_ap_done : STD_LOGIC;
    signal grp_choose_t_fu_1365_ap_idle : STD_LOGIC;
    signal grp_choose_t_fu_1365_ap_ready : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_choose_t_fu_1365_t_x_v_ce0 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_x_v_we0 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_x_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_t_x_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_t_x_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_choose_t_fu_1365_t_x_v_ce1 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_x_v_we1 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_x_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_t_x_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_t_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_choose_t_fu_1365_t_y_v_ce0 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_y_v_we0 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_y_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_t_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_t_y_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_choose_t_fu_1365_t_y_v_ce1 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_y_v_we1 : STD_LOGIC;
    signal grp_choose_t_fu_1365_t_y_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_choose_t_fu_1365_pos_r : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_18_fu_1394_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1408_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_17_fu_1408_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1408_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_17_fu_1408_y_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_x_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_r_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_r_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_r_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_r_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_s_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_s_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_14_fu_1424_s_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_14_fu_1424_s_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_y_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_11_fu_1440_ap_start : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_ap_done : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_ap_idle : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_ap_ready : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_we0 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_we1 : STD_LOGIC;
    signal grp_crypto_sign_ed25519_11_fu_1440_r_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_sign_ed25519_11_fu_1440_x_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0 : STD_LOGIC;
    signal i_i_reg_1342 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal i_reg_1353 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_block_state57_on_subcall_done : BOOLEAN;
    signal ap_reg_grp_choose_t_fu_1365_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start : STD_LOGIC := '0';
    signal tmp_i_fu_1458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (56 downto 0);
    signal ap_block_state41_on_subcall_done : BOOLEAN;
    signal ap_block_state43_on_subcall_done : BOOLEAN;
    signal ap_block_state45_on_subcall_done : BOOLEAN;
    signal ap_block_state47_on_subcall_done : BOOLEAN;
    signal ap_block_state49_on_subcall_done : BOOLEAN;
    signal ap_block_state51_on_subcall_done : BOOLEAN;
    signal ap_block_state53_on_subcall_done : BOOLEAN;

    component choose_t IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_x_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        t_x_v_ce0 : OUT STD_LOGIC;
        t_x_v_we0 : OUT STD_LOGIC;
        t_x_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_x_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_x_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        t_x_v_ce1 : OUT STD_LOGIC;
        t_x_v_we1 : OUT STD_LOGIC;
        t_x_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_x_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_y_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        t_y_v_ce0 : OUT STD_LOGIC;
        t_y_v_we0 : OUT STD_LOGIC;
        t_y_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_y_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_y_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        t_y_v_ce1 : OUT STD_LOGIC;
        t_y_v_we1 : OUT STD_LOGIC;
        t_y_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pos_r : IN STD_LOGIC_VECTOR (6 downto 0);
        b : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_sign_ed25519_18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce0 : OUT STD_LOGIC;
        r_v_we0 : OUT STD_LOGIC;
        r_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        r_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce1 : OUT STD_LOGIC;
        r_v_we1 : OUT STD_LOGIC;
        r_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_v_ce0 : OUT STD_LOGIC;
        x_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        y_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        y_v_ce0 : OUT STD_LOGIC;
        y_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed25519_17 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce0 : OUT STD_LOGIC;
        r_v_we0 : OUT STD_LOGIC;
        r_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        r_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce1 : OUT STD_LOGIC;
        r_v_we1 : OUT STD_LOGIC;
        r_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        y_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        y_v_ce0 : OUT STD_LOGIC;
        y_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed25519_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce0 : OUT STD_LOGIC;
        r_v_we0 : OUT STD_LOGIC;
        r_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        r_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce1 : OUT STD_LOGIC;
        r_v_we1 : OUT STD_LOGIC;
        r_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_v_ce0 : OUT STD_LOGIC;
        x_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_v_ce1 : OUT STD_LOGIC;
        x_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        y_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        y_v_ce0 : OUT STD_LOGIC;
        y_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed25519_14 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r_ce0 : OUT STD_LOGIC;
        r_we0 : OUT STD_LOGIC;
        r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        r_ce1 : OUT STD_LOGIC;
        r_we1 : OUT STD_LOGIC;
        r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        s_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_v_ce0 : OUT STD_LOGIC;
        s_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        s_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_v_ce1 : OUT STD_LOGIC;
        s_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed25519_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce0 : OUT STD_LOGIC;
        r_v_we0 : OUT STD_LOGIC;
        r_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        r_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce1 : OUT STD_LOGIC;
        r_v_we1 : OUT STD_LOGIC;
        r_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_v_ce0 : OUT STD_LOGIC;
        x_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        y_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        y_v_ce0 : OUT STD_LOGIC;
        y_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed25519_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce0 : OUT STD_LOGIC;
        r_v_we0 : OUT STD_LOGIC;
        r_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        r_v_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        r_v_ce1 : OUT STD_LOGIC;
        r_v_we1 : OUT STD_LOGIC;
        r_v_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_v_ce0 : OUT STD_LOGIC;
        x_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed255vdy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component choose_t_v_v IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_ed255Hfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    ge25519_ec2d_v_U : component crypto_sign_ed255vdy
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_crypto_sign_ed25519_17_fu_1408_y_v_address0,
        ce0 => grp_crypto_sign_ed25519_17_fu_1408_y_v_ce0,
        q0 => ge25519_ec2d_v_q0);

    a_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => a_v_address0,
        ce0 => a_v_ce0,
        we0 => a_v_we0,
        d0 => a_v_d0,
        q0 => a_v_q0,
        address1 => a_v_address1,
        ce1 => a_v_ce1,
        we1 => a_v_we1,
        d1 => a_v_d1,
        q1 => a_v_q1);

    b_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_v_address0,
        ce0 => b_v_ce0,
        we0 => b_v_we0,
        d0 => b_v_d0,
        q0 => b_v_q0,
        address1 => b_v_address1,
        ce1 => b_v_ce1,
        we1 => b_v_we1,
        d1 => b_v_d1,
        q1 => b_v_q1);

    t1_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t1_v_address0,
        ce0 => t1_v_ce0,
        we0 => t1_v_we0,
        d0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d0,
        q0 => t1_v_q0,
        address1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_address1,
        ce1 => t1_v_ce1,
        we1 => t1_v_we1,
        d1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d1,
        q1 => t1_v_q1);

    t2_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t2_v_address0,
        ce0 => t2_v_ce0,
        we0 => t2_v_we0,
        d0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d0,
        q0 => t2_v_q0,
        address1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_address1,
        ce1 => t2_v_ce1,
        we1 => t2_v_we1,
        d1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d1,
        q1 => t2_v_q1);

    c_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => c_v_address0,
        ce0 => c_v_ce0,
        we0 => c_v_we0,
        d0 => c_v_d0,
        q0 => c_v_q0,
        address1 => c_v_address1,
        ce1 => c_v_ce1,
        we1 => c_v_we1,
        d1 => c_v_d1,
        q1 => c_v_q1);

    d_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => d_v_address0,
        ce0 => d_v_ce0,
        we0 => d_v_we0,
        d0 => grp_crypto_sign_ed25519_11_fu_1440_r_v_d0,
        q0 => d_v_q0,
        address1 => d_v_address1,
        ce1 => d_v_ce1,
        we1 => d_v_we1,
        d1 => grp_crypto_sign_ed25519_11_fu_1440_r_v_d1,
        q1 => d_v_q1);

    e_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => e_v_address0,
        ce0 => e_v_ce0,
        we0 => e_v_we0,
        d0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d0,
        q0 => e_v_q0,
        address1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_address1,
        ce1 => e_v_ce1,
        we1 => e_v_we1,
        d1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d1,
        q1 => e_v_q1);

    f_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => f_v_address0,
        ce0 => f_v_ce0,
        we0 => f_v_we0,
        d0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d0,
        q0 => f_v_q0,
        address1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_address1,
        ce1 => f_v_ce1,
        we1 => f_v_we1,
        d1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d1,
        q1 => f_v_q1);

    g_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => g_v_address0,
        ce0 => g_v_ce0,
        we0 => g_v_we0,
        d0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d0,
        q0 => g_v_q0,
        address1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_address1,
        ce1 => g_v_ce1,
        we1 => g_v_we1,
        d1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d1,
        q1 => g_v_q1);

    h_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_v_address0,
        ce0 => h_v_ce0,
        we0 => h_v_we0,
        d0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d0,
        q0 => h_v_q0,
        address1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_address1,
        ce1 => h_v_ce1,
        we1 => h_v_we1,
        d1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d1,
        q1 => h_v_q1);

    qt_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qt_v_address0,
        ce0 => qt_v_ce0,
        we0 => qt_v_we0,
        d0 => grp_crypto_sign_ed25519_18_fu_1380_r_v_d0,
        q0 => qt_v_q0,
        address1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_address1,
        ce1 => qt_v_ce1,
        we1 => qt_v_we1,
        d1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_d1,
        q1 => qt_v_q1);

    b_U : component crypto_sign_ed255Hfu
    generic map (
        DataWidth => 8,
        AddressRange => 85,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_address0,
        ce0 => b_ce0,
        we0 => b_we0,
        d0 => grp_crypto_sign_ed25519_14_fu_1424_r_d0,
        q0 => b_q0,
        address1 => grp_crypto_sign_ed25519_14_fu_1424_r_address1,
        ce1 => b_ce1,
        we1 => b_we1,
        d1 => grp_crypto_sign_ed25519_14_fu_1424_r_d1,
        q1 => b_q1);

    t_x_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_x_v_address0,
        ce0 => t_x_v_ce0,
        we0 => t_x_v_we0,
        d0 => grp_choose_t_fu_1365_t_x_v_d0,
        q0 => t_x_v_q0,
        address1 => grp_choose_t_fu_1365_t_x_v_address1,
        ce1 => t_x_v_ce1,
        we1 => t_x_v_we1,
        d1 => grp_choose_t_fu_1365_t_x_v_d1,
        q1 => t_x_v_q1);

    t_y_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_y_v_address0,
        ce0 => t_y_v_ce0,
        we0 => t_y_v_we0,
        d0 => grp_choose_t_fu_1365_t_y_v_d0,
        q0 => t_y_v_q0,
        address1 => t_y_v_address1,
        ce1 => t_y_v_ce1,
        we1 => t_y_v_we1,
        d1 => grp_choose_t_fu_1365_t_y_v_d1,
        q1 => t_y_v_q1);

    r_temp_x_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => r_temp_x_v_address0,
        ce0 => r_temp_x_v_ce0,
        we0 => r_temp_x_v_we0,
        d0 => r_temp_x_v_d0,
        q0 => r_temp_x_v_q0,
        address1 => r_temp_x_v_address1,
        ce1 => r_temp_x_v_ce1,
        we1 => r_temp_x_v_we1,
        d1 => r_temp_x_v_d1,
        q1 => r_temp_x_v_q1);

    r_temp_y_v_U : component choose_t_v_v
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => r_temp_y_v_address0,
        ce0 => r_temp_y_v_ce0,
        we0 => r_temp_y_v_we0,
        d0 => r_temp_y_v_d0,
        q0 => r_temp_y_v_q0,
        address1 => r_temp_y_v_address1,
        ce1 => r_temp_y_v_ce1,
        we1 => r_temp_y_v_we1,
        d1 => r_temp_y_v_d1,
        q1 => r_temp_y_v_q1);

    grp_choose_t_fu_1365 : component choose_t
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_choose_t_fu_1365_ap_start,
        ap_done => grp_choose_t_fu_1365_ap_done,
        ap_idle => grp_choose_t_fu_1365_ap_idle,
        ap_ready => grp_choose_t_fu_1365_ap_ready,
        t_x_v_address0 => grp_choose_t_fu_1365_t_x_v_address0,
        t_x_v_ce0 => grp_choose_t_fu_1365_t_x_v_ce0,
        t_x_v_we0 => grp_choose_t_fu_1365_t_x_v_we0,
        t_x_v_d0 => grp_choose_t_fu_1365_t_x_v_d0,
        t_x_v_q0 => grp_choose_t_fu_1365_t_x_v_q0,
        t_x_v_address1 => grp_choose_t_fu_1365_t_x_v_address1,
        t_x_v_ce1 => grp_choose_t_fu_1365_t_x_v_ce1,
        t_x_v_we1 => grp_choose_t_fu_1365_t_x_v_we1,
        t_x_v_d1 => grp_choose_t_fu_1365_t_x_v_d1,
        t_x_v_q1 => grp_choose_t_fu_1365_t_x_v_q1,
        t_y_v_address0 => grp_choose_t_fu_1365_t_y_v_address0,
        t_y_v_ce0 => grp_choose_t_fu_1365_t_y_v_ce0,
        t_y_v_we0 => grp_choose_t_fu_1365_t_y_v_we0,
        t_y_v_d0 => grp_choose_t_fu_1365_t_y_v_d0,
        t_y_v_q0 => grp_choose_t_fu_1365_t_y_v_q0,
        t_y_v_address1 => grp_choose_t_fu_1365_t_y_v_address1,
        t_y_v_ce1 => grp_choose_t_fu_1365_t_y_v_ce1,
        t_y_v_we1 => grp_choose_t_fu_1365_t_y_v_we1,
        t_y_v_d1 => grp_choose_t_fu_1365_t_y_v_d1,
        pos_r => grp_choose_t_fu_1365_pos_r,
        b => reg_1447);

    grp_crypto_sign_ed25519_18_fu_1380 : component crypto_sign_ed25519_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_18_fu_1380_ap_start,
        ap_done => grp_crypto_sign_ed25519_18_fu_1380_ap_done,
        ap_idle => grp_crypto_sign_ed25519_18_fu_1380_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_18_fu_1380_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_18_fu_1380_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_18_fu_1380_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_18_fu_1380_r_v_d0,
        r_v_q0 => grp_crypto_sign_ed25519_18_fu_1380_r_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_d1,
        r_v_q1 => grp_crypto_sign_ed25519_18_fu_1380_r_v_q1,
        x_v_address0 => grp_crypto_sign_ed25519_18_fu_1380_x_v_address0,
        x_v_ce0 => grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0,
        x_v_q0 => grp_crypto_sign_ed25519_18_fu_1380_x_v_q0,
        y_v_address0 => grp_crypto_sign_ed25519_18_fu_1380_y_v_address0,
        y_v_ce0 => grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0,
        y_v_q0 => grp_crypto_sign_ed25519_18_fu_1380_y_v_q0);

    grp_crypto_sign_ed25519_18_fu_1394 : component crypto_sign_ed25519_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_18_fu_1394_ap_start,
        ap_done => grp_crypto_sign_ed25519_18_fu_1394_ap_done,
        ap_idle => grp_crypto_sign_ed25519_18_fu_1394_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_18_fu_1394_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_18_fu_1394_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_18_fu_1394_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_18_fu_1394_r_v_d0,
        r_v_q0 => r_t_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_18_fu_1394_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_18_fu_1394_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_18_fu_1394_r_v_d1,
        r_v_q1 => r_t_v_q1,
        x_v_address0 => grp_crypto_sign_ed25519_18_fu_1394_x_v_address0,
        x_v_ce0 => grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0,
        x_v_q0 => e_v_q0,
        y_v_address0 => grp_crypto_sign_ed25519_18_fu_1394_y_v_address0,
        y_v_ce0 => grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0,
        y_v_q0 => h_v_q0);

    grp_crypto_sign_ed25519_17_fu_1402 : component crypto_sign_ed25519_17
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_17_fu_1402_ap_start,
        ap_done => grp_crypto_sign_ed25519_17_fu_1402_ap_done,
        ap_idle => grp_crypto_sign_ed25519_17_fu_1402_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_17_fu_1402_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_17_fu_1402_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_17_fu_1402_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_17_fu_1402_r_v_d0,
        r_v_q0 => grp_crypto_sign_ed25519_17_fu_1402_r_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_17_fu_1402_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_17_fu_1402_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_17_fu_1402_r_v_d1,
        r_v_q1 => grp_crypto_sign_ed25519_17_fu_1402_r_v_q1,
        y_v_address0 => grp_crypto_sign_ed25519_17_fu_1402_y_v_address0,
        y_v_ce0 => grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0,
        y_v_q0 => grp_crypto_sign_ed25519_17_fu_1402_y_v_q0);

    grp_crypto_sign_ed25519_17_fu_1408 : component crypto_sign_ed25519_17
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_17_fu_1408_ap_start,
        ap_done => grp_crypto_sign_ed25519_17_fu_1408_ap_done,
        ap_idle => grp_crypto_sign_ed25519_17_fu_1408_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_17_fu_1408_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_17_fu_1408_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_17_fu_1408_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_17_fu_1408_r_v_d0,
        r_v_q0 => c_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_17_fu_1408_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_17_fu_1408_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_17_fu_1408_r_v_d1,
        r_v_q1 => c_v_q1,
        y_v_address0 => grp_crypto_sign_ed25519_17_fu_1408_y_v_address0,
        y_v_ce0 => grp_crypto_sign_ed25519_17_fu_1408_y_v_ce0,
        y_v_q0 => ge25519_ec2d_v_q0);

    grp_crypto_sign_ed25519_8_fu_1415 : component crypto_sign_ed25519_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_8_fu_1415_ap_start,
        ap_done => grp_crypto_sign_ed25519_8_fu_1415_ap_done,
        ap_idle => grp_crypto_sign_ed25519_8_fu_1415_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_8_fu_1415_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d0,
        r_v_q0 => grp_crypto_sign_ed25519_8_fu_1415_r_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_d1,
        r_v_q1 => grp_crypto_sign_ed25519_8_fu_1415_r_v_q1,
        x_v_address0 => grp_crypto_sign_ed25519_8_fu_1415_x_v_address0,
        x_v_ce0 => grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0,
        x_v_q0 => grp_crypto_sign_ed25519_8_fu_1415_x_v_q0,
        x_v_address1 => grp_crypto_sign_ed25519_8_fu_1415_x_v_address1,
        x_v_ce1 => grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1,
        x_v_q1 => grp_crypto_sign_ed25519_8_fu_1415_x_v_q1,
        y_v_address0 => grp_crypto_sign_ed25519_8_fu_1415_y_v_address0,
        y_v_ce0 => grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0,
        y_v_q0 => grp_crypto_sign_ed25519_8_fu_1415_y_v_q0);

    grp_crypto_sign_ed25519_14_fu_1424 : component crypto_sign_ed25519_14
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_14_fu_1424_ap_start,
        ap_done => grp_crypto_sign_ed25519_14_fu_1424_ap_done,
        ap_idle => grp_crypto_sign_ed25519_14_fu_1424_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_14_fu_1424_ap_ready,
        r_address0 => grp_crypto_sign_ed25519_14_fu_1424_r_address0,
        r_ce0 => grp_crypto_sign_ed25519_14_fu_1424_r_ce0,
        r_we0 => grp_crypto_sign_ed25519_14_fu_1424_r_we0,
        r_d0 => grp_crypto_sign_ed25519_14_fu_1424_r_d0,
        r_q0 => b_q0,
        r_address1 => grp_crypto_sign_ed25519_14_fu_1424_r_address1,
        r_ce1 => grp_crypto_sign_ed25519_14_fu_1424_r_ce1,
        r_we1 => grp_crypto_sign_ed25519_14_fu_1424_r_we1,
        r_d1 => grp_crypto_sign_ed25519_14_fu_1424_r_d1,
        r_q1 => b_q1,
        s_v_address0 => grp_crypto_sign_ed25519_14_fu_1424_s_v_address0,
        s_v_ce0 => grp_crypto_sign_ed25519_14_fu_1424_s_v_ce0,
        s_v_q0 => s_v_q0,
        s_v_address1 => grp_crypto_sign_ed25519_14_fu_1424_s_v_address1,
        s_v_ce1 => grp_crypto_sign_ed25519_14_fu_1424_s_v_ce1,
        s_v_q1 => s_v_q1);

    grp_crypto_sign_ed25519_12_fu_1431 : component crypto_sign_ed25519_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_12_fu_1431_ap_start,
        ap_done => grp_crypto_sign_ed25519_12_fu_1431_ap_done,
        ap_idle => grp_crypto_sign_ed25519_12_fu_1431_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_12_fu_1431_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d0,
        r_v_q0 => grp_crypto_sign_ed25519_12_fu_1431_r_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_d1,
        r_v_q1 => grp_crypto_sign_ed25519_12_fu_1431_r_v_q1,
        x_v_address0 => grp_crypto_sign_ed25519_12_fu_1431_x_v_address0,
        x_v_ce0 => grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0,
        x_v_q0 => grp_crypto_sign_ed25519_12_fu_1431_x_v_q0,
        y_v_address0 => grp_crypto_sign_ed25519_12_fu_1431_y_v_address0,
        y_v_ce0 => grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0,
        y_v_q0 => grp_crypto_sign_ed25519_12_fu_1431_y_v_q0);

    grp_crypto_sign_ed25519_11_fu_1440 : component crypto_sign_ed25519_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_sign_ed25519_11_fu_1440_ap_start,
        ap_done => grp_crypto_sign_ed25519_11_fu_1440_ap_done,
        ap_idle => grp_crypto_sign_ed25519_11_fu_1440_ap_idle,
        ap_ready => grp_crypto_sign_ed25519_11_fu_1440_ap_ready,
        r_v_address0 => grp_crypto_sign_ed25519_11_fu_1440_r_v_address0,
        r_v_ce0 => grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0,
        r_v_we0 => grp_crypto_sign_ed25519_11_fu_1440_r_v_we0,
        r_v_d0 => grp_crypto_sign_ed25519_11_fu_1440_r_v_d0,
        r_v_q0 => d_v_q0,
        r_v_address1 => grp_crypto_sign_ed25519_11_fu_1440_r_v_address1,
        r_v_ce1 => grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1,
        r_v_we1 => grp_crypto_sign_ed25519_11_fu_1440_r_v_we1,
        r_v_d1 => grp_crypto_sign_ed25519_11_fu_1440_r_v_d1,
        r_v_q1 => d_v_q1,
        x_v_address0 => grp_crypto_sign_ed25519_11_fu_1440_x_v_address0,
        x_v_ce0 => grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0,
        x_v_q0 => r_z_v_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_choose_t_fu_1365_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_choose_t_fu_1365_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                    ap_reg_grp_choose_t_fu_1365_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_choose_t_fu_1365_ap_ready)) then 
                    ap_reg_grp_choose_t_fu_1365_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_11_fu_1440_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                    ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_12_fu_1431_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_14_fu_1424_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                    ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_17_fu_1402_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                    ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_17_fu_1408_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond_i_fu_1452_p2 = ap_const_lv1_1)) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                    ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_18_fu_1380_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_18_fu_1394_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                    ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_crypto_sign_ed25519_8_fu_1415_ap_ready)) then 
                    ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_1342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond_i_fu_1452_p2 = ap_const_lv1_0))) then 
                i_i_reg_1342 <= i_57_fu_1463_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                i_i_reg_1342 <= ap_const_lv6_1;
            end if; 
        end if;
    end process;

    i_reg_1353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_block_state57_on_subcall_done = ap_const_boolean_0))) then 
                i_reg_1353 <= i_58_reg_2147;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state38) and (grp_crypto_sign_ed25519_18_fu_1380_ap_done = ap_const_logic_1))) then 
                i_reg_1353 <= ap_const_lv7_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                i_58_reg_2147 <= i_58_fu_1480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state40))) then
                reg_1447 <= b_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state37, exitcond_i_fu_1452_p2, ap_CS_fsm_state39, exitcond_fu_1469_p2, grp_choose_t_fu_1365_ap_done, grp_crypto_sign_ed25519_18_fu_1380_ap_done, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_block_state57_on_subcall_done, ap_CS_fsm_state19, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state47, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_block_state41_on_subcall_done, ap_block_state43_on_subcall_done, ap_block_state45_on_subcall_done, ap_block_state47_on_subcall_done, ap_block_state49_on_subcall_done, ap_block_state51_on_subcall_done, ap_block_state53_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_choose_t_fu_1365_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond_i_fu_1452_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state38) and (grp_crypto_sign_ed25519_18_fu_1380_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state39) and (exitcond_fu_1469_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (ap_block_state41_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and (ap_block_state43_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_block_state45_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state47) and (ap_block_state47_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_block_state49_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and (ap_block_state51_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (ap_block_state53_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((grp_crypto_sign_ed25519_18_fu_1380_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_block_state57_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_v_address0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_address0, grp_crypto_sign_ed25519_8_fu_1415_r_v_address0, grp_crypto_sign_ed25519_8_fu_1415_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_y_v_address0, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state47, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            a_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            a_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_address0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_address0;
        else 
            a_v_address0 <= "XXXXX";
        end if; 
    end process;


    a_v_address1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_address1, grp_crypto_sign_ed25519_8_fu_1415_r_v_address1, ap_CS_fsm_state41, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_address1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_address1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_address1;
        else 
            a_v_address1 <= "XXXXX";
        end if; 
    end process;


    a_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state47, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            a_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            a_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_ce0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0;
        else 
            a_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1, grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1, ap_CS_fsm_state41, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_ce1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1;
        else 
            a_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    a_v_d0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_d0, grp_crypto_sign_ed25519_8_fu_1415_r_v_d0, ap_CS_fsm_state41, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_d0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_d0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_d0;
        else 
            a_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_v_d1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_d1, grp_crypto_sign_ed25519_8_fu_1415_r_v_d1, ap_CS_fsm_state41, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_d1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_d1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_d1;
        else 
            a_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_v_we0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_we0, grp_crypto_sign_ed25519_8_fu_1415_r_v_we0, ap_CS_fsm_state41, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_we0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_we0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_we0;
        else 
            a_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_v_we1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_we1, grp_crypto_sign_ed25519_8_fu_1415_r_v_we1, ap_CS_fsm_state41, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            a_v_we1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            a_v_we1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_we1;
        else 
            a_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state41_on_subcall_done_assign_proc : process(grp_choose_t_fu_1365_ap_done, grp_crypto_sign_ed25519_8_fu_1415_ap_done, grp_crypto_sign_ed25519_11_fu_1440_ap_done)
    begin
                ap_block_state41_on_subcall_done <= ((ap_const_logic_0 = grp_choose_t_fu_1365_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_8_fu_1415_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_11_fu_1440_ap_done));
    end process;


    ap_block_state43_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_ap_done, grp_crypto_sign_ed25519_12_fu_1431_ap_done)
    begin
                ap_block_state43_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_18_fu_1380_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_12_fu_1431_ap_done));
    end process;


    ap_block_state45_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_ap_done, grp_crypto_sign_ed25519_8_fu_1415_ap_done)
    begin
                ap_block_state45_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_18_fu_1380_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_8_fu_1415_ap_done));
    end process;


    ap_block_state47_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_ap_done, grp_crypto_sign_ed25519_17_fu_1408_ap_done, grp_crypto_sign_ed25519_12_fu_1431_ap_done)
    begin
                ap_block_state47_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_12_fu_1431_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_17_fu_1402_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_17_fu_1408_ap_done));
    end process;


    ap_block_state49_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_ap_done, grp_crypto_sign_ed25519_8_fu_1415_ap_done)
    begin
                ap_block_state49_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_8_fu_1415_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_17_fu_1402_ap_done));
    end process;


    ap_block_state51_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_ap_done, grp_crypto_sign_ed25519_12_fu_1431_ap_done)
    begin
                ap_block_state51_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_8_fu_1415_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_12_fu_1431_ap_done));
    end process;


    ap_block_state53_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_ap_done, grp_crypto_sign_ed25519_12_fu_1431_ap_done)
    begin
                ap_block_state53_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_18_fu_1380_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_12_fu_1431_ap_done));
    end process;


    ap_block_state57_on_subcall_done_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_ap_done, grp_crypto_sign_ed25519_18_fu_1394_ap_done)
    begin
                ap_block_state57_on_subcall_done <= ((ap_const_logic_0 = grp_crypto_sign_ed25519_18_fu_1380_ap_done) or (ap_const_logic_0 = grp_crypto_sign_ed25519_18_fu_1394_ap_done));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state39, exitcond_fu_1469_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state39) and (exitcond_fu_1469_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state39, exitcond_fu_1469_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (exitcond_fu_1469_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_address0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state39, grp_crypto_sign_ed25519_14_fu_1424_r_address0, tmp_fu_1475_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            b_address0 <= tmp_fu_1475_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            b_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_address0 <= grp_crypto_sign_ed25519_14_fu_1424_r_address0;
        else 
            b_address0 <= "XXXXXXX";
        end if; 
    end process;


    b_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state39, grp_crypto_sign_ed25519_14_fu_1424_r_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            b_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_ce0 <= grp_crypto_sign_ed25519_14_fu_1424_r_ce0;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce1_assign_proc : process(ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_r_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_ce1 <= grp_crypto_sign_ed25519_14_fu_1424_r_ce1;
        else 
            b_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_v_address0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_address0, grp_crypto_sign_ed25519_8_fu_1415_x_v_address0, grp_crypto_sign_ed25519_12_fu_1431_r_v_address0, grp_crypto_sign_ed25519_12_fu_1431_x_v_address0, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            b_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            b_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_address0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_address0;
        else 
            b_v_address0 <= "XXXXX";
        end if; 
    end process;


    b_v_address1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_address1, grp_crypto_sign_ed25519_8_fu_1415_x_v_address1, grp_crypto_sign_ed25519_12_fu_1431_r_v_address1, ap_CS_fsm_state43, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_address1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            b_v_address1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_address1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_address1;
        else 
            b_v_address1 <= "XXXXX";
        end if; 
    end process;


    b_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            b_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            b_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_ce0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_ce0;
        else 
            b_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1, grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1, grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1, ap_CS_fsm_state43, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_ce1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            b_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_ce1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_ce1;
        else 
            b_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    b_v_d0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_d0, grp_crypto_sign_ed25519_12_fu_1431_r_v_d0, ap_CS_fsm_state43, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_d0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_d0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_d0;
        else 
            b_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    b_v_d1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_d1, grp_crypto_sign_ed25519_12_fu_1431_r_v_d1, ap_CS_fsm_state43, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_d1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_d1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_d1;
        else 
            b_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    b_v_we0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_we0, grp_crypto_sign_ed25519_12_fu_1431_r_v_we0, ap_CS_fsm_state43, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_we0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_we0 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_we0;
        else 
            b_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_v_we1_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_r_v_we1, grp_crypto_sign_ed25519_12_fu_1431_r_v_we1, ap_CS_fsm_state43, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            b_v_we1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            b_v_we1 <= grp_crypto_sign_ed25519_17_fu_1402_r_v_we1;
        else 
            b_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    b_we0_assign_proc : process(ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_r_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_we0 <= grp_crypto_sign_ed25519_14_fu_1424_r_we0;
        else 
            b_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_we1_assign_proc : process(ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_r_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            b_we1 <= grp_crypto_sign_ed25519_14_fu_1424_r_we1;
        else 
            b_we1 <= ap_const_logic_0;
        end if; 
    end process;


    c_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_address0, grp_crypto_sign_ed25519_17_fu_1408_r_v_address0, grp_crypto_sign_ed25519_8_fu_1415_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_y_v_address0, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            c_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            c_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_address0 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
        else 
            c_v_address0 <= "XXXXX";
        end if; 
    end process;


    c_v_address1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_address1, grp_crypto_sign_ed25519_17_fu_1408_r_v_address1, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_address1 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_address1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
        else 
            c_v_address1 <= "XXXXX";
        end if; 
    end process;


    c_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0, grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            c_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            c_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_ce0 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
        else 
            c_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1, grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_ce1 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
        else 
            c_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    c_v_d0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_d0, grp_crypto_sign_ed25519_17_fu_1408_r_v_d0, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_d0 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_d0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
        else 
            c_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c_v_d1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_d1, grp_crypto_sign_ed25519_17_fu_1408_r_v_d1, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_d1 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_d1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
        else 
            c_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c_v_we0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we0, grp_crypto_sign_ed25519_17_fu_1408_r_v_we0, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_we0 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_we0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
        else 
            c_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c_v_we1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1, grp_crypto_sign_ed25519_17_fu_1408_r_v_we1, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            c_v_we1 <= grp_crypto_sign_ed25519_17_fu_1408_r_v_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            c_v_we1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
        else 
            c_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    d_v_address0_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_x_v_address0, grp_crypto_sign_ed25519_12_fu_1431_x_v_address0, grp_crypto_sign_ed25519_11_fu_1440_r_v_address0, ap_CS_fsm_state41, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            d_v_address0 <= grp_crypto_sign_ed25519_11_fu_1440_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            d_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            d_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
        else 
            d_v_address0 <= "XXXXX";
        end if; 
    end process;


    d_v_address1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_x_v_address1, grp_crypto_sign_ed25519_11_fu_1440_r_v_address1, ap_CS_fsm_state41, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            d_v_address1 <= grp_crypto_sign_ed25519_11_fu_1440_r_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            d_v_address1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
        else 
            d_v_address1 <= "XXXXX";
        end if; 
    end process;


    d_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0, grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0, ap_CS_fsm_state41, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            d_v_ce0 <= grp_crypto_sign_ed25519_11_fu_1440_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            d_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            d_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
        else 
            d_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1, grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1, ap_CS_fsm_state41, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            d_v_ce1 <= grp_crypto_sign_ed25519_11_fu_1440_r_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            d_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
        else 
            d_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_v_we0_assign_proc : process(grp_crypto_sign_ed25519_11_fu_1440_r_v_we0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            d_v_we0 <= grp_crypto_sign_ed25519_11_fu_1440_r_v_we0;
        else 
            d_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_v_we1_assign_proc : process(grp_crypto_sign_ed25519_11_fu_1440_r_v_we1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            d_v_we1 <= grp_crypto_sign_ed25519_11_fu_1440_r_v_we1;
        else 
            d_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    e_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_x_v_address0, grp_crypto_sign_ed25519_18_fu_1394_x_v_address0, grp_crypto_sign_ed25519_8_fu_1415_r_v_address0, ap_CS_fsm_state57, ap_CS_fsm_state53, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            e_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            e_v_address0 <= grp_crypto_sign_ed25519_18_fu_1394_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            e_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
        else 
            e_v_address0 <= "XXXXX";
        end if; 
    end process;


    e_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0, grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0, ap_CS_fsm_state57, ap_CS_fsm_state53, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            e_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            e_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1394_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            e_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
        else 
            e_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    e_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            e_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
        else 
            e_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    e_v_we0_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_we0, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            e_v_we0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
        else 
            e_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    e_v_we1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_we1, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            e_v_we1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
        else 
            e_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_1469_p2 <= "1" when (i_reg_1353 = ap_const_lv7_55) else "0";
    exitcond_i_fu_1452_p2 <= "1" when (i_i_reg_1342 = ap_const_lv6_20) else "0";

    f_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_y_v_address0, grp_crypto_sign_ed25519_8_fu_1415_r_v_address0, ap_CS_fsm_state57, ap_CS_fsm_state53, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            f_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            f_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
        else 
            f_v_address0 <= "XXXXX";
        end if; 
    end process;


    f_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0, ap_CS_fsm_state57, ap_CS_fsm_state53, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            f_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            f_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
        else 
            f_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    f_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            f_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
        else 
            f_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    f_v_we0_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_we0, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            f_v_we0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
        else 
            f_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    f_v_we1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_we1, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            f_v_we1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
        else 
            f_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    g_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_x_v_address0, grp_crypto_sign_ed25519_18_fu_1380_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_r_v_address0, ap_CS_fsm_state57, ap_CS_fsm_state55, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            g_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            g_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            g_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
        else 
            g_v_address0 <= "XXXXX";
        end if; 
    end process;


    g_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0, ap_CS_fsm_state57, ap_CS_fsm_state55, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            g_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            g_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            g_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
        else 
            g_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            g_v_ce1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
        else 
            g_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    g_v_we0_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_we0, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            g_v_we0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
        else 
            g_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_v_we1_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_we1, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            g_v_we1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
        else 
            g_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_choose_t_fu_1365_ap_start <= ap_reg_grp_choose_t_fu_1365_ap_start;

    grp_choose_t_fu_1365_pos_r_assign_proc : process(i_reg_1353, ap_CS_fsm_state19, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_choose_t_fu_1365_pos_r <= i_reg_1353;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_choose_t_fu_1365_pos_r <= ap_const_lv7_0;
        else 
            grp_choose_t_fu_1365_pos_r <= "XXXXXXX";
        end if; 
    end process;


    grp_choose_t_fu_1365_t_x_v_q0_assign_proc : process(t_x_v_q0, r_temp_x_v_q0, ap_CS_fsm_state19, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_choose_t_fu_1365_t_x_v_q0 <= t_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_choose_t_fu_1365_t_x_v_q0 <= r_temp_x_v_q0;
        else 
            grp_choose_t_fu_1365_t_x_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_choose_t_fu_1365_t_x_v_q1_assign_proc : process(t_x_v_q1, r_temp_x_v_q1, ap_CS_fsm_state19, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_choose_t_fu_1365_t_x_v_q1 <= t_x_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_choose_t_fu_1365_t_x_v_q1 <= r_temp_x_v_q1;
        else 
            grp_choose_t_fu_1365_t_x_v_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_choose_t_fu_1365_t_y_v_q0_assign_proc : process(t_y_v_q0, r_temp_y_v_q0, ap_CS_fsm_state19, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_choose_t_fu_1365_t_y_v_q0 <= t_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_choose_t_fu_1365_t_y_v_q0 <= r_temp_y_v_q0;
        else 
            grp_choose_t_fu_1365_t_y_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_crypto_sign_ed25519_11_fu_1440_ap_start <= ap_reg_grp_crypto_sign_ed25519_11_fu_1440_ap_start;
    grp_crypto_sign_ed25519_12_fu_1431_ap_start <= ap_reg_grp_crypto_sign_ed25519_12_fu_1431_ap_start;

    grp_crypto_sign_ed25519_12_fu_1431_r_v_q0_assign_proc : process(b_v_q0, t2_v_q0, g_v_q0, h_v_q0, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state47, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 <= h_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 <= g_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 <= t2_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 <= b_v_q0;
        else 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_12_fu_1431_r_v_q1_assign_proc : process(b_v_q1, t2_v_q1, g_v_q1, h_v_q1, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state47, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 <= h_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 <= g_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 <= t2_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 <= b_v_q1;
        else 
            grp_crypto_sign_ed25519_12_fu_1431_r_v_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_12_fu_1431_x_v_q0_assign_proc : process(r_y_v_q0, b_v_q0, d_v_q0, t_y_v_q0, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state47, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 <= b_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 <= d_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 <= t_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 <= r_y_v_q0;
        else 
            grp_crypto_sign_ed25519_12_fu_1431_x_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_12_fu_1431_y_v_q0_assign_proc : process(r_x_v_q0, a_v_q0, c_v_q0, t_x_v_q0, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state47, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 <= a_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 <= c_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 <= t_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 <= r_x_v_q0;
        else 
            grp_crypto_sign_ed25519_12_fu_1431_y_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_crypto_sign_ed25519_14_fu_1424_ap_start <= ap_reg_grp_crypto_sign_ed25519_14_fu_1424_ap_start;
    grp_crypto_sign_ed25519_17_fu_1402_ap_start <= ap_reg_grp_crypto_sign_ed25519_17_fu_1402_ap_start;

    grp_crypto_sign_ed25519_17_fu_1402_r_v_q0_assign_proc : process(a_v_q0, b_v_q0, ap_CS_fsm_state47, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 <= b_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 <= a_v_q0;
        else 
            grp_crypto_sign_ed25519_17_fu_1402_r_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_17_fu_1402_r_v_q1_assign_proc : process(a_v_q1, b_v_q1, ap_CS_fsm_state47, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 <= b_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 <= a_v_q1;
        else 
            grp_crypto_sign_ed25519_17_fu_1402_r_v_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_17_fu_1402_y_v_q0_assign_proc : process(t1_v_q0, t2_v_q0, ap_CS_fsm_state47, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 <= t2_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 <= t1_v_q0;
        else 
            grp_crypto_sign_ed25519_17_fu_1402_y_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_crypto_sign_ed25519_17_fu_1408_ap_start <= ap_reg_grp_crypto_sign_ed25519_17_fu_1408_ap_start;
    grp_crypto_sign_ed25519_18_fu_1380_ap_start <= ap_reg_grp_crypto_sign_ed25519_18_fu_1380_ap_start;

    grp_crypto_sign_ed25519_18_fu_1380_r_v_q0_assign_proc : process(r_x_v_q0, r_y_v_q0, r_z_v_q0, r_t_v_q0, c_v_q0, qt_v_q0, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= r_z_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= r_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= r_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= c_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= qt_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= r_t_v_q0;
        else 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_18_fu_1380_r_v_q1_assign_proc : process(r_x_v_q1, r_y_v_q1, r_z_v_q1, r_t_v_q1, c_v_q1, qt_v_q1, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= r_z_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= r_y_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= r_x_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= c_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= qt_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= r_t_v_q1;
        else 
            grp_crypto_sign_ed25519_18_fu_1380_r_v_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_18_fu_1380_x_v_q0_assign_proc : process(r_x_v_q0, r_t_v_q0, e_v_q0, g_v_q0, h_v_q0, t_x_v_q0, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= g_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= h_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= e_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= r_t_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= t_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= r_x_v_q0;
        else 
            grp_crypto_sign_ed25519_18_fu_1380_x_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_18_fu_1380_y_v_q0_assign_proc : process(r_y_v_q0, f_v_q0, g_v_q0, qt_v_q0, t_y_v_q0, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 <= g_v_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 <= f_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 <= qt_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 <= t_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 <= r_y_v_q0;
        else 
            grp_crypto_sign_ed25519_18_fu_1380_y_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_crypto_sign_ed25519_18_fu_1394_ap_start <= ap_reg_grp_crypto_sign_ed25519_18_fu_1394_ap_start;
    grp_crypto_sign_ed25519_8_fu_1415_ap_start <= ap_reg_grp_crypto_sign_ed25519_8_fu_1415_ap_start;

    grp_crypto_sign_ed25519_8_fu_1415_r_v_q0_assign_proc : process(a_v_q0, t1_v_q0, e_v_q0, f_v_q0, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 <= e_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 <= f_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 <= t1_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 <= a_v_q0;
        else 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_8_fu_1415_r_v_q1_assign_proc : process(a_v_q1, t1_v_q1, e_v_q1, f_v_q1, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 <= e_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 <= f_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 <= t1_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 <= a_v_q1;
        else 
            grp_crypto_sign_ed25519_8_fu_1415_r_v_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_8_fu_1415_x_v_q0_assign_proc : process(r_y_v_q0, b_v_q0, d_v_q0, t_y_v_q0, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 <= b_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 <= d_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 <= t_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 <= r_y_v_q0;
        else 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_8_fu_1415_x_v_q1_assign_proc : process(r_y_v_q1, b_v_q1, d_v_q1, t_y_v_q1, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 <= b_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 <= d_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 <= t_y_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 <= r_y_v_q1;
        else 
            grp_crypto_sign_ed25519_8_fu_1415_x_v_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_crypto_sign_ed25519_8_fu_1415_y_v_q0_assign_proc : process(r_x_v_q0, a_v_q0, c_v_q0, t_x_v_q0, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 <= a_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 <= c_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 <= t_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 <= r_x_v_q0;
        else 
            grp_crypto_sign_ed25519_8_fu_1415_y_v_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_x_v_address0, grp_crypto_sign_ed25519_18_fu_1394_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_r_v_address0, ap_CS_fsm_state57, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            h_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            h_v_address0 <= grp_crypto_sign_ed25519_18_fu_1394_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            h_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
        else 
            h_v_address0 <= "XXXXX";
        end if; 
    end process;


    h_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0, grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0, ap_CS_fsm_state57, ap_CS_fsm_state53, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            h_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            h_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1394_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            h_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
        else 
            h_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            h_v_ce1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
        else 
            h_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    h_v_we0_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_we0, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            h_v_we0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
        else 
            h_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    h_v_we1_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_we1, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            h_v_we1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
        else 
            h_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_57_fu_1463_p2 <= std_logic_vector(unsigned(i_i_reg_1342) + unsigned(ap_const_lv6_1));
    i_58_fu_1480_p2 <= std_logic_vector(unsigned(i_reg_1353) + unsigned(ap_const_lv7_1));

    qt_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_address0, grp_crypto_sign_ed25519_18_fu_1380_y_v_address0, ap_CS_fsm_state43, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            qt_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            qt_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
        else 
            qt_v_address0 <= "XXXXX";
        end if; 
    end process;


    qt_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0, ap_CS_fsm_state43, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            qt_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            qt_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
        else 
            qt_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    qt_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            qt_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
        else 
            qt_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    qt_v_we0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            qt_v_we0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
        else 
            qt_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    qt_v_we1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            qt_v_we1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
        else 
            qt_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    r_t_v_address0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_address0, grp_crypto_sign_ed25519_18_fu_1380_x_v_address0, grp_crypto_sign_ed25519_18_fu_1394_r_v_address0, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_address0 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            r_t_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
        else 
            r_t_v_address0 <= "XXXXX";
        end if; 
    end process;


    r_t_v_address1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_address1, grp_crypto_sign_ed25519_18_fu_1394_r_v_address1, ap_CS_fsm_state38, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_address1 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_address1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
        else 
            r_t_v_address1 <= "XXXXX";
        end if; 
    end process;


    r_t_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0, grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0, ap_CS_fsm_state38, ap_CS_fsm_state57, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            r_t_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
        else 
            r_t_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_t_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1, grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1, ap_CS_fsm_state38, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
        else 
            r_t_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_t_v_d0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_d0, grp_crypto_sign_ed25519_18_fu_1394_r_v_d0, ap_CS_fsm_state38, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_d0 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_d0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
        else 
            r_t_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_t_v_d1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_d1, grp_crypto_sign_ed25519_18_fu_1394_r_v_d1, ap_CS_fsm_state38, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_d1 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_d1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
        else 
            r_t_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_t_v_we0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we0, grp_crypto_sign_ed25519_18_fu_1394_r_v_we0, ap_CS_fsm_state38, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_we0 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_we0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
        else 
            r_t_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_t_v_we1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1, grp_crypto_sign_ed25519_18_fu_1394_r_v_we1, ap_CS_fsm_state38, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_t_v_we1 <= grp_crypto_sign_ed25519_18_fu_1394_r_v_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_t_v_we1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
        else 
            r_t_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    r_temp_x_v_addr_10_reg_1706 <= ap_const_lv64_A(5 - 1 downto 0);
    r_temp_x_v_addr_11_reg_1711 <= ap_const_lv64_B(5 - 1 downto 0);
    r_temp_x_v_addr_12_reg_1746 <= ap_const_lv64_C(5 - 1 downto 0);
    r_temp_x_v_addr_13_reg_1751 <= ap_const_lv64_D(5 - 1 downto 0);
    r_temp_x_v_addr_14_reg_1786 <= ap_const_lv64_E(5 - 1 downto 0);
    r_temp_x_v_addr_15_reg_1791 <= ap_const_lv64_F(5 - 1 downto 0);
    r_temp_x_v_addr_16_reg_1826 <= ap_const_lv64_10(5 - 1 downto 0);
    r_temp_x_v_addr_17_reg_1831 <= ap_const_lv64_11(5 - 1 downto 0);
    r_temp_x_v_addr_18_reg_1866 <= ap_const_lv64_12(5 - 1 downto 0);
    r_temp_x_v_addr_19_reg_1871 <= ap_const_lv64_13(5 - 1 downto 0);
    r_temp_x_v_addr_1_reg_1511 <= ap_const_lv64_1(5 - 1 downto 0);
    r_temp_x_v_addr_20_reg_1906 <= ap_const_lv64_14(5 - 1 downto 0);
    r_temp_x_v_addr_21_reg_1911 <= ap_const_lv64_15(5 - 1 downto 0);
    r_temp_x_v_addr_22_reg_1946 <= ap_const_lv64_16(5 - 1 downto 0);
    r_temp_x_v_addr_23_reg_1951 <= ap_const_lv64_17(5 - 1 downto 0);
    r_temp_x_v_addr_24_reg_1986 <= ap_const_lv64_18(5 - 1 downto 0);
    r_temp_x_v_addr_25_reg_1991 <= ap_const_lv64_19(5 - 1 downto 0);
    r_temp_x_v_addr_26_reg_2026 <= ap_const_lv64_1A(5 - 1 downto 0);
    r_temp_x_v_addr_27_reg_2031 <= ap_const_lv64_1B(5 - 1 downto 0);
    r_temp_x_v_addr_28_reg_2066 <= ap_const_lv64_1C(5 - 1 downto 0);
    r_temp_x_v_addr_29_reg_2071 <= ap_const_lv64_1D(5 - 1 downto 0);
    r_temp_x_v_addr_2_reg_1546 <= ap_const_lv64_2(5 - 1 downto 0);
    r_temp_x_v_addr_30_reg_2111 <= ap_const_lv64_1E(5 - 1 downto 0);
    r_temp_x_v_addr_31_reg_2116 <= ap_const_lv64_1F(5 - 1 downto 0);
    r_temp_x_v_addr_3_reg_1551 <= ap_const_lv64_3(5 - 1 downto 0);
    r_temp_x_v_addr_4_reg_1586 <= ap_const_lv64_4(5 - 1 downto 0);
    r_temp_x_v_addr_5_reg_1591 <= ap_const_lv64_5(5 - 1 downto 0);
    r_temp_x_v_addr_6_reg_1626 <= ap_const_lv64_6(5 - 1 downto 0);
    r_temp_x_v_addr_7_reg_1631 <= ap_const_lv64_7(5 - 1 downto 0);
    r_temp_x_v_addr_8_reg_1666 <= ap_const_lv64_8(5 - 1 downto 0);
    r_temp_x_v_addr_9_reg_1671 <= ap_const_lv64_9(5 - 1 downto 0);
    r_temp_x_v_addr_reg_1506 <= ap_const_lv64_0(5 - 1 downto 0);

    r_temp_x_v_address0_assign_proc : process(r_temp_x_v_addr_reg_1506, ap_CS_fsm_state2, r_temp_x_v_addr_2_reg_1546, ap_CS_fsm_state3, r_temp_x_v_addr_4_reg_1586, ap_CS_fsm_state4, r_temp_x_v_addr_6_reg_1626, ap_CS_fsm_state5, r_temp_x_v_addr_8_reg_1666, ap_CS_fsm_state6, r_temp_x_v_addr_10_reg_1706, ap_CS_fsm_state7, r_temp_x_v_addr_12_reg_1746, ap_CS_fsm_state8, r_temp_x_v_addr_14_reg_1786, ap_CS_fsm_state9, r_temp_x_v_addr_16_reg_1826, ap_CS_fsm_state10, r_temp_x_v_addr_18_reg_1866, ap_CS_fsm_state11, r_temp_x_v_addr_20_reg_1906, ap_CS_fsm_state12, r_temp_x_v_addr_22_reg_1946, ap_CS_fsm_state13, r_temp_x_v_addr_24_reg_1986, ap_CS_fsm_state14, r_temp_x_v_addr_26_reg_2026, ap_CS_fsm_state15, r_temp_x_v_addr_28_reg_2066, ap_CS_fsm_state16, ap_CS_fsm_state17, r_temp_x_v_addr_30_reg_2111, grp_choose_t_fu_1365_t_x_v_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_30_reg_2111;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_28_reg_2066;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_26_reg_2026;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_24_reg_1986;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_22_reg_1946;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_20_reg_1906;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_18_reg_1866;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_16_reg_1826;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_14_reg_1786;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_12_reg_1746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_10_reg_1706;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_8_reg_1666;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_6_reg_1626;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_4_reg_1586;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_2_reg_1546;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            r_temp_x_v_address0 <= r_temp_x_v_addr_reg_1506;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            r_temp_x_v_address0 <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_temp_x_v_address0 <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_temp_x_v_address0 <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_temp_x_v_address0 <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_temp_x_v_address0 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_temp_x_v_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_temp_x_v_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_temp_x_v_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_temp_x_v_address0 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_temp_x_v_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_temp_x_v_address0 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_temp_x_v_address0 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_temp_x_v_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_temp_x_v_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_temp_x_v_address0 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_temp_x_v_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_address0 <= grp_choose_t_fu_1365_t_x_v_address0;
        else 
            r_temp_x_v_address0 <= "XXXXX";
        end if; 
    end process;


    r_temp_x_v_address1_assign_proc : process(ap_CS_fsm_state2, r_temp_x_v_addr_1_reg_1511, ap_CS_fsm_state3, r_temp_x_v_addr_3_reg_1551, ap_CS_fsm_state4, r_temp_x_v_addr_5_reg_1591, ap_CS_fsm_state5, r_temp_x_v_addr_7_reg_1631, ap_CS_fsm_state6, r_temp_x_v_addr_9_reg_1671, ap_CS_fsm_state7, r_temp_x_v_addr_11_reg_1711, ap_CS_fsm_state8, r_temp_x_v_addr_13_reg_1751, ap_CS_fsm_state9, r_temp_x_v_addr_15_reg_1791, ap_CS_fsm_state10, r_temp_x_v_addr_17_reg_1831, ap_CS_fsm_state11, r_temp_x_v_addr_19_reg_1871, ap_CS_fsm_state12, r_temp_x_v_addr_21_reg_1911, ap_CS_fsm_state13, r_temp_x_v_addr_23_reg_1951, ap_CS_fsm_state14, r_temp_x_v_addr_25_reg_1991, ap_CS_fsm_state15, r_temp_x_v_addr_27_reg_2031, ap_CS_fsm_state16, r_temp_x_v_addr_29_reg_2071, ap_CS_fsm_state17, r_temp_x_v_addr_31_reg_2116, grp_choose_t_fu_1365_t_x_v_address1, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_31_reg_2116;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_29_reg_2071;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_27_reg_2031;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_25_reg_1991;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_23_reg_1951;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_21_reg_1911;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_19_reg_1871;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_17_reg_1831;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_15_reg_1791;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_13_reg_1751;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_11_reg_1711;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_9_reg_1671;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_7_reg_1631;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_5_reg_1591;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_3_reg_1551;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            r_temp_x_v_address1 <= r_temp_x_v_addr_1_reg_1511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            r_temp_x_v_address1 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_temp_x_v_address1 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_temp_x_v_address1 <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_temp_x_v_address1 <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_temp_x_v_address1 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_temp_x_v_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_temp_x_v_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_temp_x_v_address1 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_temp_x_v_address1 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_temp_x_v_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_temp_x_v_address1 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_temp_x_v_address1 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_temp_x_v_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_temp_x_v_address1 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_temp_x_v_address1 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_temp_x_v_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_address1 <= grp_choose_t_fu_1365_t_x_v_address1;
        else 
            r_temp_x_v_address1 <= "XXXXX";
        end if; 
    end process;


    r_temp_x_v_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_x_v_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            r_temp_x_v_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_ce0 <= grp_choose_t_fu_1365_t_x_v_ce0;
        else 
            r_temp_x_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_temp_x_v_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_x_v_ce1, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            r_temp_x_v_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_ce1 <= grp_choose_t_fu_1365_t_x_v_ce1;
        else 
            r_temp_x_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_temp_x_v_d0_assign_proc : process(r_x_v_q0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_x_v_d0, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_x_v_d0 <= r_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_d0 <= grp_choose_t_fu_1365_t_x_v_d0;
        else 
            r_temp_x_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_temp_x_v_d1_assign_proc : process(r_x_v_q1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_x_v_d1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_x_v_d1 <= r_x_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_d1 <= grp_choose_t_fu_1365_t_x_v_d1;
        else 
            r_temp_x_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_temp_x_v_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_x_v_we0, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_x_v_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_we0 <= grp_choose_t_fu_1365_t_x_v_we0;
        else 
            r_temp_x_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_temp_x_v_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_x_v_we1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_x_v_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_x_v_we1 <= grp_choose_t_fu_1365_t_x_v_we1;
        else 
            r_temp_x_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    r_temp_y_v_addr_10_reg_1726 <= ap_const_lv64_A(5 - 1 downto 0);
    r_temp_y_v_addr_11_reg_1731 <= ap_const_lv64_B(5 - 1 downto 0);
    r_temp_y_v_addr_12_reg_1766 <= ap_const_lv64_C(5 - 1 downto 0);
    r_temp_y_v_addr_13_reg_1771 <= ap_const_lv64_D(5 - 1 downto 0);
    r_temp_y_v_addr_14_reg_1806 <= ap_const_lv64_E(5 - 1 downto 0);
    r_temp_y_v_addr_15_reg_1811 <= ap_const_lv64_F(5 - 1 downto 0);
    r_temp_y_v_addr_16_reg_1846 <= ap_const_lv64_10(5 - 1 downto 0);
    r_temp_y_v_addr_17_reg_1851 <= ap_const_lv64_11(5 - 1 downto 0);
    r_temp_y_v_addr_18_reg_1886 <= ap_const_lv64_12(5 - 1 downto 0);
    r_temp_y_v_addr_19_reg_1891 <= ap_const_lv64_13(5 - 1 downto 0);
    r_temp_y_v_addr_1_reg_1531 <= ap_const_lv64_1(5 - 1 downto 0);
    r_temp_y_v_addr_20_reg_1926 <= ap_const_lv64_14(5 - 1 downto 0);
    r_temp_y_v_addr_21_reg_1931 <= ap_const_lv64_15(5 - 1 downto 0);
    r_temp_y_v_addr_22_reg_1966 <= ap_const_lv64_16(5 - 1 downto 0);
    r_temp_y_v_addr_23_reg_1971 <= ap_const_lv64_17(5 - 1 downto 0);
    r_temp_y_v_addr_24_reg_2006 <= ap_const_lv64_18(5 - 1 downto 0);
    r_temp_y_v_addr_25_reg_2011 <= ap_const_lv64_19(5 - 1 downto 0);
    r_temp_y_v_addr_26_reg_2046 <= ap_const_lv64_1A(5 - 1 downto 0);
    r_temp_y_v_addr_27_reg_2051 <= ap_const_lv64_1B(5 - 1 downto 0);
    r_temp_y_v_addr_28_reg_2086 <= ap_const_lv64_1C(5 - 1 downto 0);
    r_temp_y_v_addr_29_reg_2091 <= ap_const_lv64_1D(5 - 1 downto 0);
    r_temp_y_v_addr_2_reg_1566 <= ap_const_lv64_2(5 - 1 downto 0);
    r_temp_y_v_addr_30_reg_2121 <= ap_const_lv64_1E(5 - 1 downto 0);
    r_temp_y_v_addr_31_reg_2126 <= ap_const_lv64_1F(5 - 1 downto 0);
    r_temp_y_v_addr_3_reg_1571 <= ap_const_lv64_3(5 - 1 downto 0);
    r_temp_y_v_addr_4_reg_1606 <= ap_const_lv64_4(5 - 1 downto 0);
    r_temp_y_v_addr_5_reg_1611 <= ap_const_lv64_5(5 - 1 downto 0);
    r_temp_y_v_addr_6_reg_1646 <= ap_const_lv64_6(5 - 1 downto 0);
    r_temp_y_v_addr_7_reg_1651 <= ap_const_lv64_7(5 - 1 downto 0);
    r_temp_y_v_addr_8_reg_1686 <= ap_const_lv64_8(5 - 1 downto 0);
    r_temp_y_v_addr_9_reg_1691 <= ap_const_lv64_9(5 - 1 downto 0);
    r_temp_y_v_addr_reg_1526 <= ap_const_lv64_0(5 - 1 downto 0);

    r_temp_y_v_address0_assign_proc : process(ap_CS_fsm_state2, r_temp_y_v_addr_reg_1526, ap_CS_fsm_state3, r_temp_y_v_addr_2_reg_1566, ap_CS_fsm_state4, r_temp_y_v_addr_4_reg_1606, ap_CS_fsm_state5, r_temp_y_v_addr_6_reg_1646, ap_CS_fsm_state6, r_temp_y_v_addr_8_reg_1686, ap_CS_fsm_state7, r_temp_y_v_addr_10_reg_1726, ap_CS_fsm_state8, r_temp_y_v_addr_12_reg_1766, ap_CS_fsm_state9, r_temp_y_v_addr_14_reg_1806, ap_CS_fsm_state10, r_temp_y_v_addr_16_reg_1846, ap_CS_fsm_state11, r_temp_y_v_addr_18_reg_1886, ap_CS_fsm_state12, r_temp_y_v_addr_20_reg_1926, ap_CS_fsm_state13, r_temp_y_v_addr_22_reg_1966, ap_CS_fsm_state14, r_temp_y_v_addr_24_reg_2006, ap_CS_fsm_state15, r_temp_y_v_addr_26_reg_2046, ap_CS_fsm_state16, r_temp_y_v_addr_28_reg_2086, ap_CS_fsm_state17, r_temp_y_v_addr_30_reg_2121, grp_choose_t_fu_1365_t_y_v_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_30_reg_2121;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_28_reg_2086;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_26_reg_2046;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_24_reg_2006;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_22_reg_1966;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_20_reg_1926;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_18_reg_1886;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_16_reg_1846;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_14_reg_1806;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_12_reg_1766;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_10_reg_1726;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_8_reg_1686;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_6_reg_1646;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_4_reg_1606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_2_reg_1566;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            r_temp_y_v_address0 <= r_temp_y_v_addr_reg_1526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            r_temp_y_v_address0 <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_temp_y_v_address0 <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_temp_y_v_address0 <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_temp_y_v_address0 <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_temp_y_v_address0 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_temp_y_v_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_temp_y_v_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_temp_y_v_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_temp_y_v_address0 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_temp_y_v_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_temp_y_v_address0 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_temp_y_v_address0 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_temp_y_v_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_temp_y_v_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_temp_y_v_address0 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_temp_y_v_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_address0 <= grp_choose_t_fu_1365_t_y_v_address0;
        else 
            r_temp_y_v_address0 <= "XXXXX";
        end if; 
    end process;


    r_temp_y_v_address1_assign_proc : process(ap_CS_fsm_state2, r_temp_y_v_addr_1_reg_1531, ap_CS_fsm_state3, r_temp_y_v_addr_3_reg_1571, ap_CS_fsm_state4, r_temp_y_v_addr_5_reg_1611, ap_CS_fsm_state5, r_temp_y_v_addr_7_reg_1651, ap_CS_fsm_state6, r_temp_y_v_addr_9_reg_1691, ap_CS_fsm_state7, r_temp_y_v_addr_11_reg_1731, ap_CS_fsm_state8, r_temp_y_v_addr_13_reg_1771, ap_CS_fsm_state9, r_temp_y_v_addr_15_reg_1811, ap_CS_fsm_state10, r_temp_y_v_addr_17_reg_1851, ap_CS_fsm_state11, r_temp_y_v_addr_19_reg_1891, ap_CS_fsm_state12, r_temp_y_v_addr_21_reg_1931, ap_CS_fsm_state13, r_temp_y_v_addr_23_reg_1971, ap_CS_fsm_state14, r_temp_y_v_addr_25_reg_2011, ap_CS_fsm_state15, r_temp_y_v_addr_27_reg_2051, ap_CS_fsm_state16, r_temp_y_v_addr_29_reg_2091, ap_CS_fsm_state17, r_temp_y_v_addr_31_reg_2126, grp_choose_t_fu_1365_t_y_v_address1, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_31_reg_2126;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_29_reg_2091;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_27_reg_2051;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_25_reg_2011;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_23_reg_1971;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_21_reg_1931;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_19_reg_1891;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_17_reg_1851;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_15_reg_1811;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_13_reg_1771;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_11_reg_1731;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_9_reg_1691;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_7_reg_1651;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_5_reg_1611;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_3_reg_1571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            r_temp_y_v_address1 <= r_temp_y_v_addr_1_reg_1531;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            r_temp_y_v_address1 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_temp_y_v_address1 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_temp_y_v_address1 <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_temp_y_v_address1 <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_temp_y_v_address1 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_temp_y_v_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_temp_y_v_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_temp_y_v_address1 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_temp_y_v_address1 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_temp_y_v_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_temp_y_v_address1 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_temp_y_v_address1 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_temp_y_v_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_temp_y_v_address1 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_temp_y_v_address1 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_temp_y_v_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_address1 <= grp_choose_t_fu_1365_t_y_v_address1;
        else 
            r_temp_y_v_address1 <= "XXXXX";
        end if; 
    end process;


    r_temp_y_v_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_y_v_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            r_temp_y_v_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_ce0 <= grp_choose_t_fu_1365_t_y_v_ce0;
        else 
            r_temp_y_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_temp_y_v_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_y_v_ce1, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            r_temp_y_v_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_ce1 <= grp_choose_t_fu_1365_t_y_v_ce1;
        else 
            r_temp_y_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_temp_y_v_d0_assign_proc : process(r_y_v_q0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_y_v_d0, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_y_v_d0 <= r_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_d0 <= grp_choose_t_fu_1365_t_y_v_d0;
        else 
            r_temp_y_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_temp_y_v_d1_assign_proc : process(r_y_v_q1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_y_v_d1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_y_v_d1 <= r_y_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_d1 <= grp_choose_t_fu_1365_t_y_v_d1;
        else 
            r_temp_y_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_temp_y_v_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_y_v_we0, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_y_v_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_we0 <= grp_choose_t_fu_1365_t_y_v_we0;
        else 
            r_temp_y_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_temp_y_v_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, ap_CS_fsm_state17, grp_choose_t_fu_1365_t_y_v_we1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            r_temp_y_v_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            r_temp_y_v_we1 <= grp_choose_t_fu_1365_t_y_v_we1;
        else 
            r_temp_y_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    r_x_v_addr_10_reg_1676 <= ap_const_lv64_A(5 - 1 downto 0);
    r_x_v_addr_11_reg_1681 <= ap_const_lv64_B(5 - 1 downto 0);
    r_x_v_addr_12_reg_1716 <= ap_const_lv64_C(5 - 1 downto 0);
    r_x_v_addr_13_reg_1721 <= ap_const_lv64_D(5 - 1 downto 0);
    r_x_v_addr_14_reg_1756 <= ap_const_lv64_E(5 - 1 downto 0);
    r_x_v_addr_15_reg_1761 <= ap_const_lv64_F(5 - 1 downto 0);
    r_x_v_addr_16_reg_1796 <= ap_const_lv64_10(5 - 1 downto 0);
    r_x_v_addr_17_reg_1801 <= ap_const_lv64_11(5 - 1 downto 0);
    r_x_v_addr_18_reg_1836 <= ap_const_lv64_12(5 - 1 downto 0);
    r_x_v_addr_19_reg_1841 <= ap_const_lv64_13(5 - 1 downto 0);
    r_x_v_addr_1_reg_1491 <= ap_const_lv64_1(5 - 1 downto 0);
    r_x_v_addr_20_reg_1876 <= ap_const_lv64_14(5 - 1 downto 0);
    r_x_v_addr_21_reg_1881 <= ap_const_lv64_15(5 - 1 downto 0);
    r_x_v_addr_22_reg_1916 <= ap_const_lv64_16(5 - 1 downto 0);
    r_x_v_addr_23_reg_1921 <= ap_const_lv64_17(5 - 1 downto 0);
    r_x_v_addr_24_reg_1956 <= ap_const_lv64_18(5 - 1 downto 0);
    r_x_v_addr_25_reg_1961 <= ap_const_lv64_19(5 - 1 downto 0);
    r_x_v_addr_26_reg_1996 <= ap_const_lv64_1A(5 - 1 downto 0);
    r_x_v_addr_27_reg_2001 <= ap_const_lv64_1B(5 - 1 downto 0);
    r_x_v_addr_28_reg_2036 <= ap_const_lv64_1C(5 - 1 downto 0);
    r_x_v_addr_29_reg_2041 <= ap_const_lv64_1D(5 - 1 downto 0);
    r_x_v_addr_2_reg_1516 <= ap_const_lv64_2(5 - 1 downto 0);
    r_x_v_addr_30_reg_2076 <= ap_const_lv64_1E(5 - 1 downto 0);
    r_x_v_addr_31_reg_2081 <= ap_const_lv64_1F(5 - 1 downto 0);
    r_x_v_addr_3_reg_1521 <= ap_const_lv64_3(5 - 1 downto 0);
    r_x_v_addr_4_reg_1556 <= ap_const_lv64_4(5 - 1 downto 0);
    r_x_v_addr_5_reg_1561 <= ap_const_lv64_5(5 - 1 downto 0);
    r_x_v_addr_6_reg_1596 <= ap_const_lv64_6(5 - 1 downto 0);
    r_x_v_addr_7_reg_1601 <= ap_const_lv64_7(5 - 1 downto 0);
    r_x_v_addr_8_reg_1636 <= ap_const_lv64_8(5 - 1 downto 0);
    r_x_v_addr_9_reg_1641 <= ap_const_lv64_9(5 - 1 downto 0);
    r_x_v_addr_reg_1486 <= ap_const_lv64_0(5 - 1 downto 0);

    r_x_v_address0_assign_proc : process(ap_CS_fsm_state1, r_x_v_addr_reg_1486, ap_CS_fsm_state2, r_x_v_addr_2_reg_1516, ap_CS_fsm_state3, r_x_v_addr_4_reg_1556, ap_CS_fsm_state4, r_x_v_addr_6_reg_1596, ap_CS_fsm_state5, r_x_v_addr_8_reg_1636, ap_CS_fsm_state6, r_x_v_addr_10_reg_1676, ap_CS_fsm_state7, r_x_v_addr_12_reg_1716, ap_CS_fsm_state8, r_x_v_addr_14_reg_1756, ap_CS_fsm_state9, r_x_v_addr_16_reg_1796, ap_CS_fsm_state10, r_x_v_addr_18_reg_1836, ap_CS_fsm_state11, r_x_v_addr_20_reg_1876, ap_CS_fsm_state12, r_x_v_addr_22_reg_1916, ap_CS_fsm_state13, r_x_v_addr_24_reg_1956, ap_CS_fsm_state14, r_x_v_addr_26_reg_1996, ap_CS_fsm_state15, r_x_v_addr_28_reg_2036, ap_CS_fsm_state16, r_x_v_addr_30_reg_2076, grp_crypto_sign_ed25519_18_fu_1380_r_v_address0, grp_crypto_sign_ed25519_18_fu_1380_x_v_address0, grp_crypto_sign_ed25519_8_fu_1415_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_y_v_address0, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_x_v_address0 <= r_x_v_addr_30_reg_2076;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_x_v_address0 <= r_x_v_addr_28_reg_2036;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_x_v_address0 <= r_x_v_addr_26_reg_1996;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_x_v_address0 <= r_x_v_addr_24_reg_1956;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_x_v_address0 <= r_x_v_addr_22_reg_1916;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_x_v_address0 <= r_x_v_addr_20_reg_1876;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_x_v_address0 <= r_x_v_addr_18_reg_1836;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_x_v_address0 <= r_x_v_addr_16_reg_1796;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_x_v_address0 <= r_x_v_addr_14_reg_1756;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_x_v_address0 <= r_x_v_addr_12_reg_1716;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_x_v_address0 <= r_x_v_addr_10_reg_1676;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_x_v_address0 <= r_x_v_addr_8_reg_1636;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_x_v_address0 <= r_x_v_addr_6_reg_1596;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_x_v_address0 <= r_x_v_addr_4_reg_1556;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_x_v_address0 <= r_x_v_addr_2_reg_1516;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_x_v_address0 <= r_x_v_addr_reg_1486;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_x_v_address0 <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_x_v_address0 <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_x_v_address0 <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_x_v_address0 <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_x_v_address0 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_x_v_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_x_v_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_x_v_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_x_v_address0 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_x_v_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_x_v_address0 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_x_v_address0 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_x_v_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_x_v_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_x_v_address0 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            r_x_v_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            r_x_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_x_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_x_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
        else 
            r_x_v_address0 <= "XXXXX";
        end if; 
    end process;


    r_x_v_address1_assign_proc : process(ap_CS_fsm_state1, r_x_v_addr_1_reg_1491, ap_CS_fsm_state2, r_x_v_addr_3_reg_1521, ap_CS_fsm_state3, r_x_v_addr_5_reg_1561, ap_CS_fsm_state4, r_x_v_addr_7_reg_1601, ap_CS_fsm_state5, r_x_v_addr_9_reg_1641, ap_CS_fsm_state6, r_x_v_addr_11_reg_1681, ap_CS_fsm_state7, r_x_v_addr_13_reg_1721, ap_CS_fsm_state8, r_x_v_addr_15_reg_1761, ap_CS_fsm_state9, r_x_v_addr_17_reg_1801, ap_CS_fsm_state10, r_x_v_addr_19_reg_1841, ap_CS_fsm_state11, r_x_v_addr_21_reg_1881, ap_CS_fsm_state12, r_x_v_addr_23_reg_1921, ap_CS_fsm_state13, r_x_v_addr_25_reg_1961, ap_CS_fsm_state14, r_x_v_addr_27_reg_2001, ap_CS_fsm_state15, r_x_v_addr_29_reg_2041, ap_CS_fsm_state16, r_x_v_addr_31_reg_2081, grp_crypto_sign_ed25519_18_fu_1380_r_v_address1, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_x_v_address1 <= r_x_v_addr_31_reg_2081;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_x_v_address1 <= r_x_v_addr_29_reg_2041;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_x_v_address1 <= r_x_v_addr_27_reg_2001;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_x_v_address1 <= r_x_v_addr_25_reg_1961;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_x_v_address1 <= r_x_v_addr_23_reg_1921;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_x_v_address1 <= r_x_v_addr_21_reg_1881;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_x_v_address1 <= r_x_v_addr_19_reg_1841;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_x_v_address1 <= r_x_v_addr_17_reg_1801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_x_v_address1 <= r_x_v_addr_15_reg_1761;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_x_v_address1 <= r_x_v_addr_13_reg_1721;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_x_v_address1 <= r_x_v_addr_11_reg_1681;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_x_v_address1 <= r_x_v_addr_9_reg_1641;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_x_v_address1 <= r_x_v_addr_7_reg_1601;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_x_v_address1 <= r_x_v_addr_5_reg_1561;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_x_v_address1 <= r_x_v_addr_3_reg_1521;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_x_v_address1 <= r_x_v_addr_1_reg_1491;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_x_v_address1 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_x_v_address1 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_x_v_address1 <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_x_v_address1 <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_x_v_address1 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_x_v_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_x_v_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_x_v_address1 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_x_v_address1 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_x_v_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_x_v_address1 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_x_v_address1 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_x_v_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_x_v_address1 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_x_v_address1 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            r_x_v_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_address1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
        else 
            r_x_v_address1 <= "XXXXX";
        end if; 
    end process;


    r_x_v_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_x_v_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            r_x_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_x_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_x_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
        else 
            r_x_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_x_v_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_x_v_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
        else 
            r_x_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_x_v_d0_assign_proc : process(r_temp_x_v_q0, grp_crypto_sign_ed25519_18_fu_1380_r_v_d0, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_x_v_d0 <= r_temp_x_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_d0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
        else 
            r_x_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_x_v_d1_assign_proc : process(r_temp_x_v_q1, grp_crypto_sign_ed25519_18_fu_1380_r_v_d1, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_x_v_d1 <= r_temp_x_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_d1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
        else 
            r_x_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_x_v_we0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we0, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_x_v_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_we0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
        else 
            r_x_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_x_v_we1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_x_v_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            r_x_v_we1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
        else 
            r_x_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    r_y_v_addr_10_reg_1696 <= ap_const_lv64_A(5 - 1 downto 0);
    r_y_v_addr_11_reg_1701 <= ap_const_lv64_B(5 - 1 downto 0);
    r_y_v_addr_12_reg_1736 <= ap_const_lv64_C(5 - 1 downto 0);
    r_y_v_addr_13_reg_1741 <= ap_const_lv64_D(5 - 1 downto 0);
    r_y_v_addr_14_reg_1776 <= ap_const_lv64_E(5 - 1 downto 0);
    r_y_v_addr_15_reg_1781 <= ap_const_lv64_F(5 - 1 downto 0);
    r_y_v_addr_16_reg_1816 <= ap_const_lv64_10(5 - 1 downto 0);
    r_y_v_addr_17_reg_1821 <= ap_const_lv64_11(5 - 1 downto 0);
    r_y_v_addr_18_reg_1856 <= ap_const_lv64_12(5 - 1 downto 0);
    r_y_v_addr_19_reg_1861 <= ap_const_lv64_13(5 - 1 downto 0);
    r_y_v_addr_1_reg_1501 <= ap_const_lv64_1(5 - 1 downto 0);
    r_y_v_addr_20_reg_1896 <= ap_const_lv64_14(5 - 1 downto 0);
    r_y_v_addr_21_reg_1901 <= ap_const_lv64_15(5 - 1 downto 0);
    r_y_v_addr_22_reg_1936 <= ap_const_lv64_16(5 - 1 downto 0);
    r_y_v_addr_23_reg_1941 <= ap_const_lv64_17(5 - 1 downto 0);
    r_y_v_addr_24_reg_1976 <= ap_const_lv64_18(5 - 1 downto 0);
    r_y_v_addr_25_reg_1981 <= ap_const_lv64_19(5 - 1 downto 0);
    r_y_v_addr_26_reg_2016 <= ap_const_lv64_1A(5 - 1 downto 0);
    r_y_v_addr_27_reg_2021 <= ap_const_lv64_1B(5 - 1 downto 0);
    r_y_v_addr_28_reg_2056 <= ap_const_lv64_1C(5 - 1 downto 0);
    r_y_v_addr_29_reg_2061 <= ap_const_lv64_1D(5 - 1 downto 0);
    r_y_v_addr_2_reg_1536 <= ap_const_lv64_2(5 - 1 downto 0);
    r_y_v_addr_30_reg_2096 <= ap_const_lv64_1E(5 - 1 downto 0);
    r_y_v_addr_31_reg_2101 <= ap_const_lv64_1F(5 - 1 downto 0);
    r_y_v_addr_3_reg_1541 <= ap_const_lv64_3(5 - 1 downto 0);
    r_y_v_addr_4_reg_1576 <= ap_const_lv64_4(5 - 1 downto 0);
    r_y_v_addr_5_reg_1581 <= ap_const_lv64_5(5 - 1 downto 0);
    r_y_v_addr_6_reg_1616 <= ap_const_lv64_6(5 - 1 downto 0);
    r_y_v_addr_7_reg_1621 <= ap_const_lv64_7(5 - 1 downto 0);
    r_y_v_addr_8_reg_1656 <= ap_const_lv64_8(5 - 1 downto 0);
    r_y_v_addr_9_reg_1661 <= ap_const_lv64_9(5 - 1 downto 0);
    r_y_v_addr_reg_1496 <= ap_const_lv64_0(5 - 1 downto 0);

    r_y_v_address0_assign_proc : process(ap_CS_fsm_state1, r_y_v_addr_reg_1496, ap_CS_fsm_state2, r_y_v_addr_2_reg_1536, ap_CS_fsm_state3, r_y_v_addr_4_reg_1576, ap_CS_fsm_state4, r_y_v_addr_6_reg_1616, ap_CS_fsm_state5, r_y_v_addr_8_reg_1656, ap_CS_fsm_state6, r_y_v_addr_10_reg_1696, ap_CS_fsm_state7, r_y_v_addr_12_reg_1736, ap_CS_fsm_state8, r_y_v_addr_14_reg_1776, ap_CS_fsm_state9, r_y_v_addr_16_reg_1816, ap_CS_fsm_state10, r_y_v_addr_18_reg_1856, ap_CS_fsm_state11, r_y_v_addr_20_reg_1896, ap_CS_fsm_state12, r_y_v_addr_22_reg_1936, ap_CS_fsm_state13, r_y_v_addr_24_reg_1976, ap_CS_fsm_state14, r_y_v_addr_26_reg_2016, ap_CS_fsm_state15, r_y_v_addr_28_reg_2056, ap_CS_fsm_state16, r_y_v_addr_30_reg_2096, grp_crypto_sign_ed25519_18_fu_1380_r_v_address0, grp_crypto_sign_ed25519_18_fu_1380_y_v_address0, grp_crypto_sign_ed25519_8_fu_1415_x_v_address0, grp_crypto_sign_ed25519_12_fu_1431_x_v_address0, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_y_v_address0 <= r_y_v_addr_30_reg_2096;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_y_v_address0 <= r_y_v_addr_28_reg_2056;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_y_v_address0 <= r_y_v_addr_26_reg_2016;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_y_v_address0 <= r_y_v_addr_24_reg_1976;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_y_v_address0 <= r_y_v_addr_22_reg_1936;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_y_v_address0 <= r_y_v_addr_20_reg_1896;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_y_v_address0 <= r_y_v_addr_18_reg_1856;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_y_v_address0 <= r_y_v_addr_16_reg_1816;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_y_v_address0 <= r_y_v_addr_14_reg_1776;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_y_v_address0 <= r_y_v_addr_12_reg_1736;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_y_v_address0 <= r_y_v_addr_10_reg_1696;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_y_v_address0 <= r_y_v_addr_8_reg_1656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_y_v_address0 <= r_y_v_addr_6_reg_1616;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_y_v_address0 <= r_y_v_addr_4_reg_1576;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_y_v_address0 <= r_y_v_addr_2_reg_1536;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_y_v_address0 <= r_y_v_addr_reg_1496;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_y_v_address0 <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_y_v_address0 <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_y_v_address0 <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_y_v_address0 <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_y_v_address0 <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_y_v_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_y_v_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_y_v_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_y_v_address0 <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_y_v_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_y_v_address0 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_y_v_address0 <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_y_v_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_y_v_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_y_v_address0 <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            r_y_v_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            r_y_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_y_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_y_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
        else 
            r_y_v_address0 <= "XXXXX";
        end if; 
    end process;


    r_y_v_address1_assign_proc : process(ap_CS_fsm_state1, r_y_v_addr_1_reg_1501, ap_CS_fsm_state2, r_y_v_addr_3_reg_1541, ap_CS_fsm_state3, r_y_v_addr_5_reg_1581, ap_CS_fsm_state4, r_y_v_addr_7_reg_1621, ap_CS_fsm_state5, r_y_v_addr_9_reg_1661, ap_CS_fsm_state6, r_y_v_addr_11_reg_1701, ap_CS_fsm_state7, r_y_v_addr_13_reg_1741, ap_CS_fsm_state8, r_y_v_addr_15_reg_1781, ap_CS_fsm_state9, r_y_v_addr_17_reg_1821, ap_CS_fsm_state10, r_y_v_addr_19_reg_1861, ap_CS_fsm_state11, r_y_v_addr_21_reg_1901, ap_CS_fsm_state12, r_y_v_addr_23_reg_1941, ap_CS_fsm_state13, r_y_v_addr_25_reg_1981, ap_CS_fsm_state14, r_y_v_addr_27_reg_2021, ap_CS_fsm_state15, r_y_v_addr_29_reg_2061, ap_CS_fsm_state16, r_y_v_addr_31_reg_2101, grp_crypto_sign_ed25519_18_fu_1380_r_v_address1, grp_crypto_sign_ed25519_8_fu_1415_x_v_address1, ap_CS_fsm_state36, ap_CS_fsm_state41, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_y_v_address1 <= r_y_v_addr_31_reg_2101;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            r_y_v_address1 <= r_y_v_addr_29_reg_2061;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            r_y_v_address1 <= r_y_v_addr_27_reg_2021;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            r_y_v_address1 <= r_y_v_addr_25_reg_1981;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            r_y_v_address1 <= r_y_v_addr_23_reg_1941;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_y_v_address1 <= r_y_v_addr_21_reg_1901;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            r_y_v_address1 <= r_y_v_addr_19_reg_1861;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            r_y_v_address1 <= r_y_v_addr_17_reg_1821;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_y_v_address1 <= r_y_v_addr_15_reg_1781;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            r_y_v_address1 <= r_y_v_addr_13_reg_1741;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_y_v_address1 <= r_y_v_addr_11_reg_1701;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_y_v_address1 <= r_y_v_addr_9_reg_1661;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            r_y_v_address1 <= r_y_v_addr_7_reg_1621;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            r_y_v_address1 <= r_y_v_addr_5_reg_1581;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            r_y_v_address1 <= r_y_v_addr_3_reg_1541;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            r_y_v_address1 <= r_y_v_addr_1_reg_1501;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            r_y_v_address1 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            r_y_v_address1 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            r_y_v_address1 <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_y_v_address1 <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_y_v_address1 <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_y_v_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_y_v_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_y_v_address1 <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_y_v_address1 <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_y_v_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_y_v_address1 <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_y_v_address1 <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_y_v_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_y_v_address1 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            r_y_v_address1 <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            r_y_v_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_y_v_address1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_address1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;
        else 
            r_y_v_address1 <= "XXXXX";
        end if; 
    end process;


    r_y_v_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_y_v_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            r_y_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_y_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            r_y_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
        else 
            r_y_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_y_v_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_crypto_sign_ed25519_14_fu_1424_ap_done, grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1, grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1, ap_CS_fsm_state36, ap_CS_fsm_state41, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_crypto_sign_ed25519_14_fu_1424_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_y_v_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_y_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
        else 
            r_y_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_y_v_d0_assign_proc : process(r_temp_y_v_q0, grp_crypto_sign_ed25519_18_fu_1380_r_v_d0, ap_CS_fsm_state36, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_y_v_d0 <= r_temp_y_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_d0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
        else 
            r_y_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_y_v_d1_assign_proc : process(r_temp_y_v_q1, grp_crypto_sign_ed25519_18_fu_1380_r_v_d1, ap_CS_fsm_state36, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_y_v_d1 <= r_temp_y_v_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_d1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;
        else 
            r_y_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_y_v_we0_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we0, ap_CS_fsm_state36, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_y_v_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_we0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
        else 
            r_y_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_y_v_we1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1, ap_CS_fsm_state36, ap_CS_fsm_state55, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            r_y_v_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            r_y_v_we1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
        else 
            r_y_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    r_z_v_address0_assign_proc : process(ap_CS_fsm_state37, grp_crypto_sign_ed25519_18_fu_1380_r_v_address0, grp_crypto_sign_ed25519_11_fu_1440_x_v_address0, ap_CS_fsm_state36, ap_CS_fsm_state57, ap_CS_fsm_state41, tmp_i_fu_1458_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            r_z_v_address0 <= tmp_i_fu_1458_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_z_v_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_z_v_address0 <= grp_crypto_sign_ed25519_11_fu_1440_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_z_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address0;
        else 
            r_z_v_address0 <= "XXXXX";
        end if; 
    end process;

    r_z_v_address1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_address1;

    r_z_v_ce0_assign_proc : process(ap_CS_fsm_state37, grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0, grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0, ap_CS_fsm_state36, ap_CS_fsm_state57, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            r_z_v_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            r_z_v_ce0 <= grp_crypto_sign_ed25519_11_fu_1440_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_z_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce0;
        else 
            r_z_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_z_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_z_v_ce1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_ce1;
        else 
            r_z_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_z_v_d0_assign_proc : process(ap_CS_fsm_state37, grp_crypto_sign_ed25519_18_fu_1380_r_v_d0, ap_CS_fsm_state36, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            r_z_v_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_z_v_d0 <= ap_const_lv32_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_z_v_d0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d0;
        else 
            r_z_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    r_z_v_d1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_d1;

    r_z_v_we0_assign_proc : process(ap_CS_fsm_state37, exitcond_i_fu_1452_p2, grp_crypto_sign_ed25519_18_fu_1380_r_v_we0, ap_CS_fsm_state36, ap_CS_fsm_state57)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond_i_fu_1452_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            r_z_v_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_z_v_we0 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we0;
        else 
            r_z_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_z_v_we1_assign_proc : process(grp_crypto_sign_ed25519_18_fu_1380_r_v_we1, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            r_z_v_we1 <= grp_crypto_sign_ed25519_18_fu_1380_r_v_we1;
        else 
            r_z_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    s_v_address0 <= grp_crypto_sign_ed25519_14_fu_1424_s_v_address0;
    s_v_address1 <= grp_crypto_sign_ed25519_14_fu_1424_s_v_address1;
    s_v_ce0 <= grp_crypto_sign_ed25519_14_fu_1424_s_v_ce0;
    s_v_ce1 <= grp_crypto_sign_ed25519_14_fu_1424_s_v_ce1;

    t1_v_address0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_y_v_address0, grp_crypto_sign_ed25519_8_fu_1415_r_v_address0, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t1_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t1_v_address0 <= grp_crypto_sign_ed25519_17_fu_1402_y_v_address0;
        else 
            t1_v_address0 <= "XXXXX";
        end if; 
    end process;


    t1_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t1_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t1_v_ce0 <= grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0;
        else 
            t1_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t1_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t1_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_ce1;
        else 
            t1_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t1_v_we0_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_we0, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t1_v_we0 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we0;
        else 
            t1_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t1_v_we1_assign_proc : process(grp_crypto_sign_ed25519_8_fu_1415_r_v_we1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t1_v_we1 <= grp_crypto_sign_ed25519_8_fu_1415_r_v_we1;
        else 
            t1_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    t2_v_address0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_r_v_address0, ap_CS_fsm_state47, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t2_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            t2_v_address0 <= grp_crypto_sign_ed25519_17_fu_1402_y_v_address0;
        else 
            t2_v_address0 <= "XXXXX";
        end if; 
    end process;


    t2_v_ce0_assign_proc : process(grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0, ap_CS_fsm_state47, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t2_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            t2_v_ce0 <= grp_crypto_sign_ed25519_17_fu_1402_y_v_ce0;
        else 
            t2_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t2_v_ce1_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t2_v_ce1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_ce1;
        else 
            t2_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t2_v_we0_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_we0, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t2_v_we0 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we0;
        else 
            t2_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t2_v_we1_assign_proc : process(grp_crypto_sign_ed25519_12_fu_1431_r_v_we1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t2_v_we1 <= grp_crypto_sign_ed25519_12_fu_1431_r_v_we1;
        else 
            t2_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    t_x_v_address0_assign_proc : process(grp_choose_t_fu_1365_t_x_v_address0, grp_crypto_sign_ed25519_18_fu_1380_x_v_address0, grp_crypto_sign_ed25519_8_fu_1415_y_v_address0, grp_crypto_sign_ed25519_12_fu_1431_y_v_address0, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t_x_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t_x_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            t_x_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_x_v_address0 <= grp_choose_t_fu_1365_t_x_v_address0;
        else 
            t_x_v_address0 <= "XXXXX";
        end if; 
    end process;


    t_x_v_ce0_assign_proc : process(grp_choose_t_fu_1365_t_x_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t_x_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t_x_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            t_x_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_x_v_ce0 <= grp_choose_t_fu_1365_t_x_v_ce0;
        else 
            t_x_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_x_v_ce1_assign_proc : process(grp_choose_t_fu_1365_t_x_v_ce1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_x_v_ce1 <= grp_choose_t_fu_1365_t_x_v_ce1;
        else 
            t_x_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t_x_v_we0_assign_proc : process(grp_choose_t_fu_1365_t_x_v_we0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_x_v_we0 <= grp_choose_t_fu_1365_t_x_v_we0;
        else 
            t_x_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t_x_v_we1_assign_proc : process(grp_choose_t_fu_1365_t_x_v_we1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_x_v_we1 <= grp_choose_t_fu_1365_t_x_v_we1;
        else 
            t_x_v_we1 <= ap_const_logic_0;
        end if; 
    end process;


    t_y_v_address0_assign_proc : process(grp_choose_t_fu_1365_t_y_v_address0, grp_crypto_sign_ed25519_18_fu_1380_y_v_address0, grp_crypto_sign_ed25519_8_fu_1415_x_v_address0, grp_crypto_sign_ed25519_12_fu_1431_x_v_address0, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t_y_v_address0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t_y_v_address0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            t_y_v_address0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_y_v_address0 <= grp_choose_t_fu_1365_t_y_v_address0;
        else 
            t_y_v_address0 <= "XXXXX";
        end if; 
    end process;


    t_y_v_address1_assign_proc : process(grp_choose_t_fu_1365_t_y_v_address1, grp_crypto_sign_ed25519_8_fu_1415_x_v_address1, ap_CS_fsm_state41, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t_y_v_address1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_y_v_address1 <= grp_choose_t_fu_1365_t_y_v_address1;
        else 
            t_y_v_address1 <= "XXXXX";
        end if; 
    end process;


    t_y_v_ce0_assign_proc : process(grp_choose_t_fu_1365_t_y_v_ce0, grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0, grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0, grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state45, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            t_y_v_ce0 <= grp_crypto_sign_ed25519_12_fu_1431_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t_y_v_ce0 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            t_y_v_ce0 <= grp_crypto_sign_ed25519_18_fu_1380_y_v_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_y_v_ce0 <= grp_choose_t_fu_1365_t_y_v_ce0;
        else 
            t_y_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_y_v_ce1_assign_proc : process(grp_choose_t_fu_1365_t_y_v_ce1, grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1, ap_CS_fsm_state41, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            t_y_v_ce1 <= grp_crypto_sign_ed25519_8_fu_1415_x_v_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_y_v_ce1 <= grp_choose_t_fu_1365_t_y_v_ce1;
        else 
            t_y_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t_y_v_we0_assign_proc : process(grp_choose_t_fu_1365_t_y_v_we0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_y_v_we0 <= grp_choose_t_fu_1365_t_y_v_we0;
        else 
            t_y_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t_y_v_we1_assign_proc : process(grp_choose_t_fu_1365_t_y_v_we1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_y_v_we1 <= grp_choose_t_fu_1365_t_y_v_we1;
        else 
            t_y_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_1353),64));
    tmp_i_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_1342),64));
end behav;
