-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity contact_discovery is
generic (
    C_M_AXI_DB_MEM_V_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_DB_MEM_V_ID_WIDTH : INTEGER := 1;
    C_M_AXI_DB_MEM_V_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DB_MEM_V_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_DB_MEM_V_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DB_MEM_V_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DB_MEM_V_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DB_MEM_V_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_RESULTS_OUT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_RESULTS_OUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_RESULTS_OUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_RESULTS_OUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_RESULTS_OUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_RESULTS_OUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_RESULTS_OUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_RESULTS_OUT_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_RESULTS_OUT_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_DB_MEM_V_USER_VALUE : INTEGER := 0;
    C_M_AXI_RESULTS_OUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_DB_MEM_V_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_DB_MEM_V_PROT_VALUE : INTEGER := 0;
    C_M_AXI_DB_MEM_V_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_RESULTS_OUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_RESULTS_OUT_USER_VALUE : INTEGER := 0 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_db_mem_V_AWVALID : OUT STD_LOGIC;
    m_axi_db_mem_V_AWREADY : IN STD_LOGIC;
    m_axi_db_mem_V_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ADDR_WIDTH-1 downto 0);
    m_axi_db_mem_V_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ID_WIDTH-1 downto 0);
    m_axi_db_mem_V_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_db_mem_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_db_mem_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_db_mem_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_db_mem_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_db_mem_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_db_mem_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_db_mem_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_db_mem_V_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_AWUSER_WIDTH-1 downto 0);
    m_axi_db_mem_V_WVALID : OUT STD_LOGIC;
    m_axi_db_mem_V_WREADY : IN STD_LOGIC;
    m_axi_db_mem_V_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_DATA_WIDTH-1 downto 0);
    m_axi_db_mem_V_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_DATA_WIDTH/8-1 downto 0);
    m_axi_db_mem_V_WLAST : OUT STD_LOGIC;
    m_axi_db_mem_V_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ID_WIDTH-1 downto 0);
    m_axi_db_mem_V_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_WUSER_WIDTH-1 downto 0);
    m_axi_db_mem_V_ARVALID : OUT STD_LOGIC;
    m_axi_db_mem_V_ARREADY : IN STD_LOGIC;
    m_axi_db_mem_V_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ADDR_WIDTH-1 downto 0);
    m_axi_db_mem_V_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ID_WIDTH-1 downto 0);
    m_axi_db_mem_V_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_db_mem_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_db_mem_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_db_mem_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_db_mem_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_db_mem_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_db_mem_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_db_mem_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_db_mem_V_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ARUSER_WIDTH-1 downto 0);
    m_axi_db_mem_V_RVALID : IN STD_LOGIC;
    m_axi_db_mem_V_RREADY : OUT STD_LOGIC;
    m_axi_db_mem_V_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_DATA_WIDTH-1 downto 0);
    m_axi_db_mem_V_RLAST : IN STD_LOGIC;
    m_axi_db_mem_V_RID : IN STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ID_WIDTH-1 downto 0);
    m_axi_db_mem_V_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_RUSER_WIDTH-1 downto 0);
    m_axi_db_mem_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_db_mem_V_BVALID : IN STD_LOGIC;
    m_axi_db_mem_V_BREADY : OUT STD_LOGIC;
    m_axi_db_mem_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_db_mem_V_BID : IN STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_ID_WIDTH-1 downto 0);
    m_axi_db_mem_V_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DB_MEM_V_BUSER_WIDTH-1 downto 0);
    m_axi_results_out_AWVALID : OUT STD_LOGIC;
    m_axi_results_out_AWREADY : IN STD_LOGIC;
    m_axi_results_out_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_results_out_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ID_WIDTH-1 downto 0);
    m_axi_results_out_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_results_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_results_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_results_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_results_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_results_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_results_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_results_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_results_out_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_AWUSER_WIDTH-1 downto 0);
    m_axi_results_out_WVALID : OUT STD_LOGIC;
    m_axi_results_out_WREADY : IN STD_LOGIC;
    m_axi_results_out_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_DATA_WIDTH-1 downto 0);
    m_axi_results_out_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_DATA_WIDTH/8-1 downto 0);
    m_axi_results_out_WLAST : OUT STD_LOGIC;
    m_axi_results_out_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ID_WIDTH-1 downto 0);
    m_axi_results_out_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_WUSER_WIDTH-1 downto 0);
    m_axi_results_out_ARVALID : OUT STD_LOGIC;
    m_axi_results_out_ARREADY : IN STD_LOGIC;
    m_axi_results_out_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_results_out_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ID_WIDTH-1 downto 0);
    m_axi_results_out_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_results_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_results_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_results_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_results_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_results_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_results_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_results_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_results_out_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ARUSER_WIDTH-1 downto 0);
    m_axi_results_out_RVALID : IN STD_LOGIC;
    m_axi_results_out_RREADY : OUT STD_LOGIC;
    m_axi_results_out_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_DATA_WIDTH-1 downto 0);
    m_axi_results_out_RLAST : IN STD_LOGIC;
    m_axi_results_out_RID : IN STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ID_WIDTH-1 downto 0);
    m_axi_results_out_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_RUSER_WIDTH-1 downto 0);
    m_axi_results_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_results_out_BVALID : IN STD_LOGIC;
    m_axi_results_out_BREADY : OUT STD_LOGIC;
    m_axi_results_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_results_out_BID : IN STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_ID_WIDTH-1 downto 0);
    m_axi_results_out_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RESULTS_OUT_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of contact_discovery is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "contact_discovery,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=67108871,HLS_SYN_TPT=none,HLS_SYN_MEM=33,HLS_SYN_DSP=0,HLS_SYN_FF=4501,HLS_SYN_LUT=5277}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage40 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage41 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage42 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage43 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage44 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage45 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage46 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage47 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage48 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage49 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage50 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage51 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage52 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage53 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage54 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage55 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage56 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage57 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage58 : STD_LOGIC_VECTOR (69 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage59 : STD_LOGIC_VECTOR (69 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage60 : STD_LOGIC_VECTOR (69 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage61 : STD_LOGIC_VECTOR (69 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage62 : STD_LOGIC_VECTOR (69 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage63 : STD_LOGIC_VECTOR (69 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (69 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (69 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (69 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (69 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal operation : STD_LOGIC_VECTOR (31 downto 0);
    signal operation_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal operation_ap_vld : STD_LOGIC;
    signal operation_in_sig : STD_LOGIC_VECTOR (31 downto 0);
    signal operation_ap_vld_preg : STD_LOGIC := '0';
    signal operation_ap_vld_in_sig : STD_LOGIC;
    signal contact_in_V : STD_LOGIC_VECTOR (511 downto 0);
    signal offset : STD_LOGIC_VECTOR (63 downto 0);
    signal db_size_in : STD_LOGIC_VECTOR (31 downto 0);
    signal error_out_1_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal error_out_1_data_in : STD_LOGIC_VECTOR (31 downto 0);
    signal error_out_1_vld_reg : STD_LOGIC := '0';
    signal error_out_1_vld_in : STD_LOGIC;
    signal error_out_1_ack_in : STD_LOGIC;
    signal contacts_size_out_1_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal contacts_size_out_1_data_in : STD_LOGIC_VECTOR (31 downto 0);
    signal contacts_size_out_1_vld_reg : STD_LOGIC := '0';
    signal contacts_size_out_1_vld_in : STD_LOGIC;
    signal contacts_size_out_1_ack_in : STD_LOGIC;
    signal contacts_size : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal contacts_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal contacts_V_ce0 : STD_LOGIC;
    signal contacts_V_we0 : STD_LOGIC;
    signal contacts_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal contacts_V_ce1 : STD_LOGIC;
    signal contacts_V_q1 : STD_LOGIC_VECTOR (511 downto 0);
    signal operation_blk_n : STD_LOGIC;
    signal db_mem_V_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_flag00000000 : BOOLEAN;
    signal tmp_127_reg_356 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_365 : STD_LOGIC_VECTOR (0 downto 0);
    signal db_mem_V_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_flag00000000 : BOOLEAN;
    signal results_out_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage9_flag00000000 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_127_reg_356 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_8_reg_365 : STD_LOGIC_VECTOR (0 downto 0);
    signal results_out_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_flag00000000 : BOOLEAN;
    signal results_out_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15_flag00000000 : BOOLEAN;
    signal db_mem_V_AWREADY : STD_LOGIC;
    signal db_mem_V_WREADY : STD_LOGIC;
    signal db_mem_V_ARVALID : STD_LOGIC;
    signal db_mem_V_ARREADY : STD_LOGIC;
    signal db_mem_V_RVALID : STD_LOGIC;
    signal db_mem_V_RREADY : STD_LOGIC;
    signal db_mem_V_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal db_mem_V_RLAST : STD_LOGIC;
    signal db_mem_V_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal db_mem_V_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal db_mem_V_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal db_mem_V_BVALID : STD_LOGIC;
    signal db_mem_V_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal db_mem_V_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal db_mem_V_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal results_out_AWVALID : STD_LOGIC;
    signal results_out_AWREADY : STD_LOGIC;
    signal results_out_WVALID : STD_LOGIC;
    signal results_out_WREADY : STD_LOGIC;
    signal results_out_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal results_out_ARREADY : STD_LOGIC;
    signal results_out_RVALID : STD_LOGIC;
    signal results_out_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal results_out_RLAST : STD_LOGIC;
    signal results_out_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal results_out_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal results_out_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal results_out_BVALID : STD_LOGIC;
    signal results_out_BREADY : STD_LOGIC;
    signal results_out_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal results_out_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal results_out_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal database_index_reg_189 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal contact_in_V_read_reg_325 : STD_LOGIC_VECTOR (511 downto 0);
    signal operation_read_read_fu_130_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal contacts_size_load_reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_fu_230_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_126_reg_343 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_5_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal database_index_1_fu_272_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal database_index_1_reg_360 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_fu_295_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sum_reg_369 : STD_LOGIC_VECTOR (24 downto 0);
    signal results_out_addr_reg_374 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_results_out_addr_reg_374 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_sig_ioackin_db_mem_V_ARREADY : STD_LOGIC;
    signal ap_predicate_op161_readreq_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state68_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_flag00011001 : BOOLEAN;
    signal db_mem_V_addr_read_reg_385 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_predicate_op168_read_state11 : BOOLEAN;
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state75_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_flag00011001 : BOOLEAN;
    signal grp_match_db_contact_fu_212_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state76_pp0_stage9_iter1 : BOOLEAN;
    signal ap_sig_ioackin_results_out_AWREADY : STD_LOGIC;
    signal ap_predicate_op234_writereq_state76 : BOOLEAN;
    signal ap_block_state76_io : BOOLEAN;
    signal ap_block_pp0_stage9_flag00011001 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_predicate_tran3to83_state3 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_state66_pp0_stage63_iter0 : BOOLEAN;
    signal ap_block_pp0_stage63_flag00011011 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage63 : signal is "none";
    signal ap_block_state18_pp0_stage15_iter0 : BOOLEAN;
    signal ap_predicate_op241_writeresp_state82 : BOOLEAN;
    signal ap_block_state82_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_pp0_stage15_flag00011011 : BOOLEAN;
    signal grp_match_db_contact_fu_212_ap_start : STD_LOGIC;
    signal grp_match_db_contact_fu_212_ap_done : STD_LOGIC;
    signal grp_match_db_contact_fu_212_ap_idle : STD_LOGIC;
    signal grp_match_db_contact_fu_212_ap_ready : STD_LOGIC;
    signal grp_match_db_contact_fu_212_ap_ce : STD_LOGIC;
    signal grp_match_db_contact_fu_212_contacts_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_match_db_contact_fu_212_contacts_V_ce0 : STD_LOGIC;
    signal grp_match_db_contact_fu_212_contacts_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_match_db_contact_fu_212_contacts_V_ce1 : STD_LOGIC;
    signal ap_predicate_op169_call_state12 : BOOLEAN;
    signal ap_predicate_op170_call_state13 : BOOLEAN;
    signal ap_predicate_op171_call_state14 : BOOLEAN;
    signal ap_predicate_op172_call_state15 : BOOLEAN;
    signal ap_predicate_op173_call_state16 : BOOLEAN;
    signal ap_predicate_op174_call_state17 : BOOLEAN;
    signal ap_predicate_op175_call_state18 : BOOLEAN;
    signal ap_predicate_op176_call_state19 : BOOLEAN;
    signal ap_predicate_op177_call_state20 : BOOLEAN;
    signal ap_predicate_op178_call_state21 : BOOLEAN;
    signal ap_predicate_op179_call_state22 : BOOLEAN;
    signal ap_predicate_op180_call_state23 : BOOLEAN;
    signal ap_predicate_op181_call_state24 : BOOLEAN;
    signal ap_predicate_op182_call_state25 : BOOLEAN;
    signal ap_predicate_op183_call_state26 : BOOLEAN;
    signal ap_predicate_op184_call_state27 : BOOLEAN;
    signal ap_predicate_op185_call_state28 : BOOLEAN;
    signal ap_predicate_op186_call_state29 : BOOLEAN;
    signal ap_predicate_op187_call_state30 : BOOLEAN;
    signal ap_predicate_op188_call_state31 : BOOLEAN;
    signal ap_predicate_op189_call_state32 : BOOLEAN;
    signal ap_predicate_op190_call_state33 : BOOLEAN;
    signal ap_predicate_op191_call_state34 : BOOLEAN;
    signal ap_predicate_op192_call_state35 : BOOLEAN;
    signal ap_predicate_op193_call_state36 : BOOLEAN;
    signal ap_predicate_op194_call_state37 : BOOLEAN;
    signal ap_predicate_op195_call_state38 : BOOLEAN;
    signal ap_predicate_op196_call_state39 : BOOLEAN;
    signal ap_predicate_op197_call_state40 : BOOLEAN;
    signal ap_predicate_op198_call_state41 : BOOLEAN;
    signal ap_predicate_op199_call_state42 : BOOLEAN;
    signal ap_predicate_op200_call_state43 : BOOLEAN;
    signal ap_predicate_op201_call_state44 : BOOLEAN;
    signal ap_predicate_op202_call_state45 : BOOLEAN;
    signal ap_predicate_op203_call_state46 : BOOLEAN;
    signal ap_predicate_op204_call_state47 : BOOLEAN;
    signal ap_predicate_op205_call_state48 : BOOLEAN;
    signal ap_predicate_op206_call_state49 : BOOLEAN;
    signal ap_predicate_op207_call_state50 : BOOLEAN;
    signal ap_predicate_op208_call_state51 : BOOLEAN;
    signal ap_predicate_op209_call_state52 : BOOLEAN;
    signal ap_predicate_op210_call_state53 : BOOLEAN;
    signal ap_predicate_op211_call_state54 : BOOLEAN;
    signal ap_predicate_op212_call_state55 : BOOLEAN;
    signal ap_predicate_op213_call_state56 : BOOLEAN;
    signal ap_predicate_op214_call_state57 : BOOLEAN;
    signal ap_predicate_op215_call_state58 : BOOLEAN;
    signal ap_predicate_op216_call_state59 : BOOLEAN;
    signal ap_predicate_op217_call_state60 : BOOLEAN;
    signal ap_predicate_op218_call_state61 : BOOLEAN;
    signal ap_predicate_op219_call_state62 : BOOLEAN;
    signal ap_predicate_op220_call_state63 : BOOLEAN;
    signal ap_predicate_op221_call_state64 : BOOLEAN;
    signal ap_predicate_op222_call_state65 : BOOLEAN;
    signal ap_predicate_op223_call_state66 : BOOLEAN;
    signal ap_predicate_op224_call_state67 : BOOLEAN;
    signal ap_predicate_op225_call_state68 : BOOLEAN;
    signal ap_predicate_op226_call_state69 : BOOLEAN;
    signal ap_predicate_op227_call_state70 : BOOLEAN;
    signal ap_predicate_op228_call_state71 : BOOLEAN;
    signal ap_predicate_op229_call_state72 : BOOLEAN;
    signal ap_predicate_op230_call_state73 : BOOLEAN;
    signal ap_predicate_op231_call_state74 : BOOLEAN;
    signal ap_predicate_op232_call_state75 : BOOLEAN;
    signal ap_block_state13_pp0_stage10_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state77_pp0_stage10_iter1_ignore_call5 : BOOLEAN;
    signal ap_sig_ioackin_results_out_WREADY : STD_LOGIC;
    signal ap_predicate_op236_write_state77 : BOOLEAN;
    signal ap_block_state77_io : BOOLEAN;
    signal ap_block_pp0_stage10_flag00011001 : BOOLEAN;
    signal ap_block_state14_pp0_stage11_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state78_pp0_stage11_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage11_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state15_pp0_stage12_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state79_pp0_stage12_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage12_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state16_pp0_stage13_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state80_pp0_stage13_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage13_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state17_pp0_stage14_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state81_pp0_stage14_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage14_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state18_pp0_stage15_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state82_pp0_stage15_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage15_flag00011001 : BOOLEAN;
    signal ap_block_state19_pp0_stage16_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage16_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state20_pp0_stage17_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage17_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state21_pp0_stage18_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage18_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state22_pp0_stage19_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage19_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state23_pp0_stage20_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage20_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_state24_pp0_stage21_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage21_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_state25_pp0_stage22_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage22_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_state26_pp0_stage23_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage23_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_state27_pp0_stage24_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage24_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_state28_pp0_stage25_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage25_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_state29_pp0_stage26_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage26_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state30_pp0_stage27_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage27_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_state31_pp0_stage28_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage28_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_state32_pp0_stage29_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage29_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_state33_pp0_stage30_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage30_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_state34_pp0_stage31_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage31_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_state35_pp0_stage32_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage32_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage32 : signal is "none";
    signal ap_block_state36_pp0_stage33_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage33_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage33 : signal is "none";
    signal ap_block_state37_pp0_stage34_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage34_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_state38_pp0_stage35_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage35_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_state39_pp0_stage36_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage36_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage36 : signal is "none";
    signal ap_block_state40_pp0_stage37_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage37_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage37 : signal is "none";
    signal ap_block_state41_pp0_stage38_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage38_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_state42_pp0_stage39_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage39_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_state43_pp0_stage40_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage40_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage40 : signal is "none";
    signal ap_block_state44_pp0_stage41_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage41_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage41 : signal is "none";
    signal ap_block_state45_pp0_stage42_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage42_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage42 : signal is "none";
    signal ap_block_state46_pp0_stage43_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage43_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage43 : signal is "none";
    signal ap_block_state47_pp0_stage44_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage44_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage44 : signal is "none";
    signal ap_block_state48_pp0_stage45_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage45_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage45 : signal is "none";
    signal ap_block_state49_pp0_stage46_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage46_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage46 : signal is "none";
    signal ap_block_state50_pp0_stage47_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage47_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage47 : signal is "none";
    signal ap_block_state51_pp0_stage48_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage48_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage48 : signal is "none";
    signal ap_block_state52_pp0_stage49_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage49_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage49 : signal is "none";
    signal ap_block_state53_pp0_stage50_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage50_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage50 : signal is "none";
    signal ap_block_state54_pp0_stage51_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage51_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage51 : signal is "none";
    signal ap_block_state55_pp0_stage52_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage52_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage52 : signal is "none";
    signal ap_block_state56_pp0_stage53_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage53_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage53 : signal is "none";
    signal ap_block_state57_pp0_stage54_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage54_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage54 : signal is "none";
    signal ap_block_state58_pp0_stage55_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage55_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage55 : signal is "none";
    signal ap_block_state59_pp0_stage56_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage56_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage56 : signal is "none";
    signal ap_block_state60_pp0_stage57_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage57_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage57 : signal is "none";
    signal ap_block_state61_pp0_stage58_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage58_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage58 : signal is "none";
    signal ap_block_state62_pp0_stage59_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage59_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage59 : signal is "none";
    signal ap_block_state63_pp0_stage60_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage60_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage60 : signal is "none";
    signal ap_block_state64_pp0_stage61_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage61_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage61 : signal is "none";
    signal ap_block_state65_pp0_stage62_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage62_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage62 : signal is "none";
    signal ap_block_state66_pp0_stage63_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage63_flag00011001 : BOOLEAN;
    signal ap_block_state5_pp0_stage2_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state69_pp0_stage2_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage2_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state70_pp0_stage3_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage3_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state71_pp0_stage4_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage4_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state8_pp0_stage5_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state72_pp0_stage5_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage5_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state73_pp0_stage6_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage6_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state74_pp0_stage7_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage7_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal database_index_phi_fu_193_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal storemerge_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_reg_grp_match_db_contact_fu_212_ap_start : STD_LOGIC := '0';
    signal ap_predicate_op169_call_state12_state11 : BOOLEAN;
    signal ap_block_pp0_stage11_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage12_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage13_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage14_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage16_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage17_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage18_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage19_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage20_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage21_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage22_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage23_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage24_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage25_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage26_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage27_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage28_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage29_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage30_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage31_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage32_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage33_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage34_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage35_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage36_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage37_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage38_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage39_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage40_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage41_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage42_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage43_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage44_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage45_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage46_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage47_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage48_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage49_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage50_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage51_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage52_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage53_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage54_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage55_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage56_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage57_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage58_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage59_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage60_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage61_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage62_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage63_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage2_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage3_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage4_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage5_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage6_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage7_flag00000000 : BOOLEAN;
    signal tmp_4_fu_249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_cast_fu_306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_db_mem_V_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_flag00001001 : BOOLEAN;
    signal ap_reg_ioackin_results_out_AWREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage9_flag00001001 : BOOLEAN;
    signal ap_reg_ioackin_results_out_WREADY : STD_LOGIC := '0';
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state77_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_flag00001001 : BOOLEAN;
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal tmp_fu_234_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal database_index_cast1_fu_278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_cast_fu_286_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_block_state86 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (69 downto 0);
    signal ap_block_pp0_stage1_flag00011011 : BOOLEAN;
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state69_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_flag00011011 : BOOLEAN;
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state70_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_flag00011011 : BOOLEAN;
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state71_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_flag00011011 : BOOLEAN;
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state72_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_flag00011011 : BOOLEAN;
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state73_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_flag00011011 : BOOLEAN;
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state74_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage8_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage9_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage10_flag00011011 : BOOLEAN;
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state78_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_flag00011011 : BOOLEAN;
    signal ap_block_state15_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state79_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_pp0_stage12_flag00011011 : BOOLEAN;
    signal ap_block_state16_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state80_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_pp0_stage13_flag00011011 : BOOLEAN;
    signal ap_block_state17_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state81_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_pp0_stage14_flag00011011 : BOOLEAN;
    signal ap_block_state19_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_flag00011011 : BOOLEAN;
    signal ap_block_state20_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_flag00011011 : BOOLEAN;
    signal ap_block_state21_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_flag00011011 : BOOLEAN;
    signal ap_block_state22_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_flag00011011 : BOOLEAN;
    signal ap_block_state23_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_flag00011011 : BOOLEAN;
    signal ap_block_state24_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_flag00011011 : BOOLEAN;
    signal ap_block_state25_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_flag00011011 : BOOLEAN;
    signal ap_block_state26_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_flag00011011 : BOOLEAN;
    signal ap_block_state27_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_flag00011011 : BOOLEAN;
    signal ap_block_state28_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_flag00011011 : BOOLEAN;
    signal ap_block_state29_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_flag00011011 : BOOLEAN;
    signal ap_block_state30_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_flag00011011 : BOOLEAN;
    signal ap_block_state31_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_flag00011011 : BOOLEAN;
    signal ap_block_state32_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_flag00011011 : BOOLEAN;
    signal ap_block_state33_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_flag00011011 : BOOLEAN;
    signal ap_block_state34_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_flag00011011 : BOOLEAN;
    signal ap_block_state35_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_pp0_stage32_flag00011011 : BOOLEAN;
    signal ap_block_state36_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_pp0_stage33_flag00011011 : BOOLEAN;
    signal ap_block_state37_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_pp0_stage34_flag00011011 : BOOLEAN;
    signal ap_block_state38_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_pp0_stage35_flag00011011 : BOOLEAN;
    signal ap_block_state39_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_pp0_stage36_flag00011011 : BOOLEAN;
    signal ap_block_state40_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_pp0_stage37_flag00011011 : BOOLEAN;
    signal ap_block_state41_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_pp0_stage38_flag00011011 : BOOLEAN;
    signal ap_block_state42_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_pp0_stage39_flag00011011 : BOOLEAN;
    signal ap_block_state43_pp0_stage40_iter0 : BOOLEAN;
    signal ap_block_pp0_stage40_flag00011011 : BOOLEAN;
    signal ap_block_state44_pp0_stage41_iter0 : BOOLEAN;
    signal ap_block_pp0_stage41_flag00011011 : BOOLEAN;
    signal ap_block_state45_pp0_stage42_iter0 : BOOLEAN;
    signal ap_block_pp0_stage42_flag00011011 : BOOLEAN;
    signal ap_block_state46_pp0_stage43_iter0 : BOOLEAN;
    signal ap_block_pp0_stage43_flag00011011 : BOOLEAN;
    signal ap_block_state47_pp0_stage44_iter0 : BOOLEAN;
    signal ap_block_pp0_stage44_flag00011011 : BOOLEAN;
    signal ap_block_state48_pp0_stage45_iter0 : BOOLEAN;
    signal ap_block_pp0_stage45_flag00011011 : BOOLEAN;
    signal ap_block_state49_pp0_stage46_iter0 : BOOLEAN;
    signal ap_block_pp0_stage46_flag00011011 : BOOLEAN;
    signal ap_block_state50_pp0_stage47_iter0 : BOOLEAN;
    signal ap_block_pp0_stage47_flag00011011 : BOOLEAN;
    signal ap_block_state51_pp0_stage48_iter0 : BOOLEAN;
    signal ap_block_pp0_stage48_flag00011011 : BOOLEAN;
    signal ap_block_state52_pp0_stage49_iter0 : BOOLEAN;
    signal ap_block_pp0_stage49_flag00011011 : BOOLEAN;
    signal ap_block_state53_pp0_stage50_iter0 : BOOLEAN;
    signal ap_block_pp0_stage50_flag00011011 : BOOLEAN;
    signal ap_block_state54_pp0_stage51_iter0 : BOOLEAN;
    signal ap_block_pp0_stage51_flag00011011 : BOOLEAN;
    signal ap_block_state55_pp0_stage52_iter0 : BOOLEAN;
    signal ap_block_pp0_stage52_flag00011011 : BOOLEAN;
    signal ap_block_state56_pp0_stage53_iter0 : BOOLEAN;
    signal ap_block_pp0_stage53_flag00011011 : BOOLEAN;
    signal ap_block_state57_pp0_stage54_iter0 : BOOLEAN;
    signal ap_block_pp0_stage54_flag00011011 : BOOLEAN;
    signal ap_block_state58_pp0_stage55_iter0 : BOOLEAN;
    signal ap_block_pp0_stage55_flag00011011 : BOOLEAN;
    signal ap_block_state59_pp0_stage56_iter0 : BOOLEAN;
    signal ap_block_pp0_stage56_flag00011011 : BOOLEAN;
    signal ap_block_state60_pp0_stage57_iter0 : BOOLEAN;
    signal ap_block_pp0_stage57_flag00011011 : BOOLEAN;
    signal ap_block_state61_pp0_stage58_iter0 : BOOLEAN;
    signal ap_block_pp0_stage58_flag00011011 : BOOLEAN;
    signal ap_block_state62_pp0_stage59_iter0 : BOOLEAN;
    signal ap_block_pp0_stage59_flag00011011 : BOOLEAN;
    signal ap_block_state63_pp0_stage60_iter0 : BOOLEAN;
    signal ap_block_pp0_stage60_flag00011011 : BOOLEAN;
    signal ap_block_state64_pp0_stage61_iter0 : BOOLEAN;
    signal ap_block_pp0_stage61_flag00011011 : BOOLEAN;
    signal ap_block_state65_pp0_stage62_iter0 : BOOLEAN;
    signal ap_block_pp0_stage62_flag00011011 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_2628 : BOOLEAN;
    signal ap_condition_2632 : BOOLEAN;
    signal ap_condition_2636 : BOOLEAN;

    component match_db_contact IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        db_item_V : IN STD_LOGIC_VECTOR (511 downto 0);
        contacts_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        contacts_V_ce0 : OUT STD_LOGIC;
        contacts_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        contacts_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        contacts_V_ce1 : OUT STD_LOGIC;
        contacts_V_q1 : IN STD_LOGIC_VECTOR (511 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component contact_discoverybkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component contact_discovery_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        operation : OUT STD_LOGIC_VECTOR (31 downto 0);
        operation_ap_vld : OUT STD_LOGIC;
        contact_in_V : OUT STD_LOGIC_VECTOR (511 downto 0);
        offset : OUT STD_LOGIC_VECTOR (63 downto 0);
        db_size_in : OUT STD_LOGIC_VECTOR (31 downto 0);
        error_out : IN STD_LOGIC_VECTOR (31 downto 0);
        contacts_size_out : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component contact_discovery_db_mem_V_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component contact_discovery_results_out_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    contacts_V_U : component contact_discoverybkb
    generic map (
        DataWidth => 512,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => contacts_V_address0,
        ce0 => contacts_V_ce0,
        we0 => contacts_V_we0,
        d0 => contact_in_V_read_reg_325,
        q0 => contacts_V_q0,
        address1 => grp_match_db_contact_fu_212_contacts_V_address1,
        ce1 => contacts_V_ce1,
        q1 => contacts_V_q1);

    contact_discovery_AXILiteS_s_axi_U : component contact_discovery_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        operation => operation,
        operation_ap_vld => operation_ap_vld,
        contact_in_V => contact_in_V,
        offset => offset,
        db_size_in => db_size_in,
        error_out => error_out_1_data_reg,
        contacts_size_out => contacts_size_out_1_data_reg);

    contact_discovery_db_mem_V_m_axi_U : component contact_discovery_db_mem_V_m_axi
    generic map (
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_DB_MEM_V_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_DB_MEM_V_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_DB_MEM_V_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_DB_MEM_V_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_DB_MEM_V_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_DB_MEM_V_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_DB_MEM_V_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_DB_MEM_V_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_DB_MEM_V_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_DB_MEM_V_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_DB_MEM_V_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_DB_MEM_V_CACHE_VALUE)
    port map (
        AWVALID => m_axi_db_mem_V_AWVALID,
        AWREADY => m_axi_db_mem_V_AWREADY,
        AWADDR => m_axi_db_mem_V_AWADDR,
        AWID => m_axi_db_mem_V_AWID,
        AWLEN => m_axi_db_mem_V_AWLEN,
        AWSIZE => m_axi_db_mem_V_AWSIZE,
        AWBURST => m_axi_db_mem_V_AWBURST,
        AWLOCK => m_axi_db_mem_V_AWLOCK,
        AWCACHE => m_axi_db_mem_V_AWCACHE,
        AWPROT => m_axi_db_mem_V_AWPROT,
        AWQOS => m_axi_db_mem_V_AWQOS,
        AWREGION => m_axi_db_mem_V_AWREGION,
        AWUSER => m_axi_db_mem_V_AWUSER,
        WVALID => m_axi_db_mem_V_WVALID,
        WREADY => m_axi_db_mem_V_WREADY,
        WDATA => m_axi_db_mem_V_WDATA,
        WSTRB => m_axi_db_mem_V_WSTRB,
        WLAST => m_axi_db_mem_V_WLAST,
        WID => m_axi_db_mem_V_WID,
        WUSER => m_axi_db_mem_V_WUSER,
        ARVALID => m_axi_db_mem_V_ARVALID,
        ARREADY => m_axi_db_mem_V_ARREADY,
        ARADDR => m_axi_db_mem_V_ARADDR,
        ARID => m_axi_db_mem_V_ARID,
        ARLEN => m_axi_db_mem_V_ARLEN,
        ARSIZE => m_axi_db_mem_V_ARSIZE,
        ARBURST => m_axi_db_mem_V_ARBURST,
        ARLOCK => m_axi_db_mem_V_ARLOCK,
        ARCACHE => m_axi_db_mem_V_ARCACHE,
        ARPROT => m_axi_db_mem_V_ARPROT,
        ARQOS => m_axi_db_mem_V_ARQOS,
        ARREGION => m_axi_db_mem_V_ARREGION,
        ARUSER => m_axi_db_mem_V_ARUSER,
        RVALID => m_axi_db_mem_V_RVALID,
        RREADY => m_axi_db_mem_V_RREADY,
        RDATA => m_axi_db_mem_V_RDATA,
        RLAST => m_axi_db_mem_V_RLAST,
        RID => m_axi_db_mem_V_RID,
        RUSER => m_axi_db_mem_V_RUSER,
        RRESP => m_axi_db_mem_V_RRESP,
        BVALID => m_axi_db_mem_V_BVALID,
        BREADY => m_axi_db_mem_V_BREADY,
        BRESP => m_axi_db_mem_V_BRESP,
        BID => m_axi_db_mem_V_BID,
        BUSER => m_axi_db_mem_V_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => db_mem_V_ARVALID,
        I_ARREADY => db_mem_V_ARREADY,
        I_ARADDR => sum_cast_fu_306_p1,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => db_mem_V_RVALID,
        I_RREADY => db_mem_V_RREADY,
        I_RDATA => db_mem_V_RDATA,
        I_RID => db_mem_V_RID,
        I_RUSER => db_mem_V_RUSER,
        I_RRESP => db_mem_V_RRESP,
        I_RLAST => db_mem_V_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => db_mem_V_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => db_mem_V_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => db_mem_V_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => db_mem_V_BRESP,
        I_BID => db_mem_V_BID,
        I_BUSER => db_mem_V_BUSER);

    contact_discovery_results_out_m_axi_U : component contact_discovery_results_out_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_RESULTS_OUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_RESULTS_OUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_RESULTS_OUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_RESULTS_OUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_RESULTS_OUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_RESULTS_OUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_RESULTS_OUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_RESULTS_OUT_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_RESULTS_OUT_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_RESULTS_OUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_RESULTS_OUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_RESULTS_OUT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_results_out_AWVALID,
        AWREADY => m_axi_results_out_AWREADY,
        AWADDR => m_axi_results_out_AWADDR,
        AWID => m_axi_results_out_AWID,
        AWLEN => m_axi_results_out_AWLEN,
        AWSIZE => m_axi_results_out_AWSIZE,
        AWBURST => m_axi_results_out_AWBURST,
        AWLOCK => m_axi_results_out_AWLOCK,
        AWCACHE => m_axi_results_out_AWCACHE,
        AWPROT => m_axi_results_out_AWPROT,
        AWQOS => m_axi_results_out_AWQOS,
        AWREGION => m_axi_results_out_AWREGION,
        AWUSER => m_axi_results_out_AWUSER,
        WVALID => m_axi_results_out_WVALID,
        WREADY => m_axi_results_out_WREADY,
        WDATA => m_axi_results_out_WDATA,
        WSTRB => m_axi_results_out_WSTRB,
        WLAST => m_axi_results_out_WLAST,
        WID => m_axi_results_out_WID,
        WUSER => m_axi_results_out_WUSER,
        ARVALID => m_axi_results_out_ARVALID,
        ARREADY => m_axi_results_out_ARREADY,
        ARADDR => m_axi_results_out_ARADDR,
        ARID => m_axi_results_out_ARID,
        ARLEN => m_axi_results_out_ARLEN,
        ARSIZE => m_axi_results_out_ARSIZE,
        ARBURST => m_axi_results_out_ARBURST,
        ARLOCK => m_axi_results_out_ARLOCK,
        ARCACHE => m_axi_results_out_ARCACHE,
        ARPROT => m_axi_results_out_ARPROT,
        ARQOS => m_axi_results_out_ARQOS,
        ARREGION => m_axi_results_out_ARREGION,
        ARUSER => m_axi_results_out_ARUSER,
        RVALID => m_axi_results_out_RVALID,
        RREADY => m_axi_results_out_RREADY,
        RDATA => m_axi_results_out_RDATA,
        RLAST => m_axi_results_out_RLAST,
        RID => m_axi_results_out_RID,
        RUSER => m_axi_results_out_RUSER,
        RRESP => m_axi_results_out_RRESP,
        BVALID => m_axi_results_out_BVALID,
        BREADY => m_axi_results_out_BREADY,
        BRESP => m_axi_results_out_BRESP,
        BID => m_axi_results_out_BID,
        BUSER => m_axi_results_out_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => results_out_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => results_out_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => results_out_RDATA,
        I_RID => results_out_RID,
        I_RUSER => results_out_RUSER,
        I_RRESP => results_out_RRESP,
        I_RLAST => results_out_RLAST,
        I_AWVALID => results_out_AWVALID,
        I_AWREADY => results_out_AWREADY,
        I_AWADDR => ap_reg_pp0_iter1_results_out_addr_reg_374,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => results_out_WVALID,
        I_WREADY => results_out_WREADY,
        I_WDATA => results_out_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_1,
        I_BVALID => results_out_BVALID,
        I_BREADY => results_out_BREADY,
        I_BRESP => results_out_BRESP,
        I_BID => results_out_BID,
        I_BUSER => results_out_BUSER);

    grp_match_db_contact_fu_212 : component match_db_contact
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_match_db_contact_fu_212_ap_start,
        ap_done => grp_match_db_contact_fu_212_ap_done,
        ap_idle => grp_match_db_contact_fu_212_ap_idle,
        ap_ready => grp_match_db_contact_fu_212_ap_ready,
        ap_ce => grp_match_db_contact_fu_212_ap_ce,
        db_item_V => db_mem_V_addr_read_reg_385,
        contacts_V_address0 => grp_match_db_contact_fu_212_contacts_V_address0,
        contacts_V_ce0 => grp_match_db_contact_fu_212_contacts_V_ce0,
        contacts_V_q0 => contacts_V_q0,
        contacts_V_address1 => grp_match_db_contact_fu_212_contacts_V_address1,
        contacts_V_ce1 => grp_match_db_contact_fu_212_contacts_V_ce1,
        contacts_V_q1 => contacts_V_q1,
        ap_return => grp_match_db_contact_fu_212_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((operation_read_read_fu_130_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (((ap_block_pp0_stage63_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00011011 = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 xor ap_const_logic_1);
                elsif ((((ap_block_pp0_stage63_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00011011 = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((operation_read_read_fu_130_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_match_db_contact_fu_212_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_match_db_contact_fu_212_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op169_call_state12_state11))) then 
                    ap_reg_grp_match_db_contact_fu_212_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_match_db_contact_fu_212_ap_ready)) then 
                    ap_reg_grp_match_db_contact_fu_212_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_db_mem_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_db_mem_V_ARREADY <= ap_const_logic_0;
            else
                if ((ap_condition_2628 = ap_const_boolean_1)) then
                    if ((ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) then 
                        ap_reg_ioackin_db_mem_V_ARREADY <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = db_mem_V_ARREADY) and (ap_block_pp0_stage1_flag00001001 = ap_const_boolean_0))) then 
                        ap_reg_ioackin_db_mem_V_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_results_out_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_results_out_AWREADY <= ap_const_logic_0;
            else
                if ((ap_condition_2632 = ap_const_boolean_1)) then
                    if ((ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0)) then 
                        ap_reg_ioackin_results_out_AWREADY <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = results_out_AWREADY) and (ap_block_pp0_stage9_flag00001001 = ap_const_boolean_0))) then 
                        ap_reg_ioackin_results_out_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_results_out_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_results_out_WREADY <= ap_const_logic_0;
            else
                if ((ap_condition_2636 = ap_const_boolean_1)) then
                    if ((ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) then 
                        ap_reg_ioackin_results_out_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = results_out_WREADY) and (ap_block_pp0_stage10_flag00001001 = ap_const_boolean_0))) then 
                        ap_reg_ioackin_results_out_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    operation_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                operation_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state86) and not(((ap_const_logic_0 = error_out_1_ack_in) or (ap_const_logic_0 = contacts_size_out_1_ack_in))))) then 
                    operation_ap_vld_preg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = operation_ap_vld) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))))) then 
                    operation_ap_vld_preg <= operation_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    operation_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                operation_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = operation_ap_vld) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))))) then 
                    operation_preg <= operation;
                end if; 
            end if;
        end if;
    end process;


    contacts_size_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_0 = icmp_fu_243_p2))) then 
                contacts_size <= tmp_5_fu_253_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_2))) then 
                contacts_size <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    contacts_size_out_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    database_index_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
                database_index_reg_189 <= database_index_1_reg_360;
            elsif (((operation_read_read_fu_130_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                database_index_reg_189 <= ap_const_lv24_0;
            end if; 
        end if;
    end process;

    error_out_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    storemerge_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                storemerge_reg_200 <= contacts_size_load_reg_334;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_0 = icmp_fu_243_p2))) then 
                storemerge_reg_200 <= tmp_5_fu_253_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                    ap_reg_pp0_iter1_results_out_addr_reg_374(23 downto 0) <= results_out_addr_reg_374(23 downto 0);
                ap_reg_pp0_iter1_tmp_127_reg_356 <= tmp_127_reg_356;
                ap_reg_pp0_iter1_tmp_8_reg_365 <= tmp_8_reg_365;
                tmp_127_reg_356 <= database_index_phi_fu_193_p4(23 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))))) then
                contact_in_V_read_reg_325 <= contact_in_V;
                contacts_size_load_reg_334 <= contacts_size;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = contacts_size_out_1_vld_in) and (ap_const_logic_0 = contacts_size_out_1_vld_reg)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = contacts_size_out_1_vld_in) and (ap_const_logic_1 = contacts_size_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then
                contacts_size_out_1_data_reg <= contacts_size_out_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                database_index_1_reg_360 <= database_index_1_fu_272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_1 = ap_predicate_op168_read_state11) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0))) then
                db_mem_V_addr_read_reg_385 <= db_mem_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = error_out_1_vld_in) and (ap_const_logic_0 = error_out_1_vld_reg)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = error_out_1_vld_in) and (ap_const_logic_1 = error_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then
                error_out_1_data_reg <= error_out_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_127_fu_264_p3) and (ap_const_lv1_1 = tmp_8_fu_290_p2))) then
                    results_out_addr_reg_374(23 downto 0) <= tmp_7_fu_282_p1(23 downto 0);
                sum_reg_369 <= sum_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_1))) then
                tmp_126_reg_343 <= tmp_126_fu_230_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_127_fu_264_p3))) then
                tmp_8_reg_365 <= tmp_8_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0))) then
                tmp_s_reg_390 <= grp_match_db_contact_fu_212_ap_return;
            end if;
        end if;
    end process;
    results_out_addr_reg_374(63 downto 24) <= "0000000000000000000000000000000000000000";
    ap_reg_pp0_iter1_results_out_addr_reg_374(63 downto 24) <= "0000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, operation_ap_vld_in_sig, error_out_1_ack_in, contacts_size_out_1_ack_in, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, operation_read_read_fu_130_p2, ap_CS_fsm_state2, icmp_fu_243_p2, ap_block_pp0_stage0_flag00011011, ap_predicate_tran3to83_state3, ap_block_pp0_stage63_flag00011011, ap_block_pp0_stage15_flag00011011, ap_CS_fsm_state86, ap_block_pp0_stage1_flag00011011, ap_block_pp0_stage2_flag00011011, ap_block_pp0_stage3_flag00011011, ap_block_pp0_stage4_flag00011011, ap_block_pp0_stage5_flag00011011, ap_block_pp0_stage6_flag00011011, ap_block_pp0_stage7_flag00011011, ap_block_pp0_stage8_flag00011011, ap_block_pp0_stage9_flag00011011, ap_block_pp0_stage10_flag00011011, ap_block_pp0_stage11_flag00011011, ap_block_pp0_stage12_flag00011011, ap_block_pp0_stage13_flag00011011, ap_block_pp0_stage14_flag00011011, ap_block_pp0_stage16_flag00011011, ap_block_pp0_stage17_flag00011011, ap_block_pp0_stage18_flag00011011, ap_block_pp0_stage19_flag00011011, ap_block_pp0_stage20_flag00011011, ap_block_pp0_stage21_flag00011011, ap_block_pp0_stage22_flag00011011, ap_block_pp0_stage23_flag00011011, ap_block_pp0_stage24_flag00011011, ap_block_pp0_stage25_flag00011011, ap_block_pp0_stage26_flag00011011, ap_block_pp0_stage27_flag00011011, ap_block_pp0_stage28_flag00011011, ap_block_pp0_stage29_flag00011011, ap_block_pp0_stage30_flag00011011, ap_block_pp0_stage31_flag00011011, ap_block_pp0_stage32_flag00011011, ap_block_pp0_stage33_flag00011011, ap_block_pp0_stage34_flag00011011, ap_block_pp0_stage35_flag00011011, ap_block_pp0_stage36_flag00011011, ap_block_pp0_stage37_flag00011011, ap_block_pp0_stage38_flag00011011, ap_block_pp0_stage39_flag00011011, ap_block_pp0_stage40_flag00011011, ap_block_pp0_stage41_flag00011011, ap_block_pp0_stage42_flag00011011, ap_block_pp0_stage43_flag00011011, ap_block_pp0_stage44_flag00011011, ap_block_pp0_stage45_flag00011011, ap_block_pp0_stage46_flag00011011, ap_block_pp0_stage47_flag00011011, ap_block_pp0_stage48_flag00011011, ap_block_pp0_stage49_flag00011011, ap_block_pp0_stage50_flag00011011, ap_block_pp0_stage51_flag00011011, ap_block_pp0_stage52_flag00011011, ap_block_pp0_stage53_flag00011011, ap_block_pp0_stage54_flag00011011, ap_block_pp0_stage55_flag00011011, ap_block_pp0_stage56_flag00011011, ap_block_pp0_stage57_flag00011011, ap_block_pp0_stage58_flag00011011, ap_block_pp0_stage59_flag00011011, ap_block_pp0_stage60_flag00011011, ap_block_pp0_stage61_flag00011011, ap_block_pp0_stage62_flag00011011)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_0 = icmp_fu_243_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_1 = icmp_fu_243_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                elsif (((operation_read_read_fu_130_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_tran3to83_state3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_tran3to83_state3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_block_pp0_stage4_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_block_pp0_stage5_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_block_pp0_stage6_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_block_pp0_stage7_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_block_pp0_stage8_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_block_pp0_stage9_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_block_pp0_stage10_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_block_pp0_stage11_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_block_pp0_stage12_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_block_pp0_stage13_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_block_pp0_stage14_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if (((ap_block_pp0_stage15_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_block_pp0_stage16_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_block_pp0_stage17_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_block_pp0_stage18_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_block_pp0_stage19_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_block_pp0_stage20_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_block_pp0_stage21_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_block_pp0_stage22_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_block_pp0_stage23_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_block_pp0_stage24_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_block_pp0_stage25_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_block_pp0_stage26_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_block_pp0_stage27_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_block_pp0_stage28_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_block_pp0_stage29_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_block_pp0_stage30_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_block_pp0_stage31_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_block_pp0_stage32_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_block_pp0_stage33_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_block_pp0_stage34_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_block_pp0_stage35_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_block_pp0_stage36_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_block_pp0_stage37_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_block_pp0_stage38_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_block_pp0_stage39_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when ap_ST_fsm_pp0_stage40 => 
                if ((ap_block_pp0_stage40_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                end if;
            when ap_ST_fsm_pp0_stage41 => 
                if ((ap_block_pp0_stage41_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                end if;
            when ap_ST_fsm_pp0_stage42 => 
                if ((ap_block_pp0_stage42_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                end if;
            when ap_ST_fsm_pp0_stage43 => 
                if ((ap_block_pp0_stage43_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                end if;
            when ap_ST_fsm_pp0_stage44 => 
                if ((ap_block_pp0_stage44_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                end if;
            when ap_ST_fsm_pp0_stage45 => 
                if ((ap_block_pp0_stage45_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                end if;
            when ap_ST_fsm_pp0_stage46 => 
                if ((ap_block_pp0_stage46_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                end if;
            when ap_ST_fsm_pp0_stage47 => 
                if ((ap_block_pp0_stage47_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                end if;
            when ap_ST_fsm_pp0_stage48 => 
                if ((ap_block_pp0_stage48_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                end if;
            when ap_ST_fsm_pp0_stage49 => 
                if ((ap_block_pp0_stage49_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                end if;
            when ap_ST_fsm_pp0_stage50 => 
                if ((ap_block_pp0_stage50_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                end if;
            when ap_ST_fsm_pp0_stage51 => 
                if ((ap_block_pp0_stage51_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                end if;
            when ap_ST_fsm_pp0_stage52 => 
                if ((ap_block_pp0_stage52_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                end if;
            when ap_ST_fsm_pp0_stage53 => 
                if ((ap_block_pp0_stage53_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                end if;
            when ap_ST_fsm_pp0_stage54 => 
                if ((ap_block_pp0_stage54_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                end if;
            when ap_ST_fsm_pp0_stage55 => 
                if ((ap_block_pp0_stage55_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage56;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                end if;
            when ap_ST_fsm_pp0_stage56 => 
                if ((ap_block_pp0_stage56_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage57;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage56;
                end if;
            when ap_ST_fsm_pp0_stage57 => 
                if ((ap_block_pp0_stage57_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage58;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage57;
                end if;
            when ap_ST_fsm_pp0_stage58 => 
                if ((ap_block_pp0_stage58_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage59;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage58;
                end if;
            when ap_ST_fsm_pp0_stage59 => 
                if ((ap_block_pp0_stage59_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage60;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage59;
                end if;
            when ap_ST_fsm_pp0_stage60 => 
                if ((ap_block_pp0_stage60_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage61;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage60;
                end if;
            when ap_ST_fsm_pp0_stage61 => 
                if ((ap_block_pp0_stage61_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage62;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage61;
                end if;
            when ap_ST_fsm_pp0_stage62 => 
                if ((ap_block_pp0_stage62_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage63;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage62;
                end if;
            when ap_ST_fsm_pp0_stage63 => 
                if ((ap_block_pp0_stage63_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage63;
                end if;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state86) and not(((ap_const_logic_0 = error_out_1_ack_in) or (ap_const_logic_0 = contacts_size_out_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage32 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage33 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage36 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage37 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(40);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(41);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage40 <= ap_CS_fsm(42);
    ap_CS_fsm_pp0_stage41 <= ap_CS_fsm(43);
    ap_CS_fsm_pp0_stage42 <= ap_CS_fsm(44);
    ap_CS_fsm_pp0_stage43 <= ap_CS_fsm(45);
    ap_CS_fsm_pp0_stage44 <= ap_CS_fsm(46);
    ap_CS_fsm_pp0_stage45 <= ap_CS_fsm(47);
    ap_CS_fsm_pp0_stage46 <= ap_CS_fsm(48);
    ap_CS_fsm_pp0_stage47 <= ap_CS_fsm(49);
    ap_CS_fsm_pp0_stage48 <= ap_CS_fsm(50);
    ap_CS_fsm_pp0_stage49 <= ap_CS_fsm(51);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage50 <= ap_CS_fsm(52);
    ap_CS_fsm_pp0_stage51 <= ap_CS_fsm(53);
    ap_CS_fsm_pp0_stage52 <= ap_CS_fsm(54);
    ap_CS_fsm_pp0_stage53 <= ap_CS_fsm(55);
    ap_CS_fsm_pp0_stage54 <= ap_CS_fsm(56);
    ap_CS_fsm_pp0_stage55 <= ap_CS_fsm(57);
    ap_CS_fsm_pp0_stage56 <= ap_CS_fsm(58);
    ap_CS_fsm_pp0_stage57 <= ap_CS_fsm(59);
    ap_CS_fsm_pp0_stage58 <= ap_CS_fsm(60);
    ap_CS_fsm_pp0_stage59 <= ap_CS_fsm(61);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage60 <= ap_CS_fsm(62);
    ap_CS_fsm_pp0_stage61 <= ap_CS_fsm(63);
    ap_CS_fsm_pp0_stage62 <= ap_CS_fsm(64);
    ap_CS_fsm_pp0_stage63 <= ap_CS_fsm(65);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state84 <= ap_CS_fsm(67);
    ap_CS_fsm_state85 <= ap_CS_fsm(68);
    ap_CS_fsm_state86 <= ap_CS_fsm(69);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_flag00001001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state77_io)
    begin
                ap_block_pp0_stage10_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state77_io));
    end process;


    ap_block_pp0_stage10_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state77_io)
    begin
                ap_block_pp0_stage10_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state77_io));
    end process;

        ap_block_pp0_stage11_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter1, results_out_BVALID, ap_predicate_op241_writeresp_state82)
    begin
                ap_block_pp0_stage15_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = results_out_BVALID) and (ap_const_boolean_1 = ap_predicate_op241_writeresp_state82));
    end process;


    ap_block_pp0_stage15_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter1, results_out_BVALID, ap_predicate_op241_writeresp_state82)
    begin
                ap_block_pp0_stage15_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = results_out_BVALID) and (ap_const_boolean_1 = ap_predicate_op241_writeresp_state82));
    end process;

        ap_block_pp0_stage16_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_flag00001001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage1_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state4_io));
    end process;


    ap_block_pp0_stage1_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage1_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state4_io));
    end process;

        ap_block_pp0_stage20_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter0, db_mem_V_RVALID, ap_predicate_op168_read_state11)
    begin
                ap_block_pp0_stage8_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = db_mem_V_RVALID) and (ap_const_boolean_1 = ap_predicate_op168_read_state11));
    end process;


    ap_block_pp0_stage8_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter0, db_mem_V_RVALID, ap_predicate_op168_read_state11)
    begin
                ap_block_pp0_stage8_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = db_mem_V_RVALID) and (ap_const_boolean_1 = ap_predicate_op168_read_state11));
    end process;

        ap_block_pp0_stage9_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_flag00001001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state76_io)
    begin
                ap_block_pp0_stage9_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state76_io));
    end process;


    ap_block_pp0_stage9_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state76_io)
    begin
                ap_block_pp0_stage9_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state76_io));
    end process;


    ap_block_state1_assign_proc : process(ap_start, operation_ap_vld_in_sig)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig));
    end process;

        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage7_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage8_iter0_assign_proc : process(db_mem_V_RVALID, ap_predicate_op168_read_state11)
    begin
                ap_block_state11_pp0_stage8_iter0 <= ((ap_const_logic_0 = db_mem_V_RVALID) and (ap_const_boolean_1 = ap_predicate_op168_read_state11));
    end process;

        ap_block_state12_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage12_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage13_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage14_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage15_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage16_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage17_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage18_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage19_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage20_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage21_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage22_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage23_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage24_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage25_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage25_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage26_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage27_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage28_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage29_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage30_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage31_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage32_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage33_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage33_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage34_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage35_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage36_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage37_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage38_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage39_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage40_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage40_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage41_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage41_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage42_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage42_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage43_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage43_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage44_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage44_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage45_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage45_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage46_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage46_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(ap_sig_ioackin_db_mem_V_ARREADY, ap_predicate_op161_readreq_state4)
    begin
                ap_block_state4_io <= ((ap_const_logic_0 = ap_sig_ioackin_db_mem_V_ARREADY) and (ap_const_boolean_1 = ap_predicate_op161_readreq_state4));
    end process;

        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage47_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage47_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage48_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage48_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage49_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage49_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage50_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage50_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage51_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage51_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage52_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage52_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage53_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage53_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage54_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage54_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage55_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage55_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage56_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage56_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage57_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage57_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage58_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage58_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage59_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage59_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage60_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage60_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage61_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage61_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage62_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage62_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage63_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage63_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage2_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage3_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage4_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage5_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage6_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage7_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state76_io_assign_proc : process(ap_sig_ioackin_results_out_AWREADY, ap_predicate_op234_writereq_state76)
    begin
                ap_block_state76_io <= ((ap_const_logic_0 = ap_sig_ioackin_results_out_AWREADY) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76));
    end process;

        ap_block_state76_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state77_io_assign_proc : process(ap_sig_ioackin_results_out_WREADY, ap_predicate_op236_write_state77)
    begin
                ap_block_state77_io <= ((ap_const_logic_0 = ap_sig_ioackin_results_out_WREADY) and (ap_const_boolean_1 = ap_predicate_op236_write_state77));
    end process;

        ap_block_state77_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage10_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage11_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage12_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage13_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage14_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state82_pp0_stage15_iter1_assign_proc : process(results_out_BVALID, ap_predicate_op241_writeresp_state82)
    begin
                ap_block_state82_pp0_stage15_iter1 <= ((ap_const_logic_0 = results_out_BVALID) and (ap_const_boolean_1 = ap_predicate_op241_writeresp_state82));
    end process;


    ap_block_state82_pp0_stage15_iter1_ignore_call5_assign_proc : process(results_out_BVALID, ap_predicate_op241_writeresp_state82)
    begin
                ap_block_state82_pp0_stage15_iter1_ignore_call5 <= ((ap_const_logic_0 = results_out_BVALID) and (ap_const_boolean_1 = ap_predicate_op241_writeresp_state82));
    end process;


    ap_block_state86_assign_proc : process(error_out_1_ack_in, contacts_size_out_1_ack_in)
    begin
                ap_block_state86 <= ((ap_const_logic_0 = error_out_1_ack_in) or (ap_const_logic_0 = contacts_size_out_1_ack_in));
    end process;

        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2628_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op161_readreq_state4)
    begin
                ap_condition_2628 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op161_readreq_state4));
    end process;


    ap_condition_2632_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_predicate_op234_writereq_state76)
    begin
                ap_condition_2632 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76));
    end process;


    ap_condition_2636_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_predicate_op236_write_state77)
    begin
                ap_condition_2636 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_1 = ap_predicate_op236_write_state77));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(ap_predicate_tran3to83_state3)
    begin
        if ((ap_const_boolean_1 = ap_predicate_tran3to83_state3)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(error_out_1_ack_in, contacts_size_out_1_ack_in, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) and not(((ap_const_logic_0 = error_out_1_ack_in) or (ap_const_logic_0 = contacts_size_out_1_ack_in))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op161_readreq_state4_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op161_readreq_state4 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op168_read_state11_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op168_read_state11 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op169_call_state12_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op169_call_state12 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op169_call_state12_state11_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op169_call_state12_state11 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op170_call_state13_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op170_call_state13 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op171_call_state14_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op171_call_state14 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op172_call_state15_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op172_call_state15 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op173_call_state16_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op173_call_state16 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op174_call_state17_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op174_call_state17 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op175_call_state18_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op175_call_state18 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op176_call_state19_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op176_call_state19 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op177_call_state20_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op177_call_state20 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op178_call_state21_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op178_call_state21 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op179_call_state22_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op179_call_state22 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op180_call_state23_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op180_call_state23 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op181_call_state24_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op181_call_state24 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op182_call_state25_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op182_call_state25 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op183_call_state26_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op183_call_state26 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op184_call_state27_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op184_call_state27 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op185_call_state28_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op185_call_state28 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op186_call_state29_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op186_call_state29 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op187_call_state30_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op187_call_state30 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op188_call_state31_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op188_call_state31 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op189_call_state32_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op189_call_state32 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op190_call_state33_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op190_call_state33 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op191_call_state34_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op191_call_state34 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op192_call_state35_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op192_call_state35 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op193_call_state36_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op193_call_state36 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op194_call_state37_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op194_call_state37 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op195_call_state38_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op195_call_state38 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op196_call_state39_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op196_call_state39 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op197_call_state40_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op197_call_state40 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op198_call_state41_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op198_call_state41 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op199_call_state42_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op199_call_state42 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op200_call_state43_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op200_call_state43 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op201_call_state44_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op201_call_state44 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op202_call_state45_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op202_call_state45 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op203_call_state46_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op203_call_state46 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op204_call_state47_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op204_call_state47 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op205_call_state48_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op205_call_state48 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op206_call_state49_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op206_call_state49 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op207_call_state50_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op207_call_state50 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op208_call_state51_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op208_call_state51 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op209_call_state52_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op209_call_state52 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op210_call_state53_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op210_call_state53 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op211_call_state54_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op211_call_state54 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op212_call_state55_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op212_call_state55 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op213_call_state56_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op213_call_state56 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op214_call_state57_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op214_call_state57 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op215_call_state58_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op215_call_state58 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op216_call_state59_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op216_call_state59 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op217_call_state60_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op217_call_state60 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op218_call_state61_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op218_call_state61 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op219_call_state62_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op219_call_state62 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op220_call_state63_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op220_call_state63 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op221_call_state64_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op221_call_state64 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op222_call_state65_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op222_call_state65 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op223_call_state66_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op223_call_state66 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op224_call_state67_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365)
    begin
                ap_predicate_op224_call_state67 <= ((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1));
    end process;


    ap_predicate_op225_call_state68_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op225_call_state68 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op226_call_state69_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op226_call_state69 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op227_call_state70_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op227_call_state70 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op228_call_state71_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op228_call_state71 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op229_call_state72_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op229_call_state72 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op230_call_state73_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op230_call_state73 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op231_call_state74_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op231_call_state74 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op232_call_state75_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op232_call_state75 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op234_writereq_state76_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op234_writereq_state76 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op236_write_state77_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op236_write_state77 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_op241_writeresp_state82_assign_proc : process(ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
                ap_predicate_op241_writeresp_state82 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365));
    end process;


    ap_predicate_tran3to83_state3_assign_proc : process(tmp_127_fu_264_p3, tmp_8_fu_290_p2)
    begin
                ap_predicate_tran3to83_state3 <= ((ap_const_lv1_1 = tmp_127_fu_264_p3) or ((ap_const_lv1_0 = tmp_127_fu_264_p3) and (ap_const_lv1_0 = tmp_8_fu_290_p2)));
    end process;


    ap_ready_assign_proc : process(error_out_1_ack_in, contacts_size_out_1_ack_in, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) and not(((ap_const_logic_0 = error_out_1_ack_in) or (ap_const_logic_0 = contacts_size_out_1_ack_in))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_db_mem_V_ARREADY_assign_proc : process(db_mem_V_ARREADY, ap_reg_ioackin_db_mem_V_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_db_mem_V_ARREADY)) then 
            ap_sig_ioackin_db_mem_V_ARREADY <= db_mem_V_ARREADY;
        else 
            ap_sig_ioackin_db_mem_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_results_out_AWREADY_assign_proc : process(results_out_AWREADY, ap_reg_ioackin_results_out_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_results_out_AWREADY)) then 
            ap_sig_ioackin_results_out_AWREADY <= results_out_AWREADY;
        else 
            ap_sig_ioackin_results_out_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_results_out_WREADY_assign_proc : process(results_out_WREADY, ap_reg_ioackin_results_out_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_results_out_WREADY)) then 
            ap_sig_ioackin_results_out_WREADY <= results_out_WREADY;
        else 
            ap_sig_ioackin_results_out_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    contacts_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_flag00000000, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_flag00000000, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_block_pp0_stage9_flag00000000, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_flag00000000, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_flag00000000, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_predicate_op234_writereq_state76, ap_CS_fsm_pp0_stage63, grp_match_db_contact_fu_212_contacts_V_address0, ap_predicate_op169_call_state12, ap_predicate_op170_call_state13, ap_predicate_op171_call_state14, ap_predicate_op172_call_state15, ap_predicate_op173_call_state16, ap_predicate_op174_call_state17, ap_predicate_op175_call_state18, ap_predicate_op176_call_state19, ap_predicate_op177_call_state20, ap_predicate_op178_call_state21, ap_predicate_op179_call_state22, ap_predicate_op180_call_state23, ap_predicate_op181_call_state24, ap_predicate_op182_call_state25, ap_predicate_op183_call_state26, ap_predicate_op184_call_state27, ap_predicate_op185_call_state28, ap_predicate_op186_call_state29, ap_predicate_op187_call_state30, ap_predicate_op188_call_state31, ap_predicate_op189_call_state32, ap_predicate_op190_call_state33, ap_predicate_op191_call_state34, ap_predicate_op192_call_state35, ap_predicate_op193_call_state36, ap_predicate_op194_call_state37, ap_predicate_op195_call_state38, ap_predicate_op196_call_state39, ap_predicate_op197_call_state40, ap_predicate_op198_call_state41, ap_predicate_op199_call_state42, ap_predicate_op200_call_state43, ap_predicate_op201_call_state44, ap_predicate_op202_call_state45, ap_predicate_op203_call_state46, ap_predicate_op204_call_state47, ap_predicate_op205_call_state48, ap_predicate_op206_call_state49, ap_predicate_op207_call_state50, ap_predicate_op208_call_state51, ap_predicate_op209_call_state52, ap_predicate_op210_call_state53, ap_predicate_op211_call_state54, ap_predicate_op212_call_state55, ap_predicate_op213_call_state56, ap_predicate_op214_call_state57, ap_predicate_op215_call_state58, ap_predicate_op216_call_state59, ap_predicate_op217_call_state60, ap_predicate_op218_call_state61, ap_predicate_op219_call_state62, ap_predicate_op220_call_state63, ap_predicate_op221_call_state64, ap_predicate_op222_call_state65, ap_predicate_op223_call_state66, ap_predicate_op224_call_state67, ap_predicate_op225_call_state68, ap_predicate_op226_call_state69, ap_predicate_op227_call_state70, ap_predicate_op228_call_state71, ap_predicate_op229_call_state72, ap_predicate_op230_call_state73, ap_predicate_op231_call_state74, ap_predicate_op232_call_state75, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage40, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage42, ap_CS_fsm_pp0_stage43, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage46, ap_CS_fsm_pp0_stage47, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage49, ap_CS_fsm_pp0_stage50, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage52, ap_CS_fsm_pp0_stage53, ap_CS_fsm_pp0_stage54, ap_CS_fsm_pp0_stage55, ap_CS_fsm_pp0_stage56, ap_CS_fsm_pp0_stage57, ap_CS_fsm_pp0_stage58, ap_CS_fsm_pp0_stage59, ap_CS_fsm_pp0_stage60, ap_CS_fsm_pp0_stage61, ap_CS_fsm_pp0_stage62, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0_flag00000000, ap_block_pp0_stage11_flag00000000, ap_block_pp0_stage12_flag00000000, ap_block_pp0_stage13_flag00000000, ap_block_pp0_stage14_flag00000000, ap_block_pp0_stage16_flag00000000, ap_block_pp0_stage17_flag00000000, ap_block_pp0_stage18_flag00000000, ap_block_pp0_stage19_flag00000000, ap_block_pp0_stage20_flag00000000, ap_block_pp0_stage21_flag00000000, ap_block_pp0_stage22_flag00000000, ap_block_pp0_stage23_flag00000000, ap_block_pp0_stage24_flag00000000, ap_block_pp0_stage25_flag00000000, ap_block_pp0_stage26_flag00000000, ap_block_pp0_stage27_flag00000000, ap_block_pp0_stage28_flag00000000, ap_block_pp0_stage29_flag00000000, ap_block_pp0_stage30_flag00000000, ap_block_pp0_stage31_flag00000000, ap_block_pp0_stage32_flag00000000, ap_block_pp0_stage33_flag00000000, ap_block_pp0_stage34_flag00000000, ap_block_pp0_stage35_flag00000000, ap_block_pp0_stage36_flag00000000, ap_block_pp0_stage37_flag00000000, ap_block_pp0_stage38_flag00000000, ap_block_pp0_stage39_flag00000000, ap_block_pp0_stage40_flag00000000, ap_block_pp0_stage41_flag00000000, ap_block_pp0_stage42_flag00000000, ap_block_pp0_stage43_flag00000000, ap_block_pp0_stage44_flag00000000, ap_block_pp0_stage45_flag00000000, ap_block_pp0_stage46_flag00000000, ap_block_pp0_stage47_flag00000000, ap_block_pp0_stage48_flag00000000, ap_block_pp0_stage49_flag00000000, ap_block_pp0_stage50_flag00000000, ap_block_pp0_stage51_flag00000000, ap_block_pp0_stage52_flag00000000, ap_block_pp0_stage53_flag00000000, ap_block_pp0_stage54_flag00000000, ap_block_pp0_stage55_flag00000000, ap_block_pp0_stage56_flag00000000, ap_block_pp0_stage57_flag00000000, ap_block_pp0_stage58_flag00000000, ap_block_pp0_stage59_flag00000000, ap_block_pp0_stage60_flag00000000, ap_block_pp0_stage61_flag00000000, ap_block_pp0_stage62_flag00000000, ap_block_pp0_stage63_flag00000000, ap_block_pp0_stage2_flag00000000, ap_block_pp0_stage3_flag00000000, ap_block_pp0_stage4_flag00000000, ap_block_pp0_stage5_flag00000000, ap_block_pp0_stage6_flag00000000, ap_block_pp0_stage7_flag00000000, tmp_4_fu_249_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            contacts_V_address0 <= tmp_4_fu_249_p1(7 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00000000 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op169_call_state12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00000000 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op170_call_state13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op171_call_state14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op172_call_state15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op173_call_state16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op174_call_state17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00000000 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op175_call_state18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op176_call_state19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op177_call_state20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op178_call_state21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op179_call_state22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op180_call_state23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op181_call_state24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op182_call_state25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op183_call_state26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op184_call_state27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op185_call_state28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op186_call_state29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op187_call_state30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op188_call_state31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op189_call_state32) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op190_call_state33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op191_call_state34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op192_call_state35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op193_call_state36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op194_call_state37) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op195_call_state38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op196_call_state39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op197_call_state40) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op198_call_state41) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op199_call_state42) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op200_call_state43) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op201_call_state44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op202_call_state45) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op203_call_state46) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op204_call_state47) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op205_call_state48) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op206_call_state49) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op207_call_state50) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op208_call_state51) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op209_call_state52) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op210_call_state53) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op211_call_state54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op212_call_state55) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op213_call_state56) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op214_call_state57) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op215_call_state58) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op216_call_state59) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op217_call_state60) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op218_call_state61) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op219_call_state62) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op220_call_state63) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op221_call_state64) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op222_call_state65) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_const_boolean_1 = ap_predicate_op223_call_state66) and (ap_block_pp0_stage63_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_1 = ap_predicate_op224_call_state67) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op225_call_state68)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op226_call_state69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op227_call_state70) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op228_call_state71) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op229_call_state72) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op230_call_state73) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op231_call_state74) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op232_call_state75)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage9_flag00000000 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76)))) then 
            contacts_V_address0 <= grp_match_db_contact_fu_212_contacts_V_address0;
        else 
            contacts_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    contacts_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage8_flag00011001, ap_predicate_op234_writereq_state76, ap_block_pp0_stage9_flag00011001, ap_CS_fsm_pp0_stage63, grp_match_db_contact_fu_212_contacts_V_ce0, ap_predicate_op169_call_state12, ap_predicate_op170_call_state13, ap_predicate_op171_call_state14, ap_predicate_op172_call_state15, ap_predicate_op173_call_state16, ap_predicate_op174_call_state17, ap_predicate_op175_call_state18, ap_predicate_op176_call_state19, ap_predicate_op177_call_state20, ap_predicate_op178_call_state21, ap_predicate_op179_call_state22, ap_predicate_op180_call_state23, ap_predicate_op181_call_state24, ap_predicate_op182_call_state25, ap_predicate_op183_call_state26, ap_predicate_op184_call_state27, ap_predicate_op185_call_state28, ap_predicate_op186_call_state29, ap_predicate_op187_call_state30, ap_predicate_op188_call_state31, ap_predicate_op189_call_state32, ap_predicate_op190_call_state33, ap_predicate_op191_call_state34, ap_predicate_op192_call_state35, ap_predicate_op193_call_state36, ap_predicate_op194_call_state37, ap_predicate_op195_call_state38, ap_predicate_op196_call_state39, ap_predicate_op197_call_state40, ap_predicate_op198_call_state41, ap_predicate_op199_call_state42, ap_predicate_op200_call_state43, ap_predicate_op201_call_state44, ap_predicate_op202_call_state45, ap_predicate_op203_call_state46, ap_predicate_op204_call_state47, ap_predicate_op205_call_state48, ap_predicate_op206_call_state49, ap_predicate_op207_call_state50, ap_predicate_op208_call_state51, ap_predicate_op209_call_state52, ap_predicate_op210_call_state53, ap_predicate_op211_call_state54, ap_predicate_op212_call_state55, ap_predicate_op213_call_state56, ap_predicate_op214_call_state57, ap_predicate_op215_call_state58, ap_predicate_op216_call_state59, ap_predicate_op217_call_state60, ap_predicate_op218_call_state61, ap_predicate_op219_call_state62, ap_predicate_op220_call_state63, ap_predicate_op221_call_state64, ap_predicate_op222_call_state65, ap_predicate_op223_call_state66, ap_predicate_op224_call_state67, ap_predicate_op225_call_state68, ap_predicate_op226_call_state69, ap_predicate_op227_call_state70, ap_predicate_op228_call_state71, ap_predicate_op229_call_state72, ap_predicate_op230_call_state73, ap_predicate_op231_call_state74, ap_predicate_op232_call_state75, ap_block_pp0_stage10_flag00011001, ap_block_pp0_stage11_flag00011001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage12_flag00011001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage13_flag00011001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage14_flag00011001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage15_flag00011001, ap_block_pp0_stage16_flag00011001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage17_flag00011001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage18_flag00011001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage19_flag00011001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage20_flag00011001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage21_flag00011001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage22_flag00011001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage23_flag00011001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage24_flag00011001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage25_flag00011001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage26_flag00011001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage27_flag00011001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage28_flag00011001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage29_flag00011001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage30_flag00011001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage31_flag00011001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage32_flag00011001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage33_flag00011001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage34_flag00011001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage35_flag00011001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage36_flag00011001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage37_flag00011001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage38_flag00011001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage39_flag00011001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage40_flag00011001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage41_flag00011001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage42_flag00011001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage43_flag00011001, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage44_flag00011001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage45_flag00011001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage46_flag00011001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage47_flag00011001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage48_flag00011001, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage49_flag00011001, ap_CS_fsm_pp0_stage49, ap_block_pp0_stage50_flag00011001, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage51_flag00011001, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage52_flag00011001, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage53_flag00011001, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage54_flag00011001, ap_CS_fsm_pp0_stage54, ap_block_pp0_stage55_flag00011001, ap_CS_fsm_pp0_stage55, ap_block_pp0_stage56_flag00011001, ap_CS_fsm_pp0_stage56, ap_block_pp0_stage57_flag00011001, ap_CS_fsm_pp0_stage57, ap_block_pp0_stage58_flag00011001, ap_CS_fsm_pp0_stage58, ap_block_pp0_stage59_flag00011001, ap_CS_fsm_pp0_stage59, ap_block_pp0_stage60_flag00011001, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage61_flag00011001, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage62_flag00011001, ap_CS_fsm_pp0_stage62, ap_block_pp0_stage63_flag00011001, ap_block_pp0_stage2_flag00011001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage3_flag00011001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage4_flag00011001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage5_flag00011001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage6_flag00011001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_flag00011001, ap_CS_fsm_pp0_stage7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            contacts_V_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op169_call_state12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_1 = ap_predicate_op170_call_state13) and (ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op171_call_state14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op172_call_state15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op173_call_state16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op174_call_state17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_1 = ap_predicate_op175_call_state18) and (ap_block_pp0_stage15_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op176_call_state19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op177_call_state20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op178_call_state21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op179_call_state22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op180_call_state23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op181_call_state24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op182_call_state25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op183_call_state26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op184_call_state27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op185_call_state28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op186_call_state29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op187_call_state30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op188_call_state31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op189_call_state32) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op190_call_state33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op191_call_state34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op192_call_state35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op193_call_state36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op194_call_state37) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op195_call_state38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op196_call_state39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op197_call_state40) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op198_call_state41) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op199_call_state42) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op200_call_state43) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op201_call_state44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op202_call_state45) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op203_call_state46) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op204_call_state47) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op205_call_state48) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op206_call_state49) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op207_call_state50) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op208_call_state51) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op209_call_state52) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op210_call_state53) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op211_call_state54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op212_call_state55) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op213_call_state56) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op214_call_state57) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op215_call_state58) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op216_call_state59) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op217_call_state60) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op218_call_state61) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op219_call_state62) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op220_call_state63) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op221_call_state64) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op222_call_state65) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_const_boolean_1 = ap_predicate_op223_call_state66) and (ap_block_pp0_stage63_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op224_call_state67)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op225_call_state68)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op226_call_state69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op227_call_state70) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op228_call_state71) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op229_call_state72) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op230_call_state73) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op231_call_state74) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op232_call_state75)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0)))) then 
            contacts_V_ce0 <= grp_match_db_contact_fu_212_contacts_V_ce0;
        else 
            contacts_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    contacts_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage8_flag00011001, ap_predicate_op234_writereq_state76, ap_block_pp0_stage9_flag00011001, ap_CS_fsm_pp0_stage63, grp_match_db_contact_fu_212_contacts_V_ce1, ap_predicate_op169_call_state12, ap_predicate_op170_call_state13, ap_predicate_op171_call_state14, ap_predicate_op172_call_state15, ap_predicate_op173_call_state16, ap_predicate_op174_call_state17, ap_predicate_op175_call_state18, ap_predicate_op176_call_state19, ap_predicate_op177_call_state20, ap_predicate_op178_call_state21, ap_predicate_op179_call_state22, ap_predicate_op180_call_state23, ap_predicate_op181_call_state24, ap_predicate_op182_call_state25, ap_predicate_op183_call_state26, ap_predicate_op184_call_state27, ap_predicate_op185_call_state28, ap_predicate_op186_call_state29, ap_predicate_op187_call_state30, ap_predicate_op188_call_state31, ap_predicate_op189_call_state32, ap_predicate_op190_call_state33, ap_predicate_op191_call_state34, ap_predicate_op192_call_state35, ap_predicate_op193_call_state36, ap_predicate_op194_call_state37, ap_predicate_op195_call_state38, ap_predicate_op196_call_state39, ap_predicate_op197_call_state40, ap_predicate_op198_call_state41, ap_predicate_op199_call_state42, ap_predicate_op200_call_state43, ap_predicate_op201_call_state44, ap_predicate_op202_call_state45, ap_predicate_op203_call_state46, ap_predicate_op204_call_state47, ap_predicate_op205_call_state48, ap_predicate_op206_call_state49, ap_predicate_op207_call_state50, ap_predicate_op208_call_state51, ap_predicate_op209_call_state52, ap_predicate_op210_call_state53, ap_predicate_op211_call_state54, ap_predicate_op212_call_state55, ap_predicate_op213_call_state56, ap_predicate_op214_call_state57, ap_predicate_op215_call_state58, ap_predicate_op216_call_state59, ap_predicate_op217_call_state60, ap_predicate_op218_call_state61, ap_predicate_op219_call_state62, ap_predicate_op220_call_state63, ap_predicate_op221_call_state64, ap_predicate_op222_call_state65, ap_predicate_op223_call_state66, ap_predicate_op224_call_state67, ap_predicate_op225_call_state68, ap_predicate_op226_call_state69, ap_predicate_op227_call_state70, ap_predicate_op228_call_state71, ap_predicate_op229_call_state72, ap_predicate_op230_call_state73, ap_predicate_op231_call_state74, ap_predicate_op232_call_state75, ap_block_pp0_stage10_flag00011001, ap_block_pp0_stage11_flag00011001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage12_flag00011001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage13_flag00011001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage14_flag00011001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage15_flag00011001, ap_block_pp0_stage16_flag00011001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage17_flag00011001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage18_flag00011001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage19_flag00011001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage20_flag00011001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage21_flag00011001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage22_flag00011001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage23_flag00011001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage24_flag00011001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage25_flag00011001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage26_flag00011001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage27_flag00011001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage28_flag00011001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage29_flag00011001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage30_flag00011001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage31_flag00011001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage32_flag00011001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage33_flag00011001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage34_flag00011001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage35_flag00011001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage36_flag00011001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage37_flag00011001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage38_flag00011001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage39_flag00011001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage40_flag00011001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage41_flag00011001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage42_flag00011001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage43_flag00011001, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage44_flag00011001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage45_flag00011001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage46_flag00011001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage47_flag00011001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage48_flag00011001, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage49_flag00011001, ap_CS_fsm_pp0_stage49, ap_block_pp0_stage50_flag00011001, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage51_flag00011001, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage52_flag00011001, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage53_flag00011001, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage54_flag00011001, ap_CS_fsm_pp0_stage54, ap_block_pp0_stage55_flag00011001, ap_CS_fsm_pp0_stage55, ap_block_pp0_stage56_flag00011001, ap_CS_fsm_pp0_stage56, ap_block_pp0_stage57_flag00011001, ap_CS_fsm_pp0_stage57, ap_block_pp0_stage58_flag00011001, ap_CS_fsm_pp0_stage58, ap_block_pp0_stage59_flag00011001, ap_CS_fsm_pp0_stage59, ap_block_pp0_stage60_flag00011001, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage61_flag00011001, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage62_flag00011001, ap_CS_fsm_pp0_stage62, ap_block_pp0_stage63_flag00011001, ap_block_pp0_stage2_flag00011001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage3_flag00011001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage4_flag00011001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage5_flag00011001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage6_flag00011001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_flag00011001, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op169_call_state12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_1 = ap_predicate_op170_call_state13) and (ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op171_call_state14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op172_call_state15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op173_call_state16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op174_call_state17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_1 = ap_predicate_op175_call_state18) and (ap_block_pp0_stage15_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op176_call_state19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op177_call_state20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op178_call_state21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op179_call_state22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op180_call_state23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op181_call_state24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op182_call_state25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op183_call_state26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op184_call_state27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op185_call_state28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op186_call_state29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op187_call_state30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op188_call_state31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op189_call_state32) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op190_call_state33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op191_call_state34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op192_call_state35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op193_call_state36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op194_call_state37) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op195_call_state38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op196_call_state39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op197_call_state40) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op198_call_state41) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op199_call_state42) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op200_call_state43) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op201_call_state44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op202_call_state45) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op203_call_state46) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op204_call_state47) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op205_call_state48) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op206_call_state49) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op207_call_state50) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op208_call_state51) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op209_call_state52) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op210_call_state53) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op211_call_state54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op212_call_state55) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op213_call_state56) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op214_call_state57) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op215_call_state58) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op216_call_state59) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op217_call_state60) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op218_call_state61) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op219_call_state62) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op220_call_state63) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op221_call_state64) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op222_call_state65) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_const_boolean_1 = ap_predicate_op223_call_state66) and (ap_block_pp0_stage63_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op224_call_state67)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op225_call_state68)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op226_call_state69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op227_call_state70) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op228_call_state71) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op229_call_state72) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op230_call_state73) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op231_call_state74) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0) and (ap_const_boolean_1 = ap_predicate_op232_call_state75)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0)))) then 
            contacts_V_ce1 <= grp_match_db_contact_fu_212_contacts_V_ce1;
        else 
            contacts_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    contacts_V_we0_assign_proc : process(operation_read_read_fu_130_p2, ap_CS_fsm_state2, icmp_fu_243_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_0 = icmp_fu_243_p2))) then 
            contacts_V_we0 <= ap_const_logic_1;
        else 
            contacts_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    contacts_size_out_1_ack_in_assign_proc : process(contacts_size_out_1_vld_reg)
    begin
        if (((ap_const_logic_0 = contacts_size_out_1_vld_reg) or ((ap_const_logic_1 = contacts_size_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            contacts_size_out_1_ack_in <= ap_const_logic_1;
        else 
            contacts_size_out_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    contacts_size_out_1_data_in_assign_proc : process(ap_start, ap_CS_fsm_state1, operation_ap_vld_in_sig, contacts_size, operation_read_read_fu_130_p2, storemerge_reg_200, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            contacts_size_out_1_data_in <= storemerge_reg_200;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and not((ap_const_lv32_0 = operation_read_read_fu_130_p2)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_1)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_2))))) then 
            contacts_size_out_1_data_in <= contacts_size;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_2))) then 
            contacts_size_out_1_data_in <= ap_const_lv32_0;
        else 
            contacts_size_out_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    contacts_size_out_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_state1, operation_ap_vld_in_sig, operation_read_read_fu_130_p2, ap_CS_fsm_state85)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and not((ap_const_lv32_0 = operation_read_read_fu_130_p2)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_1)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_2))) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            contacts_size_out_1_vld_in <= ap_const_logic_1;
        else 
            contacts_size_out_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    database_index_1_fu_272_p2 <= std_logic_vector(unsigned(database_index_phi_fu_193_p4) + unsigned(ap_const_lv24_1));
    database_index_cast1_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(database_index_phi_fu_193_p4),32));

    database_index_phi_fu_193_p4_assign_proc : process(tmp_127_reg_356, tmp_8_reg_365, ap_enable_reg_pp0_iter1, database_index_reg_189, ap_CS_fsm_pp0_stage0, database_index_1_reg_360, ap_block_pp0_stage0_flag00000000)
    begin
        if (((tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            database_index_phi_fu_193_p4 <= database_index_1_reg_360;
        else 
            database_index_phi_fu_193_p4 <= database_index_reg_189;
        end if; 
    end process;


    db_mem_V_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op161_readreq_state4, ap_reg_ioackin_db_mem_V_ARREADY, ap_block_pp0_stage1_flag00001001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_predicate_op161_readreq_state4) and (ap_block_pp0_stage1_flag00001001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_db_mem_V_ARREADY))) then 
            db_mem_V_ARVALID <= ap_const_logic_1;
        else 
            db_mem_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    db_mem_V_RREADY_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_predicate_op168_read_state11, ap_block_pp0_stage8_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_1 = ap_predicate_op168_read_state11) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0))) then 
            db_mem_V_RREADY <= ap_const_logic_1;
        else 
            db_mem_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    db_mem_V_blk_n_AR_assign_proc : process(m_axi_db_mem_V_ARREADY, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_flag00000000, tmp_127_reg_356, tmp_8_reg_365)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0) and (tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1))) then 
            db_mem_V_blk_n_AR <= m_axi_db_mem_V_ARREADY;
        else 
            db_mem_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    db_mem_V_blk_n_R_assign_proc : process(m_axi_db_mem_V_RVALID, ap_enable_reg_pp0_iter0, tmp_127_reg_356, tmp_8_reg_365, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_127_reg_356 = ap_const_lv1_0) and (tmp_8_reg_365 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00000000 = ap_const_boolean_0))) then 
            db_mem_V_blk_n_R <= m_axi_db_mem_V_RVALID;
        else 
            db_mem_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    error_out_1_ack_in_assign_proc : process(error_out_1_vld_reg)
    begin
        if (((ap_const_logic_0 = error_out_1_vld_reg) or ((ap_const_logic_1 = error_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            error_out_1_ack_in <= ap_const_logic_1;
        else 
            error_out_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    error_out_1_data_in_assign_proc : process(ap_start, ap_CS_fsm_state1, operation_ap_vld_in_sig, operation_read_read_fu_130_p2, ap_CS_fsm_state2, icmp_fu_243_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_1 = icmp_fu_243_p2))) then 
            error_out_1_data_in <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and not((ap_const_lv32_0 = operation_read_read_fu_130_p2)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_1)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_2)))) then 
            error_out_1_data_in <= ap_const_lv32_3;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (ap_const_lv32_0 = operation_read_read_fu_130_p2)))) then 
            error_out_1_data_in <= ap_const_lv32_0;
        else 
            error_out_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    error_out_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_state1, operation_ap_vld_in_sig, operation_read_read_fu_130_p2, ap_CS_fsm_state2, icmp_fu_243_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (operation_read_read_fu_130_p2 = ap_const_lv32_2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and (ap_const_lv32_0 = operation_read_read_fu_130_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_const_logic_0 = operation_ap_vld_in_sig))) and not((ap_const_lv32_0 = operation_read_read_fu_130_p2)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_1)) and not((operation_read_read_fu_130_p2 = ap_const_lv32_2))) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv32_0 = operation_read_read_fu_130_p2) and (ap_const_lv1_1 = icmp_fu_243_p2)))) then 
            error_out_1_vld_in <= ap_const_logic_1;
        else 
            error_out_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    grp_match_db_contact_fu_212_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage8_flag00011001, ap_block_pp0_stage9_flag00011001, ap_CS_fsm_pp0_stage63, ap_block_pp0_stage10_flag00011001, ap_block_pp0_stage11_flag00011001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage12_flag00011001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage13_flag00011001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage14_flag00011001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage15_flag00011001, ap_block_pp0_stage16_flag00011001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage17_flag00011001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage18_flag00011001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage19_flag00011001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage20_flag00011001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage21_flag00011001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage22_flag00011001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage23_flag00011001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage24_flag00011001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage25_flag00011001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage26_flag00011001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage27_flag00011001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage28_flag00011001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage29_flag00011001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage30_flag00011001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage31_flag00011001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage32_flag00011001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage33_flag00011001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage34_flag00011001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage35_flag00011001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage36_flag00011001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage37_flag00011001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage38_flag00011001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage39_flag00011001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage40_flag00011001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage41_flag00011001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage42_flag00011001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage43_flag00011001, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage44_flag00011001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage45_flag00011001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage46_flag00011001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage47_flag00011001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage48_flag00011001, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage49_flag00011001, ap_CS_fsm_pp0_stage49, ap_block_pp0_stage50_flag00011001, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage51_flag00011001, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage52_flag00011001, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage53_flag00011001, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage54_flag00011001, ap_CS_fsm_pp0_stage54, ap_block_pp0_stage55_flag00011001, ap_CS_fsm_pp0_stage55, ap_block_pp0_stage56_flag00011001, ap_CS_fsm_pp0_stage56, ap_block_pp0_stage57_flag00011001, ap_CS_fsm_pp0_stage57, ap_block_pp0_stage58_flag00011001, ap_CS_fsm_pp0_stage58, ap_block_pp0_stage59_flag00011001, ap_CS_fsm_pp0_stage59, ap_block_pp0_stage60_flag00011001, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage61_flag00011001, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage62_flag00011001, ap_CS_fsm_pp0_stage62, ap_block_pp0_stage63_flag00011001, ap_block_pp0_stage2_flag00011001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage3_flag00011001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage4_flag00011001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage5_flag00011001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage6_flag00011001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_flag00011001, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_block_pp0_stage63_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00011001 = ap_const_boolean_0)))) then 
            grp_match_db_contact_fu_212_ap_ce <= ap_const_logic_1;
        else 
            grp_match_db_contact_fu_212_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_match_db_contact_fu_212_ap_start <= ap_reg_grp_match_db_contact_fu_212_ap_start;
    icmp_fu_243_p2 <= "1" when (signed(tmp_fu_234_p4) > signed(ap_const_lv25_0)) else "0";

    operation_ap_vld_in_sig_assign_proc : process(operation_ap_vld, operation_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = operation_ap_vld)) then 
            operation_ap_vld_in_sig <= operation_ap_vld;
        else 
            operation_ap_vld_in_sig <= operation_ap_vld_preg;
        end if; 
    end process;


    operation_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, operation_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            operation_blk_n <= operation_ap_vld;
        else 
            operation_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    operation_in_sig_assign_proc : process(operation, operation_preg, operation_ap_vld)
    begin
        if ((ap_const_logic_1 = operation_ap_vld)) then 
            operation_in_sig <= operation;
        else 
            operation_in_sig <= operation_preg;
        end if; 
    end process;

    operation_read_read_fu_130_p2 <= operation_in_sig;

    results_out_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_predicate_op234_writereq_state76, ap_reg_ioackin_results_out_AWREADY, ap_block_pp0_stage9_flag00001001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_predicate_op234_writereq_state76) and (ap_block_pp0_stage9_flag00001001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_results_out_AWREADY))) then 
            results_out_AWVALID <= ap_const_logic_1;
        else 
            results_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    results_out_BREADY_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_predicate_op241_writeresp_state82, ap_block_pp0_stage15_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_1 = ap_predicate_op241_writeresp_state82) and (ap_block_pp0_stage15_flag00011001 = ap_const_boolean_0))) then 
            results_out_BREADY <= ap_const_logic_1;
        else 
            results_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    results_out_WDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_390),8));

    results_out_WVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_predicate_op236_write_state77, ap_reg_ioackin_results_out_WREADY, ap_block_pp0_stage10_flag00001001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_1 = ap_predicate_op236_write_state77) and (ap_block_pp0_stage10_flag00001001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_results_out_WREADY))) then 
            results_out_WVALID <= ap_const_logic_1;
        else 
            results_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    results_out_blk_n_AW_assign_proc : process(m_axi_results_out_AWREADY, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_block_pp0_stage9_flag00000000, ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage9_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365))) then 
            results_out_blk_n_AW <= m_axi_results_out_AWREADY;
        else 
            results_out_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    results_out_blk_n_B_assign_proc : process(m_axi_results_out_BVALID, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00000000 = ap_const_boolean_0))) then 
            results_out_blk_n_B <= m_axi_results_out_BVALID;
        else 
            results_out_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    results_out_blk_n_W_assign_proc : process(m_axi_results_out_WREADY, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_127_reg_356, ap_reg_pp0_iter1_tmp_8_reg_365, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_127_reg_356) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_8_reg_365) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00000000 = ap_const_boolean_0))) then 
            results_out_blk_n_W <= m_axi_results_out_WREADY;
        else 
            results_out_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    sum_cast_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_reg_369),64));
    sum_fu_295_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_286_p1) + unsigned(tmp_126_reg_343));
    tmp_126_fu_230_p1 <= offset(25 - 1 downto 0);
    tmp_127_fu_264_p3 <= database_index_phi_fu_193_p4(23 downto 23);
        tmp_4_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(contacts_size_load_reg_334),64));

    tmp_5_fu_253_p2 <= std_logic_vector(unsigned(contacts_size_load_reg_334) + unsigned(ap_const_lv32_1));
    tmp_7_cast_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(database_index_phi_fu_193_p4),25));
    tmp_7_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(database_index_phi_fu_193_p4),64));
    tmp_8_fu_290_p2 <= "1" when (unsigned(database_index_cast1_fu_278_p1) < unsigned(db_size_in)) else "0";
    tmp_fu_234_p4 <= contacts_size_load_reg_334(31 downto 7);
end behav;
