// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha512_update_32 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        md_state_address0,
        md_state_ce0,
        md_state_we0,
        md_state_d0,
        md_state_q0,
        md_buf_address0,
        md_buf_ce0,
        md_buf_we0,
        md_buf_d0,
        md_buf_q0,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] md_state_address0;
output   md_state_ce0;
output   md_state_we0;
output  [63:0] md_state_d0;
input  [63:0] md_state_q0;
output  [6:0] md_buf_address0;
output   md_buf_ce0;
output   md_buf_we0;
output  [7:0] md_buf_d0;
input  [7:0] md_buf_q0;
output  [5:0] in_r_address0;
output   in_r_ce0;
input  [7:0] in_r_q0;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] md_state_address0;
reg md_state_ce0;
reg md_state_we0;
reg[63:0] md_state_d0;
reg[6:0] md_buf_address0;
reg md_buf_ce0;
reg md_buf_we0;
reg[7:0] md_buf_d0;
reg[5:0] in_r_address0;
reg in_r_ce0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_184_p2;
reg   [63:0] i_1_reg_193;
wire    ap_CS_fsm_state6;
reg   [63:0] tmp_8_reg_204;
wire    ap_CS_fsm_state9;
reg   [63:0] p_01_idx9_reg_207;
wire    ap_CS_fsm_state10;
reg   [7:0] temp_index_2_reg_223;
wire    ap_CS_fsm_state11;
reg   [7:0] temp_index_3_reg_230;
wire    ap_CS_fsm_state14;
wire   [63:0] grp_fu_248_p2;
reg   [63:0] inlen_2_reg_240;
reg   [63:0] inlen_load_reg_480;
wire    ap_CS_fsm_state2;
reg   [63:0] md_curlen_load_2_reg_492;
wire    ap_CS_fsm_state3;
wire   [0:0] grp_fu_268_p2;
reg   [0:0] tmp_2_reg_497;
wire   [0:0] or_cond_fu_390_p2;
reg   [0:0] or_cond_reg_502;
wire    ap_CS_fsm_state4;
wire   [63:0] n_fu_395_p3;
reg   [63:0] n_reg_506;
wire    ap_CS_fsm_state5;
wire   [8:0] tmp_16_fu_402_p1;
reg   [8:0] tmp_16_reg_513;
wire   [7:0] tmp_17_fu_406_p1;
reg   [7:0] tmp_17_reg_518;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_s_reg_531;
wire   [63:0] tmp_9_fu_435_p1;
reg   [63:0] tmp_9_reg_538;
wire   [63:0] tmp_11_fu_440_p1;
reg   [63:0] tmp_11_reg_551;
reg   [63:0] p_01_idx_load_reg_561;
wire    ap_CS_fsm_state17;
reg   [6:0] temp_buf_address0;
reg    temp_buf_ce0;
reg    temp_buf_we0;
wire   [7:0] temp_buf_q0;
reg    temp_buf_ce1;
wire   [7:0] temp_buf_q1;
wire    grp_sha512_compress_32_fu_289_ap_start;
wire    grp_sha512_compress_32_fu_289_ap_done;
wire    grp_sha512_compress_32_fu_289_ap_idle;
wire    grp_sha512_compress_32_fu_289_ap_ready;
wire   [2:0] grp_sha512_compress_32_fu_289_md_state_address0;
wire    grp_sha512_compress_32_fu_289_md_state_ce0;
wire    grp_sha512_compress_32_fu_289_md_state_we0;
wire   [63:0] grp_sha512_compress_32_fu_289_md_state_d0;
wire   [5:0] grp_sha512_compress_32_fu_289_buf_r_address0;
wire    grp_sha512_compress_32_fu_289_buf_r_ce0;
wire    grp_sha512_compress_128_fu_300_ap_start;
wire    grp_sha512_compress_128_fu_300_ap_done;
wire    grp_sha512_compress_128_fu_300_ap_idle;
wire    grp_sha512_compress_128_fu_300_ap_ready;
wire   [2:0] grp_sha512_compress_128_fu_300_md_state_address0;
wire    grp_sha512_compress_128_fu_300_md_state_ce0;
wire    grp_sha512_compress_128_fu_300_md_state_we0;
wire   [63:0] grp_sha512_compress_128_fu_300_md_state_d0;
wire   [6:0] grp_sha512_compress_128_fu_300_buf_r_address0;
wire    grp_sha512_compress_128_fu_300_buf_r_ce0;
wire   [6:0] grp_sha512_compress_128_fu_300_buf_r_address1;
wire    grp_sha512_compress_128_fu_300_buf_r_ce1;
reg   [63:0] i_reg_151;
wire    ap_CS_fsm_state8;
reg   [7:0] temp_index_reg_162;
wire    ap_CS_fsm_state12;
reg   [7:0] temp_index_1_reg_173;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state13;
reg    ap_reg_grp_sha512_compress_32_fu_289_ap_start;
wire    ap_CS_fsm_state18;
reg    ap_reg_grp_sha512_compress_128_fu_300_ap_start;
wire   [63:0] sum2_cast_fu_415_p1;
wire   [63:0] tmp_5_cast_fu_425_p1;
reg   [63:0] p_01_idx_fu_70;
reg   [63:0] inlen_fu_74;
reg   [63:0] md_curlen_fu_78;
reg   [63:0] md_length_fu_82;
wire    ap_CS_fsm_state16;
reg   [63:0] grp_fu_184_p0;
reg   [63:0] grp_fu_184_p1;
wire   [7:0] tmp_18_fu_410_p1;
wire   [8:0] tmp_19_fu_420_p1;
reg   [63:0] grp_fu_248_p0;
reg   [63:0] grp_fu_248_p1;
reg   [63:0] grp_fu_268_p0;
reg   [63:0] grp_fu_268_p1;
wire   [56:0] tmp_fu_380_p4;
wire   [0:0] icmp_fu_273_p2;
wire   [0:0] tmp_7_fu_278_p2;
wire   [7:0] sum2_cast_fu_415_p0;
wire   [8:0] tmp_5_cast_fu_425_p0;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_reg_grp_sha512_compress_32_fu_289_ap_start = 1'b0;
#0 ap_reg_grp_sha512_compress_128_fu_300_ap_start = 1'b0;
end

sha512_update_32_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
temp_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_buf_address0),
    .ce0(temp_buf_ce0),
    .we0(temp_buf_we0),
    .d0(md_buf_q0),
    .q0(temp_buf_q0),
    .address1(grp_sha512_compress_128_fu_300_buf_r_address1),
    .ce1(temp_buf_ce1),
    .q1(temp_buf_q1)
);

sha512_compress_32 grp_sha512_compress_32_fu_289(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha512_compress_32_fu_289_ap_start),
    .ap_done(grp_sha512_compress_32_fu_289_ap_done),
    .ap_idle(grp_sha512_compress_32_fu_289_ap_idle),
    .ap_ready(grp_sha512_compress_32_fu_289_ap_ready),
    .md_state_address0(grp_sha512_compress_32_fu_289_md_state_address0),
    .md_state_ce0(grp_sha512_compress_32_fu_289_md_state_ce0),
    .md_state_we0(grp_sha512_compress_32_fu_289_md_state_we0),
    .md_state_d0(grp_sha512_compress_32_fu_289_md_state_d0),
    .md_state_q0(md_state_q0),
    .buf_r_address0(grp_sha512_compress_32_fu_289_buf_r_address0),
    .buf_r_ce0(grp_sha512_compress_32_fu_289_buf_r_ce0),
    .buf_r_q0(in_r_q0),
    .sum(p_01_idx_load_reg_561)
);

sha512_compress_128 grp_sha512_compress_128_fu_300(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha512_compress_128_fu_300_ap_start),
    .ap_done(grp_sha512_compress_128_fu_300_ap_done),
    .ap_idle(grp_sha512_compress_128_fu_300_ap_idle),
    .ap_ready(grp_sha512_compress_128_fu_300_ap_ready),
    .md_state_address0(grp_sha512_compress_128_fu_300_md_state_address0),
    .md_state_ce0(grp_sha512_compress_128_fu_300_md_state_ce0),
    .md_state_we0(grp_sha512_compress_128_fu_300_md_state_we0),
    .md_state_d0(grp_sha512_compress_128_fu_300_md_state_d0),
    .md_state_q0(md_state_q0),
    .buf_r_address0(grp_sha512_compress_128_fu_300_buf_r_address0),
    .buf_r_ce0(grp_sha512_compress_128_fu_300_buf_r_ce0),
    .buf_r_q0(temp_buf_q0),
    .buf_r_address1(grp_sha512_compress_128_fu_300_buf_r_address1),
    .buf_r_ce1(grp_sha512_compress_128_fu_300_buf_r_ce1),
    .buf_r_q1(temp_buf_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_sha512_compress_128_fu_300_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (grp_fu_268_p2 == 1'd1))) begin
            ap_reg_grp_sha512_compress_128_fu_300_ap_start <= 1'b1;
        end else if ((1'b1 == grp_sha512_compress_128_fu_300_ap_ready)) begin
            ap_reg_grp_sha512_compress_128_fu_300_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_sha512_compress_32_fu_289_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_reg_grp_sha512_compress_32_fu_289_ap_start <= 1'b1;
        end else if ((1'b1 == grp_sha512_compress_32_fu_289_ap_ready)) begin
            ap_reg_grp_sha512_compress_32_fu_289_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_151 <= i_1_reg_193;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_151 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (grp_sha512_compress_32_fu_289_ap_done == 1'b1))) begin
        inlen_fu_74 <= grp_fu_184_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_268_p2 == 1'd1))) begin
        inlen_fu_74 <= inlen_2_reg_240;
    end else if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_268_p2 == 1'd0))) begin
        inlen_fu_74 <= grp_fu_248_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        inlen_fu_74 <= 64'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_268_p2 == 1'd0))) begin
        md_curlen_fu_78 <= tmp_8_reg_204;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (grp_fu_268_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_390_p2 == 1'd1)))) begin
        md_curlen_fu_78 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_390_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (or_cond_reg_502 == 1'd0) & (tmp_s_reg_531 == 1'd1)))) begin
        md_length_fu_82 <= grp_fu_184_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        md_length_fu_82 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_268_p2 == 1'd1))) begin
        p_01_idx_fu_70 <= p_01_idx9_reg_207;
    end else if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state10) & (grp_fu_268_p2 == 1'd0)))) begin
        p_01_idx_fu_70 <= grp_fu_184_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_01_idx_fu_70 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (grp_sha512_compress_128_fu_300_ap_done == 1'b1))) begin
        temp_index_1_reg_173 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_index_1_reg_173 <= temp_index_3_reg_230;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_268_p2 == 1'd1))) begin
        temp_index_reg_162 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_index_reg_162 <= temp_index_2_reg_223;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_193 <= grp_fu_184_p2;
        tmp_16_reg_513 <= tmp_16_fu_402_p1;
        tmp_17_reg_518 <= tmp_17_fu_406_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        inlen_2_reg_240 <= grp_fu_248_p2;
        p_01_idx9_reg_207 <= grp_fu_184_p2;
        tmp_s_reg_531 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        inlen_load_reg_480 <= inlen_fu_74;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        md_curlen_load_2_reg_492 <= md_curlen_fu_78;
        tmp_2_reg_497 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_reg_506 <= n_fu_395_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        or_cond_reg_502 <= or_cond_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_01_idx_load_reg_561 <= p_01_idx_fu_70;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_index_2_reg_223 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_index_3_reg_230 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_268_p2 == 1'd0))) begin
        tmp_11_reg_551[7 : 0] <= tmp_11_fu_440_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_8_reg_204 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_fu_268_p2 == 1'd0))) begin
        tmp_9_reg_538[7 : 0] <= tmp_9_fu_435_p1[7 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (grp_fu_268_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_268_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_184_p0 = inlen_load_reg_480;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_184_p0 = p_01_idx_fu_70;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_184_p0 = temp_index_1_reg_173;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_184_p0 = temp_index_reg_162;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_184_p0 = n_reg_506;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_184_p0 = tmp_16_reg_513;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_184_p0 = tmp_17_reg_518;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_184_p0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_184_p0 = md_length_fu_82;
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_184_p1 = 64'd18446744073709551488;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_184_p1 = 64'd128;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_184_p1 = 8'd1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_184_p1 = p_01_idx_fu_70;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_184_p1 = md_curlen_fu_78;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_184_p1 = tmp_19_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_184_p1 = tmp_18_fu_410_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_184_p1 = i_reg_151;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_184_p1 = 64'd1024;
    end else begin
        grp_fu_184_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_248_p0 = inlen_load_reg_480;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_248_p0 = 64'd128;
    end else begin
        grp_fu_248_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_248_p1 = n_reg_506;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_248_p1 = md_curlen_load_2_reg_492;
    end else begin
        grp_fu_248_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_268_p0 = temp_index_1_reg_173;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_268_p0 = temp_index_reg_162;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_268_p0 = tmp_8_reg_204;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_268_p0 = i_reg_151;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_268_p0 = md_curlen_fu_78;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_268_p0 = inlen_fu_74;
    end else begin
        grp_fu_268_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_268_p1 = 8'd128;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_268_p1 = 64'd128;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_268_p1 = n_reg_506;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_268_p1 = 64'd0;
    end else begin
        grp_fu_268_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        in_r_address0 = sum2_cast_fu_415_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        in_r_address0 = grp_sha512_compress_32_fu_289_buf_r_address0;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        in_r_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        in_r_ce0 = grp_sha512_compress_32_fu_289_buf_r_ce0;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        md_buf_address0 = tmp_11_reg_551;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        md_buf_address0 = tmp_9_fu_435_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        md_buf_address0 = tmp_5_cast_fu_425_p1;
    end else begin
        md_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state15))) begin
        md_buf_ce0 = 1'b1;
    end else begin
        md_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        md_buf_d0 = temp_buf_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        md_buf_d0 = in_r_q0;
    end else begin
        md_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state15))) begin
        md_buf_we0 = 1'b1;
    end else begin
        md_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        md_state_address0 = grp_sha512_compress_128_fu_300_md_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        md_state_address0 = grp_sha512_compress_32_fu_289_md_state_address0;
    end else begin
        md_state_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        md_state_ce0 = grp_sha512_compress_128_fu_300_md_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        md_state_ce0 = grp_sha512_compress_32_fu_289_md_state_ce0;
    end else begin
        md_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        md_state_d0 = grp_sha512_compress_128_fu_300_md_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        md_state_d0 = grp_sha512_compress_32_fu_289_md_state_d0;
    end else begin
        md_state_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        md_state_we0 = grp_sha512_compress_128_fu_300_md_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        md_state_we0 = grp_sha512_compress_32_fu_289_md_state_we0;
    end else begin
        md_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_buf_address0 = tmp_11_fu_440_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_buf_address0 = tmp_9_reg_538;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_buf_address0 = grp_sha512_compress_128_fu_300_buf_r_address0;
    end else begin
        temp_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        temp_buf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_buf_ce0 = grp_sha512_compress_128_fu_300_buf_r_ce0;
    end else begin
        temp_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_buf_ce1 = grp_sha512_compress_128_fu_300_buf_r_ce1;
    end else begin
        temp_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_buf_we0 = 1'b1;
    end else begin
        temp_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_390_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_fu_268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_sha512_compress_128_fu_300_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (grp_sha512_compress_32_fu_289_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = md_length_fu_82;

assign ap_return_1 = md_curlen_fu_78;

assign grp_fu_184_p2 = (grp_fu_184_p0 + grp_fu_184_p1);

assign grp_fu_248_p2 = (grp_fu_248_p0 - grp_fu_248_p1);

assign grp_fu_268_p2 = ((grp_fu_268_p0 == grp_fu_268_p1) ? 1'b1 : 1'b0);

assign grp_sha512_compress_128_fu_300_ap_start = ap_reg_grp_sha512_compress_128_fu_300_ap_start;

assign grp_sha512_compress_32_fu_289_ap_start = ap_reg_grp_sha512_compress_32_fu_289_ap_start;

assign icmp_fu_273_p2 = ((tmp_fu_380_p4 != 57'd0) ? 1'b1 : 1'b0);

assign n_fu_395_p3 = ((tmp_7_fu_278_p2[0:0] === 1'b1) ? inlen_load_reg_480 : grp_fu_248_p2);

assign or_cond_fu_390_p2 = (tmp_2_reg_497 & icmp_fu_273_p2);

assign sum2_cast_fu_415_p0 = grp_fu_184_p2;

assign sum2_cast_fu_415_p1 = sum2_cast_fu_415_p0;

assign tmp_11_fu_440_p1 = temp_index_1_reg_173;

assign tmp_16_fu_402_p1 = i_reg_151[8:0];

assign tmp_17_fu_406_p1 = i_reg_151[7:0];

assign tmp_18_fu_410_p1 = p_01_idx_fu_70[7:0];

assign tmp_19_fu_420_p1 = md_curlen_fu_78[8:0];

assign tmp_5_cast_fu_425_p0 = grp_fu_184_p2;

assign tmp_5_cast_fu_425_p1 = tmp_5_cast_fu_425_p0;

assign tmp_7_fu_278_p2 = ((inlen_load_reg_480 < grp_fu_248_p2) ? 1'b1 : 1'b0);

assign tmp_9_fu_435_p1 = temp_index_reg_162;

assign tmp_fu_380_p4 = {{inlen_load_reg_480[63:7]}};

always @ (posedge ap_clk) begin
    tmp_9_reg_538[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_11_reg_551[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //sha512_update_32
