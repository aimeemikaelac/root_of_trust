// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "secure_enclave_key_store.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic secure_enclave_key_store::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic secure_enclave_key_store::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<54> secure_enclave_key_store::ap_ST_st1_fsm_0 = "1";
const sc_lv<54> secure_enclave_key_store::ap_ST_st2_fsm_1 = "10";
const sc_lv<54> secure_enclave_key_store::ap_ST_st3_fsm_2 = "100";
const sc_lv<54> secure_enclave_key_store::ap_ST_st4_fsm_3 = "1000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st5_fsm_4 = "10000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st6_fsm_5 = "100000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st27_fsm_26 = "100000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st28_fsm_27 = "1000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st29_fsm_28 = "10000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st30_fsm_29 = "100000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st31_fsm_30 = "1000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st32_fsm_31 = "10000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st33_fsm_32 = "100000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st34_fsm_33 = "1000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st35_fsm_34 = "10000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st36_fsm_35 = "100000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st37_fsm_36 = "1000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st38_fsm_37 = "10000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st39_fsm_38 = "100000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st40_fsm_39 = "1000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st41_fsm_40 = "10000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st42_fsm_41 = "100000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st43_fsm_42 = "1000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st44_fsm_43 = "10000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st45_fsm_44 = "100000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st46_fsm_45 = "1000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st47_fsm_46 = "10000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st48_fsm_47 = "100000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st49_fsm_48 = "1000000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st50_fsm_49 = "10000000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st51_fsm_50 = "100000000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st52_fsm_51 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st53_fsm_52 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<54> secure_enclave_key_store::ap_ST_st54_fsm_53 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> secure_enclave_key_store::ap_const_lv1_1 = "1";
const sc_lv<128> secure_enclave_key_store::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_1E = "11110";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_1F = "11111";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_20 = "100000";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_2 = "10";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_3 = "11";
const sc_lv<1> secure_enclave_key_store::ap_const_lv1_0 = "0";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_5 = "101";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_7 = "111";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_1C = "11100";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_32 = "110010";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_33 = "110011";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_34 = "110100";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_9 = "1001";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_21 = "100001";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_1 = "1";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_4 = "100";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_6 = "110";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_8 = "1000";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_1D = "11101";
const sc_lv<32> secure_enclave_key_store::ap_const_lv32_35 = "110101";
const sc_lv<9> secure_enclave_key_store::ap_const_lv9_0 = "000000000";
const sc_lv<128> secure_enclave_key_store::ap_const_lv128_lc_2 = "100000000000000000000000000000000000000000000000000000000000000010000000";
const sc_lv<64> secure_enclave_key_store::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> secure_enclave_key_store::ap_const_lv64_1 = "1";
const sc_lv<9> secure_enclave_key_store::ap_const_lv9_100 = "100000000";
const sc_lv<9> secure_enclave_key_store::ap_const_lv9_1 = "1";
const sc_lv<104> secure_enclave_key_store::ap_const_lv104_0 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

secure_enclave_key_store::secure_enclave_key_store(sc_module_name name) : sc_module(name), mVcdFile(0) {
    encrypted_header_old_storage_V_U = new secure_enclave_key_store_encrypted_header_old_storage_V("encrypted_header_old_storage_V_U");
    encrypted_header_old_storage_V_U->clk(ap_clk);
    encrypted_header_old_storage_V_U->reset(ap_rst);
    encrypted_header_old_storage_V_U->address0(encrypted_header_old_storage_V_address0);
    encrypted_header_old_storage_V_U->ce0(encrypted_header_old_storage_V_ce0);
    encrypted_header_old_storage_V_U->we0(encrypted_header_old_storage_V_we0);
    encrypted_header_old_storage_V_U->d0(encrypted_header_old_V_q0);
    encrypted_header_old_storage_V_U->q0(encrypted_header_old_storage_V_q0);
    encrypted_header_new_storage_V_U = new secure_enclave_key_store_encrypted_header_old_storage_V("encrypted_header_new_storage_V_U");
    encrypted_header_new_storage_V_U->clk(ap_clk);
    encrypted_header_new_storage_V_U->reset(ap_rst);
    encrypted_header_new_storage_V_U->address0(encrypted_header_new_storage_V_address0);
    encrypted_header_new_storage_V_U->ce0(encrypted_header_new_storage_V_ce0);
    encrypted_header_new_storage_V_U->we0(encrypted_header_new_storage_V_we0);
    encrypted_header_new_storage_V_U->d0(encrypted_header_new_V_q0);
    encrypted_header_new_storage_V_U->q0(encrypted_header_new_storage_V_q0);
    decrypted_header_storage_V_U = new secure_enclave_key_store_decrypted_header_storage_V("decrypted_header_storage_V_U");
    decrypted_header_storage_V_U->clk(ap_clk);
    decrypted_header_storage_V_U->reset(ap_rst);
    decrypted_header_storage_V_U->address0(decrypted_header_storage_V_address0);
    decrypted_header_storage_V_U->ce0(decrypted_header_storage_V_ce0);
    decrypted_header_storage_V_U->we0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0);
    decrypted_header_storage_V_U->d0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0);
    decrypted_header_storage_V_U->q0(decrypted_header_storage_V_q0);
    decrypted_header_storage_V_U->address1(decrypted_header_storage_V_address1);
    decrypted_header_storage_V_U->ce1(decrypted_header_storage_V_ce1);
    decrypted_header_storage_V_U->q1(decrypted_header_storage_V_q1);
    ct_V_assign_U = new secure_enclave_key_store_ct_V_assign("ct_V_assign_U");
    ct_V_assign_U->clk(ap_clk);
    ct_V_assign_U->reset(ap_rst);
    ct_V_assign_U->address0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0);
    ct_V_assign_U->ce0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0);
    ct_V_assign_U->we0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0);
    ct_V_assign_U->d0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403 = new secure_enclave_key_store_aes_gcm_d("grp_secure_enclave_key_store_aes_gcm_d_fu_403");
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_clk(ap_clk);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_rst(ap_rst);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_start(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_done(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_idle(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_ready(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->key_V(master_key_old_storage_V_reg_698);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->iv_V(iv_V_in_sig);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ct_V_address0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ct_V_ce0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ct_V_q0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->pt_V_address0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->pt_V_ce0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->pt_V_we0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->pt_V_d0(grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->tag_in_V(grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V);
    grp_secure_enclave_key_store_aes_gcm_d_fu_403->ap_return(grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452 = new secure_enclave_key_store_aes_gcm_cipher("grp_secure_enclave_key_store_aes_gcm_cipher_fu_452");
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_clk(ap_clk);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_rst(ap_rst);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_start(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_done(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_idle(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_ready(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->key_V(master_key_old_storage_V_reg_698);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_in_V_address0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_in_V_ce0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_in_V_q0(decrypted_header_storage_V_q0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_out_V_address0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_out_V_ce0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_out_V_we0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->data_out_V_d0(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->counter_V(reg_569);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->hash_key_V(hash_key_V_reg_754);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->encrypt(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt);
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452->ap_return(grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return);
    grp_secure_enclave_key_store_aes_fu_503 = new secure_enclave_key_store_aes("grp_secure_enclave_key_store_aes_fu_503");
    grp_secure_enclave_key_store_aes_fu_503->ap_clk(ap_clk);
    grp_secure_enclave_key_store_aes_fu_503->ap_rst(ap_rst);
    grp_secure_enclave_key_store_aes_fu_503->ap_start(grp_secure_enclave_key_store_aes_fu_503_ap_start);
    grp_secure_enclave_key_store_aes_fu_503->ap_done(grp_secure_enclave_key_store_aes_fu_503_ap_done);
    grp_secure_enclave_key_store_aes_fu_503->ap_idle(grp_secure_enclave_key_store_aes_fu_503_ap_idle);
    grp_secure_enclave_key_store_aes_fu_503->ap_ready(grp_secure_enclave_key_store_aes_fu_503_ap_ready);
    grp_secure_enclave_key_store_aes_fu_503->ap_ce(grp_secure_enclave_key_store_aes_fu_503_ap_ce);
    grp_secure_enclave_key_store_aes_fu_503->inptext_V_read(grp_secure_enclave_key_store_aes_fu_503_inptext_V_read);
    grp_secure_enclave_key_store_aes_fu_503->key_V_read(master_key_old_storage_V_reg_698);
    grp_secure_enclave_key_store_aes_fu_503->ap_return(grp_secure_enclave_key_store_aes_fu_503_ap_return);
    grp_secure_enclave_key_store_ghash_iteration_fu_550 = new secure_enclave_key_store_ghash_iteration("grp_secure_enclave_key_store_ghash_iteration_fu_550");
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_clk(ap_clk);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_rst(ap_rst);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_start(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_done(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_idle(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_ready(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->h_V(hash_key_V_reg_754);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->d_V(grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->x_prev_V(grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V);
    grp_secure_enclave_key_store_ghash_iteration_fu_550->ap_return(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_8_fu_634_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_8_fu_634_p2 );

    SC_METHOD(thread_ap_sig_162);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_173);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_182);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_196);
    sensitive << ( ap_start );
    sensitive << ( device_key_ocm_addr_ap_vld_in_sig );
    sensitive << ( iv_V_ap_vld_in_sig );
    sensitive << ( tag_header_old_V_ap_vld_in_sig );
    sensitive << ( tag_header_new_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_sig_212);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_224);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_241);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_257);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_270);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_2768);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_sig_2776);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_sig_279);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_290);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_301);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_401);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_537);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_659);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_669);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_678);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_687);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_695);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_706);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_401 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_69 );

    SC_METHOD(thread_ap_sig_cseq_ST_st29_fsm_28);
    sensitive << ( ap_sig_270 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_659 );

    SC_METHOD(thread_ap_sig_cseq_ST_st30_fsm_29);
    sensitive << ( ap_sig_695 );

    SC_METHOD(thread_ap_sig_cseq_ST_st31_fsm_30);
    sensitive << ( ap_sig_162 );

    SC_METHOD(thread_ap_sig_cseq_ST_st32_fsm_31);
    sensitive << ( ap_sig_173 );

    SC_METHOD(thread_ap_sig_cseq_ST_st33_fsm_32);
    sensitive << ( ap_sig_182 );

    SC_METHOD(thread_ap_sig_cseq_ST_st34_fsm_33);
    sensitive << ( ap_sig_537 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_212 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_224 );

    SC_METHOD(thread_ap_sig_cseq_ST_st51_fsm_50);
    sensitive << ( ap_sig_279 );

    SC_METHOD(thread_ap_sig_cseq_ST_st52_fsm_51);
    sensitive << ( ap_sig_290 );

    SC_METHOD(thread_ap_sig_cseq_ST_st53_fsm_52);
    sensitive << ( ap_sig_301 );

    SC_METHOD(thread_ap_sig_cseq_ST_st54_fsm_53);
    sensitive << ( ap_sig_706 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_669 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_241 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_678 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_257 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_687 );

    SC_METHOD(thread_ap_sig_nseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_2768 );

    SC_METHOD(thread_ap_sig_nseq_ST_st33_fsm_32);
    sensitive << ( ap_sig_2776 );

    SC_METHOD(thread_decrypted_header_storage_V_address0);
    sensitive << ( tmp_reg_742 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st51_fsm_50 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );

    SC_METHOD(thread_decrypted_header_storage_V_address1);
    sensitive << ( ap_sig_cseq_ST_st51_fsm_50 );

    SC_METHOD(thread_decrypted_header_storage_V_ce0);
    sensitive << ( tmp_reg_742 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st51_fsm_50 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );

    SC_METHOD(thread_decrypted_header_storage_V_ce1);
    sensitive << ( ap_sig_cseq_ST_st51_fsm_50 );

    SC_METHOD(thread_decrypted_new_header_out);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( decrypted_new_header_reg_389 );
    sensitive << ( decrypted_new_header_out_preg );

    SC_METHOD(thread_decrypted_new_header_out_valid);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( decrypted_new_header_out_valid_preg );

    SC_METHOD(thread_derived_key_out_V);
    sensitive << ( user_key_V );
    sensitive << ( lhs_V_reg_775 );
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_9_fu_651_p2 );
    sensitive << ( tmp_8_fu_634_p2 );

    SC_METHOD(thread_derived_key_valid);
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( user_key_valid_read_reg_780 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_9_reg_787 );
    sensitive << ( tmp_8_fu_634_p2 );
    sensitive << ( ap_sig_cseq_ST_st54_fsm_53 );
    sensitive << ( derived_key_valid_preg );

    SC_METHOD(thread_device_key_ocm_addr_ap_vld_in_sig);
    sensitive << ( device_key_ocm_addr_ap_vld );
    sensitive << ( device_key_ocm_addr_ap_vld_preg );

    SC_METHOD(thread_device_key_ocm_addr_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( device_key_ocm_addr_ap_vld );

    SC_METHOD(thread_device_key_ocm_addr_in_sig);
    sensitive << ( device_key_ocm_addr );
    sensitive << ( device_key_ocm_addr_preg );
    sensitive << ( device_key_ocm_addr_ap_vld );

    SC_METHOD(thread_encrypted_header_new_V_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_6_fu_626_p1 );

    SC_METHOD(thread_encrypted_header_new_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_encrypted_header_new_storage_V_address0);
    sensitive << ( tmp_6_reg_732 );
    sensitive << ( tmp_reg_742 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_encrypted_header_new_storage_V_ce0);
    sensitive << ( tmp_reg_742 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_encrypted_header_new_storage_V_we0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_encrypted_header_old_V_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_3_fu_609_p1 );

    SC_METHOD(thread_encrypted_header_old_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_encrypted_header_old_storage_V_address0);
    sensitive << ( tmp_3_reg_714 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_encrypted_header_old_storage_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_encrypted_header_old_storage_V_we0);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_exitcond1_fu_597_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( i_reg_367 );

    SC_METHOD(thread_exitcond_fu_614_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( i_1_reg_378 );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_fu_503_ap_ce);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st31_fsm_30 );
    sensitive << ( grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done );
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_reg_742 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st30_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_st54_fsm_53 );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_fu_503_ap_start);
    sensitive << ( ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_fu_503_inptext_V_read);
    sensitive << ( grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start);
    sensitive << ( ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt);
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start);
    sensitive << ( ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0);
    sensitive << ( tmp_reg_742 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( encrypted_header_old_storage_V_q0 );
    sensitive << ( encrypted_header_new_storage_V_q0 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );

    SC_METHOD(thread_grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V);
    sensitive << ( tag_header_old_V_in_sig );
    sensitive << ( tag_header_new_V_in_sig );
    sensitive << ( tmp_reg_742 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );

    SC_METHOD(thread_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start);
    sensitive << ( ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start );

    SC_METHOD(thread_grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V);
    sensitive << ( ap_sig_cseq_ST_st31_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );

    SC_METHOD(thread_grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V);
    sensitive << ( reg_569 );
    sensitive << ( ap_sig_cseq_ST_st31_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );

    SC_METHOD(thread_i_2_fu_603_p2);
    sensitive << ( i_reg_367 );

    SC_METHOD(thread_i_3_fu_620_p2);
    sensitive << ( i_1_reg_378 );

    SC_METHOD(thread_iv_V_ap_vld_in_sig);
    sensitive << ( iv_V_ap_vld );
    sensitive << ( iv_V_ap_vld_preg );

    SC_METHOD(thread_iv_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( iv_V_ap_vld );

    SC_METHOD(thread_iv_V_in_sig);
    sensitive << ( iv_V );
    sensitive << ( iv_V_preg );
    sensitive << ( iv_V_ap_vld );

    SC_METHOD(thread_iv_out_valid);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( iv_out_valid_preg );

    SC_METHOD(thread_key_attempts_1_fu_660_p2);
    sensitive << ( key_attempts_fu_174 );

    SC_METHOD(thread_master_key_out_V);
    sensitive << ( grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( master_key_old_storage_V_reg_698 );
    sensitive << ( master_key_out_V_preg );

    SC_METHOD(thread_master_key_out_valid);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( master_key_out_valid_preg );

    SC_METHOD(thread_ocm_V_address);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_196 );
    sensitive << ( tmp_2_fu_586_p1 );

    SC_METHOD(thread_ocm_V_dataout);

    SC_METHOD(thread_ocm_V_req_din);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_196 );

    SC_METHOD(thread_ocm_V_req_write);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_196 );

    SC_METHOD(thread_ocm_V_rsp_read);
    sensitive << ( ocm_V_rsp_empty_n );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_ocm_V_size);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_196 );

    SC_METHOD(thread_out_V_fu_643_p3);
    sensitive << ( tmp_4_fu_640_p1 );

    SC_METHOD(thread_reset_key_out);
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_8_fu_634_p2 );

    SC_METHOD(thread_tag_header_new_V_ap_vld_in_sig);
    sensitive << ( tag_header_new_V_ap_vld );
    sensitive << ( tag_header_new_V_ap_vld_preg );

    SC_METHOD(thread_tag_header_new_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tag_header_new_V_ap_vld );

    SC_METHOD(thread_tag_header_new_V_in_sig);
    sensitive << ( tag_header_new_V );
    sensitive << ( tag_header_new_V_preg );
    sensitive << ( tag_header_new_V_ap_vld );

    SC_METHOD(thread_tag_header_old_V_ap_vld_in_sig);
    sensitive << ( tag_header_old_V_ap_vld );
    sensitive << ( tag_header_old_V_ap_vld_preg );

    SC_METHOD(thread_tag_header_old_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tag_header_old_V_ap_vld );

    SC_METHOD(thread_tag_header_old_V_in_sig);
    sensitive << ( tag_header_old_V );
    sensitive << ( tag_header_old_V_preg );
    sensitive << ( tag_header_old_V_ap_vld );

    SC_METHOD(thread_tmp_1_fu_576_p4);
    sensitive << ( device_key_ocm_addr_in_sig );

    SC_METHOD(thread_tmp_2_fu_586_p1);
    sensitive << ( tmp_1_fu_576_p4 );

    SC_METHOD(thread_tmp_3_fu_609_p1);
    sensitive << ( i_reg_367 );

    SC_METHOD(thread_tmp_4_fu_640_p1);
    sensitive << ( p_Val2_s_reg_770 );

    SC_METHOD(thread_tmp_6_fu_626_p1);
    sensitive << ( i_1_reg_378 );

    SC_METHOD(thread_tmp_8_fu_634_p2);
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( key_attempts_fu_174 );

    SC_METHOD(thread_tmp_9_fu_651_p2);
    sensitive << ( user_key_V );
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_8_fu_634_p2 );
    sensitive << ( out_V_fu_643_p3 );

    SC_METHOD(thread_user_key_valid_o);
    sensitive << ( user_key_valid_i );
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );
    sensitive << ( tmp_8_fu_634_p2 );

    SC_METHOD(thread_user_key_valid_read_read_fu_252_p2);
    sensitive << ( user_key_valid_i );
    sensitive << ( ap_sig_cseq_ST_st53_fsm_52 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ocm_V_rsp_empty_n );
    sensitive << ( grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done );
    sensitive << ( ap_sig_196 );
    sensitive << ( exitcond1_fu_597_p2 );
    sensitive << ( exitcond_fu_614_p2 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return );
    sensitive << ( tmp_reg_742 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done );
    sensitive << ( user_key_valid_read_read_fu_252_p2 );
    sensitive << ( tmp_8_fu_634_p2 );
    sensitive << ( grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000001";
    device_key_ocm_addr_preg = "00000000000000000000000000000000";
    device_key_ocm_addr_ap_vld_preg = SC_LOGIC_0;
    iv_V_preg = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    iv_V_ap_vld_preg = SC_LOGIC_0;
    tag_header_old_V_preg = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tag_header_old_V_ap_vld_preg = SC_LOGIC_0;
    tag_header_new_V_preg = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tag_header_new_V_ap_vld_preg = SC_LOGIC_0;
    ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = SC_LOGIC_0;
    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = SC_LOGIC_0;
    ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start = SC_LOGIC_0;
    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = SC_LOGIC_0;
    master_key_out_V_preg = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    master_key_out_valid_preg = SC_LOGIC_0;
    iv_out_valid_preg = SC_LOGIC_0;
    decrypted_new_header_out_preg = SC_LOGIC_0;
    decrypted_new_header_out_valid_preg = SC_LOGIC_0;
    derived_key_valid_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "secure_enclave_key_store_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, device_key_ocm_addr, "(port)device_key_ocm_addr");
    sc_trace(mVcdFile, device_key_ocm_addr_ap_vld, "(port)device_key_ocm_addr_ap_vld");
    sc_trace(mVcdFile, ocm_V_req_din, "(port)ocm_V_req_din");
    sc_trace(mVcdFile, ocm_V_req_full_n, "(port)ocm_V_req_full_n");
    sc_trace(mVcdFile, ocm_V_req_write, "(port)ocm_V_req_write");
    sc_trace(mVcdFile, ocm_V_rsp_empty_n, "(port)ocm_V_rsp_empty_n");
    sc_trace(mVcdFile, ocm_V_rsp_read, "(port)ocm_V_rsp_read");
    sc_trace(mVcdFile, ocm_V_address, "(port)ocm_V_address");
    sc_trace(mVcdFile, ocm_V_datain, "(port)ocm_V_datain");
    sc_trace(mVcdFile, ocm_V_dataout, "(port)ocm_V_dataout");
    sc_trace(mVcdFile, ocm_V_size, "(port)ocm_V_size");
    sc_trace(mVcdFile, iv_V, "(port)iv_V");
    sc_trace(mVcdFile, iv_V_ap_vld, "(port)iv_V_ap_vld");
    sc_trace(mVcdFile, encrypted_header_old_V_address0, "(port)encrypted_header_old_V_address0");
    sc_trace(mVcdFile, encrypted_header_old_V_ce0, "(port)encrypted_header_old_V_ce0");
    sc_trace(mVcdFile, encrypted_header_old_V_q0, "(port)encrypted_header_old_V_q0");
    sc_trace(mVcdFile, tag_header_old_V, "(port)tag_header_old_V");
    sc_trace(mVcdFile, tag_header_old_V_ap_vld, "(port)tag_header_old_V_ap_vld");
    sc_trace(mVcdFile, encrypted_header_new_V_address0, "(port)encrypted_header_new_V_address0");
    sc_trace(mVcdFile, encrypted_header_new_V_ce0, "(port)encrypted_header_new_V_ce0");
    sc_trace(mVcdFile, encrypted_header_new_V_q0, "(port)encrypted_header_new_V_q0");
    sc_trace(mVcdFile, tag_header_new_V, "(port)tag_header_new_V");
    sc_trace(mVcdFile, tag_header_new_V_ap_vld, "(port)tag_header_new_V_ap_vld");
    sc_trace(mVcdFile, user_key_V, "(port)user_key_V");
    sc_trace(mVcdFile, user_key_valid_i, "(port)user_key_valid_i");
    sc_trace(mVcdFile, user_key_valid_o, "(port)user_key_valid_o");
    sc_trace(mVcdFile, writing_done_in, "(port)writing_done_in");
    sc_trace(mVcdFile, derived_key_out_V, "(port)derived_key_out_V");
    sc_trace(mVcdFile, derived_key_valid, "(port)derived_key_valid");
    sc_trace(mVcdFile, master_key_out_V, "(port)master_key_out_V");
    sc_trace(mVcdFile, master_key_out_valid, "(port)master_key_out_valid");
    sc_trace(mVcdFile, iv_out_V, "(port)iv_out_V");
    sc_trace(mVcdFile, iv_out_valid, "(port)iv_out_valid");
    sc_trace(mVcdFile, decrypted_new_header_out, "(port)decrypted_new_header_out");
    sc_trace(mVcdFile, decrypted_new_header_out_valid, "(port)decrypted_new_header_out_valid");
    sc_trace(mVcdFile, reset_key_out, "(port)reset_key_out");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_69, "ap_sig_69");
    sc_trace(mVcdFile, device_key_ocm_addr_in_sig, "device_key_ocm_addr_in_sig");
    sc_trace(mVcdFile, device_key_ocm_addr_preg, "device_key_ocm_addr_preg");
    sc_trace(mVcdFile, device_key_ocm_addr_ap_vld_in_sig, "device_key_ocm_addr_ap_vld_in_sig");
    sc_trace(mVcdFile, device_key_ocm_addr_ap_vld_preg, "device_key_ocm_addr_ap_vld_preg");
    sc_trace(mVcdFile, iv_V_in_sig, "iv_V_in_sig");
    sc_trace(mVcdFile, iv_V_preg, "iv_V_preg");
    sc_trace(mVcdFile, iv_V_ap_vld_in_sig, "iv_V_ap_vld_in_sig");
    sc_trace(mVcdFile, iv_V_ap_vld_preg, "iv_V_ap_vld_preg");
    sc_trace(mVcdFile, tag_header_old_V_in_sig, "tag_header_old_V_in_sig");
    sc_trace(mVcdFile, tag_header_old_V_preg, "tag_header_old_V_preg");
    sc_trace(mVcdFile, tag_header_old_V_ap_vld_in_sig, "tag_header_old_V_ap_vld_in_sig");
    sc_trace(mVcdFile, tag_header_old_V_ap_vld_preg, "tag_header_old_V_ap_vld_preg");
    sc_trace(mVcdFile, tag_header_new_V_in_sig, "tag_header_new_V_in_sig");
    sc_trace(mVcdFile, tag_header_new_V_preg, "tag_header_new_V_preg");
    sc_trace(mVcdFile, tag_header_new_V_ap_vld_in_sig, "tag_header_new_V_ap_vld_in_sig");
    sc_trace(mVcdFile, tag_header_new_V_ap_vld_preg, "tag_header_new_V_ap_vld_preg");
    sc_trace(mVcdFile, device_key_ocm_addr_blk_n, "device_key_ocm_addr_blk_n");
    sc_trace(mVcdFile, iv_V_blk_n, "iv_V_blk_n");
    sc_trace(mVcdFile, tag_header_old_V_blk_n, "tag_header_old_V_blk_n");
    sc_trace(mVcdFile, tag_header_new_V_blk_n, "tag_header_new_V_blk_n");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return, "grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return");
    sc_trace(mVcdFile, reg_569, "reg_569");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st31_fsm_30, "ap_sig_cseq_ST_st31_fsm_30");
    sc_trace(mVcdFile, ap_sig_162, "ap_sig_162");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done, "grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st32_fsm_31, "ap_sig_cseq_ST_st32_fsm_31");
    sc_trace(mVcdFile, ap_sig_173, "ap_sig_173");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st33_fsm_32, "ap_sig_cseq_ST_st33_fsm_32");
    sc_trace(mVcdFile, ap_sig_182, "ap_sig_182");
    sc_trace(mVcdFile, ap_sig_196, "ap_sig_196");
    sc_trace(mVcdFile, master_key_old_storage_V_reg_698, "master_key_old_storage_V_reg_698");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_212, "ap_sig_212");
    sc_trace(mVcdFile, i_2_fu_603_p2, "i_2_fu_603_p2");
    sc_trace(mVcdFile, i_2_reg_709, "i_2_reg_709");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_224, "ap_sig_224");
    sc_trace(mVcdFile, tmp_3_fu_609_p1, "tmp_3_fu_609_p1");
    sc_trace(mVcdFile, tmp_3_reg_714, "tmp_3_reg_714");
    sc_trace(mVcdFile, exitcond1_fu_597_p2, "exitcond1_fu_597_p2");
    sc_trace(mVcdFile, i_3_fu_620_p2, "i_3_fu_620_p2");
    sc_trace(mVcdFile, i_3_reg_727, "i_3_reg_727");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_241, "ap_sig_241");
    sc_trace(mVcdFile, tmp_6_fu_626_p1, "tmp_6_fu_626_p1");
    sc_trace(mVcdFile, tmp_6_reg_732, "tmp_6_reg_732");
    sc_trace(mVcdFile, exitcond_fu_614_p2, "exitcond_fu_614_p2");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return");
    sc_trace(mVcdFile, tmp_reg_742, "tmp_reg_742");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_257, "ap_sig_257");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_ap_return, "grp_secure_enclave_key_store_aes_fu_503_ap_return");
    sc_trace(mVcdFile, hash_key_V_reg_754, "hash_key_V_reg_754");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st29_fsm_28, "ap_sig_cseq_ST_st29_fsm_28");
    sc_trace(mVcdFile, ap_sig_270, "ap_sig_270");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st51_fsm_50, "ap_sig_cseq_ST_st51_fsm_50");
    sc_trace(mVcdFile, ap_sig_279, "ap_sig_279");
    sc_trace(mVcdFile, decrypted_header_storage_V_q0, "decrypted_header_storage_V_q0");
    sc_trace(mVcdFile, p_Val2_s_reg_770, "p_Val2_s_reg_770");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st52_fsm_51, "ap_sig_cseq_ST_st52_fsm_51");
    sc_trace(mVcdFile, ap_sig_290, "ap_sig_290");
    sc_trace(mVcdFile, decrypted_header_storage_V_q1, "decrypted_header_storage_V_q1");
    sc_trace(mVcdFile, lhs_V_reg_775, "lhs_V_reg_775");
    sc_trace(mVcdFile, user_key_valid_read_read_fu_252_p2, "user_key_valid_read_read_fu_252_p2");
    sc_trace(mVcdFile, user_key_valid_read_reg_780, "user_key_valid_read_reg_780");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st53_fsm_52, "ap_sig_cseq_ST_st53_fsm_52");
    sc_trace(mVcdFile, ap_sig_301, "ap_sig_301");
    sc_trace(mVcdFile, tmp_9_fu_651_p2, "tmp_9_fu_651_p2");
    sc_trace(mVcdFile, tmp_9_reg_787, "tmp_9_reg_787");
    sc_trace(mVcdFile, tmp_8_fu_634_p2, "tmp_8_fu_634_p2");
    sc_trace(mVcdFile, encrypted_header_old_storage_V_address0, "encrypted_header_old_storage_V_address0");
    sc_trace(mVcdFile, encrypted_header_old_storage_V_ce0, "encrypted_header_old_storage_V_ce0");
    sc_trace(mVcdFile, encrypted_header_old_storage_V_we0, "encrypted_header_old_storage_V_we0");
    sc_trace(mVcdFile, encrypted_header_old_storage_V_q0, "encrypted_header_old_storage_V_q0");
    sc_trace(mVcdFile, encrypted_header_new_storage_V_address0, "encrypted_header_new_storage_V_address0");
    sc_trace(mVcdFile, encrypted_header_new_storage_V_ce0, "encrypted_header_new_storage_V_ce0");
    sc_trace(mVcdFile, encrypted_header_new_storage_V_we0, "encrypted_header_new_storage_V_we0");
    sc_trace(mVcdFile, encrypted_header_new_storage_V_q0, "encrypted_header_new_storage_V_q0");
    sc_trace(mVcdFile, decrypted_header_storage_V_address0, "decrypted_header_storage_V_address0");
    sc_trace(mVcdFile, decrypted_header_storage_V_ce0, "decrypted_header_storage_V_ce0");
    sc_trace(mVcdFile, decrypted_header_storage_V_address1, "decrypted_header_storage_V_address1");
    sc_trace(mVcdFile, decrypted_header_storage_V_ce1, "decrypted_header_storage_V_ce1");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V, "grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return, "grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_ap_start, "grp_secure_enclave_key_store_aes_fu_503_ap_start");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_ap_done, "grp_secure_enclave_key_store_aes_fu_503_ap_done");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_ap_idle, "grp_secure_enclave_key_store_aes_fu_503_ap_idle");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_ap_ready, "grp_secure_enclave_key_store_aes_fu_503_ap_ready");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_ap_ce, "grp_secure_enclave_key_store_aes_fu_503_ap_ce");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_aes_fu_503_inptext_V_read, "grp_secure_enclave_key_store_aes_fu_503_inptext_V_read");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_401, "ap_sig_401");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st34_fsm_33, "ap_sig_cseq_ST_st34_fsm_33");
    sc_trace(mVcdFile, ap_sig_537, "ap_sig_537");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_659, "ap_sig_659");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_669, "ap_sig_669");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_678, "ap_sig_678");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_687, "ap_sig_687");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st30_fsm_29, "ap_sig_cseq_ST_st30_fsm_29");
    sc_trace(mVcdFile, ap_sig_695, "ap_sig_695");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st54_fsm_53, "ap_sig_cseq_ST_st54_fsm_53");
    sc_trace(mVcdFile, ap_sig_706, "ap_sig_706");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start, "grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle, "grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready, "grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V, "grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V");
    sc_trace(mVcdFile, grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V, "grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V");
    sc_trace(mVcdFile, i_reg_367, "i_reg_367");
    sc_trace(mVcdFile, i_1_reg_378, "i_1_reg_378");
    sc_trace(mVcdFile, decrypted_new_header_reg_389, "decrypted_new_header_reg_389");
    sc_trace(mVcdFile, ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start, "ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start, "ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start, "ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_nseq_ST_st10_fsm_9, "ap_sig_nseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_2768, "ap_sig_2768");
    sc_trace(mVcdFile, ap_sig_nseq_ST_st33_fsm_32, "ap_sig_nseq_ST_st33_fsm_32");
    sc_trace(mVcdFile, ap_sig_2776, "ap_sig_2776");
    sc_trace(mVcdFile, ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start, "ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start");
    sc_trace(mVcdFile, tmp_2_fu_586_p1, "tmp_2_fu_586_p1");
    sc_trace(mVcdFile, key_attempts_fu_174, "key_attempts_fu_174");
    sc_trace(mVcdFile, key_attempts_1_fu_660_p2, "key_attempts_1_fu_660_p2");
    sc_trace(mVcdFile, master_key_out_V_preg, "master_key_out_V_preg");
    sc_trace(mVcdFile, master_key_out_valid_preg, "master_key_out_valid_preg");
    sc_trace(mVcdFile, iv_out_valid_preg, "iv_out_valid_preg");
    sc_trace(mVcdFile, decrypted_new_header_out_preg, "decrypted_new_header_out_preg");
    sc_trace(mVcdFile, decrypted_new_header_out_valid_preg, "decrypted_new_header_out_valid_preg");
    sc_trace(mVcdFile, derived_key_valid_preg, "derived_key_valid_preg");
    sc_trace(mVcdFile, tmp_1_fu_576_p4, "tmp_1_fu_576_p4");
    sc_trace(mVcdFile, tmp_4_fu_640_p1, "tmp_4_fu_640_p1");
    sc_trace(mVcdFile, out_V_fu_643_p3, "out_V_fu_643_p3");
#endif

    }
    mHdltvinHandle.open("secure_enclave_key_store.hdltvin.dat");
    mHdltvoutHandle.open("secure_enclave_key_store.hdltvout.dat");
}

secure_enclave_key_store::~secure_enclave_key_store() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete encrypted_header_old_storage_V_U;
    delete encrypted_header_new_storage_V_U;
    delete decrypted_header_storage_V_U;
    delete ct_V_assign_U;
    delete grp_secure_enclave_key_store_aes_gcm_d_fu_403;
    delete grp_secure_enclave_key_store_aes_gcm_cipher_fu_452;
    delete grp_secure_enclave_key_store_aes_fu_503;
    delete grp_secure_enclave_key_store_ghash_iteration_fu_550;
}

void secure_enclave_key_store::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_nseq_ST_st10_fsm_9.read()) && 
              (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_nseq_ST_st33_fsm_32.read())))) {
            ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_secure_enclave_key_store_aes_fu_503_ap_ready.read())) {
            ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = ap_const_logic_0;
    } else {
        if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read()))) {
            ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready.read())) {
            ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_614_p2.read())))) {
            ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready.read())) {
            ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st31_fsm_30.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read())) || 
             (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st30_fsm_29.read()))) {
            ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready.read())) {
            ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        decrypted_new_header_out_preg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
            decrypted_new_header_out_preg =  (sc_logic) (decrypted_new_header_reg_389.read()[0]);
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        decrypted_new_header_out_valid_preg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
            decrypted_new_header_out_valid_preg =  (sc_logic) (ap_const_lv1_1[0]);
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return.read()))) {
        decrypted_new_header_reg_389 = ap_const_lv1_0;
    } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read())))) {
        decrypted_new_header_reg_389 = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        derived_key_valid_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st54_fsm_53.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_reg_780.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_787.read()))) {
            derived_key_valid_preg =  (sc_logic) (ap_const_lv1_1[0]);
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        device_key_ocm_addr_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
            device_key_ocm_addr_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, device_key_ocm_addr_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())))) {
            device_key_ocm_addr_ap_vld_preg = device_key_ocm_addr_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        device_key_ocm_addr_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, device_key_ocm_addr_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())))) {
            device_key_ocm_addr_preg = device_key_ocm_addr.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_597_p2.read(), ap_const_lv1_0))) {
        i_1_reg_378 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        i_1_reg_378 = i_3_reg_727.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        i_reg_367 = i_2_reg_709.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(ocm_V_rsp_empty_n.read(), ap_const_logic_0))) {
        i_reg_367 = ap_const_lv9_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        iv_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
            iv_V_ap_vld_preg = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, iv_V_ap_vld.read()))) {
            iv_V_ap_vld_preg = iv_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        iv_V_preg = ap_const_lv128_lc_1;
    } else {
        if ((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
             esl_seteq<1,1,1>(ap_const_logic_1, iv_V_ap_vld.read()))) {
            iv_V_preg = iv_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        iv_out_valid_preg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
            iv_out_valid_preg =  (sc_logic) (ap_const_lv1_1[0]);
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_651_p2.read()))) {
        key_attempts_fu_174 = key_attempts_1_fu_660_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_651_p2.read())))) {
        key_attempts_fu_174 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        master_key_out_V_preg = ap_const_lv128_lc_1;
    } else {
        if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read()))) {
            master_key_out_V_preg = master_key_old_storage_V_reg_698.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        master_key_out_valid_preg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
            master_key_out_valid_preg =  (sc_logic) (ap_const_lv1_1[0]);
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tag_header_new_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
            tag_header_new_V_ap_vld_preg = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, tag_header_new_V_ap_vld.read()))) {
            tag_header_new_V_ap_vld_preg = tag_header_new_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tag_header_new_V_preg = ap_const_lv128_lc_1;
    } else {
        if ((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tag_header_new_V_ap_vld.read()))) {
            tag_header_new_V_preg = tag_header_new_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tag_header_old_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
            tag_header_old_V_ap_vld_preg = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, tag_header_old_V_ap_vld.read()))) {
            tag_header_old_V_ap_vld_preg = tag_header_old_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tag_header_old_V_preg = ap_const_lv128_lc_1;
    } else {
        if ((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
             esl_seteq<1,1,1>(ap_const_logic_1, tag_header_old_V_ap_vld.read()))) {
            tag_header_old_V_preg = tag_header_old_V.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        hash_key_V_reg_754 = grp_secure_enclave_key_store_aes_fu_503_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        i_2_reg_709 = i_2_fu_603_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        i_3_reg_727 = i_3_fu_620_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
        lhs_V_reg_775 = decrypted_header_storage_V_q1.read();
        p_Val2_s_reg_770 = decrypted_header_storage_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !esl_seteq<1,1,1>(ocm_V_rsp_empty_n.read(), ap_const_logic_0))) {
        master_key_old_storage_V_reg_698 = ocm_V_datain.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st31_fsm_30.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read())) || (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read())) || (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())))) {
        reg_569 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && esl_seteq<1,1,1>(exitcond1_fu_597_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_714 = tmp_3_fu_609_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_614_p2.read()))) {
        tmp_6_reg_732 = tmp_6_fu_626_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
        tmp_9_reg_787 = tmp_9_fu_651_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()))) {
        tmp_reg_742 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read())) {
        user_key_valid_read_reg_780 =  (sc_lv<1>) (user_key_valid_i.read());
    }
}

void secure_enclave_key_store::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_162() {
    ap_sig_162 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(30, 30));
}

void secure_enclave_key_store::thread_ap_sig_173() {
    ap_sig_173 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(31, 31));
}

void secure_enclave_key_store::thread_ap_sig_182() {
    ap_sig_182 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(32, 32));
}

void secure_enclave_key_store::thread_ap_sig_196() {
    ap_sig_196 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(tag_header_new_V_ap_vld_in_sig.read(), ap_const_logic_0) || esl_seteq<1,1,1>(tag_header_old_V_ap_vld_in_sig.read(), ap_const_logic_0) || esl_seteq<1,1,1>(iv_V_ap_vld_in_sig.read(), ap_const_logic_0) || esl_seteq<1,1,1>(device_key_ocm_addr_ap_vld_in_sig.read(), ap_const_logic_0));
}

void secure_enclave_key_store::thread_ap_sig_212() {
    ap_sig_212 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void secure_enclave_key_store::thread_ap_sig_224() {
    ap_sig_224 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void secure_enclave_key_store::thread_ap_sig_241() {
    ap_sig_241 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void secure_enclave_key_store::thread_ap_sig_257() {
    ap_sig_257 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void secure_enclave_key_store::thread_ap_sig_270() {
    ap_sig_270 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(28, 28));
}

void secure_enclave_key_store::thread_ap_sig_2768() {
    ap_sig_2768 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_NS_fsm.read().range(9, 9));
}

void secure_enclave_key_store::thread_ap_sig_2776() {
    ap_sig_2776 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_NS_fsm.read().range(32, 32));
}

void secure_enclave_key_store::thread_ap_sig_279() {
    ap_sig_279 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(50, 50));
}

void secure_enclave_key_store::thread_ap_sig_290() {
    ap_sig_290 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(51, 51));
}

void secure_enclave_key_store::thread_ap_sig_301() {
    ap_sig_301 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(52, 52));
}

void secure_enclave_key_store::thread_ap_sig_401() {
    ap_sig_401 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void secure_enclave_key_store::thread_ap_sig_537() {
    ap_sig_537 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(33, 33));
}

void secure_enclave_key_store::thread_ap_sig_659() {
    ap_sig_659 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void secure_enclave_key_store::thread_ap_sig_669() {
    ap_sig_669 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void secure_enclave_key_store::thread_ap_sig_678() {
    ap_sig_678 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void secure_enclave_key_store::thread_ap_sig_687() {
    ap_sig_687 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void secure_enclave_key_store::thread_ap_sig_69() {
    ap_sig_69 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void secure_enclave_key_store::thread_ap_sig_695() {
    ap_sig_695 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(29, 29));
}

void secure_enclave_key_store::thread_ap_sig_706() {
    ap_sig_706 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(53, 53));
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_401.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_69.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st29_fsm_28() {
    if (ap_sig_270.read()) {
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_659.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st30_fsm_29() {
    if (ap_sig_695.read()) {
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st31_fsm_30() {
    if (ap_sig_162.read()) {
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st32_fsm_31() {
    if (ap_sig_173.read()) {
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st33_fsm_32() {
    if (ap_sig_182.read()) {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st34_fsm_33() {
    if (ap_sig_537.read()) {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_212.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_224.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st51_fsm_50() {
    if (ap_sig_279.read()) {
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st52_fsm_51() {
    if (ap_sig_290.read()) {
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st53_fsm_52() {
    if (ap_sig_301.read()) {
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st54_fsm_53() {
    if (ap_sig_706.read()) {
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_669.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_241.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_678.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_257.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_687.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_nseq_ST_st10_fsm_9() {
    if (ap_sig_2768.read()) {
        ap_sig_nseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_nseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ap_sig_nseq_ST_st33_fsm_32() {
    if (ap_sig_2776.read()) {
        ap_sig_nseq_ST_st33_fsm_32 = ap_const_logic_1;
    } else {
        ap_sig_nseq_ST_st33_fsm_32 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_decrypted_header_storage_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
        decrypted_header_storage_V_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read())) {
        decrypted_header_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
                (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())))) {
        decrypted_header_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0.read();
    } else {
        decrypted_header_storage_V_address0 = "XXXXXXXX";
    }
}

void secure_enclave_key_store::thread_decrypted_header_storage_V_address1() {
    decrypted_header_storage_V_address1 =  (sc_lv<8>) (ap_const_lv64_1);
}

void secure_enclave_key_store::thread_decrypted_header_storage_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
        decrypted_header_storage_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read())) {
        decrypted_header_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
                (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())))) {
        decrypted_header_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0.read();
    } else {
        decrypted_header_storage_V_ce0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_decrypted_header_storage_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
        decrypted_header_storage_V_ce1 = ap_const_logic_1;
    } else {
        decrypted_header_storage_V_ce1 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_decrypted_new_header_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
        decrypted_new_header_out =  (sc_logic) (decrypted_new_header_reg_389.read()[0]);
    } else {
        decrypted_new_header_out = decrypted_new_header_out_preg.read();
    }
}

void secure_enclave_key_store::thread_decrypted_new_header_out_valid() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
        decrypted_new_header_out_valid =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        decrypted_new_header_out_valid = decrypted_new_header_out_valid_preg.read();
    }
}

void secure_enclave_key_store::thread_derived_key_out_V() {
    derived_key_out_V = (lhs_V_reg_775.read() ^ user_key_V.read());
}

void secure_enclave_key_store::thread_derived_key_valid() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st54_fsm_53.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_reg_780.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_787.read()))) {
        derived_key_valid =  (sc_logic) (ap_const_lv1_1[0]);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
        derived_key_valid =  (sc_logic) (ap_const_lv1_0[0]);
    } else {
        derived_key_valid = derived_key_valid_preg.read();
    }
}

void secure_enclave_key_store::thread_device_key_ocm_addr_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, device_key_ocm_addr_ap_vld.read())) {
        device_key_ocm_addr_ap_vld_in_sig = device_key_ocm_addr_ap_vld.read();
    } else {
        device_key_ocm_addr_ap_vld_in_sig = device_key_ocm_addr_ap_vld_preg.read();
    }
}

void secure_enclave_key_store::thread_device_key_ocm_addr_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        device_key_ocm_addr_blk_n = device_key_ocm_addr_ap_vld.read();
    } else {
        device_key_ocm_addr_blk_n = ap_const_logic_1;
    }
}

void secure_enclave_key_store::thread_device_key_ocm_addr_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, device_key_ocm_addr_ap_vld.read())) {
        device_key_ocm_addr_in_sig = device_key_ocm_addr.read();
    } else {
        device_key_ocm_addr_in_sig = device_key_ocm_addr_preg.read();
    }
}

void secure_enclave_key_store::thread_encrypted_header_new_V_address0() {
    encrypted_header_new_V_address0 =  (sc_lv<8>) (tmp_6_fu_626_p1.read());
}

void secure_enclave_key_store::thread_encrypted_header_new_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        encrypted_header_new_V_ce0 = ap_const_logic_1;
    } else {
        encrypted_header_new_V_ce0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_encrypted_header_new_storage_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        encrypted_header_new_storage_V_address0 =  (sc_lv<8>) (tmp_6_reg_732.read());
    } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()))) {
        encrypted_header_new_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0.read();
    } else {
        encrypted_header_new_storage_V_address0 = "XXXXXXXX";
    }
}

void secure_enclave_key_store::thread_encrypted_header_new_storage_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        encrypted_header_new_storage_V_ce0 = ap_const_logic_1;
    } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()))) {
        encrypted_header_new_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0.read();
    } else {
        encrypted_header_new_storage_V_ce0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_encrypted_header_new_storage_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        encrypted_header_new_storage_V_we0 = ap_const_logic_1;
    } else {
        encrypted_header_new_storage_V_we0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_encrypted_header_old_V_address0() {
    encrypted_header_old_V_address0 =  (sc_lv<8>) (tmp_3_fu_609_p1.read());
}

void secure_enclave_key_store::thread_encrypted_header_old_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        encrypted_header_old_V_ce0 = ap_const_logic_1;
    } else {
        encrypted_header_old_V_ce0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_encrypted_header_old_storage_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        encrypted_header_old_storage_V_address0 =  (sc_lv<8>) (tmp_3_reg_714.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        encrypted_header_old_storage_V_address0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0.read();
    } else {
        encrypted_header_old_storage_V_address0 = "XXXXXXXX";
    }
}

void secure_enclave_key_store::thread_encrypted_header_old_storage_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        encrypted_header_old_storage_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        encrypted_header_old_storage_V_ce0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0.read();
    } else {
        encrypted_header_old_storage_V_ce0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_encrypted_header_old_storage_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        encrypted_header_old_storage_V_we0 = ap_const_logic_1;
    } else {
        encrypted_header_old_storage_V_we0 = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_exitcond1_fu_597_p2() {
    exitcond1_fu_597_p2 = (!i_reg_367.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_367.read() == ap_const_lv9_100);
}

void secure_enclave_key_store::thread_exitcond_fu_614_p2() {
    exitcond_fu_614_p2 = (!i_1_reg_378.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_378.read() == ap_const_lv9_100);
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_fu_503_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st31_fsm_30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st30_fsm_29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st54_fsm_53.read()))) {
        grp_secure_enclave_key_store_aes_fu_503_ap_ce = ap_const_logic_0;
    } else {
        grp_secure_enclave_key_store_aes_fu_503_ap_ce = ap_const_logic_1;
    }
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_fu_503_ap_start() {
    grp_secure_enclave_key_store_aes_fu_503_ap_start = ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start.read();
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_fu_503_inptext_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        grp_secure_enclave_key_store_aes_fu_503_inptext_V_read = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        grp_secure_enclave_key_store_aes_fu_503_inptext_V_read = ap_const_lv128_lc_1;
    } else {
        grp_secure_enclave_key_store_aes_fu_503_inptext_V_read =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start() {
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start = ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start.read();
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt() {
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt =  (sc_logic) (ap_const_lv1_1[0]);
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start() {
    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start = ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start.read();
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0() {
    if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()))) {
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 = encrypted_header_new_storage_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 = encrypted_header_old_storage_V_q0.read();
    } else {
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V() {
    if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()))) {
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V = tag_header_new_V_in_sig.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V = tag_header_old_V_in_sig.read();
    } else {
        grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start() {
    grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start = ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start.read();
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V = ap_const_lv128_lc_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st31_fsm_30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read()))) {
        grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V = ap_const_lv128_lc_1;
    } else {
        grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void secure_enclave_key_store::thread_grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read()))) {
        grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V = reg_569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st31_fsm_30.read())) {
        grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V = ap_const_lv128_lc_1;
    } else {
        grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void secure_enclave_key_store::thread_i_2_fu_603_p2() {
    i_2_fu_603_p2 = (!i_reg_367.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_367.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void secure_enclave_key_store::thread_i_3_fu_620_p2() {
    i_3_fu_620_p2 = (!i_1_reg_378.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_1_reg_378.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void secure_enclave_key_store::thread_iv_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, iv_V_ap_vld.read())) {
        iv_V_ap_vld_in_sig = iv_V_ap_vld.read();
    } else {
        iv_V_ap_vld_in_sig = iv_V_ap_vld_preg.read();
    }
}

void secure_enclave_key_store::thread_iv_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        iv_V_blk_n = iv_V_ap_vld.read();
    } else {
        iv_V_blk_n = ap_const_logic_1;
    }
}

void secure_enclave_key_store::thread_iv_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, iv_V_ap_vld.read())) {
        iv_V_in_sig = iv_V.read();
    } else {
        iv_V_in_sig = iv_V_preg.read();
    }
}

void secure_enclave_key_store::thread_iv_out_valid() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
        iv_out_valid =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        iv_out_valid = iv_out_valid_preg.read();
    }
}

void secure_enclave_key_store::thread_key_attempts_1_fu_660_p2() {
    key_attempts_1_fu_660_p2 = (!key_attempts_fu_174.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(key_attempts_fu_174.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void secure_enclave_key_store::thread_master_key_out_V() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read()))) {
        master_key_out_V = master_key_old_storage_V_reg_698.read();
    } else {
        master_key_out_V = master_key_out_V_preg.read();
    }
}

void secure_enclave_key_store::thread_master_key_out_valid() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read())) {
        master_key_out_valid =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        master_key_out_valid = master_key_out_valid_preg.read();
    }
}

void secure_enclave_key_store::thread_ocm_V_address() {
    ocm_V_address =  (sc_lv<32>) (tmp_2_fu_586_p1.read());
}

void secure_enclave_key_store::thread_ocm_V_dataout() {
    ocm_V_dataout = ap_const_lv128_lc_1;
}

void secure_enclave_key_store::thread_ocm_V_req_din() {
    ocm_V_req_din = ap_const_logic_0;
}

void secure_enclave_key_store::thread_ocm_V_req_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !ap_sig_196.read())) {
        ocm_V_req_write = ap_const_logic_1;
    } else {
        ocm_V_req_write = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ocm_V_rsp_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ocm_V_rsp_empty_n.read(), ap_const_logic_0))) {
        ocm_V_rsp_read = ap_const_logic_1;
    } else {
        ocm_V_rsp_read = ap_const_logic_0;
    }
}

void secure_enclave_key_store::thread_ocm_V_size() {
    ocm_V_size = ap_const_lv32_1;
}

void secure_enclave_key_store::thread_out_V_fu_643_p3() {
    out_V_fu_643_p3 = esl_concat<104,24>(ap_const_lv104_0, tmp_4_fu_640_p1.read());
}

void secure_enclave_key_store::thread_reset_key_out() {
    reset_key_out =  (sc_logic) (ap_const_lv1_1[0]);
}

void secure_enclave_key_store::thread_tag_header_new_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tag_header_new_V_ap_vld.read())) {
        tag_header_new_V_ap_vld_in_sig = tag_header_new_V_ap_vld.read();
    } else {
        tag_header_new_V_ap_vld_in_sig = tag_header_new_V_ap_vld_preg.read();
    }
}

void secure_enclave_key_store::thread_tag_header_new_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tag_header_new_V_blk_n = tag_header_new_V_ap_vld.read();
    } else {
        tag_header_new_V_blk_n = ap_const_logic_1;
    }
}

void secure_enclave_key_store::thread_tag_header_new_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tag_header_new_V_ap_vld.read())) {
        tag_header_new_V_in_sig = tag_header_new_V.read();
    } else {
        tag_header_new_V_in_sig = tag_header_new_V_preg.read();
    }
}

void secure_enclave_key_store::thread_tag_header_old_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tag_header_old_V_ap_vld.read())) {
        tag_header_old_V_ap_vld_in_sig = tag_header_old_V_ap_vld.read();
    } else {
        tag_header_old_V_ap_vld_in_sig = tag_header_old_V_ap_vld_preg.read();
    }
}

void secure_enclave_key_store::thread_tag_header_old_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tag_header_old_V_blk_n = tag_header_old_V_ap_vld.read();
    } else {
        tag_header_old_V_blk_n = ap_const_logic_1;
    }
}

void secure_enclave_key_store::thread_tag_header_old_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, tag_header_old_V_ap_vld.read())) {
        tag_header_old_V_in_sig = tag_header_old_V.read();
    } else {
        tag_header_old_V_in_sig = tag_header_old_V_preg.read();
    }
}

void secure_enclave_key_store::thread_tmp_1_fu_576_p4() {
    tmp_1_fu_576_p4 = device_key_ocm_addr_in_sig.read().range(31, 4);
}

void secure_enclave_key_store::thread_tmp_2_fu_586_p1() {
    tmp_2_fu_586_p1 = esl_zext<64,28>(tmp_1_fu_576_p4.read());
}

void secure_enclave_key_store::thread_tmp_3_fu_609_p1() {
    tmp_3_fu_609_p1 = esl_zext<64,9>(i_reg_367.read());
}

void secure_enclave_key_store::thread_tmp_4_fu_640_p1() {
    tmp_4_fu_640_p1 = p_Val2_s_reg_770.read().range(24-1, 0);
}

void secure_enclave_key_store::thread_tmp_6_fu_626_p1() {
    tmp_6_fu_626_p1 = esl_zext<64,9>(i_1_reg_378.read());
}

void secure_enclave_key_store::thread_tmp_8_fu_634_p2() {
    tmp_8_fu_634_p2 = (!key_attempts_fu_174.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): (sc_bigint<32>(key_attempts_fu_174.read()) > sc_bigint<32>(ap_const_lv32_2));
}

void secure_enclave_key_store::thread_tmp_9_fu_651_p2() {
    tmp_9_fu_651_p2 = (!out_V_fu_643_p3.read().is_01() || !user_key_V.read().is_01())? sc_lv<1>(): sc_lv<1>(out_V_fu_643_p3.read() == user_key_V.read());
}

void secure_enclave_key_store::thread_user_key_valid_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st53_fsm_52.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
        user_key_valid_o =  (sc_logic) (ap_const_lv1_0[0]);
    } else {
        user_key_valid_o = user_key_valid_i.read();
    }
}

void secure_enclave_key_store::thread_user_key_valid_read_read_fu_252_p2() {
    user_key_valid_read_read_fu_252_p2 =  (sc_lv<1>) (user_key_valid_i.read());
}

void secure_enclave_key_store::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_196.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ocm_V_rsp_empty_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_597_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_614_p2.read())) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 128 : 
            if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return.read()))) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return.read()))) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_742.read()))) {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 1073741824 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read())) {
                ap_NS_fsm = ap_ST_st32_fsm_31;
            } else {
                ap_NS_fsm = ap_ST_st31_fsm_30;
            }
            break;
        case 2147483648 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read())) {
                ap_NS_fsm = ap_ST_st33_fsm_32;
            } else {
                ap_NS_fsm = ap_ST_st32_fsm_31;
            }
            break;
        case 4294967296 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done.read())) {
                ap_NS_fsm = ap_ST_st34_fsm_33;
            } else {
                ap_NS_fsm = ap_ST_st33_fsm_32;
            }
            break;
        case 8589934592 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done.read())) {
                ap_NS_fsm = ap_ST_st35_fsm_34;
            } else {
                ap_NS_fsm = ap_ST_st34_fsm_33;
            }
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
            break;
        case 4503599627370496 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, user_key_valid_read_read_fu_252_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_634_p2.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st54_fsm_53;
            }
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<54>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void secure_enclave_key_store::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"device_key_ocm_addr\" :  \"" << device_key_ocm_addr.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"device_key_ocm_addr_ap_vld\" :  \"" << device_key_ocm_addr_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ocm_V_req_din\" :  \"" << ocm_V_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ocm_V_req_full_n\" :  \"" << ocm_V_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ocm_V_req_write\" :  \"" << ocm_V_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ocm_V_rsp_empty_n\" :  \"" << ocm_V_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ocm_V_rsp_read\" :  \"" << ocm_V_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ocm_V_address\" :  \"" << ocm_V_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ocm_V_datain\" :  \"" << ocm_V_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ocm_V_dataout\" :  \"" << ocm_V_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ocm_V_size\" :  \"" << ocm_V_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"iv_V\" :  \"" << iv_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"iv_V_ap_vld\" :  \"" << iv_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"encrypted_header_old_V_address0\" :  \"" << encrypted_header_old_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"encrypted_header_old_V_ce0\" :  \"" << encrypted_header_old_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"encrypted_header_old_V_q0\" :  \"" << encrypted_header_old_V_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tag_header_old_V\" :  \"" << tag_header_old_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tag_header_old_V_ap_vld\" :  \"" << tag_header_old_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"encrypted_header_new_V_address0\" :  \"" << encrypted_header_new_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"encrypted_header_new_V_ce0\" :  \"" << encrypted_header_new_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"encrypted_header_new_V_q0\" :  \"" << encrypted_header_new_V_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tag_header_new_V\" :  \"" << tag_header_new_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tag_header_new_V_ap_vld\" :  \"" << tag_header_new_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"user_key_V\" :  \"" << user_key_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"user_key_valid_i\" :  \"" << user_key_valid_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"user_key_valid_o\" :  \"" << user_key_valid_o.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"writing_done_in\" :  \"" << writing_done_in.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"derived_key_out_V\" :  \"" << derived_key_out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"derived_key_valid\" :  \"" << derived_key_valid.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_key_out_V\" :  \"" << master_key_out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"master_key_out_valid\" :  \"" << master_key_out_valid.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"iv_out_V\" :  \"" << iv_out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"iv_out_valid\" :  \"" << iv_out_valid.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decrypted_new_header_out\" :  \"" << decrypted_new_header_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decrypted_new_header_out_valid\" :  \"" << decrypted_new_header_out_valid.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"reset_key_out\" :  \"" << reset_key_out.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

