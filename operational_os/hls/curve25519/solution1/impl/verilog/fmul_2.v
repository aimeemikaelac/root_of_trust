// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fmul_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        in2_address0,
        in2_ce0,
        in2_q0
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [63:0] output_r_d0;
output  [3:0] in_r_address0;
output   in_r_ce0;
input  [63:0] in_r_q0;
output  [3:0] in2_address0;
output   in2_ce0;
input  [63:0] in2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_325_i_fu_333_p2;
reg   [63:0] tmp_325_i_reg_790;
wire    ap_CS_fsm_state4;
wire   [4:0] t_addr_64_reg_800;
wire   [63:0] tmp_330_i_fu_357_p2;
reg   [63:0] tmp_330_i_reg_805;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_335_i_fu_381_p2;
reg   [63:0] tmp_335_i_reg_821;
wire    ap_CS_fsm_state6;
wire   [4:0] t_addr_68_reg_831;
wire   [63:0] tmp_340_i_fu_405_p2;
reg   [63:0] tmp_340_i_reg_836;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_345_i_fu_429_p2;
reg   [63:0] tmp_345_i_reg_852;
wire    ap_CS_fsm_state8;
wire   [4:0] t_addr_72_reg_862;
wire   [63:0] tmp_350_i_fu_453_p2;
reg   [63:0] tmp_350_i_reg_867;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_355_i_fu_477_p2;
reg   [63:0] tmp_355_i_reg_883;
wire    ap_CS_fsm_state10;
wire   [4:0] t_addr_76_reg_893;
wire   [4:0] t_addr_4_reg_898;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_360_i_fu_501_p2;
reg   [63:0] tmp_360_i_reg_904;
wire   [4:0] t_addr_77_reg_909;
wire   [63:0] tmp_365_i_fu_525_p2;
reg   [63:0] tmp_365_i_reg_915;
wire    ap_CS_fsm_state12;
reg   [4:0] t_addr_78_reg_923;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_i_fu_531_p2;
reg   [4:0] t_addr_79_reg_928;
wire   [37:0] tmp_397_i_i_fu_575_p4;
reg   [37:0] tmp_397_i_i_reg_934;
wire    ap_CS_fsm_state18;
wire   [63:0] t_q1;
reg   [63:0] t_load_88_reg_939;
wire   [3:0] i_fu_600_p2;
reg   [3:0] i_reg_944;
reg   [4:0] t_addr_80_reg_949;
wire   [63:0] v_assign_s_fu_701_p2;
reg   [63:0] v_assign_s_reg_954;
wire    ap_CS_fsm_state20;
reg   [37:0] tmp_397_i16_i_reg_959;
wire   [3:0] i_6_fu_768_p2;
reg   [3:0] i_6_reg_968;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_i4_fu_774_p1;
reg   [63:0] tmp_i4_reg_973;
wire   [0:0] exitcond_i_fu_762_p2;
reg   [4:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [63:0] t_d0;
wire   [63:0] t_q0;
reg   [4:0] t_address1;
reg    t_ce1;
reg    t_we1;
reg   [63:0] t_d1;
wire    grp_fproduct_2_fu_299_ap_start;
wire    grp_fproduct_2_fu_299_ap_done;
wire    grp_fproduct_2_fu_299_ap_idle;
wire    grp_fproduct_2_fu_299_ap_ready;
wire   [4:0] grp_fproduct_2_fu_299_output_r_address0;
wire    grp_fproduct_2_fu_299_output_r_ce0;
wire    grp_fproduct_2_fu_299_output_r_we0;
wire   [63:0] grp_fproduct_2_fu_299_output_r_d0;
wire   [3:0] grp_fproduct_2_fu_299_in2_address0;
wire    grp_fproduct_2_fu_299_in2_ce0;
wire   [3:0] grp_fproduct_2_fu_299_in_r_address0;
wire    grp_fproduct_2_fu_299_in_r_ce0;
reg   [3:0] i_i_reg_276;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state19;
reg   [3:0] i_i3_reg_288;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
reg    ap_reg_grp_fproduct_2_fu_299_ap_start;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_i_15_fu_537_p1;
wire   [63:0] tmp_369_i_fu_548_p1;
wire   [63:0] tmp_373_i_fu_606_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_367_i_fu_593_p2;
wire   [63:0] tmp_372_i_fu_663_p2;
wire   [63:0] tmp_374_i_fu_670_p2;
wire   [63:0] tmp_381_i_fu_749_p2;
wire   [63:0] tmp_382_i_fu_755_p2;
wire   [63:0] tmp_804_fu_315_p2;
wire   [63:0] tmp_805_fu_321_p2;
wire   [63:0] tmp3_fu_327_p2;
wire   [63:0] grp_fu_309_p2;
wire   [63:0] tmp_806_fu_339_p2;
wire   [63:0] tmp_807_fu_345_p2;
wire   [63:0] tmp5_fu_351_p2;
wire   [63:0] tmp_808_fu_363_p2;
wire   [63:0] tmp_809_fu_369_p2;
wire   [63:0] tmp7_fu_375_p2;
wire   [63:0] tmp_810_fu_387_p2;
wire   [63:0] tmp_811_fu_393_p2;
wire   [63:0] tmp9_fu_399_p2;
wire   [63:0] tmp_812_fu_411_p2;
wire   [63:0] tmp_813_fu_417_p2;
wire   [63:0] tmp11_fu_423_p2;
wire   [63:0] tmp_814_fu_435_p2;
wire   [63:0] tmp_815_fu_441_p2;
wire   [63:0] tmp13_fu_447_p2;
wire   [63:0] tmp_816_fu_459_p2;
wire   [63:0] tmp_817_fu_465_p2;
wire   [63:0] tmp15_fu_471_p2;
wire   [63:0] tmp_818_fu_483_p2;
wire   [63:0] tmp_819_fu_489_p2;
wire   [63:0] tmp17_fu_495_p2;
wire   [63:0] tmp_820_fu_507_p2;
wire   [63:0] tmp_821_fu_513_p2;
wire   [63:0] tmp19_fu_519_p2;
wire   [3:0] tmp_368_i_fu_542_p2;
wire   [0:0] tmp_822_fu_553_p3;
wire   [63:0] tmp_i_i_cast_cast_fu_561_p3;
wire   [63:0] tmp_1064_i_i_fu_569_p2;
wire   [63:0] tmp_366_i_fu_585_p3;
wire  signed [63:0] over_fu_611_p1;
wire   [63:0] v_assign_9_fu_614_p2;
wire   [0:0] tmp_823_fu_619_p3;
wire   [63:0] tmp_i10_i_cast_cast_fu_627_p3;
wire   [63:0] tmp_1066_i_i_fu_635_p2;
wire   [38:0] tmp_399_i_i_fu_641_p4;
wire   [63:0] tmp_371_i_fu_655_p3;
wire  signed [63:0] over_9_fu_651_p1;
wire   [63:0] tmp_825_fu_683_p2;
wire   [63:0] tmp_824_fu_677_p2;
wire   [63:0] tmp21_fu_689_p2;
wire   [63:0] tmp22_fu_695_p2;
wire   [0:0] tmp_826_fu_707_p3;
wire   [63:0] tmp_i13_i_cast_cast_fu_715_p3;
wire   [63:0] tmp_1064_i14_i_fu_723_p2;
wire   [63:0] tmp_380_i_fu_742_p3;
wire  signed [63:0] over_10_fu_739_p1;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_reg_grp_fproduct_2_fu_299_ap_start = 1'b0;
end

fsquare_t #(
    .DataWidth( 64 ),
    .AddressRange( 19 ),
    .AddressWidth( 5 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

fproduct_2 grp_fproduct_2_fu_299(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fproduct_2_fu_299_ap_start),
    .ap_done(grp_fproduct_2_fu_299_ap_done),
    .ap_idle(grp_fproduct_2_fu_299_ap_idle),
    .ap_ready(grp_fproduct_2_fu_299_ap_ready),
    .output_r_address0(grp_fproduct_2_fu_299_output_r_address0),
    .output_r_ce0(grp_fproduct_2_fu_299_output_r_ce0),
    .output_r_we0(grp_fproduct_2_fu_299_output_r_we0),
    .output_r_d0(grp_fproduct_2_fu_299_output_r_d0),
    .in2_address0(grp_fproduct_2_fu_299_in2_address0),
    .in2_ce0(grp_fproduct_2_fu_299_in2_ce0),
    .in2_q0(in_r_q0),
    .in_r_address0(grp_fproduct_2_fu_299_in_r_address0),
    .in_r_ce0(grp_fproduct_2_fu_299_in_r_ce0),
    .in_r_q0(in2_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_fproduct_2_fu_299_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_reg_grp_fproduct_2_fu_299_ap_start <= 1'b1;
        end else if ((1'b1 == grp_fproduct_2_fu_299_ap_ready)) begin
            ap_reg_grp_fproduct_2_fu_299_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_i3_reg_288 <= i_6_reg_968;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_i3_reg_288 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_i_reg_276 <= i_reg_944;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_i_reg_276 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_6_reg_968 <= i_6_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_reg_944 <= i_fu_600_p2;
        t_addr_80_reg_949[3 : 0] <= tmp_373_i_fu_606_p1[3 : 0];
        t_load_88_reg_939 <= t_q1;
        tmp_397_i_i_reg_934 <= {{tmp_1064_i_i_fu_569_p2[63:26]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd1))) begin
        t_addr_78_reg_923[3 : 0] <= tmp_i_15_fu_537_p1[3 : 0];
        t_addr_79_reg_928[3 : 1] <= tmp_369_i_fu_548_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_325_i_reg_790 <= tmp_325_i_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_330_i_reg_805 <= tmp_330_i_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_335_i_reg_821 <= tmp_335_i_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_340_i_reg_836 <= tmp_340_i_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_345_i_reg_852 <= tmp_345_i_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_350_i_reg_867 <= tmp_350_i_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_355_i_reg_883 <= tmp_355_i_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_360_i_reg_904 <= tmp_360_i_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_365_i_reg_915 <= tmp_365_i_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_397_i16_i_reg_959 <= {{tmp_1064_i14_i_fu_723_p2[63:26]}};
        v_assign_s_reg_954 <= v_assign_s_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_fu_762_p2 == 1'd0))) begin
        tmp_i4_reg_973[3 : 0] <= tmp_i4_fu_774_p1[3 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state22) & (1'd1 == exitcond_i_fu_762_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & (1'd1 == exitcond_i_fu_762_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        t_address0 = tmp_i4_fu_774_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        t_address0 = t_addr_79_reg_928;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t_address0 = t_addr_78_reg_923;
    end else if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd0)))) begin
        t_address0 = t_addr_77_reg_909;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd1))) begin
        t_address0 = tmp_i_15_fu_537_p1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21))) begin
        t_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = grp_fproduct_2_fu_299_output_r_address0;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        t_address1 = t_addr_80_reg_949;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t_address1 = tmp_373_i_fu_606_p1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd0))) begin
        t_address1 = t_addr_4_reg_898;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd1))) begin
        t_address1 = tmp_369_i_fu_548_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_address1 = 64'd10;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state15))) begin
        t_address1 = t_addr_76_reg_893;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_address1 = t_addr_72_reg_862;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_address1 = t_addr_68_reg_831;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_address1 = t_addr_64_reg_800;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd8;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd0)))) begin
        t_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_ce0 = grp_fproduct_2_fu_299_output_r_ce0;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd0)))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        t_d0 = tmp_381_i_fu_749_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        t_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        t_d0 = tmp_372_i_fu_663_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t_d0 = tmp_367_i_fu_593_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_d0 = tmp_365_i_reg_915;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_d0 = tmp_355_i_reg_883;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_d0 = tmp_345_i_reg_852;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_d0 = tmp_335_i_reg_821;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_d0 = tmp_325_i_reg_790;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_d0 = grp_fproduct_2_fu_299_output_r_d0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        t_d1 = tmp_382_i_fu_755_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        t_d1 = tmp_374_i_fu_670_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_d1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_d1 = tmp_360_i_reg_904;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_d1 = tmp_350_i_reg_867;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_d1 = tmp_340_i_reg_836;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_d1 = tmp_330_i_reg_805;
    end else begin
        t_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        t_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_we0 = grp_fproduct_2_fu_299_output_r_we0;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_fproduct_2_fu_299_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (tmp_i_fu_531_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (1'd1 == exitcond_i_fu_762_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_i_fu_762_p2 = ((i_i3_reg_288 == 4'd10) ? 1'b1 : 1'b0);

assign grp_fproduct_2_fu_299_ap_start = ap_reg_grp_fproduct_2_fu_299_ap_start;

assign grp_fu_309_p2 = (t_q1 + t_q0);

assign i_6_fu_768_p2 = (i_i3_reg_288 + 4'd1);

assign i_fu_600_p2 = (i_i_reg_276 + 4'd2);

assign in2_address0 = grp_fproduct_2_fu_299_in_r_address0;

assign in2_ce0 = grp_fproduct_2_fu_299_in_r_ce0;

assign in_r_address0 = grp_fproduct_2_fu_299_in2_address0;

assign in_r_ce0 = grp_fproduct_2_fu_299_in2_ce0;

assign output_r_address0 = tmp_i4_reg_973;

assign output_r_d0 = t_q0;

assign over_10_fu_739_p1 = $signed(tmp_397_i16_i_reg_959);

assign over_9_fu_651_p1 = $signed(tmp_399_i_i_fu_641_p4);

assign over_fu_611_p1 = $signed(tmp_397_i_i_reg_934);

assign t_addr_4_reg_898 = 64'd0;

assign t_addr_64_reg_800 = 64'd7;

assign t_addr_68_reg_831 = 64'd5;

assign t_addr_72_reg_862 = 64'd3;

assign t_addr_76_reg_893 = 64'd1;

assign t_addr_77_reg_909 = 64'd10;

assign tmp11_fu_423_p2 = (tmp_812_fu_411_p2 + tmp_813_fu_417_p2);

assign tmp13_fu_447_p2 = (tmp_814_fu_435_p2 + tmp_815_fu_441_p2);

assign tmp15_fu_471_p2 = (tmp_816_fu_459_p2 + tmp_817_fu_465_p2);

assign tmp17_fu_495_p2 = (tmp_818_fu_483_p2 + tmp_819_fu_489_p2);

assign tmp19_fu_519_p2 = (tmp_820_fu_507_p2 + tmp_821_fu_513_p2);

assign tmp21_fu_689_p2 = (t_q0 + t_q1);

assign tmp22_fu_695_p2 = (tmp_825_fu_683_p2 + tmp_824_fu_677_p2);

assign tmp3_fu_327_p2 = (tmp_804_fu_315_p2 + tmp_805_fu_321_p2);

assign tmp5_fu_351_p2 = (tmp_806_fu_339_p2 + tmp_807_fu_345_p2);

assign tmp7_fu_375_p2 = (tmp_808_fu_363_p2 + tmp_809_fu_369_p2);

assign tmp9_fu_399_p2 = (tmp_810_fu_387_p2 + tmp_811_fu_393_p2);

assign tmp_1064_i14_i_fu_723_p2 = (v_assign_s_fu_701_p2 + tmp_i13_i_cast_cast_fu_715_p3);

assign tmp_1064_i_i_fu_569_p2 = (t_q0 + tmp_i_i_cast_cast_fu_561_p3);

assign tmp_1066_i_i_fu_635_p2 = (tmp_i10_i_cast_cast_fu_627_p3 + v_assign_9_fu_614_p2);

assign tmp_325_i_fu_333_p2 = (tmp3_fu_327_p2 + grp_fu_309_p2);

assign tmp_330_i_fu_357_p2 = (tmp5_fu_351_p2 + grp_fu_309_p2);

assign tmp_335_i_fu_381_p2 = (tmp7_fu_375_p2 + grp_fu_309_p2);

assign tmp_340_i_fu_405_p2 = (tmp9_fu_399_p2 + grp_fu_309_p2);

assign tmp_345_i_fu_429_p2 = (tmp11_fu_423_p2 + grp_fu_309_p2);

assign tmp_350_i_fu_453_p2 = (tmp13_fu_447_p2 + grp_fu_309_p2);

assign tmp_355_i_fu_477_p2 = (tmp15_fu_471_p2 + grp_fu_309_p2);

assign tmp_360_i_fu_501_p2 = (tmp17_fu_495_p2 + grp_fu_309_p2);

assign tmp_365_i_fu_525_p2 = (tmp19_fu_519_p2 + grp_fu_309_p2);

assign tmp_366_i_fu_585_p3 = {{tmp_397_i_i_fu_575_p4}, {26'd0}};

assign tmp_367_i_fu_593_p2 = (t_q0 - tmp_366_i_fu_585_p3);

assign tmp_368_i_fu_542_p2 = (i_i_reg_276 | 4'd1);

assign tmp_369_i_fu_548_p1 = tmp_368_i_fu_542_p2;

assign tmp_371_i_fu_655_p3 = {{tmp_399_i_i_fu_641_p4}, {25'd0}};

assign tmp_372_i_fu_663_p2 = (v_assign_9_fu_614_p2 - tmp_371_i_fu_655_p3);

assign tmp_373_i_fu_606_p1 = i_fu_600_p2;

assign tmp_374_i_fu_670_p2 = ($signed(t_q1) + $signed(over_9_fu_651_p1));

assign tmp_380_i_fu_742_p3 = {{tmp_397_i16_i_reg_959}, {26'd0}};

assign tmp_381_i_fu_749_p2 = (v_assign_s_reg_954 - tmp_380_i_fu_742_p3);

assign tmp_382_i_fu_755_p2 = ($signed(over_10_fu_739_p1) + $signed(t_q1));

assign tmp_397_i_i_fu_575_p4 = {{tmp_1064_i_i_fu_569_p2[63:26]}};

assign tmp_399_i_i_fu_641_p4 = {{tmp_1066_i_i_fu_635_p2[63:25]}};

assign tmp_804_fu_315_p2 = t_q0 << 64'd4;

assign tmp_805_fu_321_p2 = t_q0 << 64'd1;

assign tmp_806_fu_339_p2 = t_q0 << 64'd4;

assign tmp_807_fu_345_p2 = t_q0 << 64'd1;

assign tmp_808_fu_363_p2 = t_q0 << 64'd4;

assign tmp_809_fu_369_p2 = t_q0 << 64'd1;

assign tmp_810_fu_387_p2 = t_q0 << 64'd4;

assign tmp_811_fu_393_p2 = t_q0 << 64'd1;

assign tmp_812_fu_411_p2 = t_q0 << 64'd4;

assign tmp_813_fu_417_p2 = t_q0 << 64'd1;

assign tmp_814_fu_435_p2 = t_q0 << 64'd4;

assign tmp_815_fu_441_p2 = t_q0 << 64'd1;

assign tmp_816_fu_459_p2 = t_q0 << 64'd4;

assign tmp_817_fu_465_p2 = t_q0 << 64'd1;

assign tmp_818_fu_483_p2 = t_q0 << 64'd4;

assign tmp_819_fu_489_p2 = t_q0 << 64'd1;

assign tmp_820_fu_507_p2 = t_q0 << 64'd4;

assign tmp_821_fu_513_p2 = t_q0 << 64'd1;

assign tmp_822_fu_553_p3 = t_q0[32'd63];

assign tmp_823_fu_619_p3 = v_assign_9_fu_614_p2[32'd63];

assign tmp_824_fu_677_p2 = t_q0 << 64'd4;

assign tmp_825_fu_683_p2 = t_q0 << 64'd1;

assign tmp_826_fu_707_p3 = v_assign_s_fu_701_p2[32'd63];

assign tmp_i10_i_cast_cast_fu_627_p3 = ((tmp_823_fu_619_p3[0:0] === 1'b1) ? 64'd33554431 : 64'd0);

assign tmp_i13_i_cast_cast_fu_715_p3 = ((tmp_826_fu_707_p3[0:0] === 1'b1) ? 64'd67108863 : 64'd0);

assign tmp_i4_fu_774_p1 = i_i3_reg_288;

assign tmp_i_15_fu_537_p1 = i_i_reg_276;

assign tmp_i_fu_531_p2 = ((i_i_reg_276 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_i_i_cast_cast_fu_561_p3 = ((tmp_822_fu_553_p3[0:0] === 1'b1) ? 64'd67108863 : 64'd0);

assign v_assign_9_fu_614_p2 = ($signed(t_load_88_reg_939) + $signed(over_fu_611_p1));

assign v_assign_s_fu_701_p2 = (tmp21_fu_689_p2 + tmp22_fu_695_p2);

always @ (posedge ap_clk) begin
    t_addr_78_reg_923[4] <= 1'b0;
    t_addr_79_reg_928[0] <= 1'b1;
    t_addr_79_reg_928[4] <= 1'b0;
    t_addr_80_reg_949[4] <= 1'b0;
    tmp_i4_reg_973[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //fmul_2
