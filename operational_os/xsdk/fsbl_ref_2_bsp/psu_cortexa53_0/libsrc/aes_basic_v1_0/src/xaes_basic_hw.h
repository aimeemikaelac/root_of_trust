// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// AXILiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of ap_return
//        bit 31~0 - ap_return[31:0] (Read)
// 0x18 : Data signal of data_in_V
//        bit 31~0 - data_in_V[31:0] (Read/Write)
// 0x1c : Data signal of data_in_V
//        bit 31~0 - data_in_V[63:32] (Read/Write)
// 0x20 : Data signal of data_in_V
//        bit 31~0 - data_in_V[95:64] (Read/Write)
// 0x24 : Data signal of data_in_V
//        bit 31~0 - data_in_V[127:96] (Read/Write)
// 0x28 : Control signal of data_in_V
//        bit 0  - data_in_V_ap_vld (Read/Write/SC)
//        others - reserved
// 0x2c : Data signal of data_out_V
//        bit 31~0 - data_out_V[31:0] (Read)
// 0x30 : Data signal of data_out_V
//        bit 31~0 - data_out_V[63:32] (Read)
// 0x34 : Data signal of data_out_V
//        bit 31~0 - data_out_V[95:64] (Read)
// 0x38 : Data signal of data_out_V
//        bit 31~0 - data_out_V[127:96] (Read)
// 0x3c : Control signal of data_out_V
//        bit 0  - data_out_V_ap_vld (Read/COR)
//        others - reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XAES_BASIC_AXILITES_ADDR_AP_CTRL         0x00
#define XAES_BASIC_AXILITES_ADDR_GIE             0x04
#define XAES_BASIC_AXILITES_ADDR_IER             0x08
#define XAES_BASIC_AXILITES_ADDR_ISR             0x0c
#define XAES_BASIC_AXILITES_ADDR_AP_RETURN       0x10
#define XAES_BASIC_AXILITES_BITS_AP_RETURN       32
#define XAES_BASIC_AXILITES_ADDR_DATA_IN_V_DATA  0x18
#define XAES_BASIC_AXILITES_BITS_DATA_IN_V_DATA  128
#define XAES_BASIC_AXILITES_ADDR_DATA_IN_V_CTRL  0x28
#define XAES_BASIC_AXILITES_ADDR_DATA_OUT_V_DATA 0x2c
#define XAES_BASIC_AXILITES_BITS_DATA_OUT_V_DATA 128
#define XAES_BASIC_AXILITES_ADDR_DATA_OUT_V_CTRL 0x3c

