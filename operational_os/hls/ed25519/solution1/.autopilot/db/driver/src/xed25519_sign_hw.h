// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// AXILiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x80 : Data signal of offset
//        bit 31~0 - offset[31:0] (Read/Write)
// 0x84 : Data signal of offset
//        bit 31~0 - offset[63:32] (Read/Write)
// 0x88 : reserved
// 0x8c : Data signal of blocks_in
//        bit 31~0 - blocks_in[31:0] (Read/Write)
// 0x90 : Data signal of blocks_in
//        bit 31~0 - blocks_in[63:32] (Read/Write)
// 0x94 : Control signal of blocks_in
//        bit 0  - blocks_in_ap_vld (Read/Write/SC)
//        others - reserved
// 0x40 ~
// 0x7f : Memory 'signature' (64 * 8b)
//        Word n : bit [ 7: 0] - signature[4n]
//                 bit [15: 8] - signature[4n+1]
//                 bit [23:16] - signature[4n+2]
//                 bit [31:24] - signature[4n+3]
// 0xa0 ~
// 0xbf : Memory 'public_key' (32 * 8b)
//        Word n : bit [ 7: 0] - public_key[4n]
//                 bit [15: 8] - public_key[4n+1]
//                 bit [23:16] - public_key[4n+2]
//                 bit [31:24] - public_key[4n+3]
// 0xc0 ~
// 0xff : Memory 'private_key' (64 * 8b)
//        Word n : bit [ 7: 0] - private_key[4n]
//                 bit [15: 8] - private_key[4n+1]
//                 bit [23:16] - private_key[4n+2]
//                 bit [31:24] - private_key[4n+3]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XED25519_SIGN_AXILITES_ADDR_AP_CTRL          0x00
#define XED25519_SIGN_AXILITES_ADDR_GIE              0x04
#define XED25519_SIGN_AXILITES_ADDR_IER              0x08
#define XED25519_SIGN_AXILITES_ADDR_ISR              0x0c
#define XED25519_SIGN_AXILITES_ADDR_OFFSET_DATA      0x80
#define XED25519_SIGN_AXILITES_BITS_OFFSET_DATA      64
#define XED25519_SIGN_AXILITES_ADDR_BLOCKS_IN_DATA   0x8c
#define XED25519_SIGN_AXILITES_BITS_BLOCKS_IN_DATA   64
#define XED25519_SIGN_AXILITES_ADDR_BLOCKS_IN_CTRL   0x94
#define XED25519_SIGN_AXILITES_ADDR_SIGNATURE_BASE   0x40
#define XED25519_SIGN_AXILITES_ADDR_SIGNATURE_HIGH   0x7f
#define XED25519_SIGN_AXILITES_WIDTH_SIGNATURE       8
#define XED25519_SIGN_AXILITES_DEPTH_SIGNATURE       64
#define XED25519_SIGN_AXILITES_ADDR_PUBLIC_KEY_BASE  0xa0
#define XED25519_SIGN_AXILITES_ADDR_PUBLIC_KEY_HIGH  0xbf
#define XED25519_SIGN_AXILITES_WIDTH_PUBLIC_KEY      8
#define XED25519_SIGN_AXILITES_DEPTH_PUBLIC_KEY      32
#define XED25519_SIGN_AXILITES_ADDR_PRIVATE_KEY_BASE 0xc0
#define XED25519_SIGN_AXILITES_ADDR_PRIVATE_KEY_HIGH 0xff
#define XED25519_SIGN_AXILITES_WIDTH_PRIVATE_KEY     8
#define XED25519_SIGN_AXILITES_DEPTH_PRIVATE_KEY     64

