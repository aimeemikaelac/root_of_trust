-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity secure_enclave_key_store is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    device_key_ocm_addr : IN STD_LOGIC_VECTOR (31 downto 0);
    device_key_ocm_addr_ap_vld : IN STD_LOGIC;
    ocm_V_req_din : OUT STD_LOGIC;
    ocm_V_req_full_n : IN STD_LOGIC;
    ocm_V_req_write : OUT STD_LOGIC;
    ocm_V_rsp_empty_n : IN STD_LOGIC;
    ocm_V_rsp_read : OUT STD_LOGIC;
    ocm_V_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    ocm_V_datain : IN STD_LOGIC_VECTOR (127 downto 0);
    ocm_V_dataout : OUT STD_LOGIC_VECTOR (127 downto 0);
    ocm_V_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    iv_V : IN STD_LOGIC_VECTOR (127 downto 0);
    iv_V_ap_vld : IN STD_LOGIC;
    encrypted_header_old_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    encrypted_header_old_V_ce0 : OUT STD_LOGIC;
    encrypted_header_old_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    tag_header_old_V : IN STD_LOGIC_VECTOR (127 downto 0);
    tag_header_old_V_ap_vld : IN STD_LOGIC;
    encrypted_header_new_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    encrypted_header_new_V_ce0 : OUT STD_LOGIC;
    encrypted_header_new_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    tag_header_new_V : IN STD_LOGIC_VECTOR (127 downto 0);
    tag_header_new_V_ap_vld : IN STD_LOGIC;
    user_key_V : IN STD_LOGIC_VECTOR (127 downto 0);
    user_key_valid_i : IN STD_LOGIC;
    user_key_valid_o : OUT STD_LOGIC;
    writing_done_in : IN STD_LOGIC;
    derived_key_out_V : OUT STD_LOGIC_VECTOR (127 downto 0);
    derived_key_valid : OUT STD_LOGIC;
    master_key_out_V : OUT STD_LOGIC_VECTOR (127 downto 0);
    master_key_out_valid : OUT STD_LOGIC;
    iv_out_V : IN STD_LOGIC_VECTOR (127 downto 0);
    iv_out_valid : OUT STD_LOGIC;
    decrypted_new_header_out : OUT STD_LOGIC;
    decrypted_new_header_out_valid : OUT STD_LOGIC;
    reset_key_out : OUT STD_LOGIC );
end;


architecture behav of secure_enclave_key_store is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "secure_enclave_key_store,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=420,HLS_SYN_DSP=0,HLS_SYN_FF=16265,HLS_SYN_LUT=47946}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (53 downto 0) := "000000000001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (53 downto 0) := "000000000010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (53 downto 0) := "000000000100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (53 downto 0) := "000000001000000000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (53 downto 0) := "000000010000000000000000000000000000000000000000000000";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (53 downto 0) := "000000100000000000000000000000000000000000000000000000";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (53 downto 0) := "000001000000000000000000000000000000000000000000000000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (53 downto 0) := "000010000000000000000000000000000000000000000000000000";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (53 downto 0) := "000100000000000000000000000000000000000000000000000000";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (53 downto 0) := "001000000000000000000000000000000000000000000000000000";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (53 downto 0) := "010000000000000000000000000000000000000000000000000000";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (53 downto 0) := "100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv128_lc_2 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv104_0 : STD_LOGIC_VECTOR (103 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_69 : BOOLEAN;
    signal device_key_ocm_addr_in_sig : STD_LOGIC_VECTOR (31 downto 0);
    signal device_key_ocm_addr_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal device_key_ocm_addr_ap_vld_in_sig : STD_LOGIC;
    signal device_key_ocm_addr_ap_vld_preg : STD_LOGIC := '0';
    signal iv_V_in_sig : STD_LOGIC_VECTOR (127 downto 0);
    signal iv_V_preg : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal iv_V_ap_vld_in_sig : STD_LOGIC;
    signal iv_V_ap_vld_preg : STD_LOGIC := '0';
    signal tag_header_old_V_in_sig : STD_LOGIC_VECTOR (127 downto 0);
    signal tag_header_old_V_preg : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tag_header_old_V_ap_vld_in_sig : STD_LOGIC;
    signal tag_header_old_V_ap_vld_preg : STD_LOGIC := '0';
    signal tag_header_new_V_in_sig : STD_LOGIC_VECTOR (127 downto 0);
    signal tag_header_new_V_preg : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tag_header_new_V_ap_vld_in_sig : STD_LOGIC;
    signal tag_header_new_V_ap_vld_preg : STD_LOGIC := '0';
    signal device_key_ocm_addr_blk_n : STD_LOGIC;
    signal iv_V_blk_n : STD_LOGIC;
    signal tag_header_old_V_blk_n : STD_LOGIC;
    signal tag_header_new_V_blk_n : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_569 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st31_fsm_30 : STD_LOGIC;
    signal ap_sig_162 : BOOLEAN;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done : STD_LOGIC;
    signal ap_sig_cseq_ST_st32_fsm_31 : STD_LOGIC;
    signal ap_sig_173 : BOOLEAN;
    signal ap_sig_cseq_ST_st33_fsm_32 : STD_LOGIC;
    signal ap_sig_182 : BOOLEAN;
    signal ap_sig_196 : BOOLEAN;
    signal master_key_old_storage_V_reg_698 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_212 : BOOLEAN;
    signal i_2_fu_603_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_2_reg_709 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_224 : BOOLEAN;
    signal tmp_3_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_714 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond1_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_620_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_3_reg_727 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_241 : BOOLEAN;
    signal tmp_6_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_732 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_742 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_257 : BOOLEAN;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_503_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal hash_key_V_reg_754 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_270 : BOOLEAN;
    signal ap_sig_cseq_ST_st51_fsm_50 : STD_LOGIC;
    signal ap_sig_279 : BOOLEAN;
    signal decrypted_header_storage_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Val2_s_reg_770 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st52_fsm_51 : STD_LOGIC;
    signal ap_sig_290 : BOOLEAN;
    signal decrypted_header_storage_V_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lhs_V_reg_775 : STD_LOGIC_VECTOR (127 downto 0);
    signal user_key_valid_read_read_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal user_key_valid_read_reg_780 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st53_fsm_52 : STD_LOGIC;
    signal ap_sig_301 : BOOLEAN;
    signal tmp_9_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal encrypted_header_old_storage_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal encrypted_header_old_storage_V_ce0 : STD_LOGIC;
    signal encrypted_header_old_storage_V_we0 : STD_LOGIC;
    signal encrypted_header_old_storage_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal encrypted_header_new_storage_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal encrypted_header_new_storage_V_ce0 : STD_LOGIC;
    signal encrypted_header_new_storage_V_we0 : STD_LOGIC;
    signal encrypted_header_new_storage_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal decrypted_header_storage_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal decrypted_header_storage_V_ce0 : STD_LOGIC;
    signal decrypted_header_storage_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal decrypted_header_storage_V_ce1 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0 : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_aes_fu_503_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_503_ap_done : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_503_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_503_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_503_ap_ce : STD_LOGIC;
    signal grp_secure_enclave_key_store_aes_fu_503_inptext_V_read : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_401 : BOOLEAN;
    signal ap_sig_cseq_ST_st34_fsm_33 : STD_LOGIC;
    signal ap_sig_537 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_659 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_669 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_678 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_687 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_29 : STD_LOGIC;
    signal ap_sig_695 : BOOLEAN;
    signal ap_sig_cseq_ST_st54_fsm_53 : STD_LOGIC;
    signal ap_sig_706 : BOOLEAN;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready : STD_LOGIC;
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V : STD_LOGIC_VECTOR (127 downto 0);
    signal i_reg_367 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_1_reg_378 : STD_LOGIC_VECTOR (8 downto 0);
    signal decrypted_new_header_reg_389 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_sig_nseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_2768 : BOOLEAN;
    signal ap_sig_nseq_ST_st33_fsm_32 : STD_LOGIC;
    signal ap_sig_2776 : BOOLEAN;
    signal ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start : STD_LOGIC := '0';
    signal tmp_2_fu_586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal key_attempts_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_attempts_1_fu_660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal master_key_out_V_preg : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal master_key_out_valid_preg : STD_LOGIC := '0';
    signal iv_out_valid_preg : STD_LOGIC := '0';
    signal decrypted_new_header_out_preg : STD_LOGIC := '0';
    signal decrypted_new_header_out_valid_preg : STD_LOGIC := '0';
    signal derived_key_valid_preg : STD_LOGIC := '0';
    signal tmp_1_fu_576_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_4_fu_640_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_fu_643_p3 : STD_LOGIC_VECTOR (127 downto 0);

    component secure_enclave_key_store_aes_gcm_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        key_V : IN STD_LOGIC_VECTOR (127 downto 0);
        iv_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ct_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ct_V_ce0 : OUT STD_LOGIC;
        ct_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        pt_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pt_V_ce0 : OUT STD_LOGIC;
        pt_V_we0 : OUT STD_LOGIC;
        pt_V_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        tag_in_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component secure_enclave_key_store_aes_gcm_cipher IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        key_V : IN STD_LOGIC_VECTOR (127 downto 0);
        data_in_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_in_V_ce0 : OUT STD_LOGIC;
        data_in_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        data_out_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_out_V_ce0 : OUT STD_LOGIC;
        data_out_V_we0 : OUT STD_LOGIC;
        data_out_V_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        counter_V : IN STD_LOGIC_VECTOR (127 downto 0);
        hash_key_V : IN STD_LOGIC_VECTOR (127 downto 0);
        encrypt : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_aes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        inptext_V_read : IN STD_LOGIC_VECTOR (127 downto 0);
        key_V_read : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_ghash_iteration IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        h_V : IN STD_LOGIC_VECTOR (127 downto 0);
        d_V : IN STD_LOGIC_VECTOR (127 downto 0);
        x_prev_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_encrypted_header_old_storage_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_decrypted_header_storage_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component secure_enclave_key_store_ct_V_assign IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    encrypted_header_old_storage_V_U : component secure_enclave_key_store_encrypted_header_old_storage_V
    generic map (
        DataWidth => 128,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => encrypted_header_old_storage_V_address0,
        ce0 => encrypted_header_old_storage_V_ce0,
        we0 => encrypted_header_old_storage_V_we0,
        d0 => encrypted_header_old_V_q0,
        q0 => encrypted_header_old_storage_V_q0);

    encrypted_header_new_storage_V_U : component secure_enclave_key_store_encrypted_header_old_storage_V
    generic map (
        DataWidth => 128,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => encrypted_header_new_storage_V_address0,
        ce0 => encrypted_header_new_storage_V_ce0,
        we0 => encrypted_header_new_storage_V_we0,
        d0 => encrypted_header_new_V_q0,
        q0 => encrypted_header_new_storage_V_q0);

    decrypted_header_storage_V_U : component secure_enclave_key_store_decrypted_header_storage_V
    generic map (
        DataWidth => 128,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => decrypted_header_storage_V_address0,
        ce0 => decrypted_header_storage_V_ce0,
        we0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0,
        d0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0,
        q0 => decrypted_header_storage_V_q0,
        address1 => decrypted_header_storage_V_address1,
        ce1 => decrypted_header_storage_V_ce1,
        q1 => decrypted_header_storage_V_q1);

    ct_V_assign_U : component secure_enclave_key_store_ct_V_assign
    generic map (
        DataWidth => 128,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0,
        ce0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0,
        we0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0,
        d0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0);

    grp_secure_enclave_key_store_aes_gcm_d_fu_403 : component secure_enclave_key_store_aes_gcm_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start,
        ap_done => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done,
        ap_idle => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_idle,
        ap_ready => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready,
        key_V => master_key_old_storage_V_reg_698,
        iv_V => iv_V_in_sig,
        ct_V_address0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0,
        ct_V_ce0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0,
        ct_V_q0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0,
        pt_V_address0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0,
        pt_V_ce0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0,
        pt_V_we0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_we0,
        pt_V_d0 => grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_d0,
        tag_in_V => grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V,
        ap_return => grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return);

    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452 : component secure_enclave_key_store_aes_gcm_cipher
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start,
        ap_done => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done,
        ap_idle => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_idle,
        ap_ready => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready,
        key_V => master_key_old_storage_V_reg_698,
        data_in_V_address0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0,
        data_in_V_ce0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0,
        data_in_V_q0 => decrypted_header_storage_V_q0,
        data_out_V_address0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_address0,
        data_out_V_ce0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_ce0,
        data_out_V_we0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_we0,
        data_out_V_d0 => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_out_V_d0,
        counter_V => reg_569,
        hash_key_V => hash_key_V_reg_754,
        encrypt => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt,
        ap_return => grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_return);

    grp_secure_enclave_key_store_aes_fu_503 : component secure_enclave_key_store_aes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_aes_fu_503_ap_start,
        ap_done => grp_secure_enclave_key_store_aes_fu_503_ap_done,
        ap_idle => grp_secure_enclave_key_store_aes_fu_503_ap_idle,
        ap_ready => grp_secure_enclave_key_store_aes_fu_503_ap_ready,
        ap_ce => grp_secure_enclave_key_store_aes_fu_503_ap_ce,
        inptext_V_read => grp_secure_enclave_key_store_aes_fu_503_inptext_V_read,
        key_V_read => master_key_old_storage_V_reg_698,
        ap_return => grp_secure_enclave_key_store_aes_fu_503_ap_return);

    grp_secure_enclave_key_store_ghash_iteration_fu_550 : component secure_enclave_key_store_ghash_iteration
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start,
        ap_done => grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done,
        ap_idle => grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_idle,
        ap_ready => grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready,
        h_V => hash_key_V_reg_754,
        d_V => grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V,
        x_prev_V => grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V,
        ap_return => grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_nseq_ST_st10_fsm_9) and ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and (ap_const_logic_1 = ap_sig_nseq_ST_st33_fsm_32)))) then 
                    ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_aes_fu_503_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= ap_const_logic_0;
            else
                if ((not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32))) then 
                    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond_fu_614_p2))))) then 
                    ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30) and not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done))) or (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29))) then 
                    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_ready)) then 
                    ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    decrypted_new_header_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                decrypted_new_header_out_preg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
                    decrypted_new_header_out_preg <= decrypted_new_header_reg_389(0);
                end if; 
            end if;
        end if;
    end process;


    decrypted_new_header_out_valid_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                decrypted_new_header_out_valid_preg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
                    decrypted_new_header_out_valid_preg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    derived_key_valid_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                derived_key_valid_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) and not((ap_const_lv1_0 = user_key_valid_read_reg_780)) and not((ap_const_lv1_0 = tmp_9_reg_787)))) then 
                    derived_key_valid_preg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    device_key_ocm_addr_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                device_key_ocm_addr_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then 
                    device_key_ocm_addr_ap_vld_preg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = device_key_ocm_addr_ap_vld) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))))) then 
                    device_key_ocm_addr_ap_vld_preg <= device_key_ocm_addr_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    device_key_ocm_addr_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                device_key_ocm_addr_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = device_key_ocm_addr_ap_vld) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))))) then 
                    device_key_ocm_addr_preg <= device_key_ocm_addr;
                end if; 
            end if;
        end if;
    end process;


    iv_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                iv_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then 
                    iv_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = iv_V_ap_vld))) then 
                    iv_V_ap_vld_preg <= iv_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    iv_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                iv_V_preg <= ap_const_lv128_lc_1;
            else
                if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = iv_V_ap_vld))) then 
                    iv_V_preg <= iv_V;
                end if; 
            end if;
        end if;
    end process;


    iv_out_valid_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                iv_out_valid_preg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
                    iv_out_valid_preg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    master_key_out_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                master_key_out_V_preg <= ap_const_lv128_lc_1;
            else
                if ((not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32))) then 
                    master_key_out_V_preg <= master_key_old_storage_V_reg_698;
                end if; 
            end if;
        end if;
    end process;


    master_key_out_valid_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                master_key_out_valid_preg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
                    master_key_out_valid_preg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    tag_header_new_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tag_header_new_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then 
                    tag_header_new_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = tag_header_new_V_ap_vld))) then 
                    tag_header_new_V_ap_vld_preg <= tag_header_new_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    tag_header_new_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tag_header_new_V_preg <= ap_const_lv128_lc_1;
            else
                if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = tag_header_new_V_ap_vld))) then 
                    tag_header_new_V_preg <= tag_header_new_V;
                end if; 
            end if;
        end if;
    end process;


    tag_header_old_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tag_header_old_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then 
                    tag_header_old_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = tag_header_old_V_ap_vld))) then 
                    tag_header_old_V_ap_vld_preg <= tag_header_old_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    tag_header_old_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tag_header_old_V_preg <= ap_const_lv128_lc_1;
            else
                if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = tag_header_old_V_ap_vld))) then 
                    tag_header_old_V_preg <= tag_header_old_V;
                end if; 
            end if;
        end if;
    end process;


    decrypted_new_header_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done)) and (ap_const_lv1_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return))) then 
                decrypted_new_header_reg_389 <= ap_const_lv1_0;
            elsif ((not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not(((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) and not((ap_const_lv1_0 = tmp_reg_742)))))) then 
                decrypted_new_header_reg_389 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i_1_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond1_fu_597_p2 = ap_const_lv1_0)))) then 
                i_1_reg_378 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                i_1_reg_378 <= i_3_reg_727;
            end if; 
        end if;
    end process;

    i_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                i_reg_367 <= i_2_reg_709;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ocm_V_rsp_empty_n = ap_const_logic_0)))) then 
                i_reg_367 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    key_attempts_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and (ap_const_lv1_0 = tmp_8_fu_634_p2) and (ap_const_lv1_0 = tmp_9_fu_651_p2))) then 
                key_attempts_fu_174 <= key_attempts_1_fu_660_p2;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not(((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) and not((ap_const_lv1_0 = tmp_reg_742))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and (ap_const_lv1_0 = tmp_8_fu_634_p2) and not((ap_const_lv1_0 = tmp_9_fu_651_p2))))) then 
                key_attempts_fu_174 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then
                hash_key_V_reg_754 <= grp_secure_enclave_key_store_aes_fu_503_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                i_2_reg_709 <= i_2_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                i_3_reg_727 <= i_3_fu_620_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then
                lhs_V_reg_775 <= decrypted_header_storage_V_q1;
                p_Val2_s_reg_770 <= decrypted_header_storage_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ocm_V_rsp_empty_n = ap_const_logic_0)))) then
                master_key_old_storage_V_reg_698 <= ocm_V_datain;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30) and not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done))) or (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) or (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32)))) then
                reg_569 <= grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_fu_597_p2 = ap_const_lv1_0))) then
                    tmp_3_reg_714(8 downto 0) <= tmp_3_fu_609_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond_fu_614_p2))) then
                    tmp_6_reg_732(8 downto 0) <= tmp_6_fu_626_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and (ap_const_lv1_0 = tmp_8_fu_634_p2))) then
                tmp_9_reg_787 <= tmp_9_fu_651_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done)))) then
                tmp_reg_742 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52)) then
                user_key_valid_read_reg_780 <= (0=>user_key_valid_i, others=>'-');
            end if;
        end if;
    end process;
    tmp_3_reg_714(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_6_reg_732(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ocm_V_rsp_empty_n, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done, ap_sig_196, exitcond1_fu_597_p2, exitcond_fu_614_p2, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return, tmp_reg_742, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done, user_key_valid_read_read_fu_252_p2, tmp_8_fu_634_p2, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_196)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if (not((ocm_V_rsp_empty_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((exitcond1_fu_597_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = exitcond_fu_614_p2))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st8_fsm_7 => 
                if ((not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done)) and (ap_const_lv1_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                elsif ((not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done)) and not((ap_const_lv1_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_return)))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not(((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) and not((ap_const_lv1_0 = tmp_reg_742))))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done))) then
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                else
                    ap_NS_fsm <= ap_ST_st31_fsm_30;
                end if;
            when ap_ST_st32_fsm_31 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done))) then
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                else
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                end if;
            when ap_ST_st33_fsm_32 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done))) then
                    ap_NS_fsm <= ap_ST_st34_fsm_33;
                else
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                end if;
            when ap_ST_st34_fsm_33 => 
                if (not((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done))) then
                    ap_NS_fsm <= ap_ST_st35_fsm_34;
                else
                    ap_NS_fsm <= ap_ST_st34_fsm_33;
                end if;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                if ((not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st54_fsm_53;
                end if;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(user_key_valid_read_read_fu_252_p2, ap_sig_cseq_ST_st53_fsm_52, tmp_8_fu_634_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(user_key_valid_read_read_fu_252_p2, ap_sig_cseq_ST_st53_fsm_52, tmp_8_fu_634_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and not((ap_const_lv1_0 = tmp_8_fu_634_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_162_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_162 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    ap_sig_173_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_173 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    ap_sig_182_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_182 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    ap_sig_196_assign_proc : process(ap_start, device_key_ocm_addr_ap_vld_in_sig, iv_V_ap_vld_in_sig, tag_header_old_V_ap_vld_in_sig, tag_header_new_V_ap_vld_in_sig)
    begin
                ap_sig_196 <= ((ap_start = ap_const_logic_0) or (tag_header_new_V_ap_vld_in_sig = ap_const_logic_0) or (tag_header_old_V_ap_vld_in_sig = ap_const_logic_0) or (iv_V_ap_vld_in_sig = ap_const_logic_0) or (device_key_ocm_addr_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_sig_212_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_212 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_224_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_224 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_241_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_241 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_257_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_257 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_270_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_270 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    ap_sig_2768_assign_proc : process(ap_NS_fsm)
    begin
                ap_sig_2768 <= (ap_const_lv1_1 = ap_NS_fsm(9 downto 9));
    end process;


    ap_sig_2776_assign_proc : process(ap_NS_fsm)
    begin
                ap_sig_2776 <= (ap_const_lv1_1 = ap_NS_fsm(32 downto 32));
    end process;


    ap_sig_279_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_279 <= (ap_const_lv1_1 = ap_CS_fsm(50 downto 50));
    end process;


    ap_sig_290_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_290 <= (ap_const_lv1_1 = ap_CS_fsm(51 downto 51));
    end process;


    ap_sig_301_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_301 <= (ap_const_lv1_1 = ap_CS_fsm(52 downto 52));
    end process;


    ap_sig_401_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_401 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_537_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_537 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    ap_sig_659_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_659 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_669_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_669 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_678_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_678 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_687_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_687 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_69_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_69 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_695_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_695 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    ap_sig_706_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_706 <= (ap_const_lv1_1 = ap_CS_fsm(53 downto 53));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_401)
    begin
        if (ap_sig_401) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_69)
    begin
        if (ap_sig_69) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_270)
    begin
        if (ap_sig_270) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_659)
    begin
        if (ap_sig_659) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st30_fsm_29_assign_proc : process(ap_sig_695)
    begin
        if (ap_sig_695) then 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st31_fsm_30_assign_proc : process(ap_sig_162)
    begin
        if (ap_sig_162) then 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st32_fsm_31_assign_proc : process(ap_sig_173)
    begin
        if (ap_sig_173) then 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st33_fsm_32_assign_proc : process(ap_sig_182)
    begin
        if (ap_sig_182) then 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st34_fsm_33_assign_proc : process(ap_sig_537)
    begin
        if (ap_sig_537) then 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_212)
    begin
        if (ap_sig_212) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_224)
    begin
        if (ap_sig_224) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st51_fsm_50_assign_proc : process(ap_sig_279)
    begin
        if (ap_sig_279) then 
            ap_sig_cseq_ST_st51_fsm_50 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st51_fsm_50 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st52_fsm_51_assign_proc : process(ap_sig_290)
    begin
        if (ap_sig_290) then 
            ap_sig_cseq_ST_st52_fsm_51 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st52_fsm_51 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st53_fsm_52_assign_proc : process(ap_sig_301)
    begin
        if (ap_sig_301) then 
            ap_sig_cseq_ST_st53_fsm_52 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st53_fsm_52 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st54_fsm_53_assign_proc : process(ap_sig_706)
    begin
        if (ap_sig_706) then 
            ap_sig_cseq_ST_st54_fsm_53 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st54_fsm_53 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_669)
    begin
        if (ap_sig_669) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_241)
    begin
        if (ap_sig_241) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_678)
    begin
        if (ap_sig_678) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_257)
    begin
        if (ap_sig_257) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_687)
    begin
        if (ap_sig_687) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_nseq_ST_st10_fsm_9_assign_proc : process(ap_sig_2768)
    begin
        if (ap_sig_2768) then 
            ap_sig_nseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_nseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_nseq_ST_st33_fsm_32_assign_proc : process(ap_sig_2776)
    begin
        if (ap_sig_2776) then 
            ap_sig_nseq_ST_st33_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_nseq_ST_st33_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    decrypted_header_storage_V_address0_assign_proc : process(tmp_reg_742, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st51_fsm_50, grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st51_fsm_50)) then 
            decrypted_header_storage_V_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            decrypted_header_storage_V_address0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            decrypted_header_storage_V_address0 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_address0;
        else 
            decrypted_header_storage_V_address0 <= "XXXXXXXX";
        end if; 
    end process;

    decrypted_header_storage_V_address1 <= ap_const_lv64_1(8 - 1 downto 0);

    decrypted_header_storage_V_ce0_assign_proc : process(tmp_reg_742, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st51_fsm_50, grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st51_fsm_50)) then 
            decrypted_header_storage_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            decrypted_header_storage_V_ce0 <= grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_data_in_V_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            decrypted_header_storage_V_ce0 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_pt_V_ce0;
        else 
            decrypted_header_storage_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    decrypted_header_storage_V_ce1_assign_proc : process(ap_sig_cseq_ST_st51_fsm_50)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st51_fsm_50)) then 
            decrypted_header_storage_V_ce1 <= ap_const_logic_1;
        else 
            decrypted_header_storage_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    decrypted_new_header_out_assign_proc : process(ap_sig_cseq_ST_st52_fsm_51, decrypted_new_header_reg_389, decrypted_new_header_out_preg)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
            decrypted_new_header_out <= decrypted_new_header_reg_389(0);
        else 
            decrypted_new_header_out <= decrypted_new_header_out_preg;
        end if; 
    end process;


    decrypted_new_header_out_valid_assign_proc : process(ap_sig_cseq_ST_st52_fsm_51, decrypted_new_header_out_valid_preg)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
            decrypted_new_header_out_valid <= ap_const_logic_1;
        else 
            decrypted_new_header_out_valid <= decrypted_new_header_out_valid_preg;
        end if; 
    end process;

    derived_key_out_V <= (lhs_V_reg_775 xor user_key_V);

    derived_key_valid_assign_proc : process(user_key_valid_read_read_fu_252_p2, user_key_valid_read_reg_780, ap_sig_cseq_ST_st53_fsm_52, tmp_9_reg_787, tmp_8_fu_634_p2, ap_sig_cseq_ST_st54_fsm_53, derived_key_valid_preg)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) and not((ap_const_lv1_0 = user_key_valid_read_reg_780)) and not((ap_const_lv1_0 = tmp_9_reg_787)))) then 
            derived_key_valid <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and (ap_const_lv1_0 = tmp_8_fu_634_p2))) then 
            derived_key_valid <= ap_const_logic_0;
        else 
            derived_key_valid <= derived_key_valid_preg;
        end if; 
    end process;


    device_key_ocm_addr_ap_vld_in_sig_assign_proc : process(device_key_ocm_addr_ap_vld, device_key_ocm_addr_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = device_key_ocm_addr_ap_vld)) then 
            device_key_ocm_addr_ap_vld_in_sig <= device_key_ocm_addr_ap_vld;
        else 
            device_key_ocm_addr_ap_vld_in_sig <= device_key_ocm_addr_ap_vld_preg;
        end if; 
    end process;


    device_key_ocm_addr_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, device_key_ocm_addr_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            device_key_ocm_addr_blk_n <= device_key_ocm_addr_ap_vld;
        else 
            device_key_ocm_addr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    device_key_ocm_addr_in_sig_assign_proc : process(device_key_ocm_addr, device_key_ocm_addr_preg, device_key_ocm_addr_ap_vld)
    begin
        if ((ap_const_logic_1 = device_key_ocm_addr_ap_vld)) then 
            device_key_ocm_addr_in_sig <= device_key_ocm_addr;
        else 
            device_key_ocm_addr_in_sig <= device_key_ocm_addr_preg;
        end if; 
    end process;

    encrypted_header_new_V_address0 <= tmp_6_fu_626_p1(8 - 1 downto 0);

    encrypted_header_new_V_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            encrypted_header_new_V_ce0 <= ap_const_logic_1;
        else 
            encrypted_header_new_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    encrypted_header_new_storage_V_address0_assign_proc : process(tmp_6_reg_732, tmp_reg_742, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            encrypted_header_new_storage_V_address0 <= tmp_6_reg_732(8 - 1 downto 0);
        elsif ((not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            encrypted_header_new_storage_V_address0 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0;
        else 
            encrypted_header_new_storage_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    encrypted_header_new_storage_V_ce0_assign_proc : process(tmp_reg_742, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            encrypted_header_new_storage_V_ce0 <= ap_const_logic_1;
        elsif ((not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            encrypted_header_new_storage_V_ce0 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0;
        else 
            encrypted_header_new_storage_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    encrypted_header_new_storage_V_we0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            encrypted_header_new_storage_V_we0 <= ap_const_logic_1;
        else 
            encrypted_header_new_storage_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    encrypted_header_old_V_address0 <= tmp_3_fu_609_p1(8 - 1 downto 0);

    encrypted_header_old_V_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            encrypted_header_old_V_ce0 <= ap_const_logic_1;
        else 
            encrypted_header_old_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    encrypted_header_old_storage_V_address0_assign_proc : process(tmp_3_reg_714, ap_sig_cseq_ST_st8_fsm_7, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            encrypted_header_old_storage_V_address0 <= tmp_3_reg_714(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            encrypted_header_old_storage_V_address0 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_address0;
        else 
            encrypted_header_old_storage_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    encrypted_header_old_storage_V_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            encrypted_header_old_storage_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            encrypted_header_old_storage_V_ce0 <= grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_ce0;
        else 
            encrypted_header_old_storage_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    encrypted_header_old_storage_V_we0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            encrypted_header_old_storage_V_we0 <= ap_const_logic_1;
        else 
            encrypted_header_old_storage_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_597_p2 <= "1" when (i_reg_367 = ap_const_lv9_100) else "0";
    exitcond_fu_614_p2 <= "1" when (i_1_reg_378 = ap_const_lv9_100) else "0";

    grp_secure_enclave_key_store_aes_fu_503_ap_ce_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st31_fsm_30, grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st33_fsm_32, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, tmp_reg_742, ap_sig_cseq_ST_st8_fsm_7, grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done, ap_sig_cseq_ST_st53_fsm_52, grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30) or (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) or ((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_done) and not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done) and (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32)) or ((ap_const_logic_0 = grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_done) and (ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53))) then 
            grp_secure_enclave_key_store_aes_fu_503_ap_ce <= ap_const_logic_0;
        else 
            grp_secure_enclave_key_store_aes_fu_503_ap_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_secure_enclave_key_store_aes_fu_503_ap_start <= ap_reg_grp_secure_enclave_key_store_aes_fu_503_ap_start;

    grp_secure_enclave_key_store_aes_fu_503_inptext_V_read_assign_proc : process(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return, ap_sig_cseq_ST_st33_fsm_32, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32)) then 
            grp_secure_enclave_key_store_aes_fu_503_inptext_V_read <= grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_return;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_secure_enclave_key_store_aes_fu_503_inptext_V_read <= ap_const_lv128_lc_1;
        else 
            grp_secure_enclave_key_store_aes_fu_503_inptext_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start <= ap_reg_grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_ap_start;
    grp_secure_enclave_key_store_aes_gcm_cipher_fu_452_encrypt <= ap_const_logic_1;
    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start <= ap_reg_grp_secure_enclave_key_store_aes_gcm_d_fu_403_ap_start;

    grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0_assign_proc : process(tmp_reg_742, ap_sig_cseq_ST_st8_fsm_7, encrypted_header_old_storage_V_q0, encrypted_header_new_storage_V_q0, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 <= encrypted_header_new_storage_V_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 <= encrypted_header_old_storage_V_q0;
        else 
            grp_secure_enclave_key_store_aes_gcm_d_fu_403_ct_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V_assign_proc : process(tag_header_old_V_in_sig, tag_header_new_V_in_sig, tmp_reg_742, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((not((ap_const_lv1_0 = tmp_reg_742)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V <= tag_header_new_V_in_sig;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V <= tag_header_old_V_in_sig;
        else 
            grp_secure_enclave_key_store_aes_gcm_d_fu_403_tag_in_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start <= ap_reg_grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_start;

    grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V_assign_proc : process(ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st33_fsm_32)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32)) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V <= ap_const_lv128_lc_2;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30) or (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V <= ap_const_lv128_lc_1;
        else 
            grp_secure_enclave_key_store_ghash_iteration_fu_550_d_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V_assign_proc : process(reg_569, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st33_fsm_32)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32))) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V <= reg_569;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
            grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V <= ap_const_lv128_lc_1;
        else 
            grp_secure_enclave_key_store_ghash_iteration_fu_550_x_prev_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_2_fu_603_p2 <= std_logic_vector(unsigned(i_reg_367) + unsigned(ap_const_lv9_1));
    i_3_fu_620_p2 <= std_logic_vector(unsigned(i_1_reg_378) + unsigned(ap_const_lv9_1));

    iv_V_ap_vld_in_sig_assign_proc : process(iv_V_ap_vld, iv_V_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = iv_V_ap_vld)) then 
            iv_V_ap_vld_in_sig <= iv_V_ap_vld;
        else 
            iv_V_ap_vld_in_sig <= iv_V_ap_vld_preg;
        end if; 
    end process;


    iv_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, iv_V_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            iv_V_blk_n <= iv_V_ap_vld;
        else 
            iv_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    iv_V_in_sig_assign_proc : process(iv_V, iv_V_preg, iv_V_ap_vld)
    begin
        if ((ap_const_logic_1 = iv_V_ap_vld)) then 
            iv_V_in_sig <= iv_V;
        else 
            iv_V_in_sig <= iv_V_preg;
        end if; 
    end process;


    iv_out_valid_assign_proc : process(ap_sig_cseq_ST_st52_fsm_51, iv_out_valid_preg)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
            iv_out_valid <= ap_const_logic_1;
        else 
            iv_out_valid <= iv_out_valid_preg;
        end if; 
    end process;

    key_attempts_1_fu_660_p2 <= std_logic_vector(unsigned(key_attempts_fu_174) + unsigned(ap_const_lv32_1));

    master_key_out_V_assign_proc : process(grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done, ap_sig_cseq_ST_st33_fsm_32, master_key_old_storage_V_reg_698, master_key_out_V_preg)
    begin
        if ((not((ap_const_logic_0 = grp_secure_enclave_key_store_ghash_iteration_fu_550_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32))) then 
            master_key_out_V <= master_key_old_storage_V_reg_698;
        else 
            master_key_out_V <= master_key_out_V_preg;
        end if; 
    end process;


    master_key_out_valid_assign_proc : process(ap_sig_cseq_ST_st52_fsm_51, master_key_out_valid_preg)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then 
            master_key_out_valid <= ap_const_logic_1;
        else 
            master_key_out_valid <= master_key_out_valid_preg;
        end if; 
    end process;

    ocm_V_address <= tmp_2_fu_586_p1(32 - 1 downto 0);
    ocm_V_dataout <= ap_const_lv128_lc_1;
    ocm_V_req_din <= ap_const_logic_0;

    ocm_V_req_write_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_196)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_196))) then 
            ocm_V_req_write <= ap_const_logic_1;
        else 
            ocm_V_req_write <= ap_const_logic_0;
        end if; 
    end process;


    ocm_V_rsp_read_assign_proc : process(ocm_V_rsp_empty_n, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ocm_V_rsp_empty_n = ap_const_logic_0)))) then 
            ocm_V_rsp_read <= ap_const_logic_1;
        else 
            ocm_V_rsp_read <= ap_const_logic_0;
        end if; 
    end process;

    ocm_V_size <= ap_const_lv32_1;
    out_V_fu_643_p3 <= (ap_const_lv104_0 & tmp_4_fu_640_p1);
    reset_key_out <= ap_const_logic_1;

    tag_header_new_V_ap_vld_in_sig_assign_proc : process(tag_header_new_V_ap_vld, tag_header_new_V_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = tag_header_new_V_ap_vld)) then 
            tag_header_new_V_ap_vld_in_sig <= tag_header_new_V_ap_vld;
        else 
            tag_header_new_V_ap_vld_in_sig <= tag_header_new_V_ap_vld_preg;
        end if; 
    end process;


    tag_header_new_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, tag_header_new_V_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            tag_header_new_V_blk_n <= tag_header_new_V_ap_vld;
        else 
            tag_header_new_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tag_header_new_V_in_sig_assign_proc : process(tag_header_new_V, tag_header_new_V_preg, tag_header_new_V_ap_vld)
    begin
        if ((ap_const_logic_1 = tag_header_new_V_ap_vld)) then 
            tag_header_new_V_in_sig <= tag_header_new_V;
        else 
            tag_header_new_V_in_sig <= tag_header_new_V_preg;
        end if; 
    end process;


    tag_header_old_V_ap_vld_in_sig_assign_proc : process(tag_header_old_V_ap_vld, tag_header_old_V_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = tag_header_old_V_ap_vld)) then 
            tag_header_old_V_ap_vld_in_sig <= tag_header_old_V_ap_vld;
        else 
            tag_header_old_V_ap_vld_in_sig <= tag_header_old_V_ap_vld_preg;
        end if; 
    end process;


    tag_header_old_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, tag_header_old_V_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            tag_header_old_V_blk_n <= tag_header_old_V_ap_vld;
        else 
            tag_header_old_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tag_header_old_V_in_sig_assign_proc : process(tag_header_old_V, tag_header_old_V_preg, tag_header_old_V_ap_vld)
    begin
        if ((ap_const_logic_1 = tag_header_old_V_ap_vld)) then 
            tag_header_old_V_in_sig <= tag_header_old_V;
        else 
            tag_header_old_V_in_sig <= tag_header_old_V_preg;
        end if; 
    end process;

    tmp_1_fu_576_p4 <= device_key_ocm_addr_in_sig(31 downto 4);
    tmp_2_fu_586_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_576_p4),64));
    tmp_3_fu_609_p1 <= std_logic_vector(resize(unsigned(i_reg_367),64));
    tmp_4_fu_640_p1 <= p_Val2_s_reg_770(24 - 1 downto 0);
    tmp_6_fu_626_p1 <= std_logic_vector(resize(unsigned(i_1_reg_378),64));
    tmp_8_fu_634_p2 <= "1" when (signed(key_attempts_fu_174) > signed(ap_const_lv32_2)) else "0";
    tmp_9_fu_651_p2 <= "1" when (out_V_fu_643_p3 = user_key_V) else "0";

    user_key_valid_o_assign_proc : process(user_key_valid_i, user_key_valid_read_read_fu_252_p2, ap_sig_cseq_ST_st53_fsm_52, tmp_8_fu_634_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52) and not((ap_const_lv1_0 = user_key_valid_read_read_fu_252_p2)) and (ap_const_lv1_0 = tmp_8_fu_634_p2))) then 
            user_key_valid_o <= ap_const_logic_0;
        else 
            user_key_valid_o <= user_key_valid_i;
        end if; 
    end process;

    user_key_valid_read_read_fu_252_p2 <= (0=>user_key_valid_i, others=>'-');
end behav;
