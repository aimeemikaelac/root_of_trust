// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cmov_aff_HH_
#define _cmov_aff_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct cmov_aff : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > r_x_v_address0;
    sc_out< sc_logic > r_x_v_ce0;
    sc_out< sc_logic > r_x_v_we0;
    sc_out< sc_lv<32> > r_x_v_d0;
    sc_in< sc_lv<32> > r_x_v_q0;
    sc_out< sc_lv<5> > r_y_v_address0;
    sc_out< sc_logic > r_y_v_ce0;
    sc_out< sc_logic > r_y_v_we0;
    sc_out< sc_lv<32> > r_y_v_d0;
    sc_in< sc_lv<32> > r_y_v_q0;
    sc_out< sc_lv<14> > p_x_v_address0;
    sc_out< sc_logic > p_x_v_ce0;
    sc_in< sc_lv<32> > p_x_v_q0;
    sc_in< sc_lv<9> > tmp_919;
    sc_out< sc_lv<14> > p_y_v_address0;
    sc_out< sc_logic > p_y_v_ce0;
    sc_in< sc_lv<32> > p_y_v_q0;
    sc_in< sc_lv<9> > tmp_9191;
    sc_in< sc_lv<1> > b;


    // Module declarations
    cmov_aff(sc_module_name name);
    SC_HAS_PROCESS(cmov_aff);

    ~cmov_aff();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > tmp_787_cast_fu_134_p1;
    sc_signal< sc_lv<15> > tmp_787_cast_reg_256;
    sc_signal< sc_lv<15> > tmp_789_cast_fu_146_p1;
    sc_signal< sc_lv<15> > tmp_789_cast_reg_261;
    sc_signal< sc_lv<32> > mask_cast_fu_150_p3;
    sc_signal< sc_lv<32> > mask_cast_reg_266;
    sc_signal< sc_lv<6> > i_fu_164_p2;
    sc_signal< sc_lv<6> > i_reg_275;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_i_fu_158_p2;
    sc_signal< sc_lv<5> > r_x_v_addr_reg_285;
    sc_signal< sc_lv<6> > i_81_fu_213_p2;
    sc_signal< sc_lv<6> > i_81_reg_293;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_i6_fu_207_p2;
    sc_signal< sc_lv<5> > r_y_v_addr_reg_303;
    sc_signal< sc_lv<6> > i_i_reg_104;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > i_i5_reg_115;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_790_cast_fu_184_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_170_p1;
    sc_signal< sc_lv<64> > tmp_791_cast_fu_233_p1;
    sc_signal< sc_lv<64> > tmp_i7_fu_219_p1;
    sc_signal< sc_lv<14> > tmp_fu_126_p3;
    sc_signal< sc_lv<14> > tmp_788_fu_138_p3;
    sc_signal< sc_lv<15> > tmp_i_cast_fu_175_p1;
    sc_signal< sc_lv<15> > tmp_790_fu_179_p2;
    sc_signal< sc_lv<32> > tmp_894_i_fu_189_p2;
    sc_signal< sc_lv<32> > tmp_895_i_fu_195_p2;
    sc_signal< sc_lv<15> > tmp_i7_cast_fu_224_p1;
    sc_signal< sc_lv<15> > tmp_791_fu_228_p2;
    sc_signal< sc_lv<32> > tmp_894_i1_fu_238_p2;
    sc_signal< sc_lv<32> > tmp_895_i1_fu_244_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_i6_fu_207_p2();
    void thread_exitcond_i_fu_158_p2();
    void thread_i_81_fu_213_p2();
    void thread_i_fu_164_p2();
    void thread_mask_cast_fu_150_p3();
    void thread_p_x_v_address0();
    void thread_p_x_v_ce0();
    void thread_p_y_v_address0();
    void thread_p_y_v_ce0();
    void thread_r_x_v_address0();
    void thread_r_x_v_ce0();
    void thread_r_x_v_d0();
    void thread_r_x_v_we0();
    void thread_r_y_v_address0();
    void thread_r_y_v_ce0();
    void thread_r_y_v_d0();
    void thread_r_y_v_we0();
    void thread_tmp_787_cast_fu_134_p1();
    void thread_tmp_788_fu_138_p3();
    void thread_tmp_789_cast_fu_146_p1();
    void thread_tmp_790_cast_fu_184_p1();
    void thread_tmp_790_fu_179_p2();
    void thread_tmp_791_cast_fu_233_p1();
    void thread_tmp_791_fu_228_p2();
    void thread_tmp_894_i1_fu_238_p2();
    void thread_tmp_894_i_fu_189_p2();
    void thread_tmp_895_i1_fu_244_p2();
    void thread_tmp_895_i_fu_195_p2();
    void thread_tmp_fu_126_p3();
    void thread_tmp_i7_cast_fu_224_p1();
    void thread_tmp_i7_fu_219_p1();
    void thread_tmp_i_cast_fu_175_p1();
    void thread_tmp_i_fu_170_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
