// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _contact_discovery_HH_
#define _contact_discovery_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "contact_discoverybkb.h"
#include "contact_discoverycud.h"
#include "contact_discovery_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct contact_discovery : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > contacts_in_V_TDATA;
    sc_in< sc_logic > contacts_in_V_TVALID;
    sc_out< sc_logic > contacts_in_V_TREADY;
    sc_in< sc_lv<8> > database_in_V_TDATA;
    sc_in< sc_logic > database_in_V_TVALID;
    sc_out< sc_logic > database_in_V_TREADY;
    sc_out< sc_lv<8> > matched_out_V_TDATA;
    sc_out< sc_logic > matched_out_V_TVALID;
    sc_in< sc_logic > matched_out_V_TREADY;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    contact_discovery(sc_module_name name);
    SC_HAS_PROCESS(contact_discovery);

    ~contact_discovery();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    contact_discoverybkb* contacts_U;
    contact_discoverycud* current_database_ite_U;
    contact_discovery_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* contact_discovery_AXILiteS_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > operation;
    sc_signal< sc_lv<32> > operation_preg;
    sc_signal< sc_logic > operation_ap_vld;
    sc_signal< sc_logic > operation_ap_vld_preg;
    sc_signal< sc_logic > operation_ap_vld_in_sig;
    sc_signal< sc_lv<8> > matched_out_V_1_data_out;
    sc_signal< sc_logic > matched_out_V_1_vld_in;
    sc_signal< sc_logic > matched_out_V_1_vld_out;
    sc_signal< sc_logic > matched_out_V_1_ack_in;
    sc_signal< sc_logic > matched_out_V_1_ack_out;
    sc_signal< sc_lv<8> > matched_out_V_1_payload_A;
    sc_signal< sc_lv<8> > matched_out_V_1_payload_B;
    sc_signal< sc_logic > matched_out_V_1_sel_rd;
    sc_signal< sc_logic > matched_out_V_1_sel_wr;
    sc_signal< sc_logic > matched_out_V_1_sel;
    sc_signal< sc_logic > matched_out_V_1_load_A;
    sc_signal< sc_logic > matched_out_V_1_load_B;
    sc_signal< sc_lv<2> > matched_out_V_1_state;
    sc_signal< sc_logic > matched_out_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > matched_finished_1_data_reg;
    sc_signal< sc_lv<32> > matched_finished_1_data_in;
    sc_signal< sc_logic > matched_finished_1_vld_reg;
    sc_signal< sc_logic > matched_finished_1_vld_in;
    sc_signal< sc_logic > matched_finished_1_ack_in;
    sc_signal< sc_lv<32> > error_out_1_data_reg;
    sc_signal< sc_lv<32> > error_out_1_data_in;
    sc_signal< sc_logic > error_out_1_vld_reg;
    sc_signal< sc_logic > error_out_1_vld_in;
    sc_signal< sc_logic > error_out_1_ack_in;
    sc_signal< sc_lv<32> > contacts_size_out_1_data_reg;
    sc_signal< sc_lv<32> > contacts_size_out_1_data_in;
    sc_signal< sc_logic > contacts_size_out_1_vld_reg;
    sc_signal< sc_logic > contacts_size_out_1_vld_in;
    sc_signal< sc_logic > contacts_size_out_1_ack_in;
    sc_signal< sc_lv<32> > contacts_size;
    sc_signal< sc_lv<13> > contacts_address0;
    sc_signal< sc_logic > contacts_ce0;
    sc_signal< sc_logic > contacts_we0;
    sc_signal< sc_lv<8> > contacts_d0;
    sc_signal< sc_lv<8> > contacts_q0;
    sc_signal< sc_lv<6> > current_database_ite_address0;
    sc_signal< sc_logic > current_database_ite_ce0;
    sc_signal< sc_logic > current_database_ite_we0;
    sc_signal< sc_lv<8> > current_database_ite_q0;
    sc_signal< sc_logic > operation_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > contacts_in_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > exitcond9_fu_444_p2;
    sc_signal< sc_logic > database_in_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond8_fu_329_p2;
    sc_signal< sc_logic > matched_out_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond7_fu_346_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_read_fu_98_p2;
    sc_signal< sc_lv<8> > i_fu_318_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<7> > i_2_fu_335_p2;
    sc_signal< bool > ap_block_state6;
    sc_signal< sc_lv<8> > i_5_fu_352_p2;
    sc_signal< sc_lv<8> > i_5_reg_512;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< sc_lv<13> > tmp_i_fu_362_p3;
    sc_signal< sc_lv<13> > tmp_i_reg_517;
    sc_signal< sc_lv<8> > cast_fu_370_p1;
    sc_signal< sc_lv<7> > i_6_fu_385_p2;
    sc_signal< sc_lv<7> > i_6_reg_530;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond_i_fu_379_p2;
    sc_signal< sc_lv<1> > found_fu_406_p2;
    sc_signal< sc_lv<1> > found_1_fu_418_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_fu_434_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_151_p3;
    sc_signal< sc_lv<7> > i_4_fu_450_p2;
    sc_signal< bool > ap_block_state13;
    sc_signal< sc_lv<32> > tmp_9_fu_473_p2;
    sc_signal< sc_lv<8> > i_3_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_312_p2;
    sc_signal< sc_lv<7> > i_1_reg_228;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_1_nbreadreq_fu_129_p3;
    sc_signal< sc_lv<1> > tmp_10_reg_239;
    sc_signal< sc_lv<8> > contact_index_assign_reg_251;
    sc_signal< sc_lv<7> > i_i_reg_262;
    sc_signal< sc_lv<1> > comp_reg_273;
    sc_signal< sc_lv<7> > i1_reg_285;
    sc_signal< sc_lv<64> > tmp_3_fu_324_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_341_p1;
    sc_signal< sc_lv<64> > tmp_i_7_fu_391_p1;
    sc_signal< sc_lv<64> > tmp_13_i_fu_401_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_468_p1;
    sc_signal< sc_lv<7> > tmp_11_fu_358_p1;
    sc_signal< sc_lv<13> > i_i_cast7_fu_375_p1;
    sc_signal< sc_lv<13> > tmp_12_i_fu_396_p2;
    sc_signal< sc_lv<1> > tmp_14_i_fu_412_p2;
    sc_signal< sc_lv<25> > tmp_2_fu_424_p4;
    sc_signal< sc_lv<32> > tmp_6_fu_456_p2;
    sc_signal< sc_lv<32> > i1_cast_fu_440_p1;
    sc_signal< sc_lv<32> > tmp_8_fu_462_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_state11;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state11();
    void thread_ap_block_state13();
    void thread_ap_block_state6();
    void thread_ap_block_state7_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_cast_fu_370_p1();
    void thread_contacts_address0();
    void thread_contacts_ce0();
    void thread_contacts_d0();
    void thread_contacts_in_V_TDATA_blk_n();
    void thread_contacts_in_V_TREADY();
    void thread_contacts_size_out_1_ack_in();
    void thread_contacts_size_out_1_data_in();
    void thread_contacts_size_out_1_vld_in();
    void thread_contacts_we0();
    void thread_current_database_ite_address0();
    void thread_current_database_ite_ce0();
    void thread_current_database_ite_we0();
    void thread_database_in_V_TDATA_blk_n();
    void thread_database_in_V_TREADY();
    void thread_error_out_1_ack_in();
    void thread_error_out_1_data_in();
    void thread_error_out_1_vld_in();
    void thread_exitcond7_fu_346_p2();
    void thread_exitcond8_fu_329_p2();
    void thread_exitcond9_fu_444_p2();
    void thread_exitcond_fu_312_p2();
    void thread_exitcond_i_fu_379_p2();
    void thread_found_1_fu_418_p2();
    void thread_found_fu_406_p2();
    void thread_grp_read_fu_98_p2();
    void thread_i1_cast_fu_440_p1();
    void thread_i_2_fu_335_p2();
    void thread_i_4_fu_450_p2();
    void thread_i_5_fu_352_p2();
    void thread_i_6_fu_385_p2();
    void thread_i_fu_318_p2();
    void thread_i_i_cast7_fu_375_p1();
    void thread_icmp_fu_434_p2();
    void thread_matched_finished_1_ack_in();
    void thread_matched_finished_1_data_in();
    void thread_matched_finished_1_vld_in();
    void thread_matched_out_V_1_ack_in();
    void thread_matched_out_V_1_ack_out();
    void thread_matched_out_V_1_data_out();
    void thread_matched_out_V_1_load_A();
    void thread_matched_out_V_1_load_B();
    void thread_matched_out_V_1_sel();
    void thread_matched_out_V_1_state_cmp_full();
    void thread_matched_out_V_1_vld_in();
    void thread_matched_out_V_1_vld_out();
    void thread_matched_out_V_TDATA();
    void thread_matched_out_V_TDATA_blk_n();
    void thread_matched_out_V_TVALID();
    void thread_operation_ap_vld_in_sig();
    void thread_operation_blk_n();
    void thread_tmp_11_fu_358_p1();
    void thread_tmp_12_i_fu_396_p2();
    void thread_tmp_13_i_fu_401_p1();
    void thread_tmp_14_i_fu_412_p2();
    void thread_tmp_1_nbreadreq_fu_129_p3();
    void thread_tmp_2_fu_424_p4();
    void thread_tmp_3_fu_324_p1();
    void thread_tmp_6_fu_456_p2();
    void thread_tmp_7_fu_341_p1();
    void thread_tmp_8_fu_462_p2();
    void thread_tmp_9_fu_473_p2();
    void thread_tmp_i_7_fu_391_p1();
    void thread_tmp_i_fu_362_p3();
    void thread_tmp_nbreadreq_fu_151_p3();
    void thread_tmp_s_fu_468_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
