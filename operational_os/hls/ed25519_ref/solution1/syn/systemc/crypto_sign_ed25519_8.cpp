// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sign_ed25519_8.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sign_ed25519_8::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sign_ed25519_8::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state1 = "1";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state2 = "10";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state3 = "100";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state4 = "1000";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state5 = "10000";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state6 = "100000";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> crypto_sign_ed25519_8::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_2 = "10";
const sc_lv<1> crypto_sign_ed25519_8::ap_const_lv1_0 = "0";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_4 = "100";
const sc_lv<1> crypto_sign_ed25519_8::ap_const_lv1_1 = "1";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_6 = "110";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_8 = "1000";
const sc_lv<5> crypto_sign_ed25519_8::ap_const_lv5_1 = "1";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_1 = "1";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_3 = "11";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_5 = "101";
const sc_lv<6> crypto_sign_ed25519_8::ap_const_lv6_0 = "000000";
const sc_lv<3> crypto_sign_ed25519_8::ap_const_lv3_0 = "000";
const sc_lv<5> crypto_sign_ed25519_8::ap_const_lv5_0 = "00000";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_7 = "111";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_9 = "1001";
const sc_lv<64> crypto_sign_ed25519_8::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> crypto_sign_ed25519_8::ap_const_lv64_1F = "11111";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_1DA = "111011010";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_FE = "11111110";
const sc_lv<5> crypto_sign_ed25519_8::ap_const_lv5_1F = "11111";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_1FE = "111111110";
const sc_lv<6> crypto_sign_ed25519_8::ap_const_lv6_20 = "100000";
const sc_lv<6> crypto_sign_ed25519_8::ap_const_lv6_1 = "1";
const sc_lv<3> crypto_sign_ed25519_8::ap_const_lv3_4 = "100";
const sc_lv<3> crypto_sign_ed25519_8::ap_const_lv3_1 = "1";
const sc_lv<32> crypto_sign_ed25519_8::ap_const_lv32_1F = "11111";
const sc_lv<31> crypto_sign_ed25519_8::ap_const_lv31_13 = "10011";
const bool crypto_sign_ed25519_8::ap_const_boolean_1 = true;

crypto_sign_ed25519_8::crypto_sign_ed25519_8(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new crypto_sign_ed255ocq("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(t_d1);
    t_U->q1(t_q1);
    crypto_sign_mac_mpcA_x_U68 = new crypto_sign_mac_mpcA<1,1,6,25,32,32>("crypto_sign_mac_mpcA_x_U68");
    crypto_sign_mac_mpcA_x_U68->din0(grp_fu_383_p0);
    crypto_sign_mac_mpcA_x_U68->din1(grp_fu_383_p1);
    crypto_sign_mac_mpcA_x_U68->din2(r_v_q1);
    crypto_sign_mac_mpcA_x_U68->dout(grp_fu_383_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond1_i_fu_296_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond1_i_fu_296_p2 );

    SC_METHOD(thread_exitcond1_fu_247_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_189 );

    SC_METHOD(thread_exitcond1_i_fu_296_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( rep_i_reg_211 );

    SC_METHOD(thread_exitcond_fu_271_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_reg_200 );

    SC_METHOD(thread_exitcond_i_fu_331_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_i_reg_222 );

    SC_METHOD(thread_grp_fu_383_p0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_383_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_fu_383_p10 );

    SC_METHOD(thread_grp_fu_383_p10);
    sensitive << ( tmp_746_fu_312_p4 );

    SC_METHOD(thread_i_23_fu_258_p2);
    sensitive << ( i_reg_189 );

    SC_METHOD(thread_i_24_fu_277_p2);
    sensitive << ( i_1_reg_200 );

    SC_METHOD(thread_i_25_fu_337_p2);
    sensitive << ( i_i_reg_222 );

    SC_METHOD(thread_r_v_address0);
    sensitive << ( tmp_744_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( r_v_addr_4_reg_471 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_760_i_fu_348_p1 );

    SC_METHOD(thread_r_v_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( r_v_addr_5_reg_477 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_759_i_fu_343_p1 );

    SC_METHOD(thread_r_v_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_r_v_ce1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_r_v_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_745_fu_289_p2 );
    sensitive << ( grp_fu_383_p3 );
    sensitive << ( tmp_762_i_cast_fu_378_p1 );

    SC_METHOD(thread_r_v_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_i_cast_fu_326_p1 );
    sensitive << ( tmp_761_i_fu_371_p2 );

    SC_METHOD(thread_r_v_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_r_v_we1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_rep_fu_302_p2);
    sensitive << ( rep_i_reg_211 );

    SC_METHOD(thread_t_2_fu_367_p1);
    sensitive << ( t_7_fu_357_p4 );

    SC_METHOD(thread_t_7_fu_357_p4);
    sensitive << ( r_v_q1 );

    SC_METHOD(thread_t_address0);
    sensitive << ( tmp_742_reg_405 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_744_fu_283_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_233_p2 );
    sensitive << ( tmp_743_fu_264_p2 );

    SC_METHOD(thread_t_d1);
    sensitive << ( x_v_q1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_742_fu_253_p1);
    sensitive << ( i_reg_189 );

    SC_METHOD(thread_tmp_743_fu_264_p2);
    sensitive << ( x_v_q0 );

    SC_METHOD(thread_tmp_744_fu_283_p1);
    sensitive << ( i_1_reg_200 );

    SC_METHOD(thread_tmp_745_fu_289_p2);
    sensitive << ( y_v_q0 );
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_746_fu_312_p4);
    sensitive << ( r_v_q0 );

    SC_METHOD(thread_tmp_759_fu_308_p1);
    sensitive << ( r_v_q0 );

    SC_METHOD(thread_tmp_759_i_fu_343_p1);
    sensitive << ( i_i_reg_222 );

    SC_METHOD(thread_tmp_760_fu_353_p1);
    sensitive << ( r_v_q1 );

    SC_METHOD(thread_tmp_760_i_fu_348_p1);
    sensitive << ( i_25_fu_337_p2 );

    SC_METHOD(thread_tmp_761_i_fu_371_p2);
    sensitive << ( r_v_q0 );
    sensitive << ( t_2_fu_367_p1 );

    SC_METHOD(thread_tmp_762_i_cast_fu_378_p1);
    sensitive << ( tmp_760_fu_353_p1 );

    SC_METHOD(thread_tmp_fu_233_p2);
    sensitive << ( x_v_q0 );

    SC_METHOD(thread_tmp_i_cast_fu_326_p1);
    sensitive << ( tmp_759_fu_308_p1 );

    SC_METHOD(thread_x_v_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_742_fu_253_p1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_x_v_address1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_x_v_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_x_v_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_y_v_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_744_fu_283_p1 );

    SC_METHOD(thread_y_v_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_271_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i_fu_331_p2 );
    sensitive << ( exitcond1_i_fu_296_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sign_ed25519_8_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_v_address0, "(port)r_v_address0");
    sc_trace(mVcdFile, r_v_ce0, "(port)r_v_ce0");
    sc_trace(mVcdFile, r_v_we0, "(port)r_v_we0");
    sc_trace(mVcdFile, r_v_d0, "(port)r_v_d0");
    sc_trace(mVcdFile, r_v_q0, "(port)r_v_q0");
    sc_trace(mVcdFile, r_v_address1, "(port)r_v_address1");
    sc_trace(mVcdFile, r_v_ce1, "(port)r_v_ce1");
    sc_trace(mVcdFile, r_v_we1, "(port)r_v_we1");
    sc_trace(mVcdFile, r_v_d1, "(port)r_v_d1");
    sc_trace(mVcdFile, r_v_q1, "(port)r_v_q1");
    sc_trace(mVcdFile, x_v_address0, "(port)x_v_address0");
    sc_trace(mVcdFile, x_v_ce0, "(port)x_v_ce0");
    sc_trace(mVcdFile, x_v_q0, "(port)x_v_q0");
    sc_trace(mVcdFile, x_v_address1, "(port)x_v_address1");
    sc_trace(mVcdFile, x_v_ce1, "(port)x_v_ce1");
    sc_trace(mVcdFile, x_v_q1, "(port)x_v_q1");
    sc_trace(mVcdFile, y_v_address0, "(port)y_v_address0");
    sc_trace(mVcdFile, y_v_ce0, "(port)y_v_ce0");
    sc_trace(mVcdFile, y_v_q0, "(port)y_v_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_742_fu_253_p1, "tmp_742_fu_253_p1");
    sc_trace(mVcdFile, tmp_742_reg_405, "tmp_742_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond1_fu_247_p2, "exitcond1_fu_247_p2");
    sc_trace(mVcdFile, i_23_fu_258_p2, "i_23_fu_258_p2");
    sc_trace(mVcdFile, i_23_reg_415, "i_23_reg_415");
    sc_trace(mVcdFile, i_24_fu_277_p2, "i_24_fu_277_p2");
    sc_trace(mVcdFile, i_24_reg_423, "i_24_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_744_fu_283_p1, "tmp_744_fu_283_p1");
    sc_trace(mVcdFile, tmp_744_reg_428, "tmp_744_reg_428");
    sc_trace(mVcdFile, exitcond_fu_271_p2, "exitcond_fu_271_p2");
    sc_trace(mVcdFile, rep_fu_302_p2, "rep_fu_302_p2");
    sc_trace(mVcdFile, rep_reg_458, "rep_reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_25_fu_337_p2, "i_25_fu_337_p2");
    sc_trace(mVcdFile, i_25_reg_466, "i_25_reg_466");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, r_v_addr_4_reg_471, "r_v_addr_4_reg_471");
    sc_trace(mVcdFile, exitcond_i_fu_331_p2, "exitcond_i_fu_331_p2");
    sc_trace(mVcdFile, r_v_addr_5_reg_477, "r_v_addr_5_reg_477");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_d1, "t_d1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, i_reg_189, "i_reg_189");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_1_reg_200, "i_1_reg_200");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, rep_i_reg_211, "rep_i_reg_211");
    sc_trace(mVcdFile, i_i_reg_222, "i_i_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_759_i_fu_343_p1, "tmp_759_i_fu_343_p1");
    sc_trace(mVcdFile, tmp_760_i_fu_348_p1, "tmp_760_i_fu_348_p1");
    sc_trace(mVcdFile, tmp_fu_233_p2, "tmp_fu_233_p2");
    sc_trace(mVcdFile, tmp_743_fu_264_p2, "tmp_743_fu_264_p2");
    sc_trace(mVcdFile, tmp_745_fu_289_p2, "tmp_745_fu_289_p2");
    sc_trace(mVcdFile, tmp_i_cast_fu_326_p1, "tmp_i_cast_fu_326_p1");
    sc_trace(mVcdFile, grp_fu_383_p3, "grp_fu_383_p3");
    sc_trace(mVcdFile, tmp_761_i_fu_371_p2, "tmp_761_i_fu_371_p2");
    sc_trace(mVcdFile, tmp_762_i_cast_fu_378_p1, "tmp_762_i_cast_fu_378_p1");
    sc_trace(mVcdFile, tmp_746_fu_312_p4, "tmp_746_fu_312_p4");
    sc_trace(mVcdFile, tmp_759_fu_308_p1, "tmp_759_fu_308_p1");
    sc_trace(mVcdFile, t_7_fu_357_p4, "t_7_fu_357_p4");
    sc_trace(mVcdFile, t_2_fu_367_p1, "t_2_fu_367_p1");
    sc_trace(mVcdFile, tmp_760_fu_353_p1, "tmp_760_fu_353_p1");
    sc_trace(mVcdFile, grp_fu_383_p0, "grp_fu_383_p0");
    sc_trace(mVcdFile, grp_fu_383_p1, "grp_fu_383_p1");
    sc_trace(mVcdFile, exitcond1_i_fu_296_p2, "exitcond1_i_fu_296_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_383_p10, "grp_fu_383_p10");
#endif

    }
}

crypto_sign_ed25519_8::~crypto_sign_ed25519_8() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete crypto_sign_mac_mpcA_x_U68;
}

void crypto_sign_ed25519_8::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_247_p2.read(), ap_const_lv1_1))) {
        i_1_reg_200 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_1_reg_200 = i_24_reg_423.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_i_reg_222 = i_25_reg_466.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_i_reg_222 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_189 = i_23_reg_415.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_189 = ap_const_lv5_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_331_p2.read()))) {
        rep_i_reg_211 = rep_reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_1))) {
        rep_i_reg_211 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_247_p2.read(), ap_const_lv1_0))) {
        i_23_reg_415 = i_23_fu_258_p2.read();
        tmp_742_reg_405 = tmp_742_fu_253_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_24_reg_423 = i_24_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_25_reg_466 = i_25_fu_337_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_331_p2.read()))) {
        r_v_addr_4_reg_471 =  (sc_lv<5>) (tmp_759_i_fu_343_p1.read());
        r_v_addr_5_reg_477 =  (sc_lv<5>) (tmp_760_i_fu_348_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        rep_reg_458 = rep_fu_302_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_271_p2.read()))) {
        tmp_744_reg_428 = tmp_744_fu_283_p1.read();
    }
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sign_ed25519_8::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void crypto_sign_ed25519_8::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_296_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_296_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_exitcond1_fu_247_p2() {
    exitcond1_fu_247_p2 = (!i_reg_189.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_189.read() == ap_const_lv5_1F);
}

void crypto_sign_ed25519_8::thread_exitcond1_i_fu_296_p2() {
    exitcond1_i_fu_296_p2 = (!rep_i_reg_211.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(rep_i_reg_211.read() == ap_const_lv3_4);
}

void crypto_sign_ed25519_8::thread_exitcond_fu_271_p2() {
    exitcond_fu_271_p2 = (!i_1_reg_200.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_200.read() == ap_const_lv6_20);
}

void crypto_sign_ed25519_8::thread_exitcond_i_fu_331_p2() {
    exitcond_i_fu_331_p2 = (!i_i_reg_222.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_222.read() == ap_const_lv5_1F);
}

void crypto_sign_ed25519_8::thread_grp_fu_383_p0() {
    grp_fu_383_p0 =  (sc_lv<6>) (ap_const_lv31_13);
}

void crypto_sign_ed25519_8::thread_grp_fu_383_p1() {
    grp_fu_383_p1 =  (sc_lv<25>) (grp_fu_383_p10.read());
}

void crypto_sign_ed25519_8::thread_grp_fu_383_p10() {
    grp_fu_383_p10 = esl_zext<31,25>(tmp_746_fu_312_p4.read());
}

void crypto_sign_ed25519_8::thread_i_23_fu_258_p2() {
    i_23_fu_258_p2 = (!i_reg_189.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_189.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void crypto_sign_ed25519_8::thread_i_24_fu_277_p2() {
    i_24_fu_277_p2 = (!i_1_reg_200.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_200.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void crypto_sign_ed25519_8::thread_i_25_fu_337_p2() {
    i_25_fu_337_p2 = (!i_i_reg_222.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_i_reg_222.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void crypto_sign_ed25519_8::thread_r_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_address0 = r_v_addr_4_reg_471.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_v_address0 =  (sc_lv<5>) (tmp_760_i_fu_348_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_v_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_v_address0 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_v_address0 =  (sc_lv<5>) (tmp_744_reg_428.read());
    } else {
        r_v_address0 = "XXXXX";
    }
}

void crypto_sign_ed25519_8::thread_r_v_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_address1 = r_v_addr_5_reg_477.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_v_address1 =  (sc_lv<5>) (tmp_759_i_fu_343_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_v_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_v_address1 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        r_v_address1 = "XXXXX";
    }
}

void crypto_sign_ed25519_8::thread_r_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        r_v_ce0 = ap_const_logic_1;
    } else {
        r_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_r_v_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        r_v_ce1 = ap_const_logic_1;
    } else {
        r_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_r_v_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_d0 = tmp_762_i_cast_fu_378_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_v_d0 = grp_fu_383_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_v_d0 = tmp_745_fu_289_p2.read();
    } else {
        r_v_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_8::thread_r_v_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_v_d1 = tmp_761_i_fu_371_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_v_d1 = tmp_i_cast_fu_326_p1.read();
    } else {
        r_v_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_8::thread_r_v_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        r_v_we0 = ap_const_logic_1;
    } else {
        r_v_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_r_v_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        r_v_we1 = ap_const_logic_1;
    } else {
        r_v_we1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_rep_fu_302_p2() {
    rep_fu_302_p2 = (!rep_i_reg_211.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(rep_i_reg_211.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void crypto_sign_ed25519_8::thread_t_2_fu_367_p1() {
    t_2_fu_367_p1 = esl_zext<32,24>(t_7_fu_357_p4.read());
}

void crypto_sign_ed25519_8::thread_t_7_fu_357_p4() {
    t_7_fu_357_p4 = r_v_q1.read().range(31, 8);
}

void crypto_sign_ed25519_8::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address0 =  (sc_lv<5>) (tmp_742_reg_405.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        t_address0 = "XXXXX";
    }
}

void crypto_sign_ed25519_8::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_address1 =  (sc_lv<5>) (tmp_744_fu_283_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else {
        t_address1 = "XXXXX";
    }
}

void crypto_sign_ed25519_8::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_d0 = tmp_743_fu_264_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_d0 = tmp_fu_233_p2.read();
    } else {
        t_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sign_ed25519_8::thread_t_d1() {
    t_d1 = (!x_v_q1.read().is_01() || !ap_const_lv32_FE.is_01())? sc_lv<32>(): (sc_biguint<32>(x_v_q1.read()) + sc_biguint<32>(ap_const_lv32_FE));
}

void crypto_sign_ed25519_8::thread_t_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_tmp_742_fu_253_p1() {
    tmp_742_fu_253_p1 = esl_zext<64,5>(i_reg_189.read());
}

void crypto_sign_ed25519_8::thread_tmp_743_fu_264_p2() {
    tmp_743_fu_264_p2 = (!x_v_q0.read().is_01() || !ap_const_lv32_1FE.is_01())? sc_lv<32>(): (sc_biguint<32>(x_v_q0.read()) + sc_biguint<32>(ap_const_lv32_1FE));
}

void crypto_sign_ed25519_8::thread_tmp_744_fu_283_p1() {
    tmp_744_fu_283_p1 = esl_zext<64,6>(i_1_reg_200.read());
}

void crypto_sign_ed25519_8::thread_tmp_745_fu_289_p2() {
    tmp_745_fu_289_p2 = (!t_q1.read().is_01() || !y_v_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_q1.read()) - sc_biguint<32>(y_v_q0.read()));
}

void crypto_sign_ed25519_8::thread_tmp_746_fu_312_p4() {
    tmp_746_fu_312_p4 = r_v_q0.read().range(31, 7);
}

void crypto_sign_ed25519_8::thread_tmp_759_fu_308_p1() {
    tmp_759_fu_308_p1 = r_v_q0.read().range(7-1, 0);
}

void crypto_sign_ed25519_8::thread_tmp_759_i_fu_343_p1() {
    tmp_759_i_fu_343_p1 = esl_zext<64,5>(i_i_reg_222.read());
}

void crypto_sign_ed25519_8::thread_tmp_760_fu_353_p1() {
    tmp_760_fu_353_p1 = r_v_q1.read().range(8-1, 0);
}

void crypto_sign_ed25519_8::thread_tmp_760_i_fu_348_p1() {
    tmp_760_i_fu_348_p1 = esl_zext<64,5>(i_25_fu_337_p2.read());
}

void crypto_sign_ed25519_8::thread_tmp_761_i_fu_371_p2() {
    tmp_761_i_fu_371_p2 = (!t_2_fu_367_p1.read().is_01() || !r_v_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t_2_fu_367_p1.read()) + sc_biguint<32>(r_v_q0.read()));
}

void crypto_sign_ed25519_8::thread_tmp_762_i_cast_fu_378_p1() {
    tmp_762_i_cast_fu_378_p1 = esl_zext<32,8>(tmp_760_fu_353_p1.read());
}

void crypto_sign_ed25519_8::thread_tmp_fu_233_p2() {
    tmp_fu_233_p2 = (!x_v_q0.read().is_01() || !ap_const_lv32_1DA.is_01())? sc_lv<32>(): (sc_biguint<32>(x_v_q0.read()) + sc_biguint<32>(ap_const_lv32_1DA));
}

void crypto_sign_ed25519_8::thread_tmp_i_cast_fu_326_p1() {
    tmp_i_cast_fu_326_p1 = esl_zext<32,7>(tmp_759_fu_308_p1.read());
}

void crypto_sign_ed25519_8::thread_x_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_v_address0 =  (sc_lv<5>) (tmp_742_fu_253_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        x_v_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        x_v_address0 = "XXXXX";
    }
}

void crypto_sign_ed25519_8::thread_x_v_address1() {
    x_v_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
}

void crypto_sign_ed25519_8::thread_x_v_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        x_v_ce0 = ap_const_logic_1;
    } else {
        x_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_x_v_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_v_ce1 = ap_const_logic_1;
    } else {
        x_v_ce1 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_y_v_address0() {
    y_v_address0 =  (sc_lv<5>) (tmp_744_fu_283_p1.read());
}

void crypto_sign_ed25519_8::thread_y_v_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        y_v_ce0 = ap_const_logic_1;
    } else {
        y_v_ce0 = ap_const_logic_0;
    }
}

void crypto_sign_ed25519_8::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_247_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_296_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_331_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

